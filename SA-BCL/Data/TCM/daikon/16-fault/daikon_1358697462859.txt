#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.ArrayIndexOutOfBoundsException 654 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 927 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.util.NoSuchElementException 92 343 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 213 567 221 329 186 75 76 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 996 498 (387,394) (267,601) (267,601) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 996 498 (387,394) (267,601) (267,601) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 996 498 (387,394) (267,601) (267,601) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (194,349) (4,647) 454 945 502 575 515 205 918 (274,1033) 21 (436,748) (274,1033) 268 (436,748) 22 900 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (194,349) (4,647) 454 945 502 575 515 205 918 (274,1033) 21 (436,748) (274,1033) 268 (436,748) 22 900 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (194,349) (4,647) 454 945 502 575 515 205 918 (274,1033) 21 (436,748) (274,1033) 268 (436,748) 22 900 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 996 498 (387,394) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 996 498 (387,394) (387,394) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 996 498 (387,394) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 554 0 311 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.ModBitTracker:split(I)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_68()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([I)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_86()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15342 | if (x) -> if (!x)
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.WeakHasherMap:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ProglangType:isPseudoArray()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ProglangType:dimensions()I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3_16()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsIntegral()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_48()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.inv.Invariants:Invariants()V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE:negate(I)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eq(FF)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_123()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:memberOf(D[F)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type; | RETURN | 45164 | return null
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_50()Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_148()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:lexLT([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt:Ppt()V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I | CONSTANT | 11181 | 1 -> 0
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:lt(II)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 279238 | = null
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:sum([[I)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | CONDITION | 26193 | if (x) -> if (!x)
daikon.Quant:memberOf(F[F)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([D)[D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ProglangType:baseIsFloat()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_samples()I
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isArray()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.FormatTestCase:passes()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_89()Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3_1()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaCharStream:getEndColumn()I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice1:num_samples()I
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern:intern([J)[J
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.ModBitTracker:num_sets()I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:union([I[I)[I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_57()Z
daikon.ValueTuple:size()I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.PptSlice2:arity()I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Debug:logOn()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:gt(II)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:isIntegral()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quant:lexEqual([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_69()Z
daikon.PptSlice1:arity()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:lexGT([I[I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfo:simplify_name()Ljava.lang.String; | RETURN | 105067 | return null
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.Node:Node()V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eltsLT([II)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isFloat()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_60()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_76()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Diff:findNormalPpt(Ldaikon.PptMap;Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_13()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String; | ASSIGN | 6046 | = null
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:ne(II)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
682 2 632 2 317 2 117 4 60 2 349 2 194 2 193 2 731 2 
950 2 642 2 589 6 15 2 62 2 929 6 845 2 973 2 344 2 680 2 625 6 
212 2 74 2 789 2 740 2 654 2 424 2 777 2 
38 10 281 8 232 4 153 10 1013 2 285 16 834 4 610 12 194 6 966 10 407 4 55 6 942 8 529 2 420 2 384 8 744 8 173 4 634 2 543 10 952 16 252 26 347 16 219 2 349 6 922 2 678 6 955 29 392 10 479 2 
29 6 855 4 
307 2 
395 2 456 2 317 2 323 2 194 4 324 2 197 2 17 2 203 2 469 2 471 2 742 2 665 2 667 4 1004 2 217 2 477 2 349 4 220 2 827 2 150 4 223 2 954 4 479 2 36 2 679 2 684 2 959 2 551 2 1014 2 762 2 553 2 838 2 967 2 376 2 971 2 975 2 310 2 788 2 636 4 255 2 640 2 260 2 69 2 
38 16 37 4 511 4 281 18 153 16 285 32 460 6 321 2 1015 2 194 4 610 22 128 2 291 4 49 6 966 16 13 6 136 2 330 6 55 4 80 2 1034 2 539 4 744 6 541 6 173 2 249 8 634 2 952 32 543 6 388 6 252 48 347 32 349 4 391 4 392 16 678 4 955 56 509 4 639 4 
927 2 
902 10 969 2 870 2 190 2 551 2 514 2 857 2 542 2 839 2 270 2 14 2 995 22 816 2 332 2 
38 2 455 2 605 2 41 2 153 2 285 2 966 2 726 2 55 2 530 2 87 2 343 2 952 2 543 4 347 2 252 4 450 2 392 2 955 6 92 2 
38 4 232 2 40 2 153 4 460 6 285 8 610 4 198 2 952 8 966 4 347 8 252 12 391 4 392 4 330 6 955 16 639 4 
293 2 953 2 806 2 723 2 248 2 
397 2 628 2 972 2 473 2 307 2 6 2 32 2 714 2 772 2 582 2 
801 2 3 2 803 2 650 2 805 1 401 1 269 2 134 3 525 1 410 6 412 2 413 2 531 2 272 2 143 2 417 2 533 3 534 3 821 2 663 12 537 16 24 1 668 8 544 2 421 1 670 8 828 4 669 24 671 2 674 2 279 1 423 4 829 2 548 4 958 1 686 2 960 2 832 2 434 2 690 2 835 16 692 2 693 3 435 2 159 2 160 32 695 2 437 2 52 1 697 2 698 2 561 1 58 2 850 4 702 2 968 2 61 8 443 2 299 4 303 2 169 2 170 1 705 2 707 2 859 2 175 2 571 2 713 2 574 32 716 2 717 2 979 2 66 2 67 2 184 2 316 2 985 2 579 2 189 2 194 34 196 2 325 3 877 6 463 4 879 5 880 2 881 2 730 2 1000 2 732 2 584 2 202 16 81 2 884 2 204 2 335 2 207 2 86 2 210 2 338 2 340 6 475 3 342 3 597 2 1005 24 345 2 1006 3 348 1 349 32 600 2 754 3 353 2 757 2 355 1 481 2 486 2 906 2 98 16 487 2 235 4 360 2 765 2 613 3 1019 2 239 2 244 1 1025 2 497 2 104 1 1030 2 626 1 781 2 784 2 916 6 785 2 786 2 504 2 1042 2 632 2 921 2 113 2 792 3 797 3 796 4 925 2 798 2 1048 1 
549 2 
4 2 647 2 194 4 
552 2 
800 4 2 4 398 2 802 2 648 4 804 2 265 38 266 2 7 4 810 2 10 38 519 26 652 10 404 6 406 10 521 4 813 4 937 2 936 6 941 14 409 4 657 4 414 4 415 2 818 2 660 4 946 4 661 4 949 2 27 118 951 4 545 2 149 4 34 22 675 2 676 2 152 4 427 2 550 2 432 4 288 38 289 4 47 8 53 2 54 18 559 2 563 2 700 4 701 4 298 4 853 10 567 2 566 4 165 4 305 4 308 26 976 2 977 16 710 4 572 36 449 2 863 2 178 2 182 38 183 4 186 2 187 4 980 38 458 2 982 4 984 20 319 16 987 4 871 118 721 4 989 20 322 4 722 2 581 2 874 4 725 2 464 8 465 4 75 2 329 2 76 2 78 38 729 4 79 2 733 16 1002 8 734 14 334 20 83 22 738 2 590 4 206 2 886 10 1003 38 593 4 889 2 341 24 213 2 891 4 598 4 346 38 893 38 89 8 218 2 221 2 1007 4 752 2 897 2 753 4 604 132 96 4 606 38 483 4 358 6 761 2 359 4 763 2 365 2 614 4 367 2 241 16 619 4 242 2 102 118 101 12 1021 2 243 2 1024 4 624 4 374 38 247 2 105 2 106 22 1031 2 1032 2 381 4 112 26 1039 4 630 2 116 2 390 14 256 4 795 44 507 2 118 2 120 2 638 4 
135 1 177 2 677 2 964 2 
555 2 964 2 
59 2 499 2 418 2 302 2 380 4 431 4 820 2 155 2 823 2 612 2 253 2 995 6 494 2 599 2 258 2 924 2 371 2 440 2 
649 2 677 2 
896 2 1014 2 817 2 489 2 
300 2 896 2 1014 2 817 2 706 2 489 2 
512 2 935 2 834 2 1014 2 964 2 489 2 
64 2 197 2 
263 2 834 2 1014 2 489 2 
594 2 262 2 
623 2 442 2 
894 2 773 2 
768 2 872 2 
768 2 442 2 386 2 
768 2 442 2 505 2 
768 2 856 2 442 2 
768 2 304 2 442 2 
1014 2 1018 2 489 2 158 2 28 2 30 6 446 2 
389 2 1035 2 
300 2 935 2 834 2 1014 2 997 2 964 2 489 2 
935 2 560 2 964 2 
831 2 935 2 964 2 
1035 2 677 2 441 2 
935 2 964 2 
1035 2 506 2 
905 2 964 2 
1035 2 677 2 385 2 
677 2 773 2 580 2 
100 2 768 2 677 2 
677 2 524 2 262 2 
466 2 677 2 442 2 
1035 2 715 2 
621 2 964 2 
608 2 773 2 
745 2 768 2 
767 2 262 2 
442 2 402 2 
1035 2 259 2 
878 2 442 2 
224 2 262 2 
215 2 768 2 
587 2 773 2 
1035 2 677 2 848 2 385 2 
694 2 1035 2 677 2 848 2 385 2 
1035 2 677 2 888 2 
123 2 1035 2 677 2 
756 2 185 2 1044 2 35 2 
86 2 
801 2 803 2 644 2 650 2 805 2 269 2 812 2 16 2 410 6 943 2 272 2 947 2 663 8 828 2 671 2 423 4 829 2 548 4 434 2 690 2 835 6 160 6 556 2 558 2 439 2 849 2 850 2 702 2 854 2 299 2 443 2 61 2 303 4 170 2 169 2 707 2 571 2 312 2 574 4 979 2 184 2 189 2 194 26 196 2 877 4 876 4 880 2 881 2 730 2 1000 2 1001 2 81 2 204 2 207 2 340 2 597 2 345 2 349 26 600 2 480 2 481 2 235 4 360 6 765 2 1025 2 377 2 916 2 786 2 632 2 113 2 114 4 790 2 796 4 510 2 
801 2 803 2 644 2 650 2 805 2 269 2 812 2 16 2 410 6 943 2 272 2 947 2 663 8 828 2 671 2 423 4 829 2 548 4 286 2 434 2 690 2 835 6 160 6 556 2 558 2 698 2 439 2 850 2 702 2 854 2 299 2 443 2 61 2 303 4 170 2 169 2 707 2 571 2 312 2 574 4 979 2 184 2 189 2 194 26 196 2 877 6 876 4 880 2 881 2 730 2 1000 2 81 2 204 2 207 2 338 2 340 2 597 2 345 2 349 26 600 2 757 2 480 2 481 2 235 4 360 6 765 2 495 2 1025 2 377 2 916 2 786 2 632 2 113 2 114 4 790 2 796 4 393 2 
928 2 
379 2 490 2 
642 2 72 2 929 6 267 2 125 2 194 12 268 2 462 2 269 2 132 2 724 2 12 10 992 2 520 4 15 4 815 4 1000 2 410 4 411 2 333 2 204 2 22 2 589 6 207 2 274 2 887 4 23 2 344 4 950 2 349 6 748 2 151 4 601 2 423 2 900 2 681 8 683 2 39 2 607 4 961 2 235 2 908 2 436 2 770 2 843 2 1022 4 1025 2 246 2 625 6 498 2 915 2 501 2 703 2 383 8 786 2 707 2 1045 2 180 2 1047 2 394 2 
642 2 72 2 929 8 267 2 194 12 268 2 462 2 269 2 132 2 724 2 12 10 992 2 520 4 15 4 815 4 1000 2 410 4 411 2 333 2 204 2 22 2 589 6 207 2 274 2 887 4 23 2 344 4 950 2 349 6 748 2 151 4 423 2 601 2 680 2 900 2 681 8 683 2 39 2 607 4 961 2 235 2 908 2 436 2 770 2 843 2 438 4 1022 4 1025 2 246 2 625 8 498 2 915 2 501 2 383 8 786 2 309 2 707 2 923 2 1045 2 180 2 1047 2 394 2 
900 2 683 2 22 2 589 2 961 2 887 4 267 2 344 2 724 2 748 2 15 2 843 2 151 2 601 2 815 4 333 2 394 2 625 2 
642 2 72 2 929 6 267 2 125 2 194 12 268 2 462 2 269 2 132 2 724 2 12 6 992 2 520 4 15 4 815 4 1000 2 410 4 411 2 333 2 204 2 22 2 589 4 207 2 274 2 887 4 23 2 344 4 349 6 748 2 151 4 601 2 423 2 680 2 900 2 681 4 683 2 39 2 607 4 961 2 235 2 908 2 436 2 770 2 843 2 1022 4 1025 2 246 2 625 6 498 2 915 2 501 2 703 2 383 4 786 2 707 2 1045 2 180 2 1047 2 394 2 
642 2 681 4 683 2 39 2 607 2 72 2 929 4 961 2 267 2 125 2 194 4 462 2 132 2 724 2 12 4 520 2 15 2 770 2 815 2 996 2 625 2 333 2 498 2 915 2 589 4 501 2 62 2 887 2 23 2 383 4 344 2 1045 2 601 2 180 2 394 2 
642 2 72 2 929 6 267 2 125 2 194 12 268 2 462 2 269 2 132 2 724 2 12 6 992 2 520 4 15 4 815 4 1000 2 410 4 411 2 333 2 204 2 22 2 589 6 207 2 274 2 887 4 23 2 344 4 950 2 349 6 748 2 151 4 601 2 423 2 900 2 681 8 683 2 39 2 607 4 961 2 235 2 908 2 436 2 770 2 843 2 1022 4 1025 2 246 2 625 6 498 2 915 2 501 2 703 2 383 4 786 2 707 2 1045 2 180 2 1047 2 394 2 
642 2 681 8 683 2 39 2 607 2 72 2 929 6 961 2 267 2 125 2 194 4 462 2 132 2 724 2 12 8 520 2 15 4 770 2 1022 2 815 2 996 2 625 6 333 2 498 2 915 2 589 8 501 2 62 2 703 2 887 2 23 2 383 8 344 4 950 2 1045 2 601 2 180 2 394 2 
642 2 72 2 929 6 267 2 125 2 194 12 268 2 462 2 269 2 132 2 724 2 12 10 992 2 520 4 15 4 815 4 1000 2 410 4 411 2 333 2 204 2 22 2 589 6 207 2 274 2 887 4 23 2 344 4 950 2 349 6 748 2 151 4 601 2 423 2 900 2 681 8 683 2 39 2 607 4 961 2 235 2 908 2 436 2 770 2 843 2 1022 4 1025 2 246 2 625 6 498 2 915 2 501 2 703 2 383 8 786 2 707 2 1045 2 180 2 1047 2 394 2 
642 2 681 2 683 2 39 2 607 2 72 2 929 4 961 2 267 2 125 2 194 4 462 2 132 2 724 2 520 2 15 2 770 2 815 2 996 2 625 2 333 2 498 2 850 2 163 2 915 2 299 2 589 4 501 2 62 2 887 2 663 2 23 2 344 2 828 2 1045 2 601 2 180 2 394 2 
642 4 801 2 644 2 803 2 647 2 929 12 650 2 267 2 125 2 268 2 515 2 132 2 269 2 932 2 520 8 15 4 815 4 410 6 21 2 22 2 532 2 945 2 274 2 663 6 23 2 950 4 276 2 671 2 828 4 151 4 423 4 547 2 681 6 683 2 548 4 549 2 39 2 283 2 961 2 552 2 434 2 835 6 690 2 290 2 160 8 436 2 556 2 295 2 843 2 698 2 850 4 163 2 854 2 61 2 299 4 707 2 574 2 575 2 179 2 180 2 454 2 868 2 71 2 189 2 72 2 194 32 196 2 462 2 724 2 877 6 880 2 992 2 1000 2 333 2 81 2 205 2 204 2 589 8 207 2 337 2 592 2 887 4 209 2 338 2 340 2 211 2 344 4 597 2 345 2 349 20 748 2 600 2 601 2 226 2 900 2 1010 2 481 2 607 4 235 4 360 6 765 4 911 2 770 2 1022 6 1025 2 622 2 246 2 1026 4 625 8 377 2 498 2 915 2 1033 2 501 2 916 2 918 2 502 2 786 2 787 2 632 2 114 4 113 2 257 4 1045 2 796 4 1047 2 508 2 394 2 
642 4 801 2 644 2 803 2 647 2 929 12 650 2 267 2 125 2 268 2 515 2 132 2 269 2 932 2 12 4 520 8 15 4 815 4 410 6 21 2 22 2 532 2 945 2 274 2 663 6 23 2 950 4 276 2 828 4 671 2 151 4 423 4 547 2 681 6 683 2 548 4 549 2 39 2 283 2 961 2 552 2 434 2 835 6 690 2 290 2 160 8 436 2 556 2 295 2 843 2 698 2 850 4 163 2 854 2 61 2 299 4 707 2 574 2 575 2 179 2 180 2 454 2 868 2 71 2 189 2 72 2 194 32 196 2 462 2 724 2 877 6 880 2 992 2 1000 2 333 2 81 2 205 2 204 2 589 8 207 2 337 2 592 2 887 4 209 2 338 2 340 2 211 2 344 4 597 2 345 2 349 20 748 2 600 2 601 2 226 2 900 2 1010 2 481 2 607 4 360 6 235 4 765 4 911 2 770 2 1022 6 1025 2 622 2 246 2 1026 4 625 8 377 2 498 2 915 2 1033 2 501 2 916 2 918 2 502 2 383 4 786 2 787 2 632 2 114 4 113 2 257 4 1045 2 796 4 1047 2 508 2 394 2 
642 4 801 2 644 2 803 2 647 2 929 16 650 2 267 2 125 2 400 2 268 2 515 2 133 2 132 2 269 2 12 4 520 8 15 4 815 4 410 6 21 2 22 2 532 2 945 2 274 2 663 6 23 2 950 4 828 4 671 2 151 4 423 4 547 2 680 2 681 6 683 2 548 4 549 2 39 2 283 2 961 2 552 2 434 2 835 8 690 2 290 2 160 12 436 2 556 2 295 2 843 2 698 2 850 4 163 2 854 2 61 2 299 4 62 2 707 2 574 4 575 2 179 2 180 2 454 2 868 2 71 2 189 2 72 2 194 30 196 2 462 2 724 2 877 6 880 2 992 2 1000 2 333 2 81 2 205 2 204 2 589 10 207 2 337 2 592 2 887 4 209 2 338 2 340 4 211 2 344 4 597 2 345 2 349 18 748 2 600 2 601 2 225 2 226 2 94 2 900 2 759 2 1010 2 481 2 607 4 360 8 235 4 765 2 911 2 770 2 1022 6 1025 2 622 2 246 2 1026 4 625 10 377 2 498 2 915 2 1033 2 501 2 916 4 918 2 502 2 383 4 786 2 787 2 632 2 114 6 113 2 257 4 1045 2 796 4 1047 2 508 2 641 2 394 2 
642 2 681 6 683 2 39 2 607 2 72 2 929 4 961 2 267 2 125 2 194 4 462 2 132 2 724 2 12 4 520 2 15 4 770 2 1022 2 815 2 333 2 625 6 498 2 915 2 589 6 501 2 887 2 383 4 23 2 344 4 950 2 1045 2 601 2 180 2 394 2 
642 2 801 2 803 2 929 4 650 2 267 2 125 2 132 2 269 2 932 2 12 2 520 2 15 4 815 2 410 6 23 2 950 2 276 2 671 2 423 4 681 6 683 2 548 4 39 2 961 2 434 2 690 2 835 6 692 2 160 8 556 2 437 2 698 2 854 2 707 2 860 2 709 3 314 2 574 3 180 2 189 2 72 2 194 28 196 2 462 2 724 2 877 6 880 2 992 2 1000 2 81 2 333 2 204 2 589 6 207 2 887 2 86 2 338 2 474 2 340 3 344 4 597 2 345 2 349 24 601 2 227 2 481 2 607 2 235 4 360 6 765 4 909 2 770 2 1022 2 1025 2 625 6 498 2 377 2 781 2 915 2 501 2 916 3 786 2 632 2 113 2 114 4 796 4 1045 2 394 2 
770 2 245 2 180 2 
770 2 245 2 180 2 
642 4 803 2 929 14 650 2 515 2 269 2 132 2 8 2 12 4 520 4 15 4 815 2 410 6 142 2 947 4 663 4 950 4 276 2 148 2 828 4 671 2 423 4 680 2 681 6 683 2 548 4 45 2 434 2 690 2 835 2 160 2 556 2 844 2 297 2 698 2 850 4 854 4 299 4 62 4 707 2 444 2 574 2 180 2 577 2 189 2 194 24 196 2 724 2 877 6 880 2 996 2 1000 2 81 2 586 2 204 2 589 12 207 2 887 2 338 2 597 2 344 4 345 2 349 16 600 2 481 2 607 2 235 4 360 2 765 4 770 2 1022 4 1025 2 1026 2 625 10 377 2 498 2 500 2 629 2 382 2 383 4 786 2 632 2 250 2 113 2 796 4 394 2 
379 2 786 2 194 4 765 2 611 2 691 2 515 2 276 2 444 2 148 2 493 2 349 2 844 2 843 2 297 2 228 2 776 2 
642 4 803 2 929 14 650 2 269 2 132 2 8 2 12 4 520 4 15 4 815 2 410 6 142 2 947 4 663 4 950 4 828 4 671 2 423 4 680 2 681 6 683 2 548 4 45 2 434 2 690 2 835 2 160 2 556 2 844 2 297 2 698 2 850 4 854 4 299 4 62 4 707 2 574 4 180 2 577 2 189 2 194 20 196 2 724 2 877 6 880 2 996 2 1000 2 81 2 586 2 204 2 589 12 207 2 887 2 338 2 597 2 344 4 345 2 349 14 600 2 229 2 481 2 607 2 235 4 360 2 765 2 770 2 1022 4 1025 2 1026 2 625 10 377 2 498 2 500 2 629 2 382 2 383 4 786 2 632 2 250 4 387 2 113 2 796 4 394 2 
642 4 803 2 929 14 650 2 515 2 269 2 132 2 8 2 12 4 520 4 15 4 815 2 410 6 142 2 947 4 663 4 950 4 276 2 148 2 828 4 671 2 423 4 680 2 681 6 683 2 548 4 45 2 434 2 690 2 835 2 160 2 556 2 844 2 297 2 698 2 850 4 854 4 299 4 62 4 707 2 444 2 574 2 180 2 577 2 189 2 194 24 196 2 724 2 877 6 880 2 996 2 1000 2 81 2 586 2 204 2 589 12 207 2 887 2 338 2 597 2 344 4 345 2 349 16 600 2 481 2 607 2 235 4 360 2 765 4 770 2 1022 4 1025 2 1026 2 625 10 377 2 498 2 500 2 629 2 382 2 383 4 786 2 632 2 250 2 113 2 796 4 394 2 
0 2 1 2 801 2 805 2 269 2 518 4 517 2 809 2 812 2 16 2 522 2 19 4 528 2 271 2 532 4 819 2 273 2 537 4 825 2 277 4 31 2 33 2 38 4 830 10 280 2 548 6 281 4 284 2 44 3 285 8 835 14 290 2 836 2 554 2 840 2 841 2 296 2 557 2 558 2 847 2 564 2 854 2 61 20 301 2 858 4 860 2 312 2 311 2 861 2 314 2 573 38 574 19 68 2 864 2 865 2 318 12 868 2 71 2 578 2 321 4 875 16 877 12 326 2 328 14 883 1 885 2 588 3 84 2 337 2 338 4 340 19 597 4 345 2 347 8 349 30 91 2 895 2 600 4 602 2 93 2 351 2 94 2 352 24 357 2 362 2 360 14 610 6 363 2 909 2 366 2 615 2 617 2 913 2 372 40 914 2 377 2 627 4 108 2 916 16 110 12 633 10 632 4 114 12 113 4 115 2 635 2 391 4 392 4 641 2 396 2 122 6 644 46 650 2 400 2 130 2 931 2 133 2 933 4 653 2 405 2 136 2 137 4 408 4 655 2 656 2 410 6 141 2 943 14 144 2 663 42 948 2 662 10 147 2 146 2 952 8 672 4 423 4 955 16 678 4 425 2 957 2 428 2 153 4 687 2 962 2 434 2 433 4 690 4 965 2 966 4 160 28 161 2 698 4 439 2 162 2 699 2 970 2 170 2 974 2 171 2 707 2 709 2 451 4 453 2 188 3 457 2 983 2 189 2 718 2 986 2 719 3 459 3 460 6 192 6 194 40 195 2 196 4 990 2 199 2 727 2 201 2 467 6 1000 2 999 2 202 4 204 2 735 10 736 2 470 2 739 2 207 2 472 2 474 2 211 2 744 6 214 4 478 2 751 4 225 2 755 2 1009 2 480 2 231 14 759 2 481 2 1011 4 1012 2 484 2 234 2 235 4 236 12 764 4 765 2 1017 2 491 2 766 2 771 2 1023 2 1025 2 1028 10 1029 2 783 2 786 2 791 2 790 2 252 12 796 6 508 2 
801 2 578 2 719 2 644 6 484 2 360 2 195 2 835 2 194 2 363 2 160 2 771 2 1028 2 735 2 916 2 948 2 662 4 743 2 340 2 171 2 146 2 114 2 349 2 574 2 
801 2 578 2 719 2 644 6 484 2 360 2 195 2 835 2 194 2 363 2 160 2 771 2 1028 2 735 2 916 2 948 2 662 4 743 2 340 2 171 2 146 2 114 2 349 2 574 2 
801 2 578 2 719 2 644 6 484 2 360 2 195 2 835 2 194 2 363 2 160 2 771 2 1028 2 735 2 916 2 948 2 662 4 743 2 340 2 171 2 146 2 114 2 349 2 574 2 
38 2 188 3 457 4 801 2 153 2 44 3 609 2 285 2 1016 2 195 2 194 10 807 4 131 2 873 3 966 2 492 2 160 2 19 2 201 4 202 2 1029 4 627 6 144 4 737 2 822 2 537 2 340 3 631 2 744 4 251 2 952 2 252 4 347 2 349 4 574 3 119 2 392 2 955 5 678 2 898 2 
188 2 801 2 457 4 194 10 195 2 131 2 807 4 873 2 19 2 201 4 202 2 144 4 737 2 822 2 340 2 537 2 744 4 952 2 347 2 349 4 678 2 955 4 898 2 38 2 281 2 153 2 44 2 285 2 609 2 610 2 1016 2 492 2 966 2 160 2 1029 4 627 6 631 2 634 2 251 2 252 4 574 2 119 2 392 2 
188 2 801 2 457 4 194 10 195 2 131 2 807 4 873 2 19 2 201 4 202 2 144 4 737 2 822 2 340 2 537 2 744 4 952 2 347 2 349 4 678 2 955 4 898 2 38 2 281 2 153 2 44 2 285 2 609 2 610 2 1016 2 492 2 966 2 160 2 1029 4 627 6 631 2 634 2 251 2 252 4 574 2 119 2 392 2 
188 2 801 2 457 4 194 10 195 2 131 2 807 4 873 2 19 2 201 4 202 2 144 4 737 2 822 2 340 2 537 2 744 4 952 2 347 2 349 4 678 2 955 4 898 2 38 2 281 2 153 2 44 2 285 2 609 2 610 2 1016 2 492 2 966 2 160 2 1029 4 627 6 631 2 634 2 251 2 252 4 574 2 119 2 392 2 
188 2 801 2 457 4 194 10 195 2 131 2 807 4 873 2 19 2 201 4 202 2 144 4 737 2 822 2 340 2 537 2 744 4 952 2 347 2 349 4 678 2 955 4 898 2 38 2 281 4 153 2 44 2 285 2 609 2 610 4 1016 2 492 2 966 2 160 2 1029 4 627 6 631 2 634 4 251 2 252 4 574 2 119 2 392 2 
943 2 901 2 11 2 852 2 833 2 419 2 1038 2 
861 2 852 2 294 2 56 2 426 2 375 2 
482 2 643 2 5 2 806 1 194 10 723 1 48 1 808 2 18 2 523 2 20 2 1000 2 882 2 778 1 779 2 704 2 596 2 711 2 708 2 826 2 174 2 349 8 673 2 547 2 121 2 95 1 
37 2 38 6 281 2 959 2 153 6 460 4 285 6 194 6 610 4 157 2 49 4 403 2 966 6 653 2 370 2 161 2 378 2 744 4 249 2 858 2 952 6 634 2 252 12 347 6 349 6 391 2 955 16 392 6 678 2 36 2 
562 2 457 2 144 2 917 1 591 2 109 2 287 2 194 1 569 2 156 2 1041 2 934 2 349 1 327 2 176 7 938 2 201 2 139 4 
562 2 457 2 144 2 591 4 109 2 287 2 156 2 569 4 1041 2 934 2 327 2 176 6 938 4 201 2 139 4 
562 2 457 2 144 2 917 1 591 8 109 2 287 8 194 1 156 2 569 8 1041 6 934 2 349 1 327 2 176 10 938 8 201 2 139 4 
562 2 457 2 144 2 591 2 109 2 156 2 569 2 934 2 327 2 176 2 938 2 201 2 139 2 
926 4 646 6 124 2 127 11 129 18 930 4 9 1 516 2 940 8 814 4 138 4 526 10 527 4 140 6 271 8 416 16 540 4 275 26 824 6 546 2 422 2 956 16 548 88 282 90 685 2 687 8 154 2 46 4 690 14 963 6 51 2 50 24 842 8 696 2 57 2 698 58 851 6 565 2 164 8 167 4 166 6 63 10 568 6 65 6 570 4 712 4 862 8 313 10 447 26 978 8 315 42 452 18 576 16 867 36 718 8 869 6 320 6 191 6 720 2 988 4 461 10 194 150 196 8 73 4 991 50 877 248 993 2 994 6 728 28 331 2 998 24 583 5 82 4 468 4 336 24 85 4 741 4 338 58 597 14 890 6 88 2 746 34 892 12 349 134 747 6 222 92 350 4 750 10 899 8 1008 24 758 12 230 2 903 6 97 6 907 2 488 6 364 6 237 6 238 10 616 24 1020 10 910 6 240 22 369 4 769 90 620 6 912 84 496 10 373 2 775 4 1027 2 780 2 107 4 1037 4 1036 42 503 17 919 4 1040 124 920 24 793 4 794 4 254 16 1043 6 796 112 637 2 1046 6 799 8 261 4 
264 4 867 2 70 2 513 2 718 2 399 2 461 2 194 46 129 2 651 2 196 2 930 2 200 4 877 44 811 2 728 38 939 2 526 2 583 2 585 2 944 2 271 2 145 2 535 2 208 2 536 2 338 2 664 2 597 2 26 2 666 2 25 2 476 2 88 2 90 2 349 44 747 2 278 2 422 2 350 2 750 2 956 4 230 2 548 20 903 2 430 2 356 2 97 4 42 2 904 2 43 2 687 2 485 2 688 6 361 2 690 2 292 2 837 2 99 4 238 2 616 2 1020 2 368 2 910 2 50 2 846 2 696 2 496 2 774 2 698 2 373 2 1027 2 782 2 164 6 63 2 168 2 111 2 568 2 503 2 306 2 1040 6 172 2 920 2 65 2 313 2 862 2 445 4 254 4 796 20 1046 2 181 2 576 4 
926 4 645 8 646 4 126 4 129 10 940 4 527 4 140 4 658 2 271 2 659 2 416 8 536 2 538 8 26 10 824 4 278 2 956 10 548 36 429 4 430 2 685 2 687 2 154 2 46 4 690 6 963 4 842 4 696 2 698 28 851 4 164 6 167 2 166 4 168 10 63 4 568 4 65 4 712 4 313 4 448 2 315 16 576 10 866 16 867 6 981 16 718 2 869 4 320 4 191 4 988 4 720 2 461 4 194 78 73 4 196 2 991 8 877 104 994 4 77 4 728 14 998 8 741 4 338 30 339 32 595 4 597 6 890 4 88 2 746 30 216 4 349 70 747 4 222 24 749 2 750 6 603 8 758 14 354 2 230 2 97 2 903 4 233 8 760 4 488 4 237 4 1020 4 910 4 618 2 620 4 912 24 774 10 103 4 373 2 775 4 1027 2 107 4 1037 4 1036 8 503 10 1040 24 794 4 254 10 796 44 637 2 1046 4 261 4 
867 2 718 2 124 2 461 2 127 2 194 28 196 2 129 2 877 40 993 2 728 14 583 2 82 2 468 2 271 2 416 6 338 12 597 2 88 2 746 6 349 26 546 2 747 4 278 2 422 2 750 2 956 6 230 2 548 14 903 4 97 2 687 2 907 2 690 2 292 2 1020 2 910 4 240 10 842 4 696 2 57 2 698 12 373 2 775 2 1027 2 164 4 167 2 63 2 1037 2 568 4 503 2 1040 8 65 4 313 2 254 6 978 2 796 14 1046 4 576 6 
689 2 

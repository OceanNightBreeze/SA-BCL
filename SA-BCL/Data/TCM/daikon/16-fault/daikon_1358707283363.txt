#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 1069 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.NullPointerException 831 853 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 831 853 65 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 785 1031 1039 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 1070 795 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 177 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:eltsGTE([II)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_148()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:union([I[I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_161()Z
utilMDE.Intern:intern([D)[D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:slice([III)[I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([B[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_55()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isFloat()Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isPointer()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3_3()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:memberOf(D[F)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName:hashCode()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_88()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.InvMap:InvMap()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:eq(DD)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3_13()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3_15()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqual([II)Z | CONSTANT | 162209 | 0 -> 1
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Ppt:Ppt()V
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:lexLTE([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 12410 | if (x) -> if (!x)
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_ntk()I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J | CONSTANT | 17272 | 2 -> -1
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3R_96()Z
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_50()Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eq(FF)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_60()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.ArraysMDE:max([I)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_4()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:memberOf(F[D)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:logDetail()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_116()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3_10()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3_16()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_1()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjCheckNAddTwoStates(II)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:min_max([I)[I
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_89()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:lte(II)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.ProglangType:isIntegral()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Quant:lexLT([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:concat([I[I)[I | ASSIGN | 37483 | = null
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_51()Z
daikon.PptSlice2:arity()I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3R_120()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjCheckNAddStates(II)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 43181 | if (x) -> if (!x)
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_54()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:ne(II)Z
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Debug:logDetail()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexGT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String; | RETURN | 50824 | return null
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_118()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:indexOf([II)I | STATEMENT | 13838 | stmt -> ;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3R_85()Z
daikon.inv.Invariant:getConfidence()D
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.ArraysMDE:sum([[D)D
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3_14()Z
daikon.Debug:logOn()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([I)[I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
714 2 983 2 521 2 50 2 913 2 1024 2 586 2 749 4 972 2 843 2 857 2 416 2 
905 8 980 16 698 2 212 2 494 4 151 4 372 53 597 32 678 6 1064 6 604 4 508 6 1068 4 780 2 191 6 952 4 479 22 477 6 129 6 684 2 63 4 928 32 858 2 997 2 654 2 387 4 515 32 1074 18 107 6 866 6 687 48 25 4 29 16 426 16 32 2 666 4 71 4 429 4 305 16 
521 2 896 2 111 2 
324 2 260 2 18 2 1019 2 349 2 774 2 451 2 868 2 989 2 500 2 189 2 527 2 766 22 98 10 
980 2 627 2 1020 2 282 2 698 2 372 6 597 2 1068 2 479 2 128 2 477 4 855 2 886 2 928 2 418 2 515 2 1074 2 687 4 867 2 29 2 426 2 623 2 305 2 
928 8 980 4 515 8 107 6 494 4 687 12 372 16 597 8 29 4 392 2 426 4 584 2 1064 6 505 2 666 4 479 6 305 4 
735 2 734 2 4 2 739 2 567 2 807 4 9 2 56 4 851 62 470 4 335 2 472 4 501 4 990 2 814 2 12 2 709 4 749 4 778 4 253 2 646 4 100 2 652 2 194 2 714 4 104 4 521 8 896 6 265 10 111 2 869 2 900 14 968 2 301 4 1044 2 361 2 560 10 401 2 694 4 179 2 
782 2 859 2 611 2 595 2 833 2 834 2 811 2 841 2 1069 2 99 2 797 2 
443 2 639 2 514 2 910 2 728 2 656 4 952 2 25 2 390 2 
232 6 522 2 832 6 702 2 467 6 725 2 643 2 641 2 642 2 916 2 768 2 
402 2 279 6 824 2 593 6 423 2 25 2 66 4 882 6 203 2 299 2 952 2 400 6 207 4 
980 10 698 4 434 4 372 30 597 16 505 4 1068 6 885 2 479 14 477 10 952 6 480 2 928 16 261 2 387 6 515 16 1074 8 866 8 687 26 25 6 29 10 145 8 426 10 32 2 33 2 1045 8 668 2 457 4 669 2 305 10 
133 6 935 4 
797 2 
952 2 15 2 
298 2 630 2 952 4 
53 2 
149 16 800 2 5 1 803 2 150 1 533 2 806 16 152 2 410 2 949 2 681 2 412 2 817 2 540 2 413 2 952 34 683 1 161 1 543 3 417 2 957 2 546 2 956 2 963 2 166 4 168 1 169 1 835 2 173 3 424 16 25 32 425 6 178 2 302 2 303 2 559 2 431 2 978 3 307 4 37 2 846 2 38 1 979 12 565 2 46 6 45 2 435 2 699 3 570 2 55 1 571 2 572 3 437 2 187 2 707 2 574 2 190 1 575 2 442 2 445 2 582 2 1004 2 1005 2 583 2 73 3 205 2 1012 2 732 2 1015 3 79 2 736 1 738 2 327 2 1018 1 877 2 86 8 466 2 88 2 1025 2 1026 3 89 2 90 2 1028 2 91 2 602 2 474 2 883 2 219 1 96 1 606 2 223 12 752 4 225 2 888 6 481 2 1030 2 892 2 613 2 485 24 1040 2 350 8 353 32 113 2 901 2 239 2 620 4 116 2 240 2 767 2 118 2 363 2 625 2 906 2 626 5 123 4 367 2 245 2 1054 2 634 2 375 3 374 24 249 4 250 2 1061 1 376 3 127 2 381 32 919 2 920 2 653 3 1072 6 783 2 516 2 1075 4 389 2 267 16 523 2 390 2 138 2 1078 4 1079 1 143 2 664 2 789 3 790 2 395 1 397 2 275 8 398 1 
670 16 671 28 1 118 801 28 7 4 942 2 673 4 808 2 408 2 409 2 679 2 680 4 13 6 950 20 539 2 157 4 290 2 682 38 162 18 820 2 544 2 545 38 294 2 822 4 686 4 826 4 167 2 550 2 965 10 28 2 837 2 31 2 689 4 297 4 427 2 691 2 34 4 973 4 306 2 845 4 981 2 44 8 182 4 566 4 986 38 987 4 568 2 313 2 52 2 850 118 701 38 185 2 706 2 58 16 708 38 710 14 61 4 576 2 712 4 317 2 996 12 193 2 441 2 444 4 715 2 716 16 717 10 723 4 198 4 452 4 585 2 872 2 70 4 1009 8 72 10 730 2 456 2 77 4 323 2 209 24 592 2 737 2 1017 2 84 2 1021 2 740 2 878 2 331 4 1023 2 879 4 468 2 601 2 748 24 603 14 1029 4 92 38 884 14 889 4 890 38 753 2 483 16 101 2 102 2 1033 4 757 2 893 24 759 4 614 2 348 2 616 2 898 120 358 132 241 2 359 20 1049 2 1048 30 121 38 907 4 909 2 368 8 1053 8 912 4 496 4 125 2 1057 4 498 10 636 2 248 2 373 4 1065 4 1067 2 922 36 255 38 256 4 647 4 258 10 649 20 383 2 929 2 131 4 1071 2 930 2 513 4 263 4 519 38 518 4 657 2 264 2 658 4 933 46 660 4 661 6 662 26 269 4 144 4 393 38 272 4 147 4 936 4 277 2 938 4 528 4 
612 2 220 2 211 1 447 2 521 2 351 2 430 2 457 2 
1037 2 220 2 447 2 
747 2 220 2 447 2 
940 2 164 2 703 2 
220 2 447 2 
940 2 856 2 
421 2 
940 2 908 2 164 2 
492 2 164 2 962 2 
164 2 346 2 288 2 
914 2 787 2 164 2 
959 2 164 2 170 2 
940 2 160 2 
220 2 588 2 
175 2 962 2 
346 2 964 2 
787 2 624 2 
637 2 959 2 
940 2 461 2 
959 2 751 2 
787 2 336 2 
346 2 497 2 
356 2 962 2 
940 2 908 2 164 2 1011 2 
940 2 908 2 164 2 1011 2 577 2 
940 2 164 2 994 2 
940 2 355 2 164 2 
617 2 947 2 589 2 541 2 
281 2 329 2 404 2 848 2 520 2 407 2 631 2 596 2 487 2 183 2 139 2 836 2 705 2 338 4 69 4 766 6 97 2 292 2 
164 2 254 2 
853 2 831 2 
853 2 65 2 831 2 
612 2 220 2 411 2 447 2 521 2 457 2 
19 2 923 2 
612 2 521 2 457 2 76 2 
787 2 30 2 
959 2 17 2 
962 2 475 2 
386 2 346 2 
959 2 813 2 346 2 
959 2 346 2 450 2 
955 2 959 2 346 2 
959 2 746 2 346 2 
469 2 612 2 581 6 521 2 827 2 199 2 204 6 667 2 
197 2 940 2 
164 2 791 2 220 2 
220 2 607 2 
906 2 
800 2 806 6 152 2 410 2 681 2 817 2 540 2 952 26 14 2 161 2 957 2 546 2 166 4 830 2 25 26 425 6 840 2 693 2 36 4 307 4 979 8 563 4 46 5 45 2 697 2 435 2 570 2 437 2 574 2 445 2 205 2 731 2 79 2 738 2 327 2 1025 2 217 2 89 2 1028 2 91 2 90 2 474 1 883 2 219 2 602 2 606 2 752 2 223 8 888 2 891 2 1034 2 894 2 1040 2 353 4 116 2 123 4 1054 2 911 2 245 4 249 2 917 2 644 2 127 2 381 6 919 6 920 2 510 2 259 2 1072 2 783 1 516 2 1075 4 390 2 138 2 1078 2 275 2 278 2 398 4 
800 2 806 6 152 2 410 2 681 2 817 2 540 2 952 26 14 2 161 2 957 2 546 2 166 4 830 2 835 2 25 26 425 6 840 2 693 2 36 4 307 4 979 8 563 4 46 6 45 2 697 2 435 2 570 2 437 2 574 2 445 2 205 2 731 2 79 2 738 2 327 2 742 2 1025 2 89 2 1028 2 91 2 90 2 474 2 883 2 219 2 602 2 606 2 752 2 223 8 888 2 891 2 1034 2 1040 2 353 4 902 2 116 2 123 4 1054 2 911 2 245 4 249 2 644 2 127 2 381 6 919 6 920 2 510 2 259 2 1072 2 783 2 516 2 1075 4 390 2 138 2 1078 2 276 2 275 2 278 2 
16 2 
41 2 1027 2 
148 2 244 2 232 2 895 2 721 2 467 2 57 2 722 4 334 2 454 2 916 2 538 2 665 2 971 4 953 2 976 2 648 2 768 2 
148 2 802 2 804 2 405 2 283 2 467 6 334 2 1028 2 538 2 681 2 815 2 952 12 415 2 953 2 291 2 482 2 232 4 895 2 829 2 237 2 832 6 763 2 25 6 1042 2 619 2 425 4 490 2 116 2 971 4 300 4 1046 6 976 2 768 4 308 2 771 4 244 2 564 2 123 2 629 4 435 2 126 2 57 2 642 2 916 4 648 2 446 2 516 2 1075 2 522 2 721 4 722 4 138 2 268 2 320 4 454 2 871 2 665 2 526 2 205 2 874 4 
148 2 802 2 804 2 405 2 283 2 467 4 334 2 1028 2 538 2 681 2 815 2 952 12 415 2 953 2 291 2 482 2 232 6 895 2 829 2 237 2 832 6 763 2 25 6 1042 2 619 2 425 4 490 2 116 2 971 4 300 4 1046 6 976 2 768 4 308 2 771 4 244 2 564 2 123 2 629 4 435 2 126 2 702 2 57 2 916 4 648 2 446 2 516 2 1075 2 522 2 721 4 722 4 138 2 268 2 320 4 454 2 871 2 665 2 526 2 205 2 874 4 
148 2 802 2 804 2 405 2 283 2 467 6 334 2 1028 2 538 2 681 2 815 2 952 12 415 2 953 2 291 2 482 2 232 6 895 2 829 2 237 2 832 6 763 2 25 6 1042 2 619 2 425 4 490 2 116 2 971 4 300 4 1046 6 976 2 768 4 308 2 771 4 244 2 564 2 123 2 629 8 435 2 126 2 57 2 641 2 916 4 648 2 446 2 516 2 1075 2 522 2 721 4 722 4 138 2 268 2 320 4 454 2 871 2 665 2 526 2 205 2 874 4 
148 2 802 2 804 2 405 2 283 2 467 6 334 2 1028 2 538 2 681 2 815 2 952 12 415 2 953 2 291 2 482 2 232 8 895 2 829 2 237 2 832 8 763 2 25 6 1042 2 619 2 425 4 490 2 116 2 971 4 300 4 1046 10 976 2 768 4 308 2 771 8 244 2 123 2 564 2 629 8 435 2 126 2 702 2 57 2 641 2 916 4 648 2 446 2 516 2 1075 2 522 2 721 4 722 4 138 2 268 2 320 4 454 2 871 2 665 2 526 2 205 2 874 4 
148 2 802 2 804 2 405 2 283 2 467 6 334 2 1028 2 538 2 681 2 815 2 952 12 415 2 953 2 291 2 482 2 232 6 895 2 829 2 237 2 832 6 763 2 25 6 1042 2 619 2 425 4 490 2 116 2 971 4 300 4 1046 10 976 2 768 4 308 2 771 8 244 2 564 2 123 2 629 8 435 2 126 2 57 2 641 2 916 4 648 2 446 2 516 2 1075 2 522 2 721 4 722 4 138 2 268 2 320 4 454 2 871 2 665 2 526 2 205 2 874 4 
798 6 800 2 530 2 802 2 804 2 283 2 806 6 537 2 538 2 815 2 817 2 15 6 291 2 293 1 546 2 829 2 830 4 832 12 25 24 554 2 300 6 36 4 307 4 308 2 40 2 564 2 42 6 45 2 46 6 47 1 53 6 57 2 314 2 573 2 574 2 860 1 861 6 320 8 871 2 874 4 78 6 79 2 327 2 334 2 880 2 89 2 91 2 883 2 94 6 339 2 888 2 106 1 895 2 352 2 353 2 110 8 112 1 354 2 619 2 618 2 357 6 116 2 123 4 366 2 629 2 369 2 630 6 371 6 632 2 126 2 640 2 916 4 127 2 381 8 919 6 920 2 648 2 385 2 132 2 390 2 138 2 665 2 937 6 939 2 148 2 941 4 948 2 681 2 952 46 953 2 415 4 954 2 957 2 165 2 166 4 688 6 967 2 425 6 969 2 971 4 693 2 976 2 979 4 985 2 435 2 988 6 702 4 184 7 992 2 993 6 445 2 446 2 721 4 722 4 454 2 453 2 726 7 205 2 731 2 210 1 213 2 467 4 473 1 1028 2 474 2 752 2 223 4 228 2 482 2 232 8 234 10 235 6 1040 2 237 2 488 2 763 2 489 1 1042 2 490 2 1046 2 768 4 491 1 1051 4 244 2 772 2 1054 12 249 2 506 2 259 2 1072 2 783 2 516 2 784 6 1075 4 522 4 268 2 786 2 1078 2 526 4 275 2 
798 6 148 2 800 2 941 4 530 2 802 2 804 2 806 6 283 2 948 2 537 2 538 2 681 2 815 2 817 2 15 6 952 48 415 4 953 2 954 2 291 2 957 2 546 2 165 2 166 4 830 4 829 2 832 12 25 26 966 2 688 6 967 2 425 6 554 2 969 2 300 6 971 4 693 2 976 2 36 4 308 2 307 4 40 2 979 8 42 6 564 2 46 6 45 2 985 2 435 2 53 6 988 6 57 2 314 2 992 2 573 2 574 2 993 6 861 6 446 2 445 2 721 4 722 4 320 8 453 2 454 2 871 2 205 2 731 2 874 4 78 6 79 2 327 2 213 2 467 8 334 2 880 2 89 2 91 2 1028 2 883 2 474 2 339 2 94 6 223 8 752 4 888 2 228 2 482 2 234 10 232 8 895 2 235 6 1040 2 353 2 352 2 237 2 488 2 110 8 354 2 763 2 1042 2 618 2 619 2 357 6 490 2 116 2 1046 2 768 4 244 2 1051 4 366 2 123 4 245 2 369 2 1054 12 629 6 772 2 630 6 371 6 632 2 126 2 640 2 249 4 641 4 916 4 506 2 381 8 127 2 919 6 920 2 648 2 925 2 385 2 259 2 132 2 1072 2 783 2 516 2 784 6 1075 4 522 4 390 2 138 2 786 2 268 2 1078 4 665 2 526 4 275 2 937 6 939 2 
798 6 148 2 800 2 941 4 530 2 802 2 804 2 806 6 283 2 948 2 537 2 538 2 681 2 815 2 817 2 15 6 952 48 415 4 953 2 954 2 291 2 957 2 546 2 165 2 166 4 830 4 829 2 832 12 25 26 966 2 688 6 967 2 425 6 554 2 969 2 300 6 971 4 693 2 976 2 36 4 308 2 307 4 40 2 979 8 42 6 564 2 45 2 46 6 985 2 435 2 53 6 988 6 57 2 314 2 992 2 573 2 574 2 993 6 861 6 446 2 445 2 721 4 722 4 320 8 453 2 454 2 871 2 205 2 731 2 874 4 78 6 79 2 327 2 213 2 467 8 334 2 880 2 89 2 91 2 1028 2 883 2 474 2 339 2 94 6 223 8 752 4 888 2 228 2 482 2 234 10 232 8 895 2 235 6 1040 2 353 2 352 2 237 2 488 2 110 8 354 2 763 2 1042 2 618 2 619 2 357 6 490 2 116 2 1046 6 768 4 771 4 244 2 1051 4 366 2 123 4 245 2 369 2 1054 12 629 6 772 2 630 6 371 6 632 2 126 2 640 2 249 4 641 4 916 4 506 2 381 8 127 2 919 6 920 2 648 2 925 2 385 2 259 2 132 2 1072 2 783 2 516 2 784 6 1075 4 522 4 390 2 138 2 786 2 268 2 1078 4 665 2 526 4 275 2 937 6 939 2 
798 6 800 2 530 2 802 2 804 2 805 6 283 2 806 8 537 2 538 2 815 2 817 2 15 12 291 2 546 2 821 6 829 2 830 4 832 16 25 24 554 2 300 6 36 6 307 4 308 2 564 2 42 6 46 6 45 2 310 6 53 12 57 2 314 2 573 2 574 2 59 6 861 6 64 2 320 8 871 2 874 4 75 2 78 6 79 2 327 2 334 2 880 2 89 2 91 2 883 2 93 6 94 6 339 2 888 4 608 2 895 2 352 2 353 4 110 8 354 2 618 2 619 2 357 6 116 2 123 4 366 2 629 6 369 2 630 12 371 12 632 2 126 2 640 2 641 4 642 2 916 4 127 2 381 12 919 8 920 2 648 2 925 2 385 2 132 2 655 2 390 2 138 2 665 2 937 6 939 2 148 2 941 4 677 6 948 2 681 2 952 52 953 2 415 4 954 2 957 2 165 2 166 4 966 2 688 6 967 2 425 6 969 2 971 4 693 2 976 2 979 10 985 2 435 2 988 6 702 2 992 2 993 12 195 6 445 2 446 2 721 4 722 4 454 2 453 2 205 2 731 2 213 2 467 10 1028 2 474 2 752 4 223 10 228 2 482 2 232 10 234 8 1036 2 235 6 1040 2 237 2 488 2 763 2 1042 2 490 2 1046 6 768 4 1050 6 771 4 1051 4 244 2 245 2 772 2 1054 10 495 2 249 4 252 2 506 2 259 4 512 6 1072 4 783 2 516 2 784 12 1075 4 522 4 786 2 268 2 1078 4 792 2 526 4 275 4 
771 4 802 2 629 6 804 2 283 2 126 2 467 6 57 2 334 2 641 2 916 4 815 2 952 4 953 2 291 2 648 2 482 2 232 6 895 2 829 2 522 2 237 2 832 4 1042 2 722 2 619 2 268 2 320 2 454 2 665 2 300 2 971 2 874 2 1046 4 768 4 
800 2 802 2 804 2 283 2 806 6 681 2 815 2 817 2 952 28 953 2 291 2 957 2 546 2 166 4 830 2 829 2 832 4 25 24 425 6 300 2 971 2 693 2 692 3 36 4 307 4 40 2 564 2 46 6 45 2 180 2 435 2 57 2 187 2 574 2 445 2 722 2 320 2 454 2 321 2 205 2 874 2 731 2 732 2 79 2 82 2 327 2 467 6 334 2 89 2 1028 2 91 2 474 2 883 2 888 3 482 2 232 6 234 2 895 2 1040 2 353 3 237 2 113 2 1042 2 619 2 116 2 1046 2 768 4 906 2 123 4 1054 4 629 6 773 2 126 2 641 2 916 4 127 2 381 8 919 6 648 2 1072 3 783 2 516 2 517 2 1075 4 522 2 390 2 138 2 268 2 665 2 
148 2 802 2 804 2 405 2 283 2 467 6 334 2 1028 2 538 2 681 2 815 2 952 12 415 2 953 2 291 2 482 2 232 6 895 2 829 2 237 2 832 6 763 2 25 6 1042 2 619 2 425 4 490 2 116 2 971 4 300 4 1046 10 976 2 768 4 308 2 771 8 244 2 564 2 123 2 629 8 435 2 126 2 57 2 641 2 916 4 648 2 446 2 516 2 1075 2 522 2 721 4 722 4 138 2 268 2 320 4 454 2 871 2 665 2 526 2 205 2 874 4 
148 2 280 4 804 2 283 2 467 8 334 2 1028 2 538 2 681 2 815 2 952 12 415 2 953 2 291 2 342 2 482 2 232 6 895 2 829 2 237 2 832 8 763 2 25 6 1042 2 619 2 425 4 490 2 116 2 971 4 300 4 1046 10 976 2 768 4 308 2 771 8 244 2 123 2 564 2 629 8 435 2 126 2 57 2 641 2 642 2 916 4 648 2 446 2 516 2 719 2 1075 2 522 2 721 4 722 4 138 2 268 2 320 4 454 2 871 2 665 2 526 2 205 2 874 4 
108 2 815 2 291 2 
108 2 815 2 291 2 
800 2 941 2 532 2 806 2 283 2 284 2 681 2 815 4 289 2 952 24 415 2 953 2 954 2 291 6 957 2 546 2 166 4 830 6 832 16 25 16 425 6 842 2 300 4 971 2 693 2 976 2 844 2 308 2 307 4 39 2 979 4 46 6 45 2 696 2 435 2 988 2 702 4 574 2 446 2 445 2 449 2 721 4 722 2 320 4 871 2 1008 2 205 2 731 2 874 2 459 2 79 2 327 2 876 2 467 12 334 4 337 2 89 2 1028 2 91 2 474 2 883 2 223 4 752 4 891 4 234 2 232 12 108 2 1040 2 353 2 619 2 238 2 116 2 1046 6 768 4 365 2 771 4 244 2 1051 2 123 4 369 2 1054 4 629 6 632 2 249 4 776 2 641 4 642 4 916 4 251 4 127 2 381 2 919 2 920 4 783 2 516 2 135 4 1075 4 522 4 390 2 137 2 138 2 1078 4 934 2 665 2 526 4 398 1 
365 2 148 2 41 2 234 2 941 2 1054 2 516 2 988 2 25 2 137 2 618 2 776 2 880 2 503 2 455 2 952 4 781 2 
800 2 532 2 806 2 283 2 946 2 681 2 815 4 289 2 952 24 415 4 953 2 954 2 291 6 957 2 546 2 166 4 549 2 830 6 832 16 25 16 425 6 842 2 300 4 971 2 693 2 976 2 844 2 308 2 307 4 39 2 979 4 46 6 45 2 181 2 435 2 988 2 702 4 574 2 446 2 445 2 721 4 722 2 320 4 871 2 205 2 874 2 731 2 208 2 459 2 79 2 327 2 876 2 467 12 334 4 337 2 89 2 1028 2 91 2 474 2 883 2 223 4 752 4 891 4 232 12 108 2 1040 2 353 4 619 2 238 4 490 2 116 2 1046 6 768 4 365 2 771 4 244 2 1051 2 123 4 369 2 1054 2 629 6 632 2 249 4 776 2 641 4 642 4 916 4 251 4 380 2 127 2 381 2 919 2 920 4 783 2 516 2 135 4 1075 4 522 4 390 2 137 2 138 2 1078 4 934 2 665 2 526 4 
800 2 941 2 532 2 806 2 283 2 676 2 681 2 815 4 289 2 952 24 415 4 953 2 954 2 291 6 957 2 546 2 547 2 166 4 830 6 832 16 25 16 425 6 842 2 300 4 971 2 974 2 693 2 976 2 844 2 308 2 307 4 39 2 979 4 46 6 45 2 435 2 988 2 702 4 574 2 446 2 445 2 721 4 722 2 320 4 871 2 205 2 731 2 874 2 459 2 79 2 327 2 876 2 467 12 334 4 337 2 881 2 89 2 1028 2 91 2 474 2 883 2 223 4 752 4 1032 2 891 4 234 2 232 12 108 2 1040 2 353 2 619 2 238 2 490 2 116 2 1046 6 768 4 365 2 771 4 244 2 1051 2 123 4 369 2 1054 4 629 6 632 2 249 4 776 2 641 4 642 4 916 4 251 4 127 2 381 2 919 2 920 4 783 2 516 2 135 4 1075 4 522 4 390 2 137 2 138 2 1078 4 934 2 665 2 526 4 398 1 
0 2 3 2 800 2 799 2 530 2 806 12 810 2 287 2 812 2 10 2 11 4 817 2 816 8 14 2 819 2 546 2 823 8 21 10 830 2 551 2 25 24 26 2 29 2 552 2 840 8 301 2 556 2 35 2 559 2 36 10 305 2 561 4 307 4 562 22 309 2 45 2 46 6 49 2 311 1 849 2 574 2 854 2 318 2 579 2 319 10 870 2 587 2 321 2 79 2 327 2 330 2 594 2 332 2 597 4 89 2 91 2 883 2 341 2 888 11 103 2 345 2 353 11 352 2 897 10 116 2 904 2 122 2 628 6 123 4 911 2 124 2 372 6 377 8 645 2 644 2 381 18 127 2 919 12 920 2 921 2 924 2 130 2 651 1 650 2 928 4 132 2 654 4 659 2 390 2 391 2 138 2 140 2 663 1 146 2 399 10 403 10 944 2 945 4 156 2 951 2 681 2 952 30 161 2 685 4 957 2 419 4 961 2 163 2 165 2 166 4 687 6 171 2 425 6 426 2 690 4 969 2 177 2 692 2 975 2 977 2 432 2 980 2 979 16 180 2 697 2 435 2 188 2 709 2 998 8 999 2 445 2 1000 10 202 4 1007 2 205 2 731 2 1014 2 733 3 1016 2 460 2 464 2 745 2 216 2 1028 2 474 2 219 2 476 8 479 4 223 16 228 2 1031 2 1034 2 755 4 484 2 1039 2 1040 2 486 2 1043 2 765 2 1052 2 1054 2 773 2 494 4 1059 4 501 2 1063 2 1064 6 506 2 779 2 257 1 509 2 510 2 259 20 1072 11 783 2 515 4 1074 4 517 2 516 2 785 2 1075 4 266 10 1077 2 524 8 270 2 1080 10 793 1 275 12 794 2 278 2 
733 2 0 2 3 2 330 2 806 2 849 2 594 2 332 2 1059 2 381 2 919 2 817 2 854 2 952 2 888 2 130 4 259 6 1072 2 755 2 353 2 551 2 25 2 201 2 36 2 
733 2 0 2 3 2 330 2 806 2 849 2 594 2 332 2 1059 2 381 2 919 2 817 2 854 2 952 2 888 2 130 4 259 6 1072 2 755 2 353 2 551 2 25 2 201 2 36 2 
733 2 0 2 3 2 330 2 806 2 849 2 594 2 332 2 1059 2 381 2 919 2 817 2 854 2 952 2 888 2 130 4 259 6 1072 2 755 2 353 2 551 2 25 2 201 2 36 2 
591 2 149 2 875 3 406 2 332 2 743 2 597 2 534 4 750 2 817 2 95 4 952 10 414 4 888 3 887 4 226 2 422 2 353 3 687 4 25 4 29 2 426 2 555 2 305 2 980 2 847 2 372 4 381 2 1066 4 928 2 927 2 863 3 387 2 515 2 262 6 196 3 388 2 267 2 866 4 724 2 
591 2 149 2 875 2 406 2 332 2 743 2 597 2 534 4 750 2 817 2 95 4 952 10 479 2 414 4 888 2 887 4 226 2 422 2 353 2 687 4 25 4 29 2 426 2 32 2 555 2 305 2 980 2 847 2 372 4 381 2 1066 4 928 2 927 2 863 2 387 2 515 2 262 6 196 2 1074 2 388 2 267 2 866 4 724 2 
591 2 149 2 875 2 406 2 332 2 743 2 597 2 534 4 750 2 817 2 95 4 952 10 479 2 414 4 888 2 887 4 226 2 422 2 353 2 687 4 25 4 29 2 426 2 32 2 555 2 305 2 980 2 847 2 372 4 381 2 1066 4 928 2 927 2 863 2 387 2 515 2 262 6 196 2 1074 2 388 2 267 2 866 4 724 2 
591 2 149 2 875 2 406 2 332 2 743 2 597 2 534 4 750 2 817 2 95 4 952 10 479 2 414 4 888 2 887 4 226 2 422 2 353 2 687 4 25 4 29 2 426 2 32 2 555 2 305 2 980 2 847 2 372 4 381 2 1066 4 928 2 927 2 863 2 387 2 515 2 262 6 196 2 1074 2 388 2 267 2 866 4 724 2 
591 2 149 2 875 2 406 2 332 2 743 2 597 2 534 4 750 2 817 2 95 4 952 10 479 4 414 4 888 2 887 4 226 2 422 2 353 2 687 4 25 4 29 2 426 2 32 4 555 2 305 2 980 2 847 2 372 4 381 2 1066 4 928 2 927 2 863 2 387 2 515 2 262 6 196 2 1074 4 388 2 267 2 866 4 724 2 
770 2 270 2 271 2 672 2 828 2 153 2 
764 2 271 2 83 2 1001 2 840 2 1076 2 296 2 
982 2 4 1 328 1 433 1 569 2 333 1 25 4 788 2 12 1 727 2 478 2 952 4 205 2 795 2 1070 2 
928 2 419 2 980 1 654 1 515 2 1074 1 494 2 687 3 372 3 659 2 597 2 29 1 426 1 1064 3 177 2 970 2 479 1 305 1 
511 1 243 2 325 2 580 2 758 2 534 2 25 1 635 2 600 2 155 2 394 4 553 6 176 2 95 2 952 1 414 2 995 2 1047 2 
243 2 325 2 580 2 758 2 534 2 635 4 600 4 155 4 394 4 553 6 176 2 95 2 414 2 995 2 1047 2 
511 1 243 6 325 2 580 2 758 2 534 2 25 1 635 8 600 8 155 8 394 4 553 10 176 2 95 2 952 1 414 2 995 2 1047 8 
325 2 580 2 758 2 534 2 635 2 600 2 155 2 394 2 553 2 176 2 95 2 414 2 995 2 
531 2 943 4 285 2 535 4 952 78 158 4 546 6 958 4 960 4 166 36 22 4 420 2 23 4 548 24 825 2 172 2 25 70 27 4 174 4 428 4 557 24 304 10 695 4 307 44 984 4 43 2 46 102 48 8 54 4 852 2 439 8 440 2 991 4 711 6 60 4 316 4 62 14 713 2 998 30 718 32 448 4 865 4 720 2 1006 4 729 4 873 10 206 16 74 24 590 4 1013 4 458 10 81 2 85 2 87 4 1022 4 471 2 89 6 218 8 474 28 221 6 222 10 340 2 223 16 605 4 227 10 229 2 610 8 344 4 754 4 233 4 1035 4 347 8 756 4 1038 4 760 4 615 2 761 16 236 4 109 2 1041 4 899 4 114 4 117 11 119 4 360 4 247 1 1058 2 775 4 1060 10 499 2 915 4 504 2 777 4 127 2 918 2 382 4 257 5 926 4 651 8 931 4 783 26 134 6 932 10 142 8 141 8 525 2 273 16 396 4 274 2 
81 2 531 2 674 2 215 2 89 2 536 2 474 12 221 4 222 6 952 28 223 14 605 2 158 4 546 2 958 4 344 2 21 2 166 14 420 2 24 2 1038 4 760 4 615 2 109 2 25 26 27 2 899 2 839 2 117 2 428 4 557 8 307 14 43 2 46 40 311 1 633 2 1058 2 1060 6 852 2 504 2 127 2 711 2 382 4 926 4 651 5 384 2 998 6 783 12 448 2 865 2 134 2 1003 2 932 6 663 1 1080 10 274 2 873 2 398 2 590 2 
2 8 531 8 674 2 943 6 285 4 154 2 675 4 535 4 536 2 952 150 159 8 158 6 818 4 546 14 958 6 20 4 295 26 166 88 21 4 420 2 23 6 548 84 24 4 825 2 25 134 27 10 174 4 838 90 428 6 557 124 558 4 695 6 307 112 43 8 984 6 46 248 48 50 311 11 700 2 54 4 704 4 186 12 852 8 440 2 60 6 711 10 62 12 192 18 578 6 862 2 998 34 448 10 865 4 1003 2 720 2 1006 6 67 4 68 24 729 6 873 18 74 92 1013 4 590 4 322 8 81 2 462 10 463 6 465 26 87 4 1022 4 214 10 215 2 89 14 218 42 474 58 221 8 222 16 223 28 605 10 224 24 229 2 344 10 230 90 105 4 1035 4 756 6 1038 6 760 6 615 2 762 2 761 42 236 6 109 2 1041 6 899 6 114 6 117 16 242 24 119 4 769 4 120 2 246 24 633 2 775 6 1060 16 915 6 502 10 1062 24 504 4 378 4 777 4 127 8 382 6 257 5 926 8 651 16 384 2 931 6 783 58 134 36 932 16 141 24 663 8 1080 22 396 4 274 2 398 4 
2 2 529 2 80 2 81 2 462 2 531 2 6 4 741 2 8 2 809 2 214 2 598 2 675 2 286 2 744 2 471 2 536 2 89 2 474 6 221 6 222 4 952 46 605 2 542 2 223 36 158 2 227 2 609 2 546 2 958 2 344 2 231 2 166 20 420 2 1038 2 760 2 615 2 109 2 25 44 899 2 27 2 115 2 903 2 839 2 621 2 622 2 117 2 428 2 242 2 557 6 304 2 362 2 364 2 307 20 43 2 46 48 370 2 493 2 1056 2 312 2 51 2 246 2 1058 2 1060 4 638 2 436 2 315 4 852 2 502 2 1062 2 379 2 127 2 711 2 507 4 382 2 713 2 1073 2 783 6 448 2 1002 2 134 2 136 2 932 4 524 6 200 2 1007 4 274 2 873 2 398 2 458 2 796 2 
864 2 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 
599 1 343 1 438 1 326 1 1055 1 1010 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 66 844 385 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 838 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (336,789) (336,789) 189 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 335 463 513 221 95 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 139 852 881 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 910 226 683 309 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 910 628 226 683 309 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 910 910 910 910 226 683 309 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_56()Z
daikon.Ppt:Ppt()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ProglangType:isIntegral()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:gt(II)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_3R_58()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3_1()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.Invariant:justified()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:negate(I)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.FormatTestCase:passes()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:isReverse([I[I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_53()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndColumn()I
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltsGT([II)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:sameLength([I[I)Z
utilMDE.MathMDE:gcd(II)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet; | OPERATOR | 1556 | == -> !=
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | RETURN | 55834 | return null
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:subsetOf([J[J)Z
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:sorted([I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:gte(II)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptSlice0:arity()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern([I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(II)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaCharStream:BeginToken()C
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaCharStream:ReadByte()C
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter; | ASSIGN | 22890 | = null
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:relate_var()V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3R_48()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:slice([III)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String; | RETURN | 23802 | return null
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object; | RETURN | 32728 | return null
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99177 | return null
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:subsetOf([S[S)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_162()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_85()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:readChar()C
daikon.Debug:logOn()Z
daikon.Quant:lexLTE([I[I)Z | CONDITION | 171995 | if (x) -> if (!x)
daikon.Quant:subsetOf([I[I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant:logOn()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.PptName:isCombinedExitPoint()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2087 | return null
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Debug:logDetail()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:eltwiseLT([I)Z | CONSTANT | 175803 | 0 -> 1
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:memberOf(S[S)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:noDups([I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(J[J)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_13()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
jtb.JavaParser:jj_3R_69()Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:eq(DD)Z
daikon.inv.Invariant:logDetail()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_16()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3R_50()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ValueTuple:size()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ModBitTracker:num_vars()I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_ntk()I
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_49()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Assert:assertTrue(Z)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:size()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eltsEqual([II)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_14()Z
daikon.ProglangType:isPseudoArray()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_52()Z
daikon.ModBitTracker:split(I)I
daikon.Quant:eltsLT([II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaCharStream:getEndLine()I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltwiseGT([I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
508 2 32 2 336 2 920 4 922 2 789 2 337 2 784 2 885 2 
853 2 659 2 130 6 223 6 670 2 253 2 480 2 595 2 352 6 453 2 811 2 
545 2 85 2 789 2 196 6 923 6 198 4 333 4 106 2 23 6 792 2 336 2 930 2 833 6 
493 8 548 2 194 16 879 16 71 2 789 6 3 2 884 4 913 29 500 4 165 2 313 26 527 2 636 10 336 6 260 10 78 4 168 12 442 8 88 10 715 2 289 6 151 8 928 6 905 2 26 10 180 8 813 4 181 10 218 16 
805 6 598 4 
118 2 
877 4 575 2 756 2 521 2 828 2 527 2 314 2 468 4 469 2 369 2 203 2 641 2 840 2 477 2 90 2 266 2 776 2 382 4 27 2 32 2 494 2 33 2 36 2 274 2 38 2 789 4 104 2 336 4 795 4 394 2 680 2 396 2 863 2 682 2 735 2 283 2 284 2 287 2 616 2 617 2 507 2 694 2 570 2 810 2 
725 4 546 4 661 2 819 4 192 2 248 6 194 32 879 32 71 2 789 4 42 2 884 2 911 6 913 56 887 4 313 48 636 6 336 4 260 16 467 4 113 4 168 22 442 18 202 8 80 2 88 16 174 6 289 4 804 4 619 2 742 6 452 2 151 6 928 4 26 16 874 6 181 16 218 32 124 6 
438 2 36 2 167 2 
14 2 560 2 432 2 786 10 346 2 867 2 19 2 694 2 873 22 622 2 214 2 24 2 428 2 783 2 
244 2 879 2 194 2 884 2 761 2 913 6 605 2 313 4 765 2 636 4 280 2 260 2 168 2 442 2 798 2 88 2 289 2 26 2 181 2 747 2 218 2 722 2 429 2 
546 4 879 8 194 8 88 4 290 2 911 6 742 6 913 16 313 12 26 4 467 4 260 4 181 4 78 2 218 8 168 4 408 2 
385 2 66 2 386 2 573 2 36 6 518 2 132 2 523 2 438 4 315 2 167 2 607 2 468 2 11 2 140 2 79 4 204 2 83 2 208 2 375 2 421 2 236 10 615 2 90 2 844 2 594 2 121 2 620 6 423 2 405 2 123 36 302 4 657 2 
471 2 838 2 474 2 118 2 497 2 288 2 522 2 525 2 61 2 169 2 368 2 
814 2 358 4 249 2 2 2 247 2 251 2 133 2 823 8 577 2 252 3 6 6 9 2 831 6 708 2 707 6 13 16 372 2 263 2 713 1 143 2 841 2 843 1 479 2 483 3 484 1 152 2 150 1 488 2 156 1 851 2 43 1 162 4 860 5 606 3 861 1 164 2 47 8 393 2 281 2 608 2 282 1 51 6 285 2 54 2 618 2 506 1 508 2 295 1 404 2 745 1 183 2 182 2 625 2 627 2 189 2 190 2 69 1 515 1 880 3 757 2 520 2 524 1 766 2 201 11 81 2 770 2 892 4 643 2 318 2 319 1 533 1 773 2 897 2 422 2 99 2 431 2 660 1 785 2 663 3 547 1 787 1 789 30 331 2 225 2 790 2 673 1 674 2 108 4 915 2 336 32 681 8 338 2 232 11 562 2 342 2 448 2 116 2 919 2 564 2 119 2 803 2 348 8 806 4 926 17 351 2 
322 2 336 2 
646 2 411 2 336 4 
568 2 
572 14 359 2 463 2 576 2 5 2 255 4 706 26 259 2 834 2 15 2 472 2 712 2 376 26 265 2 377 26 593 6 381 4 485 2 487 82 849 2 270 82 271 10 388 26 275 26 859 6 163 2 499 16 862 2 392 2 731 2 609 2 734 2 170 2 736 12 611 2 175 26 402 2 870 10 871 2 62 2 510 20 63 2 876 2 306 2 630 2 631 8 513 2 517 24 516 28 70 2 883 26 72 4 413 10 759 2 519 2 197 2 73 20 311 26 74 2 762 2 414 8 637 2 77 2 418 10 639 2 316 2 640 26 771 6 895 2 644 20 320 82 92 2 900 2 645 2 539 2 95 2 324 2 215 14 780 2 426 2 328 2 219 2 100 2 221 2 788 10 103 2 554 2 335 2 676 4 439 2 112 12 231 14 443 4 340 26 341 4 921 26 566 4 122 6 693 2 695 2 698 36 929 8 808 2 457 2 459 4 
909 1 308 2 235 2 544 2 
308 2 509 2 
56 2 308 2 36 2 668 2 813 2 908 2 917 2 
308 2 264 2 908 2 
308 2 908 2 490 2 
142 2 235 2 794 2 
308 2 908 2 
847 2 794 2 
308 2 137 2 
235 2 794 2 655 2 
278 2 235 2 20 2 
59 2 235 2 772 2 
235 2 325 2 557 2 
30 2 235 2 679 2 
82 2 794 2 
308 2 689 2 
561 2 
816 2 59 2 
924 2 325 2 
679 2 298 2 
475 2 794 2 
679 2 832 2 
592 2 325 2 
738 2 59 2 
737 2 278 2 
235 2 794 2 655 2 277 2 
22 2 235 2 794 2 655 2 277 2 
235 2 794 2 111 2 
446 2 235 2 794 2 
817 2 540 2 914 2 769 2 
36 2 668 2 148 2 55 2 
56 2 36 2 613 2 668 2 148 2 55 2 
629 2 308 2 36 2 668 2 813 2 908 2 
623 2 682 2 
36 2 668 2 813 2 379 2 
325 2 185 2 
751 2 679 2 
902 2 278 2 
866 2 59 2 
59 2 679 2 740 2 
489 2 
604 2 59 2 679 2 
59 2 102 2 679 2 
632 6 36 2 666 6 668 2 200 2 890 2 709 2 481 2 
711 2 794 2 
891 2 159 2 601 2 211 2 692 2 254 2 873 6 653 4 257 4 440 2 455 2 746 2 383 2 300 2 571 2 186 2 931 2 626 2 
235 2 721 2 
9 2 
814 2 358 4 818 2 246 2 2 2 247 2 249 8 822 2 133 2 6 6 831 2 707 2 13 6 372 2 374 2 473 2 143 2 147 2 843 4 599 2 720 2 846 2 488 2 851 2 723 2 40 2 162 4 164 2 391 2 47 6 281 2 395 4 51 4 285 2 54 2 618 2 508 2 404 2 182 2 189 2 511 2 190 2 417 2 317 2 87 2 897 2 93 2 96 2 326 2 99 8 660 2 787 2 789 26 436 2 790 2 674 2 108 4 336 26 677 2 916 2 338 2 233 2 342 2 447 2 116 2 564 2 119 6 449 2 802 4 237 2 803 2 569 2 691 2 806 4 349 4 926 4 
814 2 358 4 818 2 246 2 2 2 247 2 249 8 822 2 133 2 6 6 831 2 707 2 13 6 372 2 374 2 473 2 143 2 147 2 843 2 268 2 599 2 846 2 488 2 851 2 723 2 40 2 162 4 164 2 391 2 47 6 281 2 395 4 51 6 285 2 54 2 618 2 508 2 404 2 182 2 189 2 511 2 190 2 633 2 763 2 417 2 317 2 897 2 535 2 93 2 96 2 326 2 99 8 431 2 660 2 787 2 789 26 436 2 790 2 674 2 108 4 336 26 916 2 338 2 233 2 342 2 447 2 116 2 564 2 119 6 449 2 802 4 237 2 803 2 569 2 691 2 806 4 349 4 926 4 351 2 
502 2 
491 2 750 2 
461 2 409 2 358 2 410 4 514 4 130 6 131 2 253 2 6 4 827 2 415 2 258 2 8 2 584 2 135 4 144 2 534 4 897 2 478 2 898 8 591 2 716 2 718 2 651 2 154 2 781 2 854 2 659 4 433 2 273 2 35 2 39 2 223 6 789 6 330 10 790 2 670 4 498 2 164 2 108 2 336 12 281 2 441 4 558 2 445 2 338 2 503 2 117 8 173 2 504 2 803 2 872 4 696 2 404 2 744 2 352 6 453 2 297 2 296 2 304 2 
461 2 409 2 358 2 410 4 514 4 130 8 131 2 253 2 6 4 827 2 415 2 258 2 8 2 584 2 135 4 199 4 144 2 210 2 534 4 897 2 478 2 898 8 591 2 718 2 651 2 154 2 781 2 854 2 659 4 433 2 273 2 35 2 39 2 789 6 223 8 330 10 790 2 670 4 498 2 164 2 108 2 336 12 281 2 441 4 559 2 558 2 445 2 338 2 117 8 173 2 504 2 803 2 872 4 696 2 404 2 744 2 352 6 453 2 297 2 296 2 811 2 304 2 
854 2 659 2 410 4 514 4 35 2 130 2 534 2 131 2 478 2 670 2 827 2 696 2 651 2 258 2 352 2 584 2 296 2 304 2 
461 2 409 2 358 2 410 4 514 4 130 6 131 2 6 4 827 2 415 2 258 2 8 2 584 2 135 4 144 2 534 4 897 2 478 2 898 4 591 2 716 2 718 2 651 2 154 2 781 2 854 2 659 4 433 2 273 2 35 2 39 2 223 6 789 6 330 6 790 2 670 4 498 2 164 2 108 2 336 12 281 2 441 4 558 2 445 2 338 2 503 2 117 4 173 2 504 2 803 2 872 4 696 2 404 2 744 2 352 4 453 2 297 2 296 2 811 2 304 2 
461 2 409 2 358 2 410 4 514 4 130 4 131 2 6 4 827 2 415 2 258 2 8 2 584 2 135 4 144 2 534 4 897 2 478 2 898 4 591 2 716 2 480 2 718 2 651 2 154 2 781 2 854 2 659 4 433 2 273 2 35 2 39 2 223 6 789 6 330 6 790 2 670 4 498 2 164 2 108 2 336 12 281 2 441 4 558 2 445 2 338 2 503 2 117 4 173 2 504 2 803 2 872 4 696 2 404 2 744 2 352 6 453 2 297 2 296 2 304 2 
461 2 409 2 358 2 410 4 514 4 130 6 131 2 253 2 6 4 827 2 415 2 258 2 8 2 584 2 135 4 144 2 534 4 897 2 478 2 898 4 591 2 716 2 718 2 651 2 154 2 781 2 854 2 659 4 433 2 273 2 35 2 39 2 223 6 789 6 330 6 790 2 670 4 498 2 164 2 108 2 336 12 281 2 441 4 558 2 445 2 338 2 503 2 117 8 173 2 504 2 803 2 872 4 696 2 404 2 744 2 352 6 453 2 297 2 296 2 304 2 
461 2 409 2 358 2 410 4 514 4 130 6 131 2 253 2 6 4 827 2 415 2 258 2 8 2 584 2 135 4 144 2 534 4 897 2 478 2 898 8 591 2 716 2 480 2 718 2 651 2 154 2 781 2 854 2 659 4 433 2 273 2 35 2 39 2 223 8 789 6 330 10 790 2 670 4 498 2 164 2 108 2 336 12 281 2 441 4 558 2 445 2 338 2 503 2 117 8 173 2 504 2 803 2 872 4 696 2 404 2 744 2 352 8 453 2 297 2 296 2 304 2 
461 2 409 2 358 2 410 4 514 4 130 6 131 2 253 2 6 4 827 2 415 2 258 2 8 2 584 2 135 4 144 2 534 4 897 2 478 2 898 8 591 2 716 2 718 2 651 2 154 2 781 2 854 2 659 4 433 2 273 2 35 2 39 2 223 6 789 6 330 10 790 2 670 4 498 2 164 2 108 2 336 12 281 2 441 4 558 2 445 2 338 2 503 2 117 8 173 2 504 2 803 2 872 4 696 2 404 2 744 2 352 6 453 2 297 2 296 2 304 2 
461 2 247 2 2 2 249 4 466 2 705 6 6 6 258 2 8 2 10 1 707 2 13 8 476 1 17 2 478 2 716 2 480 4 718 4 482 6 269 6 488 12 723 2 272 2 35 2 273 2 727 2 39 2 496 2 498 2 728 2 47 6 281 2 49 2 501 10 733 2 51 6 739 1 504 2 285 2 54 2 291 2 508 2 744 2 296 2 297 4 64 2 304 2 514 4 75 2 534 4 536 2 322 6 94 6 538 6 537 6 323 2 781 2 543 2 99 4 782 2 789 24 330 2 790 2 108 4 336 46 556 6 338 2 558 2 115 4 563 4 342 2 116 2 117 2 564 2 119 6 568 6 803 2 569 2 806 4 349 4 350 8 351 2 352 8 354 1 355 2 814 2 815 2 358 4 820 2 574 6 130 4 131 2 133 2 827 2 580 2 363 2 584 2 585 6 829 1 135 8 831 2 835 2 372 2 839 6 143 2 144 2 146 2 843 1 591 2 154 2 851 2 854 2 602 1 161 7 162 4 164 2 172 1 173 2 614 6 618 2 872 4 404 2 624 1 182 2 409 2 189 2 190 2 410 4 411 6 634 6 415 2 889 2 206 2 897 2 647 2 650 6 651 2 654 2 425 7 431 2 659 4 433 2 664 2 435 2 223 12 436 2 670 4 674 2 228 2 229 2 441 6 916 4 684 1 445 2 449 2 237 2 696 2 926 2 925 2 453 4 454 2 
814 4 461 2 815 2 358 4 820 2 574 6 249 8 2 2 247 2 130 8 131 2 133 4 705 6 466 2 253 4 6 6 827 2 580 2 363 2 8 2 258 2 585 6 584 2 135 8 831 2 707 2 261 2 13 8 835 2 372 2 17 2 839 6 144 2 143 2 146 2 478 2 716 2 591 2 718 4 482 6 269 6 154 2 488 12 723 2 851 2 854 2 272 2 273 2 35 2 727 2 39 2 496 2 728 2 498 2 162 4 164 2 47 6 49 2 281 2 501 10 733 2 51 6 173 2 504 2 285 2 614 6 54 2 291 2 872 4 618 2 508 2 744 2 404 2 297 4 296 2 182 2 64 2 304 2 409 2 189 2 190 2 410 4 411 6 514 4 634 6 75 2 415 2 889 2 206 2 534 4 897 2 536 2 647 2 212 2 94 6 322 6 537 6 538 6 650 6 323 2 651 2 654 2 781 2 543 2 99 8 782 2 431 2 659 4 433 2 664 2 435 2 223 12 789 26 436 2 330 2 670 4 790 2 674 4 228 2 108 4 336 48 229 2 441 6 556 6 916 4 558 2 445 2 338 2 115 4 563 4 342 2 117 6 116 2 564 2 119 6 802 2 568 6 449 2 237 2 803 2 569 2 806 4 349 4 925 2 926 2 696 2 350 8 453 4 352 8 351 2 454 2 355 2 
814 4 461 2 815 2 358 4 820 2 574 6 247 2 249 8 2 2 130 8 131 2 133 4 705 6 466 2 253 4 6 6 827 2 580 2 363 2 8 2 258 2 585 6 584 2 135 8 831 2 707 2 261 2 13 8 835 2 372 2 17 2 839 6 144 2 143 2 146 2 478 2 716 2 591 2 718 4 482 6 269 6 154 2 488 12 723 2 851 2 854 2 272 2 273 2 35 2 727 2 39 2 496 2 728 2 498 2 162 4 164 2 47 6 49 2 281 2 501 10 733 2 51 6 173 2 504 2 285 2 614 6 54 2 291 2 872 4 618 2 508 2 404 2 744 2 297 4 296 2 182 2 64 2 304 2 409 2 189 2 190 2 410 4 411 6 514 4 634 6 75 2 415 2 889 2 206 2 534 4 897 2 898 4 536 2 647 2 212 2 94 6 322 6 537 6 538 6 650 6 323 2 651 2 654 2 781 2 543 2 99 8 782 2 431 2 659 4 433 2 664 2 435 2 223 12 789 26 436 2 330 6 670 4 790 2 674 4 228 2 108 4 336 48 229 2 441 6 556 6 916 4 558 2 445 2 338 2 115 4 563 4 342 2 117 6 116 2 564 2 119 6 802 2 568 6 449 2 237 2 803 2 569 2 806 4 349 4 925 2 926 2 696 2 350 8 453 4 352 8 351 2 454 2 355 2 
461 2 0 6 2 2 249 10 247 2 253 4 466 2 705 6 6 6 258 2 8 2 707 4 261 2 13 12 17 2 478 2 716 2 480 2 718 4 482 12 269 6 488 10 723 4 273 2 35 2 727 2 39 2 496 2 498 2 728 2 47 8 281 2 49 2 501 8 733 2 51 6 504 2 285 2 54 2 291 2 293 2 508 2 744 2 296 2 297 4 64 2 304 2 307 2 514 4 75 2 534 4 536 2 322 12 94 6 538 6 537 6 323 2 542 2 781 2 543 2 99 10 782 2 789 24 330 6 790 2 108 4 109 6 336 52 556 6 338 2 558 2 115 4 563 4 342 2 116 2 117 6 564 2 119 8 802 2 568 12 803 2 569 2 806 4 349 6 350 8 351 2 352 10 811 2 355 2 814 4 815 2 358 4 820 2 574 6 130 10 131 2 133 4 827 2 580 2 583 2 363 2 584 2 585 6 135 8 586 6 831 4 835 2 370 2 372 2 839 12 144 2 143 2 146 2 591 2 154 2 851 2 854 2 162 4 164 2 173 2 614 6 618 2 872 4 404 2 182 2 187 6 409 2 189 2 190 2 410 4 411 12 882 6 634 6 415 2 889 2 206 2 420 6 897 2 898 4 647 2 212 2 650 12 651 2 424 2 654 2 431 2 659 4 433 2 664 2 434 6 435 2 223 16 436 4 670 4 674 4 228 2 229 2 230 2 441 6 916 4 445 2 449 2 237 2 696 2 926 4 925 2 927 2 453 4 454 2 456 6 242 6 
461 2 659 4 410 2 433 2 514 2 130 6 223 4 131 2 330 4 498 2 670 4 253 2 415 2 8 2 258 2 584 2 336 4 135 2 441 2 558 2 445 2 117 6 173 2 898 4 478 2 716 2 591 2 872 2 696 2 744 2 651 2 453 2 352 6 296 2 781 2 
461 2 358 4 2 2 247 2 130 6 131 2 253 2 6 6 8 2 258 2 9 2 584 2 135 2 831 3 138 2 707 3 13 8 372 2 263 2 143 2 478 2 716 2 591 2 488 4 851 2 158 2 272 2 498 2 162 4 164 2 47 6 281 2 501 2 51 6 504 2 173 2 285 2 54 2 872 2 618 2 508 2 744 2 404 2 296 2 182 2 627 2 189 2 190 2 410 2 514 2 191 2 195 2 415 2 81 2 897 2 651 2 906 3 781 2 431 2 659 4 433 2 665 2 223 4 789 24 330 2 670 4 790 2 108 4 336 28 441 2 916 2 338 2 445 2 558 2 342 2 116 2 117 6 564 2 119 6 449 2 237 2 803 2 806 4 349 4 926 3 696 2 453 2 352 6 351 2 
744 2 781 2 732 2 
744 2 781 2 732 2 
814 4 358 4 249 4 2 2 247 2 130 12 133 4 466 2 253 4 826 2 6 6 258 4 8 2 135 4 13 2 371 2 372 2 17 2 144 2 143 2 843 2 480 4 718 2 488 4 851 2 35 2 39 2 498 2 162 4 164 2 47 2 281 2 501 2 732 2 51 6 285 2 286 2 401 2 54 2 618 2 872 2 57 2 508 2 744 6 404 2 297 4 296 2 182 2 304 2 409 2 190 2 410 2 514 2 412 2 534 4 897 2 91 2 898 4 93 4 903 2 651 2 904 2 779 2 781 4 656 2 99 4 431 2 659 4 550 4 551 2 789 16 223 16 330 6 553 4 790 2 670 4 437 2 674 4 675 2 108 4 336 24 441 4 555 2 556 2 916 6 338 2 115 2 563 2 342 2 116 2 117 6 564 2 119 2 449 2 237 2 803 2 569 4 806 4 240 2 926 2 351 2 352 12 453 4 454 2 811 4 243 2 
750 2 115 2 276 2 789 2 496 2 603 2 826 2 827 2 779 2 336 4 281 2 488 2 501 2 64 2 556 2 243 2 748 2 
814 4 358 4 249 4 2 2 247 2 130 12 133 4 466 2 253 4 826 2 6 6 258 4 8 2 135 4 136 2 13 2 372 2 836 2 17 2 144 2 143 2 843 1 480 4 718 4 488 2 851 2 273 2 35 2 39 2 498 2 162 4 164 2 48 2 47 2 281 2 732 2 51 6 285 2 286 2 401 2 54 2 872 2 618 2 57 2 508 2 744 6 404 2 297 4 296 2 182 2 304 2 409 2 190 2 410 2 514 2 412 2 534 4 321 2 897 2 91 2 898 4 93 4 903 2 651 2 779 2 781 4 656 2 99 4 431 2 659 4 550 4 789 16 223 16 330 6 553 4 790 2 670 4 437 4 674 4 675 2 108 4 336 24 441 4 556 2 916 6 338 2 563 2 342 2 116 2 117 6 564 2 119 2 449 2 237 2 803 2 569 4 806 4 240 2 926 4 351 2 352 12 453 4 454 2 811 4 812 2 243 2 
814 4 358 4 249 4 2 2 247 2 130 12 133 4 466 2 253 4 826 2 6 6 258 4 8 2 135 4 13 2 372 2 17 2 144 2 143 2 843 1 480 4 718 4 488 4 851 2 855 2 273 2 35 2 39 2 498 2 162 4 164 2 47 2 281 2 501 2 732 2 51 6 285 2 286 2 401 2 54 2 178 2 618 2 872 2 57 2 508 2 744 6 404 2 297 4 296 2 182 2 304 2 409 2 190 2 410 2 753 2 514 2 412 2 893 2 534 4 897 2 91 2 898 4 93 4 903 2 777 2 651 2 779 2 781 4 656 2 99 4 431 2 659 4 550 4 789 16 223 16 330 6 553 4 790 2 670 4 437 2 674 4 675 2 108 4 336 24 441 4 556 2 916 6 338 2 115 2 563 2 342 2 116 2 117 6 564 2 119 2 449 2 237 2 803 2 569 4 806 4 240 2 926 2 351 2 352 12 453 4 454 2 811 4 243 2 
460 2 127 6 815 2 358 4 246 2 249 2 128 2 2 2 247 2 250 2 361 2 578 2 6 6 581 2 260 2 831 2 467 2 139 2 707 2 13 8 835 2 588 2 372 2 837 2 143 2 18 2 843 2 486 2 26 2 488 2 723 2 851 2 28 2 852 2 857 2 37 2 41 2 162 4 164 2 46 2 47 6 166 2 281 2 733 2 612 2 51 6 171 2 285 2 869 2 54 2 291 2 292 2 618 2 508 2 404 2 406 2 181 2 182 2 301 2 189 2 190 2 194 2 879 2 881 2 313 4 888 2 206 2 532 2 88 2 897 2 647 2 648 2 649 2 98 2 218 2 99 2 220 1 910 2 664 2 789 20 436 2 790 2 911 4 672 2 227 2 913 6 108 4 336 26 678 2 916 2 338 2 444 2 799 4 342 2 116 2 343 2 564 2 119 6 237 2 803 2 806 4 239 2 349 4 926 2 809 2 
189 2 858 2 789 2 107 2 528 2 47 2 336 2 831 3 531 2 707 3 366 2 685 2 13 2 12 2 16 2 119 2 717 2 845 3 349 2 743 2 926 3 907 2 723 6 305 4 
189 2 858 2 789 2 107 2 528 2 47 2 336 2 831 2 531 2 707 2 366 2 685 2 13 2 12 2 16 2 119 2 717 2 845 2 349 2 743 2 926 2 907 2 723 6 305 4 
189 2 858 2 789 2 107 2 528 2 47 2 336 2 831 2 531 2 707 2 366 2 685 2 13 2 12 2 16 2 119 2 717 2 845 2 349 2 743 2 926 2 907 2 723 6 305 4 
65 2 188 4 189 2 245 2 193 3 194 2 879 2 823 2 313 4 260 2 767 4 416 6 707 3 13 2 419 3 896 2 88 2 590 2 774 2 213 2 151 4 26 2 218 2 600 4 789 4 671 4 105 3 913 6 729 2 336 10 685 2 688 2 238 2 348 2 451 2 926 3 58 2 928 2 807 4 181 2 
65 2 188 4 189 2 245 2 193 2 194 2 879 2 71 2 823 2 313 4 260 2 767 4 416 6 707 2 13 2 419 2 896 2 88 2 590 2 774 2 213 2 151 4 26 2 218 2 600 4 789 4 671 4 105 2 913 4 729 2 336 10 168 2 442 2 685 2 688 2 238 2 348 2 451 2 926 2 58 2 928 2 807 4 181 2 
65 2 188 4 189 2 245 2 193 2 194 2 879 2 71 2 823 2 313 4 260 2 767 4 416 6 707 2 13 2 419 2 896 2 88 2 590 2 774 2 213 2 151 4 26 2 218 2 600 4 789 4 671 4 105 2 913 4 729 2 336 10 168 2 442 2 685 2 688 2 238 2 348 2 451 2 926 2 58 2 928 2 807 4 181 2 
65 2 188 4 189 2 245 2 193 2 194 2 879 2 71 2 823 2 313 4 260 2 767 4 416 6 707 2 13 2 419 2 896 2 88 2 590 2 774 2 213 2 151 4 26 2 218 2 600 4 789 4 671 4 105 2 913 4 729 2 336 10 168 2 442 2 685 2 688 2 238 2 348 2 451 2 926 2 58 2 928 2 807 4 181 2 
65 2 188 4 189 2 245 2 193 2 194 2 879 2 71 4 823 2 313 4 260 2 767 4 416 6 707 2 13 2 419 2 896 2 88 2 590 2 774 2 213 2 151 4 26 2 218 2 600 4 789 4 671 4 105 2 913 4 729 2 336 10 168 4 442 4 685 2 688 2 238 2 348 2 451 2 926 2 58 2 928 2 807 4 181 2 
179 2 800 2 579 2 160 2 730 2 400 2 
160 2 246 2 332 2 45 2 458 2 356 2 347 2 
492 1 512 1 31 2 462 2 789 8 758 2 360 1 312 2 390 2 830 2 336 10 11 1 768 2 50 2 710 2 687 2 714 2 176 2 901 2 650 2 404 2 60 2 25 2 848 2 657 1 724 2 
357 2 194 6 879 6 789 6 71 2 911 4 913 16 46 2 313 12 336 6 467 2 260 6 113 2 168 4 114 2 442 2 202 2 444 2 373 2 641 2 837 2 840 2 88 6 294 2 928 2 151 4 26 6 181 6 218 6 124 4 
865 2 188 2 642 2 754 2 464 1 565 2 789 1 329 7 310 2 775 2 671 2 380 2 389 2 793 2 807 2 336 1 797 2 141 4 
865 4 188 2 642 2 754 2 565 4 329 6 310 2 775 4 671 2 380 2 389 2 793 2 807 2 797 2 141 4 
865 8 188 2 642 6 754 8 464 1 565 8 789 1 329 10 310 2 775 8 671 2 380 2 389 2 793 2 807 2 336 1 797 2 141 4 
865 2 188 2 565 2 329 2 310 2 775 2 671 2 380 2 389 2 793 2 807 2 797 2 141 2 
309 2 249 2 635 1 209 2 378 2 149 1 431 2 910 2 789 6 162 2 226 2 336 6 683 2 51 6 564 2 54 2 618 2 806 2 351 2 406 2 
1 2 67 2 702 2 752 4 821 2 309 2 249 38 824 2 465 2 760 2 703 2 4 2 704 2 134 2 7 2 526 2 764 2 582 2 529 4 530 2 587 2 367 2 262 2 205 2 209 2 86 2 589 2 145 2 89 2 842 4 843 2 899 2 149 2 541 4 652 2 97 2 216 2 153 2 155 2 427 2 850 2 384 4 29 6 658 4 101 2 387 2 662 6 34 2 222 2 726 4 549 2 667 2 789 44 224 2 669 2 162 20 226 2 279 2 334 6 336 46 610 2 864 2 683 2 398 2 686 2 918 2 234 2 51 42 399 2 52 2 344 2 567 2 564 2 801 2 505 2 120 2 450 2 868 2 54 2 618 2 690 2 621 2 806 20 241 2 699 2 697 2 353 2 875 2 125 2 126 4 
700 2 702 2 701 2 821 6 249 15 129 2 824 6 825 4 362 2 256 2 582 1 364 2 365 2 262 6 843 1 267 2 149 6 21 6 597 2 719 2 384 4 157 2 29 10 856 2 726 4 34 2 495 2 44 2 162 20 279 4 397 2 864 4 51 39 399 2 53 2 54 4 741 2 177 2 618 2 406 2 407 8 299 2 184 2 749 2 628 2 752 4 309 2 878 2 755 8 886 2 76 2 529 3 638 2 205 2 207 2 84 2 894 2 209 2 86 2 899 2 652 2 778 8 97 2 327 6 430 2 431 3 910 2 549 2 789 40 552 2 912 2 226 2 791 2 336 44 110 2 796 2 683 2 339 2 344 6 564 4 345 2 806 18 699 2 351 3 
68 2 752 4 309 2 249 12 824 2 526 2 529 2 367 2 205 2 86 2 209 2 899 2 843 2 378 2 149 2 596 2 652 2 97 2 217 2 384 4 850 2 430 2 29 6 431 5 910 8 726 4 34 2 549 2 789 20 162 10 226 2 279 2 334 2 336 22 610 2 683 2 864 2 398 2 51 33 399 2 564 2 120 2 450 2 54 2 618 2 806 10 403 2 697 2 351 5 406 2 303 2 
470 2 

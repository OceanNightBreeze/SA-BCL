#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 235 124 53 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 320 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 89 106 299 139 334 126 65 165 473 256 25 24 318 383 225 386 178 535 214 509 67 219 116 527 307 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 162 407 
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 162 407 367 
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException (294,403) 290 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 433 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 433 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 433 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 433 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 433 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 264 76 316 368 98 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 12 44 222 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 12 44 222 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 12 44 222 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 12 44 222 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:gte(II)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGT([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:negate(I)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_2_10(I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_119()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:setEqual([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3_27()Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_135()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaCharStream:BeginToken()C
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_80()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:gt(II)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_75()Z
daikon.ValueTuple:isMissing(I)Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:lte(II)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getEndLine()I
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_47()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ModBitTracker:num_sets()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_1()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_3_21()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_117()Z
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:size()I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression; | RETURN | 81894 | return null
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
daikon.Quant:eltwiseEqual([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3_22()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:eltsEqual([II)Z
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 41870 | != -> >=
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_2_12(I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3R_77()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:slice([III)[I
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:memberOf(S[S)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3R_97()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:intern([I)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3_10()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_118()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaCharStream:backup(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaCharStream:readChar()C
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3R_69()Z
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
jtb.JavaParser:jj_3_30()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3_29()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_76()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.Quant:eq(DD)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern:intern([D)[D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:union([I[I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3_3()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_126()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object; | RETURN | 32728 | return null
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_51()Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:concat([I[I)[I
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3_13()Z
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:jj_3_5()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_2_21(I)Z
utilMDE.MathMDE:pow(II)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_120()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_4()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eq(FF)Z
utilMDE.WeakHasherMap:size()I
daikon.Quant:memberOf(J[J)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3_25()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_60()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:memberOf(F[F)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_85()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3_36()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_68()Z
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_49()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.MathMDE:modulus([I)[I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gt(DD)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
552 2 355 2 286 4 482 2 519 2 558 2 499 2 189 2 361 2 
158 2 196 2 143 2 232 2 198 2 297 6 408 6 279 2 289 6 60 2 271 2 
298 4 245 6 148 4 149 2 558 2 94 6 249 6 459 2 564 2 482 2 461 2 104 2 20 6 
277 2 315 26 3 4 317 10 4 2 541 6 403 2 442 2 250 6 446 4 482 6 80 2 485 4 294 4 373 10 55 8 556 12 343 16 494 29 558 6 190 8 262 8 102 10 268 16 507 16 309 2 68 2 200 10 569 10 168 8 
125 4 308 6 
468 2 
355 2 439 2 357 2 514 2 283 4 516 2 79 2 365 2 13 2 450 2 518 2 17 2 157 2 453 2 292 2 159 4 526 2 384 2 33 2 309 2 466 4 392 4 534 2 476 2 324 2 114 2 482 4 326 2 409 2 51 2 549 2 550 2 332 2 254 2 333 2 119 2 491 2 340 2 498 2 558 4 424 2 132 2 506 2 508 2 
169 2 109 2 399 4 315 48 317 16 541 4 75 4 7 2 363 4 250 4 446 2 448 6 482 4 288 4 327 4 80 2 328 8 451 4 220 2 296 6 373 16 55 18 224 6 343 32 556 22 494 54 558 4 190 6 191 2 423 6 102 16 62 6 268 32 303 4 507 32 200 16 105 6 107 2 569 6 
85 2 33 2 388 2 
70 2 513 2 375 2 172 2 498 2 406 2 153 2 366 2 216 22 391 2 38 2 84 10 570 2 205 2 
170 2 144 2 315 4 317 2 5 2 285 2 250 2 446 2 287 2 179 2 373 2 55 2 556 2 259 2 343 2 494 6 455 2 102 2 63 2 268 2 507 2 200 2 569 4 
373 4 3 2 315 12 556 4 317 4 343 8 494 16 58 2 75 4 423 6 102 4 268 8 303 4 329 2 507 8 200 4 105 6 
207 2 238 2 443 2 447 2 215 36 486 4 550 2 19 2 53 2 85 4 159 2 124 2 417 2 258 2 28 2 342 6 422 2 559 2 560 2 230 2 500 2 301 2 263 2 380 4 562 2 33 6 565 2 197 2 387 2 388 2 235 2 272 10 511 2 
468 2 397 2 209 2 325 2 181 2 553 2 255 2 228 2 229 2 311 2 
517 2 320 2 184 2 362 2 
306 2 558 2 
233 2 539 2 558 4 
1 2 
0 2 276 4 2 24 280 10 281 48 8 4 6 2 10 8 16 2 291 2 293 4 21 2 22 2 24 2 25 2 27 2 29 4 300 2 299 2 30 8 302 8 35 26 34 8 36 2 304 2 307 2 305 2 39 2 40 2 312 2 41 2 318 2 321 22 43 4 47 48 49 2 50 2 330 2 334 2 338 2 337 2 336 2 339 190 57 2 345 2 59 2 346 12 61 48 349 2 350 2 64 6 351 2 65 2 66 48 67 2 352 2 353 6 354 14 356 2 71 8 74 22 78 48 77 2 81 48 82 4 371 2 86 2 374 22 89 2 376 2 91 2 90 2 378 2 97 4 95 48 379 2 383 2 386 2 389 4 390 4 103 36 394 2 393 8 106 2 108 2 395 2 396 2 400 42 111 2 113 2 405 2 116 2 410 8 117 2 118 26 120 4 122 2 415 2 123 2 416 2 127 4 126 2 421 2 128 2 129 2 425 2 426 2 427 2 134 8 430 8 432 2 136 2 138 28 435 146 139 2 437 4 436 2 438 2 147 4 441 4 444 20 150 4 151 4 152 2 449 2 154 2 452 14 160 2 161 2 165 2 458 36 460 2 463 2 464 2 167 22 467 2 469 4 471 2 473 2 173 20 475 4 479 4 478 8 174 36 480 2 175 8 176 4 177 4 481 16 484 2 178 2 182 2 487 6 185 48 186 2 187 2 488 4 490 14 492 8 495 4 496 4 195 2 502 4 194 2 505 2 199 48 201 4 202 18 509 2 208 14 512 2 515 4 214 2 520 2 524 2 218 48 219 2 221 4 225 2 227 2 527 2 529 4 231 2 530 2 531 48 234 2 533 2 237 146 240 48 535 2 537 4 244 6 538 6 540 16 246 4 542 4 544 2 545 2 546 4 547 14 548 4 253 2 551 2 256 2 554 2 257 6 555 2 557 4 561 2 261 8 265 48 266 10 567 4 270 146 568 4 
504 2 344 2 474 2 96 1 
344 2 137 2 
294 2 193 2 110 2 33 2 344 2 166 2 457 2 
32 2 344 2 166 2 
414 2 344 2 166 2 
48 2 429 2 504 2 
344 2 166 2 
429 2 206 2 
344 2 322 2 
429 2 504 2 323 2 
9 2 504 2 15 2 
504 2 72 2 369 2 
381 2 504 2 92 2 
413 2 504 2 156 2 
429 2 163 2 
140 2 344 2 
9 2 411 2 
72 2 212 2 
11 2 92 2 
156 2 359 2 
429 2 171 2 
156 2 493 2 
92 2 404 2 
99 2 72 2 
9 2 211 2 
429 2 504 2 226 2 323 2 
429 2 504 2 226 2 521 2 323 2 
348 2 429 2 504 2 
429 2 504 2 93 2 
314 2 440 2 364 2 483 2 
162 2 407 2 
162 2 407 2 367 2 
294 2 290 2 
326 2 135 2 
294 2 110 2 33 2 236 2 
69 2 92 2 
156 2 260 2 
9 2 382 2 
428 2 72 2 
146 2 156 2 72 2 
156 2 462 2 72 2 
156 2 52 2 72 2 
385 2 156 2 72 2 
110 2 319 2 331 6 335 2 54 2 412 2 223 6 33 2 
429 2 282 2 
241 2 313 4 489 2 42 2 454 2 188 2 210 2 456 2 477 2 192 2 501 2 115 2 503 2 216 6 180 2 522 2 465 4 274 2 
504 2 273 2 
402 2 
517 2 433 2 184 2 362 2 
517 2 433 2 184 2 362 2 
239 2 183 2 217 2 
239 2 183 2 217 2 
517 2 433 2 184 2 362 2 
517 2 433 2 184 2 362 2 
517 2 433 2 184 2 362 2 
523 2 398 2 316 2 401 2 112 2 558 4 362 2 248 2 76 2 264 2 98 2 517 2 252 2 269 2 368 2 184 2 
45 2 295 2 251 2 472 2 360 2 284 2 
45 2 536 2 145 2 14 2 37 2 358 2 341 2 
238 1 142 2 243 2 278 2 543 2 213 2 482 8 155 1 23 2 525 1 26 2 56 2 164 2 87 2 88 2 420 2 422 1 497 2 558 10 31 2 101 2 100 2 267 2 566 1 510 2 275 2 
470 2 399 2 315 12 317 6 541 2 73 2 75 2 46 2 448 4 482 6 328 2 17 2 18 2 83 2 373 6 343 6 494 17 558 6 130 2 190 4 132 2 102 6 268 6 507 6 200 6 310 2 105 4 
121 2 370 2 242 2 372 2 418 2 247 2 377 7 558 1 131 2 347 2 528 2 445 2 133 2 563 4 482 1 532 2 203 1 204 2 
121 2 370 2 372 2 242 2 418 4 247 2 377 6 347 2 131 4 528 4 445 2 133 2 563 4 532 2 204 2 
121 2 370 2 372 8 242 2 418 8 247 2 377 10 558 1 347 2 131 8 528 8 445 2 133 2 563 4 482 1 532 6 203 1 204 2 
121 2 370 2 242 2 418 2 247 2 377 2 347 2 131 2 528 2 445 2 133 2 563 2 204 2 
141 1 12 2 222 2 44 2 482 2 558 2 431 2 434 1 
44 2 482 2 222 2 12 2 431 2 558 2 
44 2 482 2 222 2 12 2 431 2 558 2 
44 2 482 2 222 2 12 2 431 2 558 2 
419 2 

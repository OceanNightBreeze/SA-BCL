#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 146 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 835 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 146 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (294,449) (294,449) 346 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 661 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 785 243 191 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (294,449) (294,449) 232 229 766 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.UnsupportedOperationException 770 770 31 232 229 766 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONDITION | 19149 | if (x) -> if (!x)
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2124 | return null
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptName:isEnterPoint()Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaCharStream:getEndColumn()I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptSlice1:arity()I
utilMDE.Intern:intern([D)[D
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaCharStream:backup(I)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.MathMDE:gcd([I)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1211 | = null
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:concat([I[I)[I
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:eltsLT([II)Z
utilMDE.Intern:intern([J)[J
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:union([I[I)[I
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:memberOf(D[F)Z
daikon.ProglangType:isArray()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Slice:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariants:Invariants()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:sameLength([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant:logOn()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eq(DD)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | CONSTANT | 55424 | 2 -> 1
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:lt(II)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107170 | = null
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Debug:logDetail()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.PptSlice0:arity()I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:gte(II)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseGTE([I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object; | RETURN | 76505 | return null
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | STATEMENT | 54139 | stmt -> ;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Ppt:Ppt()V
daikon.Quant:setEqual([I[I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:isReverse([I[I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:gt(II)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:noDups([I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3_16()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:eq(II)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.Node:Node()V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 13645 | = null
daikon.Debug:logOn()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:eltsLTE([II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
312 4 294 2 744 2 313 2 449 2 435 2 391 2 410 2 364 2 
475 2 28 2 511 6 340 2 179 2 456 2 44 6 413 2 367 2 325 2 283 6 
294 2 349 2 449 2 487 6 828 6 53 2 336 2 571 4 415 2 416 6 230 4 817 6 705 2 
22 4 781 12 449 6 580 8 753 10 424 8 277 16 460 16 557 2 791 10 132 2 153 4 155 8 704 2 740 26 85 10 294 6 707 8 384 10 235 2 652 29 598 2 657 2 114 10 541 4 198 4 302 2 576 16 240 6 263 6 
510 4 611 6 
552 2 
781 2 453 2 753 2 460 2 277 2 791 2 153 2 155 2 188 2 382 2 740 4 85 2 406 2 384 2 192 2 652 6 772 2 570 2 114 4 240 2 576 2 633 2 97 2 
85 4 175 6 781 5 384 4 753 4 652 14 366 4 460 8 277 8 717 2 54 4 541 2 791 4 803 2 576 8 663 6 740 12 
146 2 593 2 137 2 49 2 422 2 516 2 539 2 458 2 129 2 92 2 572 2 373 2 241 6 
50 2 552 2 835 2 443 2 71 2 701 2 734 2 617 2 
202 2 449 4 353 2 51 2 614 4 249 2 674 2 794 2 509 2 512 2 513 2 111 2 165 2 515 2 516 2 744 2 368 2 261 2 370 2 371 2 265 2 331 2 477 2 127 2 282 2 428 2 337 2 643 2 83 2 703 2 133 4 533 2 294 4 136 2 767 2 710 4 535 2 88 4 830 2 140 2 774 2 602 2 302 2 47 2 
809 4 664 8 781 23 175 6 449 4 753 16 424 6 277 32 460 32 248 4 54 4 791 16 183 6 81 2 642 4 153 2 155 18 287 2 740 48 85 16 294 4 384 16 799 2 825 6 360 4 195 6 652 54 598 2 366 4 714 2 114 6 776 2 169 2 96 4 524 6 576 32 663 6 240 4 263 4 
146 2 
690 2 386 2 653 2 396 2 568 22 472 2 493 2 226 10 217 2 429 2 328 2 120 2 819 2 533 2 
306 2 724 2 499 2 500 2 99 2 612 2 725 6 311 2 729 1 5 2 503 1 6 3 7 2 505 2 205 2 733 28 104 1 314 2 315 3 738 2 621 2 12 2 109 2 408 2 409 19 13 2 742 2 743 2 113 1 517 2 745 4 324 2 118 2 119 2 628 1 219 2 18 1 634 2 26 2 223 19 30 1 528 2 530 2 644 25 532 2 35 2 763 2 339 14 433 3 435 2 341 1 42 3 655 6 45 2 660 4 543 2 346 2 662 2 143 2 547 2 449 30 550 1 454 3 788 2 554 2 148 2 247 2 556 2 355 2 558 14 561 2 60 2 793 14 796 1 468 2 359 4 63 3 564 2 255 1 163 6 64 2 569 4 802 2 804 2 685 4 474 5 264 2 74 3 579 2 176 2 76 2 375 3 268 2 693 2 582 3 698 2 275 1 278 2 585 2 587 2 285 1 292 1 294 32 295 1 596 2 712 1 490 6 492 2 833 14 836 2 601 2 93 2 720 2 604 2 305 1 
625 2 
294 2 404 2 
294 4 716 2 555 2 
609 2 350 2 395 2 452 2 551 38 102 2 52 2 730 12 672 2 57 2 207 4 106 2 318 6 797 8 213 2 626 12 321 10 112 12 322 4 518 2 801 4 326 4 72 2 172 2 523 4 627 12 73 4 749 2 372 12 578 8 20 12 374 4 752 18 691 2 581 2 333 10 479 8 755 2 270 10 272 38 425 4 279 2 131 2 34 2 702 12 284 10 762 2 431 4 646 4 765 8 650 2 769 38 654 8 388 12 656 4 89 12 600 2 540 2 345 2 300 2 199 4 303 6 392 12 496 2 723 12 607 2 
808 2 380 2 221 2 190 1 
808 2 19 2 
808 2 832 2 22 2 316 2 441 2 583 2 516 2 
808 2 832 2 726 2 
808 2 832 2 741 2 
563 2 760 2 380 2 
808 2 832 2 
563 2 252 2 
808 2 816 2 
563 2 380 2 620 2 
680 2 380 2 238 2 
497 2 380 2 792 2 
610 2 380 2 696 2 
545 2 380 2 430 2 
563 2 56 2 
808 2 286 2 
680 2 414 2 
307 2 792 2 
815 2 696 2 
684 2 430 2 
563 2 529 2 
430 2 186 2 
696 2 715 2 
792 2 197 2 
680 2 394 2 
69 2 563 2 380 2 620 2 
69 2 563 2 586 2 380 2 620 2 
563 2 380 2 250 2 
563 2 380 2 795 2 
222 2 565 2 164 2 121 2 
103 2 441 2 251 2 516 2 
103 2 298 2 316 2 441 2 251 2 516 2 
808 2 832 2 22 2 149 2 441 2 516 2 
798 2 282 2 
22 2 441 2 516 2 432 2 
162 2 696 2 
62 2 430 2 
680 2 262 2 
792 2 838 2 
792 2 437 2 430 2 
810 2 792 2 430 2 
299 2 792 2 430 2 
592 2 792 2 430 2 
476 2 671 6 11 2 61 2 161 6 194 2 441 2 516 2 
563 2 484 2 
330 2 636 2 361 4 351 2 423 4 568 6 470 2 757 2 746 2 369 2 675 2 338 2 807 2 187 2 134 2 233 2 739 2 751 2 
380 2 184 2 
5 2 
0 4 612 2 725 6 311 2 613 2 728 2 7 2 205 2 732 2 733 6 314 2 615 4 206 2 105 8 616 8 743 6 15 2 745 4 219 2 18 2 634 2 635 4 29 2 130 2 644 4 532 2 231 4 35 2 764 2 648 2 649 2 435 2 768 4 341 2 41 4 655 4 659 2 660 4 346 2 544 4 449 26 666 2 554 2 247 2 790 4 673 4 464 4 158 2 468 2 359 4 254 2 163 2 64 2 802 2 804 2 685 4 686 2 574 2 264 2 176 2 812 2 76 2 693 2 276 4 585 2 281 2 821 2 294 26 596 2 490 2 829 2 492 2 833 6 836 2 95 2 720 2 
0 4 612 2 725 6 311 2 613 2 728 2 7 2 205 2 732 2 733 6 314 2 615 4 206 2 105 8 616 8 743 6 15 2 745 4 219 2 18 2 634 2 525 2 635 4 29 2 130 2 644 4 532 2 231 4 35 2 764 2 649 2 435 2 768 4 341 2 41 4 655 6 659 2 660 4 346 2 544 4 449 26 666 2 787 2 554 2 247 2 673 4 464 4 468 2 359 4 254 2 163 2 64 2 802 2 804 2 685 4 686 2 574 2 264 2 176 2 76 2 693 2 276 4 278 2 585 2 281 2 821 2 294 26 708 2 596 2 490 2 829 2 492 2 833 6 90 2 836 2 93 2 95 2 720 2 
591 2 
75 2 826 2 
608 2 498 2 549 2 449 6 48 2 612 2 204 2 725 4 456 2 354 2 727 2 247 2 731 2 205 2 151 8 9 2 736 10 356 2 677 8 208 2 506 2 679 2 511 6 359 2 259 2 258 4 683 2 216 2 16 2 520 2 367 4 325 4 802 2 327 2 685 2 171 4 577 2 475 2 76 2 480 2 271 2 482 2 335 2 378 2 283 6 531 2 82 2 532 2 818 4 84 4 822 2 294 12 823 4 596 2 44 6 142 2 775 2 495 2 722 4 348 2 
608 2 498 2 449 6 549 2 451 4 612 2 204 2 725 4 456 2 354 2 727 2 247 2 731 2 205 2 151 8 9 2 736 10 356 2 677 8 208 2 506 2 679 2 359 2 511 6 259 2 258 4 413 2 683 2 216 2 16 2 520 2 367 4 325 4 802 2 327 2 685 2 171 4 577 2 475 2 76 2 480 2 271 2 482 2 335 2 378 2 283 8 531 2 645 2 82 2 532 2 818 4 84 4 822 2 294 12 823 4 596 2 44 8 142 2 495 2 722 4 606 2 348 2 
823 4 498 2 511 2 549 2 480 2 354 2 683 2 482 2 16 2 520 2 325 2 367 2 283 2 171 2 495 2 356 2 818 4 822 2 
608 2 498 2 549 2 449 6 48 2 612 2 204 2 725 4 456 2 354 2 727 2 247 2 731 2 205 2 151 4 9 2 736 6 356 2 677 4 208 2 506 2 679 2 511 4 359 2 259 2 258 4 413 2 683 2 216 2 16 2 520 2 367 4 325 4 802 2 327 2 685 2 171 4 577 2 76 2 480 2 271 2 482 2 335 2 378 2 283 6 531 2 82 2 532 2 818 4 84 4 822 2 294 12 823 4 596 2 44 6 142 2 775 2 495 2 722 4 348 2 
608 2 498 2 549 2 449 6 48 2 612 2 204 2 725 4 456 2 354 2 727 2 247 2 731 2 205 2 151 4 9 2 736 6 356 2 677 4 208 2 506 2 679 2 511 6 359 2 259 2 258 4 683 2 216 2 16 2 520 2 367 4 325 4 802 2 327 2 685 2 171 4 577 2 28 2 76 2 480 2 271 2 482 2 335 2 378 2 283 4 531 2 82 2 532 2 818 4 84 4 822 2 294 12 823 4 596 2 44 6 142 2 775 2 495 2 722 4 348 2 
608 2 498 2 549 2 449 6 48 2 612 2 204 2 725 4 456 2 354 2 727 2 247 2 731 2 205 2 151 8 9 2 736 6 356 2 677 4 208 2 506 2 679 2 511 6 359 2 259 2 258 4 683 2 216 2 16 2 520 2 367 4 325 4 802 2 327 2 685 2 171 4 577 2 475 2 76 2 480 2 271 2 482 2 335 2 378 2 283 6 531 2 82 2 532 2 818 4 84 4 822 2 294 12 823 4 596 2 44 6 142 2 775 2 495 2 722 4 348 2 
608 2 498 2 549 2 449 6 48 2 612 2 204 2 725 4 456 2 354 2 727 2 247 2 731 2 205 2 151 8 9 2 736 10 356 2 677 8 208 2 506 2 679 2 359 2 511 8 259 2 258 4 683 2 216 2 16 2 520 2 367 4 325 4 802 2 327 2 685 2 171 4 577 2 475 2 28 2 76 2 480 2 271 2 482 2 335 2 378 2 283 6 531 2 82 2 532 2 818 4 84 4 822 2 294 12 823 4 596 2 44 8 142 2 775 2 495 2 722 4 348 2 
608 2 498 2 549 2 449 6 48 2 612 2 204 2 725 4 456 2 354 2 727 2 247 2 731 2 205 2 151 8 9 2 736 10 356 2 677 8 208 2 506 2 679 2 511 6 359 2 259 2 258 4 683 2 216 2 16 2 520 2 367 4 325 4 802 2 327 2 685 2 171 4 577 2 475 2 76 2 480 2 271 2 482 2 335 2 378 2 283 6 531 2 82 2 532 2 818 4 84 4 822 2 294 12 823 4 596 2 44 6 142 2 775 2 495 2 722 4 348 2 
608 4 0 2 203 1 612 2 204 2 7 2 205 2 9 2 616 2 208 2 619 8 404 6 405 2 622 4 625 6 412 1 215 2 216 2 16 2 219 2 632 2 634 2 25 6 28 4 419 2 27 6 29 2 638 2 426 1 227 2 427 2 644 2 35 2 37 6 435 2 651 2 41 2 655 6 44 12 239 2 660 4 449 24 48 2 456 4 247 2 459 2 670 2 462 2 673 4 679 2 468 2 64 2 681 2 259 2 258 6 66 1 683 2 67 1 685 4 686 2 687 2 264 2 76 2 478 2 693 2 480 2 271 2 697 6 278 2 482 2 283 4 82 2 288 2 84 4 294 46 706 2 486 7 490 2 713 6 492 2 716 6 491 2 297 1 93 2 95 4 720 2 495 2 722 8 498 2 98 6 308 6 725 6 311 2 727 2 731 4 733 8 314 2 105 2 736 2 506 2 511 8 107 2 743 6 519 2 745 4 520 2 325 4 327 2 122 4 124 2 526 2 128 6 335 2 531 2 532 2 768 2 773 6 142 2 344 2 346 2 347 2 348 2 549 2 548 2 352 6 354 2 554 2 790 1 151 2 154 7 356 2 359 4 163 2 800 2 802 2 367 4 804 2 171 4 173 6 573 2 577 2 176 2 178 2 181 6 377 6 585 2 378 2 379 1 189 1 818 4 820 2 822 2 823 4 385 10 596 2 831 2 833 6 836 12 837 2 200 2 393 1 
0 2 608 4 98 6 498 2 308 6 612 2 204 2 725 6 311 2 727 2 7 2 731 4 205 2 733 8 314 2 9 2 105 4 616 4 736 2 208 2 619 8 506 2 405 2 404 6 107 2 511 8 622 4 625 6 743 6 215 2 519 2 216 2 16 2 520 2 745 4 325 4 327 2 219 2 632 2 750 2 634 4 25 6 122 4 27 6 419 2 124 2 526 2 29 2 128 6 638 2 335 2 427 2 227 2 531 2 644 2 532 2 37 6 35 2 768 2 435 2 41 2 651 2 655 6 773 6 44 12 142 2 239 2 344 2 660 4 346 2 347 2 348 2 548 2 549 2 449 26 48 2 352 6 456 4 354 2 554 2 247 2 670 2 459 2 462 2 673 4 151 6 464 2 356 2 679 2 468 2 359 4 163 2 681 2 64 2 258 6 259 2 683 2 800 2 367 4 802 2 804 2 685 4 686 2 171 4 688 2 687 2 173 6 573 2 577 2 264 2 475 4 176 2 178 2 76 2 478 2 693 2 480 2 697 6 181 6 271 2 482 2 278 2 377 6 585 2 378 2 283 8 82 2 288 2 84 4 818 4 822 2 820 2 706 2 294 48 823 4 385 10 596 2 490 2 713 6 831 2 491 2 716 6 492 4 833 6 836 12 837 2 93 2 95 4 720 4 200 2 495 2 722 8 
0 2 608 4 98 6 498 2 308 6 612 2 204 2 725 6 311 2 727 2 7 2 731 4 205 2 733 8 314 2 9 2 105 4 616 4 736 6 208 2 619 8 506 2 405 2 404 6 107 2 511 8 622 4 625 6 743 6 215 2 519 2 216 2 16 2 520 2 745 4 325 4 327 2 219 2 632 2 750 2 634 4 25 6 122 4 27 6 419 2 124 2 526 2 29 2 128 6 638 2 335 2 427 2 227 2 531 2 644 2 532 2 37 6 35 2 768 2 435 2 41 2 651 2 655 6 773 6 44 12 142 2 239 2 344 2 660 4 346 2 347 2 348 2 548 2 549 2 449 26 48 2 352 6 456 4 354 2 554 2 247 2 670 2 459 2 462 2 673 4 151 6 464 2 356 2 677 4 679 2 468 2 359 4 163 2 681 2 64 2 258 6 259 2 683 2 800 2 367 4 802 2 804 2 685 4 686 2 171 4 688 2 687 2 173 6 573 2 577 2 264 2 475 4 176 2 178 2 76 2 478 2 693 2 480 2 697 6 181 6 271 2 482 2 278 2 377 6 585 2 378 2 283 8 82 2 288 2 84 4 818 4 822 2 820 2 706 2 294 48 823 4 385 10 596 2 490 2 713 6 831 2 491 2 716 6 492 4 833 6 836 12 837 2 93 2 95 4 720 4 200 2 495 2 722 8 
608 4 0 2 612 2 204 2 7 2 205 2 9 2 400 2 616 6 208 2 619 8 405 2 404 12 622 4 625 12 215 2 413 2 216 2 16 2 219 2 632 2 634 4 25 6 28 2 419 2 27 6 29 2 638 2 640 6 227 2 427 2 644 4 35 2 37 6 435 2 651 2 41 4 655 6 44 16 239 2 46 2 660 4 449 24 48 2 456 4 457 6 247 2 670 2 459 2 462 2 673 6 464 2 677 4 466 6 679 2 468 2 64 2 681 2 256 6 259 2 258 6 683 2 70 2 685 4 686 2 688 2 687 2 264 2 475 4 76 2 478 2 693 2 480 2 271 2 697 6 481 2 278 2 482 2 283 10 82 2 485 2 288 2 84 4 294 52 490 4 713 6 492 4 716 12 491 2 93 2 95 4 720 4 495 2 722 8 498 2 98 12 308 6 725 6 311 2 727 2 731 4 733 12 314 2 105 6 736 6 737 6 506 2 511 10 107 2 743 8 519 2 745 4 520 2 325 4 327 2 750 2 122 4 123 2 124 2 526 2 128 6 335 2 531 2 532 2 768 4 773 12 142 2 344 2 346 2 144 6 347 2 348 2 549 2 548 2 352 6 354 2 786 6 554 2 151 6 356 2 160 2 359 4 163 4 365 2 800 2 802 2 367 4 804 2 167 6 171 4 173 6 573 2 577 2 176 2 178 2 813 6 181 6 377 12 585 2 378 2 818 4 820 2 822 2 823 4 385 8 596 2 831 2 833 8 836 10 837 2 200 2 
475 2 549 2 48 2 456 2 354 2 482 2 151 6 378 2 283 6 531 2 736 4 82 2 356 2 84 2 677 4 208 2 818 2 822 2 294 4 679 2 823 2 511 6 258 2 44 4 259 2 142 2 683 2 216 2 520 2 367 4 325 4 327 2 722 2 577 2 348 2 
612 2 725 6 311 2 727 2 5 2 7 2 205 2 733 8 314 2 736 2 402 2 208 2 12 2 511 6 742 2 743 6 216 2 745 4 520 2 325 4 327 2 219 2 637 2 29 2 531 2 644 3 532 2 35 2 435 2 436 2 655 6 44 4 142 2 660 4 346 2 348 2 549 2 449 24 48 2 456 2 354 2 554 2 247 2 673 4 151 6 356 2 679 2 468 2 359 4 163 3 64 2 258 2 259 2 683 2 367 4 802 2 804 2 685 4 686 2 577 2 264 2 475 2 176 2 76 2 693 2 482 2 278 2 585 2 378 2 283 6 82 2 84 2 818 2 822 2 294 28 706 2 823 2 385 2 596 2 387 2 490 3 833 6 718 2 836 4 93 2 494 3 95 2 604 2 722 2 
679 2 588 2 378 2 
679 2 588 2 378 2 
608 4 0 6 498 2 2 2 612 2 204 2 725 6 311 2 7 2 731 2 205 2 733 2 314 2 10 6 399 4 736 6 506 2 511 12 622 2 110 2 743 2 15 4 413 4 216 2 745 4 520 4 325 4 17 2 630 2 219 2 634 4 122 2 28 4 29 2 644 2 761 6 532 2 35 2 39 2 435 2 651 2 537 4 655 6 342 2 44 16 142 2 660 4 780 2 447 2 449 16 549 2 456 4 554 2 247 2 151 6 560 2 156 2 677 4 679 6 468 2 358 2 359 4 64 2 258 4 802 2 367 4 804 2 685 4 686 2 171 4 264 2 176 2 475 4 76 2 177 2 77 2 693 2 480 2 271 2 274 2 278 2 482 2 585 2 280 2 588 2 378 4 283 12 288 2 818 2 84 2 294 24 823 2 385 2 596 2 713 2 831 2 492 4 833 2 836 4 93 2 95 8 720 4 722 4 
294 4 75 2 385 2 122 2 449 2 440 2 596 2 537 2 713 2 342 2 699 2 459 2 16 2 836 2 559 2 399 2 405 2 
608 4 201 2 0 6 498 2 2 2 612 2 204 2 309 2 725 6 311 2 7 2 731 4 205 2 733 2 314 2 10 6 399 4 736 6 317 2 506 2 511 12 622 2 110 2 743 2 15 4 413 4 216 2 745 4 520 4 325 4 219 2 634 4 28 4 29 2 335 2 644 4 761 6 532 2 35 2 39 2 435 2 651 2 537 4 655 6 342 2 44 16 142 2 660 4 447 2 449 16 549 2 456 4 554 2 247 2 151 6 156 2 677 4 679 6 468 2 358 2 359 4 64 2 258 4 68 2 802 2 367 4 804 2 685 4 686 2 171 4 264 2 176 2 475 4 76 2 177 2 77 4 693 2 480 2 271 2 274 2 278 2 482 2 585 2 280 2 588 2 378 4 283 12 185 2 288 2 84 2 818 2 294 24 823 2 596 2 713 2 831 2 492 4 833 2 836 2 93 2 95 8 720 4 722 4 
608 4 0 6 498 2 2 2 612 2 204 2 725 6 311 2 7 2 731 4 205 2 733 2 314 2 10 6 399 4 736 6 403 2 506 2 511 12 622 2 110 2 743 2 15 4 413 4 216 2 745 4 520 4 325 4 219 2 634 4 122 2 28 4 29 2 335 2 644 2 761 6 532 2 35 2 39 2 435 2 651 2 537 4 655 6 538 2 342 2 44 16 142 2 660 4 447 2 449 16 549 2 456 4 554 2 247 2 151 6 156 2 677 4 467 2 678 2 679 6 468 2 358 2 359 4 64 2 258 4 802 2 367 4 804 2 685 4 686 2 171 4 264 2 176 2 475 4 76 2 177 2 77 2 693 2 480 2 271 2 274 2 278 2 482 2 585 2 280 2 588 2 378 4 283 12 288 2 818 2 84 2 294 24 823 2 385 2 596 2 713 2 831 2 492 4 833 2 836 4 93 2 389 2 95 8 720 4 722 4 
661 2 
267 4 244 2 449 2 692 2 126 1 80 2 756 2 673 2 733 2 644 3 291 2 294 2 87 2 319 3 768 6 212 2 163 3 490 3 743 2 599 2 833 2 323 2 442 2 116 2 346 2 
267 4 244 2 449 2 692 2 80 2 756 2 673 2 733 2 644 2 291 2 294 2 87 2 319 2 768 6 212 2 163 2 490 2 743 2 599 2 833 2 323 2 442 2 116 2 346 2 
267 4 244 2 449 2 692 2 80 2 756 2 673 2 733 2 644 2 291 2 294 2 87 2 319 2 768 6 212 2 163 2 490 2 743 2 599 2 833 2 323 2 442 2 116 2 346 2 
811 2 449 4 753 2 245 6 180 3 789 4 424 4 460 2 277 2 639 4 397 2 791 2 733 2 463 2 644 3 793 2 740 4 85 2 293 2 562 2 294 10 86 2 339 2 384 2 253 2 439 2 652 5 490 3 257 3 411 2 442 2 719 4 346 2 390 4 329 2 629 2 605 4 576 2 263 2 446 3 
811 2 781 2 449 4 753 2 245 6 180 2 789 4 424 4 460 2 277 2 639 4 397 2 791 2 733 2 463 2 644 2 155 2 793 2 740 4 85 2 293 2 562 2 294 10 86 2 339 2 384 2 253 2 439 2 652 4 598 2 490 2 257 2 411 2 442 2 719 4 346 2 390 4 329 2 629 2 605 4 576 2 263 2 446 2 
811 2 781 2 449 4 753 2 245 6 180 2 789 4 424 4 460 2 277 2 639 4 397 2 791 2 733 2 463 2 644 2 155 2 793 2 740 4 85 2 293 2 562 2 294 10 86 2 339 2 384 2 253 2 439 2 652 4 598 2 490 2 257 2 411 2 442 2 719 4 346 2 390 4 329 2 629 2 605 4 576 2 263 2 446 2 
811 2 781 2 449 4 753 2 245 6 180 2 789 4 424 4 460 2 277 2 639 4 397 2 791 2 733 2 463 2 644 2 155 2 793 2 740 4 85 2 293 2 562 2 294 10 86 2 339 2 384 2 253 2 439 2 652 4 598 2 490 2 257 2 411 2 442 2 719 4 346 2 390 4 329 2 629 2 605 4 576 2 263 2 446 2 
811 2 781 4 449 4 753 2 245 6 180 2 789 4 424 4 460 2 277 2 639 4 397 2 791 2 733 2 463 2 644 2 155 4 793 2 740 4 85 2 293 2 562 2 294 10 86 2 339 2 384 2 253 2 439 2 652 4 598 4 490 2 257 2 411 2 442 2 719 4 346 2 390 4 329 2 629 2 605 4 576 2 263 2 446 2 
159 2 420 2 398 2 590 2 771 2 502 2 
141 2 276 2 777 2 647 2 784 2 301 2 502 2 
294 2 449 2 785 2 532 2 597 2 100 2 182 2 243 2 191 2 
664 2 175 4 781 5 448 2 332 2 449 6 3 2 477 2 753 6 695 2 424 4 277 6 460 6 791 6 155 5 740 12 294 6 85 6 384 6 360 2 139 2 210 2 195 4 827 2 652 14 598 4 515 2 366 2 776 1 576 6 263 2 
294 1 1 2 266 7 783 2 449 1 147 2 138 2 108 4 501 1 754 2 668 2 224 2 789 2 719 2 59 2 390 2 290 2 38 2 
1 2 266 6 783 4 147 4 138 2 108 4 754 4 668 2 224 2 789 2 719 2 59 2 390 2 290 2 38 2 
294 1 1 2 266 10 783 8 449 1 147 8 138 2 108 4 501 1 754 8 668 2 224 2 789 2 719 2 59 8 390 2 290 6 38 2 
1 2 266 2 783 2 147 2 138 2 108 2 754 2 668 2 224 2 789 2 719 2 390 2 38 2 
311 4 616 4 401 4 618 2 624 2 514 2 14 4 517 2 745 10 747 2 117 1 21 4 23 1 24 2 759 2 641 2 229 2 232 2 766 2 237 2 770 2 655 16 542 2 660 8 445 4 145 2 778 2 449 24 554 6 669 1 150 1 58 2 468 6 65 2 566 2 567 1 471 2 168 2 575 2 376 2 694 2 273 2 700 2 278 4 289 2 294 26 296 2 488 2 595 2 489 2 196 1 93 4 
779 2 546 2 782 2 450 2 449 44 4 2 667 2 455 6 311 2 553 2 101 2 554 2 461 4 8 4 790 2 504 2 152 2 616 38 618 2 209 2 465 2 157 4 507 2 357 2 508 2 468 2 320 2 211 2 623 2 362 2 566 2 363 4 514 2 682 2 14 6 166 2 260 2 521 2 745 20 522 2 747 4 806 2 170 2 805 2 473 2 218 2 748 6 417 2 174 2 23 2 421 2 78 2 220 2 125 2 79 2 376 2 269 2 814 2 527 2 758 2 700 2 278 2 225 4 32 2 228 2 381 2 589 2 229 2 36 2 232 2 234 2 294 46 135 2 383 2 824 2 766 2 193 2 534 2 709 2 438 2 40 2 655 44 43 2 834 2 658 4 91 2 660 20 93 2 94 2 721 2 304 2 242 4 
778 2 782 2 546 2 449 26 4 2 310 2 311 2 246 2 554 2 55 2 152 2 58 2 616 14 735 4 618 2 357 2 468 2 65 2 566 2 514 2 471 2 214 2 14 4 745 8 115 2 168 2 747 2 170 2 631 2 418 2 689 2 23 2 24 2 79 2 694 2 527 2 31 2 334 2 700 2 225 2 278 4 584 2 229 2 232 2 294 26 766 2 488 2 595 2 709 2 770 4 711 4 655 22 658 2 343 2 660 8 603 2 93 4 242 2 
665 2 782 2 546 2 449 26 667 4 311 2 554 2 669 6 790 2 150 2 152 2 676 4 616 14 618 2 507 2 357 2 468 2 407 2 469 2 211 2 624 2 566 2 514 2 14 8 745 14 521 4 747 2 806 2 117 2 473 4 748 6 417 2 174 4 23 2 125 2 700 2 225 6 278 10 641 2 33 2 381 2 229 2 289 2 232 2 294 28 135 4 434 2 766 2 236 2 534 4 594 2 196 2 536 2 770 10 655 38 658 6 660 14 93 10 94 2 444 4 242 6 145 10 
483 2 

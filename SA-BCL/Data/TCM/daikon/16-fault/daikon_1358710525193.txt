#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 188 69 718 679 563 76 369 859 959 796 38 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 308 523 358 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V FAILED junit.framework.AssertionFailedError 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 749 790 85 883 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 790 85 883 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 749 749 749 749 790 85 883 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_123()Z
daikon.ValueTuple:isMissing(I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_109()Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoAux:hashCode()I
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern:intern([I)[I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_135()Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3_19()Z
daikon.ProglangType:isArray()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:lexGT([I[I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_67()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:slice([III)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus; | RETURN | 17563 | return null
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_2_35(I)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice0:initInvariantsSeen()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Quant:gte(II)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:jj_3R_133()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_134()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3_18()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_101()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer; | RETURN | 13631 | return null
jtb.JavaParser:jj_3R_121()Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Node:Node()V
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
daikon.Quant:eq(FF)Z
daikon.Quant:lt(II)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 12386 | = null
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3_17()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:isScalar()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0:arity()I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments; | RETURN | 50313 | return null
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([J)[J
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.ProglangType:isIntegral()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_72()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:memberOf(F[D)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ProglangType:dimensions()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.RootNode:RootNode()V
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:gt(II)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:jj_3R_107()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice1:arity()I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_61()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_3R_96()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:eltsGT([II)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String; | RETURN | 23802 | return null
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_117()Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_106()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_124()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3_30()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_162()Z
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10696 | 1 -> 0
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Debug:logDetail()Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.ModBitTracker:num_samples()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_2_5(I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_118()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.Invariants:Invariants()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_3R_103()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_75()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.InvMap:InvMap()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3R_77()Z
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual; | RETURN | 1561 | return null
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.Debug:logOn()Z
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaCharStream:BeginToken()C
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:jj_3_25()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody; | RETURN | 25443 | return null
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_3R_149()Z
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_100()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:eq(II)Z
daikon.ValueTuple:size()I
daikon.Quant:eltsGTE([II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_3()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ModBitTracker:split(I)I
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_10()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_ntk()I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3_14()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:ne(II)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3_36()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_116()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_22()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 2 600 4 716 2 162 2 568 2 12 2 233 2 72 2 218 2 
307 2 629 6 768 2 48 2 524 2 487 2 928 2 860 6 422 6 256 2 332 2 
816 2 37 2 502 6 210 6 894 2 253 4 992 2 162 2 213 6 373 2 657 4 218 2 113 6 
661 2 867 2 99 16 630 10 375 16 695 2 223 4 729 12 573 4 1013 4 285 2 162 6 947 8 107 10 290 10 581 10 612 2 431 6 1022 2 18 4 710 8 49 6 714 29 473 8 300 16 565 8 794 26 901 10 336 2 218 6 
617 6 527 4 
664 2 
344 2 99 2 630 2 375 2 548 2 573 2 729 2 489 2 107 2 290 2 293 2 581 2 466 2 80 2 172 2 49 2 714 6 234 2 473 2 300 2 794 4 901 4 827 2 
99 2 630 2 800 4 375 2 249 2 714 5 729 1 1013 2 300 2 107 2 1017 2 290 2 794 4 581 2 
276 2 819 2 220 2 296 2 436 2 
186 2 664 2 453 2 667 2 668 2 518 2 462 2 203 2 780 2 1030 2 
764 4 449 2 132 2 571 2 694 2 514 2 637 4 638 2 317 2 385 2 577 2 843 2 12 2 699 2 983 2 14 2 204 2 925 2 990 2 324 2 28 2 537 2 214 2 339 2 218 4 661 2 662 2 100 2 944 2 943 2 162 4 808 2 109 2 493 2 44 2 675 2 555 2 173 2 435 2 52 2 364 4 753 2 624 4 825 2 
540 2 99 8 630 4 800 6 375 8 249 4 729 6 162 4 107 4 774 4 290 4 581 4 169 2 714 13 856 8 300 8 473 2 1034 6 794 12 218 4 
623 2 215 2 990 2 
1001 2 969 2 16 2 817 2 451 2 908 2 513 2 854 2 591 2 365 2 225 22 474 10 594 2 214 2 
511 2 133 2 907 1 771 25 914 6 255 1 13 2 779 2 778 6 782 2 923 2 143 2 147 2 402 1 272 1 795 3 154 2 33 3 277 2 409 4 156 2 663 2 280 1 939 2 414 2 419 2 806 2 669 2 162 32 164 2 809 2 423 3 672 1 42 19 167 1 676 2 46 5 429 1 47 19 560 2 559 2 680 2 957 6 958 2 438 12 302 6 54 2 684 2 55 24 689 4 441 4 966 2 443 2 831 2 445 2 832 2 448 2 973 2 191 2 190 2 455 2 456 3 457 2 697 2 840 2 575 2 842 2 460 2 71 12 205 2 463 2 321 2 79 1 471 2 470 2 711 1 83 1 855 1 211 1 717 2 337 2 480 2 341 2 93 1 218 30 865 2 720 3 221 2 348 3 726 3 1006 2 483 3 727 4 1012 2 353 2 105 1 227 2 491 1 110 12 112 2 1019 2 229 3 117 2 231 2 614 2 615 1 503 2 361 2 504 2 750 12 1035 4 626 2 
235 2 
162 2 930 2 
327 2 942 2 162 4 
244 2 760 54 763 2 246 2 2 2 512 2 248 2 3 2 769 2 6 2 250 12 7 4 252 2 257 2 775 2 259 2 777 2 260 4 15 2 520 2 265 2 266 4 267 2 787 2 21 12 271 2 792 14 531 2 27 2 533 54 31 4 796 2 32 2 36 2 799 2 278 12 279 2 543 2 282 4 546 2 38 2 549 2 283 54 39 54 553 2 810 2 554 4 811 2 812 2 815 4 45 2 818 2 561 4 51 4 298 2 820 16 301 2 303 4 563 2 823 2 56 2 828 2 567 10 833 158 570 2 312 2 311 2 836 2 572 2 314 4 65 2 574 40 318 2 66 2 578 2 845 54 847 2 69 6 70 2 73 2 582 12 74 2 584 12 75 10 76 2 850 2 587 2 82 4 81 2 588 2 589 2 86 6 859 2 592 2 593 12 595 32 90 4 333 2 863 4 91 4 596 2 335 2 334 2 864 2 94 54 342 4 96 4 97 2 866 2 98 2 346 2 870 32 871 4 349 2 603 18 872 54 604 2 873 4 874 2 352 2 102 2 606 2 876 26 608 2 884 2 114 2 116 2 119 4 890 12 613 4 891 2 360 2 616 2 893 2 122 2 619 2 620 26 123 6 367 2 366 2 370 18 369 2 372 2 371 158 126 2 625 158 128 2 902 2 130 2 134 4 631 2 909 56 377 2 910 2 135 2 381 26 913 4 915 2 916 2 917 2 919 2 387 2 388 2 142 2 390 12 393 2 394 2 146 266 145 2 647 2 646 2 399 2 149 20 650 2 929 10 151 54 403 2 406 4 658 2 407 2 408 4 934 2 155 4 411 40 157 2 936 2 159 2 160 10 413 2 665 2 417 2 418 2 163 2 421 2 946 2 670 2 424 54 425 26 674 2 677 2 679 2 432 2 959 2 178 2 179 2 439 26 681 4 960 4 683 2 440 24 685 2 687 12 963 2 442 2 183 2 965 2 184 4 967 2 970 2 968 4 188 12 974 2 693 4 452 2 976 6 698 4 979 2 980 2 981 30 461 2 197 4 701 2 707 2 985 2 708 4 465 2 207 6 986 10 208 2 987 2 468 8 709 2 209 14 988 6 989 12 715 2 472 2 995 2 212 4 476 4 216 4 998 2 718 4 722 4 723 2 1004 2 222 2 724 40 224 2 728 54 731 18 1014 12 226 2 732 30 492 2 736 2 734 2 737 54 738 2 739 2 1018 2 494 2 495 2 228 48 496 26 740 2 742 2 743 2 1025 48 745 2 748 10 1028 2 237 2 754 2 240 2 1033 2 755 4 506 32 756 2 508 2 241 2 1036 54 
896 2 889 1 152 2 933 2 
896 2 643 2 
316 2 25 2 896 2 18 2 404 2 990 2 978 2 
896 2 950 2 978 2 
896 2 978 2 666 2 
991 2 552 2 152 2 
896 2 978 2 
991 2 797 2 
264 2 896 2 
991 2 152 2 101 2 
180 2 152 2 297 2 
628 2 152 2 538 2 
103 2 152 2 830 2 
490 2 152 2 275 2 
991 2 869 2 
807 2 896 2 
180 2 30 2 
538 2 813 2 
103 2 389 2 
329 2 275 2 
991 2 994 2 
895 2 275 2 
103 2 885 2 
320 2 538 2 
180 2 416 2 
991 2 834 2 152 2 101 2 
991 2 24 2 834 2 152 2 101 2 
991 2 206 2 152 2 
991 2 152 2 400 2 
851 2 906 2 730 2 682 2 
922 2 447 4 263 2 247 2 1005 2 1007 2 469 2 380 2 941 2 236 2 251 2 225 6 945 2 287 4 877 2 879 2 273 2 274 2 
781 2 152 2 
316 2 305 2 773 2 990 2 
316 2 25 2 305 2 773 2 990 2 648 2 
316 2 896 2 304 2 18 2 990 2 978 2 
753 2 459 2 
316 2 18 2 990 2 140 2 
103 2 579 2 
898 2 275 2 
180 2 158 2 
319 2 538 2 
956 2 275 2 538 2 
383 2 275 2 538 2 
120 2 538 2 275 2 
398 2 538 2 275 2 
721 2 905 2 316 2 881 2 115 2 990 2 299 6 686 6 
991 2 580 2 
147 2 
511 2 133 2 771 4 914 2 778 6 923 2 143 2 784 2 150 2 534 2 154 2 409 4 280 2 939 2 414 2 550 2 669 2 162 26 164 2 291 4 166 2 43 2 559 2 957 2 176 2 438 6 562 2 302 4 181 2 684 2 55 6 689 4 441 4 831 2 832 2 448 8 973 2 692 2 450 2 191 2 696 2 977 2 455 2 457 2 697 2 62 2 839 2 840 2 576 2 842 2 195 2 199 2 205 2 706 4 467 2 322 2 853 2 993 2 338 2 480 2 93 2 218 26 727 4 1010 2 353 2 104 2 112 2 1019 2 232 2 361 6 507 2 374 2 903 4 626 2 
511 2 133 2 771 4 914 2 778 6 923 2 143 2 784 2 150 2 534 2 154 2 409 4 280 2 939 2 414 2 550 2 669 2 162 26 164 2 291 4 166 2 676 2 559 2 957 2 176 2 438 6 562 2 302 6 181 2 684 2 55 6 689 4 441 4 831 2 832 2 448 8 973 2 692 2 450 2 191 2 696 2 977 2 455 2 457 2 697 2 62 2 840 2 576 2 842 2 195 2 199 2 205 2 706 4 467 2 322 2 853 2 993 2 478 2 338 2 92 2 480 2 93 2 218 26 868 2 727 4 1010 2 353 2 104 2 112 2 1019 2 231 2 232 2 361 6 507 2 903 4 626 2 758 2 
962 2 
789 2 821 2 
761 2 307 4 832 2 629 6 309 2 310 2 973 2 768 4 4 2 454 2 194 8 772 10 254 2 256 2 846 2 201 2 778 4 262 4 78 4 144 2 392 2 323 2 19 2 401 4 651 2 529 4 860 6 88 2 931 2 536 8 332 2 480 2 217 2 218 6 659 2 1002 4 938 2 545 2 414 2 605 2 351 2 875 2 488 2 803 2 353 2 669 2 162 12 1015 2 354 2 422 6 1020 2 611 2 357 4 888 2 363 2 239 2 684 2 689 2 441 2 757 2 
761 2 307 4 832 2 629 8 309 2 310 2 973 2 768 4 4 2 192 2 194 8 772 10 254 2 256 2 846 2 201 2 778 4 262 4 78 4 144 2 392 2 323 2 19 2 401 4 858 2 651 2 529 4 860 6 88 2 931 2 536 8 332 2 480 2 217 2 218 6 659 2 1002 4 938 2 414 2 605 2 351 2 875 2 488 2 803 2 353 2 669 2 162 12 1015 2 354 2 422 8 497 4 1020 2 611 2 357 4 888 2 48 2 363 2 239 2 684 2 689 2 441 2 757 2 
1020 2 761 2 307 2 262 4 78 2 629 2 310 2 768 2 19 2 4 2 488 2 529 4 254 2 860 2 1015 2 846 2 217 2 757 2 
761 2 307 4 832 2 629 6 309 2 310 2 973 2 768 4 4 2 454 2 194 4 772 6 254 2 846 2 201 2 778 4 262 4 78 4 144 2 392 2 323 2 19 2 401 4 651 2 529 4 860 4 88 2 931 2 536 4 332 2 480 2 217 2 218 6 659 2 1002 4 938 2 545 2 414 2 605 2 351 2 875 2 488 2 803 2 353 2 669 2 162 12 1015 2 354 2 422 6 1020 2 611 2 357 4 888 2 48 2 363 2 239 2 684 2 689 2 441 2 757 2 
761 2 307 4 832 2 629 4 309 2 310 2 973 2 768 4 4 2 454 2 194 4 772 6 254 2 846 2 201 2 778 4 262 4 78 4 144 2 392 2 323 2 19 2 401 4 651 2 529 4 860 6 88 2 931 2 536 4 332 2 480 2 217 2 218 6 659 2 1002 4 938 2 545 2 414 2 605 2 351 2 875 2 488 2 487 2 803 2 353 2 669 2 162 12 1015 2 354 2 422 6 1020 2 611 2 357 4 888 2 363 2 239 2 684 2 689 2 441 2 757 2 
761 2 307 4 832 2 629 6 309 2 310 2 973 2 768 4 4 2 454 2 194 8 772 6 254 2 256 2 846 2 201 2 778 4 262 4 78 4 144 2 392 2 323 2 19 2 401 4 651 2 529 4 860 6 88 2 931 2 536 4 332 2 480 2 217 2 218 6 659 2 1002 4 938 2 545 2 414 2 605 2 351 2 875 2 488 2 803 2 353 2 669 2 162 12 1015 2 354 2 422 6 1020 2 611 2 357 4 888 2 363 2 239 2 684 2 689 2 441 2 757 2 
761 2 307 4 832 2 629 6 309 2 310 2 973 2 768 4 4 2 454 2 194 8 772 10 254 2 256 2 846 2 201 2 778 4 262 4 78 4 144 2 392 2 323 2 19 2 401 4 651 2 529 4 860 8 88 2 931 2 536 8 332 2 480 2 217 2 218 6 659 2 1002 4 938 2 545 2 414 2 605 2 351 2 875 2 488 2 487 2 803 2 353 2 669 2 162 12 1015 2 354 2 422 8 1020 2 611 2 357 4 888 2 363 2 239 2 684 2 689 2 441 2 757 2 
761 2 307 4 832 2 629 6 309 2 310 2 973 2 768 4 4 2 454 2 194 8 772 10 254 2 256 2 846 2 201 2 778 4 262 4 78 4 144 2 392 2 323 2 19 2 401 4 651 2 529 4 860 6 88 2 931 2 536 8 332 2 480 2 217 2 218 6 659 2 1002 4 938 2 545 2 414 2 605 2 351 2 875 2 488 2 803 2 353 2 669 2 162 12 1015 2 354 2 422 6 1020 2 611 2 357 4 888 2 363 2 239 2 684 2 689 2 441 2 757 2 
761 2 511 2 768 4 4 2 515 2 771 2 516 6 9 2 772 2 254 2 517 7 258 1 778 6 262 4 17 2 522 2 784 2 19 2 20 2 785 6 23 8 529 4 530 6 545 2 547 6 802 4 803 2 550 4 556 2 558 1 559 2 302 6 53 2 55 8 824 2 831 12 307 4 832 2 309 2 310 2 63 2 840 2 842 2 67 2 844 2 68 2 846 2 78 4 322 2 323 2 327 6 860 8 88 2 862 6 332 4 340 2 601 6 602 1 605 2 351 4 875 2 353 2 354 2 610 2 882 2 112 2 611 2 886 2 357 6 888 2 361 6 363 2 899 2 900 1 626 2 629 4 133 2 914 2 138 2 139 2 645 2 923 2 144 2 392 2 143 2 395 2 401 8 150 2 651 4 652 6 930 6 931 2 654 2 932 2 154 2 660 2 659 2 409 4 412 1 938 2 414 2 939 2 415 1 669 2 162 46 164 2 422 12 673 2 952 6 676 2 955 2 433 6 175 4 957 2 176 2 437 6 438 6 961 7 684 2 689 4 441 4 185 6 187 2 448 4 973 2 191 2 977 2 455 2 457 2 697 2 194 2 700 1 201 2 205 2 706 4 712 2 475 6 997 1 996 1 479 2 480 2 218 24 217 2 219 2 1002 4 727 4 487 4 488 2 1015 2 735 2 1019 2 1020 2 231 2 746 6 235 6 1031 10 239 2 757 2 759 2 
511 2 761 2 629 8 133 2 768 4 4 2 515 2 771 2 516 6 914 2 772 2 9 2 138 2 254 2 256 4 139 2 778 6 645 2 17 2 262 4 522 2 923 2 143 2 392 2 144 2 395 2 784 2 20 2 19 2 785 6 401 8 23 8 150 2 651 4 529 4 652 6 530 6 930 6 931 2 654 2 932 2 154 2 659 2 660 2 409 4 938 2 939 4 545 2 414 2 547 6 802 4 803 2 550 4 669 2 162 48 164 2 422 12 673 2 952 6 676 2 955 2 678 2 556 2 433 6 559 2 957 2 175 4 176 2 437 6 438 6 302 6 53 2 55 8 684 2 824 2 689 4 441 4 185 6 831 12 187 2 307 4 832 2 448 8 309 2 835 2 310 2 973 2 191 2 977 2 455 4 63 2 697 2 457 2 840 2 842 2 194 6 67 2 844 2 68 2 846 2 201 2 205 2 706 4 78 4 322 2 323 2 712 2 327 6 860 8 88 2 862 6 475 6 332 4 479 2 340 2 480 2 219 2 217 2 218 26 1002 4 601 6 605 2 727 4 351 4 875 2 488 2 353 2 1015 2 354 2 735 2 610 2 882 2 112 4 1019 2 611 2 1020 2 886 2 357 6 888 2 231 2 746 6 361 6 235 6 363 2 239 2 1031 10 899 2 903 2 626 2 757 2 759 2 
761 2 511 2 629 8 133 2 768 4 4 2 515 2 771 2 516 6 914 2 9 2 772 6 138 2 254 2 256 4 139 2 778 6 645 2 17 2 262 4 522 2 923 2 392 2 144 2 143 2 395 2 784 2 20 2 19 2 785 6 401 8 23 8 150 2 651 4 529 4 652 6 530 6 930 6 931 2 536 4 654 2 932 2 154 2 659 2 660 2 409 4 938 2 939 4 545 2 414 2 547 6 802 4 803 2 550 4 669 2 162 48 164 2 422 12 673 2 952 6 676 2 955 2 678 2 556 2 433 6 559 2 957 2 175 4 176 2 437 6 438 6 302 6 53 2 55 8 684 2 824 2 689 4 441 4 185 6 831 12 187 2 307 4 832 2 448 8 309 2 835 2 310 2 973 2 191 2 977 2 455 4 63 2 697 2 457 2 840 2 842 2 194 6 67 2 844 2 68 2 846 2 201 2 205 2 706 4 78 4 322 2 323 2 712 2 327 6 860 8 88 2 862 6 475 6 332 4 479 2 340 2 480 2 219 2 217 2 218 26 1002 4 601 6 605 2 727 4 351 4 875 2 488 2 353 2 1015 2 354 2 735 2 610 2 882 2 112 4 1019 2 611 2 1020 2 886 2 357 6 888 2 231 2 746 6 361 6 235 6 363 2 239 2 1031 10 899 2 903 2 626 2 757 2 759 2 
511 2 761 2 1 2 768 4 4 2 515 2 771 4 516 6 772 6 9 2 254 2 11 6 256 4 778 6 262 4 17 2 522 2 784 2 19 2 20 2 785 6 23 8 529 4 530 12 536 4 545 2 547 6 802 4 803 2 550 4 288 2 294 2 556 2 48 2 559 2 302 6 53 2 55 12 824 2 831 10 307 4 832 2 309 2 835 2 310 2 837 6 63 2 840 2 842 2 67 2 844 2 68 2 846 2 78 4 322 4 323 2 852 2 327 12 860 10 88 2 862 6 332 4 340 2 598 6 599 6 601 6 605 2 351 4 875 2 353 2 354 2 610 2 882 2 112 4 611 2 886 2 357 6 888 2 361 8 363 2 903 2 626 2 629 10 133 2 914 4 138 2 139 2 645 2 923 2 143 2 144 2 392 2 396 6 395 2 926 2 401 8 150 2 651 4 652 12 930 12 931 2 654 2 932 2 154 2 659 2 660 2 409 4 938 2 414 2 939 4 669 2 162 52 164 2 422 16 673 2 952 6 676 2 955 2 678 2 433 12 175 4 957 4 176 2 437 6 438 8 684 2 689 4 441 4 185 6 444 6 187 2 691 6 446 2 448 10 973 2 191 2 977 4 455 4 457 2 697 2 194 6 201 2 205 2 706 6 712 2 475 6 479 2 480 2 218 24 217 2 481 6 219 2 1002 4 727 4 484 2 487 2 488 2 1015 2 735 2 1019 2 1020 2 231 2 746 6 747 2 235 12 239 2 1031 8 757 2 759 2 243 6 
1002 2 761 2 307 4 629 6 309 2 310 2 768 4 545 2 803 2 772 4 194 6 162 4 254 2 1015 2 354 2 422 4 256 2 201 2 611 2 1020 2 357 2 262 2 888 2 392 2 144 2 323 2 19 2 401 2 363 2 529 2 860 6 931 2 536 4 332 2 757 2 
511 2 761 2 629 6 133 2 768 4 771 3 914 3 772 2 254 2 256 2 778 6 262 2 923 2 392 2 144 2 143 2 784 2 19 2 147 2 269 2 401 2 529 2 532 2 931 2 154 2 409 4 938 2 545 2 414 2 803 2 550 2 806 2 669 2 162 28 164 2 422 4 676 2 560 2 559 2 957 3 176 2 438 6 302 6 684 2 55 8 689 4 441 4 831 4 307 4 832 2 309 2 310 2 973 2 191 2 457 2 697 2 840 2 842 2 194 6 196 2 201 2 205 2 706 4 323 2 470 2 857 2 860 6 332 2 480 2 218 24 1002 2 727 4 353 2 1015 2 354 2 880 3 1019 2 1020 2 611 2 357 2 888 2 231 2 361 6 363 2 1031 2 899 2 626 2 242 2 757 2 
904 2 363 2 201 2 
904 2 363 2 201 2 
904 2 511 2 761 4 629 12 765 2 766 2 133 2 768 4 771 2 772 6 256 4 386 2 778 6 261 2 262 2 143 2 392 2 784 2 268 2 401 4 150 4 651 2 529 2 536 4 154 2 659 2 539 2 34 2 409 4 939 4 414 2 802 2 550 6 669 2 162 24 164 2 422 16 292 2 676 2 168 2 170 2 48 4 559 2 50 2 175 2 176 2 438 2 302 6 684 2 55 2 688 2 689 4 441 4 57 2 831 4 187 2 307 4 61 2 832 2 448 4 973 2 310 2 191 2 455 4 457 2 697 2 840 2 193 4 842 2 194 6 846 2 848 4 201 4 205 2 78 4 712 2 860 12 332 4 479 2 338 4 480 2 218 16 1002 2 605 2 727 4 351 4 875 2 488 2 487 4 353 2 354 2 112 4 1019 2 1020 2 357 4 1021 2 231 2 746 2 361 2 1027 2 363 6 1031 2 752 2 626 2 
831 2 539 2 886 2 61 2 937 2 744 2 414 2 746 2 975 2 802 2 789 2 1027 2 1031 2 162 4 882 2 217 2 218 2 
904 2 511 2 761 4 629 12 133 2 768 4 771 4 772 6 256 4 778 6 261 2 262 2 143 2 392 2 784 2 927 2 268 2 401 4 150 4 651 4 529 2 536 4 154 2 659 2 539 2 409 4 939 4 414 2 550 6 669 2 162 24 164 2 422 16 292 2 676 2 168 2 170 2 48 4 559 2 50 2 175 2 176 2 438 2 302 6 684 2 55 2 688 2 689 4 441 4 57 4 831 2 187 2 307 4 61 2 832 2 448 4 973 2 310 2 191 2 455 4 457 2 697 2 840 2 193 4 842 2 194 6 846 2 848 4 201 4 585 2 205 2 703 2 78 4 712 2 860 12 332 4 479 2 338 4 480 2 218 16 1002 2 605 2 727 4 351 4 1009 2 1011 2 875 2 488 2 487 4 353 2 354 2 112 4 1019 2 1020 2 357 4 1021 2 231 2 746 2 361 2 1027 2 363 6 239 2 752 2 626 2 
904 2 511 2 761 4 629 12 133 2 768 4 771 2 772 6 256 4 778 6 261 2 262 2 143 2 392 2 784 2 268 2 401 4 150 4 651 4 529 2 536 4 154 2 659 2 539 2 409 4 410 2 544 2 939 4 414 2 802 2 550 6 669 2 162 24 164 2 40 2 422 16 292 2 676 2 168 2 170 2 48 4 559 2 50 2 175 2 176 2 438 2 302 6 684 2 55 2 688 2 689 4 441 4 57 2 831 4 187 2 307 4 61 2 832 2 448 4 973 2 310 2 191 2 455 4 457 2 697 2 840 2 193 4 842 2 194 6 846 2 848 4 200 2 201 4 205 2 78 4 712 2 860 12 332 4 479 2 338 4 480 2 218 16 1002 2 605 2 727 4 351 4 875 2 488 2 487 4 353 2 354 2 112 4 1019 2 1020 2 357 4 1021 2 231 2 746 2 361 2 1027 2 363 6 239 2 1031 2 752 2 626 2 129 2 
627 2 762 2 133 2 376 2 771 2 8 2 914 2 9 2 641 2 918 2 778 6 521 2 923 2 523 2 148 2 29 2 154 2 409 2 542 2 414 2 550 2 669 2 162 24 164 2 673 2 427 2 557 2 559 2 957 2 176 2 438 6 302 2 53 2 684 2 55 8 689 4 441 4 58 1 831 2 308 2 832 2 973 2 838 2 697 2 840 2 842 2 67 2 68 2 205 2 706 4 325 2 326 2 330 2 480 2 218 18 347 1 727 2 353 2 106 2 355 4 735 2 607 2 111 2 1019 2 358 2 118 2 361 6 238 2 626 2 
1000 4 1003 2 771 3 914 3 162 2 948 2 702 2 706 2 923 2 391 2 322 6 359 2 957 3 174 2 361 2 177 3 649 2 438 2 793 2 1032 2 621 2 55 2 405 2 95 1 218 2 
1000 4 1003 2 771 2 914 2 162 2 948 2 702 2 706 2 923 2 391 2 322 6 359 2 957 2 174 2 361 2 177 2 649 2 438 2 793 2 1032 2 621 2 55 2 405 2 218 2 
1000 4 1003 2 771 2 914 2 162 2 948 2 702 2 706 2 923 2 391 2 322 6 359 2 957 2 174 2 361 2 177 2 649 2 438 2 793 2 1032 2 621 2 55 2 405 2 218 2 
245 2 972 2 99 2 630 2 375 2 1008 3 771 3 161 2 162 4 107 2 290 2 581 2 702 2 71 2 110 2 431 2 923 2 710 4 957 3 714 6 590 2 300 2 822 2 328 3 55 2 794 4 182 3 153 2 656 2 218 2 509 2 
245 2 867 2 972 2 99 2 630 2 375 2 1008 2 771 2 161 2 729 2 162 4 107 2 290 2 581 2 702 2 71 2 110 2 431 2 923 2 710 4 957 2 714 4 590 2 473 2 300 2 822 2 328 2 55 2 794 4 182 2 153 2 656 2 218 2 509 2 
245 2 867 2 972 2 99 2 630 2 375 2 1008 2 771 2 161 2 729 2 162 4 107 2 290 2 581 2 702 2 71 2 110 2 431 2 923 2 710 4 957 2 714 4 590 2 473 2 300 2 822 2 328 2 55 2 794 4 182 2 153 2 656 2 218 2 509 2 
245 2 867 2 972 2 99 2 630 2 375 2 1008 2 771 2 161 2 729 2 162 4 107 2 290 2 581 2 702 2 71 2 110 2 431 2 923 2 710 4 957 2 714 4 590 2 473 2 300 2 822 2 328 2 55 2 794 4 182 2 153 2 656 2 218 2 509 2 
245 2 867 4 972 2 99 2 630 2 375 2 1008 2 771 2 161 2 729 4 162 4 107 2 290 2 581 2 702 2 71 2 110 2 431 2 923 2 710 4 957 2 714 4 590 2 473 4 300 2 822 2 328 2 55 2 794 4 182 2 153 2 656 2 218 2 509 2 
59 2 35 2 124 2 776 2 485 2 597 2 
510 2 35 2 384 2 189 2 507 2 632 2 964 2 
306 1 725 2 770 2 940 2 64 1 804 2 284 2 669 2 162 10 41 2 949 2 954 1 501 2 296 1 436 1 22 2 791 2 528 2 652 2 26 2 897 2 622 2 653 2 655 2 690 2 218 8 
0 2 540 1 99 6 867 2 630 6 375 6 633 4 694 2 729 5 162 6 774 2 107 6 290 6 609 2 493 2 581 6 984 2 202 2 431 2 121 2 710 4 525 2 434 2 526 2 714 15 856 2 300 6 473 3 1034 4 794 12 218 6 
426 2 131 2 60 2 84 1 486 4 1026 2 382 2 362 2 551 2 162 1 137 2 10 7 331 2 165 2 477 2 218 1 999 2 920 2 
426 4 131 2 60 2 486 4 1026 2 382 4 362 2 551 2 137 2 10 6 165 2 331 4 477 2 999 2 920 2 
426 8 131 2 60 2 84 1 486 4 1026 6 382 8 362 8 551 2 162 1 137 2 10 10 165 2 331 8 477 2 218 1 999 2 920 2 
426 2 131 2 60 2 486 2 382 2 551 2 137 2 10 2 165 2 331 2 477 2 999 2 920 2 
840 2 704 1 586 2 85 2 788 2 790 2 89 1 218 6 935 2 409 2 727 2 162 6 164 2 671 1 883 2 951 2 676 2 231 2 749 2 302 6 626 2 
971 2 569 2 767 2 634 4 635 2 5 2 313 2 636 2 378 2 379 2 458 2 840 2 315 2 911 2 136 4 841 2 640 2 982 2 198 6 519 2 642 2 141 2 849 2 583 2 921 2 705 4 704 2 77 2 464 2 783 2 397 2 786 2 85 2 713 2 270 2 790 2 87 2 89 2 861 2 535 4 218 44 719 2 343 2 345 2 935 38 409 20 541 2 482 2 350 4 281 4 727 20 801 2 805 2 162 46 286 2 164 2 733 2 878 2 289 2 108 2 883 2 951 2 814 2 498 2 953 6 741 2 887 2 499 4 430 2 500 2 428 6 230 2 295 2 171 2 1023 2 1024 2 892 2 618 2 505 2 751 2 302 42 1029 2 564 2 368 2 125 2 127 2 566 4 826 2 626 2 829 2 
676 4 935 4 409 4 231 4 767 2 397 2 727 4 85 2 840 2 639 2 790 2 302 10 162 10 733 2 164 2 127 2 883 2 626 2 218 10 951 2 
569 2 767 2 5 2 379 2 458 2 840 2 912 2 136 4 141 2 644 2 704 2 586 2 783 2 397 2 85 2 788 2 790 2 89 2 535 2 218 20 343 2 798 2 935 12 409 10 541 2 281 4 727 10 162 22 420 2 733 2 164 2 286 2 1016 2 883 2 951 2 953 2 498 2 676 6 499 4 356 2 430 2 428 6 231 6 749 8 618 2 302 34 1029 2 564 2 125 2 127 2 626 2 
924 2 

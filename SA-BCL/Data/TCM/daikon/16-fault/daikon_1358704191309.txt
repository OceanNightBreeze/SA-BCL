#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (103,122) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 329 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (4,9,57,61,195,252,310,438) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 170 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 170 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 170 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 170 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 170 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 238 75 312 260 261 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR utilMDE.Assert$AssertionException (12,123) (12,123) 235 424 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 291 404 256 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 291 404 256 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 291 404 256 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 291 404 256 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[F)Z | OPERATOR | 118000 | ++ -> --
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Assert:assertTrue(Z)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE:negate(I)I
daikon.Quant:isReverse([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltwiseLT([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_133()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:memberOf(F[D)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:slice([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:memberOf(I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:union([I[I)[I
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:ne(II)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaCharStream:BeginToken()C
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:intern([I)[I
daikon.Quant:eq(JJ)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_ntk()I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Intern:intern([J)[J
utilMDE.Intern:numIntArrays()I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaCharStream:ReadByte()C
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:eltsLT([II)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsGT([II)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:jj_3R_55()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | STATEMENT | 47994 | stmt -> ;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_69()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaCharStream:readChar()C
daikon.Quant:lexLT([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:noDups([I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:memberOf(F[F)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 18743 | = null
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:lexGT([I[I)Z
daikon.Quant:lt(II)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_162()Z
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:memberOf(J[J)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43224 | 74 -> 75
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_134()Z
daikon.ModBitTracker:ModBitTracker(I)V | OPERATOR | 2283 | >= -> ==
daikon.Quant:eq(II)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:dimensions()I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eltsGTE([II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_53()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3R_161()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:eltsLtIndex([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 2 371 2 56 4 12 2 232 2 321 2 346 2 414 2 123 2 
391 2 35 2 107 2 160 2 109 2 98 2 197 6 315 2 358 6 218 6 442 2 
85 2 206 6 237 6 119 2 106 2 68 4 271 2 12 2 131 4 28 2 150 6 426 6 123 2 
1 10 375 2 136 6 322 12 433 29 5 16 6 10 8 16 7 4 298 2 117 6 436 26 176 2 213 8 355 4 12 6 99 8 246 10 181 2 123 6 382 2 222 8 49 10 78 8 191 16 79 2 162 4 314 2 196 10 452 4 
103 4 122 4 
59 2 
349 2 64 2 175 2 12 4 356 2 16 2 17 2 357 2 72 2 123 4 185 2 187 2 254 2 309 2 20 2 414 2 189 2 415 2 194 2 79 2 262 2 198 2 84 2 373 2 30 2 267 2 207 2 92 2 324 2 435 2 332 2 42 2 337 2 278 2 383 2 51 2 285 4 226 4 227 2 286 2 450 4 342 2 344 2 454 4 
87 6 429 4 202 2 1 16 136 4 433 54 322 22 6 16 5 32 91 4 8 32 117 4 94 2 95 4 436 48 176 2 145 2 12 4 439 8 99 18 246 16 14 4 147 6 333 4 123 4 46 6 220 4 49 6 78 6 284 6 191 32 257 2 161 6 162 2 423 4 196 16 231 2 265 6 201 2 
421 2 357 2 270 2 
167 2 116 10 124 2 350 2 155 2 309 2 434 2 97 2 378 2 311 2 234 22 264 2 374 2 100 2 
1 2 137 2 322 2 433 6 6 2 208 2 5 2 352 2 8 2 117 2 436 4 99 2 246 2 40 2 302 2 221 2 49 4 191 2 127 2 162 2 196 2 164 2 112 2 
46 6 429 4 1 4 294 2 322 4 433 16 366 2 5 8 6 4 8 8 191 8 436 12 423 4 355 2 196 4 246 4 265 6 
113 2 134 2 205 4 32 4 396 2 270 6 171 2 34 62 146 2 39 2 332 2 357 8 149 2 405 4 334 10 151 2 276 2 307 4 44 14 125 4 154 2 363 4 48 4 104 4 188 4 411 2 22 2 415 4 367 2 24 2 25 2 55 2 421 2 450 4 287 2 425 10 27 4 317 4 453 2 200 2 
86 2 59 2 204 2 376 2 241 2 379 2 13 2 219 2 316 2 348 2 
329 2 121 2 347 2 304 2 
239 2 123 2 
166 2 266 2 123 4 
269 2 
114 16 115 2 236 2 242 34 244 20 15 6 247 8 360 2 361 20 19 2 364 2 251 2 253 2 21 2 368 2 126 12 258 26 129 2 130 2 263 10 132 2 29 6 133 12 135 2 268 2 140 84 141 84 142 14 143 2 272 2 37 2 380 4 275 2 152 26 43 4 47 2 279 8 281 2 50 2 156 4 158 2 385 30 52 2 163 14 289 84 58 2 165 2 389 4 168 2 60 2 393 2 62 26 293 2 63 2 169 4 65 2 297 4 172 2 177 2 299 2 301 2 179 2 403 2 183 6 407 26 305 2 409 2 410 2 186 26 413 2 190 10 417 16 418 2 419 2 422 20 80 2 313 2 81 4 83 2 428 4 318 26 430 28 320 26 432 2 209 2 210 2 323 2 93 12 211 2 212 6 437 10 216 2 217 2 443 2 336 26 335 2 338 10 102 2 223 2 339 26 225 2 447 2 449 14 341 2 228 2 108 26 451 10 230 10 110 26 111 2 
277 2 395 2 66 2 397 1 
395 2 384 2 
74 2 184 2 452 2 395 2 357 2 224 2 199 2 
74 2 395 2 351 2 
74 2 252 2 395 2 
89 2 277 2 26 2 
74 2 395 2 
89 2 343 2 
153 2 395 2 
89 2 277 2 300 2 
174 2 277 2 139 2 
277 2 331 2 440 2 
408 2 277 2 372 2 
277 2 328 2 138 2 
89 2 245 2 
395 2 148 2 
174 2 31 2 
431 2 331 2 
362 2 408 2 
45 2 328 2 
89 2 144 2 
328 2 248 2 
408 2 18 2 
10 2 331 2 
174 2 455 2 
229 2 89 2 277 2 300 2 
229 2 89 2 277 2 300 2 2 2 
89 2 277 2 233 2 
89 2 277 2 359 2 
105 2 296 2 215 2 182 2 
250 2 61 2 308 2 77 2 4 2 67 2 118 2 310 2 53 2 243 2 370 2 9 2 195 2 438 4 57 2 234 4 
193 2 277 2 
445 2 357 2 199 2 427 2 
76 2 445 2 357 2 224 2 199 2 427 2 
173 2 74 2 452 2 395 2 357 2 199 2 
306 2 187 2 
70 2 452 2 357 2 199 2 
408 2 192 2 
401 2 328 2 
174 2 180 2 
203 2 331 2 
328 2 331 2 290 2 
392 2 328 2 331 2 
327 2 328 2 331 2 
328 2 331 2 354 2 
33 2 357 2 444 2 283 6 412 2 448 2 387 6 199 2 
89 2 325 2 
38 2 
121 2 170 2 347 2 304 2 
121 2 170 2 347 2 304 2 
82 2 345 2 240 2 
82 2 345 2 240 2 
121 2 170 2 347 2 304 2 
121 2 170 2 347 2 304 2 
121 2 170 2 347 2 304 2 
0 2 88 2 204 1 238 2 379 1 123 4 273 2 381 2 75 2 280 2 282 2 365 2 157 2 128 2 260 2 312 2 261 2 
54 2 292 2 73 2 288 2 330 2 353 2 
399 2 292 2 69 2 319 2 71 2 249 2 255 2 
178 2 12 2 424 2 394 2 123 2 416 2 235 2 274 2 
1 6 136 2 433 17 3 2 5 6 6 6 8 6 90 2 377 2 96 2 436 12 175 2 12 6 439 2 246 6 333 2 123 6 46 4 446 2 78 4 51 2 23 2 191 6 340 2 161 4 423 2 196 6 
295 2 398 2 159 7 386 1 369 2 326 2 259 2 214 2 400 2 11 2 12 1 120 2 402 2 41 2 303 2 123 1 406 4 441 2 
295 2 398 2 159 6 369 2 326 4 259 2 214 2 400 2 11 2 120 2 402 4 41 2 303 4 441 2 406 4 
295 2 398 2 159 10 386 1 369 2 326 8 259 2 214 6 400 2 11 2 12 1 120 2 402 8 41 2 303 8 123 1 441 8 406 4 
295 2 398 2 159 2 369 2 326 2 259 2 400 2 11 2 120 2 402 2 41 2 303 2 406 2 
291 2 12 2 404 2 123 2 256 2 420 1 36 1 388 2 
291 2 256 2 12 2 388 2 404 2 123 2 
291 2 256 2 12 2 388 2 404 2 123 2 
291 2 256 2 12 2 388 2 404 2 123 2 
390 2 

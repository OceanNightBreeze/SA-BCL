#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 417 102 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 214 399 610 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 609 
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 37 807 342 147 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 53 818 539 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaCharStream:ReadByte()C
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaCharStream:readChar()C
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Intern:internSubsequence([JII)[J
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:intern([I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | STATEMENT | 14158 | stmt -> ;
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Ppt:Ppt()V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:subsetOf([J[J)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:isPseudoArray()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfo:relate_var()V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6851 | = null
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([I[I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.PptSlice1:arity()I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:subsetOf([D[D)Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONDITION | 65850 | if (x) -> if (!x)
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:slice([III)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:gte(II)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([D)[D
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:subsetOf([F[D)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ProglangType:isIntegral()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[F)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:gt(II)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.ValueSet:ValueSet(I)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariants:Invariants()V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:size()I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ModBitTracker:num_samples()I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:union([I[I)[I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:FillBuff()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ModBitTracker:num_sets()I
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:eltwiseLT([I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Debug:logOn()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:isMissing(I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.PptSlice0:arity()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltsGtIndex([I)Z | OPERATOR | 179154 | ++ -> --
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | CONSTANT | 123248 | 1 -> -1
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.Quant:eq(DD)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptName:isCombinedExitPoint()Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:subsetOf([S[S)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isArray()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:noDups([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptSlice1:num_samples()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ProglangType:baseIsScalar()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14490 | = null
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaCharStream:backup(I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.PptSlice2:arity()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Node:Node()V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfo:new_ppt()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Debug:logDetail()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltsEqualIndex([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 2 670 2 813 2 444 2 189 2 445 2 574 2 557 4 811 2 
135 2 742 2 386 2 530 6 63 2 831 2 382 2 360 6 367 2 161 6 132 2 
52 2 307 2 813 2 503 2 606 2 546 6 96 2 173 6 202 6 598 4 279 6 194 2 660 4 
603 2 426 6 2 4 52 6 375 4 857 16 381 2 492 2 547 8 163 29 98 10 58 8 802 8 638 26 526 10 470 16 527 10 809 10 758 12 711 16 69 6 813 6 844 2 506 4 787 2 75 2 648 4 46 10 48 2 541 8 
423 6 873 4 
243 2 
828 4 543 2 52 4 430 2 381 2 608 2 61 2 438 2 553 2 439 2 193 2 677 2 17 2 444 2 616 2 564 2 343 2 344 2 740 2 447 2 20 2 22 2 354 2 748 2 520 2 633 2 636 2 359 2 753 2 258 2 583 2 104 2 169 2 812 2 712 4 35 4 813 4 814 2 589 4 36 2 649 2 718 2 113 2 722 2 
603 2 426 4 52 4 857 29 773 4 665 6 547 17 730 2 163 47 328 2 98 14 638 43 526 14 236 3 470 29 527 14 168 1 137 8 473 4 809 14 306 3 711 29 758 19 216 6 69 4 813 4 786 2 715 2 759 2 648 2 739 4 393 6 269 2 622 4 290 4 46 6 119 6 541 6 659 4 
447 2 297 2 825 2 
199 2 694 2 17 2 337 2 760 2 464 2 669 2 10 2 410 22 213 2 205 2 586 2 569 2 86 10 
294 2 857 2 518 2 547 2 163 6 98 2 638 4 526 2 470 2 527 2 332 2 809 2 642 2 758 2 711 2 69 2 414 2 684 2 736 2 648 2 874 2 618 2 46 4 
758 4 711 8 216 6 2 2 857 8 142 2 163 16 98 4 211 2 638 12 393 6 526 4 470 8 527 4 290 4 473 4 809 4 
828 4 455 4 456 2 25 4 155 4 663 4 748 4 297 6 458 2 800 2 207 2 92 10 833 4 407 2 575 4 834 2 9 2 634 2 359 2 237 2 778 2 441 2 872 2 815 2 535 10 390 2 763 2 391 2 820 2 288 4 511 4 447 8 250 2 175 4 689 4 176 62 540 2 825 2 178 4 693 14 
417 2 243 2 416 2 71 2 402 2 74 2 378 2 357 2 668 2 793 2 102 2 
123 2 125 2 429 4 664 2 230 2 544 2 434 2 234 2 133 2 552 3 436 2 670 2 676 2 781 2 138 24 15 3 679 2 678 2 16 2 139 2 242 2 682 2 244 6 561 1 144 2 789 8 341 2 346 4 791 1 451 2 347 2 348 2 350 1 21 2 692 2 568 1 570 2 152 2 154 2 571 2 699 24 700 3 460 2 159 2 358 3 573 2 160 2 468 2 580 3 804 16 805 2 259 2 472 1 32 2 361 1 33 2 34 2 813 34 590 2 717 1 817 3 267 2 597 2 42 2 821 2 483 2 270 2 827 2 271 2 52 32 373 2 604 1 490 4 184 8 607 2 59 12 276 2 277 2 732 16 837 2 190 1 280 16 839 6 841 4 612 2 613 2 504 2 505 1 73 1 845 2 508 2 617 2 510 2 286 2 852 3 395 2 743 6 291 1 292 3 747 2 88 32 858 2 517 2 403 8 859 2 404 2 749 3 519 2 210 2 862 2 209 4 524 2 302 1 751 4 408 2 754 2 305 2 101 2 641 2 412 4 757 2 644 2 531 1 870 2 219 2 419 1 109 4 108 3 111 5 537 2 312 3 536 32 221 3 112 2 654 2 538 2 224 2 313 2 225 2 655 16 114 6 116 2 658 2 315 2 768 1 318 2 319 2 
813 2 737 2 
813 4 615 2 591 2 
725 2 
0 6 829 2 428 2 830 2 26 6 605 2 156 2 666 2 667 2 466 2 610 2 331 2 214 2 497 2 643 2 68 2 264 2 171 2 847 2 850 2 851 2 201 2 623 2 117 6 691 2 399 2 
239 2 186 2 320 2 300 1 
572 2 320 2 
197 2 803 2 447 2 375 2 599 2 311 2 320 2 
673 2 311 2 320 2 
188 2 311 2 320 2 
501 2 239 2 365 2 
311 2 320 2 
878 2 365 2 
625 2 320 2 
239 2 365 2 463 2 
824 2 239 2 227 2 
329 2 239 2 478 2 
771 2 239 2 272 2 
400 2 239 2 514 2 
365 2 7 2 
232 2 320 2 
554 2 227 2 
329 2 875 2 
272 2 782 2 
514 2 383 2 
365 2 882 2 
696 2 514 2 
609 2 272 2 
329 2 150 2 
227 2 565 2 
394 2 239 2 365 2 463 2 
635 2 394 2 239 2 365 2 463 2 
784 2 239 2 365 2 
239 2 365 2 421 2 
532 2 461 2 876 2 85 2 
803 2 447 2 182 2 284 2 
197 2 803 2 447 2 482 2 182 2 284 2 
803 2 447 2 375 2 151 2 311 2 320 2 
608 2 769 2 
803 2 447 2 375 2 220 2 
662 2 272 2 
3 2 514 2 
376 2 227 2 
329 2 465 2 
329 2 514 2 459 2 
329 2 260 2 514 2 
329 2 514 2 80 2 
329 2 514 2 327 2 
254 2 326 6 803 2 494 6 702 2 867 2 81 2 447 2 
365 2 120 2 
295 2 646 4 127 4 19 2 91 2 816 2 134 2 303 2 822 2 525 2 410 6 703 2 611 2 584 2 261 2 206 2 856 2 103 2 
239 2 755 2 
16 2 
125 2 429 4 548 2 234 2 133 2 436 2 670 2 676 2 781 2 14 2 139 2 242 2 141 2 143 2 244 4 144 2 346 2 347 2 348 2 692 2 570 2 154 2 457 4 160 2 582 2 32 2 474 2 813 26 717 2 267 4 368 2 597 2 819 2 483 2 719 2 270 2 827 2 177 2 486 2 52 26 373 2 490 2 273 2 184 2 276 2 59 8 277 2 733 2 280 6 839 2 198 2 612 2 845 2 508 2 510 2 743 2 747 6 88 4 859 2 519 2 209 4 751 4 408 2 412 4 531 2 219 2 109 2 536 6 224 2 222 2 114 6 116 2 118 4 770 2 
125 2 429 4 548 2 234 2 133 2 436 2 670 2 676 2 781 2 14 2 139 2 242 2 141 2 143 2 244 6 144 2 563 2 346 2 347 2 348 2 692 2 570 2 154 2 571 2 457 4 573 2 160 2 582 2 32 2 474 2 813 26 717 2 267 4 597 2 819 2 483 2 719 2 270 2 827 2 177 2 486 2 52 26 373 2 490 2 273 2 184 2 276 2 59 8 277 2 280 6 839 2 198 2 498 2 612 2 200 2 845 2 508 2 510 2 743 2 747 6 88 4 859 2 519 2 209 4 751 4 408 2 412 4 531 2 219 2 109 2 536 6 224 2 114 6 116 2 658 2 118 4 770 2 
246 2 
351 2 555 2 
645 4 843 4 387 2 128 2 5 2 247 2 132 2 161 2 223 2 135 2 385 2 167 2 334 2 31 2 317 2 360 2 262 2 413 2 
228 2 52 6 429 2 128 2 831 2 130 2 5 2 132 4 235 2 133 2 135 4 385 2 333 2 334 2 838 2 781 2 681 2 843 4 387 2 389 2 247 2 79 4 848 2 686 2 567 2 742 2 853 4 347 2 690 2 348 2 352 2 397 2 27 6 158 2 861 2 462 2 160 2 161 6 577 2 167 4 530 6 31 2 360 4 808 4 262 2 412 2 413 2 105 2 645 4 533 4 813 12 219 2 597 2 223 2 44 2 114 4 656 4 372 2 317 2 485 2 
228 2 52 6 429 2 128 2 831 2 130 2 5 2 132 4 235 2 133 2 135 4 385 2 333 2 334 2 838 2 781 2 681 2 843 4 387 2 389 2 247 2 79 4 848 2 686 2 567 2 853 4 347 2 690 2 348 2 352 2 397 2 27 6 158 2 861 2 462 2 160 2 161 4 577 2 167 4 530 6 31 2 360 6 808 4 262 2 412 2 413 2 105 2 645 4 533 4 813 12 219 2 367 2 597 2 223 2 44 2 114 4 656 4 372 2 317 2 485 2 
228 2 52 6 429 2 128 2 831 2 130 2 5 2 382 2 132 4 235 2 133 2 135 4 385 2 333 2 334 2 838 2 781 2 681 2 843 4 387 2 389 2 247 2 79 4 848 2 686 2 567 2 853 4 347 2 690 2 348 2 352 2 397 2 27 6 158 2 861 2 462 2 160 2 161 6 577 2 167 4 530 6 31 2 360 6 808 4 262 2 412 2 413 2 105 2 645 4 533 8 813 12 219 2 597 2 223 2 44 2 114 4 656 4 372 2 317 2 485 2 
228 2 52 6 429 2 128 2 831 2 130 2 5 2 382 2 132 4 235 2 133 2 135 4 385 2 333 2 334 2 838 2 781 2 681 2 843 4 387 2 389 2 247 2 79 4 848 2 686 2 567 2 853 4 347 2 690 2 348 2 352 2 397 2 27 10 158 2 861 2 462 2 160 2 161 6 577 2 167 4 530 8 31 2 360 8 808 4 262 2 412 2 413 2 105 2 645 4 533 8 813 12 219 2 367 2 597 2 223 2 44 2 114 4 656 8 372 2 317 2 485 2 
228 2 52 6 429 2 128 2 831 2 130 2 5 2 382 2 132 4 235 2 133 2 135 4 385 2 333 2 334 2 838 2 781 2 681 2 843 4 387 2 389 2 247 2 79 4 848 2 686 2 567 2 853 4 347 2 690 2 348 2 352 2 397 2 27 10 158 2 861 2 462 2 160 2 161 6 577 2 167 4 530 6 31 2 360 6 808 4 262 2 412 2 413 2 105 2 645 4 533 8 813 12 219 2 597 2 223 2 44 2 114 4 656 8 372 2 317 2 485 2 
228 2 429 4 5 2 234 2 235 2 436 2 670 2 671 6 238 1 12 2 13 1 14 2 681 2 242 2 244 6 247 2 686 2 450 1 452 2 454 2 27 2 462 2 255 2 257 6 704 4 31 2 262 2 710 6 265 6 714 6 716 6 39 1 483 2 44 2 721 2 47 1 724 10 485 2 725 6 52 24 490 2 273 2 57 6 59 4 276 2 62 2 496 2 280 6 499 2 737 6 76 7 79 4 287 6 738 2 743 2 745 2 747 6 88 2 90 6 94 2 522 2 751 4 528 2 530 12 756 2 105 4 533 2 109 2 110 2 536 8 314 6 114 6 767 2 116 2 118 4 317 2 121 2 772 6 125 2 128 2 130 2 132 4 133 2 135 4 136 2 333 2 334 2 781 2 335 2 139 2 560 2 143 2 144 2 145 2 346 2 567 4 347 2 792 2 348 2 352 2 570 12 154 2 158 2 160 2 573 2 161 4 577 2 164 2 167 4 360 8 808 8 587 2 813 46 591 6 593 2 170 1 367 4 597 2 369 2 371 2 372 2 373 2 180 2 831 4 380 8 184 2 385 2 838 2 839 2 198 4 612 2 843 4 387 2 845 2 846 1 389 2 848 2 853 6 204 1 397 2 209 4 861 2 408 2 212 2 865 4 640 6 412 4 413 2 868 7 645 4 415 1 219 2 652 6 224 2 223 2 422 2 658 2 657 2 880 2 
228 2 772 6 125 2 429 4 128 2 774 2 130 2 5 2 132 4 234 2 235 2 133 2 670 2 436 2 135 4 136 2 671 6 333 2 334 2 12 2 781 2 14 2 335 2 139 2 242 2 681 2 560 2 143 2 244 6 144 2 247 2 145 2 686 2 251 2 567 4 346 4 347 2 792 2 452 2 348 2 352 2 454 2 570 12 154 2 27 2 158 2 255 2 462 2 573 2 160 2 161 8 164 2 577 2 257 6 167 4 704 4 31 2 808 8 360 8 262 2 587 2 710 6 813 48 265 6 714 6 591 6 593 2 716 6 267 2 597 2 483 2 371 2 369 2 44 2 721 2 372 2 724 10 485 2 725 6 373 2 52 26 180 2 490 4 831 4 184 2 380 8 273 2 382 4 57 6 276 2 59 8 385 2 62 2 838 2 496 2 280 6 839 2 198 4 499 2 612 2 843 4 387 2 845 2 389 2 737 6 79 4 848 2 287 6 738 2 853 6 743 2 397 2 745 2 88 2 747 6 90 6 861 2 209 4 94 2 522 2 751 4 408 2 865 4 212 2 528 2 530 12 756 2 640 6 412 4 413 2 105 4 533 6 645 4 219 2 109 4 110 2 536 8 652 6 223 2 224 2 314 6 114 6 422 2 767 2 116 2 657 2 118 4 658 2 880 2 121 2 317 2 
228 2 772 6 125 2 429 4 128 2 774 2 130 2 5 2 132 4 234 2 235 2 133 2 670 2 436 2 135 4 136 2 671 6 333 2 334 2 12 2 781 2 14 2 335 2 139 2 242 2 681 2 560 2 143 2 244 6 144 2 247 2 145 2 686 2 251 2 567 4 346 4 347 2 792 2 452 2 348 2 352 2 454 2 570 12 154 2 27 6 158 2 255 2 462 2 573 2 160 2 161 8 164 2 577 2 257 6 167 4 704 4 31 2 808 8 360 8 262 2 587 2 710 6 813 48 265 6 714 6 591 6 593 2 716 6 267 2 597 2 483 2 371 2 369 2 44 2 721 2 372 2 724 10 485 2 725 6 373 2 52 26 180 2 490 4 831 4 184 2 380 8 273 2 382 4 57 6 59 8 276 2 385 2 62 2 838 2 496 2 280 6 839 2 198 4 499 2 612 2 843 4 387 2 845 2 389 2 737 6 79 4 848 2 287 6 738 2 853 6 743 2 397 2 745 2 88 2 747 6 90 6 861 2 209 4 94 2 522 2 751 4 408 2 865 4 212 2 528 2 530 12 756 2 640 6 412 4 413 2 105 4 533 6 645 4 219 2 109 4 110 2 536 8 652 6 223 2 224 2 314 6 114 6 422 2 767 2 656 4 116 2 657 2 118 4 658 2 880 2 121 2 317 2 
228 2 429 4 231 2 5 2 234 2 235 2 436 2 670 2 671 12 12 2 14 2 681 2 242 2 244 6 247 2 688 2 686 2 251 2 452 2 454 2 27 6 462 2 255 2 256 6 257 12 704 4 31 2 262 2 710 6 476 6 265 6 714 6 716 6 267 2 483 2 44 2 721 2 724 8 485 2 725 12 52 24 490 4 273 2 57 6 276 2 59 10 62 2 496 2 280 8 499 2 737 12 79 4 287 6 738 2 742 2 743 4 745 2 87 2 747 8 88 4 515 2 90 6 94 2 522 2 751 4 100 2 528 2 530 16 756 2 105 4 533 6 109 4 110 2 762 2 536 12 314 6 114 6 116 2 118 6 317 2 121 2 772 12 125 2 322 2 128 2 774 2 130 2 132 4 133 2 135 4 136 2 333 2 334 2 781 2 335 2 139 2 560 2 143 4 144 2 145 2 148 6 346 4 567 4 347 2 792 2 348 2 352 2 570 10 154 2 796 6 797 2 158 2 160 2 573 2 161 10 577 2 164 2 576 6 167 4 360 10 808 8 587 2 813 52 591 12 593 2 367 2 597 2 823 6 369 2 371 2 372 2 601 6 373 2 180 2 831 4 382 4 380 8 184 4 385 2 838 2 839 4 840 6 198 4 612 2 843 4 387 2 845 2 388 6 389 2 848 2 853 6 397 2 209 4 861 2 408 2 212 2 865 4 640 6 412 4 413 2 645 4 219 2 652 6 224 2 223 2 656 4 422 2 657 2 658 2 880 2 
27 4 831 2 382 2 158 2 861 2 462 2 132 4 161 6 577 2 235 2 135 4 333 2 530 4 334 2 31 2 808 2 360 6 262 2 413 2 681 2 533 6 645 2 813 4 843 2 387 2 389 2 247 2 79 2 223 2 853 2 44 2 656 4 372 2 352 2 397 2 
228 2 429 4 125 2 132 4 234 2 133 2 235 2 436 2 670 2 135 4 333 2 777 2 334 2 781 2 241 3 14 2 16 2 139 2 681 2 242 2 338 2 244 6 144 2 247 2 347 2 348 2 352 2 570 4 27 2 158 2 160 2 573 2 462 2 161 6 577 2 805 2 31 2 808 2 360 6 262 2 34 2 813 28 597 2 483 2 44 2 372 2 724 2 52 24 373 2 831 2 382 2 273 2 56 2 276 2 280 6 839 3 198 2 612 2 843 2 614 2 387 2 845 2 389 2 79 2 853 2 743 3 397 2 747 6 88 3 861 2 209 4 93 2 751 4 408 2 530 4 412 4 413 2 645 2 533 6 219 2 536 8 223 2 224 2 225 2 114 6 767 2 116 2 658 2 118 4 
228 2 52 6 429 2 128 2 831 2 130 2 5 2 382 2 132 4 235 2 133 2 135 4 385 2 333 2 334 2 838 2 781 2 681 2 843 4 387 2 389 2 247 2 79 4 848 2 686 2 567 2 853 4 347 2 690 2 348 2 352 2 397 2 27 10 158 2 861 2 462 2 160 2 161 6 577 2 167 4 530 6 31 2 360 6 808 4 262 2 412 2 413 2 105 2 645 4 533 8 813 12 219 2 597 2 223 2 44 2 114 4 656 8 372 2 317 2 485 2 
228 2 52 6 429 2 128 2 831 2 130 2 5 2 382 2 132 4 235 2 133 2 135 4 385 2 333 2 334 2 838 2 781 2 843 4 387 2 389 2 247 2 79 4 848 2 686 2 567 2 742 2 853 4 347 2 348 2 352 2 397 2 23 4 27 10 158 2 861 2 462 2 160 2 161 8 577 2 409 2 167 4 530 8 31 2 360 6 808 4 262 2 412 2 413 2 105 2 533 8 645 4 813 12 219 2 597 2 223 2 44 2 114 4 656 8 424 2 372 2 317 2 485 2 
218 2 372 2 577 2 
218 2 372 2 577 2 
125 2 429 4 128 2 132 4 234 2 133 2 436 2 670 2 135 4 333 2 334 2 781 2 14 2 139 2 244 6 144 2 686 2 567 4 346 4 347 2 792 2 452 2 348 2 253 2 570 4 154 4 27 6 157 2 356 2 573 2 160 2 162 2 161 12 577 4 467 2 167 4 704 2 360 12 808 4 813 24 714 2 38 2 367 4 597 2 480 2 483 2 371 2 44 2 720 2 372 6 724 2 485 2 52 16 373 2 181 2 490 4 831 4 273 2 382 4 55 4 493 2 59 4 276 2 838 2 280 2 198 6 734 2 612 2 843 2 387 4 845 2 735 2 79 2 853 4 742 4 747 2 88 2 209 4 301 2 751 4 408 2 865 2 866 2 530 16 412 4 215 2 105 2 645 2 533 6 218 2 219 2 109 4 536 2 224 2 223 2 765 4 114 6 656 4 116 2 226 2 658 2 317 2 425 2 770 4 
570 2 52 2 488 2 813 4 714 2 356 2 157 2 507 2 735 2 6 2 94 2 597 2 865 2 385 2 724 2 555 2 454 2 
125 2 429 4 128 2 130 2 132 4 234 2 133 2 436 2 670 2 135 4 333 2 334 2 781 2 14 2 139 2 244 6 144 2 788 2 686 2 567 4 346 4 347 2 792 2 452 2 348 2 253 2 570 2 154 4 27 6 157 2 356 2 573 2 160 2 161 12 577 4 167 4 704 2 808 4 360 12 813 24 714 2 592 2 38 4 367 4 597 2 483 2 371 2 370 2 44 2 720 2 372 6 485 2 602 2 52 16 373 2 181 2 490 4 831 4 273 2 382 4 55 4 493 2 59 4 276 2 838 2 280 2 198 6 734 2 612 2 843 2 387 4 845 2 735 2 79 2 853 4 742 4 747 2 88 4 209 4 301 2 751 4 408 2 866 2 530 16 412 4 105 4 645 2 533 6 218 2 219 2 109 4 536 2 224 2 877 2 223 2 765 4 114 6 656 4 116 2 226 2 658 2 317 2 425 2 770 4 
125 2 429 4 128 2 130 2 132 4 234 2 133 2 436 2 670 2 135 4 333 2 334 2 781 2 14 2 139 2 244 6 144 2 686 2 249 2 567 4 346 4 347 2 792 2 452 2 348 2 253 2 570 4 154 4 27 6 157 2 356 2 573 2 160 2 161 12 577 4 167 4 704 2 360 12 808 4 813 24 714 2 38 2 367 4 597 2 483 2 371 2 44 2 720 2 372 6 724 2 485 2 727 2 52 16 373 2 181 2 490 4 831 4 273 2 382 4 55 4 493 2 59 4 276 2 838 2 280 2 198 6 734 2 612 2 843 2 387 4 845 2 735 2 79 2 741 2 853 4 742 4 747 2 88 2 209 4 301 2 751 4 408 2 411 2 865 2 866 2 530 16 412 4 105 4 645 2 533 6 218 2 219 2 109 4 536 2 224 2 223 2 765 4 114 6 115 2 656 4 116 2 226 2 658 2 317 2 425 2 770 4 
661 2 864 2 581 2 798 2 324 2 807 2 37 2 366 2 342 2 147 2 
747 2 88 3 52 2 433 2 521 4 405 3 30 2 705 2 806 2 779 2 280 2 839 3 783 2 680 2 242 2 217 2 813 2 785 2 143 6 536 2 650 2 743 3 723 2 118 2 626 1 
680 2 217 2 52 2 88 2 242 2 747 2 813 2 785 2 143 6 433 2 521 4 30 2 405 2 536 2 650 2 743 2 118 2 723 2 705 2 806 2 779 2 280 2 839 2 783 2 
680 2 217 2 52 2 88 2 242 2 747 2 813 2 785 2 143 6 433 2 521 4 30 2 405 2 536 2 650 2 743 2 118 2 723 2 705 2 806 2 779 2 280 2 839 2 783 2 
426 2 726 2 52 4 427 3 129 2 187 2 275 2 732 2 780 2 839 3 442 4 67 2 242 2 339 2 685 4 84 2 453 6 293 2 88 3 296 3 857 2 163 6 98 2 638 4 469 2 526 2 470 2 804 2 527 2 809 2 711 2 588 4 813 10 536 2 651 4 174 4 766 3 879 2 723 2 541 4 
426 2 726 2 603 2 52 4 427 2 129 2 547 2 187 2 275 2 732 2 780 2 839 2 442 4 67 2 242 2 339 2 685 4 84 2 453 6 293 2 88 2 296 2 857 2 163 4 98 2 638 4 469 2 526 2 470 2 804 2 527 2 809 2 711 2 758 2 588 4 813 10 536 2 651 4 174 4 766 2 879 2 723 2 541 4 
426 2 726 2 603 2 52 4 427 2 129 2 547 2 187 2 275 2 732 2 780 2 839 2 442 4 67 2 242 2 339 2 685 4 84 2 453 6 293 2 88 2 296 2 857 2 163 4 98 2 638 4 469 2 526 2 470 2 804 2 527 2 809 2 711 2 758 2 588 4 813 10 536 2 651 4 174 4 766 2 879 2 723 2 541 4 
426 2 726 2 603 2 52 4 427 2 129 2 547 2 187 2 275 2 732 2 780 2 839 2 442 4 67 2 242 2 339 2 685 4 84 2 453 6 293 2 88 2 296 2 857 2 163 4 98 2 638 4 469 2 526 2 470 2 804 2 527 2 809 2 711 2 758 2 588 4 813 10 536 2 651 4 174 4 766 2 879 2 723 2 541 4 
426 2 726 2 603 4 52 4 427 2 129 2 547 4 187 2 275 2 732 2 780 2 839 2 442 4 67 2 242 2 339 2 685 4 84 2 453 6 293 2 88 2 296 2 857 2 163 4 98 2 638 4 469 2 526 2 470 2 804 2 527 2 809 2 711 2 758 4 588 4 813 10 536 2 651 4 174 4 766 2 879 2 723 2 541 4 
165 2 683 2 11 2 298 2 396 2 709 2 
481 2 695 2 719 2 266 2 431 2 513 2 709 2 
746 1 52 8 628 2 860 2 406 2 523 2 437 2 257 2 778 1 196 1 263 2 500 2 140 2 813 10 308 2 219 2 340 1 595 2 594 2 761 2 448 2 512 2 540 1 744 2 49 2 795 2 
426 2 603 3 52 6 489 2 857 6 665 4 28 2 728 2 435 2 775 2 547 3 163 16 98 6 636 2 638 12 526 6 470 6 527 6 553 2 137 2 473 2 809 6 711 6 758 3 813 6 70 2 363 2 393 4 541 4 659 2 
281 2 52 1 588 2 1 2 813 1 362 1 72 2 685 2 325 4 801 2 832 2 687 7 83 2 701 2 45 2 64 2 826 2 442 2 
281 2 588 2 1 2 72 2 685 2 325 4 801 2 832 2 687 6 83 4 701 2 45 4 64 2 826 4 442 2 
281 6 52 1 588 2 1 2 813 1 362 1 72 2 685 2 325 4 801 2 832 8 687 10 83 8 701 2 45 8 64 2 826 8 442 2 
588 2 1 2 72 2 685 2 325 2 801 2 687 2 83 2 701 2 45 2 64 2 826 2 442 2 
321 6 229 2 124 2 126 1 323 2 8 8 549 4 551 10 550 2 436 6 330 8 776 10 672 4 240 6 674 16 440 10 139 2 558 4 443 2 559 4 18 4 244 102 245 4 562 2 146 4 345 2 449 4 349 2 24 2 153 2 353 32 355 4 799 32 697 8 698 4 29 4 573 26 706 2 810 4 585 4 707 4 708 2 713 2 813 78 477 4 364 2 596 4 172 4 268 4 818 2 43 4 484 4 51 4 50 4 52 70 53 2 487 4 374 4 377 4 379 24 185 4 54 4 731 8 274 4 835 4 278 4 192 4 65 10 66 10 842 8 502 4 285 24 509 4 77 16 78 11 849 6 619 8 82 2 289 4 624 2 203 4 398 2 401 4 516 6 630 2 208 4 209 44 299 2 95 4 631 4 632 6 863 24 751 36 99 8 637 4 639 10 529 4 869 16 106 4 107 2 534 16 309 4 310 4 764 14 539 2 116 6 658 28 542 10 881 8 122 2 
52 26 124 2 53 2 487 2 183 2 54 4 233 2 8 6 549 2 274 4 436 2 191 2 675 2 440 6 192 4 66 2 336 2 139 2 559 2 244 40 509 4 78 2 146 2 849 2 289 4 624 2 349 2 24 2 153 2 89 2 353 6 516 2 630 2 355 2 209 14 573 12 632 4 751 14 863 8 639 6 471 2 869 14 106 2 107 2 813 28 309 4 479 2 647 2 40 10 818 2 268 4 653 2 539 2 116 2 484 2 658 12 600 2 542 6 122 2 
321 6 124 2 432 90 545 2 233 2 131 4 8 16 549 10 436 14 330 50 672 4 440 16 675 4 556 4 336 2 139 8 558 6 443 2 559 10 18 6 244 248 245 6 562 2 248 8 146 10 446 12 566 4 449 6 790 4 349 2 794 24 153 4 353 34 355 4 698 6 29 4 573 58 578 10 166 24 471 11 706 4 810 6 585 6 707 6 713 2 813 150 477 6 596 6 479 2 818 2 268 8 40 22 41 18 43 6 484 10 600 4 51 4 50 6 52 134 487 6 53 2 183 2 377 6 379 84 729 8 185 4 54 6 731 42 274 6 835 4 836 26 60 4 495 10 191 2 192 6 66 18 195 24 282 26 842 24 502 4 283 8 509 6 285 92 78 16 849 10 621 2 82 2 392 6 289 6 624 8 855 4 854 10 401 4 89 8 627 4 629 6 516 36 630 8 208 4 209 112 631 4 632 8 97 2 750 4 863 124 751 88 752 4 304 2 639 16 529 6 869 28 106 4 107 5 534 42 871 2 309 6 310 4 418 24 420 24 647 2 764 12 539 2 116 14 658 58 316 90 542 16 122 8 
24 2 52 16 487 1 53 2 179 2 630 2 491 2 4 2 209 6 573 4 384 2 863 2 751 6 436 2 639 2 706 1 440 2 192 2 475 2 869 9 139 2 813 16 107 2 244 14 509 2 818 2 620 2 149 2 289 2 539 2 624 2 116 2 658 4 349 2 542 2 252 2 122 2 
579 2 

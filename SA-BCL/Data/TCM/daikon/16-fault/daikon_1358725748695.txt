#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.NullPointerException 469 (414,508) 56 (43,107,135,253,370,395,479) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 469 (414,508) 56 (43,107,135,253,370,395,479) 180 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 419 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NoClassDefFoundError (157,346) (157,346) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 341 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 341 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 341 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 341 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 341 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 567 249 312 59 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.NoClassDefFoundError (75,488) (75,488) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NoClassDefFoundError (75,488) (75,488) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NoClassDefFoundError (75,488) (75,488) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NoClassDefFoundError (75,488) (75,488) 
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 203 586 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 203 586 
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 203 586 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 203 586 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 4201 | 0 -> -1
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:union([I[I)[I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.Quant:concat([I[I)[I
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:ne(II)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:isReverse([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_53()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsGT([II)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:eltsGTE([II)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.MathMDE:negate(I)I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap:size()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaCharStream:FillBuff()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_48()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 3675 | if (x) -> if (!x)
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:pow(II)I
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String; | CONDITION | 44690 | if (x) -> if (!x)
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:lt(II)Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 18003 | if (x) -> if (!x)
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:memberOf(D[F)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_162()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:slice([III)[I
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
utilMDE.Intern:intern([J)[J
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_161()Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaCharStream:getEndColumn()I
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(JJ)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([I)[I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:intersection([I[I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.ModBitTracker:num_samples()I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:noDups([I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(FF)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_135()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:memberOf(F[F)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:eq(DD)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 2840 | = null
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:lte(II)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:eltwiseLTE([I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:gt(II)Z
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseGT([I[I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
154 2 573 2 45 2 359 2 360 2 325 4 108 2 7 2 458 2 
66 2 177 2 208 2 21 2 79 6 476 2 104 2 334 2 397 6 74 2 17 6 
357 2 575 4 127 6 151 2 130 6 154 2 531 2 502 4 468 2 34 6 503 6 279 2 108 2 
523 4 395 6 526 2 396 4 364 29 293 2 56 16 218 2 469 26 13 2 297 10 370 6 18 10 108 6 508 16 572 10 414 10 113 2 443 8 308 8 579 8 25 16 154 6 32 10 119 4 319 13 556 2 595 2 163 8 389 4 
490 4 280 6 
340 2 
168 4 98 2 401 2 101 2 264 2 330 2 13 2 407 2 536 2 184 2 109 2 110 2 186 2 415 4 22 2 475 2 343 2 548 2 550 2 350 2 199 2 285 2 53 2 292 2 563 2 366 2 138 4 439 2 573 2 147 2 229 2 72 2 446 2 152 2 242 2 83 2 455 2 592 2 320 2 164 2 
253 4 498 2 364 14 56 10 135 8 469 14 297 4 107 2 18 4 108 4 508 10 571 2 572 4 414 4 579 4 233 6 25 10 479 4 235 6 154 4 239 2 319 6 43 2 
450 2 173 2 109 2 
19 2 189 2 472 2 143 2 305 22 288 2 3 2 343 2 114 10 365 2 295 2 178 2 136 2 225 2 
395 2 8 2 364 6 56 2 469 4 297 2 406 2 179 2 18 2 508 2 572 2 414 2 579 2 193 2 25 2 32 4 313 2 283 2 204 2 319 2 487 2 389 2 457 2 
572 2 414 2 396 2 25 6 498 2 479 4 235 6 364 8 56 6 469 8 534 2 297 2 180 2 319 2 18 2 508 6 43 2 
0 2 125 2 209 2 126 4 95 2 169 2 171 62 527 4 172 2 173 6 264 2 217 4 58 4 224 4 138 4 507 2 539 14 139 2 109 8 141 2 441 4 344 4 232 2 446 4 345 2 115 4 197 10 551 2 450 2 519 10 383 2 35 4 385 2 588 2 423 2 205 2 425 4 557 4 85 2 352 2 
355 2 94 2 493 2 49 2 340 2 380 2 311 2 547 2 554 2 593 2 
419 2 
154 2 106 2 
236 2 154 4 170 2 
307 2 
391 2 251 10 165 10 93 2 255 2 459 14 460 14 326 2 259 2 260 2 99 2 327 2 402 2 9 2 404 2 11 2 12 18 408 2 181 2 538 2 15 8 540 2 111 2 338 14 342 2 20 8 271 14 192 14 478 2 194 2 28 10 481 8 347 2 198 2 118 4 200 4 421 10 201 2 37 2 40 8 282 2 486 50 206 50 558 2 121 2 207 2 356 18 44 2 124 2 289 8 496 2 128 2 561 6 500 2 55 14 216 4 362 2 132 2 433 6 367 12 505 2 372 4 60 2 371 14 374 2 223 4 375 2 302 2 65 6 377 14 227 2 228 2 69 14 511 2 578 2 146 14 444 14 513 2 445 12 514 4 381 4 581 2 77 4 451 2 316 2 454 6 589 32 244 2 318 2 246 2 456 2 594 50 160 6 247 8 162 10 88 2 
473 1 265 2 137 2 263 2 
321 2 263 2 
196 2 413 2 523 2 324 2 545 2 263 2 109 2 
585 2 324 2 263 2 
329 2 324 2 263 2 
67 2 137 2 54 2 
324 2 263 2 
112 2 54 2 
263 2 403 2 
569 2 137 2 54 2 
219 2 591 2 137 2 
584 2 482 2 137 2 
528 2 137 2 596 2 
393 2 221 2 137 2 
484 2 54 2 
379 2 263 2 
1 2 591 2 
584 2 564 2 
528 2 336 2 
323 2 221 2 
509 2 54 2 
543 2 221 2 
528 2 267 2 
176 2 584 2 
591 2 64 2 
569 2 137 2 499 2 54 2 
435 2 569 2 137 2 499 2 54 2 
91 2 137 2 54 2 
137 2 54 2 185 2 
516 2 410 2 424 2 84 2 
322 2 252 2 358 2 305 6 492 4 392 2 494 2 24 4 349 2 532 2 220 2 483 2 434 2 241 2 156 2 222 2 521 2 86 2 
137 2 248 2 
51 2 545 2 109 2 284 2 
196 2 51 2 545 2 29 2 109 2 284 2 
523 2 324 2 52 2 545 2 263 2 109 2 
432 2 407 2 
523 2 348 2 545 2 109 2 
528 2 129 2 
221 2 153 2 
190 2 591 2 
584 2 583 2 
584 2 221 2 485 2 
584 2 331 2 221 2 
584 2 221 2 471 2 
584 2 221 2 81 2 
157 2 346 2 
384 2 54 2 
582 2 
341 2 
341 2 
517 2 354 2 290 2 
517 2 354 2 290 2 
341 2 
341 2 
341 2 
123 2 195 2 353 2 249 2 312 2 567 2 314 2 278 2 59 2 
210 2 155 2 243 2 462 2 437 2 546 2 
440 2 57 2 213 2 63 2 161 2 275 2 546 2 
212 2 463 2 399 1 431 2 10 2 294 2 565 2 369 2 506 2 183 2 108 8 570 1 412 2 438 2 378 2 510 2 576 2 477 1 232 1 154 10 33 2 453 2 422 2 39 2 388 2 205 1 
75 2 488 2 
75 2 488 2 
75 2 488 2 
75 2 488 2 
2 9 5 2 6 10 328 4 333 10 14 8 16 24 337 2 23 4 26 6 30 34 31 17 36 4 38 28 351 2 42 6 48 124 50 114 361 10 363 92 368 2 373 24 61 6 62 6 70 4 71 90 73 6 78 4 82 4 387 2 87 6 390 6 90 15 92 2 96 6 97 4 398 4 100 2 405 50 102 10 103 4 105 4 108 136 116 250 117 1 418 4 420 42 426 8 427 24 428 84 131 2 134 6 436 6 140 10 145 24 148 6 442 2 149 4 150 1 447 4 448 1 154 152 158 6 159 4 166 2 461 4 464 4 465 1 175 2 467 26 187 8 474 4 191 16 202 2 203 2 489 6 491 16 211 4 495 18 501 57 504 8 226 22 230 8 231 8 515 16 234 2 237 18 518 6 240 2 520 26 245 6 522 15 250 10 257 4 525 24 258 4 529 12 530 5 535 4 537 6 541 8 269 36 268 6 542 10 272 8 274 4 544 2 549 6 552 90 553 4 555 8 281 57 286 2 287 4 291 8 562 6 566 6 296 42 298 2 299 24 300 16 301 6 303 12 304 4 306 6 577 11 580 90 310 2 586 2 315 10 317 6 
89 2 250 2 90 2 92 2 167 2 2 2 96 2 524 2 525 2 4 2 261 2 6 2 465 2 174 2 466 2 530 2 332 2 102 2 333 2 266 2 409 2 182 2 470 2 16 2 108 44 337 2 269 2 339 2 541 2 542 2 270 4 188 2 416 2 191 4 272 6 273 4 27 2 31 2 276 2 116 44 117 2 277 2 552 20 36 2 203 2 38 38 281 2 202 2 120 2 41 2 122 6 42 2 429 2 559 2 48 6 214 2 50 20 291 2 215 4 560 4 361 2 134 2 501 2 133 2 566 2 504 2 299 2 61 4 300 4 140 2 376 2 68 2 574 2 306 2 230 2 512 2 309 2 310 2 447 2 515 4 448 2 382 2 237 2 154 46 76 2 586 2 452 2 587 2 315 2 80 2 317 2 522 2 
2 2 464 2 5 2 6 4 465 10 333 4 182 2 335 4 23 4 191 10 26 4 30 30 480 4 31 10 203 2 202 2 38 14 42 4 489 4 491 8 46 8 47 2 48 24 50 44 497 4 363 24 501 30 504 2 61 2 62 4 230 2 73 4 231 4 515 10 237 10 238 4 78 4 518 4 386 2 245 4 522 6 87 4 390 4 90 6 254 32 92 2 394 8 257 4 256 2 96 4 97 4 258 4 398 4 100 2 529 14 262 4 405 8 533 8 102 4 103 4 535 4 105 4 537 4 108 70 411 16 269 6 541 2 272 6 544 2 276 2 116 104 549 4 117 10 552 36 418 4 417 4 553 4 420 16 555 4 281 28 286 2 428 24 430 2 562 4 134 4 566 4 296 8 568 2 436 4 300 10 301 4 140 4 142 16 144 2 145 8 306 4 148 4 310 2 448 10 154 78 586 2 449 4 587 2 315 6 590 8 317 4 159 4 
90 2 92 2 2 2 461 2 96 4 398 2 464 2 6 2 175 2 530 2 333 2 102 2 108 26 187 2 337 2 541 2 269 2 474 2 191 6 272 4 30 6 116 40 31 2 552 14 555 4 203 2 38 14 281 12 202 2 351 2 42 4 491 6 48 8 50 14 131 2 501 12 134 4 566 4 368 2 298 2 504 2 300 6 61 2 226 10 140 2 577 2 306 4 230 2 310 2 515 6 154 28 237 2 586 2 452 2 587 2 315 2 317 4 159 2 522 2 
400 2 

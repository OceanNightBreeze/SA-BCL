#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 635 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (86,767) 763 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 259 907 1033 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 924 532 
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 237 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 739 1067 88 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_2_36(I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_2_25(I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_109()Z
daikon.PptSlice0:arity()I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3R_114()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_116()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3R_69()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_2_4(I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:memberOf(F[F)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:eltsGTE([II)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_81()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:union([I[I)[I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3_27()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptSlice1:arity()I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_119()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:min([I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:eltwiseGT([I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_35()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3_14()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:memberOf(D[F)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:intern([D)[D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3_21()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_51()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_100()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3_15()Z
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_13()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_70()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_123()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 15328 | return null
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_97()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:eltsGT([II)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern:intern([J)[J
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_29()Z
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_22()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1858 | return null
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 99550 | = null
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3R_106()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_105()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_47()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_53()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Debug:logOn()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_vars()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4561 | = null
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_104()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_2_21(I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_63()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_3R_61()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_4()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3R_52()Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_102()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_67()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_135()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptSlice1:num_samples()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3_16()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_115()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Quant:lt(II)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoAux:hashCode()I
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Debug:logDetail()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3_17()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaCharStream:readChar()C
utilMDE.Intern:numIntArrays()I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_18()Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_48()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:size()I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_110()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_1()Z
daikon.VarInfo:new_ppt()V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3_28()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isIntegral()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:getConfidence()D
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_25()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_12()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_5()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_62()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | ASSIGN | 35390 | = null
jtb.JavaParser:jj_3R_134()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_80()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3R_87()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ModBitTracker:split(I)I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_121()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:subsetOf([J[J)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_103()Z
daikon.Quant:eq(II)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_124()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:lexGT([I[I)Z
daikon.ProglangType:isScalar()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_120()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
daikon.ModBitTracker:num_samples()I
daikon.Quant:lexEqual([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptSlice2:arity()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isArray()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | STATEMENT | 27899 | stmt -> ;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
630 2 446 2 123 2 855 2 351 4 487 2 912 2 89 2 128 2 
541 2 499 2 94 2 612 6 339 2 99 2 22 6 722 2 748 2 1024 2 118 6 
962 6 1136 6 446 2 45 2 557 4 747 2 645 6 711 2 312 2 752 2 415 4 19 6 128 2 
423 4 82 8 563 10 942 2 24 16 1124 10 1093 2 360 6 58 2 364 8 64 2 446 6 252 2 42 4 969 8 1143 6 814 16 727 10 452 16 257 2 1070 26 1110 4 1111 29 1154 12 827 2 1113 10 782 4 375 8 742 10 128 6 
604 6 860 4 
620 2 
1077 2 132 2 1011 2 502 4 203 4 267 2 795 2 709 2 948 4 650 2 211 2 1104 2 446 4 589 2 1106 2 968 2 224 2 367 2 1038 2 827 2 831 2 81 2 302 2 467 2 86 2 981 2 619 2 474 2 987 2 320 2 483 2 174 2 324 2 406 2 857 2 488 2 767 2 999 2 630 2 495 2 416 4 934 2 1155 2 128 4 
377 6 82 18 563 6 1117 2 24 32 705 4 1120 2 160 4 1124 16 238 6 204 4 360 4 993 6 64 2 1139 6 446 4 1063 6 555 2 283 4 1143 4 727 16 814 32 452 32 187 4 558 4 820 6 1070 48 122 8 1110 2 1043 2 910 2 1111 54 740 4 779 2 1154 22 1113 16 742 16 375 6 128 4 
86 2 791 2 147 2 
422 2 470 22 1085 2 535 2 408 2 1014 2 767 2 728 2 946 2 116 2 165 2 843 2 476 2 1058 10 
82 2 563 4 24 2 1124 2 653 2 1062 2 404 2 587 2 1143 2 727 2 814 2 452 2 694 2 737 2 1070 4 191 2 1110 2 823 2 371 2 1111 6 1154 2 1113 2 742 2 
377 6 447 2 24 8 1063 6 705 4 814 8 727 4 1124 4 452 8 949 2 1070 12 740 4 1111 16 1154 4 782 2 1113 4 742 4 
975 14 833 2 638 2 86 8 791 6 264 2 468 62 702 2 945 2 6 2 435 2 244 2 1017 4 649 4 1131 2 1018 2 754 2 394 2 169 4 850 2 278 4 1104 2 68 4 513 4 857 4 514 10 771 4 258 4 147 2 1035 2 368 10 192 2 865 4 416 4 152 4 824 2 826 2 126 2 784 4 1114 2 
963 2 315 2 112 2 1051 2 635 2 
1005 16 562 2 565 2 428 2 134 2 881 2 708 1 883 4 568 2 138 6 1016 2 139 2 715 1 8 3 141 2 1022 2 894 3 445 2 12 2 448 12 446 32 901 2 284 4 13 2 593 3 596 2 291 2 597 2 290 1 16 2 454 2 904 2 17 2 294 2 1040 2 909 2 21 2 295 2 913 2 1047 2 1048 2 466 1 606 1 607 8 609 4 610 32 28 2 30 1 162 3 33 2 167 2 755 2 760 2 1059 2 323 3 35 2 176 4 329 1 624 2 183 24 766 4 486 2 769 2 46 2 772 2 1068 2 492 2 344 2 341 1 935 24 783 2 342 2 938 2 1076 1 347 2 49 2 789 1 197 2 1083 16 500 2 200 2 501 2 350 2 641 2 1087 3 206 32 950 8 1092 2 799 2 505 4 62 2 363 2 956 2 1097 1 958 2 959 1 65 2 218 2 511 3 226 3 227 2 519 3 816 2 521 1 369 1 230 2 972 1 822 2 73 2 74 2 660 6 373 2 667 2 79 3 830 6 378 2 671 2 1121 2 385 16 834 2 1126 2 674 2 90 2 677 2 840 6 390 4 100 2 107 2 401 2 549 4 550 2 552 3 852 16 855 2 110 2 996 2 254 8 859 2 864 2 1149 3 866 2 1001 2 124 2 125 1 1156 5 419 2 128 34 
463 2 128 2 
1049 2 128 4 346 2 
892 2 
877 2 564 6 2 160 265 2 3 8 4 48 570 2 271 2 272 4 572 2 575 2 576 2 891 6 578 2 579 2 581 2 9 50 898 2 897 2 280 2 586 2 286 2 14 8 595 2 903 2 905 2 293 4 908 4 601 4 602 4 911 2 605 2 303 2 305 2 27 2 614 2 308 2 309 2 310 8 615 36 616 2 32 2 314 2 313 2 316 2 317 2 922 2 925 4 927 2 38 26 37 2 326 10 40 2 327 2 625 4 330 8 929 2 41 2 44 2 332 30 931 2 334 2 333 4 628 2 629 4 335 2 336 4 337 2 48 2 340 2 636 2 637 2 639 2 349 6 943 2 50 2 640 26 944 2 51 2 53 2 643 4 356 2 951 2 57 26 954 2 59 2 63 8 957 2 961 216 66 16 366 4 70 2 971 2 655 2 657 2 370 2 372 2 661 2 663 4 973 4 668 2 78 8 80 10 974 44 83 4 978 2 87 2 383 2 672 2 983 2 93 2 91 2 984 2 986 8 95 46 96 2 393 50 681 4 97 24 396 2 102 2 103 160 104 2 106 2 399 2 400 2 688 8 994 2 109 2 405 2 410 2 407 2 113 16 114 4 413 2 414 2 696 2 699 28 420 2 1007 2 1010 2 704 4 1013 2 427 4 136 2 135 2 1015 2 437 2 436 2 716 2 140 2 440 2 720 2 721 2 723 2 442 4 143 2 444 2 1026 4 1028 2 145 50 724 50 729 2 451 2 733 2 734 2 731 2 732 50 1036 2 736 160 148 2 150 2 1041 2 456 4 151 2 457 4 741 10 1045 8 465 2 745 2 154 2 153 2 155 2 1050 2 156 2 469 2 471 4 749 2 164 38 1056 2 753 4 168 8 479 6 170 2 758 24 171 50 759 2 173 24 177 20 180 50 762 2 485 2 184 2 489 2 189 2 190 8 493 2 193 2 194 6 1072 2 1073 4 196 50 781 2 1075 2 787 2 788 14 498 2 1080 2 1082 2 792 2 202 2 793 2 797 2 798 4 1091 50 208 2 800 2 801 4 213 2 802 2 506 4 1099 2 1100 22 1103 2 509 2 220 2 809 2 810 4 515 2 812 2 517 4 815 16 1108 2 231 2 234 2 523 2 1116 2 832 50 1118 4 236 4 534 2 536 16 537 2 240 50 1125 36 540 2 838 4 242 12 1127 2 544 16 245 2 545 2 1132 6 844 2 547 4 250 2 847 2 1135 2 554 2 553 4 1141 2 856 50 1142 2 858 2 255 4 1144 2 556 2 862 2 559 2 560 2 868 22 867 20 869 2 870 2 260 4 262 2 
738 2 1008 2 1098 1 241 2 
685 2 1008 2 
423 2 86 2 1008 2 621 2 763 2 652 2 275 2 
1008 2 621 2 1002 2 
746 2 1008 2 621 2 
590 2 365 2 241 2 
1008 2 621 2 
282 2 365 2 
599 2 1008 2 
805 2 365 2 241 2 
482 2 464 2 241 2 
566 2 680 2 241 2 
443 2 941 2 241 2 
1039 2 662 2 241 2 
386 2 365 2 
129 2 1008 2 
482 2 1030 2 
566 2 92 2 
443 2 181 2 
573 2 662 2 
976 2 365 2 
662 2 355 2 
443 2 285 2 
566 2 603 2 
482 2 682 2 
805 2 1053 2 365 2 241 2 
805 2 424 2 1053 2 365 2 241 2 
179 2 365 2 241 2 
888 2 365 2 241 2 
279 2 880 2 821 2 666 2 
304 2 130 2 198 2 199 2 703 2 530 2 470 6 811 2 813 2 1107 2 1089 2 115 2 1130 2 985 4 988 4 98 2 142 2 960 2 
923 2 241 2 
86 2 626 2 763 2 683 2 
86 2 626 2 149 2 763 2 652 2 683 2 
817 2 423 2 86 2 1008 2 621 2 763 2 
483 2 1105 2 
630 2 86 2 763 2 918 2 
443 2 353 2 
662 2 117 2 
482 2 917 2 
566 2 34 2 
662 2 566 2 914 2 
662 2 566 2 1074 2 
566 2 662 2 1021 2 
212 2 566 2 662 2 
86 2 362 6 1133 6 804 2 763 2 449 2 186 2 819 2 
928 2 365 2 
200 2 
876 4 1006 2 881 2 883 4 138 2 137 2 713 2 1016 2 718 2 141 2 1022 6 445 2 446 26 901 2 448 8 284 2 13 2 1031 2 596 2 16 4 17 2 909 2 21 2 1048 2 609 4 610 4 159 2 916 2 30 2 618 2 167 2 35 2 176 4 766 2 486 2 46 2 772 2 492 2 1071 2 783 2 342 2 938 2 49 2 197 2 500 2 206 6 207 2 952 2 799 2 361 2 505 4 1097 2 518 2 816 2 660 4 74 2 73 2 667 2 830 2 376 2 381 2 1126 2 677 2 840 6 390 2 841 2 107 2 401 2 852 6 855 2 254 2 412 4 864 2 128 26 
876 4 1006 2 881 2 883 4 885 2 138 2 137 2 713 2 1016 2 718 2 1019 2 141 2 1022 6 445 2 446 26 901 2 448 8 284 2 13 2 1031 2 596 2 16 4 904 2 17 2 909 2 21 2 1048 2 609 4 610 4 159 2 916 2 30 2 617 2 167 2 35 2 176 4 766 2 486 2 46 2 772 2 492 2 1071 2 783 2 342 2 938 2 49 2 197 2 500 2 206 6 207 2 952 2 799 2 361 2 505 4 1097 2 816 2 660 6 74 2 73 2 667 2 830 2 381 2 1126 2 677 2 840 6 390 2 841 2 107 2 401 2 852 6 855 2 996 2 254 2 859 2 412 4 864 2 128 26 
425 2 
1081 2 848 2 
49 2 499 2 883 2 569 2 357 2 647 2 719 2 61 4 722 4 803 2 1023 4 896 2 1024 4 277 2 806 2 510 2 446 6 13 2 223 4 816 2 292 2 659 4 1109 2 524 2 1044 4 23 2 22 6 1048 2 379 2 609 2 612 6 239 4 1055 2 539 2 541 2 840 4 842 2 989 2 990 10 546 2 992 2 397 2 548 2 1061 8 328 2 854 2 997 2 690 2 118 6 772 2 491 2 697 2 775 2 633 2 783 2 127 8 936 2 938 2 700 2 128 12 
49 2 499 2 883 2 569 2 357 2 647 2 719 2 61 4 803 2 722 4 1023 4 896 2 1024 4 277 2 806 2 510 2 446 6 13 2 223 4 816 2 292 2 18 2 659 4 1109 2 524 2 1044 4 23 2 22 8 1048 2 379 2 380 2 609 2 612 8 239 4 1055 2 539 2 541 2 840 4 842 2 989 2 990 10 546 2 992 2 397 2 548 2 321 4 1061 8 854 2 997 2 118 6 772 2 491 2 697 2 775 2 633 2 339 2 783 2 127 8 936 2 938 2 700 2 128 12 
277 2 612 2 223 4 239 2 1055 2 118 2 569 2 539 2 491 2 659 4 989 2 397 2 548 2 23 2 803 2 722 2 700 2 1024 2 
49 2 499 2 883 2 569 2 357 2 647 2 719 2 61 4 722 4 803 2 1023 4 896 2 1024 4 277 2 806 2 510 2 446 6 13 2 223 4 816 2 292 2 659 4 1109 2 524 2 1044 4 23 2 22 6 1048 2 379 2 609 2 612 6 239 4 1055 2 539 2 840 4 842 2 989 2 990 6 546 2 992 2 397 2 548 2 1061 4 328 2 854 2 997 2 690 2 118 4 772 2 491 2 697 2 775 2 633 2 339 2 783 2 127 4 936 2 938 2 700 2 128 12 
49 2 499 2 883 2 569 2 357 2 647 2 719 2 61 4 722 4 803 2 1023 4 896 2 1024 4 277 2 806 2 510 2 446 6 13 2 223 4 816 2 292 2 659 4 1109 2 524 2 1044 4 23 2 22 6 1048 2 379 2 609 2 612 4 239 4 1055 2 539 2 840 4 842 2 989 2 990 6 546 2 992 2 397 2 99 2 548 2 1061 4 328 2 854 2 997 2 690 2 118 6 772 2 491 2 697 2 775 2 633 2 783 2 127 4 936 2 938 2 700 2 128 12 
49 2 499 2 883 2 569 2 357 2 647 2 719 2 61 4 722 4 803 2 1023 4 896 2 1024 4 277 2 806 2 510 2 446 6 13 2 223 4 816 2 292 2 659 4 1109 2 524 2 1044 4 23 2 22 6 1048 2 379 2 609 2 612 6 239 4 1055 2 539 2 541 2 840 4 842 2 989 2 990 6 546 2 992 2 397 2 548 2 1061 8 328 2 854 2 997 2 690 2 118 6 772 2 491 2 697 2 775 2 633 2 783 2 127 4 936 2 938 2 700 2 128 12 
49 2 499 2 883 2 569 2 357 2 647 2 719 2 61 4 722 4 803 2 1023 4 896 2 1024 4 277 2 806 2 510 2 446 6 13 2 223 4 816 2 292 2 659 4 1109 2 524 2 1044 4 23 2 22 8 1048 2 379 2 609 2 612 6 239 4 1055 2 539 2 541 2 840 4 842 2 989 2 990 10 546 2 992 2 397 2 99 2 548 2 1061 8 328 2 854 2 997 2 690 2 118 8 772 2 491 2 697 2 775 2 633 2 783 2 127 8 936 2 938 2 700 2 128 12 
49 2 499 2 883 2 569 2 357 2 647 2 719 2 61 4 722 4 803 2 1023 4 896 2 1024 4 277 2 806 2 510 2 446 6 13 2 223 4 816 2 292 2 659 4 1109 2 524 2 1044 4 23 2 22 6 1048 2 379 2 609 2 612 6 239 4 1055 2 539 2 541 2 840 4 842 2 989 2 990 10 546 2 992 2 397 2 548 2 1061 8 328 2 854 2 997 2 690 2 118 6 772 2 491 2 697 2 775 2 633 2 783 2 127 8 936 2 938 2 700 2 128 12 
876 4 263 2 879 2 883 4 270 2 569 2 889 2 7 4 892 6 896 2 276 2 277 2 901 2 588 2 13 2 284 2 287 6 592 2 596 2 598 2 904 2 17 2 292 2 22 12 23 2 609 4 610 2 612 4 919 6 311 2 35 2 322 6 325 2 328 2 627 6 930 2 46 2 633 2 936 2 342 2 938 2 346 6 49 2 947 2 55 1 357 2 647 2 359 2 361 2 61 4 955 4 651 2 659 4 660 6 379 4 670 2 384 2 675 2 676 1 677 2 390 2 391 1 989 2 990 2 992 2 397 2 99 4 101 2 107 2 996 2 997 2 411 6 118 8 697 2 418 7 700 2 128 46 421 1 133 6 138 2 710 2 718 2 719 2 1020 2 141 2 1022 6 722 4 1023 6 1024 4 445 2 446 24 448 4 1044 8 463 6 1048 2 743 2 159 4 1055 2 163 6 750 1 1060 6 1061 2 176 4 766 2 486 12 1066 6 185 2 770 6 772 2 491 2 775 2 780 8 783 2 197 2 499 4 500 2 205 7 206 8 207 2 799 2 505 4 803 2 507 2 1102 2 806 2 216 6 808 1 510 2 223 4 516 2 816 2 818 1 1109 2 1112 2 524 2 525 1 830 2 528 2 239 4 836 2 1126 2 539 2 542 2 840 6 842 4 546 2 249 10 845 2 548 2 849 1 1137 2 852 6 854 2 855 2 254 2 864 2 1151 6 873 6 874 2 
876 4 263 2 133 6 879 2 883 4 270 2 569 2 710 2 138 2 886 2 889 2 718 2 1020 2 719 2 7 4 141 2 892 6 1022 6 1023 6 722 4 276 2 1024 4 896 2 277 2 445 2 901 2 448 8 446 26 588 2 284 4 13 2 592 2 287 6 596 2 598 2 16 2 904 2 292 2 17 2 463 6 1044 8 23 2 22 12 743 2 1048 2 610 2 609 4 159 4 612 8 919 6 1055 2 163 6 311 2 322 6 35 2 1060 6 1061 6 325 2 176 4 328 2 627 6 930 2 486 12 766 4 1066 6 185 2 770 6 46 2 772 2 491 2 775 2 633 2 780 8 342 2 936 2 783 2 938 2 346 6 49 2 197 2 499 4 500 2 947 2 206 8 207 2 357 2 359 2 647 2 799 2 361 2 955 4 61 4 505 4 651 2 803 2 507 2 1102 2 806 2 216 6 510 2 223 4 516 2 816 2 659 4 1109 2 660 6 1112 2 524 2 830 2 379 4 528 2 670 2 384 2 836 2 239 4 1126 2 675 2 539 2 542 2 677 2 541 4 840 6 842 4 390 4 989 2 990 2 546 2 249 10 845 2 992 2 101 2 397 2 548 2 107 2 1137 2 852 6 854 2 855 2 996 2 254 2 997 2 411 6 118 8 695 2 864 2 697 2 1151 6 873 6 874 2 700 2 128 48 
876 4 263 2 133 6 879 2 883 4 270 2 569 2 710 2 138 2 886 2 889 2 718 2 1020 2 719 2 7 4 141 2 892 6 1022 6 1023 6 722 4 276 2 1024 4 896 2 277 2 445 2 901 2 448 8 446 26 588 2 284 4 13 2 592 2 287 6 596 2 598 2 16 2 904 2 292 2 17 2 463 6 1044 8 23 2 22 12 743 2 1048 2 610 2 609 4 159 4 612 8 919 6 1055 2 163 6 311 2 322 6 35 2 1060 6 1061 6 325 2 176 4 328 2 627 6 930 2 486 12 766 4 1066 6 185 2 770 6 46 2 772 2 491 2 775 2 633 2 780 8 342 2 936 2 783 2 938 2 346 6 49 2 197 2 499 4 500 2 947 2 206 8 207 2 357 2 359 2 647 2 799 2 361 2 955 4 61 4 505 4 651 2 803 2 507 2 1102 2 806 2 216 6 510 2 223 4 516 2 816 2 659 4 1109 2 660 6 1112 2 524 2 830 2 379 4 528 2 670 2 384 2 836 2 239 4 1126 2 675 2 539 2 542 2 541 4 677 2 840 6 842 4 390 4 989 2 990 6 546 2 249 10 845 2 992 2 101 2 397 2 548 2 107 2 1137 2 852 6 854 2 855 2 996 2 254 2 997 2 411 6 118 8 695 2 864 2 697 2 1151 6 873 6 874 2 127 4 700 2 128 48 
876 6 263 2 879 2 567 6 883 4 270 2 569 2 886 2 889 2 7 4 892 12 896 2 276 2 277 2 901 2 588 2 284 4 13 2 287 12 592 2 596 2 15 2 598 2 16 2 904 2 292 2 17 2 22 16 23 2 298 6 609 4 610 4 612 10 919 6 311 2 318 6 35 2 322 12 325 2 328 2 627 12 930 2 46 2 633 2 339 2 936 2 342 2 938 2 346 12 49 2 947 2 357 2 647 2 359 2 56 6 361 2 61 4 955 4 651 2 659 4 660 6 379 4 670 2 384 2 675 2 677 2 678 2 390 4 989 2 990 6 992 2 397 2 99 2 101 2 107 2 996 2 997 2 411 6 118 10 695 2 697 2 127 4 700 2 128 52 133 6 138 4 710 2 718 2 719 2 1020 2 141 2 1022 8 722 4 1023 6 1024 4 445 2 446 24 448 10 1044 8 463 12 1048 2 743 2 159 4 1055 2 163 6 473 2 1060 6 1061 6 176 4 764 2 1065 6 766 4 486 10 1066 6 185 2 770 6 772 2 491 2 775 2 780 8 783 2 197 2 499 4 500 2 796 6 206 12 207 4 799 2 505 4 803 2 507 2 1101 6 1102 2 806 2 216 6 510 2 223 4 516 2 816 2 228 2 1109 2 1112 2 524 2 830 4 528 2 1119 6 239 4 836 2 1126 2 538 2 539 2 541 4 543 6 542 2 840 6 842 4 546 2 249 8 548 2 1137 2 852 8 854 2 855 2 254 4 1146 2 864 2 1150 2 1151 6 873 6 874 2 
499 2 612 6 539 2 569 2 541 2 357 2 647 2 990 4 546 2 61 2 992 2 397 2 1023 2 803 2 722 4 896 2 1024 4 277 2 1061 6 328 2 854 2 223 2 118 6 491 2 697 2 659 2 775 2 1109 2 633 2 1044 2 22 4 127 4 936 2 700 2 128 4 
876 4 883 4 569 2 138 3 718 2 439 2 141 2 1022 6 1023 2 722 4 1024 4 896 2 277 2 445 2 901 2 446 24 13 2 596 2 904 2 17 2 1044 2 22 4 1048 2 609 4 610 3 612 6 159 2 35 2 1061 6 176 4 328 2 624 2 486 4 46 2 772 2 491 2 775 2 633 2 783 2 342 2 936 2 938 2 49 2 197 2 499 2 500 2 200 2 206 8 357 2 647 2 1094 3 799 2 361 2 61 2 505 4 803 2 510 2 223 2 816 2 659 2 232 2 1109 2 660 6 373 2 830 3 1121 2 1126 2 539 2 541 2 677 2 840 6 990 2 546 2 249 2 992 2 845 2 397 2 107 2 852 6 1140 2 854 2 855 2 996 2 118 6 691 2 698 2 697 2 700 2 128 28 
546 2 374 2 992 2 
546 2 374 2 992 2 
1009 2 883 4 718 2 1020 2 719 2 7 2 141 2 1022 2 1023 4 722 4 274 2 1024 4 11 2 445 2 448 4 446 16 901 2 588 2 284 4 13 2 596 2 904 2 17 2 20 4 1044 4 22 16 1048 2 609 4 610 2 158 2 159 6 612 12 1055 2 757 2 319 2 35 2 1061 6 176 4 331 2 766 4 486 4 46 2 772 2 491 2 775 2 633 2 339 4 783 2 342 2 939 2 938 2 49 2 499 4 500 2 52 2 354 2 644 2 206 2 952 4 953 2 799 2 361 2 955 2 505 4 61 2 214 2 803 2 69 2 223 2 816 2 656 4 659 2 660 6 374 2 524 2 379 2 528 2 1122 2 239 4 1126 2 677 2 541 4 840 6 842 4 390 4 392 2 990 6 546 6 249 2 992 4 99 4 548 2 107 2 852 2 855 2 996 2 997 2 998 2 118 12 864 4 873 2 127 4 700 4 128 24 
49 2 1081 2 1009 2 446 2 352 2 486 2 516 2 998 2 354 2 542 2 574 2 921 2 249 2 955 2 873 2 23 2 128 4 
1009 2 883 4 718 2 1020 2 719 2 7 2 141 2 1022 2 1023 4 722 4 274 2 1024 4 445 2 448 4 446 16 901 2 588 2 284 4 13 2 594 2 596 2 904 2 292 2 17 2 20 4 1044 4 22 16 1048 2 609 4 610 4 158 2 159 6 612 12 613 2 1055 2 757 2 319 2 35 2 1061 6 176 4 765 2 331 2 766 4 486 2 46 2 772 2 491 2 775 2 633 2 339 4 783 2 342 2 938 2 49 2 499 4 500 2 52 2 354 2 644 2 206 2 952 4 799 2 361 2 61 2 505 4 803 2 69 2 223 2 816 2 656 4 659 2 660 6 374 2 524 2 379 4 528 2 1122 2 239 4 1126 2 677 2 541 4 840 6 842 4 390 4 392 4 247 2 990 6 546 6 992 4 99 4 548 2 1134 2 107 2 852 2 855 2 996 2 997 2 998 2 118 12 864 4 873 2 127 4 700 4 128 24 
1009 2 883 4 718 2 1020 2 719 2 7 2 141 2 1022 2 1023 4 722 4 274 2 1024 4 582 2 445 2 448 4 446 16 901 2 588 2 284 4 13 2 596 2 904 2 292 2 17 2 20 4 1044 4 22 16 1048 2 609 4 610 2 158 2 159 6 612 12 1055 2 757 2 319 2 35 2 1061 6 176 4 331 2 766 4 486 4 46 2 772 2 631 2 491 2 775 2 633 2 339 4 783 2 342 2 938 2 1078 2 49 2 499 4 500 2 52 2 354 2 644 2 54 2 206 2 952 4 799 2 361 2 955 2 505 4 61 2 803 2 69 2 223 2 816 2 656 4 659 2 660 6 374 2 524 2 77 2 379 4 528 2 1122 2 239 4 1126 2 677 2 541 4 840 6 842 4 390 4 392 2 990 6 546 6 249 2 992 4 99 4 548 2 107 2 852 2 855 2 996 2 997 2 998 2 118 12 864 4 873 2 127 4 700 4 128 24 
876 4 1 2 883 4 431 2 434 2 138 2 1022 6 893 2 441 2 276 2 1025 2 10 2 445 2 144 2 446 18 13 2 1033 2 17 2 907 2 1048 2 609 4 25 2 610 2 159 2 307 2 35 2 176 2 178 2 43 4 486 2 932 2 46 2 772 2 783 2 342 2 938 2 49 2 197 2 500 2 1088 2 947 2 206 8 799 2 361 2 60 2 505 2 507 2 222 2 816 2 522 2 660 2 1112 2 76 1 828 1 669 2 830 2 1126 2 675 2 840 6 107 2 686 2 1137 2 852 6 853 2 855 2 259 2 1152 2 1004 2 128 24 
876 2 197 2 977 2 610 3 382 2 426 4 979 2 206 2 138 3 207 6 246 2 1022 2 105 2 852 2 108 2 446 2 654 2 146 2 71 2 256 3 872 2 343 2 1046 1 830 3 128 2 
876 2 197 2 977 2 610 2 382 2 426 4 979 2 206 2 138 2 207 6 246 2 1022 2 105 2 852 2 108 2 446 2 654 2 146 2 71 2 256 2 872 2 343 2 830 2 128 2 
876 2 197 2 977 2 610 2 382 2 426 4 979 2 206 2 138 2 207 6 246 2 1022 2 105 2 852 2 108 2 446 2 654 2 146 2 71 2 256 2 872 2 343 2 830 2 128 2 
744 2 1005 2 197 2 85 2 1083 2 610 3 24 2 382 2 306 4 533 2 1123 3 1124 2 206 2 679 4 438 2 360 2 622 2 248 2 446 4 966 2 512 3 409 4 591 6 970 2 727 2 814 2 452 2 72 2 1070 4 1147 3 1000 4 1148 2 1153 2 1111 6 1113 2 785 4 742 2 375 4 830 3 128 10 
1005 2 197 2 1083 2 206 2 360 2 438 2 64 2 446 4 966 2 512 2 591 6 970 2 814 2 727 2 452 2 72 2 1111 4 1113 2 375 4 742 2 830 2 744 2 82 2 85 2 24 2 610 2 382 2 533 2 306 4 1123 2 1124 2 679 4 622 2 248 2 409 4 1070 4 1147 2 1148 2 1000 4 1153 2 1154 2 785 4 128 10 
1005 2 197 2 1083 2 206 2 360 2 438 2 64 2 446 4 966 2 512 2 591 6 970 2 814 2 727 2 452 2 72 2 1111 4 1113 2 375 4 742 2 830 2 744 2 82 2 85 2 24 2 610 2 382 2 533 2 306 4 1123 2 1124 2 679 4 622 2 248 2 409 4 1070 4 1147 2 1148 2 1000 4 1153 2 1154 2 785 4 128 10 
1005 2 197 2 1083 2 206 2 360 2 438 2 64 2 446 4 966 2 512 2 591 6 970 2 814 2 727 2 452 2 72 2 1111 4 1113 2 375 4 742 2 830 2 744 2 82 2 85 2 24 2 610 2 382 2 533 2 306 4 1123 2 1124 2 679 4 622 2 248 2 409 4 1070 4 1147 2 1148 2 1000 4 1153 2 1154 2 785 4 128 10 
1005 2 197 2 1083 2 206 2 360 2 438 2 64 4 446 4 966 2 512 2 591 6 970 2 814 2 727 2 452 2 72 2 1111 4 1113 2 375 4 742 2 830 2 744 2 82 4 85 2 24 2 610 2 382 2 533 2 306 4 1123 2 1124 2 679 4 622 2 248 2 409 4 1070 4 1147 2 1148 2 1000 4 1153 2 1154 4 785 4 128 10 
890 2 182 2 532 2 924 2 269 2 
890 2 1031 2 503 2 288 2 237 2 345 2 188 2 
940 2 794 2 1052 2 1054 2 673 2 837 1 31 1 475 2 477 2 480 2 398 2 850 1 322 2 623 2 1138 2 687 2 761 2 446 8 490 2 458 2 825 1 664 2 783 2 786 2 1114 1 128 10 
377 4 82 2 24 6 1011 2 705 2 1124 6 360 2 474 2 714 2 210 2 64 2 964 2 583 2 1139 4 446 6 814 6 727 6 730 2 452 6 558 2 1070 12 600 2 122 2 233 2 1111 16 1154 3 1113 6 742 6 375 4 128 6 
36 2 175 2 39 4 527 2 584 2 446 1 409 2 266 2 768 7 472 2 388 2 1000 2 717 2 261 2 926 1 875 2 785 2 128 1 
36 2 175 4 39 4 527 2 584 4 409 2 266 2 768 6 472 2 388 2 1000 2 717 2 261 2 875 4 785 2 
36 2 175 8 39 4 527 2 584 8 446 1 409 2 266 2 768 10 472 2 388 8 1000 2 717 2 261 6 926 1 875 8 785 2 128 1 
36 2 175 2 39 2 527 2 584 2 409 2 266 2 768 2 472 2 1000 2 717 2 875 2 785 2 
432 2 5 2 887 1 577 2 273 2 580 2 900 2 899 2 446 24 1034 2 904 4 17 6 906 4 739 2 459 1 462 2 611 2 29 2 1057 1 172 4 176 8 1067 2 1069 2 338 4 774 2 634 2 937 2 1079 1 500 4 201 1 1084 2 358 2 209 2 505 10 1096 2 965 2 660 16 235 2 88 2 1126 6 395 4 991 1 846 2 251 2 851 2 403 2 996 4 861 2 119 1 863 2 1003 4 128 26 
701 2 497 2 561 2 0 2 131 2 500 2 706 2 878 2 707 2 1086 2 429 2 882 4 884 2 1090 2 5 4 646 2 712 2 571 2 504 2 209 2 505 20 1096 2 215 2 580 2 1027 2 67 2 446 44 221 2 1032 4 967 2 725 2 450 2 289 2 225 2 735 2 1034 2 229 2 1037 2 17 2 739 2 658 2 660 42 1042 2 459 2 460 4 296 2 665 4 299 2 526 2 300 2 829 6 1115 4 529 2 157 2 26 2 531 2 88 2 161 2 982 4 835 2 1126 2 920 2 839 2 389 2 166 2 551 2 402 4 176 20 403 2 995 2 484 2 111 6 1064 2 689 2 253 2 1067 2 1145 2 933 2 119 2 120 2 121 2 494 2 338 38 776 2 777 2 871 2 778 2 496 2 1003 6 128 46 
701 4 1012 4 268 4 430 4 432 4 5 2 433 16 712 4 571 4 887 5 577 30 895 4 580 2 900 8 899 4 585 8 446 70 1027 4 1029 4 281 4 902 2 726 2 735 6 1034 2 453 4 904 28 17 6 906 24 455 4 739 2 1042 4 460 10 462 4 296 2 297 4 301 2 608 4 915 8 611 4 157 4 751 14 756 2 481 2 1057 8 172 24 176 36 484 4 1067 2 1069 2 773 4 338 14 632 4 774 4 634 2 47 8 777 10 496 2 937 4 497 2 348 4 790 16 500 2 642 4 358 4 504 10 209 2 505 44 1095 2 807 2 508 4 217 4 219 4 520 2 660 104 75 4 665 10 526 4 829 6 1115 10 84 4 529 4 980 4 88 2 1126 6 387 4 389 6 1128 32 1129 4 243 4 395 8 846 4 684 4 251 4 551 10 851 16 403 2 995 2 689 4 996 30 692 2 861 8 119 10 121 10 863 4 1003 24 417 8 128 78 
701 4 1079 2 0 2 500 2 201 2 1084 2 268 2 5 2 712 2 571 4 504 2 209 2 577 6 505 14 580 2 965 2 446 26 1027 2 1034 2 735 2 520 2 904 12 17 2 455 2 739 2 660 40 1042 2 459 2 460 6 461 2 296 2 665 6 297 4 235 2 526 4 829 4 1115 6 157 4 529 2 26 2 29 10 88 2 1126 2 389 2 478 2 1057 6 403 2 176 14 995 2 484 4 689 4 996 12 1067 2 693 2 119 2 338 14 195 2 1003 8 128 28 
648 2 

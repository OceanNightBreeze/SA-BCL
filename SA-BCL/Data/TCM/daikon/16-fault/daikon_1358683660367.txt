#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 153 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (419,1026) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 349 884 280 50 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 198 580 
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 735 477 84 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:lexGTE([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3_35()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_3R_169()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_53()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_3_29()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_54()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3_16()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13809 | = null
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:logOn()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet; | ASSIGN | 2825 | = null
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.Quant:subsetOf([J[J)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.PptSlice1:num_samples()I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.Quant:slice([III)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_72()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
jtb.JavaParser:jj_3R_70()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_99()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_123()Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.PptSlice2:arity()I
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_180()Z
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_110()Z
utilMDE.ArraysMDE:sum([D)D
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([J)[J
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:isEnterPoint()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:jj_3R_62()Z
utilMDE.Intern:intern([D)[D
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:ne(II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_74()Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_97()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:isReverse([I[I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_164()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:negate(I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isArray()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3R_106()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3R_107()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_63()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_25()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:lexNotEqual([I[I)Z | CONDITION | 170166 | if (x) -> if (!x)
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.Quant:eltsGT([II)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.Quant:sameLength([I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3_14()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I | RETURN | 61113 | return null
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3_4()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_ntk()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:gcd([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_89()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3_12()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_85()Z
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsGTE([II)Z | OPERATOR | 163389 | == -> !=
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_56()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3_15()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3R_116()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_60()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParser:jj_3_18()Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_17()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long; | RETURN | 14834 | return null
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_100()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:eltsLtIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_5()Z
daikon.diff.RootNode:RootNode()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_134()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node()V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_18(I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:min([I)I
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_109()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:noDups([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3R_81()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:jj_3R_58()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:lte(II)Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:union([I[I)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.PptName:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_87()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[F)Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_3R_133()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:eq(II)Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:gte(II)Z
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_115()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_50()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_22()Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_3R_88()Z
daikon.Quant:lt(II)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.PptSlice0:arity()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_2_14(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_122()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaCharStream:backup(I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.FormatCommand:getCommand()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern:numIntArrays()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(II)I
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 283084 | = null
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_77()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_117()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_73()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
utilMDE.Intern:internSubsequence([III)[I
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_101()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_67()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_136()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
784 2 1161 2 410 4 561 2 265 2 1212 2 1066 2 742 2 1354 2 
482 2 969 2 1252 6 888 2 661 2 1149 6 137 2 890 6 571 2 101 2 144 2 
73 2 384 2 471 2 1347 2 458 2 311 4 1285 2 153 2 788 2 
1161 6 527 4 1132 2 121 16 284 4 1342 10 246 4 530 16 247 2 1343 2 363 10 289 6 249 28 1243 2 649 8 1310 16 758 10 34 12 1181 10 1313 10 1229 4 212 8 160 2 299 6 21 8 619 8 1212 6 236 2 300 26 402 2 
1251 6 151 4 
1207 2 
1026 2 864 2 1257 2 147 2 982 2 199 2 868 2 124 2 644 2 551 2 643 2 1302 2 456 2 1241 2 265 4 874 2 292 2 691 4 972 2 1182 2 1287 2 781 2 1043 2 236 2 469 4 741 2 422 2 1351 2 704 2 
1161 4 569 4 906 6 1295 4 121 32 1256 6 4 6 1342 16 474 2 475 4 530 32 556 2 363 16 289 4 1173 2 249 54 711 4 346 4 393 8 1331 2 612 6 754 6 399 6 1204 4 758 16 1310 32 1313 16 34 22 1181 6 1229 2 759 4 212 18 160 2 299 4 619 6 1212 4 300 48 1352 2 822 2 
1026 2 869 2 838 2 
223 2 1330 2 668 2 1019 2 419 2 1113 2 851 2 652 22 1228 2 149 2 49 2 913 10 524 2 991 2 
585 2 121 2 1133 2 1342 2 530 2 984 2 363 2 166 2 289 2 391 2 249 6 758 2 1310 2 1313 2 34 2 109 2 1181 4 1229 2 212 2 760 2 1317 2 300 4 196 2 
441 2 569 4 906 6 399 6 121 8 1310 8 758 4 34 4 246 2 1313 4 1342 4 530 8 1035 2 300 12 363 4 711 4 249 16 
1026 8 146 2 683 4 503 4 27 2 1032 4 1136 10 199 2 28 2 1073 4 72 2 551 4 506 2 687 2 182 14 869 6 838 2 206 2 343 4 990 62 131 4 250 4 1124 2 297 2 1309 2 81 10 187 4 253 2 653 2 110 4 368 2 780 2 271 2 1152 2 900 2 336 4 469 4 1004 2 423 2 1187 4 
546 2 1007 2 443 2 329 2 323 2 662 2 1207 2 635 2 844 2 392 2 
95 2 429 16 1192 2 745 2 910 2 181 2 339 2 746 2 587 16 5 2 6 1 1281 8 510 2 342 2 666 2 7 2 514 2 1092 2 11 2 10 4 348 2 106 2 14 1 517 2 924 2 925 3 269 3 1286 2 1100 3 192 1 270 2 1208 6 272 2 448 2 22 2 843 2 1212 34 1023 2 115 2 599 2 1106 2 119 2 931 6 25 1 682 12 1214 32 846 2 360 2 767 2 282 3 685 2 768 2 122 1 604 2 1114 1 1220 2 606 2 287 2 1036 2 942 1 944 3 366 5 857 8 615 2 462 2 1226 2 1312 3 951 2 466 2 952 1 213 2 138 2 38 1 1232 24 1233 3 39 2 544 2 703 2 301 1 785 1 1044 3 225 2 623 1 378 2 550 2 1137 2 867 4 46 2 47 2 1324 2 791 1 476 2 1326 2 967 2 398 1 971 3 973 2 154 1 564 2 633 2 484 3 315 2 1148 4 718 4 1061 2 159 2 800 2 488 16 1065 2 1155 2 568 24 977 2 638 2 1161 32 242 2 1340 2 802 2 1255 2 641 2 321 2 1074 12 409 2 164 2 987 2 494 2 165 2 1172 2 733 2 496 3 813 32 992 4 251 6 80 2 1178 2 252 6 82 2 330 1 83 2 581 4 86 2 88 8 334 16 1002 2 1186 2 424 4 902 2 1270 4 1188 3 1354 2 
1212 2 1058 2 
1018 2 567 2 1212 4 
215 2 
660 8 1006 4 659 6 1010 46 1011 112 340 160 341 60 1014 12 663 86 344 6 345 2 1016 432 1017 2 8 2 347 48 9 2 667 2 670 2 671 68 672 6 674 84 1021 2 676 98 350 28 18 6 19 46 20 112 352 6 353 2 679 432 680 2 23 2 681 6 358 2 1025 2 26 12 359 2 1027 4 684 118 361 16 1030 2 1031 4 1033 4 29 2 364 12 1039 6 365 4 1040 2 693 2 1041 20 33 4 695 2 35 2 36 2 697 30 698 2 699 2 370 4 372 2 374 66 40 2 42 52 1046 22 1048 6 705 70 380 64 1050 8 45 4 381 8 1051 4 707 32 382 46 1052 2 389 4 709 6 390 2 52 4 54 2 394 2 396 4 397 26 712 4 57 2 715 46 714 2 716 6 59 2 1057 6 1056 2 1060 30 400 6 1063 6 62 2 720 4 1064 198 65 2 1068 46 1067 88 1069 4 404 2 66 328 67 6 1070 6 1071 2 406 2 1072 30 69 24 71 4 408 26 726 2 74 10 411 6 728 4 412 6 1076 198 76 182 77 2 1077 228 414 18 730 2 731 6 1079 4 732 2 79 2 734 2 416 4 737 2 85 6 420 2 738 4 740 16 89 2 90 64 743 6 1085 4 427 2 425 2 92 4 428 6 93 6 94 2 1087 6 96 6 747 6 748 4 100 204 1088 4 432 2 433 6 434 6 436 2 102 6 750 4 103 2 1090 112 437 6 438 26 1092 2 439 16 1093 2 442 2 751 14 105 60 107 2 1095 26 1096 4 1098 10 1097 4 445 4 444 2 757 2 446 12 1099 2 111 2 447 60 1102 244 762 2 763 12 1107 224 117 18 764 2 766 6 1109 18 120 4 1110 2 1111 2 454 6 1112 566 455 2 123 20 1115 10 125 6 772 30 773 336 129 2 775 2 1118 10 130 2 1122 12 1123 2 777 30 460 4 778 8 135 2 464 2 1126 328 1127 4 465 2 139 4 468 12 467 2 141 2 143 2 783 26 145 2 787 4 148 4 1139 2 1140 2 1142 4 793 14 152 22 794 2 480 2 481 6 483 14 1147 8 486 8 798 2 801 24 1156 2 489 2 1161 10 1160 12 1159 182 161 4 490 20 804 4 805 2 163 112 807 198 808 4 493 6 492 2 1168 20 1169 12 809 22 811 290 1174 2 812 4 168 26 170 28 171 2 172 30 1177 4 1179 2 815 204 1180 6 175 4 818 8 1183 198 1184 2 820 4 1185 2 501 4 823 2 179 6 827 2 502 2 829 2 504 2 1193 2 1194 6 505 8 1196 2 834 4 508 2 837 12 1200 376 511 244 513 2 183 2 515 14 841 2 1202 2 1203 28 518 4 1205 30 519 2 190 4 193 2 1209 140 1212 10 847 2 849 2 1216 10 197 2 528 8 1217 2 850 4 200 6 1219 14 204 4 532 2 1222 6 853 2 534 8 1223 82 207 2 208 244 209 22 537 26 539 4 540 2 858 2 210 2 1231 8 1230 2 216 6 543 2 217 48 862 2 1234 4 547 106 1237 2 865 94 548 2 549 198 1238 2 1240 4 553 6 554 26 555 2 870 2 871 2 1242 4 872 6 229 16 230 2 557 2 559 2 1244 4 232 8 563 2 1246 4 234 2 877 2 1247 2 881 6 238 386 240 8 1250 6 241 2 885 30 1254 14 887 26 244 2 889 2 245 8 570 26 1259 8 574 2 575 28 1261 2 892 6 895 2 576 30 578 6 1264 2 897 2 1265 4 898 2 899 2 1267 6 254 2 1269 6 256 12 582 14 1274 198 258 2 905 2 259 4 1275 6 1276 2 586 4 907 6 908 2 260 8 909 2 263 2 588 20 914 2 915 6 589 26 916 2 1282 2 591 6 592 6 918 2 919 2 593 2 595 2 1283 2 922 2 267 30 596 2 268 30 928 2 274 2 1290 6 273 6 598 2 275 192 277 2 1291 4 600 2 601 2 281 4 933 6 1294 54 935 4 936 2 603 4 1297 6 286 92 285 4 1299 198 1303 4 288 2 607 106 1304 2 290 2 1305 2 1306 4 291 2 293 2 608 6 294 2 296 4 609 2 610 6 946 12 613 2 947 6 949 2 616 2 953 2 955 4 956 4 302 2 620 2 1319 4 958 2 959 4 1320 2 304 132 626 2 305 2 1322 2 628 2 308 20 1325 10 964 28 968 6 313 6 314 2 1334 4 634 60 1335 2 975 132 318 2 636 8 1337 2 319 6 978 2 640 6 1339 4 979 198 322 6 983 2 324 4 645 50 985 4 325 6 1345 2 988 20 989 6 646 192 327 8 328 74 648 6 993 4 1349 2 332 2 1000 2 655 2 333 20 656 2 1003 4 
583 2 1333 2 1005 2 974 1 
1170 2 1005 2 
1026 2 1 2 202 2 941 2 1005 2 284 2 307 2 
1005 2 472 2 307 2 
719 2 1005 2 307 2 
583 2 362 2 413 2 
1005 2 307 2 
362 2 17 2 
385 2 1005 2 
583 2 362 2 1279 2 
522 2 583 2 1015 2 
583 2 283 2 1054 2 
583 2 1028 2 963 2 
583 2 1053 2 960 2 
362 2 16 2 
1005 2 418 2 
1015 2 337 2 
283 2 60 2 
963 2 875 2 
654 2 1053 2 
362 2 303 2 
1053 2 1038 2 
963 2 1236 2 
150 2 
836 2 1015 2 
583 2 362 2 1292 2 1279 2 
523 2 
583 2 362 2 1213 2 
583 2 194 2 362 2 
769 2 177 2 1143 2 
1026 2 1129 2 202 2 1344 2 
1026 2 1 2 1129 2 202 2 1344 2 965 2 
1026 2 202 2 1005 2 284 2 307 2 133 2 
1182 2 903 2 
1026 2 202 2 284 2 218 2 
538 2 963 2 
736 2 
1015 2 1165 2 
962 2 283 2 
283 2 923 2 1053 2 
283 2 1053 2 997 2 
283 2 1053 2 725 2 
0 2 283 2 1053 2 
1026 2 264 6 202 2 248 2 945 6 58 2 821 2 525 2 
362 2 765 2 
535 2 173 2 625 2 652 6 859 2 191 2 473 2 431 2 999 2 201 4 87 2 799 2 1268 2 618 2 457 2 1260 2 31 2 403 4 
583 2 665 2 
604 2 
1189 4 95 2 181 2 910 2 746 2 587 6 5 2 510 2 666 2 514 2 1092 2 920 2 10 4 106 2 921 2 924 2 673 2 1286 4 192 2 520 2 1208 6 843 2 1212 26 1023 2 599 2 119 2 931 2 1214 6 682 8 1218 2 287 6 606 2 1037 2 1225 4 615 2 462 2 466 2 213 2 1130 2 703 4 1131 2 1047 2 623 2 550 2 706 2 867 2 1137 2 790 2 629 2 633 2 315 2 1148 4 316 2 718 2 157 2 235 2 159 2 1065 2 977 2 1161 26 802 2 1255 2 1074 8 987 2 165 2 169 2 813 4 733 2 992 2 251 4 252 2 581 4 86 2 88 2 424 4 1354 2 
1189 4 95 2 181 2 910 2 746 2 587 6 5 2 510 2 666 2 514 2 1092 2 920 2 10 4 106 2 921 2 924 2 673 2 1286 4 192 2 1208 6 843 2 1212 26 1023 2 115 2 599 2 119 2 931 2 1214 6 682 8 1218 2 287 6 606 2 1036 2 1037 2 461 2 1225 4 615 2 462 2 950 2 466 2 213 2 1130 2 1047 2 623 2 550 2 706 2 867 2 1137 2 790 2 629 2 973 2 633 2 315 2 1148 4 316 2 718 2 235 2 159 2 1065 2 977 2 1161 26 802 2 1255 2 1074 8 987 2 165 2 169 2 813 4 733 2 992 2 251 6 252 2 581 4 86 2 88 2 1001 2 424 4 1354 2 
1266 2 
860 2 529 2 
376 2 826 4 1045 2 1191 4 1008 2 97 2 1277 2 550 2 306 4 912 8 227 2 309 2 310 2 478 10 666 2 966 2 1092 2 516 2 482 2 969 2 796 2 12 8 594 2 713 2 186 2 926 2 842 4 1284 2 351 2 1148 2 565 2 1149 6 487 4 112 2 1208 4 354 2 1212 12 1023 2 1065 2 119 2 932 2 1161 6 1293 2 1252 6 888 4 407 2 1300 2 890 6 571 4 326 2 893 2 694 2 856 4 579 2 541 2 1128 2 86 2 37 2 142 2 424 2 
376 2 826 4 1045 2 1191 4 744 2 1008 2 97 2 1277 2 550 2 306 4 912 8 227 2 309 2 310 2 478 10 666 2 966 2 1092 2 516 2 482 2 969 2 796 2 12 8 594 2 186 2 926 2 1284 2 842 4 351 2 1148 2 565 2 1149 6 401 2 487 4 112 2 1208 4 354 2 1212 12 1023 2 1065 2 119 2 932 2 1161 6 1293 2 1252 8 888 4 407 2 1300 2 890 8 571 4 893 2 1263 4 694 2 856 4 579 2 541 2 1128 2 86 2 37 2 142 2 424 2 144 2 
1293 2 1191 2 594 2 856 4 186 2 926 2 888 2 1284 2 842 4 1149 2 1128 2 1300 2 890 2 571 2 37 2 112 2 227 2 932 2 
376 2 826 4 1045 2 1191 4 1008 2 97 2 1277 2 550 2 306 4 912 4 227 2 309 2 310 2 478 6 666 2 966 2 1092 2 516 2 482 2 796 2 12 4 594 2 713 2 186 2 926 2 842 4 1284 2 351 2 1148 2 565 2 1149 4 487 4 112 2 1208 4 354 2 1212 12 1023 2 1065 2 119 2 932 2 1161 6 1293 2 1252 6 888 4 407 2 1300 2 890 6 571 4 326 2 893 2 694 2 856 4 579 2 541 2 1128 2 86 2 37 2 142 2 424 2 144 2 
376 2 826 4 1045 2 1191 4 1008 2 97 2 1277 2 550 2 306 4 912 4 227 2 309 2 310 2 478 6 666 2 966 2 1092 2 516 2 482 2 796 2 12 4 594 2 713 2 186 2 926 2 842 4 1284 2 351 2 1148 2 565 2 1149 6 487 4 112 2 1208 4 354 2 1212 12 1023 2 1065 2 119 2 932 2 1161 6 1293 2 1252 6 888 4 407 2 1300 2 890 4 571 4 326 2 893 2 694 2 856 4 579 2 541 2 137 2 1128 2 86 2 37 2 142 2 424 2 
376 2 826 4 1045 2 1191 4 1008 2 97 2 1277 2 550 2 306 4 912 4 227 2 309 2 310 2 478 6 666 2 966 2 1092 2 516 2 482 2 969 2 796 2 12 8 594 2 713 2 186 2 926 2 842 4 1284 2 351 2 1148 2 565 2 1149 6 487 4 112 2 1208 4 354 2 1212 12 1023 2 1065 2 119 2 932 2 1161 6 1293 2 1252 6 888 4 407 2 1300 2 890 6 571 4 326 2 893 2 694 2 856 4 579 2 541 2 1128 2 86 2 37 2 142 2 424 2 
376 2 826 4 1045 2 1191 4 1008 2 97 2 1277 2 550 2 306 4 912 8 227 2 309 2 310 2 478 10 666 2 966 2 1092 2 516 2 482 2 969 2 796 2 12 8 594 2 713 2 186 2 926 2 842 4 1284 2 351 2 1148 2 565 2 1149 8 487 4 112 2 1208 4 354 2 1212 12 1023 2 1065 2 119 2 932 2 1161 6 1293 2 1252 8 888 4 407 2 1300 2 890 6 571 4 326 2 893 2 694 2 856 4 579 2 541 2 137 2 1128 2 86 2 37 2 142 2 424 2 
376 2 826 4 1045 2 1191 4 1008 2 97 2 1277 2 550 2 306 4 912 8 227 2 309 2 310 2 478 10 666 2 966 2 1092 2 516 2 482 2 969 2 796 2 12 8 594 2 713 2 186 2 926 2 842 4 1284 2 351 2 1148 2 565 2 1149 6 487 4 112 2 1208 4 354 2 1212 12 1023 2 1065 2 119 2 932 2 1161 6 1293 2 1252 6 888 4 407 2 1300 2 890 6 571 4 326 2 893 2 694 2 856 4 579 2 541 2 1128 2 86 2 37 2 142 2 424 2 
824 1 826 6 1191 4 1009 2 1008 2 180 2 181 2 5 2 833 6 510 2 666 2 840 2 10 4 516 2 185 10 12 2 1018 6 15 1 186 2 673 2 842 4 188 1 351 2 1022 2 678 6 1208 6 354 2 1210 2 1023 2 1212 46 357 6 682 4 1214 8 205 6 1036 2 854 1 694 2 1225 4 856 4 211 2 541 2 213 2 37 2 542 6 215 6 371 6 375 2 221 2 376 2 1045 2 43 2 379 2 550 2 867 2 552 8 227 2 873 2 231 6 876 2 56 2 1058 6 718 2 565 4 1065 2 64 2 239 2 1252 12 723 2 1255 2 70 4 888 4 407 2 1074 4 890 4 571 4 893 4 1080 6 78 1 251 6 1081 2 252 2 579 2 581 4 86 2 739 2 88 2 424 4 1277 2 97 2 746 2 587 6 911 6 435 6 1091 2 1092 2 920 4 440 2 106 2 594 2 924 2 1284 2 926 2 112 2 1289 2 599 2 278 2 119 2 931 2 932 2 1293 2 1300 2 126 7 771 2 1301 2 287 6 774 6 134 6 1308 4 462 2 137 4 1128 2 954 1 142 2 782 2 961 1 306 4 790 2 792 1 309 2 310 2 478 2 966 2 482 4 796 2 973 2 633 2 315 2 1148 4 156 2 1149 8 487 8 1151 2 977 2 1157 1 639 2 1161 24 802 2 1163 2 642 6 987 2 165 12 326 2 167 2 495 2 169 2 813 2 992 2 657 7 1353 2 1354 2 
826 6 1191 4 180 2 1008 2 1009 2 97 2 1277 2 181 2 746 2 911 6 5 2 587 6 833 6 435 6 510 2 840 2 666 2 1091 2 920 4 1092 2 185 10 440 2 516 2 10 4 1018 6 12 6 594 2 106 2 186 2 924 2 673 2 926 2 1284 2 842 4 351 2 1286 2 1022 2 678 6 1289 2 112 2 1208 6 354 2 1210 2 1212 48 1023 2 599 2 278 2 357 6 119 2 931 2 932 2 1214 8 682 8 1293 2 1300 2 771 2 1301 2 287 6 205 6 1036 2 774 6 134 6 694 2 1225 4 856 4 1308 4 462 2 211 2 541 2 1128 2 213 2 37 2 369 2 542 6 215 6 371 6 782 2 142 2 221 2 375 2 376 2 1045 2 43 2 379 2 550 2 867 4 306 4 552 8 790 2 227 2 309 2 310 2 478 2 873 2 231 6 966 2 1144 2 876 2 482 4 969 4 796 2 56 2 973 2 633 2 315 2 1148 4 156 2 1058 6 565 4 718 4 1149 8 487 8 1151 2 1065 2 64 2 977 2 239 2 639 2 1161 26 1252 12 802 2 723 2 1255 2 70 4 1163 2 888 4 642 6 407 2 1074 8 890 8 571 4 987 2 165 12 326 2 893 4 495 2 167 2 169 2 1080 6 813 2 992 4 251 6 1081 2 252 2 579 2 581 4 86 2 88 2 739 2 424 4 1353 2 1354 2 
826 6 1191 4 180 2 1008 2 1009 2 97 2 1277 2 181 2 746 2 911 6 5 2 587 6 833 6 912 4 435 6 510 2 840 2 666 2 1091 2 920 4 1092 2 185 10 440 2 516 2 10 4 1018 6 12 6 594 2 106 2 186 2 673 2 924 2 926 2 1284 2 842 4 351 2 1286 2 1022 2 678 6 1289 2 112 2 1208 6 354 2 1210 2 1212 48 1023 2 599 2 278 2 357 6 119 2 931 2 932 2 1214 8 682 8 1293 2 1300 2 771 2 1301 2 287 6 205 6 1036 2 774 6 134 6 694 2 1225 4 856 4 1308 4 462 2 211 2 541 2 1128 2 213 2 37 2 369 2 542 6 215 6 371 6 782 2 142 2 221 2 375 2 376 2 1045 2 43 2 379 2 550 2 867 4 306 4 552 8 790 2 227 2 309 2 310 2 478 6 873 2 231 6 966 2 1144 2 876 2 482 4 969 4 796 2 56 2 973 2 633 2 315 2 1148 4 156 2 1058 6 565 4 718 4 1149 8 487 8 1151 2 1065 2 64 2 977 2 239 2 639 2 1161 26 1252 12 802 2 723 2 1255 2 70 4 1163 2 888 4 642 6 407 2 1074 8 890 8 571 4 987 2 165 12 326 2 893 4 495 2 167 2 169 2 1080 6 813 2 992 4 251 6 1081 2 252 2 579 2 581 4 86 2 88 2 739 2 424 4 1353 2 1354 2 
826 6 1191 4 1009 2 1008 2 180 2 181 2 5 2 833 6 510 2 666 2 840 2 10 4 516 2 185 8 12 6 1018 12 186 2 673 2 842 4 351 2 1022 2 678 6 1208 6 354 2 1210 2 1023 2 1212 52 357 6 682 10 1214 12 205 12 1221 6 1036 2 689 6 533 2 694 2 1225 6 856 4 211 2 541 2 213 2 37 2 369 2 542 6 215 12 371 6 220 6 221 2 375 2 376 2 1045 2 43 2 379 2 550 2 867 4 552 8 227 2 873 2 231 12 876 2 56 2 1058 12 718 4 565 4 1062 2 1065 2 64 2 883 2 239 2 1252 16 723 2 1255 2 70 4 888 4 407 2 1074 10 890 10 571 4 893 4 1080 6 251 6 1081 2 252 4 579 2 581 4 86 2 739 2 88 4 424 4 1277 2 97 2 746 2 587 8 911 6 912 4 435 12 266 6 1091 2 1092 2 920 4 440 2 106 2 594 2 924 2 1284 2 926 2 1286 2 1103 2 112 2 1289 2 599 2 278 2 450 6 119 2 931 4 932 2 451 2 1293 2 1300 2 771 2 1301 2 127 6 287 8 774 6 134 6 1308 4 462 2 137 2 1128 2 142 2 782 2 144 2 306 4 790 2 309 2 310 2 478 6 312 2 479 6 966 2 1144 2 482 4 796 2 969 4 973 2 633 2 315 2 1148 4 156 2 1149 10 487 8 1151 2 977 2 1158 6 639 2 1161 24 802 2 1163 2 642 6 491 2 1171 2 987 2 165 10 326 2 167 2 495 2 169 4 813 4 814 6 992 4 1354 2 
826 2 1293 2 1252 4 1008 2 1277 2 888 4 407 2 306 2 890 6 912 4 571 4 227 2 310 2 326 2 478 4 966 2 482 2 516 2 969 2 694 2 12 6 594 2 856 2 186 2 579 2 1284 2 842 2 541 2 1149 6 487 2 112 2 354 2 1212 4 142 2 932 2 
826 2 1008 2 1277 2 98 2 181 2 746 2 587 6 5 2 510 2 666 2 1092 2 920 2 10 4 185 2 516 2 12 6 106 2 594 2 186 2 755 2 924 2 673 2 842 2 1284 2 1208 6 112 2 354 2 1023 2 1212 28 599 2 119 2 931 3 932 2 1214 8 1293 2 768 2 604 2 287 6 1036 2 694 2 1225 4 856 2 614 3 462 2 541 2 142 2 222 2 550 2 306 2 46 2 790 2 227 2 310 2 478 2 966 2 482 2 969 2 796 2 973 2 633 2 1146 2 315 2 485 2 1148 4 1149 6 487 2 1065 2 977 2 1161 24 1252 4 802 2 1255 2 641 2 888 4 407 2 890 6 571 4 987 2 165 4 326 2 813 3 251 6 252 3 579 2 581 4 86 2 424 4 1353 2 1354 2 
310 2 407 2 795 2 
310 2 407 2 795 2 
826 4 1191 4 1008 2 1277 2 261 2 181 2 746 2 587 2 5 2 912 4 507 2 510 2 666 2 1091 2 1092 2 920 6 185 2 10 4 12 6 106 2 594 4 13 2 186 2 924 2 673 2 926 2 842 2 113 2 1208 6 1212 24 1023 2 119 2 682 4 1214 2 1293 2 1029 2 287 2 1036 2 688 2 776 2 295 2 856 2 1308 2 462 2 137 4 213 4 37 2 214 2 542 2 703 1 1235 2 144 4 376 2 1045 2 550 2 867 4 306 2 790 2 226 2 309 2 310 6 478 6 710 2 795 2 629 4 482 4 969 4 973 2 633 2 315 2 1148 4 1059 4 565 4 718 4 1149 12 487 4 566 2 1065 2 977 2 1161 16 1252 16 802 2 1255 2 70 2 888 4 407 4 1074 4 890 12 572 2 571 4 729 2 987 2 165 4 893 2 167 2 813 2 992 4 251 6 650 4 1082 2 581 4 996 2 86 2 739 2 424 4 1354 2 
185 2 1161 2 1176 2 70 2 1128 2 383 2 572 2 214 2 1289 2 1316 2 542 2 860 2 1212 4 1065 2 165 2 221 2 1235 2 
826 4 3 2 1191 4 1008 2 1277 2 181 2 746 2 830 2 587 2 5 2 912 4 507 2 510 2 666 2 1091 2 1092 2 920 6 10 4 12 6 106 2 594 4 13 2 186 2 924 2 673 2 926 2 842 2 351 2 1208 6 1212 24 1023 2 119 2 682 4 1214 2 1293 2 287 2 1036 2 688 2 776 2 295 4 856 2 1308 2 367 2 462 2 696 2 137 4 213 4 37 2 214 2 542 2 373 2 1235 2 144 4 376 2 1045 2 550 2 867 4 306 2 790 2 226 2 309 2 310 6 478 6 710 2 795 2 629 4 482 4 969 4 973 2 633 2 315 2 1148 4 1059 4 565 4 718 4 1149 12 487 4 566 2 1065 2 977 2 1161 16 1252 16 802 2 1255 2 888 4 407 4 1074 4 890 12 572 2 571 4 987 2 165 2 893 4 167 2 813 4 992 4 251 6 650 4 1082 2 581 4 996 2 86 2 739 2 424 4 1354 2 
826 4 1191 4 1008 2 1277 2 181 2 746 2 587 2 5 2 912 4 507 2 510 2 590 2 666 2 917 2 1091 2 1092 2 920 6 185 2 10 4 12 6 106 2 594 4 13 2 186 2 924 2 673 2 926 2 842 2 351 2 1208 6 1212 24 1023 2 930 2 119 2 682 4 1214 2 1293 2 287 2 1036 2 688 2 776 2 295 2 856 2 1308 2 462 2 137 4 213 4 37 2 214 2 542 2 703 1 1235 2 144 4 376 2 1045 2 1134 2 550 2 867 4 306 2 790 2 226 2 309 2 310 6 478 6 710 2 795 2 629 4 482 4 969 4 973 2 633 2 315 2 1148 4 1059 4 565 4 718 4 1149 12 487 4 566 2 1065 2 977 2 1161 16 1252 16 802 2 1255 2 70 2 888 4 803 2 407 4 1074 4 890 12 572 2 571 4 987 2 165 4 893 4 167 2 813 2 992 4 251 6 650 4 1082 2 581 4 996 2 86 2 739 2 424 4 1354 2 
1273 2 825 2 181 2 550 2 746 2 5 2 587 6 48 2 789 2 790 2 510 2 50 2 666 2 876 2 920 2 1092 2 440 2 10 4 752 2 106 2 1201 2 973 2 349 2 633 2 924 2 1245 2 315 2 1148 4 156 2 878 2 61 4 1208 6 1211 2 1212 26 1023 2 1065 2 599 2 118 2 278 2 280 2 977 2 119 2 931 2 884 2 1214 8 1161 20 68 2 802 2 1255 2 1163 2 1298 2 937 2 806 2 771 2 531 2 1034 2 287 6 987 2 1036 2 165 2 132 2 1078 6 813 2 251 6 1225 4 252 2 462 2 463 2 581 4 86 2 861 2 424 4 1354 2 
560 4 1214 2 1161 2 813 3 1125 2 1225 2 1094 2 252 3 320 2 298 2 1164 2 677 1 587 2 1101 3 1138 2 1199 2 287 2 30 2 1212 2 1141 2 599 2 356 2 931 3 1338 2 169 6 
560 4 1214 2 1161 2 813 2 1125 2 1225 2 1094 2 252 2 320 2 298 2 1164 2 587 2 1101 2 1138 2 1199 2 287 2 30 2 1212 2 1141 2 599 2 356 2 931 2 1338 2 169 6 
560 4 1214 2 1161 2 813 2 1125 2 1225 2 1094 2 252 2 320 2 298 2 1164 2 587 2 1101 2 1138 2 1199 2 287 2 30 2 1212 2 1141 2 599 2 356 2 931 2 1338 2 169 6 
1214 2 1161 4 224 4 377 4 429 2 121 2 1164 2 1341 2 1278 2 1167 2 1342 2 530 2 1117 2 363 2 1307 2 249 6 813 3 631 6 855 2 1055 4 562 2 1145 4 233 2 758 2 1310 2 1313 2 34 2 779 3 998 3 761 2 880 4 299 2 334 2 1248 2 619 4 1212 10 300 4 721 2 599 2 237 3 931 3 
1214 2 1161 4 224 4 377 4 429 2 121 2 1164 2 1341 2 1278 2 1167 2 1342 2 530 2 1117 2 363 2 1307 2 249 4 813 2 631 6 855 2 1055 4 562 2 1145 4 233 2 758 2 1310 2 1313 2 34 2 779 2 212 2 998 2 761 2 880 4 160 2 299 2 334 2 1248 2 619 4 1212 10 300 4 721 2 599 2 237 2 931 2 
1214 2 1161 4 224 4 377 4 429 2 121 2 1164 2 1341 2 1278 2 1167 2 1342 2 530 2 1117 2 363 2 1307 2 249 4 813 2 631 6 855 2 1055 4 562 2 1145 4 233 2 758 2 1310 2 1313 2 34 2 779 2 212 2 998 2 761 2 880 4 160 2 299 2 334 2 1248 2 619 4 1212 10 300 4 721 2 599 2 237 2 931 2 
1214 2 1161 4 224 4 377 4 429 2 121 2 1164 2 1341 2 1278 2 1167 2 1342 2 530 2 1117 2 363 2 1307 2 249 4 813 2 631 6 855 2 1055 4 562 2 1145 4 233 2 758 2 1310 2 1313 2 34 2 779 2 212 2 998 2 761 2 880 4 160 2 299 2 334 2 1248 2 619 4 1212 10 300 4 721 2 599 2 237 2 931 2 
1214 2 1161 4 224 4 377 4 429 2 121 2 1164 2 1341 2 1278 2 1167 2 1342 2 530 2 1117 2 363 2 1307 2 249 4 813 2 631 6 855 2 1055 4 562 2 1145 4 233 2 758 2 1310 2 1313 2 34 4 779 2 212 4 998 2 761 2 880 4 160 4 299 2 334 2 1248 2 619 4 1212 10 300 4 721 2 599 2 237 2 931 2 
1288 2 845 2 1042 2 927 2 1336 2 558 2 
845 2 1047 2 970 2 1153 2 701 2 1108 2 901 2 
904 2 580 2 198 2 
132 2 
1346 2 184 2 1161 1 1329 2 943 6 1055 2 753 2 377 2 1227 1 605 2 1323 2 880 2 203 2 1075 2 1212 1 882 2 459 2 690 4 
1346 4 184 2 1329 2 943 6 1055 2 753 2 377 2 605 2 1323 4 880 2 203 2 1075 2 882 2 459 4 690 4 
1346 8 184 2 1161 1 1329 8 943 10 1055 2 753 2 377 2 1227 1 605 6 1323 8 880 2 203 2 1075 2 1212 1 882 2 459 8 690 4 
1346 2 184 2 943 2 1055 2 753 2 377 2 1323 2 880 2 203 2 1075 2 882 2 459 2 690 2 
828 6 1190 4 430 12 262 6 1012 2 831 4 1013 20 1195 4 832 2 1197 2 835 6 509 6 664 12 839 12 104 6 10 76 669 5 1020 4 675 8 756 6 189 2 1206 2 521 2 597 4 355 2 195 32 114 6 1212 130 1105 24 929 6 526 1 24 6 682 16 602 4 452 6 934 4 453 2 1296 6 686 6 939 6 940 5 852 10 1036 54 128 6 1119 2 1120 2 1121 6 692 6 536 4 462 8 948 54 1311 4 617 24 1314 20 1315 24 1318 6 957 12 545 6 622 26 41 2 470 6 863 10 786 2 1239 2 1321 13 627 2 387 4 386 20 388 10 228 6 708 30 51 4 477 2 395 6 1332 6 973 54 797 54 155 116 717 4 317 9 158 2 1150 2 1154 4 637 8 976 8 1249 6 1161 118 886 2 722 6 802 14 243 50 1166 2 162 2 724 4 981 6 75 4 727 2 573 2 987 14 891 4 647 20 577 2 1175 6 251 216 735 2 174 4 1348 4 581 100 176 4 497 6 84 2 499 26 255 2 335 6 1084 6 658 2 178 14 500 6 91 2 338 18 426 2 1271 12 
621 2 470 2 1190 2 863 2 2 2 584 2 624 2 866 2 430 4 1321 2 44 2 1280 2 1198 2 835 2 386 2 1089 2 388 2 509 2 664 4 477 2 839 4 1327 2 10 20 630 2 395 2 1332 2 973 2 155 6 756 2 1206 2 108 6 879 2 1104 2 195 2 114 2 1212 46 63 2 116 2 976 6 24 2 682 38 1161 44 1162 2 1215 2 848 2 802 2 453 2 1296 2 980 2 981 2 1116 2 938 2 1258 2 852 2 986 2 128 2 1036 2 987 2 810 2 647 2 1121 2 692 2 415 2 1224 2 251 44 417 4 994 4 611 2 735 2 896 2 1083 2 995 2 462 2 581 20 1311 2 136 2 817 4 84 2 819 2 498 2 1314 2 1350 2 421 2 700 2 178 2 1318 2 702 4 219 2 703 2 426 4 1272 2 257 2 
828 4 430 10 262 4 1012 2 831 4 99 4 835 6 509 4 664 10 749 8 839 10 512 8 10 36 669 4 1020 4 756 4 1206 2 521 4 597 4 1104 2 195 6 114 4 1212 78 449 4 276 8 929 4 279 8 24 2 1024 2 682 14 452 4 934 4 1296 4 686 4 770 8 939 4 1036 30 128 4 32 4 1120 4 1121 4 692 4 462 2 140 16 1315 8 1318 4 957 14 545 4 41 2 470 2 1321 10 1049 2 1135 16 627 2 387 4 708 30 228 4 53 4 477 2 1328 2 55 8 395 4 1332 2 973 28 155 24 717 4 317 8 879 2 1154 2 63 10 976 6 1249 4 405 16 1161 70 1162 2 1253 4 722 4 802 6 243 8 724 4 981 4 1258 10 75 4 573 16 987 6 891 4 894 32 1262 4 1175 4 251 104 735 2 651 2 174 4 995 2 816 2 1348 4 581 44 331 2 497 4 84 2 819 10 1084 4 658 2 178 10 500 4 1086 4 426 2 
470 2 430 6 1239 2 1321 2 1013 10 835 2 509 4 664 6 708 6 477 2 839 6 10 14 395 4 1332 2 973 12 155 8 675 2 756 4 1206 2 317 6 521 2 355 2 195 2 114 2 1154 2 1212 28 976 4 24 2 682 14 1161 26 1162 2 886 2 802 2 1296 2 1166 2 162 2 981 4 938 2 1116 2 940 2 128 4 1036 12 987 2 891 4 1120 2 1121 4 692 2 251 40 735 2 995 2 462 2 581 14 176 2 84 2 1318 2 178 2 703 2 91 2 426 2 
632 2 

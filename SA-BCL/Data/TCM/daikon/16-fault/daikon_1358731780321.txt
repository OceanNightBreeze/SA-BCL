#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (363,841) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 712 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 712 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 712 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 712 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 712 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (693,842) (693,842) 533 833 566 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NullPointerException 850 25 (98,163) (98,163) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NullPointerException 850 25 (98,163) (98,163) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NullPointerException 850 25 (98,163) (98,163) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (693,842) (693,842) 312 235 578 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (693,842) (693,842) 312 235 578 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.LimitedSizeIntSet:size()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3_15()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE:gcd([I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_2_13(I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[F)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3R_119()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3R_61()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_81()Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3_5()Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:gt(II)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:dimensions()I
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3_12()Z
daikon.Quant:ne(II)Z
daikon.PptSlice0:arity()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_99()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3_1()Z
daikon.Quant:eq(FF)Z
daikon.Quant:eltsGTE([II)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfo:relate_var()V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern:intern([J)[J
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Debug:logOn()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3858 | return null
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_2_18(I)Z
daikon.Quant:eltsGT([II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 62554 | return null
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:sameLength([I[I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_116()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:jj_3R_60()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_106()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_163()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3_17()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE:pow(II)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:gte(II)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_15(I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7816 | 80 -> 0
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:numIntArrays()I
daikon.ModBitTracker:num_samples()I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3R_76()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_10(I)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3R_124()Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:subsetOf([D[D)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | STATEMENT | 17277 | stmt -> ;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_88()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_4()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:jj_3_25()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_36(I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_70()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3R_49()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:eq(II)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice; | RETURN | 38854 | return null
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_101()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_69()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_120()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_103()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:union([I[I)[I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3_13()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_107()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_2_35(I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([D)[D
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit; | ASSIGN | 3246 | = null
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:concat([I[I)[I
daikon.Quant:eltwiseGT([I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_3R_133()Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_ntk()I
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_108()Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_125()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_68()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.ProglangType:isIntegral()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo; | RETURN | 1206 | return null
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 4 792 2 693 2 465 2 51 2 842 2 86 2 629 2 641 2 
592 2 300 2 911 2 758 6 492 6 395 2 635 2 47 2 921 6 516 2 935 2 
710 4 338 2 863 2 202 2 270 4 12 6 693 2 717 6 842 2 706 2 320 2 656 6 195 6 
810 8 847 4 472 10 95 2 478 12 732 16 925 2 297 6 763 2 217 2 509 6 301 8 822 8 736 16 167 26 711 10 904 10 112 10 369 4 314 8 948 16 693 6 402 10 464 2 466 29 842 6 528 4 126 2 430 4 262 2 
363 4 841 4 
218 2 
292 4 537 2 242 2 11 2 476 2 412 2 302 2 14 2 894 2 825 2 551 4 550 2 552 2 829 2 81 2 714 2 907 2 424 2 842 4 614 2 845 2 781 2 379 2 622 2 215 2 782 2 625 2 570 2 102 2 784 2 737 2 629 2 446 2 104 2 634 4 689 4 864 2 110 2 941 2 693 4 401 2 346 2 875 2 126 2 
58 6 847 2 848 4 472 16 409 6 540 2 478 22 732 32 925 2 297 4 509 4 853 2 822 6 736 32 572 2 738 2 414 8 575 4 387 6 167 48 711 6 198 4 44 6 939 2 396 4 112 16 904 16 314 18 948 32 693 4 838 6 402 16 178 4 842 4 466 54 426 6 87 4 877 4 375 2 
508 2 824 2 622 2 
337 2 291 2 225 2 3 2 536 2 132 2 835 22 13 2 412 2 891 2 373 10 654 2 529 2 388 2 
470 2 847 2 472 2 133 2 63 2 506 2 36 2 478 2 650 2 732 2 509 2 736 2 167 4 711 4 147 2 112 2 904 2 314 2 948 2 402 2 466 6 427 2 804 2 
472 4 369 2 112 4 904 4 157 2 478 4 732 8 948 8 838 6 402 4 178 4 440 2 426 6 736 8 466 16 877 4 167 12 
781 4 407 62 811 4 378 4 26 2 676 4 884 4 33 4 814 2 434 2 622 8 436 2 508 2 40 2 824 6 858 2 78 4 517 2 449 4 448 2 859 2 660 2 828 4 340 10 688 10 171 4 689 4 902 2 81 2 458 2 945 2 344 4 836 2 425 2 53 2 642 4 724 2 429 2 805 14 57 2 
849 2 10 2 34 2 889 2 218 2 900 2 709 2 82 2 718 2 494 2 
808 2 1 2 809 1 2 3 131 4 352 2 5 32 597 6 816 2 477 1 246 2 248 2 483 2 705 3 601 2 602 2 603 2 143 2 712 2 144 4 605 2 17 3 18 1 713 2 607 1 255 1 371 3 490 2 256 16 150 2 612 2 24 1 842 34 493 2 151 2 374 2 616 2 261 2 495 2 617 16 619 2 846 4 500 2 380 2 620 24 727 1 501 4 730 2 624 2 384 2 159 1 271 2 385 2 734 2 272 2 628 2 275 2 515 2 389 2 166 1 518 4 743 2 278 2 746 12 282 2 177 1 871 3 524 2 526 2 180 2 753 1 535 2 757 6 882 2 408 2 759 2 293 2 887 2 411 2 299 2 413 2 68 4 304 2 655 2 193 2 305 1 77 2 415 2 898 1 309 5 900 1 200 8 311 2 662 2 903 2 664 3 663 2 82 1 83 2 423 2 774 2 554 2 909 2 317 2 318 4 557 2 914 2 558 24 86 2 319 2 917 1 432 3 209 4 431 2 674 2 563 2 325 2 94 3 211 2 571 2 99 1 101 2 929 16 220 2 330 2 786 32 222 1 934 2 447 2 336 2 936 1 107 6 686 16 108 8 690 2 456 2 796 2 797 2 579 2 228 2 798 2 947 2 692 8 693 32 695 1 582 3 801 3 122 3 585 3 347 2 586 6 
399 2 842 2 
52 2 842 4 175 2 
345 2 
237 42 238 146 471 2 4 2 473 4 701 48 8 2 9 4 244 16 474 2 475 2 479 2 480 2 247 2 703 2 484 48 707 2 485 2 16 2 251 146 486 2 252 2 487 2 254 2 23 2 257 4 719 216 259 48 722 2 260 4 496 2 726 2 497 2 498 8 263 4 28 2 31 2 30 2 267 4 502 28 728 24 268 2 504 2 729 10 505 4 733 2 735 8 513 8 514 146 739 48 740 2 741 2 745 2 519 2 279 2 46 2 520 2 48 2 280 2 747 2 522 2 523 2 283 4 749 2 525 2 750 2 751 2 527 2 530 4 531 8 752 2 754 2 755 2 534 2 756 26 59 2 60 2 61 2 760 2 539 2 66 2 67 4 762 2 764 2 542 2 72 36 766 2 768 4 769 8 306 2 547 2 549 24 770 24 80 2 772 2 313 2 553 2 315 2 773 2 775 14 316 2 777 2 84 2 779 2 559 2 323 8 324 22 93 4 96 4 565 2 567 2 329 48 787 2 332 2 334 2 789 2 105 2 333 2 106 2 339 4 795 2 342 6 111 8 343 4 800 8 580 4 118 10 115 4 119 4 583 2 584 2 121 14 123 2 125 2 127 2 587 36 807 6 349 22 594 2 593 48 812 2 595 14 596 2 815 8 598 2 818 4 134 2 357 4 136 20 599 2 600 2 358 16 821 2 823 2 139 2 826 2 827 2 142 48 364 2 145 2 832 2 146 2 365 44 367 22 148 6 834 20 368 2 837 2 840 2 152 2 844 48 153 48 615 2 852 2 160 2 161 2 162 2 854 10 626 2 631 2 860 2 633 2 170 2 391 2 393 4 394 8 637 2 638 2 398 48 176 6 403 2 405 2 874 48 406 4 878 2 881 2 184 6 880 8 645 2 186 2 648 4 187 2 886 2 888 4 651 4 890 26 652 2 892 2 191 2 653 2 895 2 896 48 657 2 658 2 416 2 418 2 659 2 661 2 419 2 420 2 201 2 901 2 422 2 665 4 203 22 906 2 666 2 908 2 910 6 912 2 668 2 205 2 913 48 428 2 670 2 672 2 919 2 918 4 673 2 920 2 210 2 675 4 677 2 213 2 433 4 435 2 216 2 926 2 219 4 931 4 442 4 221 2 443 4 681 2 445 2 682 4 684 2 685 4 224 2 450 2 451 4 226 2 453 2 452 2 455 2 454 2 943 2 229 2 459 16 944 8 694 2 460 2 232 2 462 4 950 2 233 2 951 2 467 4 468 2 954 36 
708 2 240 1 680 2 383 2 
680 2 702 2 
680 2 512 2 802 2 528 2 622 2 276 2 173 2 
680 2 288 2 276 2 
197 2 680 2 276 2 
149 2 19 2 383 2 
680 2 276 2 
149 2 803 2 
680 2 830 2 
149 2 295 2 383 2 
463 2 274 2 383 2 
137 2 54 2 383 2 
723 2 560 2 383 2 
604 2 855 2 383 2 
149 2 92 2 
179 2 680 2 
463 2 158 2 
137 2 767 2 
723 2 869 2 
783 2 604 2 
149 2 381 2 
604 2 70 2 
45 2 723 2 
137 2 899 2 
696 2 463 2 
149 2 35 2 295 2 383 2 
149 2 269 2 35 2 295 2 383 2 
149 2 124 2 383 2 
149 2 839 2 383 2 
32 2 303 2 573 2 561 2 
791 4 185 2 310 2 264 2 90 2 172 2 942 2 647 2 366 2 835 6 820 2 610 2 204 2 461 2 748 4 857 2 182 2 532 2 
940 2 383 2 
802 2 622 2 868 2 700 2 
778 2 512 2 802 2 622 2 868 2 700 2 
680 2 802 2 528 2 622 2 276 2 230 2 
879 2 737 2 
802 2 528 2 622 2 780 2 
723 2 335 2 
604 2 265 2 
463 2 322 2 
137 2 949 2 
137 2 604 2 488 2 
137 2 604 2 135 2 
137 2 604 2 88 2 
137 2 604 2 400 2 
622 2 249 2 627 6 577 2 258 2 802 2 469 6 207 2 
149 2 511 2 
447 2 
712 2 846 4 757 4 131 4 311 2 713 2 759 2 946 2 947 2 909 2 693 2 483 2 557 2 842 2 319 2 
712 2 846 4 757 6 131 4 311 2 713 2 759 2 946 2 947 2 909 2 693 2 524 2 483 2 557 2 842 2 319 2 374 2 
196 2 129 2 392 2 
196 2 129 2 392 2 
712 2 846 4 757 6 131 4 311 2 713 2 759 2 946 2 947 2 909 2 693 2 524 2 483 2 557 2 842 2 319 2 374 2 
712 2 846 4 757 6 131 4 311 2 713 2 759 2 946 2 947 2 909 2 693 2 524 2 483 2 557 2 842 2 319 2 374 2 
712 2 846 4 757 6 131 4 311 2 713 2 759 2 946 2 947 2 909 2 693 2 524 2 483 2 557 2 842 2 319 2 374 2 
128 2 644 2 757 4 131 2 883 2 5 2 759 2 65 2 816 2 188 2 411 2 481 2 69 2 73 2 193 2 415 2 712 2 144 2 311 2 713 2 833 2 83 2 554 2 715 2 150 2 557 2 842 16 86 2 151 2 916 2 374 2 261 2 209 2 846 2 563 2 566 2 621 1 922 2 930 2 929 2 439 1 683 2 862 2 107 4 743 2 278 2 49 2 693 12 524 2 55 2 872 2 533 2 
377 4 354 2 5 2 649 2 597 3 37 2 356 2 246 2 39 2 929 2 192 1 786 3 140 2 75 2 361 6 308 2 554 2 691 3 231 2 693 2 669 2 842 2 206 2 843 2 586 3 
377 4 354 2 5 2 649 2 597 2 37 2 356 2 246 2 39 2 929 2 786 2 140 2 75 2 361 6 308 2 554 2 691 2 231 2 693 2 669 2 842 2 206 2 843 2 586 2 
377 4 354 2 5 2 649 2 597 2 37 2 356 2 246 2 39 2 929 2 786 2 140 2 75 2 361 6 308 2 554 2 691 2 231 2 693 2 669 2 842 2 206 2 843 2 586 2 
588 4 617 2 472 2 5 2 813 2 64 2 817 2 328 2 569 2 732 2 189 2 297 2 928 2 246 2 822 4 736 2 444 2 273 3 786 3 140 2 141 4 390 4 167 4 742 4 112 2 904 2 21 3 948 2 693 4 256 2 402 2 85 2 466 6 842 10 404 2 613 4 952 3 586 3 89 2 806 6 
588 4 617 2 472 2 5 2 813 2 64 2 817 2 478 2 328 2 569 2 732 2 189 2 925 2 297 2 928 2 246 2 822 4 736 2 444 2 273 2 786 2 140 2 141 4 390 4 167 4 742 4 112 2 904 2 314 2 21 2 948 2 693 4 256 2 402 2 85 2 466 4 842 10 404 2 613 4 952 2 586 2 89 2 806 6 
588 4 617 2 472 2 5 2 813 2 64 2 817 2 478 2 328 2 569 2 732 2 189 2 925 2 297 2 928 2 246 2 822 4 736 2 444 2 273 2 786 2 140 2 141 4 390 4 167 4 742 4 112 2 904 2 314 2 21 2 948 2 693 4 256 2 402 2 85 2 466 4 842 10 404 2 613 4 952 2 586 2 89 2 806 6 
588 4 617 2 472 2 5 2 813 2 64 2 817 2 478 2 328 2 569 2 732 2 189 2 925 2 297 2 928 2 246 2 822 4 736 2 444 2 273 2 786 2 140 2 141 4 390 4 167 4 742 4 112 2 904 2 314 2 21 2 948 2 693 4 256 2 402 2 85 2 466 4 842 10 404 2 613 4 952 2 586 2 89 2 806 6 
588 4 617 2 472 2 5 2 813 2 64 2 817 2 478 4 328 2 569 2 732 2 189 2 925 4 297 2 928 2 246 2 822 4 736 2 444 2 273 2 786 2 140 2 141 4 390 4 167 4 742 4 112 2 904 2 314 4 21 2 948 2 693 4 256 2 402 2 85 2 466 4 842 10 404 2 613 4 952 2 586 2 89 2 806 6 
611 2 618 2 438 2 120 2 521 2 38 2 
154 2 437 2 938 2 29 2 761 2 699 2 521 2 
208 2 266 1 91 2 434 1 507 2 851 1 97 2 731 2 386 2 679 2 71 2 193 2 448 1 79 2 794 2 771 2 109 2 421 2 870 2 281 2 693 8 372 2 556 2 842 10 56 1 873 2 
58 4 499 2 472 6 327 2 478 3 732 6 925 2 297 2 736 6 822 4 543 2 414 2 167 12 417 2 904 6 112 6 867 2 314 2 227 2 22 2 948 6 693 6 401 2 402 6 178 2 842 6 466 16 426 4 87 2 845 2 
588 2 6 5 212 2 850 4 98 2 693 1 25 2 842 1 163 2 277 1 141 2 390 2 
588 2 25 2 163 2 6 2 850 4 212 2 141 2 390 2 98 2 
588 2 25 2 163 2 6 2 850 4 212 2 141 2 390 2 98 2 
588 2 831 2 6 2 212 2 850 2 568 2 98 2 370 2 25 2 163 2 321 2 141 2 390 2 
589 2 591 2 131 12 239 2 350 4 351 1 241 2 243 2 359 2 362 2 609 2 716 2 842 32 374 2 846 10 27 2 382 2 623 2 510 2 630 4 164 2 165 2 42 6 168 2 43 2 744 2 865 4 636 2 639 2 524 2 640 2 876 2 289 4 643 2 757 20 759 4 410 2 296 2 298 2 190 2 893 4 545 2 74 2 897 2 194 2 307 2 546 2 199 2 311 2 312 2 557 4 915 2 326 3 924 2 678 16 930 2 103 2 932 6 788 2 937 2 578 2 693 30 116 2 697 2 117 2 235 2 236 2 348 6 953 2 
590 6 757 36 131 14 350 2 759 2 646 2 7 2 885 2 355 2 819 2 296 2 138 2 482 4 541 2 15 2 546 2 199 2 253 4 311 2 20 2 312 2 606 10 555 2 716 2 842 28 557 2 721 2 374 8 671 6 376 4 156 2 846 14 562 2 503 2 326 2 623 6 678 14 924 6 100 2 932 8 574 2 788 2 165 6 937 2 43 2 793 4 578 2 397 2 113 2 457 4 114 2 174 4 693 26 639 2 524 8 235 2 236 2 287 4 286 4 698 2 181 10 290 2 
589 2 590 1 591 2 757 26 131 14 350 2 759 6 7 1 355 2 410 2 243 2 482 2 190 2 359 2 893 2 545 2 897 4 194 2 307 2 546 2 362 2 311 4 20 1 606 2 312 2 608 2 609 2 489 2 716 2 842 30 557 6 374 6 671 2 376 2 156 2 846 12 27 2 382 2 623 2 924 2 678 4 927 2 930 2 932 6 164 2 165 2 42 4 687 2 793 2 43 2 578 2 397 2 636 2 457 2 693 28 639 2 524 6 117 2 235 2 287 2 286 2 181 2 348 4 290 1 
130 4 757 48 131 20 350 2 353 2 62 2 538 2 646 2 759 2 245 2 294 2 296 2 298 2 482 2 704 2 765 2 250 2 544 2 360 2 76 2 546 2 199 2 548 2 311 2 312 2 555 2 905 2 776 2 667 2 716 2 491 2 842 46 557 2 720 2 374 6 671 6 376 2 725 2 155 4 846 20 503 2 564 4 326 2 923 2 214 2 623 4 678 36 924 4 100 2 103 2 441 2 933 2 856 2 41 2 932 6 574 2 331 2 788 2 632 2 223 2 576 4 165 4 790 2 861 2 937 2 168 2 43 2 793 2 169 2 341 2 578 2 866 2 457 2 114 2 799 2 50 2 693 44 639 2 524 6 116 2 581 2 234 2 235 2 285 2 284 2 236 2 287 2 286 2 698 2 876 2 183 6 
785 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException (114,857) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException (33,158,255,696,771) (33,158,255,696,771) (33,158,255,696,771) (33,158,255,696,771) (33,158,255,696,771) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V ERROR utilMDE.Assert$AssertionException (330,538) 852 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 656 733 523 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 533 188 155 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 894 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 90 335 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 90 335 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_133()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3_13()Z
utilMDE.MathMDE:sign(I)I
daikon.PptSlice1:arity()I
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPseudoArray()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:max([I)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V | ASSIGN | 10356 | = null
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:memberOf(I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_2_14(I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3R_119()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Debug:logOn()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_47()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:readChar()C
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_163()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_52()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsGTE([II)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_56()Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.Invariant:logOn()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Intern:numIntArrays()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1211 | = null
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_116()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:concat([I[I)[I
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_120()Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_96()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.ProglangType:dimensions()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block; | STATEMENT | 103715 | stmt -> ;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:intersection([I[I)[I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3_15()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptSlice0:arity()I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:lt(II)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eq(FF)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:noDups([I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_57()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | CONDITION | 1382 | if (x) -> if (!x)
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_55()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:memberOf(S[S)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_135()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_3()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:subsetOf([J[J)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:gte(II)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:gt(II)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 41870 | != -> >=
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[F)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:ne(II)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_61()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3_4()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eq(II)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:slice([III)[I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3_14()Z
daikon.Quant:union([I[I)[I
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_48()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_54()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lte(II)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166942 | stmt -> ;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_62()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.MathMDE:gcd(II)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:setDiff([I[I)[I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_2_4(I)Z
daikon.Ppt:Ppt()V
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_2_12(I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Intern:intern([D)[D
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3_12()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:prob_is_ge(DD)D | STATEMENT | 6797 | stmt -> ;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | OPERATOR | 4206 | > -> ==
jtb.JavaParser:jj_3R_58()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_122()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z | ASSIGN | 925 | = null
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22960 | = null
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
247 2 330 2 120 2 538 2 279 2 381 2 285 2 28 2 703 4 
265 2 59 2 214 2 622 2 333 6 583 6 564 2 676 2 877 2 405 2 783 6 
677 6 97 4 351 6 229 6 711 2 330 2 617 2 380 2 538 2 629 2 243 6 176 4 274 2 
529 8 679 4 179 5 465 2 865 4 238 2 616 2 358 6 502 5 330 4 538 4 505 2 409 6 621 6 9 4 413 2 337 6 48 2 115 12 199 4 201 8 857 2 904 2 427 10 457 5 
301 6 30 4 
511 2 
801 2 460 4 633 2 538 4 685 2 807 2 539 2 470 2 592 2 689 2 745 2 196 2 249 2 251 2 146 2 602 2 91 2 830 4 883 2 648 2 607 2 834 2 609 2 211 2 767 2 32 2 494 2 105 2 330 4 441 2 847 2 775 2 114 2 279 2 515 2 902 2 857 2 344 4 860 2 628 4 61 2 795 2 799 2 528 2 
529 32 179 16 649 8 679 18 461 4 238 2 866 2 659 4 358 22 502 16 330 4 896 2 848 4 538 4 739 2 382 6 9 16 409 32 621 4 662 4 304 6 716 2 688 6 809 6 362 2 337 6 853 2 115 55 571 4 875 6 88 6 201 32 519 4 905 6 427 48 575 4 94 4 63 2 457 16 
758 2 251 2 871 2 
445 22 213 2 747 2 631 2 734 2 753 2 598 2 557 2 345 2 539 2 303 10 161 2 151 2 398 2 
880 2 545 2 182 2 220 2 183 2 383 2 296 2 375 2 608 2 
529 8 179 4 571 4 115 16 201 8 616 2 358 4 282 2 502 4 9 4 409 8 427 12 304 6 809 6 575 4 360 2 457 4 
67 4 491 2 431 2 3 2 633 2 298 4 434 2 73 4 355 4 302 4 412 62 244 4 778 2 623 2 871 6 872 4 306 4 308 4 544 2 785 2 81 2 311 2 816 10 168 2 251 8 788 2 344 4 487 4 758 2 759 2 119 2 450 14 550 2 796 2 762 2 348 10 260 2 576 4 577 2 607 4 
802 2 536 2 41 2 774 2 511 2 364 2 749 2 484 2 886 2 763 2 
582 2 357 2 805 4 588 1 808 2 690 1 811 2 474 1 138 2 596 1 16 2 369 2 599 6 19 2 696 2 20 2 700 2 699 4 255 2 370 1 832 6 33 2 839 1 495 1 158 2 710 1 267 2 501 1 849 2 618 2 620 8 381 2 509 4 393 2 172 2 284 2 530 1 535 1 635 1 737 2 538 28 868 2 741 1 637 1 546 2 198 6 85 1 424 2 882 4 646 1 761 2 93 2 101 2 652 1 892 2 654 2 328 2 329 6 895 2 559 2 771 2 330 26 218 4 660 2 113 2 226 1 669 1 901 2 900 1 116 5 232 2 800 2 908 2 234 2 
171 2 852 2 538 2 
499 2 478 2 538 4 
890 2 
0 4 235 40 579 2 2 8 681 20 682 2 466 20 134 4 237 2 803 44 584 2 6 2 586 26 7 2 242 2 10 8 590 4 687 4 814 2 820 2 694 44 822 2 483 16 142 4 252 2 253 22 23 2 826 2 257 4 831 2 258 4 259 4 261 32 153 4 837 2 263 2 373 2 612 12 708 4 709 2 264 4 38 2 712 44 845 2 714 10 614 4 39 2 160 4 269 2 506 4 384 2 386 22 162 2 47 4 850 6 275 16 512 2 720 44 719 132 277 2 388 2 513 46 721 32 722 4 169 2 392 2 53 4 518 32 858 4 859 2 55 10 57 44 58 12 283 44 525 2 526 2 727 8 175 4 862 4 289 44 65 12 66 4 178 2 68 2 293 4 403 136 632 2 75 2 736 2 190 4 76 44 77 4 740 4 742 4 411 4 870 2 873 2 542 4 194 10 639 2 416 2 543 2 309 22 746 4 752 2 418 2 84 4 641 2 876 4 754 4 314 2 421 4 86 4 757 20 644 2 881 4 204 4 319 14 318 4 551 4 552 2 428 2 92 2 95 4 208 12 209 2 210 4 888 2 102 4 323 2 435 4 655 2 658 2 442 2 221 2 110 136 898 2 222 4 223 4 784 2 224 4 667 44 341 44 570 26 786 2 787 2 670 14 791 2 671 2 673 4 118 136 674 2 573 2 123 8 675 20 451 16 124 20 797 4 347 2 452 2 455 4 907 4 127 4 458 44 
829 2 340 2 145 1 695 2 
695 2 324 2 
131 2 521 2 206 2 251 2 
634 2 131 2 521 2 206 2 251 2 728 2 
521 2 49 2 465 2 695 2 251 2 823 2 
391 2 799 2 
698 2 521 2 465 2 251 2 
604 2 748 2 
149 2 353 2 
878 2 490 2 
500 2 488 2 
500 2 683 2 353 2 
500 2 112 2 353 2 
500 2 663 2 353 2 
500 2 893 2 353 2 
665 6 251 2 756 6 200 2 521 2 524 2 827 2 426 2 
625 2 321 2 
445 6 578 2 729 2 130 2 429 2 462 2 482 2 600 2 359 2 828 2 425 2 561 2 563 2 686 4 453 4 777 2 471 2 193 2 
678 2 829 2 
634 2 521 2 49 2 254 2 465 2 695 2 251 2 
5 2 49 2 695 2 
266 2 49 2 695 2 
829 2 625 2 35 2 
49 2 695 2 
121 2 625 2 
695 2 647 2 
829 2 625 2 593 2 
829 2 490 2 769 2 
500 2 415 2 829 2 
731 2 829 2 748 2 
440 2 829 2 353 2 
625 2 810 2 
580 2 695 2 
514 2 490 2 
500 2 835 2 
356 2 748 2 
854 2 353 2 
278 2 625 2 
510 2 353 2 
748 2 475 2 
500 2 152 2 
332 2 490 2 
829 2 625 2 287 2 593 2 
829 2 625 2 287 2 593 2 414 2 
829 2 625 2 18 2 
290 2 829 2 625 2 
813 2 407 2 203 2 541 2 
234 2 
236 2 463 2 4 2 135 2 357 2 805 4 589 2 806 2 16 2 484 1 599 4 369 2 697 2 19 6 20 2 24 2 700 2 699 4 832 6 833 1 611 2 838 4 374 2 615 4 267 2 40 2 849 2 618 2 620 4 619 2 381 2 45 2 508 2 717 2 46 1 390 2 393 2 395 2 522 2 172 6 284 2 527 2 737 2 538 26 868 2 741 2 638 2 540 2 82 2 197 2 198 2 85 2 422 2 89 2 424 2 882 4 93 2 763 1 100 2 99 2 889 8 650 2 768 4 654 2 328 2 329 2 559 2 330 26 218 4 443 2 339 2 113 2 901 6 232 2 449 2 798 2 800 2 908 2 
236 2 4 2 135 2 357 2 805 4 589 2 806 2 16 2 599 5 369 2 19 6 20 2 24 2 700 2 699 4 832 6 611 2 838 4 374 2 615 4 267 2 40 2 849 2 618 2 620 4 619 2 381 2 45 2 508 2 717 2 270 2 390 2 516 2 393 2 395 2 522 2 172 6 284 2 174 2 527 2 70 2 737 2 538 26 868 2 741 2 638 2 540 2 82 2 197 2 198 2 85 2 89 2 424 2 882 4 761 1 93 2 100 2 99 2 889 8 650 2 768 4 892 1 654 2 328 2 329 2 559 2 330 26 218 4 443 2 339 2 113 2 901 6 232 2 449 2 798 2 800 2 908 2 
51 2 
8 2 436 2 
874 2 108 2 630 2 
874 2 108 2 630 2 
459 6 581 2 583 12 4 6 239 2 804 4 357 2 468 2 587 2 805 4 12 2 248 2 480 6 693 2 821 4 819 2 16 2 17 2 599 6 369 2 19 2 21 2 20 2 22 2 603 2 700 2 699 4 27 4 150 4 832 6 702 2 492 2 611 4 840 2 267 2 40 4 849 2 618 2 620 2 381 2 43 2 622 4 717 4 508 2 272 4 164 2 165 2 166 2 50 2 393 2 520 4 59 4 172 2 284 2 630 4 527 4 400 2 177 2 408 2 737 2 538 24 867 2 868 2 743 2 79 2 80 4 874 6 751 2 83 2 877 4 202 4 424 2 882 4 761 2 93 4 885 2 96 2 764 2 889 4 100 4 214 4 892 2 654 2 328 2 559 2 106 2 330 16 218 4 562 2 108 2 564 4 333 12 567 2 783 16 666 2 113 2 227 2 901 2 232 2 449 2 906 2 676 4 800 2 908 2 
96 2 177 2 166 2 50 2 227 2 817 2 436 2 315 2 143 2 468 2 793 2 330 2 538 4 504 2 62 2 284 2 93 2 
459 6 581 4 583 12 4 6 239 2 804 4 357 2 468 2 587 2 805 4 12 2 248 2 480 6 693 2 821 4 819 2 16 2 17 2 599 6 369 2 19 2 20 2 22 2 603 2 700 2 699 4 27 4 150 4 832 6 702 2 492 2 611 4 493 2 840 2 267 2 40 4 849 2 618 2 620 4 381 2 622 4 717 4 508 2 163 2 272 4 164 2 165 2 50 2 393 2 626 2 520 4 59 4 172 2 284 2 630 4 527 4 177 2 400 2 406 2 408 4 737 2 538 24 867 2 868 2 743 2 79 2 80 4 874 6 751 2 83 2 877 4 202 4 645 2 424 2 882 4 761 2 93 2 885 2 96 2 764 2 889 4 100 4 214 4 892 2 654 2 328 2 559 2 106 2 330 16 218 4 562 2 108 2 564 4 333 12 567 2 783 16 113 2 901 2 232 2 449 2 346 2 676 4 800 2 908 2 
459 6 581 4 583 12 4 6 239 2 804 4 357 2 468 2 587 2 805 4 477 2 12 2 248 2 480 6 693 2 821 4 819 2 16 2 17 2 599 6 369 2 19 2 20 2 22 2 603 2 700 2 699 4 27 4 150 4 832 6 702 2 492 2 611 4 262 2 840 2 267 2 40 4 849 2 618 2 620 2 381 2 622 4 717 4 508 2 272 4 164 2 165 2 166 2 50 2 393 2 520 4 59 4 172 2 284 2 630 4 527 4 400 2 177 2 863 2 534 2 406 2 408 2 737 2 538 24 867 2 868 2 743 2 79 2 80 4 874 6 751 2 83 2 877 4 202 4 424 2 882 4 761 2 93 4 885 2 96 2 764 2 889 4 100 4 214 4 892 2 654 2 328 2 559 2 106 2 330 16 218 4 562 2 108 2 564 4 333 12 567 2 783 16 113 2 227 2 901 2 232 2 449 2 574 2 676 4 800 2 908 2 
4 2 357 2 805 2 473 2 14 2 818 2 140 1 16 2 141 2 367 2 369 2 599 3 19 6 699 4 700 2 371 4 148 2 832 6 34 2 157 2 615 4 618 2 620 2 381 2 44 2 167 1 52 2 855 2 54 2 393 2 394 2 523 2 395 2 60 2 172 6 284 2 173 2 397 2 71 2 733 2 737 2 538 24 868 2 869 2 417 2 198 2 549 2 424 2 882 2 761 1 93 2 765 2 103 2 326 2 892 1 654 2 656 2 328 2 329 2 559 2 330 18 218 4 111 2 338 2 901 8 342 2 232 2 449 2 800 2 908 2 
836 2 72 4 366 2 312 1 547 2 198 3 187 2 901 2 755 2 327 2 135 6 329 3 735 2 615 2 19 2 792 2 330 2 395 2 538 2 620 3 191 3 172 2 320 2 489 2 64 2 
836 2 72 4 366 2 547 2 198 2 187 2 901 2 755 2 327 2 135 6 329 2 735 2 615 2 19 2 792 2 330 2 395 2 538 2 620 2 191 2 172 2 320 2 489 2 64 2 
836 2 72 4 366 2 547 2 198 2 187 2 901 2 755 2 327 2 135 6 329 2 735 2 615 2 19 2 792 2 330 2 395 2 538 2 620 2 191 2 172 2 320 2 489 2 64 2 
529 2 179 2 680 2 352 4 31 2 653 3 657 2 556 4 241 2 502 2 560 2 330 4 268 2 538 10 620 3 636 2 9 2 409 2 662 2 109 2 11 2 479 6 815 4 115 6 313 3 875 4 198 3 901 2 233 4 280 2 201 2 672 2 56 2 395 2 144 4 147 3 26 2 427 4 457 2 64 2 
529 2 679 2 179 2 680 2 352 4 241 2 358 2 538 10 409 2 9 2 636 2 11 2 479 6 815 4 313 2 198 2 875 4 201 2 144 4 147 2 427 4 26 2 31 2 653 2 657 2 556 4 330 4 560 2 502 2 268 2 620 2 662 2 716 2 109 2 115 4 901 2 280 2 233 4 56 2 672 2 395 2 64 2 457 2 
529 2 679 2 179 2 680 2 352 4 241 2 358 2 538 10 409 2 9 2 636 2 11 2 479 6 815 4 313 2 198 2 875 4 201 2 144 4 147 2 427 4 26 2 31 2 653 2 657 2 556 4 330 4 560 2 502 2 268 2 620 2 662 2 716 2 109 2 115 4 901 2 280 2 233 4 56 2 672 2 395 2 64 2 457 2 
529 2 679 2 179 2 680 2 352 4 241 2 358 2 538 10 409 2 9 2 636 2 11 2 479 6 815 4 313 2 198 2 875 4 201 2 144 4 147 2 427 4 26 2 31 2 653 2 657 2 556 4 330 4 560 2 502 2 268 2 620 2 662 2 716 2 109 2 115 4 901 2 280 2 233 4 56 2 672 2 395 2 64 2 457 2 
529 2 679 4 179 2 680 2 352 4 241 2 358 4 538 10 409 2 9 2 636 2 11 2 479 6 815 4 313 2 198 2 875 4 201 2 144 4 147 2 427 4 26 2 31 2 653 2 657 2 556 4 330 4 560 2 502 2 268 2 620 2 662 2 716 4 109 2 115 4 901 2 280 2 233 4 56 2 672 2 395 2 64 2 457 2 
692 2 374 2 404 2 597 2 216 2 288 2 456 2 
537 2 572 2 250 2 404 2 472 2 37 2 
533 2 188 2 1 2 330 2 538 2 155 2 868 2 517 2 744 2 
705 2 529 6 179 6 679 4 402 2 433 2 894 2 358 4 502 6 409 6 9 6 662 2 688 4 809 4 246 2 716 4 640 2 196 2 115 15 571 2 875 4 201 6 519 2 317 2 602 2 427 12 457 6 
128 1 750 7 467 4 233 2 159 2 556 2 377 2 281 2 844 2 439 2 423 2 330 1 725 2 538 1 144 2 627 2 25 2 207 2 
750 6 467 4 233 2 159 2 556 2 377 2 844 2 281 4 439 2 423 2 725 2 627 2 144 2 25 4 207 4 
128 1 750 10 467 4 233 2 159 2 556 2 377 6 844 2 281 8 439 2 423 2 330 1 725 2 538 1 627 8 144 2 25 8 207 8 
750 2 467 2 233 2 159 2 556 2 844 2 281 2 439 2 423 2 725 2 144 2 25 2 207 2 
350 24 132 17 464 2 684 6 240 4 357 8 354 8 585 6 805 88 137 6 245 10 591 4 361 4 691 22 363 6 594 10 812 4 481 6 13 4 365 4 139 2 368 2 824 2 599 248 369 14 825 28 601 8 701 8 606 2 29 4 704 6 610 6 613 90 841 6 36 8 497 4 498 42 842 6 713 2 376 4 379 18 846 2 503 4 715 90 507 2 385 26 718 8 273 6 271 2 276 16 851 24 624 10 389 10 723 6 724 124 393 14 170 4 396 6 286 4 861 2 531 4 730 4 401 12 69 11 181 4 732 4 295 4 297 4 185 1 184 4 299 92 186 24 300 6 738 16 74 4 189 6 538 150 410 24 78 4 192 2 195 10 307 8 419 24 87 24 643 16 316 6 879 34 90 2 760 4 882 112 761 58 884 2 553 8 766 18 887 8 554 12 432 84 891 26 215 4 892 58 770 2 437 10 104 6 217 2 558 42 330 134 772 36 661 4 334 8 664 4 779 10 335 2 444 50 782 6 781 6 569 5 446 10 668 6 899 6 228 16 447 6 231 2 789 6 343 8 790 2 122 2 126 6 349 2 
399 2 129 2 180 2 350 2 291 4 292 2 864 2 732 2 132 2 133 4 684 2 357 2 738 4 538 46 805 20 469 2 136 2 245 2 305 2 476 2 195 2 594 2 481 2 595 2 419 2 420 2 87 2 485 2 486 2 369 2 599 44 825 38 90 2 882 20 701 2 256 2 605 2 761 2 884 2 553 6 322 2 154 2 706 2 610 2 212 2 707 2 766 2 887 2 430 2 372 2 156 2 651 2 555 4 325 2 892 2 437 2 843 2 104 2 376 2 378 2 331 2 846 2 330 44 772 2 107 2 219 2 507 2 334 2 779 2 718 2 897 2 335 2 336 4 568 6 271 2 273 4 387 2 276 4 624 2 389 2 569 2 446 2 225 2 668 2 228 4 724 6 393 2 856 2 117 2 448 2 125 2 126 2 
132 10 684 4 240 4 354 4 357 2 585 4 805 36 469 10 137 4 591 4 363 4 812 4 481 4 15 4 485 10 599 104 369 6 825 14 701 2 605 10 29 4 704 4 610 4 841 4 497 4 496 16 498 16 842 4 713 2 846 2 42 8 273 2 271 2 276 10 389 4 723 4 724 24 393 6 396 4 726 16 861 2 531 4 532 8 730 2 401 14 294 8 295 4 297 4 184 4 299 24 186 8 300 4 738 10 189 4 538 78 78 4 192 2 307 4 195 4 310 2 548 2 642 4 643 8 879 30 90 2 205 8 882 44 761 28 884 2 322 2 553 6 98 2 766 10 887 2 432 24 215 4 892 30 437 6 438 2 104 4 558 8 330 70 772 6 773 2 219 2 661 4 776 4 334 2 565 4 335 2 566 4 779 4 780 4 444 8 781 4 225 2 446 4 899 4 668 4 228 10 447 4 230 2 789 4 903 4 794 32 122 2 126 4 
531 2 730 2 69 2 132 2 464 2 184 2 684 4 357 2 354 4 74 2 738 6 538 28 805 14 691 10 195 2 481 4 420 2 139 2 368 2 369 2 599 40 825 14 643 6 601 2 879 6 90 2 701 2 882 14 761 12 884 2 553 4 322 2 610 4 887 2 766 2 892 12 770 2 437 2 104 4 846 2 330 26 772 2 334 2 507 2 335 2 779 2 271 2 273 2 276 6 569 2 389 2 446 2 668 4 228 6 724 8 393 2 286 2 126 4 349 2 
454 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 818 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (14,1224) (14,1224) (205,590,611,970,1434) (205,590,611,970,1434) (205,590,611,970,1434) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 85 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 889 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 1388 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 1131 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 1415 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 1111 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 855 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 951 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 568 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 636 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 1044 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 709 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 1058 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 794 138 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 1196 138 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 1408 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 286 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 534 138 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 5 138 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 553 138 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 579 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 286 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 436 1436 138 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 553 138 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 972 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 286 (62,64,97,130,150,226,260,344,362,363,385,412,432,463,469,470,502,520,558,564,592,639,651,745,812,843,862,865,908,949,1015,1025,1076,1098,1128,1141,1147,1266,1271,1297,1304,1332,1354,1422,1441,1460) 1313 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 321 628 
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 321 628 883 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1088 573 1294 545 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (14,1224) 1017 533 248 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (14,1224) 1017 533 248 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.JavaParser:jj_ntk()I
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:lexLTE([I[I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_3_21()Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 5837 | if (x) -> if (!x)
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_61()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V | STATEMENT | 523 | stmt -> ;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE:sign(I)I
daikon.Debug:logOn()Z
daikon.PptSlice1:num_samples()I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.ProglangType:isIntegral()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptName:isEnterPoint()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_148()Z
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eq(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ProglangType:baseIsString()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ProglangType:isFloat()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_5()Z
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_124()Z
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:eltsEqual([II)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3_13()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:size()I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:gt(II)Z
daikon.ProglangType:isString()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName:hashCode()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3R_49()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_108()Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:subarray([III)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfo:has_typeof()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_161()Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:jj_3_30()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:ne(II)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | RETURN | 1527 | return null
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.ProglangType:isPointerFileRep()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLT([II)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.PptSlice0:arity()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | OPERATOR | 107346 | <= -> ==
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([D)[D
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_135()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:eq(FF)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_72()Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:memberOf(F[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_126()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_3_27()Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_96()Z
daikon.Quant:memberOf(F[F)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_3_25()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.diff.RootNode:RootNode()V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V | ASSIGN | 5329 | = null
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:eltwiseLT([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_50()Z
daikon.diff.Node:Node()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_62()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60655 | = null
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariant:logOn()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:intersection([I[I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_75()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.ArraysMDE:element_range([I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_109()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:isIOASet()Z
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.PptSlice1:arity()I
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.JavaParser:jj_3R_180()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptSlice2:arity()I
daikon.VarInfo:isIOAArray()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_116()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ProglangType:baseIsScalar()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quantify.Constant:name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isArray()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.diff.InvMap:InvMap()V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lt(II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isScalar()Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_164()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltsLTE([II)Z
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.VarInfo:isDerived()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.Invariants:Invariants()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ProglangType:base()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_118()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfo:new_ppt()V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_77()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Debug:logDetail()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3R_210()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3_29()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3_12()Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_25(I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_58()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3_35()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:is_typeof()Z
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_73()Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_88()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfo:ioa_name()Ljava.lang.String; | RETURN | 99869 | return null
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.Quantify.Constant:Constant(I)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_3()Z
daikon.VarInfo:relate_var()V
daikon.Quant:subsetOf([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:lexEqual([I[I)Z
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaCharStream:readChar()C
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfo:isPrestate()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaCharStream:getEndColumn()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfo:name()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
918 2 188 2 1101 2 1224 2 504 2 1163 2 1399 4 1309 2 14 2 
465 2 472 2 1338 6 1245 6 813 2 91 6 1107 2 936 2 509 2 714 2 928 2 
133 4 1224 2 271 2 890 2 1273 6 1475 6 675 2 881 6 1022 2 14 2 191 6 567 4 268 2 
289 8 876 4 1224 6 390 2 411 4 31 26 713 2 967 2 619 4 1404 2 1160 16 1339 29 490 12 697 10 222 10 14 6 176 10 727 6 325 2 808 8 249 6 454 10 79 2 180 8 781 10 933 16 1021 8 1238 4 281 16 740 2 
818 2 
915 2 
610 2 1 2 1223 2 2 2 1224 4 316 2 6 2 63 2 918 2 880 2 882 2 717 2 448 2 969 2 1139 2 266 2 14 4 1444 2 922 2 569 2 571 2 1288 2 529 2 929 2 497 4 383 2 532 2 684 2 390 2 1207 2 145 2 1248 2 802 4 1342 4 751 2 1258 2 1081 2 1431 2 1084 4 653 2 440 2 757 2 49 2 1267 2 
1376 2 1224 4 165 6 31 48 1051 4 147 4 1404 2 1160 32 345 2 1339 54 697 16 490 22 222 16 68 6 1061 8 14 4 1234 2 973 2 176 6 727 4 1286 4 808 6 249 4 1039 6 454 16 1291 6 1259 6 180 18 309 2 1090 4 781 16 50 4 932 6 933 32 554 4 1238 2 281 32 1003 2 386 4 
532 2 349 2 235 2 
315 2 102 22 916 10 494 2 790 2 422 2 1347 2 929 2 661 2 413 2 414 2 35 2 642 2 175 2 
31 4 747 2 1160 2 1339 6 695 2 297 2 697 2 490 2 222 2 726 2 544 2 152 2 176 4 727 2 1062 2 454 2 1323 2 180 2 781 2 933 2 1238 2 281 2 111 2 
1286 4 876 2 1039 6 31 12 454 4 439 2 1051 4 1291 6 1160 8 781 4 1339 16 933 8 1481 2 490 4 281 8 697 4 222 4 
428 4 519 2 760 4 1268 2 821 2 846 4 293 2 659 62 880 2 1405 2 1112 2 907 4 969 4 349 6 1277 2 798 4 417 2 802 4 1343 4 857 14 1213 2 375 2 1469 2 1471 2 103 2 275 2 732 2 1346 10 206 2 1450 2 532 8 1326 4 1171 10 912 4 680 4 55 4 1132 2 741 2 408 4 235 2 
308 2 1137 2 1011 2 739 2 
113 1 1224 24 557 2 4 2 963 4 122 2 1226 2 1050 1 487 1 1053 6 218 2 219 1 970 2 971 1 1060 1 14 22 418 2 892 2 496 1 1413 1 979 4 336 1 681 1 894 2 503 2 1420 2 903 2 1337 1 34 2 240 2 988 6 1165 2 40 1 247 5 359 1 1434 2 51 2 1004 5 58 1 1270 4 366 4 367 2 1362 2 829 1 1276 2 1010 3 525 2 74 2 274 2 1290 2 382 2 1101 2 183 1 186 2 939 6 643 2 742 2 644 2 1113 2 1212 1 748 1 194 2 650 1 104 2 549 2 404 4 479 2 205 2 207 1 
1224 2 982 2 
959 2 1224 4 1303 2 
551 2 
3 2 5 2 762 2 763 2 412 2 8 2 9 2 10 30 767 94 765 2 768 2 13 44 1141 2 18 2 772 2 419 4 1143 44 773 2 421 18 1145 2 775 42 777 28 423 2 1147 2 1149 18 782 104 785 2 426 2 1155 10 26 46 1156 2 28 2 1157 2 788 4 1158 4 793 2 794 2 431 4 1161 2 799 42 432 2 39 6 433 94 434 4 804 2 42 2 435 2 43 4 436 2 1167 18 809 2 47 2 46 2 1170 2 811 2 441 2 812 2 1175 2 53 4 814 8 1176 2 443 2 61 2 824 2 447 50 1184 2 825 12 62 2 826 18 827 2 64 2 66 2 65 2 67 2 1189 2 449 50 1190 2 450 2 73 24 1192 4 1193 2 78 4 80 6 81 4 1196 2 457 2 459 4 84 2 85 2 86 2 87 4 843 2 88 2 1201 2 1202 2 463 2 464 2 844 2 845 4 92 2 93 52 848 4 94 2 469 2 849 94 470 2 471 4 852 2 473 94 855 2 1209 2 97 2 1211 2 856 4 862 2 863 4 864 2 865 2 107 2 1219 2 874 18 872 8 482 246 119 8 484 4 879 2 1230 14 1231 62 128 94 1232 2 129 2 1233 2 885 94 886 2 130 2 492 246 135 4 889 2 493 74 137 4 495 2 138 34 1236 30 1239 2 1244 44 502 4 900 12 901 2 1250 2 905 4 1254 2 906 18 148 4 150 18 151 2 511 8 510 4 908 2 909 4 1256 2 155 2 156 16 1260 4 1262 2 159 2 514 36 1266 2 515 4 1269 2 520 4 1271 2 521 4 171 2 1278 6 1280 18 1282 2 1283 2 528 4 1287 18 930 2 181 2 1293 2 534 2 536 2 185 2 937 2 1297 2 945 8 539 4 1301 2 189 2 190 2 946 2 1304 30 947 30 948 2 949 4 546 6 951 2 196 2 952 2 953 2 199 2 202 4 955 2 1307 2 204 2 553 18 208 2 210 2 556 2 1313 2 212 4 213 2 960 4 214 94 558 2 962 2 1315 4 1316 2 217 2 559 22 1318 16 562 2 564 2 220 8 972 2 568 2 572 4 1321 2 228 2 1322 2 226 4 975 2 1325 2 1324 2 977 12 574 2 231 2 575 4 578 6 1327 2 579 2 1332 2 584 2 585 4 981 4 587 358 588 8 241 16 984 2 592 2 243 2 594 2 1341 2 991 2 995 2 600 2 997 18 999 18 252 4 1000 2 1348 4 1001 90 1350 2 1352 2 1354 2 603 2 1357 2 1005 2 1358 2 1007 2 260 2 618 4 623 20 1012 2 627 2 1015 2 273 2 276 2 1018 2 636 2 639 2 277 2 1369 2 282 2 1370 62 286 30 287 4 288 2 1374 4 1373 2 1375 4 1024 4 1377 2 1025 2 1028 14 1029 4 1031 4 1033 12 298 2 299 2 1036 12 651 2 303 2 304 2 305 4 306 4 1041 4 307 4 1388 2 1044 2 1389 2 1046 4 1047 2 1394 48 656 22 1395 4 1398 2 1402 2 660 2 319 2 1052 48 1056 2 1057 12 1058 24 663 2 665 14 320 2 322 4 324 2 326 2 1408 2 327 42 329 2 330 2 331 2 332 30 1415 2 1416 2 337 2 685 2 339 2 1419 2 343 22 691 2 1422 2 344 24 1423 94 1076 2 692 2 347 2 694 2 1080 2 1083 2 1085 2 1086 2 1433 2 362 2 363 2 364 4 365 2 1436 2 1438 4 1091 94 709 2 1092 4 1441 2 369 2 371 2 716 2 1442 2 722 2 1098 50 1446 2 376 4 1099 2 1447 246 730 2 380 2 1449 2 734 2 1102 2 385 2 1103 56 735 4 1452 4 736 2 737 2 743 2 392 8 1459 94 1460 2 1462 2 1110 2 393 2 1111 2 745 2 1119 2 1470 2 1472 4 1121 18 1122 62 401 2 1124 2 403 2 1476 94 405 2 1125 72 1128 2 1131 2 1134 2 
1241 2 753 2 926 1 57 2 
753 2 664 2 
373 2 532 2 753 2 859 2 411 2 1289 2 927 2 
753 2 693 2 1289 2 
753 2 1289 2 1421 2 
1144 2 478 2 57 2 
753 2 1289 2 
335 2 478 2 
753 2 1255 2 
478 2 966 2 57 2 
1045 2 1368 2 57 2 
350 2 817 2 57 2 
924 2 1208 2 57 2 
391 2 57 2 1159 2 
1302 2 478 2 
753 2 132 2 
1045 2 744 2 
121 2 350 2 
267 2 1208 2 
1179 2 1159 2 
476 2 478 2 
1166 2 1159 2 
1328 2 1208 2 
233 2 350 2 
1045 2 1198 2 
1426 2 478 2 966 2 57 2 
1426 2 478 2 954 2 966 2 57 2 
478 2 57 2 360 2 
478 2 453 2 57 2 
178 2 294 2 7 2 261 2 
628 2 321 2 
883 2 628 2 321 2 
373 2 182 2 532 2 753 2 411 2 1289 2 
610 2 1331 2 
373 2 532 2 411 2 1292 2 
1208 2 1043 2 
614 2 1159 2 
506 2 1045 2 
1227 2 350 2 
1237 2 350 2 1159 2 
22 2 350 2 1159 2 
350 2 33 2 1159 2 
1345 2 350 2 1159 2 
373 2 36 2 1364 2 174 6 996 2 532 2 283 6 1071 2 
1409 2 478 2 
625 2 787 2 1429 2 102 6 1032 2 381 2 333 4 239 2 944 2 638 2 851 2 1480 2 721 2 666 2 622 2 161 2 831 2 245 4 
48 2 57 2 
1276 2 
1224 26 557 2 4 2 961 2 963 4 657 2 122 6 1226 6 1053 4 1055 2 218 2 14 26 131 2 769 2 892 2 779 2 1329 2 1152 2 894 2 142 2 898 2 1420 2 689 2 687 2 903 2 34 2 240 2 985 2 37 4 988 4 800 2 699 2 1165 6 247 2 598 2 1082 2 250 4 602 2 253 2 1355 4 1004 2 1439 2 366 4 1270 4 367 2 1362 2 829 2 169 2 525 2 74 2 1191 2 1013 2 925 2 632 2 1290 2 1448 2 456 2 1101 2 462 2 841 2 186 2 939 6 387 2 742 2 942 2 644 2 748 2 194 2 477 2 104 2 1473 8 549 2 404 4 479 2 
1224 26 557 2 4 2 961 2 215 2 963 4 657 2 122 6 1226 6 1053 4 1055 2 218 2 14 26 131 2 769 2 892 2 779 2 1329 2 894 2 142 2 898 2 1420 2 689 2 687 2 903 2 34 2 240 2 985 2 37 4 988 6 800 2 244 2 699 2 1165 6 247 2 1082 2 250 4 602 2 253 2 51 2 1355 4 1004 2 1439 2 366 4 1270 4 368 2 367 2 1362 2 829 2 169 2 525 2 74 2 1191 2 274 2 925 2 632 2 1290 2 1448 2 456 2 1101 2 462 2 841 2 186 2 939 6 387 2 742 2 942 2 644 2 647 2 748 2 194 2 477 2 104 2 1473 8 549 2 404 4 479 2 
690 2 
956 2 1164 2 
1224 12 1270 2 410 2 1049 2 963 2 485 4 828 2 1136 2 714 2 715 2 265 2 218 2 724 4 14 6 16 2 491 8 525 2 75 4 888 2 134 8 626 4 19 2 229 2 733 2 928 4 934 2 1151 2 839 2 682 2 894 2 939 4 187 2 465 4 742 2 1245 6 1295 2 1107 2 91 6 789 4 146 2 903 2 1338 6 1380 2 541 2 1115 2 1035 2 352 2 194 2 993 2 354 4 549 2 867 2 1173 2 361 10 1130 2 957 2 160 2 871 2 481 2 112 2 
1224 12 1270 2 410 2 963 2 1049 2 485 4 828 2 1136 2 714 2 265 2 218 2 14 6 724 4 16 2 491 8 525 2 75 4 888 2 134 8 626 4 19 2 136 4 229 2 733 2 928 4 934 2 1151 2 840 2 839 2 682 2 894 2 939 4 187 2 465 4 742 2 1245 8 1295 2 1107 2 91 8 789 4 903 2 1380 2 1338 6 541 2 1115 2 1035 2 509 2 352 2 194 2 993 2 354 4 549 2 867 2 1173 2 361 10 1130 2 957 2 160 2 871 2 481 2 816 2 112 2 
465 2 993 2 888 2 1245 2 1295 2 410 2 789 4 485 2 828 2 928 2 1338 2 934 2 265 2 1151 2 160 2 724 4 16 2 112 2 
1224 12 1270 2 410 2 1049 2 963 2 485 4 828 2 1136 2 715 2 265 2 218 2 724 4 14 6 16 2 491 4 525 2 75 4 888 2 134 4 626 4 19 2 229 2 733 2 928 4 934 2 1151 2 839 2 682 2 894 2 939 4 187 2 465 4 742 2 1245 6 1295 2 1107 2 91 6 789 4 146 2 903 2 1338 4 1380 2 541 2 1115 2 1035 2 509 2 352 2 194 2 993 2 354 4 549 2 867 2 1173 2 361 6 1130 2 957 2 160 2 871 2 481 2 112 2 
1224 12 1270 2 410 2 1049 2 963 2 485 4 828 2 1136 2 715 2 265 2 218 2 724 4 14 6 16 2 491 4 525 2 75 4 888 2 134 4 626 4 19 2 229 2 733 2 928 4 934 2 1151 2 839 2 682 2 894 2 939 4 187 2 465 4 742 2 1245 4 1295 2 1107 2 91 6 789 4 146 2 903 2 1338 6 1380 2 541 2 1115 2 1035 2 352 2 194 2 993 2 354 4 549 2 867 2 1173 2 361 6 813 2 1130 2 957 2 160 2 871 2 481 2 112 2 
1224 12 1270 2 410 2 1049 2 963 2 485 4 828 2 1136 2 714 2 715 2 265 2 218 2 724 4 14 6 16 2 491 8 525 2 75 4 888 2 134 4 626 4 19 2 229 2 733 2 928 4 934 2 1151 2 839 2 682 2 894 2 939 4 187 2 465 4 742 2 1245 6 1295 2 1107 2 91 6 789 4 146 2 903 2 1338 6 1380 2 541 2 1115 2 1035 2 352 2 194 2 993 2 354 4 549 2 867 2 1173 2 361 6 1130 2 957 2 160 2 871 2 481 2 112 2 
1224 12 1270 2 410 2 1049 2 963 2 485 4 828 2 1136 2 714 2 715 2 265 2 218 2 724 4 14 6 16 2 491 8 525 2 75 4 888 2 134 8 626 4 19 2 229 2 733 2 928 4 934 2 1151 2 839 2 682 2 894 2 939 4 187 2 465 4 742 2 1245 6 1295 2 1107 2 91 8 789 4 146 2 903 2 1338 8 1380 2 541 2 1115 2 1035 2 352 2 194 2 993 2 354 4 549 2 867 2 1173 2 361 10 813 2 1130 2 957 2 160 2 871 2 481 2 112 2 
1224 12 1270 2 410 2 1049 2 963 2 485 4 828 2 1136 2 714 2 715 2 265 2 218 2 724 4 14 6 16 2 491 8 525 2 75 4 888 2 134 8 626 4 19 2 229 2 733 2 928 4 934 2 1151 2 839 2 682 2 894 2 939 4 187 2 465 4 742 2 1245 6 1295 2 1107 2 91 6 789 4 146 2 903 2 1338 6 1380 2 541 2 1115 2 1035 2 352 2 194 2 993 2 354 4 549 2 867 2 1173 2 361 10 1130 2 957 2 160 2 871 2 481 2 112 2 
959 6 557 2 4 2 1314 1 410 2 961 2 963 4 216 2 1136 2 218 2 14 24 16 2 1320 2 19 2 224 6 1142 2 229 2 23 6 779 2 577 1 1151 2 586 6 789 4 982 6 34 2 1338 8 240 2 985 2 37 4 988 6 990 2 1165 6 41 1 993 2 247 2 1169 2 602 2 51 2 1173 2 813 4 52 2 1004 2 815 2 607 8 258 2 1178 2 60 2 823 2 1362 2 828 2 263 2 265 2 72 2 74 2 75 8 626 4 77 2 274 2 1366 2 1019 2 456 2 640 2 839 2 462 2 285 2 465 4 91 12 644 2 468 2 1380 2 1035 2 101 2 858 10 104 12 1214 2 479 2 105 6 867 4 1390 6 481 2 871 2 112 2 1221 2 314 7 1224 46 1048 6 1049 2 122 6 1226 8 485 4 123 6 1053 2 1055 4 884 6 662 1 491 2 888 2 1063 6 892 2 894 2 682 2 142 2 898 2 143 1 686 7 1245 4 1420 2 903 2 146 2 352 2 354 6 1257 6 703 6 361 2 160 2 1270 4 366 4 367 2 370 2 168 2 920 2 921 2 724 4 1445 2 525 2 1284 2 1290 2 733 2 928 4 531 1 1101 2 934 2 186 2 1455 2 939 6 187 2 387 2 742 2 1295 2 1107 4 1296 2 943 2 395 4 541 2 1115 2 194 2 1305 6 1468 4 548 1 198 2 1473 4 549 2 402 1 404 4 551 6 1130 2 957 4 958 6 1310 1 
1221 2 959 6 1048 6 557 2 1224 48 4 2 961 2 410 2 1049 2 963 4 123 6 485 4 1226 8 122 6 216 2 1136 2 1053 2 1055 4 884 6 218 2 14 26 16 2 491 6 1320 2 888 2 19 2 1142 2 224 6 1063 6 229 2 892 2 23 6 779 2 1151 2 682 2 894 2 142 2 898 2 586 6 1245 8 789 4 1420 2 146 2 903 2 982 6 34 2 240 2 1338 8 985 4 37 4 988 6 990 2 352 2 1165 6 993 2 1257 6 247 2 354 6 1169 2 250 2 703 6 602 2 361 2 1173 2 51 2 52 2 160 2 815 2 1004 2 607 8 258 2 1178 2 366 4 1270 4 60 2 367 2 823 2 1362 2 714 4 828 2 370 2 168 2 263 2 920 2 265 2 921 2 724 4 1445 2 72 2 1284 2 525 2 75 8 74 2 626 4 77 2 274 2 833 2 733 2 1290 2 1019 2 1366 2 928 4 456 2 640 2 1101 2 279 2 934 2 839 2 462 4 285 2 1455 2 186 2 939 6 187 2 465 4 387 4 742 2 1295 2 91 12 1107 4 1296 2 644 2 943 2 468 2 395 4 1380 2 541 2 1115 2 1035 2 1305 6 194 2 1468 4 101 2 858 10 198 2 104 12 1473 8 549 2 1214 2 404 4 479 2 105 6 551 6 867 4 1390 6 1130 2 957 4 871 2 481 2 958 6 112 2 
1221 2 959 6 1048 6 557 2 1224 48 4 2 961 2 410 2 1049 2 963 4 123 6 485 4 1226 8 122 6 216 2 1136 2 1053 2 1055 4 884 6 218 2 14 26 16 2 491 6 1320 2 134 4 888 2 19 2 1142 2 224 6 1063 6 229 2 892 2 23 6 779 2 1151 2 682 2 894 2 142 2 898 2 586 6 1245 8 789 4 1420 2 146 2 903 2 982 6 34 2 1338 8 240 2 985 4 37 4 988 6 990 2 352 2 1165 6 993 2 1257 6 247 2 354 6 1169 2 250 2 703 6 602 2 361 6 1173 2 51 2 52 2 160 2 815 2 1004 2 607 8 258 2 1178 2 366 4 1270 4 60 2 367 2 823 2 1362 2 714 4 828 2 370 2 168 2 263 2 920 2 265 2 921 2 724 4 1445 2 72 2 1284 2 525 2 75 8 74 2 626 4 77 2 274 2 833 2 733 2 1290 2 1019 2 1366 2 928 4 456 2 640 2 1101 2 279 2 934 2 839 2 462 4 285 2 1455 2 186 2 939 6 187 2 465 4 387 4 742 2 1295 2 91 12 1107 4 1296 2 644 2 943 2 468 2 395 4 1380 2 541 2 1115 2 1035 2 1305 6 194 2 1468 4 101 2 858 10 198 2 104 12 1473 8 549 2 1214 2 404 4 479 2 105 6 551 6 867 4 1390 6 1130 2 957 4 871 2 481 2 958 6 112 2 
959 12 557 2 4 2 961 2 410 2 963 4 216 2 1136 2 218 2 14 24 16 2 1320 2 19 2 224 6 1142 2 229 2 23 12 779 4 1151 2 586 6 789 4 982 12 34 2 240 2 1338 10 985 4 37 6 988 6 990 2 992 6 1165 8 993 2 247 4 807 6 1169 2 250 2 602 2 1351 2 254 6 51 2 1173 2 813 2 52 2 1004 4 815 2 607 8 606 6 258 2 1178 2 60 2 1362 2 828 2 259 2 263 2 265 2 69 6 72 2 74 2 75 8 626 4 77 2 274 2 833 2 1366 2 1019 2 456 4 640 2 279 2 839 2 462 4 285 2 465 4 91 16 644 2 1026 6 468 2 1380 2 1035 2 649 2 1384 6 101 2 858 8 104 10 1214 2 479 2 105 12 867 4 1390 6 871 2 481 2 112 2 1221 2 1224 52 1048 6 1049 2 122 8 1226 12 485 4 123 12 1053 4 1055 4 884 6 491 6 888 2 134 4 1063 6 892 2 1067 6 682 2 894 2 142 2 898 2 1245 10 341 2 1420 2 1074 6 903 2 146 2 505 2 509 2 352 2 354 6 1257 6 703 6 361 6 160 2 1270 4 366 4 367 2 167 2 714 4 370 2 168 2 920 2 921 2 724 4 1445 2 525 2 1284 2 728 2 1290 2 733 2 928 4 1101 2 934 2 186 2 1455 2 939 6 187 2 387 4 742 2 1295 2 1107 4 1296 2 943 2 395 4 541 2 1115 2 194 2 1305 6 1468 4 198 2 1473 10 549 2 404 4 551 12 407 2 1130 2 957 4 958 6 
465 4 1224 4 1245 6 1295 2 91 4 1107 2 410 2 1049 2 789 2 146 2 714 2 1136 2 828 2 1380 2 1338 6 1115 2 1035 2 265 2 724 2 352 2 491 6 75 2 626 2 134 4 888 2 354 2 229 2 928 4 934 2 361 4 1173 2 1151 2 839 2 481 2 187 2 
557 2 1224 28 4 2 961 2 410 2 1049 2 963 4 122 6 1226 8 1136 2 1053 3 1055 2 218 2 14 24 491 6 888 2 892 2 229 2 1151 2 894 2 142 2 1245 6 789 2 1420 2 1249 2 590 2 146 2 903 2 34 2 1338 6 240 2 37 4 988 6 352 2 1165 6 354 2 247 3 602 2 51 2 361 2 1173 2 1004 3 611 2 819 2 1270 4 366 4 367 2 823 2 1362 2 714 2 828 2 1276 2 170 2 1009 2 265 2 724 2 525 2 75 2 74 2 626 2 274 2 1290 2 928 4 1101 2 934 2 1454 3 839 2 186 2 939 6 187 2 465 4 742 2 1295 2 91 4 1107 2 644 2 541 2 1380 2 1115 2 1035 2 474 2 194 2 858 2 104 4 549 2 404 4 479 2 481 2 1392 2 
1126 2 1049 2 1136 2 
1126 2 1049 2 1136 2 
1224 24 557 2 4 2 118 2 961 2 317 2 1049 6 963 4 485 4 122 2 1226 2 1136 4 1053 2 1055 6 218 2 14 16 491 6 323 2 134 4 19 2 224 2 420 4 671 2 892 2 1065 2 1151 4 140 2 682 2 894 2 142 2 898 4 1245 12 1073 2 789 2 1420 2 903 2 34 2 240 2 1338 12 985 4 986 2 1078 2 987 2 988 6 509 4 1165 2 993 2 354 4 1082 4 51 2 361 6 813 4 160 2 1440 2 56 2 366 4 1270 4 367 2 1362 2 828 2 714 4 370 2 522 2 724 2 725 2 525 2 74 2 75 4 626 2 274 2 733 2 1290 2 1019 2 928 4 1101 2 1200 4 462 4 186 2 939 6 187 2 465 4 387 4 742 2 1295 2 1107 4 91 16 644 2 1299 2 395 2 1035 2 1037 2 194 2 1468 2 101 2 858 2 1473 4 104 4 754 2 549 2 404 4 479 2 867 4 1126 2 957 2 
224 2 1224 4 858 2 198 2 104 2 836 2 395 2 1020 2 956 2 920 2 1078 2 140 2 14 2 1407 2 16 2 323 2 525 2 
1224 24 557 2 4 2 118 2 961 2 317 2 1049 6 963 4 485 4 122 2 1226 2 1136 4 1053 4 1055 6 218 2 14 16 491 6 323 2 134 4 19 2 224 2 420 4 671 2 892 2 1065 2 1151 4 140 2 682 2 894 2 142 2 898 4 1245 12 1073 2 789 2 1420 2 903 2 34 2 240 2 1338 12 985 4 1078 2 987 2 988 6 509 4 1165 2 993 2 354 4 1082 4 1172 2 51 2 361 6 813 4 160 2 56 4 366 4 1270 4 367 2 1362 2 828 2 714 4 370 2 1275 2 522 2 724 2 725 2 525 2 75 4 74 2 626 2 526 2 274 2 733 2 1290 2 1019 2 928 4 1101 2 1200 4 462 4 641 2 186 2 939 6 187 2 465 4 387 4 742 2 1295 2 1107 4 91 16 644 2 1035 2 194 2 1468 2 101 2 1473 4 104 2 754 2 1123 2 549 2 404 4 479 2 867 4 1126 2 957 4 871 2 
1224 24 557 2 4 2 118 2 961 2 317 2 1049 6 963 4 485 4 122 2 1226 2 1136 4 1403 2 1053 2 1055 6 218 2 14 16 491 6 323 2 134 4 19 2 224 2 420 4 671 2 892 2 1065 2 1151 4 140 2 682 2 894 2 142 2 898 4 1240 2 1245 12 1073 2 789 2 1420 2 903 2 34 2 346 2 240 2 1338 12 985 4 149 2 1078 2 987 2 988 6 509 4 1165 2 993 2 354 4 1082 4 51 2 361 6 813 4 160 2 56 2 366 4 1270 4 367 2 1362 2 828 2 714 4 370 2 522 2 724 2 725 2 525 2 74 2 75 4 626 2 274 2 733 2 1290 2 1019 2 928 4 1101 2 1200 4 462 4 186 2 939 6 187 2 465 4 387 4 742 2 1295 2 1107 4 91 16 644 2 395 2 1035 2 542 2 194 2 1468 2 101 2 858 2 1473 4 104 4 754 2 549 2 404 4 479 2 867 4 1126 2 957 4 871 2 
409 2 761 8 760 2 4 2 1135 2 415 2 1138 30 11 2 766 2 12 2 14 56 769 2 770 18 15 18 771 4 20 2 774 2 1146 56 776 2 778 2 424 2 1148 28 779 46 1150 12 780 2 781 6 24 2 784 2 1154 2 1153 2 25 2 786 2 29 12 31 18 30 2 32 12 791 24 34 4 792 2 1160 12 795 3 37 12 801 10 38 3 803 2 1165 14 806 2 44 4 808 6 437 2 45 4 1169 2 438 12 810 2 51 6 1174 2 52 4 442 2 55 2 815 2 445 4 446 16 1177 2 819 2 820 2 59 30 60 2 822 2 1182 2 1183 16 829 2 1185 2 830 2 70 2 74 4 76 30 452 3 832 16 454 6 1194 10 1195 4 834 2 455 2 456 40 837 24 83 2 458 2 1197 18 460 18 461 2 1199 2 842 30 89 2 90 2 466 2 1203 54 1204 2 467 2 1206 1 1205 2 847 2 95 2 854 2 96 6 1210 4 98 2 475 2 100 2 477 2 860 2 104 4 1215 4 479 8 1216 2 866 2 106 4 109 2 108 2 1218 2 110 10 480 2 869 2 1220 10 116 2 115 2 1224 96 117 2 1225 2 483 2 122 14 1226 52 124 2 486 2 125 4 878 2 487 2 127 4 488 2 1228 18 490 10 1234 4 891 18 1235 2 893 2 498 6 499 2 500 2 501 16 894 2 141 2 142 2 895 2 897 6 898 10 896 12 899 2 1246 2 1249 2 505 2 903 2 902 48 904 4 1252 2 508 2 907 2 512 2 910 3 911 2 154 2 1261 2 1264 4 1263 24 914 18 913 2 1265 126 516 102 517 2 518 6 1270 6 1272 16 1274 22 917 2 169 2 1281 2 523 2 524 2 1284 2 525 2 1286 4 1285 14 923 2 925 2 1290 2 1291 6 180 6 931 2 932 6 933 12 1294 2 184 2 535 2 938 2 939 8 940 2 941 2 942 2 1296 4 537 3 538 2 1300 2 540 62 192 8 543 2 545 2 193 2 194 2 195 2 197 4 200 2 1306 2 549 2 201 2 550 2 203 2 552 12 555 2 1311 4 1312 3 963 6 964 2 965 16 560 18 1319 2 561 4 218 2 565 2 222 6 223 2 225 2 573 2 230 2 232 10 576 2 978 2 1326 2 980 18 580 4 1330 2 581 4 1333 18 237 2 238 2 983 2 242 18 1339 24 596 2 988 14 1340 3 989 8 597 2 1343 2 247 16 599 2 249 4 998 2 601 2 602 2 1002 1 1351 2 255 18 1004 46 604 2 605 22 608 2 609 2 1359 2 1361 3 1360 2 1362 2 259 2 616 2 1008 2 617 2 262 4 620 2 621 4 1363 2 1009 2 1365 2 270 2 1014 4 629 2 630 4 274 6 631 2 632 2 634 16 635 12 1366 4 1367 2 281 12 285 2 284 52 1371 2 1372 16 643 2 1376 2 1023 2 1378 86 290 2 644 4 291 2 1030 4 646 2 1379 22 1034 72 295 12 648 4 300 8 649 2 1383 2 1042 4 1386 2 1391 2 655 2 310 2 1392 2 311 36 313 4 1396 2 1397 2 1400 2 1053 46 1054 32 1055 2 1404 2 1059 2 1061 8 1406 34 668 2 669 3 1064 2 673 2 672 96 1411 3 674 2 1412 30 676 2 677 2 1068 2 678 30 334 10 1414 3 683 2 1417 150 1070 12 338 2 1418 2 340 4 341 2 342 22 689 2 1420 2 687 36 1075 30 1424 2 1425 2 1077 36 697 6 1427 4 351 2 1079 12 353 2 698 10 700 12 355 2 356 2 357 24 702 36 1089 4 1088 2 704 2 705 2 707 2 366 6 712 2 367 2 711 18 372 6 718 2 720 10 374 2 1096 2 1095 2 1443 2 1097 2 723 4 728 2 377 2 378 1 379 2 731 30 1100 2 1101 8 1451 2 1453 3 1454 2 386 4 1455 2 1457 80 742 2 388 2 389 2 1105 28 1106 2 1458 24 1108 2 1109 14 1463 16 1464 2 394 12 1113 2 1114 18 1116 10 396 2 398 2 397 2 748 2 1465 14 749 2 1466 22 1467 4 750 3 752 2 1473 136 404 6 755 2 756 2 1479 2 1127 12 1129 2 407 4 758 32 1133 2 759 2 
1224 2 1226 2 122 2 1361 2 1300 2 1053 2 617 2 1363 2 37 2 801 2 14 2 1165 2 193 2 247 2 602 2 779 6 334 4 461 2 1174 2 158 2 110 2 869 2 1004 2 938 2 
1224 2 1226 2 122 2 1361 2 1300 2 1053 2 617 2 1363 2 37 2 801 2 14 2 1165 2 193 2 247 2 602 2 779 6 334 4 461 2 1174 2 158 2 110 2 869 2 1004 2 938 2 
1224 2 1226 2 122 2 1361 2 1300 2 1053 2 617 2 1363 2 37 2 801 2 14 2 1165 2 193 2 247 2 602 2 779 6 334 4 461 2 1174 2 158 2 110 2 869 2 1004 2 938 2 
1224 10 342 4 31 4 1247 3 1226 2 1379 4 791 3 1053 3 1160 2 1339 6 919 2 295 2 697 2 1381 4 221 2 222 2 14 4 302 2 1466 4 771 2 451 2 153 2 808 4 249 2 454 2 328 2 357 3 358 2 1146 2 602 2 781 2 1127 2 933 2 1174 2 935 2 281 2 234 2 1004 3 516 6 605 4 
1224 10 342 4 31 4 1247 2 1226 2 1379 4 791 2 1053 2 1404 2 1160 2 1339 4 919 2 295 2 697 2 490 2 1381 4 221 2 222 2 14 4 302 2 1466 4 771 2 451 2 153 2 808 4 249 2 454 2 328 2 357 2 358 2 1146 2 180 2 602 2 781 2 1127 2 933 2 1174 2 935 2 281 2 234 2 1004 2 516 6 605 4 
1224 10 342 4 31 4 1247 2 1226 2 1379 4 791 2 1053 2 1404 2 1160 2 1339 4 919 2 295 2 697 2 490 2 1381 4 221 2 222 2 14 4 302 2 1466 4 771 2 451 2 153 2 808 4 249 2 454 2 328 2 357 2 358 2 1146 2 180 2 602 2 781 2 1127 2 933 2 1174 2 935 2 281 2 234 2 1004 2 516 6 605 4 
1224 10 342 4 31 4 1247 2 1226 2 1379 4 791 2 1053 2 1404 2 1160 2 1339 4 919 2 295 2 697 2 490 2 1381 4 221 2 222 2 14 4 302 2 1466 4 771 2 451 2 153 2 808 4 249 2 454 2 328 2 357 2 358 2 1146 2 180 2 602 2 781 2 1127 2 933 2 1174 2 935 2 281 2 234 2 1004 2 516 6 605 4 
1224 10 342 4 31 4 1247 2 1226 2 1379 4 791 2 1053 2 1404 4 1160 2 1339 4 919 2 295 2 697 2 490 4 1381 4 221 2 222 2 14 4 302 2 1466 4 771 2 451 2 153 2 808 4 249 2 454 2 328 2 357 2 358 2 1146 2 180 4 602 2 781 2 1127 2 933 2 1174 2 935 2 281 2 234 2 1004 2 516 6 605 4 
246 2 1006 2 507 2 652 2 475 2 1478 2 
853 2 1186 2 1187 2 738 2 687 2 652 2 746 2 
1242 2 312 2 1268 1 1224 10 120 2 123 2 1298 1 658 2 348 2 1117 2 218 2 1279 1 14 8 667 2 1038 2 227 2 1474 1 1387 2 179 2 1066 2 513 2 1450 1 157 2 1069 2 256 2 1456 2 
1224 6 117 2 31 12 145 2 1160 6 1404 2 621 2 717 2 1339 16 697 6 490 4 173 2 1061 2 222 6 14 6 17 2 1286 2 377 2 808 4 249 2 454 6 1291 4 998 2 180 2 932 4 781 6 933 6 1218 2 281 6 386 2 
1224 1 527 2 342 2 613 4 1040 2 125 2 1379 2 591 2 976 2 1087 7 1317 2 1094 2 679 2 696 1 280 2 1353 2 14 1 1466 2 
527 2 342 2 613 4 1040 4 125 4 1379 2 591 2 976 2 1087 6 1317 4 1094 2 679 2 280 2 1353 2 1466 2 
1224 1 527 8 342 2 613 4 1040 8 125 8 1379 2 591 2 976 2 1087 10 1317 8 1094 2 679 2 696 1 280 2 1353 6 14 1 1466 2 
342 2 613 2 1040 2 125 2 1379 2 591 2 976 2 1087 2 1317 2 1094 2 679 2 280 2 1466 2 
211 2 0 2 1222 1 114 2 1224 22 968 2 563 2 566 2 14 20 1140 1 974 4 670 2 576 2 139 4 1154 2 27 4 589 2 34 4 1253 2 988 14 994 4 248 2 1435 2 51 4 444 1 708 1 612 1 366 8 1093 2 615 2 172 2 624 2 74 4 923 2 1016 2 729 2 274 4 272 2 1017 2 530 2 278 2 533 2 644 4 99 2 1382 1 950 2 1385 4 404 6 1217 1 207 2 
875 2 163 2 162 4 1224 46 1180 2 366 20 710 6 164 2 1181 2 318 2 166 2 1401 2 764 2 264 2 719 2 1188 2 416 2 14 44 887 2 269 2 1140 2 570 4 74 2 974 38 177 2 923 2 1016 4 21 2 274 2 272 2 633 4 1410 2 1017 2 576 2 838 2 533 2 425 2 139 6 783 2 582 2 1154 2 583 2 1334 2 427 2 236 2 144 2 1072 2 429 2 1336 2 644 2 430 2 292 2 1027 2 1461 2 645 4 850 2 34 2 1251 2 595 2 1162 2 797 6 1118 2 988 44 1120 2 1428 2 805 2 1344 2 1430 4 400 2 248 2 547 2 1168 2 861 2 701 2 1432 2 404 20 251 2 1477 2 406 2 1349 2 1308 2 1435 2 51 2 209 2 54 4 706 2 870 2 444 2 873 2 1437 4 1393 2 257 2 
0 2 1224 28 366 10 1180 2 1093 2 877 4 318 2 615 2 126 2 1401 2 968 2 489 4 566 4 172 2 14 26 624 2 74 2 1140 2 923 2 974 14 1016 2 21 2 274 4 670 2 633 2 1017 2 835 2 530 2 82 2 576 2 533 2 278 2 139 6 1154 2 27 6 1335 2 429 2 644 2 34 2 593 4 1253 2 296 2 1162 2 988 20 399 2 950 2 994 6 248 2 1385 2 404 8 251 2 1435 2 207 2 51 4 868 2 54 2 870 2 1437 2 257 2 
875 2 708 2 114 2 1224 28 612 2 366 14 1180 2 1181 4 166 4 1401 2 1229 2 563 2 14 26 71 2 887 2 74 2 1140 2 923 2 974 14 1016 2 729 10 274 10 633 6 1017 2 384 2 576 2 533 2 425 2 139 8 783 4 1104 2 1154 2 583 2 1243 2 1072 2 429 2 1336 4 644 2 292 4 688 2 589 2 34 2 796 4 797 6 988 38 99 10 301 2 1382 2 400 4 248 2 404 14 1477 2 1217 6 654 2 1435 2 51 10 54 6 1356 4 870 2 444 2 1437 6 1393 2 
637 2 

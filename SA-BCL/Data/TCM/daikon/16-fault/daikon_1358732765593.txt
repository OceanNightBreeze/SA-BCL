#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 299 257 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.IllegalArgumentException (24,53,152,425,450,758,1172) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 397 225 101 384 281 544 1118 721 617 25 777 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (96,1026) 15 
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (929,1152) (929,1152) 1170 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (929,1152) (929,1152) 1170 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR utilMDE.Assert$AssertionException (929,1152) 209 (294,513) (11,1049) (11,1049) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testPpts1Ppts2()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testPpts1Ppts3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs2()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR utilMDE.Assert$AssertionException (929,1152) 209 (294,513) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (929,1152) 209 (294,513) (294,513) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (929,1152) 209 (294,513) 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (929,1152) (929,1152) 1170 509 40 922 1124 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 651 (24,53,152,425,450,758,1172) 443 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (929,1152) (929,1152) 138 747 516 816 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ModBitTracker:split(I)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | CONDITION | 21221 | if (x) -> if (!x)
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_110()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_2_12(I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:lexGTE([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:logDetail()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2461 | return null
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_97()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:jj_3R_57()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_161()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3R_100()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_20()Z
utilMDE.Intern:intern([I)[I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_125()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ProglangType:isScalar()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName; | RETURN | 78413 | return null
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_2_16(I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:noDups([I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:intersection([I[I)[I
daikon.inv.Invariants:Invariants()V
daikon.Quant:slice([III)[I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14923 | if (x) -> if (!x)
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
daikon.PptSlice0:arity()I
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_2_25(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_80()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:concat([I[I)[I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3_14()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_162()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfo:new_ppt()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:intern([J)[J
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | RETURN | 184235 | return null
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.ProglangType:isArray()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19813 | = null
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:pow(II)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ModBitTracker:num_samples()I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 22146 | = null
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_29()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_99()Z
daikon.ProglangType:isFloat()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_2_35(I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:setDiff([I[I)[I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3_35()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_104()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Ppt:Ppt()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.Quant:eltsLTE([II)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_123()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.Node:Node()V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_67()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_ntk()I
daikon.Quant:eltsLteIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_3R_68()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3R_77()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_76()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice1:arity()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_2_4(I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_3_13()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ModBitTracker:num_sets()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_105()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_133()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_62()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments; | RETURN | 50313 | return null
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lte(II)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3R_109()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_72()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_107()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_69()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3_28()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:memberOf(J[J)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_3_3()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfo:relate_var()V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_122()Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_52()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaCharStream:getEndColumn()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice1:num_samples()I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:jj_3R_81()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_103()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_51()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:modulus([I)[I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:jj_3R_163()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3_12()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_2_21(I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:logOn()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:isReverse([I[I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:max([I)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:eltsGT([II)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:readChar()C
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.Invariant:logDetail()Z
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:isWorthPrinting()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1038 2 1152 2 857 4 282 2 929 2 705 2 577 2 991 2 931 2 
580 2 330 2 1145 2 478 2 585 2 882 2 473 2 454 6 497 6 1005 2 804 6 
1152 2 900 6 424 2 427 2 670 2 107 4 781 2 457 6 782 2 836 4 929 2 368 6 1105 6 
152 6 1152 6 235 10 594 12 1121 10 918 26 474 4 995 2 129 2 925 16 735 10 1104 10 929 6 786 2 1106 16 973 4 1033 2 567 2 1136 4 180 8 496 8 650 10 651 16 425 6 26 8 349 4 265 2 951 8 761 28 764 2 
591 6 1068 4 
1131 2 
152 2 317 2 235 2 1121 2 594 2 162 2 444 2 918 4 925 2 735 4 213 2 1104 2 973 2 1106 2 868 2 650 2 651 2 383 2 108 2 951 2 504 2 761 6 463 2 
1172 4 235 4 594 5 1121 4 650 4 651 8 775 6 918 12 349 2 351 2 583 6 925 8 758 4 1104 4 308 2 761 15 1106 8 
987 6 398 4 470 2 120 4 472 2 597 10 515 4 363 2 1057 4 553 2 600 10 1027 2 128 4 601 2 280 4 672 4 701 2 480 4 704 4 522 2 59 14 175 2 933 2 96 8 179 2 532 4 739 4 1069 4 792 4 741 2 422 2 536 62 222 2 978 2 1074 2 979 2 1077 2 37 2 1045 2 1148 2 
375 2 417 2 67 2 533 2 849 2 257 2 1131 2 299 2 1082 2 111 2 1084 2 
766 4 636 2 917 2 853 2 238 2 331 2 994 2 641 4 929 4 860 2 96 2 489 4 1069 4 1072 2 22 2 256 2 102 2 579 2 430 2 947 2 192 2 1019 2 586 2 1149 2 508 2 1152 4 359 2 593 2 120 2 362 2 1026 2 129 2 282 2 677 2 831 2 832 2 745 2 1176 2 540 2 460 2 1045 2 310 2 395 2 984 2 
450 4 1152 4 1172 2 235 6 1121 6 650 6 24 2 1053 4 775 4 651 6 918 8 53 8 925 6 1104 2 929 4 761 8 1106 6 
96 2 987 2 741 2 
202 2 1047 2 866 2 160 2 572 2 219 2 809 2 326 2 795 2 208 10 1142 2 1026 2 785 2 564 22 
465 2 914 1 467 4 772 2 321 2 159 2 471 2 776 2 920 2 1056 2 167 1 923 4 924 2 643 3 334 3 170 1 929 34 930 2 177 2 486 1 935 4 178 2 342 2 17 2 346 2 345 1 938 4 492 2 21 2 494 2 23 2 793 2 943 24 944 2 796 2 27 2 350 2 32 2 39 2 38 2 201 2 1090 3 205 2 49 16 665 2 54 1 673 2 821 2 822 2 530 2 63 2 216 2 374 6 976 2 377 2 827 2 1115 1 380 2 76 6 79 3 835 4 390 2 394 8 839 3 689 2 690 2 1119 2 844 2 400 2 87 2 402 1 695 2 854 4 240 4 408 2 703 1 559 2 1000 2 1003 2 92 2 413 2 562 6 563 2 247 2 1004 3 708 1 1009 3 569 2 1137 2 416 2 255 2 418 3 869 2 423 2 577 2 1012 1 715 1 104 2 1140 2 261 8 1017 2 1146 2 432 3 719 2 433 32 880 24 269 3 434 2 1022 2 436 2 1152 32 725 1 439 2 727 4 119 5 596 2 442 16 123 2 273 2 1158 8 1160 2 1161 2 894 3 606 6 288 2 1032 32 897 2 292 12 1035 1 612 16 1170 2 1171 2 141 1 615 2 618 12 904 2 143 2 1174 16 748 2 298 2 623 1 751 2 303 2 753 2 147 2 1179 2 628 1 759 3 762 2 
778 2 
765 2 929 2 
768 2 929 4 287 2 
634 32 315 2 314 4 4 2 5 2 637 4 638 8 919 2 640 4 921 54 329 12 926 2 927 2 928 54 13 12 338 2 647 2 932 2 14 2 340 2 341 18 344 4 18 2 20 2 648 16 940 2 347 2 25 2 653 2 348 4 654 2 31 2 945 26 656 2 352 54 33 2 34 2 658 2 35 2 949 2 660 2 950 14 953 2 955 4 41 32 42 2 958 2 43 2 664 12 360 2 666 2 51 54 52 4 667 2 364 2 365 2 964 2 671 12 366 26 969 2 58 2 60 2 675 2 373 12 65 2 975 4 679 2 66 2 69 20 977 2 378 2 73 2 74 6 381 2 382 4 384 2 685 2 385 266 78 54 80 4 980 2 687 2 692 2 85 4 397 12 396 2 989 2 693 30 990 2 697 2 992 2 700 2 407 2 409 2 411 26 412 2 1006 2 94 10 415 2 97 2 98 2 711 2 99 4 713 2 1011 2 421 4 101 4 714 2 426 2 1016 2 105 2 1018 12 431 2 106 4 720 2 1020 4 721 2 722 2 723 2 113 4 115 2 118 2 1023 54 122 4 732 2 1025 40 733 2 126 2 131 2 736 4 448 24 738 10 140 2 740 2 750 2 752 4 1040 2 456 2 145 18 757 56 458 4 1041 2 148 2 1043 48 150 2 1046 2 760 12 461 2 151 2 1048 40 769 2 161 2 774 26 1052 4 164 26 777 2 477 4 1059 2 479 2 783 4 784 2 1060 4 172 2 482 12 173 2 484 2 483 2 176 54 487 2 1067 2 490 2 791 2 794 12 185 2 1078 158 798 12 499 2 189 2 193 4 800 2 801 54 196 2 199 2 1085 2 505 2 506 2 1088 2 203 2 204 2 511 4 1093 4 1095 2 517 2 812 6 1097 2 519 4 521 2 212 2 1102 2 818 2 1103 4 524 2 529 6 1108 10 217 4 826 2 828 54 534 2 535 158 537 2 221 2 833 2 225 6 226 2 837 4 1118 2 840 2 544 2 845 2 847 6 1122 4 1125 4 1127 2 1128 2 1129 30 552 2 1130 2 855 2 555 2 1133 2 557 2 1134 12 560 2 244 2 245 2 249 14 566 2 861 4 250 2 864 2 251 4 252 2 253 18 570 2 574 2 1138 26 575 2 1139 2 258 2 259 2 1141 2 874 2 875 2 264 54 581 10 582 2 587 4 589 10 1150 54 592 2 271 2 272 4 595 2 1157 48 886 2 599 2 276 40 277 6 279 2 281 2 603 4 892 54 893 2 286 2 289 2 898 2 291 2 1169 158 901 32 293 4 902 10 617 2 622 2 301 2 908 2 625 2 1177 2 306 2 307 2 1180 2 913 2 631 2 
959 2 468 2 1173 2 607 1 
323 2 1173 2 
554 2 441 2 
239 2 96 2 15 2 139 2 1136 2 169 2 1173 2 
139 2 734 2 1173 2 
139 2 712 2 1173 2 
468 2 441 2 1143 2 
139 2 1173 2 
441 2 528 2 
1173 2 1083 2 
168 2 468 2 441 2 
1089 2 468 2 274 2 
153 2 133 2 468 2 
468 2 1112 2 905 2 
358 2 468 2 982 2 
441 2 7 2 
909 2 1173 2 
1089 2 771 2 
546 2 133 2 
36 2 905 2 
1155 2 982 2 
642 2 441 2 
982 2 1086 2 
905 2 565 2 
133 2 694 2 
1089 2 267 2 
168 2 468 2 441 2 688 2 
168 2 468 2 441 2 688 2 1165 2 
1099 2 468 2 441 2 
116 2 468 2 441 2 
254 2 850 2 755 2 146 2 
2 2 3 2 934 2 724 4 825 2 324 2 885 2 550 2 1100 2 966 2 195 2 891 2 171 2 91 2 883 4 543 2 564 6 956 2 
468 2 961 2 
96 2 15 2 319 2 952 2 
96 2 15 2 319 2 169 2 952 2 525 2 
568 2 96 2 15 2 139 2 1136 2 1173 2 
256 2 220 2 
96 2 15 2 1136 2 241 2 
1159 2 905 2 
500 2 982 2 
1089 2 1181 2 
133 2 661 2 
133 2 982 2 841 2 
133 2 982 2 811 2 
133 2 982 2 498 2 
133 2 982 2 62 2 
15 2 96 2 437 6 361 2 907 2 282 2 354 2 
1171 2 
465 2 467 4 772 2 773 2 159 2 854 4 240 4 923 4 929 16 1063 2 1000 2 92 2 1065 2 562 5 563 2 177 6 17 2 342 2 23 2 715 2 577 2 944 2 1140 2 104 2 350 2 1146 1 433 6 1152 16 439 2 49 6 273 2 518 2 971 2 606 6 288 2 896 2 63 2 1170 2 377 1 223 4 75 2 298 2 751 2 753 2 1179 2 391 2 
465 2 467 4 772 2 773 2 159 2 854 4 240 4 923 4 929 16 1063 2 1000 2 92 2 1065 2 562 6 563 2 177 6 17 2 342 2 23 2 715 2 577 2 944 2 1140 2 104 2 350 2 1146 2 433 6 1152 16 439 2 49 6 273 2 518 2 971 2 606 6 288 2 896 2 63 2 1170 2 377 2 223 4 75 2 298 2 751 2 753 2 1179 2 391 2 
449 2 372 2 
867 2 
635 2 1049 2 772 2 159 2 322 6 848 6 1120 2 473 2 923 2 240 2 481 2 859 2 929 12 11 2 646 4 563 2 1005 2 936 2 710 4 23 2 497 6 262 2 580 4 1145 4 194 2 877 2 198 4 804 6 1152 6 513 2 1024 2 50 2 887 2 273 2 209 2 813 2 605 2 674 4 606 4 972 2 63 2 1167 2 613 2 218 2 742 2 142 2 454 6 744 4 829 2 830 2 620 2 295 2 296 2 298 2 302 8 754 2 1044 4 312 2 763 2 691 2 
1049 2 322 6 234 2 1120 2 848 6 513 2 473 2 50 2 887 2 209 2 518 2 330 2 859 2 929 4 674 2 11 2 646 2 972 2 1005 2 218 2 710 2 744 2 454 8 142 2 497 6 295 2 262 2 29 4 296 2 580 4 1145 4 302 6 877 2 459 2 1044 2 763 2 312 2 804 6 691 2 
635 2 1049 2 513 2 1024 2 50 2 454 2 296 2 580 2 1145 2 754 2 194 2 877 2 198 2 11 2 674 4 646 4 972 2 804 2 
635 2 1049 2 772 2 159 2 322 4 848 4 1120 2 473 2 330 2 923 2 240 2 481 2 859 2 929 8 11 2 646 4 563 2 710 2 23 2 497 4 262 2 580 2 1145 2 194 2 877 2 198 4 804 2 1152 6 513 2 1024 2 50 2 887 2 273 2 813 2 605 2 674 4 606 4 972 2 63 2 1167 2 613 2 218 2 742 2 744 2 142 2 454 4 829 2 620 2 295 2 296 2 298 2 302 6 754 2 1044 2 312 2 691 2 
635 2 1049 2 772 2 159 2 322 4 848 4 1120 2 473 2 923 2 240 2 481 2 859 2 929 12 11 2 646 4 563 2 936 2 710 4 23 2 497 6 262 2 580 4 1145 4 194 2 877 2 198 4 882 2 804 6 1152 6 513 2 1024 2 50 2 887 2 273 2 209 2 813 2 605 2 674 4 606 4 972 2 63 2 1167 2 613 2 218 2 742 2 142 2 454 4 744 4 829 2 830 2 620 2 295 2 296 2 298 2 302 6 754 2 1044 4 312 2 763 2 691 2 
635 2 1049 2 772 2 159 2 322 6 848 4 1120 2 473 2 923 2 240 2 481 2 859 2 929 12 11 2 646 4 563 2 1005 2 936 2 710 4 23 2 497 6 262 2 580 4 1145 4 194 2 877 2 198 4 804 6 1152 6 513 2 1024 2 50 2 887 2 273 2 209 2 813 2 605 2 674 4 606 4 972 2 63 2 1167 2 613 2 218 2 742 2 142 2 454 6 744 4 829 2 830 2 620 2 295 2 296 2 298 2 302 6 754 2 1044 4 312 2 763 2 691 2 
635 2 1049 2 772 2 159 2 322 6 848 6 1120 2 473 2 240 2 923 2 481 2 859 2 929 12 11 2 646 4 563 2 1005 2 936 2 710 4 23 2 497 8 262 2 580 4 1145 4 194 2 877 2 198 4 882 2 804 8 1152 6 513 2 1024 2 50 2 887 2 273 2 209 2 813 2 605 2 674 4 606 4 972 2 63 2 1167 2 613 2 218 2 742 2 142 2 454 6 744 4 829 2 830 2 620 2 295 2 296 2 298 2 302 8 754 2 1044 4 312 2 763 2 691 2 
635 2 1049 2 772 2 159 2 322 6 848 6 1120 2 473 2 923 2 240 2 481 2 859 2 929 12 11 2 646 4 563 2 1005 2 936 2 710 4 23 2 497 6 262 2 580 4 1145 4 194 2 877 2 198 4 804 6 1152 6 513 2 1024 2 50 2 887 2 273 2 209 2 813 2 605 2 674 4 606 4 972 2 63 2 1167 2 613 2 218 2 742 2 142 2 454 6 744 4 829 2 830 2 620 2 295 2 296 2 298 2 302 8 754 2 1044 4 312 2 763 2 691 2 
635 2 322 2 332 2 923 4 929 46 11 2 646 4 935 2 936 2 342 2 17 2 938 2 23 2 944 2 350 2 662 2 49 6 50 2 965 2 674 4 968 6 972 2 371 1 63 2 374 2 377 2 70 2 72 2 76 2 83 4 394 2 983 2 691 2 986 2 401 1 404 2 1000 2 92 2 93 2 710 8 104 2 433 8 1021 2 114 6 438 6 439 2 727 2 1024 2 125 1 130 2 1029 2 447 6 737 2 1032 2 137 4 742 2 142 2 454 4 744 6 748 2 1037 6 751 2 753 2 754 2 144 2 1044 4 763 2 765 6 465 2 1049 2 768 6 467 4 772 2 156 6 159 2 773 4 473 4 1054 2 163 2 778 6 779 6 481 2 1063 2 485 2 177 6 790 1 1070 2 182 7 497 12 187 1 194 2 198 4 197 2 803 6 200 2 804 8 507 7 513 2 207 2 209 2 1098 2 813 2 214 6 218 2 829 2 223 4 1116 8 539 2 542 1 846 2 1120 2 854 4 240 4 856 2 859 2 563 2 562 6 248 2 871 1 577 2 1140 12 262 2 580 4 1145 4 1146 2 584 6 877 2 878 2 882 4 268 1 270 2 1152 24 1156 10 887 2 273 2 889 2 605 2 606 6 288 2 896 2 1167 4 292 4 613 4 1170 2 616 6 618 4 903 6 620 2 295 2 298 2 296 2 1175 2 302 2 1179 2 1178 2 305 2 629 6 1184 2 312 2 633 1 
765 6 465 2 768 6 635 2 1049 2 467 4 772 2 156 6 773 4 322 4 159 2 473 4 1054 2 163 2 778 6 779 6 332 2 923 4 481 2 929 48 1063 2 11 2 646 4 485 2 177 6 935 2 17 2 936 2 342 2 1070 2 938 2 23 2 944 2 497 12 183 2 350 2 194 2 197 2 198 4 803 6 662 2 200 2 804 8 205 2 49 6 513 2 207 2 50 2 209 2 1098 2 813 2 965 2 968 6 674 4 214 6 972 2 63 2 374 2 218 2 680 2 377 2 70 2 72 2 829 2 223 4 76 2 1116 8 539 2 394 2 83 4 983 2 691 2 986 2 846 2 1120 2 404 2 854 4 856 2 240 4 859 2 1000 2 92 2 93 2 562 6 563 2 248 2 1005 2 710 8 577 2 1140 12 104 2 262 2 580 4 1145 4 1146 2 584 6 878 2 877 2 433 8 882 2 1021 2 114 6 270 2 1152 26 438 6 439 2 727 2 1024 2 1156 10 887 2 273 2 889 2 130 2 447 6 1029 2 605 2 737 2 606 6 288 2 1032 2 137 4 896 2 1167 4 292 6 613 4 1170 2 616 6 742 2 903 6 744 6 618 6 454 6 142 2 620 2 1037 6 748 2 295 2 1175 2 296 2 298 2 751 2 302 2 754 2 753 2 144 2 1178 2 1179 2 305 2 629 6 1044 4 1184 2 763 2 312 2 
765 6 465 2 768 6 635 2 1049 2 467 4 772 2 156 6 773 4 159 2 322 4 473 4 1054 2 163 2 778 6 779 6 332 2 923 4 481 2 929 48 1063 2 11 2 646 4 485 2 177 6 935 2 17 2 936 2 342 2 1070 2 938 2 23 2 497 12 944 2 183 2 350 2 194 2 197 2 198 4 803 6 662 2 200 2 804 8 205 2 49 6 513 2 207 2 50 2 209 2 1098 2 813 2 965 2 968 6 674 4 214 6 972 2 63 2 374 2 218 2 680 2 377 2 70 2 72 2 829 2 223 4 76 2 1116 8 539 2 394 2 83 4 983 2 691 2 986 2 846 2 848 2 1120 2 404 2 854 4 856 2 240 4 859 2 1000 2 92 2 93 2 562 6 563 2 248 2 1005 2 710 8 577 2 1140 12 104 2 262 2 580 4 1145 4 1146 2 584 6 878 2 877 2 433 8 882 2 1021 2 114 6 270 2 1152 26 438 6 439 2 727 2 1024 2 1156 10 887 2 273 2 889 2 130 2 447 6 1029 2 605 2 737 2 606 6 288 2 1032 2 137 4 896 2 1167 4 292 6 613 4 1170 2 616 6 742 2 903 6 744 6 618 6 454 6 142 2 620 2 1037 6 748 2 295 2 1175 2 296 2 298 2 751 2 302 4 754 2 753 2 144 2 1178 2 1179 2 305 2 629 6 1044 4 1184 2 763 2 312 2 
635 2 322 4 327 6 328 6 332 2 923 4 929 52 11 2 646 4 935 2 342 2 936 2 17 2 938 2 19 6 23 2 944 2 28 6 350 2 659 2 662 2 49 8 50 2 965 2 674 4 968 6 972 2 63 2 374 4 680 2 377 2 70 2 72 2 76 4 83 4 394 4 983 2 691 2 986 2 404 2 1000 2 92 2 93 2 1005 2 710 8 104 2 716 6 433 12 1021 2 114 6 438 6 439 2 727 2 731 2 1024 2 130 2 1029 4 447 6 737 2 1032 4 137 4 742 2 142 2 454 6 744 6 748 2 1037 12 751 2 753 2 754 2 144 2 1044 4 763 2 765 12 465 2 1049 2 768 12 467 4 772 2 156 6 159 2 773 4 473 4 1054 2 163 2 778 12 779 6 481 2 1063 2 485 2 177 8 1066 2 1070 2 497 12 183 2 194 2 802 6 198 4 197 2 803 6 200 2 804 8 806 6 205 2 513 2 207 2 209 2 1098 2 1101 2 813 2 817 2 214 6 215 2 218 2 1111 6 829 2 223 6 1116 8 539 2 229 2 846 2 1120 2 848 2 854 4 240 4 859 2 563 2 562 6 248 2 577 2 1140 10 262 2 580 4 1145 4 1146 2 584 6 877 2 878 2 882 2 270 2 1152 24 1156 8 887 2 273 2 888 2 889 2 605 2 606 6 288 2 896 2 1167 4 292 8 290 6 613 4 1170 2 616 12 618 8 903 6 620 2 295 2 298 2 296 2 1175 2 302 4 1179 2 1178 2 305 2 629 12 1184 2 312 2 
1049 2 322 4 848 2 1120 2 513 2 473 2 50 2 887 2 209 2 859 2 929 4 11 2 674 2 646 2 972 2 1005 2 936 2 218 2 710 2 744 2 142 2 454 6 497 4 295 2 262 2 296 2 580 4 302 2 1145 4 877 2 1044 2 763 2 312 2 691 2 804 6 
465 2 1049 2 467 4 772 2 159 2 773 2 322 4 473 2 923 4 929 28 1063 2 11 2 646 2 177 6 936 2 342 2 17 2 23 2 1073 2 497 4 944 2 350 2 804 6 513 2 49 6 50 2 209 2 674 2 972 2 63 2 374 3 218 2 377 2 223 4 76 3 684 2 541 2 691 2 1120 2 854 4 240 4 856 2 859 2 1000 2 92 2 562 6 563 2 1005 2 706 3 569 2 710 2 870 2 577 2 578 2 104 2 1140 4 262 2 580 4 1145 4 1146 2 877 2 433 8 1152 24 439 2 1156 2 887 2 273 2 123 2 605 2 606 6 288 2 1032 3 896 2 1171 2 1170 2 744 2 454 6 142 2 295 2 296 2 298 2 751 2 302 2 753 2 303 2 1179 2 1044 2 763 2 312 2 
573 2 763 2 691 2 
573 2 763 2 691 2 
465 2 467 4 772 2 159 2 773 2 322 4 473 4 779 2 330 2 923 4 929 24 1063 2 646 2 177 2 935 2 342 2 17 2 938 2 23 2 944 2 497 12 350 2 1080 2 804 10 45 2 49 2 513 2 209 2 518 2 674 2 370 2 972 2 63 2 377 2 83 2 838 2 691 2 848 4 854 4 240 4 1000 2 92 2 563 2 562 6 1005 2 708 2 710 4 577 2 104 2 1140 4 580 4 1145 4 1146 2 1147 2 433 2 882 4 1152 16 439 2 727 2 121 2 1156 2 729 2 273 2 127 2 606 6 288 2 609 2 1032 2 137 2 896 2 292 2 744 4 618 2 454 8 295 2 298 2 296 2 751 2 302 4 753 2 1179 2 1044 2 763 2 
137 2 1152 2 1092 2 1156 2 1024 2 72 2 1140 2 273 2 1144 2 779 2 386 2 1080 2 602 2 1028 2 929 4 1021 2 449 2 
465 2 467 4 772 2 159 2 773 2 322 4 473 4 330 2 923 4 929 20 1063 2 646 2 177 2 935 2 342 2 17 2 938 2 23 2 944 2 497 12 350 2 804 10 45 2 49 2 513 2 209 2 518 2 674 2 819 2 370 2 972 2 63 2 377 2 83 2 838 2 691 2 848 4 854 4 240 4 1000 2 92 2 563 2 562 6 1005 2 710 4 577 2 104 2 1140 2 580 4 1145 4 1146 2 1147 2 433 2 882 4 1152 14 439 2 727 2 121 2 729 2 273 2 127 4 606 6 288 2 609 2 1032 4 896 2 292 2 744 4 618 2 294 2 454 8 295 2 298 2 296 2 751 2 302 4 753 2 1179 2 1044 2 763 2 
465 2 467 4 772 2 159 2 773 2 322 4 473 4 779 2 330 2 923 4 929 24 1063 2 646 2 177 2 935 2 342 2 17 2 938 2 23 2 944 2 497 12 350 2 1080 2 804 10 45 2 49 2 513 2 209 2 518 2 674 2 370 2 972 2 63 2 377 2 83 2 838 2 691 2 848 4 854 4 240 4 1000 2 92 2 563 2 562 6 1005 2 708 1 710 4 577 2 104 2 1140 4 580 4 1145 4 1146 2 1147 2 433 2 882 4 1152 16 439 2 727 2 121 2 1156 2 729 2 273 2 127 2 606 6 288 2 609 2 1032 2 137 2 896 2 292 2 744 4 618 2 454 8 295 2 298 2 296 2 751 2 302 4 753 2 1179 2 1044 2 763 2 
0 2 316 2 325 6 918 6 332 2 922 2 923 4 333 2 925 4 335 6 929 28 12 4 17 2 342 2 343 2 939 1 23 2 649 2 650 2 651 4 942 4 944 2 652 4 350 2 951 4 954 2 355 2 40 2 663 2 49 12 669 2 56 2 672 2 967 2 971 2 63 2 676 2 374 6 377 2 68 10 71 2 76 6 75 2 684 2 77 6 388 6 686 2 981 10 82 2 391 2 394 10 988 2 88 2 404 2 699 1 406 4 996 4 997 10 704 2 1000 2 1002 2 92 2 93 2 706 2 95 24 1008 8 420 2 715 2 103 2 104 2 433 18 112 2 439 2 443 2 124 6 446 6 1029 10 737 2 1031 2 1032 6 739 2 748 4 749 1 751 2 753 2 756 2 758 4 761 7 462 2 465 2 467 4 770 6 772 2 773 2 158 2 159 2 1054 2 1057 2 780 2 1062 2 1063 2 174 1 1065 2 177 12 191 2 1079 4 1087 2 200 2 509 2 1091 6 206 2 808 6 1096 2 518 2 1098 2 1104 2 820 2 1106 4 823 4 223 10 538 4 227 6 541 2 230 2 231 2 545 4 235 2 1121 2 1124 2 237 8 854 4 240 4 558 2 563 2 562 6 571 2 870 2 577 2 578 2 1140 2 873 2 1146 2 583 6 881 1 1152 22 1154 6 1153 10 594 4 273 2 275 2 280 2 604 2 606 6 288 2 608 2 1166 4 610 4 292 14 1170 2 618 14 298 2 300 6 304 2 1179 2 630 6 
1152 2 49 2 1123 2 90 2 445 3 929 2 1029 6 1064 2 787 2 527 2 895 4 177 2 1032 3 374 3 1170 2 746 2 223 2 76 3 717 2 1117 2 501 2 433 2 627 2 910 2 
1152 2 49 2 1123 2 90 2 445 2 929 2 1029 6 1064 2 787 2 527 2 895 4 177 2 1032 2 374 2 1170 2 746 2 223 2 76 2 717 2 1117 2 501 2 433 2 627 2 910 2 
1152 2 49 2 1123 2 90 2 445 2 929 2 1029 6 1064 2 787 2 527 2 895 4 177 2 1032 2 374 2 1170 2 746 2 223 2 76 2 717 2 1117 2 501 2 433 2 627 2 910 2 
235 2 1121 2 6 2 918 4 403 4 551 4 165 2 476 3 8 2 90 2 925 2 929 10 789 2 709 2 180 4 650 2 651 2 425 2 655 2 109 3 433 2 879 4 1152 4 1151 2 884 2 442 2 668 3 1104 2 1106 2 136 4 1032 3 974 2 64 2 612 2 1170 2 76 3 683 4 761 6 632 6 985 2 
884 2 1151 2 1152 4 235 2 1121 2 594 2 6 2 442 2 403 4 918 4 551 4 668 2 476 2 165 2 90 2 8 2 925 2 1104 2 929 10 136 4 1106 2 1033 2 1032 2 974 2 789 2 709 2 64 2 612 2 1170 2 180 4 650 2 651 2 425 2 76 2 655 2 683 4 109 2 879 4 433 2 951 2 761 4 985 2 632 6 
884 2 1151 2 1152 4 235 2 1121 2 594 2 6 2 442 2 403 4 918 4 551 4 668 2 476 2 165 2 90 2 8 2 925 2 1104 2 929 10 136 4 1106 2 1033 2 1032 2 974 2 789 2 709 2 64 2 612 2 1170 2 180 4 650 2 651 2 425 2 76 2 655 2 683 4 109 2 879 4 433 2 951 2 761 4 985 2 632 6 
884 2 1151 2 1152 4 235 2 1121 2 594 2 6 2 442 2 403 4 918 4 551 4 668 2 476 2 165 2 90 2 8 2 925 2 1104 2 929 10 136 4 1106 2 1033 2 1032 2 974 2 789 2 709 2 64 2 612 2 1170 2 180 4 650 2 651 2 425 2 76 2 655 2 683 4 109 2 879 4 433 2 951 2 761 4 985 2 632 6 
884 2 1151 2 1152 4 235 2 1121 2 594 4 6 2 442 2 403 4 918 4 551 4 668 2 476 2 165 2 90 2 8 2 925 2 1104 2 929 10 136 4 1106 2 1033 4 1032 2 974 2 789 2 709 2 64 2 612 2 1170 2 180 4 650 2 651 2 425 2 76 2 655 2 683 4 109 2 879 4 433 2 951 4 761 4 985 2 632 6 
410 2 393 2 103 2 1013 2 1113 2 464 2 
1135 2 1058 2 946 2 57 2 446 2 309 2 1013 2 
232 2 1152 8 472 1 851 2 810 2 475 2 556 2 522 1 929 10 999 2 1107 2 1109 2 16 2 678 1 616 2 681 1 453 2 23 2 1014 2 624 2 657 2 387 1 502 2 503 2 911 2 84 2 
469 2 235 4 1121 4 594 6 1053 2 918 10 443 2 331 2 925 6 1104 4 1106 6 1033 2 450 2 1010 2 180 4 649 2 650 4 651 6 425 2 455 2 583 4 1079 2 758 2 951 2 761 12 
1152 1 807 2 117 2 451 2 46 1 824 2 852 2 514 6 639 2 403 2 621 2 30 2 993 2 683 2 389 2 879 2 929 1 369 4 
807 4 117 2 451 2 824 2 852 2 514 6 639 2 403 2 30 2 621 4 993 4 683 2 389 2 879 2 369 4 
1152 1 807 8 117 6 451 2 46 1 824 2 852 2 514 10 639 2 403 2 30 2 621 8 993 8 683 2 389 8 879 2 929 1 369 4 
807 2 451 2 824 2 852 2 514 2 639 2 403 2 30 2 621 2 993 2 683 2 879 2 369 2 
313 4 1 6 154 2 466 4 467 36 318 2 915 4 155 4 157 4 325 30 1051 4 1055 4 166 10 1061 10 336 2 337 2 929 78 10 8 645 8 339 16 788 4 488 4 181 4 939 6 491 4 1071 4 493 2 941 2 1076 4 186 4 948 4 353 4 805 4 357 2 44 11 960 8 47 4 1094 4 512 4 962 2 516 2 55 4 210 2 520 14 814 6 815 4 816 2 367 24 523 2 970 4 526 10 61 4 531 2 1110 8 376 2 377 26 682 8 379 4 1114 2 392 4 842 4 843 4 399 4 549 1 236 16 1126 4 696 2 699 8 854 44 89 4 702 4 998 4 858 2 1001 8 92 6 562 102 863 4 708 2 872 2 1015 10 104 2 718 4 429 4 1146 28 588 6 435 16 1152 70 726 10 439 6 440 4 728 10 730 2 598 4 278 10 132 2 283 4 285 2 1034 32 138 4 292 16 614 24 899 24 743 4 747 2 297 4 1039 4 626 4 1182 4 912 2 1183 8 
1 4 467 14 843 2 399 4 318 2 325 6 696 2 699 6 854 14 89 2 997 2 858 2 929 28 92 2 562 40 863 4 708 2 488 4 1071 4 872 2 104 2 1015 2 1076 2 186 2 1146 12 881 2 588 2 590 2 805 4 1152 26 44 2 726 6 439 2 962 2 730 2 516 2 598 2 278 6 55 2 814 2 816 2 211 2 1162 2 367 8 1163 2 526 6 61 4 292 14 1168 2 452 2 377 12 743 2 1114 2 747 2 224 2 749 2 834 2 981 10 842 4 
313 6 1 8 767 2 466 6 467 42 915 6 318 2 155 4 325 24 1055 6 336 2 929 96 339 8 488 6 181 4 491 6 1071 6 495 2 941 2 1076 6 186 6 188 2 190 6 799 2 1081 2 353 6 805 6 957 2 44 12 47 6 1094 4 48 6 512 4 962 4 516 2 518 2 55 2 210 2 814 6 520 12 815 4 816 2 367 46 970 6 526 12 61 6 1110 16 531 2 376 2 377 32 682 8 224 2 834 2 981 14 392 6 842 4 843 2 399 6 1126 4 699 8 854 50 89 2 702 4 997 4 998 4 858 4 1001 8 243 6 92 12 562 112 863 6 1007 4 100 2 872 4 576 8 104 6 1015 12 428 2 718 6 1146 32 881 3 588 12 590 2 1152 84 439 12 726 12 440 4 730 4 598 6 278 12 1162 2 890 2 1163 2 135 2 138 6 292 6 614 16 452 2 899 16 743 6 747 2 749 4 297 6 1039 4 626 6 1182 6 311 2 
1 6 467 20 399 2 318 2 320 2 1050 2 86 2 233 2 916 2 547 2 548 2 696 2 698 4 405 2 854 20 166 2 1132 2 9 2 242 2 1061 2 858 2 644 2 337 2 929 46 92 2 246 2 561 2 562 48 863 2 707 4 865 2 708 2 414 2 488 2 937 2 1071 2 419 2 495 2 1015 2 104 2 260 2 797 2 1076 2 428 2 184 2 186 2 266 2 1146 6 1081 2 799 2 110 2 588 2 805 2 1152 44 44 2 510 2 439 2 726 4 962 2 808 6 728 2 730 2 516 2 598 2 963 2 55 2 278 4 814 2 211 2 132 2 816 2 134 2 367 6 1030 4 284 2 1164 2 526 4 61 2 611 2 292 36 1168 2 377 6 71 4 743 2 747 2 1114 2 906 2 1042 2 81 2 228 2 149 2 
356 2 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 
862 1 263 1 876 1 1036 1 619 1 1075 1 

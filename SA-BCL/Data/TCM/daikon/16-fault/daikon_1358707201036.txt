#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 272 562 285 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 43 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 488 155 177 513 139 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 280 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 459 180 449 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 459 180 449 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 459 180 449 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 459 180 449 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.FormatTestCase:passes()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice2:arity()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptSlice1:arity()I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:size()I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 279238 | = null
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:lexEqual([I[I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfo:relate_var()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.Quant:gte(II)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
jtb.JavaCharStream:getEndColumn()I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 4209 | return null
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfo:isPointer()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap:size()I
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ValueTuple:isMissing(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | STATEMENT | 65291 | stmt -> ;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:ne(II)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:lte(II)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | RETURN | 19748 | return null
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:memberOf(J[J)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:lexGT([I[I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:union([I[I)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariants:Invariants()V
daikon.ProglangType:isArray()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:intersection([I[I)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsLT([II)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.ProglangType:isIntegral()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([B[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.InvMap:InvMap()V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:sameLength([I[I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.PptSlice1:num_samples()I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sum([I)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaCharStream:getEndLine()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eq(II)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.RootNode:RootNode()V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:dimensions()I
daikon.Quant:subsetOf([J[J)Z | CONDITION | 196771 | if (x) -> if (!x)
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:slice([III)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.ModBitTracker:split(I)I
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.Invariant:justified()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | OPERATOR | 15357 | == -> <
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
745 2 408 2 224 2 698 2 710 2 770 2 584 2 406 2 61 4 
666 6 336 2 260 2 504 2 714 2 146 2 256 2 230 6 11 2 568 6 569 2 
408 2 667 2 224 2 125 6 754 6 486 2 213 4 229 2 63 4 39 2 759 6 10 6 717 2 
408 6 238 10 214 12 287 16 639 29 472 4 369 10 245 26 665 6 341 4 749 8 79 2 526 2 688 16 224 6 159 8 250 10 379 8 253 16 197 2 607 2 674 6 302 10 657 4 29 10 585 2 566 2 659 8 407 2 704 4 
142 4 713 6 
398 2 
308 2 661 2 238 2 365 2 184 2 214 2 287 2 472 2 639 6 445 2 245 4 369 4 688 2 250 2 195 2 379 2 253 2 674 2 163 2 302 2 29 2 204 2 234 2 
210 2 44 6 402 2 250 4 238 4 135 4 253 8 214 5 287 8 639 14 302 4 245 12 399 6 540 4 29 4 704 2 688 8 
625 2 500 2 347 2 592 2 640 2 
68 2 55 2 290 2 398 2 374 2 16 2 344 2 300 2 87 2 736 2 
439 2 550 2 56 2 747 2 100 2 247 2 752 2 18 2 451 2 602 2 689 2 298 2 107 2 558 2 455 4 23 2 198 2 654 2 655 2 27 2 561 2 699 4 406 2 306 2 705 2 209 2 408 4 409 2 261 2 622 2 474 2 522 2 41 2 523 2 79 2 223 2 627 2 224 4 670 2 161 4 728 2 677 4 333 2 89 2 
408 4 238 2 287 4 214 3 243 8 639 7 245 6 688 4 321 6 224 4 297 2 250 2 253 4 349 4 302 2 29 2 
276 2 194 2 100 2 
235 2 376 2 263 2 512 22 442 2 126 2 444 2 609 2 38 2 746 2 716 10 317 2 705 2 587 2 
390 3 0 2 283 2 286 2 682 2 95 2 394 4 495 2 395 16 185 1 596 1 97 4 498 2 8 1 9 2 189 2 293 2 101 2 17 2 103 2 503 1 104 4 20 2 692 2 21 4 693 2 605 2 24 4 199 2 200 2 109 2 304 3 110 2 707 2 208 2 408 32 33 2 212 2 309 2 710 2 112 2 620 2 113 2 515 2 114 2 115 2 517 3 36 2 216 2 414 1 118 1 623 2 218 4 42 5 318 2 222 2 121 3 626 2 320 2 122 2 224 34 322 2 419 24 628 2 226 2 629 2 326 2 533 2 46 24 425 16 426 2 729 3 537 2 428 1 128 2 538 1 329 3 49 4 431 2 635 1 51 3 735 2 133 2 232 2 739 2 738 2 542 8 52 2 335 1 237 2 544 2 438 3 436 2 440 6 441 2 339 2 547 2 443 2 137 1 641 2 446 2 553 2 644 2 342 2 450 32 650 2 60 8 453 2 559 3 255 1 147 2 149 2 658 2 64 3 563 2 358 2 151 6 360 16 262 2 267 12 470 2 471 2 572 6 475 2 575 2 769 2 154 6 478 3 373 1 480 2 270 1 78 2 375 1 81 2 668 12 377 2 669 32 378 1 581 2 671 2 772 16 274 2 167 1 278 8 775 4 679 3 386 2 389 2 680 2 
473 2 
224 2 305 2 
617 2 224 4 687 2 
588 2 511 2 285 2 638 2 242 2 312 2 593 2 314 6 597 2 291 2 119 2 598 2 479 6 525 2 750 2 272 2 144 2 420 2 45 2 582 2 85 2 164 2 384 2 583 2 148 2 562 2 131 6 172 2 
618 1 468 2 603 2 418 2 
603 2 496 2 
100 2 203 2 15 2 536 2 
371 2 100 2 334 2 203 2 15 2 536 2 
603 2 341 2 100 2 251 2 203 2 367 2 
409 2 774 2 
709 2 341 2 100 2 203 2 
323 2 727 2 
615 2 319 2 
152 2 417 2 
410 2 157 2 
509 2 615 2 157 2 
519 2 615 2 157 2 
363 2 615 2 157 2 
190 2 615 2 157 2 
543 6 577 2 100 2 83 2 405 2 203 2 614 2 
289 2 34 2 
603 2 341 2 100 2 251 2 334 2 203 2 400 2 
603 2 251 2 182 2 
483 2 603 2 251 2 
656 2 289 2 468 2 
603 2 251 2 
289 2 368 2 
603 2 718 2 
764 2 289 2 468 2 
43 2 
573 2 468 2 157 2 
468 2 323 2 303 2 
468 2 615 2 279 2 
289 2 684 2 
610 2 603 2 
579 2 152 2 
301 2 157 2 
323 2 94 2 
351 2 615 2 
289 2 397 2 
310 2 615 2 
323 2 205 2 
606 2 157 2 
359 2 152 2 
764 2 289 2 468 2 90 2 
764 2 289 2 664 2 468 2 90 2 
289 2 468 2 249 2 
289 2 468 2 30 2 
413 2 166 2 186 2 599 2 
130 2 361 2 430 2 691 4 695 2 
731 2 468 2 
222 2 
176 2 682 2 394 4 97 4 685 4 187 2 293 2 102 2 17 2 104 4 692 2 693 2 24 2 199 2 200 2 109 2 408 26 212 2 710 2 309 2 113 6 114 2 36 2 216 2 218 4 220 2 722 2 221 2 626 2 224 26 226 2 628 2 629 2 326 2 533 2 425 6 47 2 48 2 428 4 733 2 49 2 431 2 635 2 133 2 542 2 52 4 740 2 237 2 440 4 441 2 339 2 547 2 553 2 643 2 342 2 450 6 452 2 753 2 650 2 560 2 151 6 262 2 364 2 265 4 267 8 471 2 572 2 154 2 270 2 668 8 669 4 274 2 775 2 586 2 386 2 680 2 
176 2 682 2 394 4 97 4 685 4 293 2 102 2 17 2 104 4 692 2 693 2 24 2 199 2 200 2 109 2 408 26 212 2 710 2 309 2 113 6 114 2 36 2 216 2 218 4 220 2 722 2 626 2 224 26 226 2 628 2 629 2 326 2 533 2 425 6 47 2 48 2 428 2 733 2 49 2 431 2 635 2 133 2 738 2 542 2 52 4 740 2 237 2 440 6 441 2 339 2 547 2 446 2 553 2 643 2 342 2 450 6 452 2 753 2 650 2 560 2 761 2 151 6 262 2 366 2 265 4 267 8 471 2 572 2 154 2 270 2 668 8 669 4 581 2 382 2 274 2 775 2 586 2 386 2 680 2 
331 2 
642 2 541 2 
236 2 391 2 590 2 336 2 53 4 338 8 394 2 96 2 138 2 683 4 97 2 744 2 553 2 447 2 294 2 648 4 141 2 649 2 601 2 651 2 401 2 196 2 692 2 504 4 254 2 696 4 146 4 256 2 201 2 460 2 700 2 702 2 464 2 568 6 307 4 619 2 151 4 408 6 362 2 469 10 212 2 711 2 571 2 153 2 767 2 216 2 72 2 271 2 666 6 224 12 160 2 630 4 534 2 230 6 327 2 634 8 170 2 431 2 133 2 680 2 
236 2 391 2 336 2 53 4 338 8 394 2 96 2 138 2 97 2 683 4 744 2 553 2 447 2 645 2 294 2 648 4 141 2 649 2 601 2 651 2 401 2 196 2 692 2 504 4 254 2 696 4 146 4 256 2 460 2 700 2 702 2 464 2 568 8 307 4 619 2 151 4 408 6 260 2 362 2 469 10 212 2 711 2 571 2 153 2 767 2 216 2 72 2 271 2 666 6 224 12 160 2 531 2 630 4 534 2 230 8 327 2 634 8 170 2 431 2 133 2 173 4 680 2 
141 2 619 2 666 2 649 2 651 2 711 2 196 2 630 2 153 2 504 2 534 2 146 2 683 4 230 2 460 2 170 2 648 4 464 2 
236 2 391 2 590 2 53 4 338 4 394 2 96 2 138 2 683 4 97 2 744 2 553 2 447 2 294 2 648 4 141 2 649 2 601 2 651 2 401 2 196 2 692 2 504 4 254 2 696 4 146 4 256 2 201 2 460 2 700 2 702 2 464 2 568 6 307 4 619 2 151 4 408 6 260 2 362 2 469 6 212 2 711 2 571 2 153 2 767 2 216 2 72 2 271 2 666 4 224 12 160 2 630 4 534 2 230 6 327 2 634 4 170 2 431 2 133 2 680 2 
236 2 391 2 590 2 53 4 338 4 394 2 96 2 138 2 683 4 97 2 744 2 553 2 447 2 294 2 648 4 141 2 649 2 601 2 651 2 401 2 196 2 692 2 504 4 254 2 696 4 146 4 256 2 201 2 460 2 700 2 702 2 464 2 569 2 568 6 307 4 619 2 151 4 408 6 362 2 469 6 212 2 711 2 571 2 153 2 767 2 216 2 72 2 271 2 666 6 224 12 160 2 630 4 534 2 230 4 327 2 634 4 170 2 431 2 133 2 680 2 
236 2 391 2 590 2 336 2 53 4 338 4 394 2 96 2 138 2 683 4 97 2 744 2 553 2 447 2 294 2 648 4 141 2 649 2 601 2 651 2 401 2 196 2 692 2 504 4 254 2 696 4 146 4 256 2 201 2 460 2 700 2 702 2 464 2 568 6 307 4 619 2 151 4 408 6 362 2 469 6 212 2 711 2 571 2 153 2 767 2 216 2 72 2 271 2 666 6 224 12 160 2 630 4 534 2 230 6 327 2 634 8 170 2 431 2 133 2 680 2 
236 2 391 2 590 2 336 2 53 4 338 8 394 2 96 2 138 2 683 4 97 2 744 2 553 2 447 2 294 2 648 4 141 2 649 2 601 2 651 2 401 2 196 2 692 2 504 4 254 2 696 4 146 4 256 2 201 2 460 2 700 2 702 2 464 2 568 8 569 2 307 4 619 2 151 4 408 6 362 2 469 10 212 2 711 2 571 2 153 2 767 2 216 2 72 2 271 2 666 8 224 12 160 2 630 4 534 2 230 6 327 2 634 8 170 2 431 2 133 2 680 2 
236 2 391 2 590 2 336 2 53 4 338 8 394 2 96 2 138 2 683 4 97 2 744 2 553 2 447 2 294 2 648 4 141 2 649 2 601 2 651 2 401 2 196 2 692 2 504 4 254 2 696 4 146 4 256 2 201 2 460 2 700 2 702 2 464 2 568 6 307 4 619 2 151 4 408 6 362 2 469 10 212 2 711 2 571 2 153 2 767 2 216 2 72 2 271 2 666 6 224 12 160 2 630 4 534 2 230 6 327 2 634 8 170 2 431 2 133 2 680 2 
391 2 179 2 392 1 2 1 394 4 7 1 17 2 601 2 401 2 196 2 22 6 24 2 199 2 26 2 200 2 201 2 31 1 207 2 617 6 619 2 408 24 212 2 412 2 36 2 216 2 37 1 218 4 626 2 224 46 628 2 630 4 632 2 425 6 48 4 230 4 634 2 431 2 49 2 50 10 233 2 236 2 237 2 53 6 435 2 240 6 440 6 54 4 446 2 447 2 448 2 450 8 246 2 648 4 649 2 651 2 254 2 256 4 460 2 464 2 463 2 259 2 262 2 469 2 69 2 266 8 267 4 471 2 662 1 663 6 473 6 72 4 476 2 268 2 271 2 666 8 484 2 668 4 273 1 669 2 672 6 491 6 680 2 682 2 96 2 97 4 683 4 685 4 686 2 293 2 294 4 102 2 295 1 104 4 106 6 692 2 504 4 696 4 505 2 697 6 700 2 109 2 305 6 702 2 111 2 307 8 708 6 710 2 711 2 113 6 315 2 719 2 123 6 124 2 530 6 324 2 534 2 535 2 327 2 539 2 733 2 133 2 738 2 542 2 740 2 339 12 547 2 743 2 138 2 551 2 744 2 553 2 342 2 748 4 140 6 555 2 141 2 556 2 146 4 756 2 763 7 565 2 569 4 568 12 570 6 151 6 362 2 571 2 153 2 765 6 767 2 572 2 574 7 154 2 160 2 380 2 168 2 169 1 170 2 775 2 386 2 
391 2 179 2 682 2 394 4 96 2 683 4 97 4 686 2 685 4 293 2 294 4 102 2 17 2 601 2 104 4 106 6 401 2 196 2 692 2 22 6 504 4 24 4 505 2 696 4 697 6 199 2 26 2 200 2 201 2 109 2 700 2 702 2 305 6 111 2 207 2 617 6 708 6 307 8 619 2 408 26 212 2 412 2 710 2 711 2 113 6 36 2 216 2 315 2 218 4 719 2 626 2 123 6 124 2 224 48 530 6 628 2 324 2 630 4 632 2 534 2 535 2 425 6 48 4 539 2 327 2 230 8 634 6 733 2 49 4 431 2 50 10 133 2 233 2 738 2 542 2 52 2 236 2 740 2 336 4 237 2 435 2 53 6 240 6 54 4 440 6 339 12 547 2 743 2 138 2 551 2 744 2 446 2 553 2 447 2 448 2 342 2 748 4 140 6 450 8 246 2 343 2 648 4 555 2 141 2 649 2 556 2 651 2 254 2 146 4 756 2 256 4 460 2 565 2 463 2 568 12 464 2 570 6 259 2 151 6 262 2 362 2 469 2 69 2 571 2 765 6 266 8 153 2 267 8 767 2 471 2 572 2 473 6 663 6 72 4 476 2 268 2 154 2 156 2 271 2 666 8 484 2 160 2 668 8 669 2 380 2 672 6 168 2 170 2 775 4 491 6 386 2 680 2 
391 2 179 2 682 2 394 4 96 2 683 4 97 4 686 2 685 4 293 2 294 4 102 2 17 2 601 2 104 4 106 6 401 2 196 2 692 2 22 6 504 4 24 4 505 2 696 4 697 6 199 2 26 2 200 2 201 2 109 2 700 2 702 2 305 6 111 2 207 2 617 6 708 6 307 8 619 2 408 26 212 2 412 2 710 2 711 2 113 6 36 2 216 2 315 2 218 4 719 2 626 2 123 6 124 2 224 48 530 6 628 2 324 2 630 4 632 2 534 2 535 2 425 6 48 4 539 2 327 2 230 8 634 6 733 2 49 4 431 2 50 10 133 2 233 2 738 2 542 2 52 2 236 2 740 2 336 4 237 2 435 2 53 6 240 6 54 4 338 4 440 6 339 12 547 2 743 2 138 2 551 2 744 2 446 2 553 2 447 2 448 2 342 2 748 4 140 6 450 8 246 2 343 2 648 4 555 2 141 2 649 2 556 2 651 2 254 2 146 4 756 2 256 4 460 2 565 2 463 2 568 12 464 2 570 6 259 2 151 6 262 2 362 2 469 6 69 2 571 2 765 6 266 8 153 2 267 8 767 2 471 2 572 2 473 6 663 6 72 4 476 2 268 2 154 2 156 2 271 2 666 8 484 2 160 2 668 8 669 2 380 2 672 6 168 2 170 2 775 4 491 6 386 2 680 2 
175 6 391 2 178 2 179 2 394 4 396 6 17 2 601 2 19 6 401 2 196 2 22 12 24 4 404 2 199 2 26 2 200 2 201 2 207 2 617 12 619 2 408 24 411 2 212 2 412 2 36 2 216 2 218 4 626 2 224 52 628 2 630 4 632 2 425 8 48 4 230 10 634 6 231 2 49 4 431 2 50 8 233 2 52 2 236 2 237 2 53 6 435 2 240 6 440 6 54 4 446 2 447 2 448 2 450 12 246 2 648 4 649 2 651 2 254 2 256 4 460 2 464 2 463 2 259 2 260 2 262 2 469 6 266 8 267 10 471 2 663 6 473 12 72 4 476 2 75 2 268 2 271 2 666 10 484 2 485 2 668 10 669 4 672 6 491 12 680 2 682 2 96 2 97 4 683 4 686 2 685 6 99 6 293 2 294 4 102 2 296 6 104 4 106 12 692 2 504 4 696 4 505 2 697 6 506 2 507 6 700 2 109 2 701 6 702 2 305 12 111 2 307 8 708 6 710 2 711 2 113 8 313 2 315 2 719 2 123 6 124 2 530 6 324 2 534 2 535 2 327 2 539 2 733 2 133 2 738 2 542 4 740 4 336 4 338 4 339 10 547 2 743 2 138 2 551 2 744 2 553 2 342 2 748 4 140 6 343 2 555 2 141 2 556 2 557 6 146 4 756 2 565 2 568 16 569 2 570 6 151 6 362 2 571 2 153 2 765 6 767 2 572 4 768 6 154 4 156 2 160 2 380 2 168 2 170 2 775 4 386 2 
307 2 236 2 391 2 619 2 336 2 362 2 469 4 53 2 711 2 571 2 338 4 153 2 767 2 683 2 744 2 271 2 648 2 141 2 666 6 649 2 224 4 601 2 401 2 196 2 504 4 696 2 146 4 256 2 327 2 201 2 230 6 634 6 700 2 568 4 464 2 
391 2 682 2 4 2 394 4 683 2 97 4 685 4 293 2 102 2 17 2 601 2 104 4 401 2 196 2 692 2 504 4 694 2 696 2 199 2 200 2 201 2 109 2 700 2 307 2 619 2 408 24 212 2 710 2 620 2 711 2 113 6 36 2 216 2 218 4 222 2 626 2 224 28 425 6 426 2 48 2 327 2 230 6 732 3 429 2 634 6 733 2 431 2 50 2 133 2 738 2 236 2 336 2 237 2 53 2 440 6 339 4 547 2 138 2 744 2 446 2 553 2 342 2 450 8 648 2 141 2 649 2 345 2 146 4 256 2 658 2 568 4 464 2 151 6 262 2 362 2 469 2 69 2 571 2 153 2 767 2 471 2 572 3 154 3 271 2 666 6 669 3 275 2 386 2 680 2 
601 2 327 2 388 2 
601 2 327 2 388 2 
682 2 394 4 288 2 97 4 683 2 6 2 293 2 294 4 102 2 17 2 601 4 104 4 105 2 401 2 196 2 692 2 504 4 24 4 505 2 696 2 697 2 199 2 200 2 109 2 702 2 307 4 408 16 212 2 710 2 113 2 36 2 216 2 218 4 720 2 626 2 724 2 225 4 224 24 628 4 725 2 630 4 534 2 425 2 48 6 428 2 327 6 230 12 634 6 733 2 49 4 431 2 734 2 50 2 133 2 737 2 233 2 738 2 336 4 237 2 53 4 437 2 54 2 440 6 338 4 339 4 547 2 446 2 553 2 748 2 450 2 648 2 649 2 653 2 254 2 560 4 457 2 146 4 256 4 66 2 464 4 568 16 569 4 151 6 260 4 262 2 469 6 267 4 767 2 471 2 72 2 476 2 370 2 372 2 481 4 666 12 160 2 668 4 669 2 487 2 170 2 775 4 388 2 91 2 386 2 777 2 680 2 
724 2 408 2 224 4 532 2 653 2 339 2 546 2 697 2 686 2 460 2 448 2 50 2 748 2 720 2 541 2 269 2 680 2 
682 2 394 4 288 2 97 4 683 2 6 2 293 2 294 4 102 2 17 2 601 4 104 4 105 2 401 2 196 2 692 2 504 4 24 4 505 2 696 2 697 2 199 2 200 2 109 2 702 2 307 4 408 16 212 2 710 2 113 2 36 2 216 2 715 2 624 2 218 4 219 2 720 2 626 2 724 2 225 4 224 24 628 4 725 2 630 4 534 2 425 2 48 6 428 1 327 6 230 12 634 6 733 2 49 4 431 2 133 2 737 2 233 2 738 2 336 4 237 2 53 4 437 2 54 2 440 6 338 4 339 2 547 2 446 2 553 2 447 2 450 2 648 2 649 2 652 2 653 2 254 2 560 4 457 2 146 4 256 4 66 4 464 4 568 16 569 4 151 6 260 4 262 2 469 6 267 4 767 2 471 2 72 4 476 2 370 2 481 4 666 12 160 2 668 4 669 4 487 2 170 2 171 2 775 4 388 2 386 2 680 2 
682 2 394 4 288 2 97 4 683 2 6 2 293 2 294 4 102 2 17 2 601 4 104 4 105 2 401 2 196 2 692 2 504 4 24 4 505 2 696 2 697 2 199 2 200 2 109 2 702 2 307 4 408 16 212 2 710 2 113 2 516 2 36 2 216 2 218 4 720 2 723 2 626 2 724 2 225 4 224 24 628 4 725 2 630 4 423 2 534 2 425 2 48 6 428 1 327 6 230 12 634 6 733 2 49 4 431 2 50 2 133 2 737 2 233 2 738 2 336 4 237 2 53 4 437 2 54 2 440 6 338 4 339 4 547 2 446 2 553 2 447 2 748 2 450 2 648 2 649 2 653 2 254 2 560 4 457 2 146 4 256 4 66 2 464 4 568 16 569 4 151 6 260 4 262 2 469 6 267 4 767 2 471 2 72 4 476 2 73 2 370 2 481 4 666 12 160 2 668 4 669 2 487 2 489 2 170 2 775 4 388 2 386 2 680 2 
174 12 176 2 177 2 178 2 1 2 181 4 183 2 3 2 4 2 394 4 5 2 595 6 399 6 12 2 191 16 13 2 14 4 192 2 17 2 193 16 600 2 604 12 403 2 25 4 404 2 199 2 26 2 200 2 202 4 29 2 206 2 616 2 408 24 411 2 212 2 35 2 621 12 214 4 215 2 36 2 216 2 415 2 40 2 218 4 220 2 626 2 224 32 628 4 421 10 631 2 424 4 47 12 425 14 633 2 48 2 428 2 231 2 431 2 635 2 636 16 432 2 637 2 434 2 433 12 237 2 238 2 440 6 639 8 643 2 446 2 245 6 57 4 450 22 646 4 647 14 58 2 452 2 59 2 248 2 250 2 252 10 253 4 62 2 257 2 65 2 467 2 466 12 259 2 262 2 70 3 267 22 471 2 71 4 75 2 270 2 77 2 80 2 485 2 82 2 668 22 669 16 84 2 275 2 488 2 88 2 490 2 678 12 92 4 680 2 281 12 492 2 284 2 682 2 93 2 494 4 287 4 98 2 97 4 685 12 293 2 501 2 502 4 688 4 104 4 692 2 694 2 302 2 506 2 508 2 109 2 510 24 111 2 710 2 513 2 113 14 311 10 712 6 518 2 315 2 117 2 316 2 721 2 527 4 722 2 120 2 528 2 324 2 325 2 127 2 539 2 732 2 330 2 332 2 733 2 132 14 540 4 133 2 738 2 542 18 740 46 134 2 741 2 742 2 545 2 339 2 136 2 548 2 547 2 552 2 553 2 340 2 554 2 342 2 139 2 753 2 143 3 345 2 145 2 346 12 755 2 756 2 757 2 352 2 760 1 353 2 150 2 354 2 762 16 564 2 356 2 567 4 151 6 572 16 576 2 154 16 155 2 158 2 379 4 771 4 773 2 162 2 383 10 776 2 586 2 387 10 386 2 
158 2 80 2 740 6 408 2 432 2 224 2 669 2 421 4 252 2 35 2 493 2 113 2 70 2 425 2 572 2 685 2 352 2 353 2 342 2 154 2 501 2 450 2 564 2 387 2 
158 2 80 2 740 6 408 2 432 2 224 2 669 2 421 4 252 2 35 2 493 2 113 2 70 2 425 2 572 2 685 2 352 2 353 2 342 2 154 2 501 2 450 2 564 2 387 2 
158 2 80 2 740 6 408 2 432 2 224 2 669 2 421 4 252 2 35 2 493 2 113 2 70 2 425 2 572 2 685 2 352 2 353 2 342 2 154 2 501 2 450 2 564 2 387 2 
408 4 360 2 238 2 264 2 287 2 395 2 639 6 497 2 245 4 499 4 74 2 665 2 292 2 342 2 154 3 450 2 751 2 688 2 224 10 299 4 690 4 580 2 250 2 669 3 227 3 253 2 673 3 608 3 675 2 108 2 427 4 129 2 302 2 676 6 353 2 758 2 29 2 613 2 659 4 32 4 
238 2 287 2 395 2 639 4 497 2 245 4 499 4 292 2 342 2 450 2 751 2 688 2 299 4 250 2 690 4 253 2 608 2 108 2 302 2 758 2 353 2 29 2 613 2 659 4 566 2 32 4 408 4 360 2 264 2 214 2 74 2 665 2 154 2 224 10 669 2 580 2 227 2 379 2 673 2 675 2 427 4 129 2 676 6 
238 2 287 2 395 2 639 4 497 2 245 4 499 4 292 2 342 2 450 2 751 2 688 2 299 4 250 2 690 4 253 2 608 2 108 2 302 2 758 2 353 2 29 2 613 2 659 4 566 2 32 4 408 4 360 2 264 2 214 2 74 2 665 2 154 2 224 10 669 2 580 2 227 2 379 2 673 2 675 2 427 4 129 2 676 6 
238 2 287 2 395 2 639 4 497 2 245 4 499 4 292 2 342 2 450 2 751 2 688 2 299 4 250 2 690 4 253 2 608 2 108 2 302 2 758 2 353 2 29 2 613 2 659 4 566 2 32 4 408 4 360 2 264 2 214 2 74 2 665 2 154 2 224 10 669 2 580 2 227 2 379 2 673 2 675 2 427 4 129 2 676 6 
238 2 287 2 395 2 639 4 497 2 245 4 499 4 292 2 342 2 450 2 751 2 688 2 299 4 250 2 690 4 253 2 608 2 108 2 302 2 758 2 353 2 29 2 613 2 659 4 566 4 32 4 408 4 360 2 264 2 214 4 74 2 665 2 154 2 224 10 669 2 580 2 227 2 379 4 673 2 675 2 427 4 129 2 676 6 
589 2 241 2 766 2 348 2 381 2 47 2 280 2 
730 2 589 2 681 2 239 2 258 2 490 2 
408 8 282 2 211 2 514 2 640 1 116 2 76 2 477 2 578 2 625 1 224 10 726 2 106 2 228 2 456 1 86 2 165 2 328 1 611 1 277 2 612 2 385 2 133 2 355 2 357 2 465 2 
209 2 408 5 238 6 287 6 214 5 243 2 639 15 594 2 521 2 245 12 188 2 665 2 399 4 688 6 224 5 321 4 689 2 250 6 379 3 253 6 755 2 349 2 350 2 302 6 540 2 29 6 659 4 566 2 706 1 567 2 467 2 
408 1 529 2 224 1 67 1 660 2 690 2 422 7 549 2 520 2 427 2 217 2 28 2 462 2 461 2 524 4 703 2 482 2 32 2 
529 2 660 2 690 2 422 6 549 2 520 2 427 2 217 4 28 2 462 4 461 4 703 2 524 4 482 2 32 2 
408 1 529 2 224 1 67 1 660 2 690 2 422 10 549 2 520 6 427 2 217 8 28 2 462 8 461 8 703 8 524 4 482 2 32 2 
529 2 660 2 690 2 422 2 549 2 427 2 217 2 28 2 462 2 461 2 524 2 482 2 32 2 
180 2 393 2 440 4 446 2 244 1 293 2 449 2 454 2 104 2 199 2 459 2 408 6 36 2 218 2 416 1 224 6 668 2 738 2 
408 6 224 6 591 2 454 2 104 2 668 2 180 2 440 2 36 2 199 2 428 2 459 2 293 2 449 2 218 2 
408 6 224 6 454 2 104 2 668 2 337 2 180 2 440 2 36 2 199 2 428 2 459 2 293 2 449 2 218 2 
408 6 224 6 454 2 104 2 668 2 337 2 180 2 440 4 36 2 199 2 446 2 459 2 293 2 449 2 218 2 738 2 
458 2 

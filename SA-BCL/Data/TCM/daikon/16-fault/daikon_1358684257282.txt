#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 489 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 652 187 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException (626,716) (626,716) (626,716) (626,716) 620 680 187 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException (626,716) (626,716) 620 680 187 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:eq(JJ)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24075 | return null
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_57()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ProglangType:baseIsScalar()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 4209 | return null
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([S[S)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_15()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:relate_var()V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(F[F)Z
daikon.Quant:subsetOf([B[I)Z
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Debug:logDetail()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_134()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([I)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_53()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_88()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.InvMap:InvMap()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eq(II)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:union([I[I)[I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:subsetOf([D[D)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:pow(II)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | CONDITION | 25988 | if (x) -> if (!x)
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:Initializer()Ljtb.syntaxtree.Initializer;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 5998 | = null
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ProglangType:isArray()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:min([I)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Ppt:Ppt()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ModBitTracker:num_samples()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Debug:logOn()Z
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.Invariant:justified()Z
daikon.PptSlice2:arity()I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_ntk()I
daikon.Quant:subsetOf([D[F)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONDITION | 4095 | if (x) -> if (!x)
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:lexGT([I[I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3_5()Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3R_51()Z
daikon.ModBitTracker:split(I)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName:hashCode()I
daikon.Quant:lexGTE([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.Invariant:getConfidence()D
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaCharStream:readChar()C
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern:intern([D)[D
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaCharStream:getEndColumn()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ValueTuple:size()I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:slice([III)[I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptSlice0:arity()I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:lte(II)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:max([I)I
daikon.ProglangType:isIntegral()Z
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_13()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:isReverse([I[I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Invariant:logDetail()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:eltsEqual([II)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | STATEMENT | 19526 | stmt -> ;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_49()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:logOn()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:eltsLT([II)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:eltwiseLT([I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.RootNode:RootNode()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 2 798 4 457 2 417 2 738 2 363 2 647 2 301 2 782 2 204 2 66 2 309 2 687 2 686 2 11 2 242 2 376 2 348 2 215 2 577 6 451 2 515 2 670 4 
798 12 759 2 457 4 242 8 738 5 550 4 229 6 300 2 647 4 348 8 965 4 215 8 577 14 842 6 66 4 750 2 687 4 
79 4 893 6 518 4 115 2 804 4 807 2 175 62 781 10 494 2 177 2 555 2 811 4 903 4 153 4 304 2 6 2 39 8 561 4 185 2 597 4 690 4 530 2 243 2 762 2 49 2 347 4 665 4 191 10 574 4 884 2 538 4 133 2 511 14 449 2 858 2 793 2 99 2 355 2 356 2 413 2 
167 2 209 2 71 2 861 2 409 2 447 2 771 2 855 2 604 2 276 2 
546 2 416 2 606 2 64 2 616 4 177 2 749 2 813 2 429 2 127 2 372 2 373 4 240 2 438 2 505 2 73 2 245 2 568 2 377 2 508 2 509 2 132 2 575 2 251 2 633 2 254 2 455 2 777 2 144 4 833 2 146 2 394 2 648 2 39 2 845 2 723 4 597 2 724 2 907 2 960 2 661 2 91 2 347 4 164 4 
168 18 798 48 457 16 736 2 144 4 295 4 738 22 550 4 926 2 229 6 647 16 301 2 151 6 616 4 617 2 204 4 400 2 842 6 66 16 234 4 687 16 502 4 242 32 439 6 662 6 348 32 963 2 350 4 248 2 965 4 215 32 385 6 577 53 948 2 635 4 514 6 23 4 888 8 670 6 
185 2 893 2 39 2 
26 2 846 2 845 2 222 10 896 2 129 2 566 2 62 2 612 2 51 22 421 2 92 2 879 2 253 2 
649 4 365 2 796 2 616 2 546 2 261 2 144 2 540 2 358 2 
221 2 45 2 12 6 779 2 459 2 461 2 961 2 493 6 877 2 526 2 844 6 
279 4 360 2 144 2 80 2 84 6 924 6 200 2 768 2 477 2 616 2 482 6 718 4 275 6 
168 8 798 26 457 10 737 2 144 6 419 4 738 12 926 2 301 4 647 10 425 8 616 6 204 6 234 6 66 10 687 10 69 2 759 4 242 16 439 8 940 4 508 2 348 16 131 8 700 2 215 16 577 28 386 2 142 2 670 10 
75 4 313 6 
71 2 
46 2 
616 2 703 2 
535 2 616 4 587 2 
733 1 605 1 485 2 224 2 2 2 225 2 490 16 614 2 492 16 744 2 616 34 368 4 121 2 370 2 123 2 124 4 752 2 622 2 238 2 755 2 10 6 868 1 758 2 761 2 872 2 504 2 874 2 763 1 244 1 246 2 880 3 628 2 19 6 383 2 630 2 139 4 512 6 775 4 25 3 516 8 892 2 28 3 637 24 144 32 145 1 643 2 264 3 148 2 34 2 35 1 522 2 523 2 270 2 273 3 654 2 657 2 156 8 658 2 41 24 528 2 529 2 404 2 278 4 280 6 405 1 912 2 787 2 406 2 50 2 163 2 533 2 664 3 286 3 667 2 55 2 412 2 795 2 672 2 542 3 58 3 545 2 920 2 802 1 928 3 423 2 426 1 682 2 427 1 180 4 65 2 428 2 431 32 311 2 435 2 562 2 436 8 186 2 694 3 72 2 570 4 822 32 824 1 943 2 192 1 576 2 446 2 947 1 321 2 322 2 704 2 324 2 581 2 195 2 456 2 583 4 585 2 586 2 834 2 82 3 588 2 955 2 711 2 334 2 713 2 336 2 715 2 958 2 340 2 467 2 88 2 849 2 472 2 725 16 93 16 95 5 966 2 729 1 353 2 731 2 968 1 100 2 218 2 103 2 969 12 358 2 105 2 219 2 
0 2 735 18 609 2 608 106 486 8 488 2 227 32 228 2 364 10 743 4 745 22 122 2 753 10 371 2 756 2 374 2 760 40 871 32 870 32 624 4 14 2 16 2 15 4 876 2 247 2 627 32 766 42 769 2 882 106 382 2 250 2 885 2 21 2 136 18 513 4 138 2 889 32 143 2 891 2 776 2 517 2 639 2 895 2 31 2 32 2 397 2 36 4 152 2 650 12 38 2 398 18 525 2 272 2 401 4 659 6 910 4 531 2 47 2 536 14 666 2 408 12 52 32 56 2 54 2 794 2 57 2 548 2 171 2 551 2 800 4 803 2 420 2 679 2 805 2 303 22 806 2 809 2 931 32 684 32 433 32 434 2 563 2 936 2 689 2 188 32 818 2 318 8 569 2 571 2 941 2 444 18 453 2 826 24 194 2 829 2 950 2 196 2 582 2 707 4 458 2 198 2 835 12 86 32 199 8 839 8 464 14 206 2 596 2 341 2 466 12 470 22 345 2 474 18 346 2 853 2 210 2 349 2 478 2 854 32 728 18 97 2 481 12 217 106 730 2 104 2 
480 2 87 2 344 2 916 1 578 2 39 2 940 2 621 2 
344 2 764 2 621 2 
524 2 344 2 621 2 
722 2 193 2 784 2 
344 2 621 2 
193 2 852 2 
344 2 274 2 
722 2 193 2 183 2 
722 2 591 2 214 2 
722 2 911 2 843 2 
722 2 945 2 710 2 
381 2 722 2 315 2 
193 2 634 2 
886 2 344 2 
942 2 214 2 
843 2 475 2 
710 2 339 2 
381 2 362 2 
543 2 193 2 
381 2 655 2 
710 2 699 2 
843 2 644 2 
214 2 902 2 
722 2 193 2 183 2 116 2 
722 2 471 2 193 2 183 2 116 2 
722 2 450 2 193 2 
722 2 418 2 193 2 
391 2 675 2 432 2 827 2 
107 2 503 4 897 2 875 2 646 2 161 2 48 2 162 2 51 6 663 2 537 2 367 2 838 4 271 2 306 2 527 2 8 2 934 2 
722 2 249 2 
480 2 39 2 396 2 613 2 
480 2 361 2 578 2 39 2 396 2 613 2 
480 2 344 2 39 2 632 2 940 2 621 2 
701 2 505 2 
480 2 39 2 696 2 940 2 
495 2 710 2 
381 2 894 2 
214 2 932 2 
843 2 579 2 
708 2 
381 2 42 2 843 2 
381 2 557 2 843 2 
381 2 584 2 843 2 
293 2 269 2 957 6 39 2 312 2 913 6 480 2 354 2 
593 2 193 2 
722 2 319 2 344 2 
29 2 344 2 
528 2 
485 2 739 2 226 2 616 26 370 2 124 2 752 2 622 2 238 2 10 2 758 2 873 2 244 2 246 2 19 2 20 2 383 2 139 2 512 6 775 2 516 2 892 2 636 2 260 2 144 26 145 2 148 2 900 2 522 2 523 2 657 2 158 4 403 2 280 4 278 4 787 2 50 2 163 6 55 2 673 2 545 2 424 2 180 4 431 6 186 2 72 2 570 4 442 2 822 4 573 2 943 2 322 2 704 2 324 2 456 2 583 4 834 2 588 2 953 2 711 2 334 2 337 4 336 2 840 2 467 4 725 6 212 2 731 2 100 2 102 2 103 2 358 2 969 8 105 2 
485 2 739 2 226 2 744 2 616 26 370 2 124 2 752 2 622 2 238 2 9 2 10 2 758 2 873 2 244 2 246 2 19 2 20 2 383 2 630 2 139 2 512 6 775 2 516 2 892 2 260 2 144 26 145 2 148 2 900 2 522 2 523 2 657 2 158 4 403 2 280 6 278 4 787 2 50 2 163 6 55 2 673 2 545 2 173 2 424 2 180 4 431 6 186 2 72 2 570 4 442 2 822 4 573 2 943 2 448 2 322 2 704 2 324 2 456 2 583 4 834 2 588 2 711 2 334 2 337 4 336 2 840 2 467 4 725 6 212 2 966 2 731 2 100 2 103 2 358 2 969 8 105 2 
18 2 
443 2 933 2 
221 2 239 2 13 2 640 2 437 4 779 2 262 2 317 2 611 2 601 2 378 2 962 4 602 2 493 2 410 2 556 2 414 2 844 2 
221 4 110 2 611 2 799 2 493 4 930 2 929 2 616 12 747 4 556 2 180 2 685 2 748 2 181 4 752 2 622 2 866 2 128 2 239 2 13 2 437 4 12 6 817 2 938 6 695 2 317 2 378 2 570 2 943 2 512 4 773 4 774 2 704 2 324 2 831 4 640 2 779 4 144 6 262 2 330 2 462 4 522 2 653 2 783 2 904 2 841 2 844 6 469 2 45 2 601 2 961 2 787 2 726 2 962 4 914 2 602 4 94 2 410 2 166 2 414 2 
221 4 110 2 611 2 799 2 493 6 930 2 929 2 616 12 747 4 556 2 180 2 685 2 748 2 181 4 752 2 622 2 866 2 128 2 239 2 13 2 437 4 12 6 817 2 938 6 695 2 317 2 378 2 570 2 943 2 512 4 773 4 774 2 704 2 324 2 831 4 640 2 779 4 144 6 262 2 461 2 330 2 462 4 522 2 653 2 783 2 904 2 841 2 844 4 469 2 45 2 601 2 787 2 726 2 962 4 914 2 602 4 94 2 410 2 166 2 414 2 
221 4 110 2 611 2 799 2 493 6 930 2 929 2 616 12 747 4 556 2 180 2 685 2 748 2 181 4 752 2 622 2 866 2 128 2 239 2 13 2 437 4 12 6 817 2 938 6 695 2 317 2 378 2 570 2 877 2 943 2 512 4 773 4 774 2 704 2 324 2 831 4 640 2 779 4 144 6 262 2 330 2 462 8 522 2 653 2 783 2 904 2 841 2 844 6 469 2 45 2 601 2 787 2 726 2 962 4 914 2 602 4 94 2 410 2 166 2 414 2 
221 4 110 2 611 2 799 2 493 8 930 2 929 2 616 12 747 4 556 2 180 2 685 2 748 2 181 4 752 2 622 2 866 2 128 2 239 2 13 2 437 4 12 8 817 2 938 10 695 2 317 2 570 2 378 2 877 2 943 2 512 4 773 8 774 2 704 2 324 2 831 4 640 2 779 4 144 6 262 2 461 2 330 2 462 8 522 2 653 2 783 2 904 2 841 2 844 6 469 2 45 2 601 2 787 2 726 2 962 4 914 2 602 4 94 2 410 2 166 2 414 2 
221 4 110 2 611 2 799 2 493 6 930 2 929 2 616 12 747 4 556 2 180 2 685 2 748 2 181 4 752 2 622 2 866 2 128 2 239 2 13 2 437 4 12 6 817 2 938 10 695 2 317 2 378 2 570 2 877 2 943 2 512 4 773 8 774 2 704 2 324 2 831 4 640 2 779 4 144 6 262 2 330 2 462 8 522 2 653 2 783 2 904 2 841 2 844 6 469 2 45 2 601 2 787 2 726 2 962 4 914 2 602 4 94 2 410 2 166 2 414 2 
734 6 221 4 1 2 485 2 223 2 226 2 744 2 493 8 742 2 747 4 748 2 752 2 10 2 239 2 12 12 13 2 17 2 19 2 770 2 512 6 774 2 775 2 255 2 516 2 260 2 779 4 262 2 522 2 523 12 783 2 44 1 280 6 278 4 45 4 46 6 786 2 282 6 787 2 50 2 532 4 53 1 55 2 288 6 541 6 797 2 547 1 799 2 299 2 556 2 812 6 308 1 314 2 817 2 316 2 317 2 72 2 570 4 822 2 322 2 324 2 325 6 831 8 583 4 330 2 587 6 329 2 81 2 834 2 588 2 334 2 836 6 840 4 844 4 847 1 851 6 601 2 94 2 602 4 603 6 856 6 100 2 101 2 103 2 358 2 109 2 110 4 611 2 616 46 369 1 370 2 124 2 622 2 866 2 867 8 128 2 869 7 378 2 383 2 384 2 630 2 139 2 890 2 892 2 389 2 640 2 144 24 645 6 148 2 395 1 149 2 651 7 653 2 904 2 657 2 402 2 157 6 158 4 403 2 908 2 163 6 914 2 410 2 166 2 414 2 671 2 918 1 677 2 923 10 929 2 930 4 174 6 178 2 179 2 180 4 685 2 181 6 430 2 431 8 437 4 938 2 693 2 695 2 943 2 946 2 452 4 703 6 704 2 949 2 706 2 461 4 462 2 205 2 719 1 469 2 959 2 726 2 725 6 962 4 969 4 
734 6 221 4 109 2 1 2 485 2 110 4 223 2 611 2 226 2 742 2 493 8 744 2 616 48 747 4 748 2 370 2 124 4 752 2 622 2 866 2 867 8 10 2 128 2 239 2 13 2 12 12 17 2 378 2 877 4 19 2 770 2 384 2 383 2 630 2 631 2 139 4 512 6 774 2 890 2 255 2 775 4 516 2 389 2 892 2 260 2 640 2 779 4 144 26 262 2 645 6 148 2 149 2 522 2 523 12 653 2 783 2 904 2 657 2 402 2 157 6 158 4 403 2 45 4 278 4 280 6 908 2 46 6 786 2 282 6 787 2 532 4 50 2 163 6 914 2 410 2 55 2 166 2 288 6 414 2 541 6 671 2 797 2 677 2 923 10 799 2 299 2 174 6 930 4 929 2 178 2 179 2 556 2 180 4 812 6 685 2 181 6 430 2 431 8 314 2 437 4 817 2 938 2 693 2 316 2 695 2 72 2 317 2 570 4 822 2 943 2 946 2 452 4 703 6 322 2 949 2 704 2 324 2 325 6 831 8 706 2 583 4 81 2 329 2 587 6 330 2 834 2 588 2 462 6 836 6 334 2 201 2 840 4 205 2 844 8 467 2 959 2 469 2 851 6 601 2 725 6 726 2 962 4 602 4 94 2 603 6 856 6 101 2 100 2 103 2 358 2 969 8 
734 6 221 4 109 2 1 2 485 2 110 4 223 2 611 2 226 2 742 2 493 8 744 2 616 48 747 4 748 2 370 2 124 4 752 2 622 2 866 2 867 8 10 2 128 2 239 2 13 2 12 12 17 2 378 2 877 4 19 2 770 2 384 2 383 2 630 2 631 2 139 4 512 6 774 2 773 4 890 2 255 2 775 4 516 2 389 2 892 2 260 2 640 2 779 4 144 26 262 2 645 6 148 2 149 2 522 2 523 12 653 2 783 2 904 2 657 2 402 2 157 6 158 4 403 2 45 4 278 4 280 6 908 2 46 6 786 2 282 6 787 2 532 4 50 2 163 6 914 2 410 2 55 2 166 2 288 6 414 2 541 6 671 2 797 2 677 2 923 10 799 2 299 2 174 6 930 4 929 2 178 2 179 2 556 2 180 4 812 6 685 2 181 6 430 2 431 8 314 2 437 4 817 2 938 6 693 2 316 2 695 2 72 2 317 2 570 4 822 2 943 2 946 2 452 4 703 6 322 2 949 2 704 2 324 2 325 6 831 8 706 2 583 4 81 2 329 2 587 6 330 2 834 2 588 2 462 6 836 6 334 2 201 2 840 4 205 2 844 8 467 2 959 2 469 2 851 6 601 2 725 6 726 2 962 4 602 4 94 2 603 6 856 6 101 2 100 2 103 2 358 2 969 8 
734 12 221 4 484 2 1 2 485 2 223 2 226 4 744 2 493 10 742 2 747 4 748 2 496 6 752 2 10 4 239 2 757 2 12 16 13 2 17 2 507 6 19 4 770 2 512 6 773 4 774 2 775 4 255 2 516 4 30 6 260 2 779 4 262 2 268 2 522 2 523 10 783 2 280 6 278 4 45 4 46 12 786 2 282 6 787 2 50 2 532 4 790 2 55 2 288 6 541 6 294 6 797 2 799 2 299 2 556 2 812 6 314 2 817 2 316 2 317 2 72 2 570 4 822 4 322 2 324 2 325 12 831 8 583 4 330 2 587 12 329 2 81 2 834 2 588 2 334 2 836 6 840 4 844 10 342 2 851 6 601 2 94 2 602 4 603 6 856 12 98 2 100 2 101 2 103 2 358 2 109 2 110 4 611 2 616 52 370 2 124 4 622 2 866 2 867 8 128 2 378 2 379 6 877 4 383 2 384 2 630 2 631 2 139 4 890 2 892 2 389 2 640 2 144 24 645 6 148 2 149 2 150 6 653 2 904 2 657 2 402 2 157 6 158 6 403 2 908 2 163 8 914 2 410 2 166 2 414 2 671 2 415 2 170 2 676 6 677 2 923 8 929 2 930 4 174 6 178 2 179 2 180 4 685 2 181 6 430 2 431 12 437 4 938 6 693 2 695 2 943 2 946 2 452 4 703 12 704 2 949 2 461 2 462 6 956 6 201 2 205 2 467 2 468 6 469 2 959 2 961 2 726 2 725 8 962 4 969 10 
221 4 831 2 640 2 779 4 611 2 799 2 462 6 493 6 616 4 747 2 653 2 748 2 181 2 904 2 844 6 866 2 128 2 239 2 469 2 12 4 45 2 437 2 817 2 938 4 317 2 726 2 378 2 962 2 877 2 94 2 410 2 774 2 773 4 166 2 414 2 
221 4 611 2 493 6 744 2 616 28 747 2 748 2 370 2 752 2 622 2 866 2 128 2 10 3 239 2 12 4 378 2 877 2 19 3 383 2 630 2 512 6 137 2 774 2 892 2 260 2 640 2 779 4 144 24 148 2 899 2 522 2 523 4 653 2 904 2 657 2 40 2 528 2 158 4 403 2 45 2 278 4 280 6 912 2 787 2 50 2 163 6 410 2 55 2 166 2 414 2 799 2 923 2 180 4 558 2 181 2 431 8 935 2 437 2 817 2 938 2 72 2 317 2 570 4 822 3 943 2 322 2 704 2 324 2 831 2 706 2 583 4 585 2 330 2 834 2 588 2 462 6 334 2 840 2 844 6 469 2 726 2 725 6 962 2 94 2 352 3 100 2 103 2 358 2 219 2 
221 4 110 2 611 2 799 2 493 6 930 2 929 2 616 12 747 4 556 2 180 2 685 2 748 2 181 4 752 2 622 2 866 2 128 2 239 2 13 2 437 4 12 6 817 2 938 10 695 2 317 2 378 2 570 2 877 2 943 2 512 4 773 8 774 2 704 2 324 2 831 4 640 2 779 4 144 6 262 2 330 2 462 8 522 2 653 2 783 2 904 2 841 2 844 6 469 2 45 2 601 2 787 2 726 2 962 4 914 2 602 4 94 2 410 2 166 2 414 2 
221 4 110 2 919 2 611 2 799 2 4 2 493 6 930 2 929 2 616 12 747 4 556 2 180 2 685 2 748 2 181 4 752 2 622 2 866 2 128 2 239 2 13 2 437 4 12 8 817 2 938 10 695 2 317 2 570 2 378 2 877 2 943 2 76 4 512 4 704 2 773 8 774 2 324 2 831 4 640 2 144 6 779 4 262 2 330 2 462 8 522 2 653 2 783 2 904 2 844 8 469 2 45 2 601 2 961 2 787 2 962 4 914 2 602 4 94 2 410 2 166 2 414 2 
905 2 94 2 799 2 
905 2 94 2 799 2 
221 4 110 2 485 4 611 2 742 2 744 2 493 12 616 24 747 2 370 2 124 4 499 2 752 2 754 2 622 2 128 2 239 2 12 16 873 4 877 4 510 2 383 2 135 2 630 2 139 4 512 6 773 4 774 2 775 4 892 2 390 2 260 2 144 16 779 4 262 2 148 2 522 2 523 4 155 2 657 2 905 2 159 2 660 2 403 2 280 6 278 4 45 4 787 2 283 2 532 2 50 2 163 2 55 2 169 2 677 2 923 2 799 6 927 2 930 4 929 2 556 2 180 4 685 2 181 4 560 2 431 2 437 2 938 6 316 2 695 2 72 2 317 4 820 2 570 4 74 2 822 2 943 2 452 2 322 2 704 2 324 2 831 4 583 4 461 4 834 2 952 4 331 4 588 2 462 6 334 2 202 2 840 6 844 12 598 2 961 4 725 2 962 2 602 4 94 4 603 2 100 2 969 4 358 2 970 2 
277 2 144 2 908 2 923 2 601 2 532 2 603 2 443 2 523 2 616 4 202 2 155 2 887 2 205 2 704 2 754 2 289 2 
221 4 110 4 485 4 611 2 742 2 744 2 493 12 862 2 616 24 747 2 370 2 124 4 752 2 754 2 622 2 128 2 239 2 12 16 873 4 877 4 510 2 383 2 135 2 630 2 139 4 512 6 773 4 774 2 775 4 892 2 260 2 144 16 779 4 262 2 148 2 522 2 523 2 783 2 155 2 657 2 905 2 159 4 660 2 403 2 280 6 278 4 45 4 787 2 283 2 50 2 163 2 55 2 677 2 799 6 61 2 927 2 930 4 929 2 305 2 556 2 180 4 685 2 181 4 560 2 431 2 437 2 938 6 316 2 695 2 72 2 317 4 570 4 74 2 822 4 943 2 452 2 322 2 704 2 324 2 831 4 583 4 461 4 834 2 952 4 331 4 588 2 462 6 334 2 202 2 840 6 717 2 844 12 721 2 598 2 961 4 725 2 962 2 602 4 94 4 603 2 100 2 969 4 358 2 970 2 
221 4 110 4 485 4 611 2 742 2 744 2 493 12 616 24 747 2 370 2 124 4 863 2 752 2 754 2 622 2 128 2 239 2 12 16 873 4 877 4 510 2 383 2 135 2 630 2 139 4 512 6 773 4 774 2 775 4 892 2 260 2 144 16 779 4 641 2 262 2 393 2 148 2 522 2 523 4 783 2 155 2 657 2 905 2 159 2 660 2 403 2 280 6 278 4 45 4 787 2 283 2 532 2 50 2 163 2 55 2 677 2 923 2 799 6 927 2 930 4 929 2 556 2 180 4 685 2 181 4 560 2 431 2 437 2 938 6 316 2 695 2 72 2 317 4 570 4 74 2 822 2 943 2 452 2 322 2 704 2 324 2 327 2 831 4 583 4 461 4 951 2 834 2 952 4 331 4 588 2 462 6 334 2 202 2 840 6 844 12 598 2 961 4 725 2 962 2 602 4 94 4 603 2 100 2 969 4 358 2 970 2 
489 2 
144 2 263 2 898 3 265 4 226 6 230 2 616 2 5 2 233 1 619 2 338 2 431 2 594 2 720 2 158 2 10 3 625 2 725 2 788 2 163 2 822 3 19 3 323 2 103 2 387 2 
144 2 263 2 898 2 265 4 226 6 230 2 616 2 5 2 619 2 338 2 431 2 594 2 720 2 158 2 10 2 625 2 725 2 788 2 163 2 822 2 19 2 323 2 103 2 387 2 
144 2 263 2 898 2 265 4 226 6 230 2 616 2 5 2 619 2 338 2 431 2 594 2 720 2 158 2 10 2 625 2 725 2 788 2 163 2 822 2 19 2 323 2 103 2 387 2 
220 2 798 4 860 4 296 4 172 4 492 2 616 10 498 2 125 6 234 2 66 2 431 2 500 3 687 2 865 3 10 3 242 2 439 4 939 4 625 2 822 3 577 5 772 2 140 2 454 2 258 3 457 2 144 4 332 2 647 2 837 4 901 2 465 2 850 2 285 2 93 2 348 2 215 2 287 2 103 2 
220 2 168 2 798 4 860 4 296 4 738 2 172 4 926 2 492 2 616 10 498 2 125 6 234 2 66 2 431 2 500 2 687 2 865 2 10 2 242 2 439 4 939 4 625 2 822 2 577 4 772 2 140 2 454 2 258 2 457 2 144 4 332 2 647 2 837 4 901 2 465 2 850 2 285 2 93 2 348 2 215 2 287 2 103 2 
220 2 168 2 798 4 860 4 296 4 738 2 172 4 926 2 492 2 616 10 498 2 125 6 234 2 66 2 431 2 500 2 687 2 865 2 10 2 242 2 439 4 939 4 625 2 822 2 577 4 772 2 140 2 454 2 258 2 457 2 144 4 332 2 647 2 837 4 901 2 465 2 850 2 285 2 93 2 348 2 215 2 287 2 103 2 
220 2 168 2 798 4 860 4 296 4 738 2 172 4 926 2 492 2 616 10 498 2 125 6 234 2 66 2 431 2 500 2 687 2 865 2 10 2 242 2 439 4 939 4 625 2 822 2 577 4 772 2 140 2 454 2 258 2 457 2 144 4 332 2 647 2 837 4 901 2 465 2 850 2 285 2 93 2 348 2 215 2 287 2 103 2 
220 2 168 4 798 4 860 4 296 4 738 4 172 4 926 4 492 2 616 10 498 2 125 6 234 2 66 2 431 2 500 2 687 2 865 2 10 2 242 2 439 4 939 4 625 2 822 2 577 4 772 2 140 2 454 2 258 2 457 2 144 4 332 2 647 2 837 4 901 2 465 2 850 2 285 2 93 2 348 2 215 2 287 2 103 2 
681 2 281 2 709 2 668 2 298 2 595 2 
623 2 573 2 778 2 77 2 925 2 298 2 669 2 
734 2 108 2 638 2 674 2 144 8 197 1 83 2 520 2 111 2 519 2 616 10 235 1 7 2 751 2 785 2 848 2 565 2 692 2 90 2 534 2 572 2 943 2 449 1 357 1 413 1 388 2 
168 3 798 12 457 6 144 6 738 4 926 2 229 4 647 6 118 2 616 6 617 1 813 2 66 6 234 2 67 2 687 6 207 2 502 2 70 2 242 6 439 4 348 6 965 2 629 2 575 2 351 2 96 2 215 6 385 4 577 15 888 2 
343 2 860 2 144 1 296 2 33 2 130 4 63 2 823 2 712 2 837 2 616 1 883 2 683 7 915 2 216 2 815 2 290 1 828 2 
343 4 860 2 296 2 33 2 130 4 63 2 823 2 712 4 837 2 883 4 683 6 915 2 216 2 815 2 828 2 
343 8 860 2 144 1 296 2 33 2 130 4 63 2 823 2 712 8 837 2 616 1 883 8 683 10 915 8 216 6 815 2 290 1 828 2 
343 2 860 2 296 2 33 2 130 2 63 2 823 2 712 2 837 2 883 2 683 2 815 2 828 2 
483 2 487 4 610 4 113 8 740 8 741 2 3 10 491 1 744 28 366 4 615 4 231 2 616 78 232 2 618 4 119 4 497 4 236 24 620 2 126 4 864 10 237 4 501 32 241 4 878 4 767 6 252 2 630 26 141 4 24 4 256 4 892 6 27 4 259 24 144 70 147 11 267 8 37 6 652 2 399 2 154 6 906 16 43 4 160 4 280 102 278 36 284 2 789 2 407 10 539 8 791 4 165 2 792 4 55 6 917 4 292 4 544 2 59 2 549 4 921 4 678 4 922 4 60 2 801 16 297 4 302 4 680 2 553 14 808 16 559 24 182 8 310 2 68 10 184 2 688 2 816 4 937 4 187 2 189 4 697 4 440 4 567 30 441 10 698 4 821 2 190 4 944 4 825 4 702 2 78 4 326 4 830 4 832 8 583 44 460 4 954 4 333 2 463 4 590 16 714 10 592 6 473 4 599 4 727 2 476 2 479 8 213 10 100 2 732 4 106 8 
291 2 549 2 921 2 922 2 610 2 3 4 744 8 680 2 231 2 808 12 616 24 232 2 620 2 236 6 68 4 864 2 184 2 688 2 816 2 937 2 187 2 189 2 567 6 626 6 767 2 878 2 320 2 630 8 702 2 22 2 24 2 78 2 892 2 583 10 144 22 460 2 147 2 954 2 267 4 37 2 154 2 716 2 656 2 278 10 280 34 208 2 473 2 727 2 964 2 407 4 411 2 55 2 100 2 732 2 
892 2 187 2 278 2 583 2 280 6 144 8 267 2 567 2 626 2 744 2 680 2 808 2 320 2 616 8 630 2 716 2 411 2 702 2 22 2 55 2 620 2 100 2 
549 2 607 2 922 2 112 2 114 2 117 2 3 4 422 2 744 6 552 2 680 2 554 4 176 2 808 36 231 2 810 2 616 46 746 2 232 2 120 2 307 2 814 2 620 2 236 6 864 2 68 4 184 2 688 2 816 2 187 2 564 2 375 2 189 2 819 2 506 6 441 2 380 2 878 2 765 2 767 6 881 2 445 2 134 4 630 6 702 2 24 2 78 2 705 2 257 2 892 2 580 2 392 4 583 20 144 44 328 2 642 2 460 2 780 2 147 2 954 2 521 2 589 2 266 2 85 2 333 2 37 2 335 4 714 2 652 2 154 2 203 2 656 2 89 2 278 20 280 48 208 2 473 2 909 2 600 2 789 2 211 2 727 2 407 4 213 2 967 2 857 2 55 2 100 2 859 2 732 2 359 2 
691 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (83,705) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArithmeticException (657,796) 60 872 973 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 839 69 843 405 699 469 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 977 986 283 238 1 105 803 898 110 810 520 916 397 267 422 290 940 453 389 4 30 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V ERROR java.lang.ArrayIndexOutOfBoundsException 527 
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (149,541) (149,541) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 691 995 197 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 89 51 109 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 89 51 109 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 89 51 109 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 89 51 109 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_124()Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_88()Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.PptSlice0:arity()I
daikon.Quant:eltsLT([II)Z
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_3R_72()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logDetail()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3R_126()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_53()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z | CONSTANT | 23955 | 1 -> 0
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3_29()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:eq(JJ)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2590 | = null
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_89()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:BeginToken()C
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_3R_80()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_3R_148()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183341 | = null
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_118()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:lt(II)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:lte(II)Z
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hashCode()I
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ValueTuple:isMissing(I)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:jj_3_16()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3R_47()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.PptSlice1:arity()I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logOn()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:ne(II)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.diff.Node:Node()V
daikon.VarInfo:isPointer()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_2_4(I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3R_85()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3_30()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:memberOf(D[F)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_117()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2732 | = null
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3R_81()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:isPointerFileRep()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3_21()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_2_35(I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:max([I)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ProglangType:isFloat()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_60()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_125()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_69()Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:eq(FF)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:union([I[I)[I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ModBitTracker:split(I)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_61()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:slice([III)[I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.PptSlice1:num_samples()I
daikon.Quant:eltwiseEqual([I)Z | CONDITION | 174937 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern:intern([J)[J
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:subsetOf([S[S)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ProglangType:isPseudoArray()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3_10()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_36()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3_18()Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ProglangType:isScalar()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_76()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V | ASSIGN | 3964 | = null
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern:numIntArrays()I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:InvMap()V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3_12()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:concat([I[I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3_15()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_96()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_2_25(I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:memberOf(J[J)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3_35()Z
daikon.inv.Invariant:justified()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Intern:intern([I)[I
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3_28()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3R_73()Z
daikon.ModBitTracker:num_sets()I
daikon.Quant:subsetOf([J[J)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:subsetOf([D[D)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String; | RETURN | 8576 | return null
jtb.JavaParser:jj_3R_54()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Ppt:Ppt()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_115()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_13(I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3_20()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:jj_3R_62()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_19()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_27()Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_134()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression; | ASSIGN | 68700 | = null
utilMDE.MathMDE:modulus([I)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 2 951 2 554 2 143 2 587 2 481 2 293 2 247 4 652 2 
681 2 748 6 662 2 375 2 178 6 895 2 161 2 456 2 353 6 321 2 515 2 
209 6 481 2 909 6 176 2 380 6 992 4 440 6 270 2 554 2 859 2 740 4 878 2 402 2 
371 2 100 4 733 2 949 4 856 10 381 10 798 2 737 6 980 12 536 6 130 16 131 10 224 10 77 10 287 4 959 8 481 6 230 29 871 2 113 26 991 2 395 2 426 8 875 2 84 16 554 6 368 8 460 8 88 16 903 4 
83 4 705 4 
367 2 
759 2 435 2 765 2 885 2 821 2 492 2 823 2 316 2 9 2 948 2 382 4 385 4 443 2 958 2 706 2 329 2 454 2 652 2 966 2 31 2 965 2 458 2 334 2 783 2 210 2 852 2 602 4 213 2 344 2 853 2 218 2 163 2 610 4 220 2 280 2 166 2 742 2 922 2 745 2 228 2 481 4 871 2 301 2 554 4 
338 2 725 2 817 2 488 6 792 6 604 4 638 6 47 6 949 2 381 16 856 16 798 2 737 4 611 2 980 22 221 2 536 4 130 32 131 16 417 6 224 16 477 4 956 2 696 8 77 6 171 4 580 4 807 4 481 4 230 56 296 4 295 6 113 48 896 4 426 6 84 32 554 4 88 32 460 18 
680 2 979 2 458 2 
906 2 545 2 2 2 960 2 550 2 894 2 411 2 85 2 13 2 535 2 354 10 781 2 166 2 863 22 
937 2 212 2 794 2 11 2 949 2 381 2 856 2 737 2 980 2 49 2 130 2 131 2 502 2 224 2 168 2 77 4 230 6 331 2 627 2 113 4 84 2 460 2 88 2 
224 4 488 6 519 2 580 4 230 16 927 2 604 4 113 12 381 4 856 4 84 8 980 4 130 8 88 8 903 2 131 4 417 6 
680 6 433 10 92 2 244 2 522 4 973 2 245 2 943 2 492 2 734 2 978 2 979 2 496 4 643 4 610 2 612 2 474 2 132 2 198 2 864 2 138 4 327 4 552 60 424 2 589 2 837 2 872 4 677 2 236 2 964 2 655 2 840 2 458 8 657 8 185 10 60 2 148 4 
661 2 129 2 693 2 72 2 860 2 584 2 421 2 715 2 367 2 756 2 
241 4 124 2 631 2 761 3 370 3 0 2 882 1 633 2 766 2 3 2 6 16 372 5 886 1 636 1 637 4 641 1 644 2 497 2 500 2 254 2 255 16 256 2 648 2 16 32 134 3 18 32 258 2 137 2 508 2 20 2 774 2 650 2 25 1 268 1 897 2 899 2 32 2 398 2 33 2 144 4 143 2 901 2 274 2 38 1 41 24 405 2 521 2 406 2 277 2 908 6 660 2 45 3 157 2 408 1 913 2 797 2 914 2 664 2 412 2 799 2 534 1 537 2 165 2 540 1 170 2 544 1 285 2 286 2 547 1 289 2 291 3 173 2 674 2 294 2 549 2 56 2 675 2 676 3 929 2 57 2 179 2 554 34 305 4 812 6 555 3 936 2 190 2 562 2 194 2 564 2 313 2 942 2 822 2 439 2 692 3 69 2 830 2 576 2 831 2 955 2 833 2 699 2 702 16 450 2 81 1 839 2 455 2 712 2 713 2 87 2 719 6 843 2 336 2 596 2 723 4 91 4 339 1 208 2 341 2 850 1 342 2 98 2 736 3 351 3 469 2 473 16 615 1 616 3 865 6 866 2 481 32 622 2 625 3 111 24 366 2 120 2 119 1 876 4 369 2 
554 2 141 2 
905 2 543 2 554 4 
800 2 
760 2 487 2 1 2 4 2 5 2 768 14 491 2 493 48 12 2 250 8 251 4 14 2 501 10 503 4 504 48 15 2 773 22 507 2 19 36 261 4 259 4 775 48 265 2 23 2 26 8 29 2 267 2 778 2 30 2 269 36 514 4 34 2 516 2 782 2 39 22 520 2 790 4 528 2 532 2 533 2 48 2 802 2 803 2 538 18 281 6 50 2 282 20 805 8 283 2 292 2 290 2 548 2 810 2 59 4 61 8 62 2 314 2 315 2 566 6 824 2 825 2 568 4 571 2 570 4 828 24 827 2 68 4 573 2 577 146 322 4 579 2 75 2 324 2 78 48 581 2 585 2 586 2 588 2 82 2 86 2 333 48 592 2 841 2 846 2 340 2 599 8 93 2 343 4 854 2 605 2 346 2 101 2 607 2 855 2 609 2 355 4 356 4 102 2 861 14 104 2 613 2 862 2 359 4 618 2 105 2 621 2 106 48 108 48 870 2 624 26 110 2 112 2 873 4 115 2 118 2 122 6 879 4 880 14 881 8 632 4 884 14 373 8 639 192 378 2 383 2 645 28 890 4 140 2 389 2 651 6 391 2 392 146 393 2 898 2 397 2 150 2 403 8 151 2 152 2 153 8 154 2 407 46 158 4 159 4 912 2 410 2 917 2 916 2 162 4 667 4 668 8 920 4 919 42 669 2 416 2 167 4 921 22 923 8 419 4 172 4 422 2 673 6 423 2 177 4 427 2 183 48 186 2 188 146 189 2 432 26 939 2 940 2 436 48 947 2 945 2 950 2 952 4 953 20 695 4 445 6 446 2 697 2 201 4 698 2 202 4 203 2 448 2 700 2 701 2 449 16 703 2 204 2 453 2 961 4 710 48 962 4 207 2 718 8 462 2 726 36 729 2 971 2 972 4 465 26 211 2 974 2 975 2 214 48 976 4 735 2 466 2 977 2 467 2 470 2 739 20 476 16 981 2 225 10 229 2 746 2 747 2 986 2 987 4 482 2 989 48 752 2 484 8 237 4 238 2 757 2 994 2 240 14 758 2 
891 2 498 2 475 2 415 1 
891 2 717 2 
27 2 891 2 628 2 835 2 458 2 707 2 100 2 
27 2 891 2 90 2 
27 2 891 2 36 2 
302 2 498 2 452 2 
27 2 891 2 
302 2 442 2 
891 2 845 2 
302 2 498 2 357 2 
444 2 379 2 498 2 
242 2 44 2 498 2 
184 2 498 2 401 2 
498 2 451 2 175 2 
527 2 
891 2 145 2 
444 2 689 2 
242 2 911 2 
184 2 272 2 
714 2 175 2 
302 2 429 2 
993 2 175 2 
479 2 184 2 
242 2 659 2 
444 2 572 2 
302 2 498 2 357 2 869 2 
486 2 302 2 498 2 357 2 869 2 
24 2 302 2 498 2 
302 2 498 2 888 2 
984 2 376 2 483 2 935 2 
665 2 835 2 458 2 771 2 
665 2 628 2 835 2 458 2 510 2 771 2 
27 2 891 2 835 2 458 2 80 2 100 2 
966 2 764 2 
835 2 458 2 524 2 100 2 
619 2 184 2 
175 2 22 2 
444 2 21 2 
242 2 107 2 
242 2 175 2 362 2 
724 2 242 2 175 2 
468 2 242 2 175 2 
242 2 720 2 175 2 
541 2 149 6 835 2 299 2 494 2 458 2 
404 2 302 2 
772 2 307 2 744 2 505 2 727 2 127 2 671 2 546 2 883 2 65 2 787 2 924 4 365 2 754 4 738 2 539 2 863 6 557 2 
498 2 685 2 
936 2 
241 4 631 4 882 2 766 2 886 2 637 8 377 2 647 2 256 2 648 2 16 4 18 6 258 2 506 2 137 2 20 2 774 2 650 2 264 2 268 4 897 2 899 2 32 2 399 2 144 4 143 2 274 2 275 2 405 2 907 2 908 2 157 2 660 2 791 2 797 2 914 2 537 2 286 2 674 2 549 2 675 2 179 2 553 2 554 26 305 4 812 6 192 2 313 2 942 2 318 4 319 2 70 2 576 2 831 2 699 2 702 6 450 2 712 2 716 4 593 2 719 2 843 2 596 6 91 8 968 2 598 2 341 2 469 2 360 2 865 4 481 26 622 2 366 2 239 2 876 4 369 2 
241 4 631 4 882 2 766 2 886 2 637 8 377 2 647 2 256 2 648 2 16 4 18 6 506 2 258 2 137 2 20 2 774 2 650 2 264 2 268 2 897 2 899 2 32 2 399 2 900 2 144 4 143 2 274 2 405 2 907 2 908 2 157 2 660 2 797 2 914 2 537 2 170 2 286 2 674 2 549 2 675 2 179 2 554 26 813 2 305 4 812 6 192 2 313 2 942 2 318 4 319 2 70 2 71 2 576 2 831 2 833 2 699 2 702 6 450 2 205 2 712 2 716 4 593 2 719 2 843 2 596 6 91 8 968 2 598 2 341 2 469 2 360 2 865 6 481 26 622 2 366 2 239 2 876 4 369 2 
887 2 
347 2 311 2 
63 2 308 4 561 2 681 4 310 10 312 2 634 2 941 2 8 2 567 2 437 2 10 2 320 4 321 4 646 2 576 2 648 2 957 2 135 4 649 2 258 2 136 2 137 2 20 2 509 2 838 2 396 2 897 2 899 2 456 2 144 2 658 2 463 2 786 2 662 2 97 4 795 8 608 2 666 2 801 2 918 2 353 6 858 2 617 2 481 6 174 2 748 6 232 4 749 2 751 2 178 6 297 2 933 2 811 4 554 12 58 2 629 2 812 4 123 8 876 2 
63 2 561 2 308 4 681 4 310 10 312 2 767 4 634 2 941 2 375 2 8 2 567 2 437 2 10 2 320 4 321 4 576 2 648 2 957 2 135 4 649 2 258 2 136 2 137 2 20 2 509 2 396 2 897 2 899 2 456 2 144 2 842 2 658 2 463 2 786 2 662 2 97 4 795 8 608 2 666 2 801 2 918 2 353 6 472 2 858 2 617 2 481 6 174 2 748 8 232 4 749 2 751 2 178 8 297 2 933 2 811 4 554 12 58 2 629 2 812 4 876 2 123 8 
63 2 308 4 681 2 136 2 786 2 312 2 634 2 174 2 748 2 232 4 751 2 567 2 608 2 320 2 666 2 918 2 353 2 321 2 
63 2 308 4 561 2 681 4 310 6 312 2 634 2 941 2 375 2 8 2 567 2 437 2 10 2 320 4 321 4 646 2 576 2 648 2 957 2 135 4 649 2 258 2 136 2 137 2 20 2 509 2 838 2 396 2 897 2 899 2 456 2 144 2 658 2 463 2 786 2 97 4 795 4 608 2 666 2 801 2 918 2 353 4 858 2 617 2 481 6 174 2 748 6 232 4 749 2 751 2 178 6 297 2 933 2 811 4 554 12 58 2 629 2 812 4 123 4 876 2 
63 2 308 4 561 2 681 4 310 6 312 2 634 2 941 2 8 2 567 2 437 2 10 2 320 4 321 4 646 2 576 2 648 2 957 2 135 4 649 2 258 2 136 2 137 2 20 2 509 2 838 2 396 2 897 2 899 2 456 2 144 2 658 2 463 2 786 2 97 4 795 4 161 2 608 2 666 2 801 2 918 2 353 6 858 2 617 2 481 6 174 2 748 4 232 4 749 2 751 2 178 6 297 2 933 2 811 4 554 12 58 2 629 2 812 4 123 4 876 2 
63 2 308 4 561 2 681 4 310 6 312 2 634 2 941 2 8 2 567 2 437 2 10 2 320 4 321 4 646 2 576 2 648 2 957 2 135 4 649 2 258 2 136 2 137 2 20 2 509 2 838 2 396 2 897 2 899 2 456 2 144 2 658 2 463 2 786 2 662 2 97 4 795 8 608 2 666 2 801 2 918 2 353 6 858 2 617 2 481 6 174 2 748 6 232 4 749 2 751 2 178 6 297 2 933 2 811 4 554 12 58 2 629 2 812 4 123 4 876 2 
63 2 308 4 561 2 681 4 310 10 312 2 634 2 941 2 8 2 567 2 437 2 10 2 320 4 321 4 646 2 576 2 648 2 957 2 135 4 649 2 258 2 136 2 137 2 20 2 509 2 838 2 396 2 897 2 899 2 456 2 144 2 658 2 463 2 786 2 662 2 97 4 795 8 161 2 608 2 666 2 801 2 918 2 353 8 858 2 617 2 481 6 174 2 748 6 232 4 749 2 751 2 178 8 297 2 933 2 811 4 554 12 58 2 629 2 812 4 123 8 876 2 
63 2 308 4 561 2 681 4 310 10 312 2 634 2 941 2 8 2 567 2 437 2 10 2 320 4 321 4 646 2 576 2 648 2 957 2 135 4 649 2 258 2 136 2 137 2 20 2 509 2 838 2 396 2 897 2 899 2 456 2 144 2 658 2 463 2 786 2 662 2 97 4 795 8 608 2 666 2 801 2 918 2 353 6 858 2 617 2 481 6 174 2 748 6 232 4 749 2 751 2 178 6 297 2 933 2 811 4 554 12 58 2 629 2 812 4 123 8 876 2 
241 4 490 6 8 2 10 2 495 2 499 6 256 2 16 2 18 8 258 2 506 2 20 2 774 2 509 2 263 2 264 4 28 2 268 1 32 2 35 2 517 2 274 2 43 2 786 2 526 6 795 2 797 2 530 1 801 2 800 6 279 6 537 2 804 2 543 6 53 6 286 12 808 2 549 2 809 8 297 2 811 4 554 46 303 2 58 2 812 6 305 4 556 6 815 4 63 2 308 4 561 2 64 1 310 2 563 2 312 2 565 2 567 2 318 4 67 2 319 2 320 4 829 1 321 4 576 2 831 2 832 2 833 2 325 6 834 2 582 2 328 6 590 1 591 2 596 6 91 4 341 2 95 1 97 6 99 2 350 2 608 2 353 8 858 2 617 2 865 6 622 2 116 2 366 2 629 2 121 6 876 4 369 2 634 2 637 4 646 2 889 2 648 2 135 8 649 2 137 2 136 2 650 2 141 6 396 2 897 2 899 2 144 4 143 2 656 2 658 2 902 7 147 2 405 2 907 2 908 2 157 2 161 4 666 2 918 2 170 2 420 6 926 1 174 2 928 2 675 2 178 12 179 2 425 2 180 1 933 4 678 6 428 1 430 6 681 4 682 10 434 6 683 1 941 2 944 7 437 2 957 2 702 6 450 2 709 2 712 2 456 4 719 2 461 2 721 2 463 4 730 4 222 2 223 2 481 24 748 4 232 4 749 2 751 2 233 2 234 2 485 2 
241 4 631 2 634 2 490 6 637 8 8 2 495 2 10 2 499 6 646 2 889 2 256 4 16 2 648 2 18 8 135 8 649 2 506 2 258 2 136 2 137 2 20 2 650 2 774 2 509 2 263 2 264 4 141 6 28 2 396 2 897 2 32 2 899 2 656 2 143 2 144 4 658 2 35 2 517 2 147 2 274 2 43 2 907 2 405 2 786 2 908 2 157 2 662 4 526 6 795 6 797 2 666 2 800 6 801 2 918 2 279 6 804 2 537 2 169 2 543 6 170 2 420 6 53 6 286 12 808 2 928 2 549 2 174 2 809 8 675 4 178 12 297 2 179 4 425 2 933 4 678 6 811 4 554 48 303 2 58 2 305 4 812 6 556 6 430 6 815 4 63 2 561 2 308 4 681 4 310 2 434 6 682 10 563 2 312 2 565 2 941 2 437 2 567 2 318 4 67 2 319 2 320 4 321 4 576 2 831 2 832 2 833 2 957 2 834 2 325 6 582 2 328 6 702 6 450 2 708 2 709 2 712 2 591 2 456 4 719 2 461 2 721 2 596 6 91 8 463 4 730 4 341 2 99 2 97 6 350 2 608 2 353 8 858 2 222 2 223 2 617 2 865 6 622 2 481 26 748 8 749 2 232 4 751 2 233 2 234 2 116 2 366 2 485 2 121 6 629 2 369 2 876 4 
241 4 631 2 634 2 490 6 637 8 8 2 495 2 10 2 499 6 646 2 889 2 256 4 16 2 648 2 18 8 135 8 649 2 506 2 258 2 136 2 137 2 20 2 650 2 774 2 509 2 263 2 264 4 141 6 28 2 396 2 897 2 32 2 899 2 656 2 143 2 144 4 658 2 35 2 517 2 147 2 274 2 43 2 907 2 405 2 786 2 908 2 157 2 662 4 526 6 795 6 797 2 666 2 800 6 801 2 918 2 279 6 804 2 537 2 169 2 543 6 170 2 420 6 53 6 286 12 808 2 928 2 174 2 549 2 809 8 675 4 178 12 297 2 179 4 425 2 933 4 678 6 811 4 554 48 303 2 58 2 305 4 812 6 556 6 430 6 815 4 63 2 561 2 308 4 681 4 434 6 682 10 310 6 563 2 312 2 565 2 941 2 437 2 567 2 318 4 67 2 319 2 320 4 321 4 576 2 831 2 832 2 833 2 957 2 834 2 325 6 582 2 328 6 702 6 450 2 708 2 709 2 712 2 591 2 456 4 719 2 461 2 721 2 596 6 91 8 463 4 730 4 341 2 99 2 97 6 350 2 608 2 353 8 858 2 222 2 223 2 617 2 865 6 622 2 481 26 748 8 749 2 232 4 751 2 233 2 234 2 116 2 366 2 485 2 121 6 629 2 369 2 123 4 876 4 
241 4 490 6 8 2 10 2 495 2 499 6 256 4 16 4 18 12 506 2 258 2 257 2 20 2 774 2 509 2 263 2 264 4 28 2 32 2 35 2 517 2 273 6 274 2 43 2 786 2 523 6 46 2 526 12 525 6 795 6 797 2 529 2 801 2 800 12 279 6 537 2 804 2 52 2 543 12 53 6 286 10 808 2 549 2 55 6 809 8 297 2 811 4 554 52 303 2 58 2 812 6 305 4 556 12 815 4 63 2 308 4 561 2 310 6 563 2 312 2 565 2 567 2 318 6 67 2 319 2 320 4 321 4 576 2 831 2 832 2 833 2 325 6 834 2 582 2 328 6 332 2 591 2 594 2 596 8 91 10 341 2 97 6 99 2 350 2 608 2 353 10 858 2 617 2 865 6 622 2 626 6 116 2 366 4 629 2 121 12 876 4 123 4 369 2 631 2 634 2 637 10 375 2 646 2 387 6 889 2 648 2 135 8 649 2 137 2 136 2 650 2 892 2 141 12 396 2 897 2 899 2 144 4 143 2 656 2 658 2 147 2 405 2 907 4 908 4 157 2 662 4 910 6 161 2 160 6 666 2 918 2 169 2 170 2 420 6 672 6 174 2 928 2 675 4 178 16 179 4 425 2 933 4 678 6 430 6 681 4 434 6 682 8 941 2 437 2 957 2 702 8 450 2 708 2 709 2 712 2 456 4 719 4 461 2 721 2 463 4 730 4 222 2 223 2 481 24 748 10 232 4 749 2 988 2 751 2 233 2 485 2 
561 2 308 2 681 4 310 4 312 2 634 2 941 2 97 2 662 2 795 6 437 2 567 2 10 2 608 2 666 2 801 2 918 2 353 6 321 4 646 2 135 2 509 2 174 2 748 6 749 2 232 2 178 4 396 2 811 2 456 2 554 4 58 2 658 2 629 2 123 4 
241 4 634 2 249 2 10 2 646 2 648 2 16 3 135 2 18 8 506 2 258 2 137 2 20 2 774 2 650 2 509 2 264 2 390 2 396 2 897 2 899 2 32 2 144 4 143 2 658 2 37 3 274 2 908 3 157 2 662 2 795 6 913 2 797 2 666 2 918 2 801 2 537 2 170 2 286 4 549 2 174 2 929 2 178 4 297 2 811 2 554 28 58 2 812 6 305 4 936 2 814 2 308 2 561 2 681 4 682 2 310 2 312 2 941 2 437 2 567 2 318 4 319 2 321 4 576 2 831 2 833 2 702 6 450 2 712 2 456 2 719 3 844 2 596 6 208 2 341 2 97 2 345 2 608 2 353 6 865 6 481 24 622 2 748 6 749 2 232 2 234 2 629 2 876 4 369 2 
388 2 437 2 509 2 
388 2 437 2 509 2 
241 4 762 2 634 4 637 4 375 4 388 2 256 4 648 2 16 2 18 2 135 4 649 2 506 2 258 2 136 2 137 2 20 2 774 2 650 2 509 4 264 6 268 2 897 2 899 2 32 2 399 4 144 4 143 2 780 4 146 2 518 2 274 2 405 4 786 2 155 2 157 2 662 4 278 2 795 6 797 2 161 4 804 2 537 2 170 2 286 4 928 2 549 2 675 4 178 16 179 4 933 4 811 2 554 24 305 4 812 6 815 2 308 2 938 2 681 4 682 2 310 6 946 2 437 6 567 2 826 2 319 2 320 4 321 4 576 2 831 2 578 2 833 2 957 2 328 2 702 2 450 2 963 2 456 4 596 2 722 2 91 4 463 2 730 2 341 2 600 4 97 4 348 2 216 2 608 2 219 2 353 12 222 2 617 2 865 6 985 2 481 16 622 2 748 12 232 2 749 2 750 2 755 2 629 2 876 4 369 2 123 4 
518 2 670 2 762 2 286 2 682 2 834 2 730 2 20 2 328 2 481 2 278 2 751 2 347 2 235 2 554 4 103 2 721 2 
241 4 762 2 634 4 637 4 375 4 8 2 388 2 256 4 648 2 16 4 135 4 18 2 649 2 506 2 258 2 136 2 137 2 20 2 774 2 650 2 509 4 264 6 897 2 899 2 32 2 399 4 144 4 143 2 780 4 146 2 518 2 274 2 405 4 786 2 157 2 662 4 278 2 795 6 797 2 161 4 804 2 537 2 170 2 286 2 928 2 549 2 675 4 178 16 179 4 933 4 811 2 554 24 305 4 812 6 815 2 308 2 938 2 681 4 310 6 437 6 567 2 826 2 319 2 320 4 574 2 321 4 576 2 831 2 578 2 833 2 957 2 79 2 328 2 702 2 450 2 963 2 456 4 596 2 722 2 91 4 463 4 341 2 600 4 97 4 603 2 216 2 608 2 353 12 222 2 614 2 617 2 865 6 985 2 481 16 622 2 868 2 748 12 232 2 749 2 750 4 755 2 629 2 876 4 369 2 123 4 
241 4 126 2 762 2 634 4 637 4 375 4 8 2 252 2 388 2 256 4 648 2 16 2 18 2 135 4 649 2 506 2 258 2 136 2 137 2 20 2 774 2 650 2 509 4 264 6 268 1 897 2 899 2 32 2 779 2 399 4 144 4 143 2 400 2 780 4 146 2 518 2 274 2 405 4 786 2 157 2 662 4 278 2 795 6 797 2 161 4 804 2 537 2 170 2 286 4 928 2 549 2 675 4 178 16 931 2 179 4 933 4 811 2 554 24 305 4 812 6 815 2 308 2 938 2 681 4 682 2 310 6 437 6 567 2 826 2 319 2 320 4 321 4 576 2 831 2 578 2 833 2 957 2 328 2 702 2 450 2 963 2 456 4 596 2 722 2 91 4 463 4 730 2 341 2 600 4 97 4 216 2 608 2 353 12 222 2 617 2 865 6 985 2 481 16 622 2 748 12 232 2 749 2 750 2 755 2 629 2 876 4 369 2 123 4 
241 4 488 6 763 2 489 2 243 2 7 2 248 2 249 2 769 4 770 8 16 11 18 18 258 2 260 2 20 2 774 2 262 2 776 2 264 2 777 2 268 2 32 2 37 2 517 2 274 2 784 2 42 2 789 2 788 2 793 8 796 2 797 2 537 2 806 3 284 2 286 2 288 2 808 2 549 2 551 6 298 2 554 28 304 2 305 4 812 6 814 2 306 4 309 2 818 8 819 2 820 2 318 10 319 2 70 8 576 2 831 2 76 2 833 2 582 2 583 6 836 2 330 2 84 4 593 2 88 4 335 2 596 12 338 4 91 14 598 2 848 2 341 2 96 2 345 2 604 4 606 2 349 2 856 2 352 2 620 8 865 6 867 6 622 2 361 6 623 2 363 2 364 2 113 6 874 4 117 2 366 8 369 2 876 4 882 2 635 2 886 2 637 14 377 2 381 2 384 2 130 4 647 2 131 2 133 2 648 2 137 2 650 2 390 2 893 2 653 1 394 2 654 2 897 2 899 2 143 2 144 4 904 2 147 2 907 14 405 2 908 11 156 2 157 2 663 6 414 2 418 2 170 2 925 2 930 6 425 2 934 4 182 2 431 2 191 2 192 2 684 4 686 2 688 2 195 2 691 2 438 2 196 2 197 2 954 8 199 2 694 2 447 2 702 12 450 2 704 8 711 2 712 2 206 2 457 2 719 11 459 2 460 4 967 2 968 2 464 2 732 2 980 4 223 2 741 6 224 2 478 2 983 2 743 6 227 2 481 22 230 8 233 2 990 2 239 2 995 2 
784 2 42 2 907 6 908 2 156 4 7 2 248 2 195 2 318 2 418 2 806 2 694 2 16 2 323 2 18 2 925 2 288 2 702 2 481 2 893 2 712 2 554 2 719 2 596 2 
784 2 42 2 907 6 908 2 156 4 7 2 248 2 195 2 318 2 418 2 806 2 694 2 16 2 323 2 18 2 925 2 288 2 702 2 481 2 893 2 712 2 554 2 719 2 596 2 
784 2 42 2 907 6 908 2 156 4 7 2 248 2 195 2 318 2 418 2 806 2 694 2 16 2 323 2 18 2 925 2 288 2 702 2 481 2 893 2 712 2 554 2 719 2 596 2 
560 2 816 2 128 2 6 2 687 4 690 4 381 2 130 2 386 4 575 3 253 2 131 2 255 2 16 3 694 2 18 2 266 6 712 2 84 2 513 2 88 2 908 3 215 3 856 2 531 4 164 3 536 2 224 2 982 2 226 2 54 2 481 4 230 6 300 2 113 4 932 2 426 4 554 10 187 4 877 2 
560 2 816 2 128 2 6 2 687 4 690 4 381 2 130 2 386 4 575 2 253 2 131 2 255 2 16 2 694 2 18 2 266 6 712 2 84 2 513 2 88 2 460 2 908 2 215 2 856 2 798 2 531 4 980 2 164 2 536 2 224 2 982 2 226 2 54 2 481 4 230 4 300 2 113 4 932 2 426 4 554 10 187 4 877 2 
560 2 816 2 128 2 6 2 687 4 690 4 381 2 130 2 386 4 575 2 253 2 131 2 255 2 16 2 694 2 18 2 266 6 712 2 84 2 513 2 88 2 460 2 908 2 215 2 856 2 798 2 531 4 980 2 164 2 536 2 224 2 982 2 226 2 54 2 481 4 230 4 300 2 113 4 932 2 426 4 554 10 187 4 877 2 
560 2 816 2 128 2 6 2 687 4 690 4 381 2 130 2 386 4 575 2 253 2 131 2 255 2 16 2 694 2 18 2 266 6 712 2 84 2 513 2 88 2 460 2 908 2 215 2 856 2 798 2 531 4 980 2 164 2 536 2 224 2 982 2 226 2 54 2 481 4 230 4 300 2 113 4 932 2 426 4 554 10 187 4 877 2 
560 2 816 2 128 2 6 2 687 4 690 4 381 2 130 2 386 4 575 2 253 2 131 2 255 2 16 2 694 2 18 2 266 6 712 2 84 2 513 2 88 2 460 4 908 2 215 2 856 2 798 4 531 4 980 4 164 2 536 2 224 2 982 2 226 2 54 2 481 4 230 4 300 2 113 4 932 2 426 4 554 10 187 4 877 2 
358 2 74 2 569 2 635 2 595 2 409 2 
358 2 125 2 511 2 480 2 679 2 70 2 731 2 
40 2 276 2 728 2 847 2 193 2 785 2 849 2 246 2 374 2 642 2 471 2 441 1 474 1 542 1 864 1 17 1 137 2 326 2 481 8 231 2 114 2 753 2 512 2 554 10 556 2 630 2 
488 4 852 2 684 2 604 2 638 4 640 2 66 2 218 2 856 6 381 6 857 2 798 2 980 4 130 6 536 2 131 6 224 6 696 2 227 2 481 6 230 16 113 12 896 2 654 2 426 4 84 6 271 2 554 6 88 6 460 2 
559 2 969 2 970 2 139 2 851 2 601 2 481 1 94 7 687 2 690 2 317 2 915 2 181 2 413 1 554 1 187 2 73 4 337 2 
559 2 969 2 970 4 139 4 851 2 601 2 94 6 687 2 690 2 317 2 915 2 181 2 187 2 73 4 337 4 
559 2 969 8 970 8 139 8 851 2 601 2 481 1 94 10 687 2 690 2 317 2 915 2 181 6 413 1 554 1 187 2 73 4 337 8 
559 2 970 2 139 2 851 2 601 2 94 2 687 2 690 2 317 2 915 2 187 2 73 2 337 2 
558 2 241 2 831 2 833 2 450 2 142 1 89 2 797 2 217 1 51 2 170 2 865 4 109 2 481 4 554 4 305 2 
241 2 558 2 51 2 797 2 865 2 554 4 481 4 89 2 109 2 450 2 305 2 831 2 
241 2 558 2 51 2 797 2 865 2 554 4 481 4 89 2 109 2 450 2 305 2 831 2 
51 2 558 2 241 2 833 2 170 2 865 4 109 2 481 4 450 2 797 2 554 4 89 2 305 2 831 2 
597 2 

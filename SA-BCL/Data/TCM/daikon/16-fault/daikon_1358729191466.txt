#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.ClassCastException 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 199 1096 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 803 781 1036 980 120 773 789 1026 829 447 949 443 1028 285 535 557 740 538 868 85 508 821 346 835 6 116 749 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 915 
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 240 184 651 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 689 874 143 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 689 874 143 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 689 874 143 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3_10()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:memberOf(I[I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_123()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:gt(II)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_12()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_4()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_29()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.PptSlice1:arity()I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_96()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_3_35()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_121()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_115()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3R_76()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:sum([D)D
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3R_77()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3_14()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfo:relate_var()V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z | CONSTANT | 1896 | 0 -> -1
daikon.Quant:eltwiseLT([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:intersection([I[I)[I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20735 | return null
jtb.JavaParser:jj_3_3()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:sameLength([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_3_16()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.ArraysMDE:max([I)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.MathMDE:negate(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_3R_50()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3R_62()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_117()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3_27()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:subsetOf([D[F)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:pow(II)I
daikon.Quant:lte(II)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.PptSlice0:arity()I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3R_49()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:lexEqual([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_75()Z
utilMDE.MathMDE:gcd(II)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([I)[I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3_1()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:eltsLT([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gte(II)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:isScalar()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 9913 | if (x) -> if (!x)
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ModBitTracker:num_vars()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:logOn()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 11746 | = null
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3R_48()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:lexLTE([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3_5()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_114()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_86()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:noDups([I)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3_28()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:min([I)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3R_97()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:slice([III)[I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaCharStream:backup(I)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.ProglangType:baseIsFloat()Z
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
jtb.JavaCharStream:ReadByte()C
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression; | ASSIGN | 83593 | = null
daikon.ValueTuple:isMissing(I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.ProglangType:baseIsIntegral()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | RETURN | 128825 | return null
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:ne(II)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.Intern:numIntArrays()I
utilMDE.MathMDE:gcd([I)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_67()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_126()Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:eltsGtIndex([I)Z | OPERATOR | 179154 | ++ -> --
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptName:isEnterPoint()Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:justified()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_122()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.Invariant:prob_and(DDD)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:eq(II)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z | STATEMENT | 30553 | stmt -> ;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_56()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:new_ppt()V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3_21()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_ntk()I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3R_120()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_61()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:getEndLine()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Assert:assertTrue(Z)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:hashCode()I
daikon.Quant:eltsGTE([II)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:readChar()C
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_124()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15105 | if (x) -> if (!x)
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_125()Z
daikon.Quant:eltsGT([II)Z
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
965 2 473 4 936 2 788 2 293 2 832 2 1020 2 207 2 485 2 
471 2 778 2 929 6 296 2 884 6 820 2 602 2 971 2 875 2 994 2 300 6 
2 6 271 6 293 2 499 2 678 4 190 2 977 2 73 4 742 6 563 6 507 2 17 2 1020 2 
845 2 158 4 846 10 293 6 7 2 1077 16 1086 30 787 4 904 4 209 8 129 4 1020 6 218 2 702 8 544 10 101 8 958 6 249 2 640 2 769 10 1025 2 707 16 833 2 489 6 708 16 877 10 344 10 579 8 1003 12 469 26 
609 6 902 4 
860 2 
1071 2 365 2 224 2 306 2 72 2 836 2 429 2 526 2 618 2 
846 4 870 6 1077 8 769 4 707 8 679 2 708 8 877 4 344 4 464 2 1003 5 904 2 1086 14 411 4 759 4 469 12 1103 6 
257 2 40 2 364 4 320 2 1009 2 206 2 754 10 849 14 52 2 326 4 559 4 91 4 560 2 818 4 1087 2 174 4 132 2 133 62 21 4 674 4 1057 8 511 4 377 2 956 2 458 6 246 2 869 2 677 2 384 2 800 4 278 4 1001 2 837 2 354 4 1033 2 466 2 468 10 528 2 587 2 156 4 
1084 2 75 2 599 2 
692 2 893 2 161 2 293 4 695 4 761 4 181 2 1057 2 511 4 23 2 378 2 832 2 249 2 193 2 775 2 315 2 530 2 592 2 46 2 266 2 723 2 537 2 541 2 1020 4 132 2 217 2 670 2 136 2 731 2 866 2 68 2 1093 2 683 2 607 2 350 2 147 2 351 2 968 2 354 2 746 2 77 4 78 2 431 2 806 2 
843 2 846 16 121 6 293 4 1077 32 897 4 165 4 171 4 787 2 1086 56 505 2 987 2 411 4 15 8 1020 4 759 4 63 4 702 16 544 6 958 4 870 6 769 16 1025 2 707 32 273 6 489 4 877 16 708 32 344 16 345 2 579 6 1003 22 281 2 253 4 195 6 153 6 469 48 1103 6 
1057 2 1087 2 458 2 
1021 10 954 2 230 2 292 2 531 2 1044 2 145 2 208 2 561 2 147 2 906 2 196 2 62 2 37 22 
0 16 434 1 810 2 691 16 293 32 438 2 978 2 10 2 562 12 697 12 698 2 567 4 19 4 828 2 995 2 20 2 303 2 706 2 186 2 188 6 463 2 308 6 578 2 710 2 581 1 194 2 313 2 585 3 35 4 714 12 841 2 470 4 1007 1 199 2 202 2 847 2 848 2 324 2 47 2 51 1 722 3 479 5 851 2 854 1 54 2 328 2 212 2 1020 30 485 2 336 2 864 1 222 2 341 3 1024 2 610 3 352 3 1031 4 879 1 353 1 745 2 614 6 885 2 363 1 621 2 624 2 896 1 233 1 753 2 370 10 1045 2 371 2 628 1 96 2 94 2 98 2 509 3 762 2 637 2 638 2 379 3 1060 6 1063 2 391 1 398 2 777 1 529 1 258 3 656 2 1073 1 938 2 1079 2 400 2 402 2 533 2 534 1 952 2 791 2 668 22 796 2 139 2 1096 2 274 1 682 2 419 2 421 2 686 2 970 2 286 2 288 2 432 2 807 22 
1027 2 
289 2 293 2 
293 4 950 2 654 2 
1 2 291 8 554 2 556 10 6 2 9 4 8 12 557 2 816 2 297 14 821 2 18 2 826 2 829 2 301 2 302 2 22 36 304 20 24 4 835 2 29 6 310 4 311 48 583 4 33 48 36 2 842 2 844 2 42 2 41 4 318 2 319 36 589 36 43 2 322 4 323 8 49 48 50 8 327 4 855 2 56 22 57 4 59 2 856 2 857 4 858 46 862 2 861 2 65 6 337 2 868 2 872 4 70 2 343 4 346 2 74 2 348 2 881 2 613 4 616 4 617 2 359 8 888 6 362 6 82 6 892 2 894 2 366 2 84 10 85 2 369 2 86 24 627 2 901 4 905 2 95 2 375 4 376 2 912 2 914 4 916 2 641 48 106 48 388 48 649 2 650 4 113 14 116 2 397 16 119 2 934 2 120 2 939 2 123 2 943 8 945 2 125 8 127 2 130 8 949 2 671 4 676 22 416 4 142 2 418 4 961 2 966 2 967 4 687 2 969 2 149 2 688 2 154 2 155 2 160 2 974 48 162 8 168 146 169 2 441 2 980 2 982 4 981 20 983 2 443 2 177 42 986 24 446 2 447 2 179 4 703 2 705 2 182 26 455 4 997 2 456 2 457 2 189 8 709 2 1002 8 1004 4 467 2 715 2 197 14 717 190 1010 48 481 2 725 2 1016 16 726 2 213 8 215 4 728 16 219 2 221 4 223 4 733 2 1026 2 734 2 1028 2 737 4 740 2 226 2 1030 2 743 2 1035 28 1036 2 229 4 497 4 749 2 1046 2 502 4 1049 2 1051 146 239 22 508 2 760 48 1056 20 763 2 513 4 768 6 515 2 1064 2 773 2 254 2 524 2 1074 2 262 4 781 2 782 48 785 2 265 2 1082 2 535 2 786 2 538 2 789 2 542 14 543 4 1090 2 793 8 794 4 270 14 795 48 547 4 799 146 275 2 549 48 803 2 280 8 1101 2 283 2 285 2 
953 2 259 2 1005 2 393 1 
953 2 615 2 
953 2 39 2 158 2 1057 2 1076 2 247 2 248 2 
953 2 39 2 550 2 
953 2 39 2 220 2 
259 2 830 2 235 2 
953 2 39 2 
830 2 140 2 
953 2 417 2 
850 2 259 2 830 2 
259 2 525 2 501 2 
259 2 1099 2 58 2 
259 2 510 2 385 2 
1000 2 172 2 259 2 
830 2 719 2 
953 2 110 2 
200 2 525 2 
237 2 58 2 
5 2 385 2 
1000 2 572 2 
955 2 830 2 
1000 2 88 2 
915 2 385 2 
58 2 815 2 
525 2 886 2 
850 2 259 2 830 2 420 2 
850 2 259 2 830 2 367 2 420 2 
259 2 830 2 357 2 
259 2 830 2 340 2 
317 2 811 2 108 2 1062 2 
38 2 690 2 1057 2 1076 2 
1069 2 38 2 690 2 1057 2 1076 2 248 2 
953 2 39 2 158 2 1057 2 1076 2 282 2 
193 2 718 2 
158 2 1057 2 1076 2 779 2 
1091 2 385 2 
1000 2 1032 2 
519 2 525 2 
11 2 58 2 
1000 2 58 2 539 2 
1000 2 58 2 680 2 
1000 2 913 2 58 2 
1000 2 973 2 58 2 
1076 2 170 6 242 6 1057 2 569 2 244 2 643 2 428 2 
30 2 830 2 
552 4 1092 2 895 2 381 2 500 2 626 2 876 2 87 2 28 2 817 2 757 2 53 2 927 4 631 2 151 2 727 2 37 6 634 2 
853 2 259 2 
398 2 
293 26 10 2 822 2 19 4 706 2 571 2 188 6 463 2 308 4 578 6 710 2 194 2 839 2 35 4 841 2 470 4 202 2 591 2 47 2 475 2 476 2 205 2 598 2 854 4 331 2 216 2 60 2 1020 26 61 2 485 2 336 2 222 2 1024 2 69 2 342 2 1031 4 614 2 79 2 361 2 622 2 83 2 370 6 371 2 89 2 373 2 96 2 907 2 909 2 98 2 762 2 638 2 1060 2 1063 2 391 2 648 4 111 2 529 2 1075 4 400 2 402 2 404 2 1081 4 1083 2 536 2 662 2 952 2 668 4 796 2 139 2 1096 2 682 8 964 2 686 2 970 2 288 8 807 6 
293 26 10 2 991 2 822 2 19 4 706 2 305 2 571 2 188 6 463 2 308 6 578 6 710 2 194 2 35 4 841 2 470 4 202 2 848 2 591 2 47 2 475 2 476 2 205 2 598 2 854 2 331 2 216 2 60 2 1020 26 61 2 485 2 336 2 222 2 1024 2 342 2 1031 4 614 2 79 2 361 2 622 2 83 2 370 6 371 2 89 2 373 2 96 2 907 2 98 2 762 2 638 2 1060 2 1063 2 391 2 648 4 111 2 115 2 529 2 656 2 1075 4 400 2 402 2 404 2 1081 4 1083 2 536 2 128 2 662 2 952 2 668 4 796 2 139 2 1096 2 682 8 964 2 686 2 970 2 288 8 807 6 
164 2 
267 2 882 2 
81 2 290 2 673 2 778 2 750 2 1023 2 570 2 1011 2 478 2 423 2 1100 2 929 2 296 2 884 2 395 2 243 4 699 2 840 4 
890 2 81 2 290 2 232 2 293 12 750 4 625 2 755 4 296 4 908 2 820 2 243 4 699 2 98 2 701 4 300 6 19 2 638 2 570 2 770 6 188 4 191 2 926 2 710 2 31 4 312 2 929 4 112 2 395 2 840 4 470 2 588 2 260 2 201 2 778 4 400 2 1011 2 1012 2 478 2 665 2 602 2 952 2 1020 6 134 2 673 2 605 2 222 2 139 2 1023 2 276 4 1098 2 347 4 423 2 1100 2 611 2 884 6 356 2 152 2 887 2 360 2 
890 2 81 2 290 2 232 2 293 12 750 4 625 2 755 4 296 4 908 2 820 2 243 4 699 2 98 2 701 4 994 2 300 6 19 2 638 2 570 2 770 6 188 4 191 2 926 2 710 2 31 4 312 2 929 6 112 2 395 2 840 4 470 2 588 2 260 2 201 2 778 4 400 2 1011 2 1012 2 478 2 665 2 952 2 1020 6 134 2 673 2 605 2 222 2 139 2 1023 2 276 4 1098 2 347 4 423 2 1100 2 611 2 884 4 356 2 152 2 887 2 360 2 
890 2 81 2 290 2 232 2 293 12 750 4 625 2 755 4 296 4 908 2 820 2 243 4 699 2 98 2 701 4 300 6 19 2 638 2 570 2 770 6 188 4 191 2 926 2 710 2 31 4 312 2 929 6 112 2 395 2 840 4 470 2 588 2 260 2 201 2 778 4 400 2 1011 2 1012 2 478 2 665 2 952 2 1020 6 134 2 673 2 605 2 222 2 139 2 1023 2 276 4 1098 2 347 8 423 2 1100 2 611 2 884 6 356 2 971 2 152 2 887 2 360 2 
890 2 81 2 290 2 232 2 293 12 750 4 625 2 755 4 296 4 908 2 820 2 243 4 699 2 98 2 701 8 300 8 994 2 19 2 638 2 570 2 770 10 188 4 191 2 926 2 710 2 31 4 312 2 929 8 112 2 395 2 840 4 470 2 588 2 260 2 201 2 778 4 400 2 1011 2 1012 2 478 2 665 2 952 2 1020 6 134 2 673 2 605 2 222 2 139 2 1023 2 276 4 1098 2 347 8 423 2 1100 2 611 2 884 6 356 2 971 2 152 2 887 2 360 2 
890 2 81 2 290 2 232 2 293 12 750 4 625 2 755 4 296 4 908 2 820 2 243 4 699 2 98 2 701 8 300 6 19 2 638 2 570 2 770 10 188 4 191 2 926 2 710 2 31 4 312 2 929 6 112 2 395 2 840 4 470 2 588 2 260 2 201 2 778 4 400 2 1011 2 1012 2 478 2 665 2 952 2 1020 6 134 2 673 2 605 2 222 2 139 2 1023 2 276 4 1098 2 347 8 423 2 1100 2 611 2 884 6 356 2 971 2 152 2 887 2 360 2 
289 6 290 2 4 1 3 8 555 2 293 46 10 2 296 4 819 1 820 4 822 2 300 12 19 4 570 2 571 2 307 6 25 2 577 2 27 7 308 6 578 6 580 2 31 8 312 2 35 4 840 4 841 2 588 2 848 2 47 2 594 2 854 1 336 2 605 2 66 2 347 2 611 2 884 4 612 6 356 2 614 2 79 4 360 2 887 2 890 2 81 2 625 2 370 6 371 2 89 2 373 2 93 6 96 2 908 2 910 2 98 2 633 2 638 2 639 10 104 2 386 4 926 2 645 2 389 1 929 8 648 4 931 2 930 4 395 2 114 6 654 6 396 2 933 2 656 2 400 2 402 2 404 2 124 1 131 2 665 2 952 2 668 2 669 2 134 2 135 6 673 2 139 2 681 2 682 4 684 6 423 2 686 2 970 2 152 2 976 2 166 2 985 6 699 2 994 4 993 7 180 2 706 12 459 6 188 6 461 2 191 4 463 2 710 2 194 2 465 6 470 4 1006 2 202 2 201 2 1011 2 1012 2 478 2 211 2 1018 1 1020 24 485 2 222 2 1023 2 1024 2 1027 6 738 2 491 1 1031 4 748 1 1041 6 232 2 750 4 234 2 755 6 243 4 1054 2 762 2 767 1 770 2 518 1 1060 2 1063 2 774 2 256 2 1070 6 260 2 778 4 1078 2 264 2 532 2 1088 6 796 2 272 2 798 6 1096 2 276 4 1098 4 1100 2 288 4 807 8 1105 2 
289 6 290 2 3 8 555 2 293 48 976 2 166 2 10 2 12 2 985 6 296 4 820 4 699 2 822 2 300 12 180 2 19 4 706 12 459 6 570 2 571 2 25 2 307 6 461 2 188 6 577 2 191 4 463 4 578 6 308 6 580 2 710 2 31 8 194 2 312 2 465 6 35 4 840 4 841 2 470 4 1006 2 588 2 201 2 202 2 848 2 47 2 1011 2 594 2 1012 2 478 2 211 2 1020 26 485 2 336 2 605 2 66 2 222 2 1023 2 1024 2 1027 6 738 2 347 6 1031 4 611 2 612 6 884 8 356 2 614 2 79 4 887 2 360 2 890 2 81 2 1041 6 232 2 750 4 625 2 234 2 370 6 755 6 371 2 89 2 373 2 93 6 96 4 908 2 910 2 1053 2 243 4 1054 2 98 2 633 2 762 2 638 2 639 10 104 2 770 2 386 4 645 2 926 2 1060 2 1063 2 930 4 931 2 648 4 929 8 774 2 395 2 654 6 114 6 396 2 933 2 256 2 1070 6 656 2 260 2 1075 2 778 4 1078 2 400 2 404 2 532 2 264 2 402 2 131 2 1088 6 665 2 669 2 668 2 952 2 134 2 135 6 673 2 796 4 139 2 272 2 798 6 1096 2 681 2 276 4 682 8 684 6 1098 4 423 2 1100 2 686 2 970 2 152 2 971 4 288 8 1105 2 807 8 
289 6 290 2 3 8 555 2 293 48 976 2 166 2 10 2 12 2 985 6 296 4 820 4 699 2 822 2 701 4 300 12 180 2 19 4 706 12 459 6 570 2 571 2 25 2 307 6 461 2 188 6 577 2 191 4 463 4 578 6 308 6 580 2 710 2 31 8 194 2 312 2 465 6 35 4 840 4 841 2 470 4 1006 2 588 2 201 2 202 2 848 2 47 2 1011 2 594 2 1012 2 478 2 211 2 1020 26 485 2 336 2 605 2 66 2 222 2 1023 2 1024 2 1027 6 738 2 347 6 1031 4 611 2 612 6 884 8 356 2 614 2 79 4 887 2 360 2 890 2 81 2 1041 6 232 2 750 4 625 2 234 2 370 6 755 6 371 2 89 2 373 2 93 6 96 4 908 2 910 2 1053 2 243 4 1054 2 98 2 633 2 762 2 638 2 639 10 104 2 770 6 386 4 645 2 926 2 1060 2 1063 2 930 4 931 2 648 4 929 8 774 2 395 2 654 6 114 6 396 2 933 2 256 2 1070 6 656 2 260 2 1075 2 778 4 1078 2 400 2 404 2 532 2 264 2 402 2 131 2 1088 6 665 2 669 2 668 2 952 2 134 2 135 6 673 2 796 4 139 2 272 2 798 6 1096 2 681 2 276 4 682 8 684 6 1098 4 423 2 1100 2 686 2 970 2 152 2 971 4 288 8 1105 2 807 8 
289 12 290 2 3 8 555 2 293 52 10 2 12 2 296 4 820 4 822 2 824 6 300 16 19 4 570 2 571 4 307 6 25 2 26 6 577 2 308 6 578 8 580 2 31 8 312 2 314 2 35 4 840 4 841 2 588 2 590 2 848 2 47 2 594 2 602 2 336 2 605 2 66 2 347 6 611 2 884 10 612 6 356 2 614 4 79 4 887 2 360 2 890 2 81 2 625 2 370 8 371 2 89 2 373 2 93 6 96 4 908 2 910 2 98 2 633 2 638 2 639 8 104 2 386 4 645 2 926 2 929 10 648 6 931 2 930 4 395 2 114 12 654 12 396 2 933 2 656 2 400 2 402 2 404 4 131 2 665 2 952 2 668 4 667 6 669 2 134 2 135 12 673 2 139 2 681 2 682 10 684 6 423 2 686 2 970 2 971 4 152 2 157 2 437 6 976 2 166 2 979 6 985 6 699 2 701 4 994 2 180 2 706 10 459 6 188 6 461 2 999 2 191 4 463 4 710 2 194 2 465 6 470 4 1006 2 716 6 202 2 201 2 1011 2 1012 2 478 2 483 6 1020 24 485 2 222 2 730 6 1023 2 1024 2 1027 12 738 2 1031 4 1041 6 232 2 498 2 750 4 234 2 755 6 1053 2 243 4 1054 2 762 2 512 2 770 6 1060 4 1063 2 774 2 256 2 1070 6 260 2 1075 2 778 4 1078 2 264 2 532 2 1080 2 1088 6 545 2 796 4 272 2 798 12 1096 2 276 4 802 6 1098 4 1100 2 288 10 807 12 1105 2 
890 2 290 2 588 2 260 2 293 4 232 2 201 2 778 4 625 2 1011 2 755 2 478 2 908 2 296 4 820 2 243 2 699 2 701 4 300 4 673 2 605 2 570 2 770 4 276 2 926 2 347 6 423 2 31 2 312 2 929 6 884 6 152 2 971 2 840 2 360 2 
290 2 293 28 10 2 444 3 296 4 820 2 699 2 822 2 300 4 19 4 706 4 460 2 570 2 188 6 308 6 578 6 710 2 31 2 312 2 194 2 35 4 840 2 841 2 470 4 588 2 201 2 202 2 848 2 47 2 1011 2 478 2 724 2 211 2 1020 24 485 2 336 2 605 2 222 2 1024 2 347 6 1031 4 884 6 356 2 614 3 79 2 360 2 890 2 232 2 625 2 370 6 755 2 1045 2 371 2 373 2 908 2 243 2 98 2 762 2 638 2 639 2 770 2 926 2 1060 3 1063 2 929 6 648 4 398 2 776 2 656 2 260 2 778 4 1079 2 400 2 402 2 784 2 952 2 668 3 673 2 139 2 1096 2 1097 2 276 2 421 2 423 2 686 2 970 2 152 2 971 2 807 8 
890 2 81 2 290 2 232 2 293 12 750 4 625 2 755 4 296 4 908 2 820 2 243 4 699 2 98 2 701 8 300 6 19 2 638 2 570 2 770 10 188 4 191 2 926 2 710 2 31 4 312 2 929 6 112 2 395 2 840 4 470 2 588 2 260 2 201 2 778 4 400 2 1011 2 1012 2 478 2 665 2 952 2 1020 6 134 2 673 2 605 2 222 2 139 2 1023 2 276 4 1098 2 347 8 423 2 1100 2 611 2 884 6 356 2 971 2 152 2 887 2 360 2 
890 2 81 2 290 2 232 2 293 12 750 4 625 2 755 4 629 2 908 2 296 4 820 2 243 4 699 2 98 2 701 8 300 8 19 2 638 2 570 2 770 10 188 4 191 2 710 2 31 4 312 2 929 6 395 2 840 4 470 2 472 2 588 2 260 2 201 2 778 4 400 2 1011 2 1012 2 478 2 660 4 665 2 602 2 952 2 1020 6 134 2 673 2 605 2 222 2 139 2 1023 2 276 4 1098 2 347 8 423 2 1100 2 611 2 884 8 356 2 971 2 152 2 887 2 360 2 
620 2 312 2 201 2 
620 2 312 2 201 2 
290 4 293 24 10 2 296 4 820 4 989 2 822 2 451 2 701 4 300 16 994 4 19 4 706 4 188 6 577 2 191 4 463 4 308 6 578 2 710 2 31 4 312 6 194 2 465 2 838 2 35 4 840 2 841 2 470 4 202 2 201 4 848 2 593 2 47 2 48 2 1011 2 1012 2 205 4 1013 2 478 2 854 2 602 4 1020 16 485 2 336 2 605 2 222 2 339 2 1024 2 873 2 347 6 1031 4 884 12 358 2 79 6 620 2 81 2 623 2 750 4 370 2 755 4 371 2 89 4 1048 4 373 2 90 2 96 4 243 2 98 2 762 2 638 2 639 2 919 2 770 6 386 2 387 2 1063 2 930 2 929 12 395 2 255 2 396 2 656 2 778 4 400 2 532 2 402 2 948 2 665 2 952 2 668 2 134 2 796 4 139 2 276 2 682 4 801 2 1098 2 686 2 970 2 284 2 971 4 152 2 805 4 288 4 807 2 
555 2 706 2 639 2 293 4 1023 2 593 2 400 2 462 2 90 2 520 2 930 2 465 2 131 2 267 2 1020 2 989 2 823 2 
290 4 293 24 10 2 296 4 820 4 989 2 822 2 451 2 701 4 300 16 994 4 19 4 706 2 573 2 188 6 577 2 191 4 463 4 308 6 578 2 710 2 31 4 312 6 194 2 465 2 838 2 35 4 840 2 841 2 470 4 202 2 201 4 848 2 593 2 47 2 48 2 1011 2 721 2 1012 2 205 4 478 2 602 4 1020 16 485 2 336 2 605 2 222 2 1024 2 873 2 347 6 349 2 1031 4 884 12 358 2 79 6 887 2 620 2 81 2 623 2 750 4 370 2 755 4 371 2 89 4 1048 4 373 2 90 2 96 4 243 2 98 2 762 2 638 2 770 6 386 2 1063 2 929 12 395 2 255 4 396 2 656 2 399 2 778 4 400 2 263 2 532 2 402 2 948 2 665 2 952 2 668 4 134 2 796 4 139 2 276 2 682 4 801 2 1098 4 686 2 970 2 284 2 971 4 152 2 805 4 288 4 807 2 
290 4 293 24 10 2 296 4 820 4 989 2 822 2 451 2 701 4 300 16 994 4 19 4 706 4 188 6 577 2 191 4 463 4 308 6 578 2 309 2 710 2 31 4 312 6 194 2 465 2 838 2 35 4 840 2 841 2 470 4 202 2 201 4 848 2 593 2 47 2 48 2 1011 2 1012 2 205 4 478 2 854 1 602 4 1020 16 485 2 336 2 605 2 222 2 732 2 1024 2 873 2 347 6 493 2 1031 4 884 12 358 2 79 6 887 2 620 2 81 2 623 2 750 4 370 2 755 4 371 2 89 4 1048 4 373 2 90 2 96 4 243 2 98 2 762 2 638 2 639 2 770 6 386 2 1063 2 930 2 929 12 395 2 255 2 655 2 396 2 656 2 778 4 400 2 532 2 402 2 948 2 665 2 952 2 668 2 134 2 796 4 139 2 276 2 682 4 801 2 1098 4 424 2 686 2 970 2 284 2 971 4 152 2 805 4 288 4 807 2 
809 2 553 2 293 64 812 2 813 2 294 2 814 2 10 2 295 2 562 4 564 2 14 4 565 2 566 4 825 1 822 2 19 4 21 2 831 4 571 44 834 2 576 2 578 14 308 39 579 6 582 2 32 2 584 2 314 2 35 18 586 14 841 4 843 4 590 2 846 4 848 9 47 2 325 2 595 2 596 4 598 2 852 2 854 1 55 2 600 2 601 1 329 2 60 2 332 2 859 2 603 2 334 2 64 2 604 2 863 2 336 2 67 2 865 8 338 16 870 6 871 8 342 2 877 4 608 2 344 4 880 4 355 2 614 19 79 2 619 1 80 2 364 2 891 2 368 2 370 14 900 12 371 6 89 2 630 4 374 4 92 12 910 2 97 2 98 2 99 2 102 6 103 2 638 2 918 1 917 2 380 10 105 1 921 2 925 2 924 10 644 2 107 2 646 6 390 2 391 2 928 2 392 1 648 12 651 2 652 2 394 2 117 2 933 2 118 22 656 9 657 3 658 3 122 4 400 2 940 2 659 2 401 2 941 2 403 2 402 2 404 18 942 4 944 2 946 10 405 2 406 2 407 2 408 2 409 2 126 2 662 2 410 2 411 4 664 3 666 2 668 19 952 2 413 2 675 3 138 2 414 2 957 2 139 2 958 4 959 2 141 1 144 4 962 2 963 8 682 22 685 2 422 14 425 2 686 2 427 2 150 14 970 2 430 2 433 4 972 2 435 2 159 2 693 2 163 2 975 2 694 2 439 2 167 2 442 14 696 2 444 2 984 2 176 2 697 4 987 2 178 12 449 4 450 2 448 12 990 2 988 14 702 4 452 2 183 2 454 2 996 2 184 2 706 2 998 2 460 2 707 8 188 6 461 2 999 2 708 8 710 2 1003 6 194 2 712 1 713 4 469 12 198 2 470 4 1008 2 474 6 202 6 475 12 720 2 1014 2 477 2 480 14 724 2 210 2 482 2 1017 4 216 2 214 3 1020 52 485 4 1022 2 729 12 486 2 222 2 1024 4 488 2 738 2 1031 20 494 2 1034 2 228 2 1037 2 744 2 1038 2 1039 2 1040 2 231 2 1042 4 498 2 751 2 1043 4 752 2 756 2 236 2 238 14 240 2 506 14 1052 2 1055 2 762 2 245 3 514 2 512 2 766 2 769 4 1059 2 516 2 517 4 250 3 251 2 1060 16 771 2 772 2 1063 2 252 2 521 2 522 1 1066 1 1068 2 256 2 529 2 776 2 261 4 1077 8 264 2 784 2 1080 2 1083 2 536 2 1086 16 540 2 790 2 792 2 269 2 545 2 546 2 1096 2 277 2 279 2 1102 2 1104 1 287 2 288 23 1105 4 807 28 808 2 
891 2 658 2 293 2 694 2 370 2 946 2 409 2 210 2 696 2 668 2 1020 2 452 2 959 2 380 4 571 6 921 2 1096 2 924 2 1060 2 578 2 648 2 653 2 614 2 807 2 
891 2 658 2 293 2 694 2 370 2 946 2 409 2 210 2 696 2 668 2 1020 2 452 2 959 2 380 4 571 6 921 2 1096 2 924 2 1060 2 578 2 648 2 653 2 614 2 807 2 
891 2 658 2 293 2 694 2 370 2 946 2 409 2 210 2 696 2 668 2 1020 2 452 2 959 2 380 4 571 6 921 2 1096 2 924 2 1060 2 578 2 648 2 653 2 614 2 807 2 
846 2 474 6 293 10 1077 2 204 2 503 2 1085 4 1086 5 210 2 562 2 758 2 697 2 214 3 484 3 668 3 1020 4 911 2 672 2 245 3 185 4 958 2 960 4 769 2 707 2 383 2 487 4 1096 2 575 2 574 2 877 2 708 2 344 2 579 4 76 2 34 2 495 4 713 2 614 3 469 4 807 2 
846 2 474 6 293 10 1077 2 204 2 503 2 1085 4 1086 4 210 2 562 2 758 2 697 2 214 2 484 2 668 2 1020 4 702 2 911 2 672 2 245 2 185 4 958 2 960 4 769 2 1025 2 707 2 383 2 487 4 1096 2 575 2 574 2 877 2 708 2 344 2 579 4 1003 2 76 2 34 2 495 4 713 2 614 2 469 4 807 2 
846 2 474 6 293 10 1077 2 204 2 503 2 1085 4 1086 4 210 2 562 2 758 2 697 2 214 2 484 2 668 2 1020 4 702 2 911 2 672 2 245 2 185 4 958 2 960 4 769 2 1025 2 707 2 383 2 487 4 1096 2 575 2 574 2 877 2 708 2 344 2 579 4 1003 2 76 2 34 2 495 4 713 2 614 2 469 4 807 2 
846 2 474 6 293 10 1077 2 204 2 503 2 1085 4 1086 4 210 2 562 2 758 2 697 2 214 2 484 2 668 2 1020 4 702 2 911 2 672 2 245 2 185 4 958 2 960 4 769 2 1025 2 707 2 383 2 487 4 1096 2 575 2 574 2 877 2 708 2 344 2 579 4 1003 2 76 2 34 2 495 4 713 2 614 2 469 4 807 2 
846 2 474 6 293 10 1077 2 204 2 503 2 1085 4 1086 4 210 2 562 2 758 2 697 2 214 2 484 2 668 2 1020 4 702 4 911 2 672 2 245 2 185 4 958 2 960 4 769 2 1025 4 707 2 383 2 487 4 1096 2 575 2 574 2 877 2 708 2 344 2 579 4 1003 4 76 2 34 2 495 4 713 2 614 2 469 4 807 2 
635 2 321 2 932 2 632 2 720 2 71 2 
889 2 453 2 937 2 475 2 298 2 932 2 16 2 
293 10 780 2 783 2 558 2 1015 2 175 2 445 1 412 2 951 1 1020 8 952 2 100 2 956 1 765 2 636 2 867 2 382 2 384 1 1029 2 736 2 878 1 647 2 741 2 426 2 804 2 114 2 
935 2 846 6 293 6 121 4 46 2 1077 6 1043 2 947 2 1086 15 505 1 411 2 15 2 1020 6 63 2 702 3 181 2 958 2 870 4 769 6 797 2 707 6 1025 2 708 6 877 6 344 6 579 4 1003 5 32 2 523 2 469 12 80 2 
827 2 268 4 436 2 293 1 203 2 960 2 1095 7 487 2 923 2 173 2 903 2 109 2 1065 2 495 2 1020 1 700 2 333 2 992 1 
827 2 268 4 436 2 203 4 960 2 1095 6 487 2 923 2 903 2 173 2 109 4 1065 4 495 2 700 2 333 2 
827 6 268 4 436 2 293 1 203 8 960 2 1095 10 487 2 923 2 903 8 173 2 109 8 1065 8 495 2 1020 1 700 2 333 2 992 1 
268 2 436 2 203 2 960 2 1095 2 487 2 923 2 173 2 109 2 1065 2 495 2 700 2 333 2 
689 2 551 4 435 4 809 4 693 4 293 70 812 4 814 4 440 4 295 4 13 16 14 10 299 10 450 4 449 11 568 2 183 4 831 12 187 16 834 4 192 16 308 64 711 4 712 2 35 28 841 2 202 6 44 4 848 10 597 4 477 2 854 2 55 6 601 2 330 4 1020 62 859 4 64 8 604 4 486 4 606 10 874 2 608 4 225 4 739 2 492 4 1031 32 880 6 883 2 747 2 619 4 1040 4 496 2 231 4 1042 6 371 6 372 2 756 4 236 4 504 2 1050 4 1058 2 105 2 925 4 517 6 646 12 772 4 521 4 394 4 1068 2 527 1 118 20 656 10 657 5 940 4 942 12 407 4 663 2 540 2 666 4 1089 4 269 4 413 4 138 4 415 2 143 2 144 4 277 6 279 4 146 10 422 16 148 2 288 16 1104 2 433 6 
689 2 693 2 1042 2 293 28 899 2 371 2 238 2 14 2 449 2 825 2 99 4 704 2 1058 2 918 4 105 4 922 2 925 2 517 6 107 4 250 6 251 4 1061 2 308 36 928 4 392 2 1066 2 394 2 712 2 35 14 1068 2 316 2 841 2 118 10 1072 2 656 8 202 2 848 8 659 4 477 2 854 2 661 2 55 2 601 2 540 2 1020 26 269 2 415 2 141 2 143 2 548 2 874 2 277 6 685 4 422 8 1031 14 880 6 227 2 150 10 288 14 433 6 619 2 
689 2 435 4 809 4 693 4 293 64 813 4 812 4 814 4 295 4 14 8 450 4 449 8 825 2 704 2 454 4 183 4 831 8 834 4 308 62 712 2 35 26 841 4 202 8 848 14 477 2 55 4 601 2 1020 56 859 4 64 4 604 4 486 4 874 2 608 4 1031 30 880 8 619 2 1040 4 231 4 1042 8 899 2 371 8 756 4 236 4 504 2 238 2 97 4 99 4 103 4 918 2 105 2 925 4 517 8 107 4 251 4 250 6 646 12 772 4 928 4 392 1 521 4 1066 2 394 4 1068 2 118 22 656 14 659 4 940 4 942 8 407 4 540 2 666 4 269 4 413 4 138 4 546 4 415 2 141 1 143 2 144 8 277 3 685 4 279 4 422 28 148 2 150 2 288 4 1104 2 433 8 
689 2 656 6 293 20 202 2 45 2 848 6 898 2 941 2 477 2 371 2 1047 2 854 2 241 2 540 2 1020 20 99 2 335 2 729 2 137 2 764 2 1058 2 415 2 1094 2 920 2 143 2 642 2 735 2 874 2 517 2 251 2 490 2 685 2 308 20 422 2 1031 8 880 2 1067 2 35 8 1068 2 288 12 433 2 841 2 
1019 2 

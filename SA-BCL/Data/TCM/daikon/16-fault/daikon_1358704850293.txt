#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.IllegalArgumentException (31,43,46,335,533,539,692) 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 299 593 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 361 132 649 425 193 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eltsGTE([II)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ProglangType:dimensions()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.PptSlice1:num_samples()I
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfo:new_ppt()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([II)I | CONDITION | 13875 | if (x) -> if (!x)
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14318 | 112 -> 0
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:lte(II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(II)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:size()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Debug:logDetail()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([I[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 123225 | = null
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | CONDITION | 21221 | if (x) -> if (!x)
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:readChar()C
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:split(I)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:lexGTE([I[I)Z
daikon.Ppt:Ppt()V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:subsetOf([B[I)Z | CONDITION | 29819 | if (x) -> if (!x)
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:lexGT([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:isIntegral()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:concat([I[I)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariants:Invariants()V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseLT([I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:gt(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:sameLength([I[I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptSlice2:arity()I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ValueTuple:size()I
daikon.Quant:noDups([I)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:lt(II)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D
daikon.ModBitTracker:num_vars()I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13963 | = null
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern:internSubsequence([JII)[J
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:min([I)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.RootNode:RootNode()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern:numIntArrays()I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:max([I)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.Node:Node()V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLT([II)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Invariant:logOn()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Debug:logOn()Z
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan; | RETURN | 1528 | return null
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.PptSlice1:arity()I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
804 2 696 2 407 2 3 2 212 2 63 2 97 2 152 2 757 2 512 2 13 2 327 2 828 2 829 4 46 2 263 2 690 6 450 2 691 2 162 2 22 2 773 2 184 4 
389 2 685 2 3 8 43 4 327 8 63 4 315 6 780 2 829 12 263 8 690 14 450 5 692 4 22 4 152 4 416 6 773 4 
454 4 599 2 143 10 93 4 634 2 431 2 486 2 189 10 284 2 66 4 462 2 151 14 680 2 382 2 35 4 223 6 641 4 290 2 351 2 105 2 386 8 534 2 495 4 300 4 567 62 715 4 473 4 858 2 84 4 398 4 240 4 716 2 834 2 241 2 334 2 694 4 654 2 863 2 836 2 405 2 
168 2 6 2 127 2 349 2 390 2 565 2 765 2 45 2 265 2 21 2 
454 4 721 2 93 2 410 2 301 2 236 2 678 2 204 2 67 2 52 2 479 2 386 2 
3 6 335 2 674 4 63 4 315 4 506 4 31 8 152 4 512 2 533 4 325 6 327 6 714 2 829 10 263 6 690 11 450 4 692 2 22 4 773 4 
761 2 805 2 1 4 332 2 674 2 658 2 843 2 506 2 423 2 
684 2 745 6 688 2 749 2 424 2 783 2 133 2 439 2 491 6 406 2 576 6 
531 6 665 2 710 2 674 2 78 2 233 6 506 2 733 6 621 4 605 4 435 2 347 6 74 2 
3 16 186 4 674 6 63 10 506 6 340 8 219 2 152 10 512 8 645 8 256 8 685 4 327 16 539 6 828 4 829 26 304 4 329 2 46 6 796 2 263 16 690 29 450 12 626 2 269 2 22 10 800 2 773 10 655 2 184 10 
595 6 80 4 
21 2 
858 2 223 2 386 2 
296 2 58 2 155 2 795 2 524 2 732 2 603 2 131 2 606 2 68 2 153 2 742 10 627 2 311 22 
563 2 
119 6 210 1 549 2 656 2 658 2 124 2 4 11 5 2 460 1 216 1 128 2 218 1 345 1 134 2 557 6 760 4 353 3 664 1 667 1 356 2 15 2 470 2 360 2 568 2 137 2 16 2 18 2 770 12 475 2 477 2 478 2 369 1 371 1 142 2 777 1 673 2 778 6 674 32 27 4 781 2 784 2 380 2 787 3 789 2 383 1 37 1 583 3 791 2 687 6 586 2 588 2 157 2 394 6 49 2 498 17 53 2 799 2 56 2 275 3 600 6 806 6 506 30 608 2 703 2 175 2 295 2 176 2 77 1 76 2 418 2 711 2 302 1 90 2 429 2 630 2 95 1 190 2 640 1 436 2 100 2 101 1 103 2 198 2 107 5 642 2 532 2 443 6 201 1 538 11 854 4 112 2 202 2 859 2 737 2 449 4 738 2 452 4 207 3 653 1 
455 2 674 2 
614 2 674 4 254 2 
273 4 276 2 744 2 409 6 7 2 220 6 222 30 660 2 173 2 414 2 611 2 174 2 511 6 468 4 708 6 12 4 513 2 515 2 180 2 566 2 305 2 85 2 622 6 365 30 366 6 86 6 427 6 771 2 670 2 575 6 719 2 430 6 433 2 636 2 249 2 317 2 316 30 146 6 487 8 29 2 488 2 489 6 320 2 786 2 36 2 849 6 104 2 728 2 793 2 324 2 852 6 110 6 857 2 330 2 113 6 399 2 115 8 594 6 652 6 402 2 401 2 164 2 501 4 55 2 272 2 
352 2 794 2 542 2 442 1 
352 2 89 2 
159 2 255 2 
810 2 352 2 785 2 618 2 466 2 386 2 304 2 
352 2 785 2 281 2 
352 2 785 2 232 2 
159 2 108 2 542 2 
352 2 785 2 
159 2 463 2 
352 2 484 2 
159 2 601 2 542 2 
695 2 712 2 542 2 
514 2 381 2 542 2 
120 2 543 2 542 2 
357 2 542 2 602 2 
159 2 343 2 
352 2 160 2 
712 2 467 2 
514 2 562 2 
237 2 120 2 
700 2 602 2 
159 2 48 2 
632 2 602 2 
138 2 120 2 
514 2 102 2 
754 2 712 2 
159 2 601 2 542 2 530 2 
159 2 388 2 601 2 542 2 530 2 
159 2 51 2 542 2 
159 2 542 2 526 2 
283 2 812 2 610 2 370 2 
396 2 
126 2 542 2 
466 2 848 2 446 2 386 2 
810 2 187 2 466 2 848 2 446 2 386 2 
352 2 785 2 262 2 466 2 386 2 304 2 
593 2 299 2 
669 2 466 2 386 2 304 2 
120 2 844 2 
0 2 602 2 
712 2 759 2 
514 2 474 2 
514 2 239 2 602 2 
514 2 702 2 602 2 
514 2 419 2 602 2 
393 2 514 2 602 2 
548 2 411 2 466 2 727 2 386 2 303 2 428 6 597 6 
703 2 
743 2 549 2 656 2 658 2 124 2 553 2 128 8 341 2 345 2 354 2 561 4 231 2 356 2 564 2 360 2 137 2 18 2 770 6 477 2 478 2 673 2 778 2 674 26 27 4 250 4 781 6 150 2 789 2 582 2 387 2 493 2 686 2 687 2 257 2 586 2 259 2 497 2 394 6 266 2 49 2 498 4 499 2 56 2 408 2 698 2 600 4 699 2 506 26 282 2 607 2 608 2 175 2 295 2 176 2 76 2 517 2 616 2 83 2 624 2 90 2 630 2 837 2 94 4 192 2 845 2 436 2 100 2 198 2 642 2 443 6 201 2 854 4 449 4 452 4 
743 2 549 2 656 2 658 2 124 2 553 2 128 8 345 2 354 2 561 4 231 2 356 2 564 2 470 1 360 2 137 2 18 2 364 2 770 6 477 2 478 2 673 2 778 2 674 26 27 4 250 4 781 6 579 2 150 2 789 2 582 2 387 2 493 2 686 2 687 2 257 2 586 2 259 2 497 2 394 6 266 2 49 2 498 4 499 2 56 2 408 2 698 2 600 5 699 2 506 26 282 2 608 2 175 2 295 2 176 2 76 2 517 2 616 2 83 2 624 2 90 2 429 1 630 2 837 2 94 4 845 2 436 2 100 2 198 2 642 2 443 6 201 2 854 4 114 2 449 4 452 4 118 2 
572 2 182 2 
581 2 
56 2 274 2 745 6 549 2 656 2 336 2 337 2 550 2 506 6 751 2 129 2 752 4 508 2 133 2 608 2 755 2 73 2 295 2 666 2 820 8 469 2 516 2 420 2 360 2 362 2 183 4 185 2 576 6 776 2 247 8 25 2 674 12 314 2 27 2 676 2 376 2 148 2 149 10 783 2 436 2 439 4 491 6 725 4 682 4 197 2 792 2 323 2 391 2 536 2 261 2 445 2 689 4 331 2 394 4 397 4 50 2 449 2 500 2 165 2 406 4 
56 2 274 2 745 6 549 2 656 2 336 2 337 2 550 2 506 6 751 2 129 2 752 4 508 2 133 2 608 2 815 4 755 2 73 2 295 2 666 2 820 8 469 2 516 2 420 2 360 2 362 2 424 2 183 4 185 2 576 8 776 2 247 8 25 2 674 12 27 2 676 2 376 2 148 2 149 10 783 2 436 2 439 4 491 8 725 4 682 4 197 2 154 2 792 2 391 2 536 2 261 2 445 2 689 4 331 2 394 4 397 4 50 2 449 2 500 2 165 2 406 4 502 2 
666 2 776 2 469 2 516 2 745 2 445 2 376 2 689 4 331 2 397 2 500 2 439 2 755 2 725 4 165 2 406 2 792 2 576 2 
56 2 274 2 745 4 549 2 656 2 336 2 337 2 550 2 506 6 751 2 129 2 752 4 508 2 608 2 755 2 73 2 295 2 666 2 820 4 469 2 516 2 420 2 360 2 362 2 424 2 183 4 185 2 576 6 776 2 247 4 25 2 674 12 314 2 27 2 676 2 376 2 148 2 149 6 783 2 436 2 439 4 491 6 725 4 682 4 197 2 792 2 323 2 391 2 536 2 261 2 445 2 689 4 331 2 394 4 397 4 50 2 449 2 500 2 165 2 406 4 
56 2 274 2 745 6 549 2 656 2 336 2 337 2 550 2 749 2 506 6 751 2 129 2 752 4 508 2 608 2 755 2 73 2 295 2 666 2 820 4 469 2 516 2 420 2 360 2 362 2 183 4 185 2 576 4 776 2 247 4 25 2 674 12 314 2 27 2 676 2 376 2 148 2 149 6 783 2 436 2 439 4 491 6 725 4 682 4 197 2 792 2 323 2 391 2 536 2 261 2 445 2 689 4 331 2 394 4 397 4 50 2 449 2 500 2 165 2 406 4 
56 2 274 2 745 6 549 2 656 2 336 2 337 2 550 2 506 6 751 2 129 2 752 4 508 2 133 2 608 2 755 2 73 2 295 2 666 2 820 8 469 2 516 2 420 2 360 2 362 2 183 4 185 2 576 6 776 2 247 4 25 2 674 12 314 2 27 2 676 2 376 2 148 2 149 6 783 2 436 2 439 4 491 6 725 4 682 4 197 2 792 2 323 2 391 2 536 2 261 2 445 2 689 4 331 2 394 4 397 4 50 2 449 2 500 2 165 2 406 4 
56 2 274 2 745 8 549 2 656 2 336 2 337 2 550 2 749 2 506 6 751 2 129 2 752 4 508 2 133 2 608 2 755 2 73 2 295 2 666 2 820 8 469 2 516 2 420 2 360 2 362 2 183 4 185 2 576 6 776 2 247 8 25 2 674 12 314 2 27 2 676 2 376 2 148 2 149 10 783 2 436 2 439 4 491 8 725 4 682 4 197 2 792 2 323 2 391 2 536 2 261 2 445 2 689 4 331 2 394 4 397 4 50 2 449 2 500 2 165 2 406 4 
56 2 274 2 745 6 549 2 656 2 336 2 337 2 550 2 506 6 751 2 129 2 752 4 508 2 133 2 608 2 755 2 73 2 295 2 666 2 820 8 469 2 516 2 420 2 360 2 362 2 183 4 185 2 576 6 776 2 247 8 25 2 674 12 314 2 27 2 676 2 376 2 148 2 149 10 783 2 436 2 439 4 491 6 725 4 682 4 197 2 792 2 323 2 391 2 536 2 261 2 445 2 689 4 331 2 394 4 397 4 50 2 449 2 500 2 165 2 406 4 
455 6 456 6 656 2 459 1 658 2 214 2 217 6 224 6 663 6 666 2 469 2 231 2 470 2 471 6 18 2 476 2 477 2 478 2 671 2 673 2 25 2 674 46 27 4 26 2 676 2 250 4 490 7 491 12 682 4 254 6 683 1 41 6 687 2 44 6 261 2 689 4 50 2 49 2 498 2 500 2 56 2 274 2 698 2 506 24 282 2 508 2 287 2 70 2 73 2 295 2 516 2 76 2 520 2 521 6 90 2 312 2 314 2 722 2 100 2 725 4 724 6 322 2 729 6 326 2 536 2 331 2 735 2 736 2 544 8 333 2 117 7 549 2 745 8 336 2 337 2 550 2 124 2 748 6 750 1 749 4 751 2 129 2 752 8 128 4 342 2 346 1 755 2 560 2 354 2 762 10 355 2 563 6 356 2 360 2 362 2 137 2 570 1 770 8 576 4 775 2 776 2 778 2 376 2 781 6 148 2 783 4 149 2 379 1 788 2 789 12 792 2 387 2 391 4 586 2 589 2 392 1 394 6 395 6 397 4 165 2 406 4 598 2 600 6 166 2 811 2 608 2 609 2 175 2 820 2 176 2 178 2 420 2 179 2 619 6 429 2 183 6 185 2 630 2 837 4 841 2 434 2 436 2 437 2 439 4 850 2 197 4 198 2 642 2 443 6 853 4 854 4 444 4 856 1 445 2 447 1 449 4 452 4 451 2 453 2 
456 6 455 6 745 8 549 2 656 2 336 2 337 2 658 2 124 2 550 2 748 6 214 2 751 2 128 8 752 8 129 2 342 2 217 6 133 4 224 6 755 2 663 6 560 2 355 2 666 2 762 10 354 2 563 6 469 2 231 2 356 2 470 2 471 6 360 2 362 2 137 2 18 2 476 2 770 8 477 2 478 2 775 2 671 2 576 8 776 2 778 2 673 2 25 2 674 48 26 2 27 4 676 2 250 4 376 2 148 2 781 6 149 2 783 4 788 2 789 12 491 12 682 4 254 6 387 2 792 2 41 6 391 4 687 2 44 6 586 2 261 2 589 2 689 4 395 6 394 6 397 4 498 2 49 2 50 2 500 2 165 2 406 4 274 2 56 2 598 2 698 2 600 6 166 2 282 2 506 26 811 2 508 2 287 2 609 2 608 2 70 2 73 2 175 4 295 2 820 6 176 4 516 2 76 2 178 2 179 2 420 2 619 6 520 2 309 2 521 6 90 2 183 6 429 2 185 2 630 2 837 4 312 2 94 2 841 2 314 2 434 2 722 2 436 2 437 2 100 2 439 4 724 6 725 4 726 2 850 2 322 2 197 4 198 2 642 4 729 6 443 6 326 2 853 4 536 2 444 4 854 4 445 2 331 2 735 2 736 2 449 4 333 2 544 8 451 2 452 4 453 2 
456 6 455 6 745 8 549 2 656 2 336 2 337 2 658 2 124 2 550 2 748 6 214 2 751 2 128 8 752 8 129 2 342 2 217 6 133 4 224 6 755 2 663 6 560 2 355 2 666 2 762 10 354 2 563 6 469 2 231 2 356 2 470 2 471 6 360 2 362 2 137 2 18 2 476 2 770 8 477 2 478 2 775 2 671 2 576 8 776 2 247 4 778 2 673 2 25 2 674 48 26 2 27 4 676 2 250 4 376 2 781 6 148 2 149 6 783 4 788 2 789 12 491 12 682 4 254 6 387 2 792 2 41 6 391 4 687 2 44 6 586 2 261 2 589 2 689 4 395 6 394 6 397 4 498 2 49 2 50 2 500 2 165 2 406 4 274 2 56 2 598 2 698 2 600 6 166 2 282 2 506 26 811 2 508 2 287 2 609 2 608 2 70 2 73 2 175 4 295 2 820 6 176 4 516 2 76 2 178 2 179 2 420 2 619 6 520 2 309 2 521 6 90 2 183 6 429 2 185 2 630 2 837 4 312 2 94 2 841 2 314 2 434 2 722 2 436 2 437 2 100 2 439 4 724 6 725 4 726 2 850 2 322 2 197 4 198 2 642 4 729 6 443 6 326 2 853 4 536 2 444 4 854 4 445 2 331 2 735 2 736 2 449 4 333 2 544 8 451 2 452 4 453 2 
455 12 456 12 457 2 656 2 658 2 214 2 217 6 224 6 225 2 662 2 663 6 666 2 469 2 231 2 470 2 471 6 18 2 476 2 477 2 478 2 671 2 247 4 673 2 25 2 674 52 27 4 26 2 676 2 250 6 491 16 682 4 254 12 41 6 687 4 44 12 258 2 260 2 261 2 689 4 50 2 49 2 498 4 500 2 56 2 274 2 698 2 506 24 282 4 508 2 287 2 70 2 73 2 295 2 709 6 516 2 76 2 520 2 309 2 521 6 717 6 90 2 312 2 523 6 94 2 314 2 722 2 100 2 725 4 724 6 726 2 322 2 729 12 326 2 536 2 328 2 331 2 735 2 736 2 544 8 333 2 549 2 745 10 336 2 337 2 550 2 124 2 748 6 749 2 751 2 125 6 555 2 129 2 752 8 128 10 130 6 342 2 133 4 755 2 560 2 354 2 762 8 355 2 563 12 356 2 360 2 362 2 137 2 770 12 576 10 775 2 776 2 778 4 374 2 578 6 376 2 148 2 781 8 783 4 149 6 788 2 789 10 792 2 387 4 391 4 586 2 589 2 394 6 395 6 397 4 165 2 406 4 598 2 600 6 166 2 811 2 608 2 609 2 175 4 820 6 176 4 178 2 420 2 179 2 619 6 424 2 833 6 426 6 429 2 183 6 185 2 630 2 837 4 841 2 846 6 436 2 437 2 439 4 850 2 197 4 198 2 642 4 443 8 853 4 854 4 444 4 445 2 449 4 452 4 451 2 453 2 
247 4 745 6 25 2 674 4 314 2 550 2 751 2 148 2 752 2 149 4 783 2 129 2 508 2 133 2 491 4 439 4 682 2 755 2 725 2 73 2 792 2 820 6 516 2 420 2 445 2 689 2 362 2 331 2 50 2 500 2 165 2 406 4 183 2 185 2 576 6 
745 6 549 2 656 2 658 2 551 2 124 2 550 2 751 2 752 2 129 2 133 2 755 2 354 2 762 2 231 2 356 2 15 2 470 2 360 2 362 2 137 2 16 2 18 2 770 8 477 2 20 2 478 2 573 2 576 6 673 2 778 3 25 2 674 28 27 4 250 4 148 2 781 6 783 2 149 2 789 4 491 4 682 2 792 2 687 3 586 2 496 3 689 2 394 6 50 2 49 2 498 3 161 2 500 2 53 2 165 2 406 4 274 2 56 2 600 6 506 24 508 2 703 2 608 2 73 2 707 2 295 2 820 6 516 2 76 2 420 2 90 2 183 2 429 2 185 2 630 2 837 2 314 2 434 2 436 2 100 2 439 4 725 2 198 2 443 6 854 4 445 2 331 2 449 4 452 4 
229 2 25 2 148 2 
229 2 25 2 148 2 
549 2 745 12 656 2 337 2 123 4 658 2 749 4 128 4 752 4 342 2 133 4 755 4 227 2 762 2 354 2 229 2 469 2 231 2 356 2 470 2 136 2 471 2 360 2 137 2 18 2 770 2 477 2 478 2 480 2 576 12 776 2 247 4 673 2 25 6 145 2 674 24 27 4 676 2 781 2 148 4 30 2 149 6 783 4 789 4 491 16 682 2 384 2 391 4 494 2 257 4 586 2 156 4 589 2 689 2 394 6 397 4 49 2 498 2 50 2 500 2 406 4 56 2 698 4 600 6 807 2 64 2 506 16 608 2 413 2 175 4 295 2 820 6 176 4 76 2 179 2 420 2 424 4 82 2 518 2 90 2 183 4 429 2 630 2 837 6 99 2 847 2 436 2 100 2 439 4 725 2 197 2 198 2 642 4 443 2 853 2 536 2 444 2 854 4 541 2 331 2 449 4 651 2 452 4 208 2 
762 2 763 2 246 2 145 2 674 4 62 2 853 2 376 2 471 2 506 2 360 2 30 2 847 2 476 2 789 2 182 2 453 2 
549 2 745 12 656 2 336 2 337 2 123 4 658 2 749 4 128 4 752 4 342 2 133 4 755 4 227 2 354 2 229 2 469 2 231 2 356 2 470 2 136 2 234 2 471 2 360 2 137 2 18 2 770 2 477 2 478 2 772 2 576 12 776 2 247 4 673 2 25 6 145 2 674 24 27 4 676 2 781 2 148 4 30 2 149 6 783 4 789 2 491 16 682 2 384 4 391 4 257 4 586 2 156 4 589 2 689 2 394 6 397 4 49 2 498 4 50 2 500 2 406 4 56 2 698 4 600 6 807 2 64 2 506 16 608 2 413 2 175 4 295 2 820 6 176 4 76 2 822 2 826 2 179 2 420 2 424 4 82 2 90 2 183 4 429 2 630 2 837 6 847 2 436 2 100 2 439 4 195 2 725 2 197 4 198 2 642 4 443 2 536 2 444 2 854 4 541 2 331 2 449 4 651 2 452 4 208 2 
549 2 745 12 656 2 336 2 337 2 123 4 658 2 749 4 128 4 752 4 342 2 133 4 755 4 227 2 762 2 354 2 229 2 14 2 469 2 231 2 356 2 470 2 136 2 471 2 360 2 137 2 18 2 770 2 477 2 478 2 576 12 776 2 247 4 673 2 248 2 144 2 25 6 145 2 674 24 27 4 676 2 781 2 148 4 30 2 149 6 783 4 789 4 491 16 682 2 384 2 391 4 257 4 587 2 586 2 156 4 589 2 689 2 394 6 397 4 49 2 498 2 50 2 500 2 406 4 56 2 698 4 600 6 807 2 64 2 506 16 608 2 413 2 175 4 295 2 820 6 176 4 76 2 179 2 420 2 424 4 82 2 90 2 183 4 429 2 630 2 837 6 847 2 436 2 100 2 439 4 725 2 197 4 198 2 642 4 730 2 443 2 853 2 536 2 444 2 854 4 541 2 331 2 449 4 651 2 452 4 208 2 
363 2 132 2 230 2 193 2 649 2 425 2 674 2 278 2 163 2 169 2 361 2 
778 3 91 2 674 2 635 2 124 2 412 1 250 2 808 2 506 2 781 2 377 2 464 4 816 3 387 6 42 2 443 2 199 2 687 3 713 2 498 3 591 2 770 2 835 2 242 2 546 2 
91 2 778 2 42 2 199 2 443 2 674 2 687 2 635 2 713 2 124 2 808 2 250 2 506 2 781 2 377 2 464 4 591 2 498 2 770 2 835 2 816 2 242 2 387 6 546 2 
91 2 778 2 42 2 199 2 443 2 674 2 687 2 635 2 713 2 124 2 808 2 250 2 506 2 781 2 377 2 464 4 591 2 498 2 770 2 835 2 816 2 242 2 387 6 546 2 
629 2 244 2 24 4 119 2 720 4 778 3 3 2 577 3 92 2 674 10 63 2 124 2 338 2 506 4 557 2 152 2 226 2 644 3 256 4 646 4 327 2 539 2 235 2 829 4 472 4 769 2 308 2 263 2 623 6 690 5 498 3 770 2 545 4 140 2 574 2 270 2 22 2 773 2 628 3 546 2 
119 2 3 2 63 2 124 2 338 2 506 4 557 2 226 2 512 2 235 2 829 4 472 4 769 2 308 2 623 6 770 2 140 2 574 2 22 2 773 2 628 2 244 2 629 2 24 4 720 4 778 2 92 2 577 2 674 10 152 2 644 2 256 4 646 4 327 2 539 2 263 2 498 2 690 4 450 2 545 4 270 2 269 2 546 2 
119 2 3 2 63 2 124 2 338 2 506 4 557 2 226 2 512 2 235 2 829 4 472 4 769 2 308 2 623 6 770 2 140 2 574 2 22 2 773 2 628 2 244 2 629 2 24 4 720 4 778 2 92 2 577 2 674 10 152 2 644 2 256 4 646 4 327 2 539 2 263 2 498 2 690 4 450 2 545 4 270 2 269 2 546 2 
119 2 3 2 63 2 124 2 338 2 506 4 557 2 226 2 512 2 235 2 829 4 472 4 769 2 308 2 623 6 770 2 140 2 574 2 22 2 773 2 628 2 244 2 629 2 24 4 720 4 778 2 92 2 577 2 674 10 152 2 644 2 256 4 646 4 327 2 539 2 263 2 498 2 690 4 450 2 545 4 270 2 269 2 546 2 
119 2 3 2 63 2 124 2 338 2 506 4 557 2 226 2 512 4 235 2 829 4 472 4 769 2 308 2 623 6 770 2 140 2 574 2 22 2 773 2 628 2 244 2 629 2 24 4 720 4 778 2 92 2 577 2 674 10 152 2 644 2 256 4 646 4 327 2 539 2 263 2 498 2 690 4 450 4 545 4 270 2 269 4 546 2 
307 2 150 2 485 2 289 2 141 2 400 2 96 2 
580 2 307 2 368 2 213 2 10 2 677 2 
697 2 656 2 375 2 674 10 147 2 506 8 809 2 461 2 415 1 661 2 38 2 105 1 706 2 294 1 790 2 39 2 615 2 534 1 729 2 111 2 768 2 830 2 831 2 592 2 522 1 404 2 
2 2 3 6 674 6 63 6 506 6 319 2 31 2 288 2 152 6 416 4 558 2 441 2 512 3 533 2 256 4 325 4 43 2 327 6 825 2 539 2 714 1 829 12 263 6 797 2 267 2 690 15 450 4 269 2 22 6 773 6 802 2 
24 2 643 2 720 2 373 2 674 1 659 2 339 2 506 1 552 2 191 1 525 2 507 2 448 7 679 4 681 2 798 2 545 2 440 2 
24 2 643 2 720 2 373 2 659 4 339 2 552 2 507 2 525 4 448 6 679 4 681 2 798 2 545 2 440 4 
24 2 643 2 720 2 373 2 674 1 659 8 339 2 506 1 552 2 191 1 507 2 525 8 448 10 679 4 681 8 798 6 545 2 440 8 
24 2 643 2 720 2 373 2 659 2 339 2 552 2 507 2 525 2 448 2 679 2 545 2 440 2 
122 6 554 3 221 6 9 2 350 2 135 2 11 2 359 4 358 2 470 4 137 2 17 2 571 2 243 2 774 2 23 4 481 2 372 1 673 2 674 28 378 6 782 6 32 2 33 2 385 2 586 2 47 4 264 2 403 2 596 2 61 2 600 32 503 2 505 2 279 2 167 2 506 26 604 10 286 2 172 4 813 2 69 4 817 4 819 2 821 2 823 4 827 2 79 2 519 2 87 6 429 4 432 4 639 2 196 2 529 2 106 2 535 2 854 14 540 8 648 2 647 10 116 16 861 4 452 14 
121 16 122 10 747 4 657 4 554 10 344 2 221 10 9 1 350 2 135 2 359 4 470 28 767 14 137 2 238 4 139 10 19 4 243 6 774 2 482 2 673 6 483 8 674 78 779 8 675 8 782 4 378 8 32 4 33 2 34 4 253 4 492 24 385 2 40 2 584 4 586 6 47 4 264 2 271 2 54 4 693 8 596 4 600 104 503 2 61 4 60 4 504 16 505 2 279 4 280 4 506 70 65 4 701 2 170 4 604 26 286 4 172 4 69 4 704 4 814 4 705 4 292 2 291 4 817 4 818 4 613 10 293 4 297 4 823 4 824 4 421 4 79 4 306 32 620 4 832 16 310 4 87 10 88 10 429 30 313 4 188 4 840 4 432 4 638 2 639 10 528 4 723 8 196 2 106 6 109 4 851 4 200 2 537 4 854 44 540 24 648 4 203 2 205 8 650 24 116 14 861 2 452 36 741 8 862 2 547 4 
458 2 211 26 121 42 122 16 747 4 657 6 554 16 344 2 221 16 465 2 348 2 9 5 756 10 228 4 135 2 11 4 359 6 358 4 764 24 470 58 767 12 668 90 137 8 238 6 17 2 19 6 23 4 243 36 774 8 481 8 245 2 673 14 672 90 674 150 28 4 675 24 251 10 252 10 782 8 378 16 32 10 33 2 34 4 253 4 492 92 385 2 584 4 585 24 586 14 47 6 264 8 54 4 403 4 596 5 803 24 57 24 60 6 61 10 600 248 503 2 277 24 505 8 279 10 167 11 280 6 65 6 506 134 170 4 171 4 604 34 286 10 813 2 172 6 69 8 509 4 704 6 814 6 71 4 818 6 817 6 612 4 293 6 819 2 75 6 417 12 821 2 298 8 823 6 177 8 824 6 827 2 421 4 79 4 81 4 181 2 519 2 310 4 87 16 429 58 633 6 313 4 188 6 432 6 318 8 639 18 638 2 194 4 528 4 196 2 529 2 106 10 851 6 535 2 537 6 854 112 540 124 648 4 647 22 734 4 205 50 650 84 860 26 739 18 116 28 861 6 452 88 741 42 
57 2 59 2 61 2 209 2 503 2 600 48 746 2 505 2 122 4 279 2 506 44 215 4 554 2 285 2 556 2 286 2 753 2 8 2 813 2 172 2 221 4 72 2 756 2 9 2 510 2 817 2 292 2 758 2 350 2 613 2 559 2 135 2 617 2 823 2 177 2 764 2 359 2 470 6 766 2 422 2 569 4 137 2 571 2 139 2 625 2 367 2 87 4 88 2 718 2 243 2 429 6 774 2 631 2 673 2 839 2 838 2 674 46 842 2 432 2 637 2 251 2 98 2 252 2 639 2 527 4 782 6 32 2 194 2 33 2 438 2 321 6 196 2 385 2 106 2 585 2 200 2 586 2 854 20 855 2 540 6 731 2 158 2 47 2 264 2 590 2 206 4 116 36 861 2 740 2 452 20 801 2 
268 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (710,735) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 516 118 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 734 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException (363,694) (363,694) 286 517 790 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 135 286 517 790 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (80,778) (80,778) 286 517 790 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException (363,694) (363,694) (363,694) (363,694) 286 517 790 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.PptSlice0:arity()I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.ProglangType:isScalar()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:max([I)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eq(DD)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:min([I)I
daikon.Quant:slice([III)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 30997 | return null
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:eq(FF)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:memberOf(D[F)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:lexEqual([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ProglangType:isArray()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.MathMDE:gcd(II)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:hashCode()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 100680 | = null
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.Invariant:getConfidence()D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eq(II)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Debug:logOn()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min_max([I)[I | CONDITION | 6730 | if (x) -> if (!x)
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:lt(II)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:logOn()Z
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:eq(JJ)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.PptSlice1:arity()I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:noDups([I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:lte(II)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:gte(II)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.ProglangType:baseIsScalar()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_ntk()I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:intersection([I[I)[I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.InvMap:InvMap()V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:sameLength([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:memberOf(F[F)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:element_range([I)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_scan_token(I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern:intern([J)[J
daikon.PptName:isCombinedExitPoint()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.MathMDE:pow(II)I
daikon.Quant:lexGTE([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:gt(II)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ValueTuple:isMissing(I)Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24075 | return null
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.ModBitTracker:num_samples()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaCharStream:backup(I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Debug:logDetail()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONSTANT | 64756 | 0 -> -1
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:concat([I[I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet; | OPERATOR | 1556 | == -> !=
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptName:isEnterPoint()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
daikon.PptSlice1:num_samples()I
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:ne(II)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 5998 | = null
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Ppt:Ppt()V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:lexNotEqual([I[I)Z
daikon.ValueTuple:size()I
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.PptSlice2:arity()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaCharStream:ReadByte()C
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
751 2 588 2 595 2 606 2 252 4 451 2 778 2 80 2 515 2 
692 2 697 2 788 2 280 2 418 6 572 2 92 2 428 6 247 6 296 2 359 2 
566 4 337 6 497 6 155 6 266 2 3 6 432 2 194 2 198 2 32 2 778 2 80 2 272 4 
701 8 744 4 347 26 518 16 261 8 426 4 767 16 140 2 524 6 243 2 456 2 109 4 770 2 214 16 463 2 434 8 581 4 80 6 778 6 33 10 61 10 671 12 156 2 305 10 676 6 40 10 446 8 90 29 619 10 168 2 
773 4 110 6 
13 2 
588 2 735 2 37 2 72 2 219 2 
701 6 744 2 100 2 347 48 475 6 518 32 133 4 767 32 331 6 524 4 770 2 214 32 434 18 635 2 218 6 778 4 80 4 9 4 33 16 12 4 61 16 183 4 640 2 671 22 799 4 761 6 305 6 507 4 676 4 40 16 762 2 469 6 281 6 90 54 193 8 509 2 619 16 700 2 511 4 
288 2 735 2 653 2 
586 2 679 2 610 2 116 2 263 2 104 10 51 2 38 2 306 2 726 2 555 2 483 2 5 22 710 2 
744 2 347 4 518 2 767 2 405 2 708 2 526 2 214 2 434 2 217 2 583 2 112 2 8 2 33 2 608 2 61 2 671 2 647 2 305 4 676 2 40 2 90 6 619 2 
33 4 347 12 61 4 518 8 671 4 767 8 799 4 204 2 109 2 40 4 281 6 90 16 619 4 214 8 78 2 218 6 9 4 
288 4 289 2 722 2 750 2 105 14 550 2 108 10 320 2 388 2 208 2 559 2 77 4 634 2 731 2 219 2 666 4 712 2 567 2 222 2 118 2 735 6 439 2 375 2 653 2 541 2 229 2 516 2 
602 2 358 2 780 2 249 2 185 2 13 2 488 2 787 2 417 2 448 2 
624 2 234 2 424 2 522 2 107 2 727 2 632 2 633 2 527 2 528 2 248 2 636 1 113 2 10 2 530 1 638 1 531 4 438 4 533 2 536 2 737 2 738 3 440 3 442 2 121 3 341 2 256 2 649 2 127 1 346 2 349 2 745 2 131 3 132 4 746 6 453 1 353 2 747 12 23 1 354 1 141 2 357 2 24 2 143 1 659 2 455 2 145 2 267 2 662 2 268 1 560 4 30 3 561 2 271 2 759 2 153 3 368 16 466 3 370 2 35 2 278 2 677 2 372 1 44 2 43 6 574 2 165 2 764 2 285 1 167 2 379 4 170 2 681 32 293 1 683 1 173 2 769 8 53 4 55 8 387 2 298 2 178 3 775 24 301 2 777 2 778 34 182 2 779 6 782 4 783 2 587 6 786 2 303 2 591 32 392 2 394 2 593 2 698 3 192 2 594 2 699 2 64 2 197 2 598 2 494 2 68 24 702 2 314 5 703 16 317 2 70 3 203 2 319 2 795 2 209 2 500 2 321 2 76 2 709 2 406 2 607 2 80 32 407 2 325 1 609 2 221 2 83 2 224 8 612 2 88 2 226 1 329 2 617 2 93 16 94 2 716 1 420 2 718 3 719 2 96 4 621 2 623 2 513 3 231 16 805 2 232 2 515 2 
246 2 778 2 
366 2 66 2 778 4 
570 2 
422 2 625 4 425 2 1 4 576 2 519 2 520 2 383 6 238 6 384 2 684 2 4 6 687 2 774 2 300 2 730 2 484 2 7 2 693 6 639 2 188 2 642 2 119 2 537 2 696 2 444 6 539 30 344 6 124 4 654 6 199 2 350 4 139 2 265 2 603 2 660 4 553 2 147 2 503 4 752 6 212 2 28 6 216 6 563 4 565 6 326 2 274 6 797 30 84 2 614 2 615 6 802 30 763 2 714 4 804 6 720 6 473 2 
441 1 464 2 172 2 454 2 
172 2 86 2 
22 2 396 2 631 2 172 2 426 2 735 2 658 2 
22 2 172 2 477 2 
22 2 501 2 172 2 
464 2 729 2 31 2 
22 2 172 2 
729 2 99 2 
172 2 15 2 
464 2 729 2 59 2 
584 2 348 2 464 2 
464 2 637 2 548 2 
340 2 464 2 163 2 
464 2 616 2 230 2 
729 2 97 2 
386 2 172 2 
348 2 345 2 
575 2 548 2 
340 2 146 2 
652 2 230 2 
729 2 643 2 
230 2 270 2 
340 2 291 2 
757 2 548 2 
348 2 630 2 
464 2 91 2 729 2 59 2 
464 2 91 2 729 2 755 2 59 2 
552 2 464 2 729 2 
464 2 729 2 655 2 
235 2 106 2 333 2 562 2 
564 2 287 2 81 2 589 2 223 2 85 2 250 2 414 2 739 4 499 2 395 2 89 2 307 2 717 2 148 2 258 2 5 6 48 4 
464 2 496 2 
631 2 735 2 164 2 656 2 
631 2 735 2 658 2 164 2 467 2 656 2 
22 2 631 2 172 2 426 2 735 2 365 2 
336 2 227 2 
631 2 426 2 735 2 73 2 
340 2 585 2 
315 2 230 2 
348 2 360 2 
279 2 548 2 
707 2 548 2 230 2 
548 2 230 2 57 2 
548 2 230 2 311 2 
548 2 542 2 230 2 
631 2 58 2 181 6 781 2 62 2 735 2 191 6 803 2 
486 2 729 2 
341 2 
624 2 727 2 248 2 10 2 531 4 438 2 533 2 536 2 256 2 740 4 342 2 346 2 349 2 745 2 132 4 746 6 23 2 354 2 747 8 748 2 141 2 24 2 662 2 461 2 560 4 154 2 669 2 35 6 278 2 43 2 376 2 165 2 764 2 170 2 681 6 53 2 769 2 54 2 176 2 301 2 689 2 778 26 779 4 782 2 587 2 786 4 187 2 303 2 591 4 593 2 192 2 594 2 699 2 195 4 316 2 71 2 203 2 321 2 500 2 209 2 406 2 80 26 407 2 609 2 327 2 88 2 94 2 420 2 96 4 95 2 231 6 421 2 515 2 98 2 
624 2 724 2 727 2 248 2 10 2 531 4 438 2 533 2 536 2 442 1 256 2 740 4 342 2 346 2 349 2 745 2 132 4 746 6 23 2 354 2 747 8 748 2 141 2 24 2 662 2 461 2 560 4 669 2 35 6 278 2 43 2 47 2 165 2 377 2 764 2 170 2 681 6 173 1 53 2 769 2 54 2 176 2 301 2 778 26 779 5 782 2 587 2 786 4 187 2 303 2 591 4 392 2 593 2 192 2 594 2 699 2 195 4 316 2 71 2 203 2 321 2 500 2 209 2 406 2 80 26 407 2 609 2 327 2 88 2 94 2 420 2 96 4 95 2 231 6 421 2 515 2 98 2 
179 2 
101 2 262 2 
233 2 765 2 626 2 103 4 171 2 682 2 428 6 628 2 297 2 523 2 175 2 242 2 525 2 56 2 247 6 690 2 778 12 487 4 692 2 10 2 117 2 536 2 645 8 123 2 651 4 699 2 447 2 746 4 403 4 24 2 706 2 498 2 458 2 321 2 213 2 27 2 406 2 560 2 665 4 711 2 80 6 273 2 220 4 275 2 276 2 159 2 371 2 506 10 416 2 508 2 282 8 280 4 418 6 92 4 572 2 420 2 228 2 96 2 622 2 514 2 
233 2 765 2 626 2 103 4 171 2 682 2 428 8 628 2 297 2 523 2 175 2 242 2 56 2 247 8 690 2 778 12 487 4 10 2 692 2 117 2 536 2 645 8 697 2 123 2 651 4 699 2 447 2 746 4 403 4 24 2 706 2 205 2 498 2 458 2 321 2 213 2 27 2 406 2 560 2 665 4 80 6 273 2 220 4 275 2 569 4 276 2 159 2 371 2 506 10 416 2 508 2 282 8 280 4 418 6 92 4 572 2 420 2 228 2 46 2 96 2 622 2 514 2 
487 2 233 2 103 4 276 2 682 2 628 2 297 2 508 2 242 2 498 2 280 2 418 2 651 4 92 2 447 2 247 2 514 2 690 2 
233 2 765 2 626 2 103 4 171 2 682 2 428 6 628 2 297 2 523 2 175 2 242 2 525 2 56 2 247 6 690 2 778 12 487 4 692 2 10 2 117 2 536 2 645 4 697 2 123 2 651 4 699 2 447 2 746 4 403 4 24 2 706 2 498 2 458 2 321 2 213 2 27 2 406 2 560 2 665 4 711 2 80 6 273 2 220 4 275 2 276 2 159 2 371 2 506 6 416 2 508 2 282 4 280 4 418 4 92 4 420 2 228 2 96 2 622 2 514 2 
233 2 765 2 626 2 103 4 171 2 682 2 428 6 628 2 297 2 523 2 175 2 242 2 525 2 56 2 247 4 690 2 778 12 487 4 692 2 10 2 117 2 536 2 645 4 788 2 123 2 651 4 699 2 447 2 746 4 403 4 24 2 706 2 498 2 458 2 321 2 213 2 27 2 406 2 560 2 665 4 711 2 80 6 273 2 220 4 275 2 276 2 159 2 371 2 506 6 416 2 508 2 282 4 280 4 418 6 92 4 420 2 228 2 96 2 622 2 514 2 
233 2 765 2 626 2 103 4 171 2 682 2 428 6 628 2 297 2 523 2 175 2 242 2 525 2 56 2 247 6 690 2 778 12 487 4 692 2 10 2 117 2 536 2 645 4 123 2 651 4 699 2 447 2 746 4 403 4 24 2 706 2 498 2 458 2 321 2 213 2 27 2 406 2 560 2 665 4 711 2 80 6 273 2 220 4 275 2 276 2 159 2 371 2 506 6 416 2 508 2 282 8 280 4 418 6 92 4 572 2 420 2 228 2 96 2 622 2 514 2 
233 2 765 2 626 2 103 4 171 2 682 2 428 8 628 2 297 2 523 2 175 2 242 2 525 2 56 2 247 6 690 2 778 12 487 4 692 2 10 2 117 2 536 2 645 8 788 2 123 2 651 4 699 2 447 2 746 4 403 4 24 2 706 2 498 2 458 2 321 2 213 2 27 2 406 2 560 2 665 4 711 2 80 6 273 2 220 4 275 2 276 2 159 2 371 2 506 10 416 2 508 2 282 8 280 4 418 8 92 4 572 2 420 2 228 2 96 2 622 2 514 2 
233 2 765 2 626 2 103 4 171 2 682 2 428 6 628 2 297 2 523 2 175 2 242 2 525 2 56 2 247 6 690 2 778 12 487 4 692 2 10 2 117 2 536 2 645 8 123 2 651 4 699 2 447 2 746 4 403 4 24 2 706 2 498 2 458 2 321 2 213 2 27 2 406 2 560 2 665 4 711 2 80 6 273 2 220 4 275 2 276 2 159 2 371 2 506 10 416 2 508 2 282 8 280 4 418 6 92 4 572 2 420 2 228 2 96 2 622 2 514 2 
233 2 624 2 626 2 428 12 628 2 431 1 241 2 242 2 246 6 247 4 10 2 438 2 14 6 646 2 442 2 255 10 256 2 445 2 651 4 18 6 447 2 24 2 662 2 458 2 663 2 27 2 665 4 273 2 34 1 275 2 35 6 276 2 278 2 674 6 470 6 282 2 280 4 43 2 471 1 678 2 284 2 681 8 680 2 682 2 297 2 53 2 56 2 301 2 690 2 692 4 487 4 691 2 491 2 699 2 309 2 492 1 66 6 705 2 706 4 498 2 321 2 711 2 80 24 504 2 327 4 506 2 508 2 88 2 328 1 94 2 92 4 96 4 95 2 721 6 514 2 515 2 98 2 103 4 523 2 727 2 728 2 334 2 111 2 531 4 533 2 117 2 535 6 536 2 736 2 123 2 342 2 742 2 743 6 346 2 129 2 130 2 746 6 132 4 351 6 134 2 747 4 547 2 136 2 749 7 361 6 362 6 560 4 159 2 371 2 160 2 570 6 373 1 165 2 380 2 169 6 765 2 171 2 173 2 385 4 175 2 769 2 177 8 771 1 776 1 582 1 778 46 779 6 782 2 587 2 186 2 190 2 591 2 592 6 393 7 788 4 192 2 397 2 594 2 195 4 403 8 203 12 794 6 207 2 211 4 213 2 406 2 407 2 220 6 609 2 412 2 613 2 416 2 801 2 418 8 618 2 420 2 228 2 622 4 231 6 
233 2 624 2 626 2 103 4 428 12 628 2 523 2 241 2 242 2 728 2 727 2 246 6 334 2 111 2 247 8 10 2 733 2 531 4 533 2 438 4 117 2 14 6 535 6 736 2 536 2 646 2 442 2 255 10 256 2 445 2 123 2 342 2 651 4 18 6 742 2 447 2 743 6 346 2 130 2 129 2 351 6 132 4 746 6 134 2 547 2 747 8 136 2 24 2 361 6 362 6 458 2 662 2 663 2 27 2 560 4 665 4 273 2 275 2 276 2 35 6 159 2 278 2 371 2 674 6 160 2 570 6 470 6 280 4 282 6 43 2 572 4 165 2 678 2 284 2 380 2 169 6 765 2 171 2 680 2 681 8 682 2 173 2 297 2 385 4 769 2 53 4 175 2 56 2 177 8 301 2 778 48 690 2 691 2 487 4 692 4 779 6 782 4 587 2 186 2 786 2 63 2 591 2 190 2 592 6 491 2 397 2 192 2 594 2 699 2 309 2 195 4 66 6 403 8 705 2 203 12 706 4 794 6 498 2 207 2 321 2 211 4 213 2 406 2 711 2 407 2 80 26 609 2 220 6 504 2 412 2 327 4 506 2 613 2 416 2 508 2 801 2 88 2 418 8 618 2 92 4 94 2 420 2 228 2 95 2 96 4 622 4 721 6 231 6 514 2 98 2 515 2 
233 2 624 2 626 2 103 4 428 12 628 2 523 2 241 2 242 2 728 2 727 2 246 6 334 2 111 2 247 8 10 2 733 2 531 4 533 2 438 4 117 2 14 6 535 6 736 2 536 2 646 2 645 4 442 2 255 10 256 2 445 2 123 2 342 2 651 4 18 6 742 2 447 2 743 6 346 2 130 2 129 2 351 6 132 4 746 6 134 2 547 2 747 8 136 2 24 2 361 6 362 6 662 2 458 2 663 2 27 2 560 4 665 4 273 2 275 2 276 2 35 6 159 2 278 2 371 2 674 6 160 2 570 6 470 6 280 4 282 6 43 2 572 4 165 2 678 2 284 2 380 2 169 6 765 2 171 2 680 2 681 8 682 2 173 2 297 2 385 4 769 2 53 4 175 2 56 2 177 8 301 2 778 48 690 2 691 2 487 4 692 4 779 6 782 4 587 2 186 2 786 2 63 2 591 2 190 2 592 6 491 2 397 2 192 2 594 2 699 2 309 2 195 4 66 6 403 8 705 2 203 12 706 4 794 6 498 2 207 2 321 2 211 4 213 2 406 2 711 2 407 2 80 26 220 6 609 2 504 2 412 2 327 4 613 2 506 6 416 2 508 2 801 2 88 2 418 8 618 2 92 4 94 2 420 2 228 2 95 2 96 4 622 4 721 6 231 6 514 2 98 2 515 2 
233 2 624 2 626 2 428 16 628 2 241 2 242 2 246 12 247 10 10 2 438 4 14 12 645 4 646 2 442 2 255 8 256 2 445 2 651 4 18 6 20 6 447 2 452 6 24 2 458 2 662 2 663 2 27 2 665 4 273 2 672 6 275 2 35 8 276 2 278 2 674 12 470 6 282 6 280 4 283 2 43 4 678 2 284 2 681 12 478 2 680 2 682 2 292 2 297 2 53 4 56 2 301 2 690 2 692 4 487 4 691 2 63 2 489 6 697 2 491 2 699 2 66 12 704 6 705 2 706 4 498 2 321 2 711 2 80 24 82 6 504 2 327 4 506 6 508 2 88 2 94 2 92 4 96 4 95 2 721 12 514 2 515 2 98 4 103 4 523 2 727 2 728 2 334 2 111 2 733 2 531 4 533 2 117 2 534 2 535 6 536 2 736 2 538 2 123 2 342 2 742 2 125 2 743 6 346 2 129 2 130 2 746 6 132 4 351 6 134 2 747 10 547 2 136 2 361 6 362 6 150 6 560 4 159 2 371 2 160 2 570 12 161 6 572 4 165 2 380 2 169 6 765 2 171 2 173 2 385 4 175 2 769 4 177 8 778 52 779 6 782 4 587 4 186 2 786 2 190 2 591 4 592 6 788 2 192 2 397 2 594 2 195 6 596 6 400 2 791 2 403 8 203 10 794 6 207 2 211 4 213 2 406 2 407 2 609 2 220 6 412 2 613 2 416 2 801 2 418 10 618 2 420 2 228 2 622 4 231 8 
765 2 103 2 403 2 428 4 682 2 297 2 523 2 175 2 242 2 498 2 458 2 213 2 27 2 665 2 247 6 711 2 778 4 690 2 692 2 273 2 220 2 117 2 645 4 506 4 416 2 123 2 282 6 280 4 418 6 651 2 572 2 92 4 228 2 447 2 514 2 
624 2 626 2 103 2 428 4 523 2 242 2 727 2 247 6 10 2 531 4 533 2 117 2 536 2 442 2 341 2 255 2 256 2 123 2 651 2 342 2 650 3 447 2 746 6 132 4 24 2 554 2 267 2 662 2 458 2 27 2 560 4 665 2 364 2 273 2 35 6 278 2 280 4 282 6 572 2 43 3 165 2 765 2 681 8 682 2 173 2 297 2 175 2 301 2 778 28 690 2 692 2 779 6 587 3 591 3 192 2 699 2 594 2 195 4 309 2 197 2 200 2 403 2 203 4 498 2 795 2 321 2 213 2 406 2 711 2 80 24 407 2 220 2 609 2 327 2 505 2 506 2 416 2 88 2 418 6 92 4 94 2 420 2 228 2 96 4 95 2 512 2 231 6 514 2 515 2 
123 2 117 2 673 2 
123 2 117 2 673 2 
233 2 0 2 624 2 103 2 427 2 428 16 628 2 523 2 242 2 727 2 433 2 335 2 247 12 10 2 436 4 531 4 438 4 117 4 536 2 645 4 253 4 442 2 255 2 256 2 123 6 342 2 651 2 742 2 447 4 346 4 132 4 746 6 747 4 24 2 662 2 560 4 665 2 465 2 369 2 673 2 275 2 36 2 35 2 159 2 278 2 162 2 282 6 280 4 573 2 572 4 165 2 378 2 476 2 169 2 680 2 681 2 682 2 173 2 295 2 385 2 53 4 56 2 301 2 390 2 778 24 487 4 779 6 692 4 782 4 187 4 591 2 697 4 788 4 397 2 192 2 594 2 699 2 65 2 67 2 403 4 203 4 706 2 321 2 211 2 406 2 80 16 407 2 220 4 609 2 410 2 327 6 87 2 506 6 88 2 418 12 94 2 92 4 420 2 228 2 96 4 95 2 622 4 231 2 515 2 
10 2 101 2 169 2 465 2 36 2 601 2 203 2 508 2 675 2 255 2 801 2 618 2 211 2 543 2 67 2 80 2 778 4 
233 2 0 2 624 2 103 2 427 2 428 16 628 2 523 2 240 2 242 2 727 2 433 2 247 12 10 2 436 4 531 4 438 4 117 4 536 2 645 4 253 4 442 2 256 2 123 6 342 2 651 2 742 2 447 4 346 4 132 4 746 6 747 4 24 2 662 2 664 2 560 4 665 2 465 2 369 2 673 2 275 2 36 2 35 2 159 2 278 2 371 2 282 6 280 4 573 2 572 4 165 2 472 2 49 2 476 2 169 2 680 2 681 2 682 2 173 2 295 2 385 2 53 4 56 2 688 2 301 2 778 24 487 4 779 6 692 4 782 4 187 4 591 4 697 4 788 4 397 2 192 2 594 2 699 2 65 4 67 2 403 4 203 2 706 4 321 2 406 2 80 16 407 2 220 4 609 2 410 2 327 6 87 2 506 6 88 2 418 12 94 2 92 4 420 2 228 2 96 4 95 2 622 4 231 2 515 2 
233 2 0 2 624 2 103 2 236 2 427 2 428 16 628 2 523 2 725 2 242 2 727 2 433 2 247 12 10 2 436 4 531 4 438 4 117 4 536 2 645 4 253 4 442 2 255 2 256 2 123 6 342 2 651 2 742 2 447 4 346 4 132 4 746 6 747 4 24 2 662 2 462 2 560 4 665 2 465 2 369 2 673 2 275 2 36 2 35 2 158 2 159 2 278 2 371 2 282 6 280 4 573 2 572 4 165 2 476 2 169 2 382 2 680 2 681 2 682 2 173 2 295 2 385 2 53 4 56 2 301 2 778 24 487 4 779 6 692 4 782 4 187 4 591 2 697 4 788 4 397 2 192 2 594 2 699 2 65 2 67 2 403 4 203 4 706 4 321 2 211 2 406 2 80 16 407 2 220 4 609 2 410 2 327 6 87 2 506 6 88 2 418 12 94 2 92 4 420 2 228 2 96 4 95 2 622 4 231 2 515 2 
734 2 
545 2 495 2 766 3 681 2 239 4 404 2 661 2 210 2 772 2 605 2 80 2 778 2 587 3 611 2 533 2 339 2 35 2 591 3 648 2 122 1 43 3 195 2 620 2 231 2 98 6 
545 2 495 2 611 2 766 2 587 2 339 2 533 2 681 2 35 2 591 2 404 2 239 4 648 2 661 2 210 2 772 2 43 2 195 2 605 2 620 2 231 2 98 6 778 2 80 2 
545 2 495 2 611 2 766 2 587 2 339 2 533 2 681 2 35 2 591 2 404 2 239 4 648 2 661 2 210 2 772 2 43 2 195 2 605 2 620 2 231 2 98 6 778 2 80 2 
518 2 627 2 767 2 681 2 524 2 481 3 580 2 6 2 778 10 61 2 784 3 587 3 533 2 338 2 591 3 16 6 257 2 789 4 450 2 701 4 312 2 347 4 401 4 495 2 138 3 202 4 26 2 214 2 80 4 33 2 368 2 277 4 800 4 40 2 41 2 90 6 93 2 619 2 45 2 474 2 
312 2 701 4 347 4 401 4 495 2 518 2 627 2 681 2 767 2 138 2 202 4 26 2 524 2 481 2 770 2 580 2 214 2 434 2 6 2 778 10 80 4 33 2 61 2 784 2 368 2 587 2 338 2 533 2 671 2 277 4 591 2 800 4 16 6 40 2 41 2 789 4 257 2 90 4 93 2 45 2 619 2 450 2 474 2 
312 2 701 4 347 4 401 4 495 2 518 2 627 2 681 2 767 2 138 2 202 4 26 2 524 2 481 2 770 2 580 2 214 2 434 2 6 2 778 10 80 4 33 2 61 2 784 2 368 2 587 2 338 2 533 2 671 2 277 4 591 2 800 4 16 6 40 2 41 2 789 4 257 2 90 4 93 2 45 2 619 2 450 2 474 2 
312 2 701 4 347 4 401 4 495 2 518 2 627 2 681 2 767 2 138 2 202 4 26 2 524 2 481 2 770 2 580 2 214 2 434 2 6 2 778 10 80 4 33 2 61 2 784 2 368 2 587 2 338 2 533 2 671 2 277 4 591 2 800 4 16 6 40 2 41 2 789 4 257 2 90 4 93 2 45 2 619 2 450 2 474 2 
312 2 701 4 347 4 401 4 495 2 518 2 627 2 681 2 767 2 138 2 202 4 26 2 524 2 481 2 770 4 580 2 214 2 434 4 6 2 778 10 80 4 33 2 61 2 784 2 368 2 587 2 338 2 533 2 671 4 277 4 591 2 800 4 16 6 40 2 41 2 789 4 257 2 90 4 93 2 45 2 619 2 450 2 474 2 
11 2 259 2 668 2 42 2 796 2 310 2 
408 2 482 2 196 2 316 2 330 2 399 2 310 2 
600 2 69 2 137 2 294 1 24 2 144 2 579 2 556 2 557 2 459 2 756 2 529 2 778 10 80 8 712 1 114 2 641 2 413 1 674 2 225 2 741 1 19 2 510 2 541 1 493 2 128 2 
701 4 347 12 475 4 518 6 352 2 355 2 767 6 521 2 356 2 524 2 457 2 770 2 299 2 214 6 434 2 215 2 79 2 778 6 80 6 9 2 33 6 183 2 61 6 671 3 251 2 40 6 281 4 90 16 193 2 619 6 
313 2 401 2 657 2 201 2 237 2 277 2 800 2 551 2 419 2 374 2 460 2 269 3 753 2 
313 2 184 2 401 2 657 2 201 2 237 2 411 1 798 2 277 2 800 2 551 4 374 2 419 2 460 2 269 6 753 2 778 1 80 1 
313 2 184 2 401 2 657 2 201 4 237 2 798 2 277 2 800 2 551 4 419 2 374 4 460 4 269 6 753 2 
313 2 184 6 401 2 657 2 201 8 237 2 411 1 798 8 277 2 800 2 551 4 419 2 374 8 460 8 269 10 753 2 778 1 80 1 
286 2 517 2 381 2 173 2 577 2 180 2 778 8 779 6 531 2 694 2 590 2 442 2 594 2 17 1 540 2 790 2 544 1 132 2 363 2 29 2 324 2 80 8 758 1 670 1 278 2 165 2 
286 2 423 2 517 2 381 2 132 6 135 2 430 2 174 2 74 2 245 2 322 2 502 2 604 2 754 2 151 2 778 14 80 14 779 12 532 2 531 6 785 2 367 2 760 2 120 2 590 10 278 2 468 2 443 2 594 2 126 2 165 2 790 2 544 2 
423 2 286 2 517 2 50 2 381 2 102 2 290 2 723 2 429 2 430 10 332 2 173 4 629 4 174 2 480 2 578 2 685 2 244 4 485 2 302 2 435 2 778 42 779 32 732 2 437 2 115 2 531 14 695 2 189 2 391 2 644 6 304 6 590 14 490 2 442 4 443 2 308 2 594 4 398 4 17 4 343 4 540 2 126 4 599 2 790 2 449 4 21 2 260 2 132 16 546 2 792 2 402 2 549 2 318 2 793 4 142 2 25 2 206 2 75 2 149 6 754 4 151 2 667 2 152 2 80 38 409 6 367 4 568 2 278 4 713 6 415 4 468 2 715 2 165 2 166 2 806 2 
423 2 286 2 517 2 381 2 102 2 2 2 768 2 479 2 430 6 173 5 52 2 577 2 174 2 244 2 389 4 180 2 60 2 778 24 779 31 531 10 694 6 590 12 442 5 254 2 443 2 594 2 308 2 17 2 597 2 126 4 540 4 790 2 449 2 544 2 132 10 264 2 323 2 558 2 322 2 363 2 604 2 754 4 29 2 151 2 324 10 667 2 80 22 367 4 670 2 760 2 157 2 278 2 415 2 39 2 468 2 571 2 715 2 165 2 
686 2 

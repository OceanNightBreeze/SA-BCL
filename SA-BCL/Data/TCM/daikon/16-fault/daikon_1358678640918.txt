#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 310 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.Error 804 376 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (961,1284) (961,1284) 908 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 536 805 526 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 907 1117 1012 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 907 1117 1012 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 907 1117 1012 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 907 1117 1012 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V FAILED junit.framework.AssertionFailedError (1011,1200) (1011,1200) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3053 | = null
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_123()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_2_14(I)Z
daikon.PptName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_127()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_58()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3_35()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.Node:Node()V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_3R_125()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
utilMDE.ArraysMDE:element_range([I)I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern:intern([I)[I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfo:new_ppt()V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf([B[I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_97()Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([D)[D
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3_27()Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:slice([III)[I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:jj_3R_135()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:ne(II)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_12()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:subsetOf([F[F)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 133346 | return null
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_137()Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_106()Z
utilMDE.MathMDE:modulus([I)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:eltwiseLTE([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13809 | = null
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3_21()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_19()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2087 | return null
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_108()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
daikon.Quant:eq(II)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:isPointer()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_103()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_149()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3_5()Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_77()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:isPrestate()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_114()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.Quant:gte(II)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_2_26(I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_2_12(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3_28()Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3R_96()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:justified()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3_20()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3_13()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_3()Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3_10()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.Token:newToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.JavaParser:jj_3R_49()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14018 | 108 -> 109
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltwiseGT([I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:base()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_101()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:eq(DD)Z
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3_17()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_117()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.NodeOptional:present()Z
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_85()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Debug:logDetail()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J | CONSTANT | 17272 | 2 -> -1
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17104 | = null
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_105()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_86()Z
daikon.ProglangType:isScalar()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaCharStream:getEndLine()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_104()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.JavaCharStream:readChar()C
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_60()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:eltwiseLT([I)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_78()Z
daikon.ModBitTracker:num_vars()I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:arity()I
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.Quant:eq(FF)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3_29()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:eltwiseEqual([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_118()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.Invariant:logOn()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptSlice2:arity()I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_110()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:size()I
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3_14()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:isFloat()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(F[F)Z
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_72()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 98321 | return null
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_3R_63()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_73()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_102()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9684 | = null
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaCharStream:backup(I)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:gt(II)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.ValueSet:ValueSet(I)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfo:isIOAArray()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3_26()Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3R_180()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(JJ)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.PptName:getSignature()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.Quant:noDups([I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ProglangType:isArray()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_128()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfo:isDerived()Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:sign(I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_54()Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1284 2 522 2 183 2 961 2 63 2 128 2 630 4 1034 2 738 2 
589 2 798 2 1150 2 894 6 852 2 981 2 1025 6 1085 2 771 6 129 2 151 2 
1260 2 1198 4 635 2 316 2 1247 2 310 2 732 2 432 2 1111 2 
0 4 1029 28 746 4 1357 8 97 10 213 2 749 10 1337 8 848 4 308 16 1114 4 961 6 944 2 792 2 150 16 28 10 1284 6 239 10 1367 2 599 6 1218 10 86 8 681 16 1309 12 317 26 930 2 278 2 1088 8 783 2 107 6 
511 6 380 4 
478 2 
641 2 1 2 588 2 1154 2 479 2 329 2 944 2 651 2 1259 2 815 2 1119 2 1305 2 1124 2 1045 2 403 2 363 2 950 4 295 2 739 2 1221 2 1223 2 1271 2 494 4 187 2 419 2 18 2 666 2 829 2 1056 2 622 2 23 4 667 2 869 2 961 4 100 2 1284 4 467 2 569 2 1288 2 1290 2 1019 4 522 2 321 2 1067 2 
1068 2 164 4 339 2 1029 52 845 4 97 6 788 6 749 15 912 2 848 2 1073 6 308 32 668 4 961 4 1139 4 25 6 150 32 345 4 1013 4 28 15 1284 4 253 8 239 15 399 2 599 4 877 4 1218 15 203 3 86 6 972 6 681 32 1347 5 317 47 1309 22 1129 2 278 2 1088 19 107 4 577 6 
815 2 914 2 574 2 
1202 22 290 2 303 2 198 10 476 2 863 2 667 2 104 2 740 2 222 2 146 2 472 2 825 2 763 2 
642 2 1029 6 866 2 97 4 143 2 749 2 848 2 308 2 1138 2 1038 2 120 2 150 2 28 2 239 2 1218 2 681 2 1309 2 317 4 1088 2 1048 2 107 2 689 2 414 2 
28 4 746 2 1029 16 239 4 877 4 788 6 1218 4 749 4 681 8 560 2 1309 4 317 12 308 8 1139 4 812 2 25 6 150 8 
494 4 386 4 827 4 785 2 247 2 1002 4 17 2 1360 2 1004 10 1137 4 284 2 960 4 914 2 648 4 561 10 1318 2 379 2 834 2 1212 2 597 62 674 4 100 4 815 8 123 2 1342 2 568 2 1305 2 970 4 405 2 351 2 8 4 181 2 408 4 574 6 318 14 549 2 105 2 659 4 1354 2 1181 2 
398 2 1236 2 1239 2 127 2 102 2 1291 2 376 2 478 2 121 2 804 2 
691 1 765 1 392 2 248 2 1206 2 1110 1 940 2 850 2 942 3 774 3 693 11 594 2 1118 1 948 2 177 2 697 6 404 4 861 2 700 2 10 2 1047 2 1132 2 415 2 956 2 1313 1 957 2 263 1 789 2 424 2 961 30 1231 2 27 2 875 2 346 2 720 6 796 2 629 2 431 1 631 2 1245 2 1246 4 1328 1 883 1 885 1 37 2 803 2 1330 8 976 5 530 2 112 2 890 2 893 8 1253 2 729 1 1152 2 810 1 215 1 1159 2 217 3 118 2 359 1 650 2 990 2 1258 17 1165 2 736 1 1166 2 1078 2 125 16 900 2 1079 2 545 2 821 2 908 2 1355 1 1272 2 748 2 1186 8 60 1 752 2 833 2 63 2 671 3 1365 11 1284 32 566 2 922 2 675 4 838 2 382 1 72 3 1195 2 1016 2 156 2 311 6 470 2 76 2 1020 4 160 8 1292 6 1104 4 384 2 841 2 690 1 1028 1 
1284 2 6 2 
1284 4 1046 2 579 2 
712 2 
325 334 3 4 1032 2 1035 2 5 2 328 6 1036 46 694 32 1041 4 695 2 1044 4 331 2 696 2 699 2 9 6 335 26 336 2 14 2 1049 2 1051 290 705 342 706 2 1054 4 21 2 342 4 710 86 711 2 713 2 1057 2 715 106 1058 94 343 2 344 2 26 198 718 84 30 30 347 204 1060 4 31 60 1061 596 32 6 721 182 722 4 1062 14 1063 4 349 2 724 6 35 6 352 18 36 2 353 2 354 2 39 6 727 50 40 198 355 2 1070 2 42 2 1071 22 45 2 358 20 47 32 360 32 361 182 735 2 48 32 1080 2 1082 4 367 48 741 2 1084 2 742 32 53 46 1086 4 1090 6 744 224 54 2 368 2 55 4 369 6 1093 10 370 2 1094 4 751 30 58 2 377 2 1097 62 1099 2 64 6 65 2 69 8 1101 2 71 26 381 6 73 6 758 12 70 4 1102 6 759 2 760 2 762 4 75 2 1106 4 1108 2 387 6 388 2 391 2 390 2 78 6 766 2 395 2 396 2 80 2 768 2 1113 2 81 2 769 6 775 2 397 2 1121 2 777 6 83 2 400 10 401 14 402 2 1125 8 1126 6 1127 2 87 2 781 6 90 4 1130 2 411 2 1131 244 413 2 416 2 1134 6 95 4 1135 6 418 2 421 14 422 4 787 4 1136 2 96 2 789 2 423 4 425 2 99 4 426 2 427 4 101 2 793 6 794 6 430 8 433 24 1143 98 1144 4 436 4 1146 2 1145 2 106 4 1149 4 110 4 111 8 806 6 441 2 808 8 442 20 1155 2 444 4 114 64 445 14 115 4 1157 2 1158 6 446 430 1160 2 1161 2 449 20 119 4 814 4 813 8 452 2 453 20 816 14 454 2 1170 4 1169 4 819 2 131 386 132 2 1173 2 1175 20 1174 2 820 2 822 8 458 2 823 4 1179 12 137 2 136 6 138 68 141 28 142 198 1182 2 462 2 1184 6 1185 18 464 2 831 2 1187 2 1188 26 1189 92 147 4 465 2 148 6 1190 186 149 6 1191 2 1192 28 837 2 153 18 154 2 1194 4 158 2 469 2 839 2 840 198 161 244 1199 140 163 2 165 2 1203 2 473 198 843 2 842 2 844 6 167 2 1204 4 1205 2 846 14 1208 2 847 430 1210 4 1211 2 169 20 481 4 853 12 482 22 171 6 1215 4 484 4 487 18 488 18 489 2 1219 6 182 2 492 2 493 6 864 2 1224 228 495 4 190 2 867 4 191 2 192 2 1228 4 500 2 503 20 505 26 193 8 1233 90 509 4 510 12 1234 22 194 6 512 2 1235 6 513 2 1240 28 195 4 876 6 515 2 517 6 516 20 518 198 197 2 879 6 519 6 201 6 521 4 206 32 207 2 525 4 884 64 886 2 888 2 527 2 208 2 529 198 1252 4 891 32 532 2 212 26 534 160 533 2 896 6 898 2 535 2 216 192 1255 6 537 134 538 2 1261 30 219 34 540 4 542 10 1263 6 543 28 1264 6 544 2 904 4 546 28 1266 10 548 2 224 4 550 64 227 4 1269 112 552 2 1270 2 910 2 1273 4 557 2 1275 8 1277 6 231 2 1279 2 235 2 915 28 236 2 916 4 565 24 1284 10 567 6 570 6 923 2 242 4 1289 2 925 2 571 62 243 244 244 2 245 2 246 2 573 2 575 2 1296 2 931 12 576 204 578 2 581 2 580 14 934 48 584 134 585 2 586 2 587 6 937 2 1297 6 938 16 939 26 590 198 250 4 591 10 592 4 1299 2 943 8 1301 6 596 6 600 2 256 16 605 4 602 112 607 2 608 2 951 20 1308 334 260 12 1310 2 953 2 613 2 1312 14 261 8 615 52 616 2 1314 2 262 6 958 2 618 84 620 6 621 60 959 6 961 10 962 2 963 120 624 6 625 6 1319 8 269 112 1320 2 1321 2 967 4 272 2 968 4 969 6 274 2 628 6 276 2 277 2 1326 112 1327 2 634 2 636 4 279 6 977 46 1331 2 1332 2 1333 2 1339 10 1340 6 285 6 989 6 1341 2 287 6 652 8 654 2 992 2 289 46 1344 6 1345 2 993 54 994 8 995 6 291 12 996 374 293 12 294 4 296 2 656 2 1348 2 1349 2 998 6 298 2 658 2 1000 2 1351 2 1353 6 662 8 663 28 301 6 302 12 1356 2 1358 68 1359 2 305 4 1003 32 1008 26 1009 108 1363 2 670 8 673 4 1364 2 1015 46 677 6 1369 4 312 32 680 6 313 76 314 8 1018 2 682 14 683 2 684 4 685 8 1021 6 1370 2 1022 4 1024 2 1371 2 686 26 1026 16 688 4 
406 2 44 2 1096 2 1249 1 
406 2 1052 2 
210 2 733 2 
815 2 406 2 1069 2 0 2 455 2 327 2 617 2 
406 2 707 2 617 2 
406 2 617 2 364 2 
757 2 1096 2 210 2 
406 2 617 2 
745 2 210 2 
406 2 1298 2 
1096 2 210 2 988 2 
1096 2 1294 2 506 2 
1096 2 1241 2 524 2 
1096 2 139 2 528 2 
1096 2 1083 2 1006 2 
210 2 984 2 
406 2 61 2 
892 2 506 2 
1241 2 255 2 
639 2 139 2 
1023 2 1083 2 
210 2 1217 2 
1037 2 1083 2 
701 2 139 2 
1241 2 507 2 
506 2 225 2 
1096 2 210 2 988 2 85 2 
1096 2 210 2 988 2 85 2 330 2 
68 2 1096 2 210 2 
1096 2 210 2 1335 2 
692 2 1168 2 1017 2 661 2 
1302 2 172 2 1202 6 1042 2 978 2 288 4 124 2 1122 2 704 4 439 2 56 2 166 2 935 2 340 2 1142 2 157 2 999 2 226 2 
1096 2 1334 2 
815 2 254 2 1069 2 15 2 
815 2 254 2 1069 2 1116 2 327 2 15 2 
815 2 406 2 1069 2 0 2 461 2 617 2 
1322 2 739 2 
815 2 173 2 1069 2 0 2 
320 2 139 2 
1285 2 1083 2 
919 2 506 2 
457 2 1241 2 
1007 2 1241 2 1083 2 
407 2 1241 2 1083 2 
1343 2 1241 2 1083 2 
122 2 1241 2 1083 2 
1069 2 378 2 309 6 815 2 818 2 155 2 657 2 743 6 
1166 2 
764 2 933 2 392 2 474 2 940 2 850 2 594 2 856 2 177 2 697 4 860 2 404 4 1222 2 1047 8 185 2 16 2 1313 2 957 2 341 2 789 2 424 2 790 2 501 4 961 26 870 2 717 2 875 2 720 2 631 8 1245 2 1246 4 38 2 803 2 889 2 440 2 531 2 112 2 890 2 1253 2 980 2 1254 2 118 2 359 2 990 2 1258 4 736 4 1078 2 125 6 900 2 297 2 821 2 551 2 908 2 459 2 228 2 1274 4 304 2 748 2 559 2 1278 2 1186 6 833 2 233 2 63 2 1284 26 922 2 675 4 838 6 1016 2 156 2 311 2 1197 4 761 2 1292 6 1104 4 77 2 
764 2 933 2 392 2 474 2 940 2 850 2 594 2 856 2 177 2 697 6 860 2 404 4 861 2 1222 2 1047 8 185 2 16 2 1313 2 957 2 341 2 789 2 424 2 790 2 501 4 961 26 870 2 717 2 875 2 720 2 881 2 631 8 1245 2 1246 4 800 2 38 2 803 2 531 2 112 2 890 2 1253 2 980 2 1254 2 118 2 359 2 990 2 1258 4 1165 2 736 2 1078 2 125 6 900 2 297 2 821 2 1178 2 551 2 908 2 459 2 228 2 1274 4 748 2 559 2 1278 2 1186 6 833 2 233 2 63 2 672 2 1284 26 922 2 675 4 838 6 1016 2 156 2 311 2 1197 4 761 2 1292 6 1104 4 77 2 
49 2 1238 2 
643 2 
1201 2 1150 4 979 4 894 6 807 2 113 2 895 2 356 2 1336 8 443 2 730 2 589 2 849 2 850 2 771 6 593 2 1300 2 594 2 1043 4 7 10 175 2 949 2 737 2 51 2 858 2 88 4 52 2 821 2 824 2 91 8 1350 4 1085 2 702 4 94 2 954 2 188 2 619 2 748 2 789 2 830 2 961 6 268 2 875 2 719 2 29 2 1284 12 1059 2 922 2 1286 2 675 2 241 2 240 2 383 2 275 4 1246 2 34 2 798 4 1292 4 1025 6 1148 2 
1201 2 1150 4 979 4 894 8 807 2 113 2 356 2 1336 8 443 2 730 2 589 2 850 2 849 2 477 4 771 8 593 2 1300 2 1164 2 594 2 1043 4 7 10 175 2 949 2 737 2 51 2 858 2 129 2 88 4 52 2 821 2 824 2 91 8 1350 4 1085 2 702 4 94 2 188 2 619 2 265 2 748 2 789 2 830 2 961 6 268 2 875 2 719 2 29 2 1284 12 1059 2 922 2 1286 2 675 2 241 2 240 2 383 2 275 4 1246 2 34 2 798 4 1292 4 1025 6 1148 2 
29 2 1043 2 1059 2 175 2 1150 2 240 2 113 2 737 2 619 2 356 2 88 4 798 2 824 2 1025 2 1350 4 771 2 593 2 94 2 
1201 2 1150 4 979 4 894 6 807 2 113 2 895 2 356 2 1336 4 443 2 730 2 849 2 850 2 771 6 593 2 1300 2 594 2 1043 4 7 6 175 2 949 2 737 2 51 2 858 2 129 2 88 4 52 2 821 2 824 2 91 4 1350 4 1085 2 702 4 94 2 954 2 188 2 619 2 748 2 789 2 830 2 961 6 268 2 875 2 719 2 29 2 1284 12 1059 2 922 2 1286 2 675 2 241 2 240 2 383 2 275 4 1246 2 34 2 798 4 1292 4 1025 4 1148 2 
1201 2 1150 4 979 4 894 6 807 2 113 2 895 2 356 2 1336 4 443 2 730 2 849 2 850 2 771 4 593 2 1300 2 594 2 1043 4 7 6 175 2 949 2 737 2 51 2 858 2 88 4 52 2 821 2 824 2 91 4 1350 4 1085 2 702 4 94 2 954 2 188 2 619 2 748 2 789 2 830 2 961 6 268 2 151 2 875 2 719 2 29 2 1284 12 1059 2 922 2 1286 2 675 2 241 2 240 2 383 2 275 4 1246 2 34 2 798 4 1292 4 1025 6 1148 2 
1201 2 1150 4 979 4 894 6 807 2 113 2 895 2 356 2 1336 8 443 2 730 2 589 2 849 2 850 2 771 6 593 2 1300 2 594 2 1043 4 7 6 175 2 949 2 737 2 51 2 858 2 88 4 52 2 821 2 824 2 91 4 1350 4 1085 2 702 4 94 2 954 2 188 2 619 2 748 2 789 2 830 2 961 6 268 2 875 2 719 2 29 2 1284 12 1059 2 922 2 1286 2 675 2 241 2 240 2 383 2 275 4 1246 2 34 2 798 4 1292 4 1025 6 1148 2 
1201 2 1150 4 979 4 894 8 807 2 113 2 895 2 356 2 1336 8 443 2 730 2 589 2 849 2 850 2 771 6 593 2 1300 2 594 2 1043 4 7 10 175 2 949 2 737 2 51 2 858 2 88 4 52 2 821 2 824 2 91 8 1350 4 1085 2 702 4 94 2 954 2 188 2 619 2 748 2 789 2 830 2 961 6 268 2 151 2 875 2 719 2 29 2 1284 12 1059 2 922 2 1286 2 675 2 241 2 240 2 383 2 275 4 1246 2 34 2 798 4 1292 4 1025 8 1148 2 
1201 2 1150 4 979 4 894 6 807 2 113 2 895 2 356 2 1336 8 443 2 730 2 589 2 849 2 850 2 771 6 593 2 1300 2 594 2 1043 4 7 10 175 2 949 2 737 2 51 2 858 2 88 4 52 2 821 2 824 2 91 8 1350 4 1085 2 702 4 94 2 954 2 188 2 619 2 748 2 789 2 830 2 961 6 268 2 875 2 719 2 29 2 1284 12 1059 2 922 2 1286 2 675 2 241 2 240 2 383 2 275 4 1246 2 34 2 798 4 1292 4 1025 6 1148 2 
1201 2 323 2 2 2 168 2 850 2 849 2 6 6 174 6 1043 4 7 2 175 2 177 2 858 2 1046 6 859 2 697 6 180 1 861 2 491 2 11 2 1047 4 702 8 185 2 188 2 1226 2 497 1 1227 1 499 2 712 6 24 2 875 2 719 2 29 2 1059 2 720 2 878 2 1245 2 1246 4 34 2 890 2 728 6 211 2 894 12 1253 12 41 2 895 2 356 2 730 2 1257 6 1258 2 218 2 736 1 1078 2 900 2 737 2 51 2 52 4 221 2 1265 2 1085 4 1087 2 908 2 555 4 556 7 1274 4 371 7 748 2 558 2 372 6 1278 2 234 6 63 2 562 6 1284 46 67 2 922 2 1286 4 240 2 241 2 1287 4 383 2 927 2 74 1 928 6 1292 6 1293 6 1104 4 389 2 764 2 933 4 392 2 940 2 771 4 941 8 772 2 1300 2 593 2 594 2 1303 1 949 2 404 4 1307 1 88 4 409 6 94 2 957 2 619 2 789 2 424 2 961 24 268 2 791 2 275 6 631 4 1325 6 103 2 798 4 637 2 801 2 803 2 108 6 1148 2 638 2 1150 4 979 4 112 2 807 2 113 2 282 6 1336 2 983 6 443 2 447 1 118 2 1162 2 653 1 990 2 1165 2 125 8 297 2 821 2 824 2 1350 4 459 2 1001 2 1183 1 460 2 830 2 1005 10 1186 6 833 2 145 2 151 4 675 4 838 6 1016 2 156 2 311 2 159 2 315 2 1025 8 
1201 2 764 2 323 2 389 2 933 4 392 2 2 2 168 2 589 4 849 2 940 2 850 2 771 8 772 2 941 8 593 2 1300 2 594 2 483 2 174 6 6 6 7 2 1043 4 175 2 177 4 949 2 859 2 1046 6 858 2 697 6 404 4 88 4 861 2 491 2 11 2 409 6 1047 8 702 8 94 2 185 2 188 2 1226 2 957 2 619 2 789 2 499 2 424 2 501 2 712 6 24 2 961 26 268 2 791 2 875 2 719 2 29 2 1059 2 720 2 878 2 275 6 631 8 1325 6 1245 2 1246 4 34 2 103 2 798 4 801 2 637 2 108 6 803 4 1148 2 638 2 979 4 1150 4 211 2 728 6 890 2 112 2 1253 12 894 12 41 2 807 2 113 2 895 2 282 6 983 6 356 2 1336 6 443 2 730 2 118 2 1162 2 1257 6 1258 2 990 2 218 2 1165 2 1078 2 125 8 900 2 737 2 51 2 297 2 52 4 821 2 1265 2 221 2 824 2 1085 4 1350 4 1087 2 908 2 459 2 555 4 1001 2 460 2 1274 4 747 2 558 2 748 2 372 6 1005 10 830 2 1278 2 1186 6 833 2 234 6 145 2 562 6 63 2 67 2 1284 48 922 2 1286 4 675 4 838 6 1287 4 241 2 240 2 383 2 156 2 1016 4 311 2 927 2 159 2 928 6 315 2 1292 6 1293 6 1025 8 1104 4 
1201 2 764 2 323 2 389 2 933 4 392 2 2 2 168 2 589 4 849 2 940 2 850 2 771 8 772 2 941 8 593 2 1300 2 594 2 483 2 174 6 6 6 1043 4 7 6 175 2 177 4 949 2 859 2 1046 6 858 2 697 6 404 4 88 4 861 2 491 2 11 2 409 6 1047 8 91 4 702 8 94 2 185 2 188 2 1226 2 957 2 619 2 789 2 499 2 424 2 501 2 712 6 24 2 961 26 268 2 791 2 875 2 719 2 29 2 1059 2 720 2 878 2 275 6 631 8 1325 6 1245 2 1246 4 34 2 103 2 798 4 801 2 637 2 108 6 803 4 1148 2 638 2 979 4 1150 4 211 2 728 6 890 2 112 2 1253 12 894 12 41 2 807 2 113 2 895 2 282 6 983 6 356 2 1336 6 443 2 730 2 118 2 1162 2 1257 6 1258 2 990 2 218 2 1165 2 1078 2 125 8 900 2 737 2 51 2 297 2 52 4 821 2 1265 2 221 2 824 2 1085 4 1350 4 1087 2 908 2 459 2 555 4 1001 2 460 2 1274 4 747 2 558 2 748 2 372 6 1005 10 830 2 1278 2 1186 6 833 2 234 6 145 2 562 6 63 2 67 2 1284 48 922 2 1286 4 675 4 838 6 1287 4 241 2 240 2 383 2 1016 4 156 2 311 2 927 2 159 2 928 6 315 2 1292 6 1293 6 1025 8 1104 4 
1201 2 323 2 2 2 168 2 850 2 849 2 170 6 483 2 6 12 174 6 7 6 1043 4 175 2 177 4 858 2 1046 12 859 2 697 6 861 2 491 2 11 2 1047 10 12 2 702 8 13 2 185 2 188 2 1226 2 19 2 499 2 501 2 712 12 24 2 875 2 719 2 29 2 1059 2 720 4 878 2 1244 6 1245 2 1246 4 34 2 211 2 890 2 728 6 894 16 1253 10 41 2 895 2 356 2 730 2 1257 6 1258 4 218 2 1076 2 1078 2 900 2 737 2 51 2 903 2 52 4 221 2 1265 2 1085 4 1268 6 1087 2 908 2 555 4 1274 6 747 2 748 2 558 2 372 6 1278 4 234 6 62 6 63 2 562 6 563 6 1284 52 67 2 922 2 1286 4 240 2 241 2 1287 4 383 2 927 2 928 6 1292 6 1293 12 1104 4 389 2 764 4 933 4 392 2 589 4 940 2 771 10 941 8 772 2 1300 2 593 2 594 2 949 2 404 4 88 4 409 12 91 4 94 2 417 6 957 2 619 2 789 2 424 2 961 24 268 2 791 2 428 2 275 6 631 10 1325 6 103 2 798 4 801 2 803 4 108 12 1148 2 638 2 1150 4 979 4 112 2 807 2 113 2 282 6 1336 6 983 6 443 2 811 6 118 2 1162 2 990 2 1165 2 125 12 655 2 129 2 297 2 821 2 824 2 135 6 134 6 1350 4 459 2 1001 2 460 2 830 2 1005 8 1186 8 833 2 145 2 151 2 835 2 675 4 838 8 156 2 1016 4 311 4 159 2 315 2 1025 10 
1201 2 188 2 979 2 1150 4 894 4 895 2 619 2 830 2 1336 6 730 2 589 2 849 2 771 6 1300 2 1284 4 29 2 7 4 1059 2 175 2 949 2 241 2 240 2 737 2 858 2 275 2 88 2 34 2 798 4 824 2 91 4 1025 6 1085 2 1350 2 702 2 1148 2 
1201 2 933 2 392 2 589 2 850 2 940 2 849 2 771 6 1300 2 594 2 7 2 175 2 949 2 858 2 697 6 404 4 88 2 861 2 10 2 610 2 702 2 185 2 188 2 957 2 619 2 789 2 424 2 961 24 875 2 29 2 1059 2 720 3 275 2 1245 2 1246 4 34 2 798 4 637 2 1148 2 1250 2 979 2 1150 4 112 2 890 2 894 4 1253 4 807 2 895 2 1336 6 730 2 118 2 46 2 990 2 1258 3 1165 2 1166 2 1078 2 125 8 900 2 737 2 133 2 821 2 824 2 1085 2 1350 2 908 2 459 2 1274 4 748 2 373 2 1005 2 830 2 1186 6 752 2 833 2 63 2 1284 28 922 2 675 4 838 6 240 2 241 2 678 3 1195 2 156 2 311 3 1292 6 1025 6 1104 4 
1300 2 79 2 1148 2 
1300 2 79 2 1148 2 
322 2 323 2 933 6 392 2 79 2 474 4 589 4 940 2 850 2 771 12 1300 6 594 2 1043 4 7 6 82 2 175 2 177 4 949 2 603 2 697 6 1128 2 334 2 404 4 861 2 88 2 1047 4 91 4 702 4 93 2 185 2 1315 2 957 2 619 2 789 2 424 2 961 16 268 2 875 2 719 2 29 4 1324 4 275 4 520 2 631 4 1245 2 1246 4 798 4 803 4 1148 4 1150 4 979 2 728 2 112 2 890 2 1253 4 894 16 113 2 356 2 1336 6 443 2 730 2 646 2 647 2 357 2 649 4 118 2 1162 2 990 2 1258 2 1165 2 736 2 1078 2 125 2 900 2 129 4 297 4 1176 2 52 4 821 2 997 2 1350 2 1085 4 459 2 555 2 748 2 1005 2 832 2 1186 2 833 2 145 2 1098 2 63 2 151 4 1284 24 922 2 1286 2 675 4 838 2 1287 2 1016 4 156 2 572 2 1292 6 1104 4 1025 12 385 2 
1284 4 50 2 1226 2 555 2 1238 2 211 2 728 2 1253 2 1030 2 1005 2 646 2 1176 2 850 2 357 2 961 2 593 2 300 2 
322 2 323 2 933 6 392 2 79 2 474 4 589 4 940 2 850 2 771 12 1300 6 946 2 594 2 1043 4 7 6 82 2 175 2 177 4 949 2 697 6 1128 2 334 2 404 4 861 2 88 2 1047 4 91 4 702 4 337 2 93 2 185 2 957 2 619 2 789 2 424 2 961 16 268 2 875 2 719 2 29 4 1324 4 348 2 275 4 631 4 1245 2 971 2 1246 4 798 4 803 4 1148 4 979 2 1150 4 728 2 112 2 890 2 1253 2 894 16 113 2 356 2 1336 6 443 2 730 2 646 2 647 2 357 2 649 4 118 2 1162 2 990 2 1258 4 1165 2 1078 2 125 2 900 2 129 4 297 4 1176 2 52 4 821 2 997 2 1350 2 1085 4 1089 2 459 2 748 2 1186 2 833 2 145 2 1098 2 63 2 151 4 1284 24 922 2 1286 4 675 4 838 2 1287 2 383 2 1016 4 156 2 572 4 1292 6 1104 4 1025 12 385 2 
322 2 323 2 933 6 392 2 79 2 474 4 589 4 940 2 850 2 771 12 1300 6 594 2 1043 4 7 6 82 2 175 2 177 4 949 2 697 6 179 2 1128 2 334 2 404 4 861 2 88 2 1047 4 91 4 702 4 93 2 1133 2 185 2 957 2 619 2 789 2 424 2 961 16 268 2 626 2 875 2 719 2 29 4 1324 4 275 4 631 4 1245 2 1246 4 798 4 803 4 1148 4 1150 4 979 2 728 2 112 2 890 2 1253 4 894 16 113 2 356 2 1336 6 443 2 730 2 646 2 647 2 357 2 649 4 118 2 1162 2 990 2 1258 2 1165 2 736 1 1078 2 125 2 900 2 129 4 297 4 1176 2 52 4 821 2 997 2 1350 2 1085 4 459 2 555 2 748 2 1005 2 1186 2 833 2 145 2 1098 2 63 2 151 4 1284 24 922 2 1286 4 675 4 838 2 1287 2 383 2 1103 2 1016 4 156 2 572 2 1292 6 1104 4 1025 12 1373 2 385 2 
1029 16 1031 4 2 2 326 4 1033 2 4 2 1207 18 1209 4 475 2 850 2 851 2 1039 4 480 2 854 4 855 8 1213 2 1040 4 1216 14 857 2 176 4 485 2 178 2 333 2 332 2 697 64 698 2 1218 4 490 2 861 12 1220 2 862 2 1222 2 1047 28 13 2 184 16 1050 2 703 2 16 2 189 2 339 2 1053 8 496 2 19 2 708 2 20 2 709 2 498 4 1055 2 499 2 1229 2 22 16 868 2 714 2 504 22 1230 14 872 4 1232 3 717 12 874 2 873 2 875 2 28 4 1237 4 720 16 514 16 196 2 877 4 1242 14 1243 2 880 2 200 2 723 2 1064 2 882 2 350 2 1245 4 725 2 1246 4 205 2 523 2 726 2 1248 2 1065 2 38 2 1066 2 526 2 1250 2 209 4 890 2 1253 2 893 4 41 2 43 16 897 2 214 4 731 8 1254 2 1072 8 359 2 1074 2 1256 2 734 2 536 2 899 2 1258 19 539 10 1076 2 1077 2 1078 2 1262 3 541 2 900 4 220 2 901 5 1081 4 902 2 903 2 366 4 905 2 223 3 1267 2 1088 4 906 2 553 26 908 2 554 2 909 2 1091 2 1092 2 1274 12 229 2 57 2 748 2 373 2 559 2 749 4 750 4 374 2 59 2 1278 18 913 4 753 1 232 2 63 4 754 2 237 2 756 4 238 2 564 4 1100 8 918 2 1282 2 67 2 1284 90 921 2 922 2 239 4 926 2 927 2 929 2 1292 6 1105 2 1104 32 1295 2 77 2 1107 2 582 2 1109 2 389 4 932 2 764 44 933 2 392 2 393 4 394 2 767 2 940 8 251 2 1115 2 252 4 773 2 594 2 945 2 947 2 595 2 776 6 1120 2 598 4 599 4 84 4 601 2 778 2 779 2 1306 16 604 4 86 6 404 28 89 2 258 8 257 2 782 2 952 4 1309 6 259 6 609 14 410 2 1129 4 610 2 412 4 611 2 1311 8 612 4 784 2 955 2 614 4 1313 2 420 10 957 2 264 4 788 6 1137 2 789 2 266 2 790 2 424 2 961 74 1317 3 267 2 623 16 965 2 270 2 966 2 1140 2 627 8 428 2 633 2 632 2 631 26 970 2 797 2 434 2 435 14 437 2 973 2 974 4 799 12 280 2 975 4 1147 6 802 2 1330 6 281 4 438 4 112 2 805 2 644 2 1151 2 982 2 645 2 809 2 283 4 985 2 1156 2 1338 2 648 2 448 2 118 2 286 2 987 4 450 4 1163 10 451 4 990 8 991 2 1165 12 126 4 1167 28 125 28 655 2 456 4 130 2 1346 10 133 2 297 2 821 2 1177 2 1352 2 1180 2 660 10 140 8 459 2 826 2 1001 2 1361 2 463 2 306 6 144 4 1362 2 1186 14 307 10 833 2 308 8 669 2 150 8 466 2 152 2 1193 2 1366 6 835 2 1014 4 836 4 675 4 676 2 838 14 1368 3 678 2 1196 4 156 2 311 19 679 2 681 8 317 12 687 2 319 2 162 2 1374 2 
932 2 764 6 420 2 1274 2 709 2 374 2 1362 2 1186 2 961 2 1074 2 871 2 1163 4 1258 2 1284 2 720 2 125 2 1262 2 838 2 332 2 311 2 1346 2 280 2 908 2 802 2 
932 2 764 6 420 2 1274 2 709 2 374 2 1362 2 1186 2 961 2 1074 2 871 2 1163 4 1258 2 1284 2 720 2 125 2 1262 2 838 2 332 2 311 2 1346 2 280 2 908 2 802 2 
932 2 764 6 420 2 1274 2 709 2 374 2 1362 2 1186 2 961 2 1074 2 871 2 1163 4 1258 2 1284 2 720 2 125 2 1262 2 838 2 332 2 311 2 1346 2 280 2 908 2 802 2 
665 2 786 2 1029 5 893 2 1112 4 749 2 249 4 375 2 308 2 961 4 1074 2 450 2 755 3 150 2 1281 2 1258 3 1283 4 28 2 271 2 1284 10 125 2 239 2 599 2 486 2 1368 3 1171 4 202 2 1218 2 292 2 86 4 311 3 780 4 681 2 365 2 317 4 223 3 92 2 660 6 908 2 1330 2 
665 2 786 2 1029 4 893 2 1112 4 749 2 249 4 375 2 308 2 961 4 1074 2 450 2 755 2 150 2 1281 2 1258 2 1283 4 28 2 271 2 1284 10 125 2 239 2 599 2 486 2 1368 2 1171 4 202 2 1218 2 292 2 86 4 311 2 780 4 681 2 365 2 1309 2 317 4 223 2 278 2 1088 2 92 2 660 6 908 2 1330 2 
665 2 786 2 1029 4 893 2 1112 4 749 2 249 4 375 2 308 2 961 4 1074 2 450 2 755 2 150 2 1281 2 1258 2 1283 4 28 2 271 2 1284 10 125 2 239 2 599 2 486 2 1368 2 1171 4 202 2 1218 2 292 2 86 4 311 2 780 4 681 2 365 2 1309 2 317 4 223 2 278 2 1088 2 92 2 660 6 908 2 1330 2 
665 2 786 2 1029 4 893 2 1112 4 749 2 249 4 375 2 308 2 961 4 1074 2 450 2 755 2 150 2 1281 2 1258 2 1283 4 28 2 271 2 1284 10 125 2 239 2 599 2 486 2 1368 2 1171 4 202 2 1218 2 292 2 86 4 311 2 780 4 681 2 365 2 1309 2 317 4 223 2 278 2 1088 2 92 2 660 6 908 2 1330 2 
665 2 786 2 1029 4 893 2 1112 4 749 2 249 4 375 2 308 2 961 4 1074 2 450 2 755 2 150 2 1281 2 1258 2 1283 4 28 2 271 2 1284 10 125 2 239 2 599 2 486 2 1368 2 1171 4 202 2 1218 2 292 2 86 4 311 2 780 4 681 2 365 2 1309 4 317 4 223 2 278 4 1088 4 92 2 660 6 908 2 1330 2 
1229 2 547 2 324 2 924 2 508 2 468 2 
828 2 471 2 324 2 716 2 1329 2 717 2 917 2 
186 2 1225 2 664 1 911 2 785 1 338 1 1276 2 230 2 284 1 1095 2 116 2 502 1 1316 2 961 8 1075 2 875 2 1284 10 795 2 1123 2 273 2 1141 2 1172 2 204 2 1293 2 887 2 865 2 
1029 16 788 4 749 6 1209 2 308 6 961 6 770 2 773 2 150 6 1013 2 1284 6 253 2 28 6 1323 2 817 2 239 6 877 2 599 2 778 2 403 2 1218 6 606 2 86 4 681 6 1347 4 317 12 1309 5 278 2 1088 2 321 2 
640 2 583 2 1304 2 429 2 199 2 362 2 1153 2 1112 2 780 2 249 2 986 2 1280 2 1251 2 
1284 1 920 2 640 6 583 2 1304 2 936 1 429 4 199 2 362 2 1153 2 1112 2 780 2 249 2 961 1 986 2 1280 2 66 2 1251 2 
920 2 640 6 583 2 1304 2 429 4 199 2 362 4 1153 2 1112 2 780 2 249 2 986 4 1280 4 66 2 1251 2 
1284 1 920 6 640 10 583 2 1304 2 936 1 429 4 199 2 362 8 1153 2 1112 2 780 2 249 2 961 1 986 8 1280 8 66 8 1251 2 
940 2 1117 2 990 2 1214 2 736 2 900 2 697 2 404 2 1047 2 907 2 961 6 964 2 1012 2 1284 6 627 1 1104 2 1027 1 
1214 2 1165 2 1284 6 900 2 697 4 404 2 861 2 940 2 961 6 1047 2 1104 2 1117 2 907 2 964 2 1012 2 990 2 
1165 2 1284 6 900 2 697 4 33 2 404 2 861 2 940 2 961 6 1047 2 1104 2 1117 2 907 2 964 2 1012 2 990 2 
1214 2 1165 2 1284 8 736 2 900 2 697 4 404 2 861 2 940 2 961 8 1047 2 1104 2 1372 2 162 2 184 2 1117 2 907 2 964 2 1012 2 990 2 
117 2 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 
109 1 1010 1 98 1 1011 1 299 1 1200 1 

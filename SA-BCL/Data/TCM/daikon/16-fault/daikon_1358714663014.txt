#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 211 (114,186) 290 48 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 301 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 135 286 727 642 709 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 80 80 864 629 514 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 864 629 514 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.ModBitTracker:num_sets()I
daikon.ProglangType:isScalar()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:lexGT([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_60()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3_13()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3R_62()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_81()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:eltsGTE([II)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([J)[J
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.InvMap:InvMap()V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_85()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type; | CONSTANT | 44760 | 0 -> -1
daikon.Quant:eq(DD)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaCharStream:BeginToken()C
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:concat([I[I)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_116()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | RETURN | 28404 | return null
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_2_30(I)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:union([I[I)[I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_77()Z | STATEMENT | 172318 | stmt -> ;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_53()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:slice([III)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_2_10(I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_12(I)Z
daikon.Ppt:Ppt()V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:Node()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:sum([D)D
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isArray()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:eltwiseGT([I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptSlice0:arity()I
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(D[F)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([I)[I | ASSIGN | 15925 | = null
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant:logDetail()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.PptSlice1:arity()I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_119()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_148()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Debug:logOn()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22110 | stmt -> ;
daikon.ValueTuple:size()I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.Debug:logDetail()Z
daikon.VarInfo:relate_var()V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3_27()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_87()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptSlice2:arity()I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:baseIsScalar()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_120()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:memberOf(I[I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:gte(II)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.ModBitTracker:split(I)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_2_27(I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_25()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Invariant:justified()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3R_57()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_2_35(I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_3R_68()Z
daikon.ProglangType:dimensions()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z | CONDITION | 1839 | if (x) -> if (!x)
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3_15()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13963 | = null
jtb.JavaParser:jj_3_10()Z
utilMDE.MathMDE:pow(II)I
daikon.diff.RootNode:RootNode()V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaCharStream:getEndLine()I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:hashCode()I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:subsetOf([F[D)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_2_15(I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:noDuplicates([I)Z | CONDITION | 57307 | if (x) -> if (!x)
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3_12()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10682 | = null
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3_5()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_35()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_2_29(I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:PrimarySuffix()Ljtb.syntaxtree.PrimarySuffix;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_samples()I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | ASSIGN | 17372 | = null
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([I[I)Z
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.ProglangType:isIntegral()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_54()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_50()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3_29()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_28(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3_22()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3_30()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptName:isEnterPoint()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
644 2 423 2 334 2 466 2 311 2 172 2 144 2 895 2 27 4 
738 2 336 2 783 2 604 6 930 2 63 2 981 2 557 6 598 2 509 2 318 6 
320 2 98 6 144 2 895 2 50 4 631 2 81 4 507 2 986 2 586 6 861 2 639 6 667 6 
621 2 926 4 144 2 48 2 895 2 323 2 290 4 790 2 748 2 225 2 665 2 463 2 617 2 717 2 186 2 211 4 114 4 
97 4 367 6 
656 2 
683 2 23 2 914 2 192 2 946 2 412 2 837 2 756 2 377 2 
465 4 497 6 621 4 926 8 501 2 290 8 790 2 609 2 748 14 225 4 152 5 475 6 186 4 990 4 576 4 211 12 114 8 
301 2 300 2 302 4 499 2 958 2 452 2 58 2 76 2 729 2 857 6 387 2 82 2 229 2 809 2 495 2 734 2 
385 2 67 2 110 2 656 2 816 2 437 2 338 2 29 2 687 2 866 2 
380 2 760 2 260 2 262 2 423 2 365 2 266 2 109 2 299 2 201 2 302 2 303 2 436 2 515 2 469 2 595 2 663 2 859 2 860 4 666 2 908 2 521 2 
691 8 497 6 96 4 290 20 421 2 323 4 673 2 225 16 562 2 990 12 114 20 814 4 465 4 621 16 118 12 926 20 144 4 894 6 895 4 149 4 628 2 748 35 1006 2 152 14 475 6 717 4 867 4 186 16 870 4 211 32 576 4 723 6 
301 2 302 2 495 2 
319 2 694 22 236 2 669 2 382 2 161 2 805 2 134 2 183 2 634 2 560 2 544 2 640 10 115 2 
872 2 258 2 603 2 384 2 502 2 504 2 877 2 5 2 9 2 14 2 883 19 616 1 887 2 733 2 141 2 737 4 399 2 19 1 620 2 274 1 623 1 893 12 741 2 144 30 895 32 896 2 277 6 148 2 150 2 281 2 154 3 418 1 159 4 425 2 529 2 769 2 655 2 431 1 771 3 45 2 532 26 777 2 778 1 659 2 171 3 172 2 533 25 781 2 660 4 175 14 177 1 306 14 929 2 53 2 312 2 185 2 314 3 798 2 451 2 57 2 670 2 453 2 455 2 59 5 948 2 558 2 676 19 198 4 810 1 68 2 952 2 812 2 679 2 464 2 682 2 73 2 959 3 78 2 342 2 830 2 80 2 348 2 474 2 971 4 212 1 479 1 480 6 843 2 974 2 216 3 359 2 582 2 362 3 982 1 698 2 847 3 483 3 989 2 701 1 231 2 850 2 851 2 995 1 486 14 706 1 856 2 122 6 597 1 376 2 123 2 858 6 247 2 494 2 1012 1 
296 2 
951 2 895 2 
895 4 924 2 77 2 
496 8 254 4 498 2 1 42 2 4 3 2 4 2 261 2 728 6 12 2 508 12 731 48 16 4 735 48 276 2 746 16 747 2 280 4 752 4 753 28 32 2 759 36 285 2 287 2 288 4 35 2 524 2 525 8 765 6 526 2 40 48 772 2 776 4 47 20 534 2 784 14 788 4 49 14 308 2 536 2 52 8 537 8 792 4 538 2 54 48 543 16 542 2 545 48 799 4 800 2 56 2 321 2 550 4 551 4 803 2 61 2 553 2 555 2 325 2 326 2 806 2 807 2 808 2 66 2 559 20 811 2 561 4 331 2 332 48 813 2 72 2 817 8 820 2 74 2 341 8 566 4 343 4 833 2 834 2 573 2 349 36 838 4 91 14 93 146 842 2 100 20 356 2 581 4 102 2 363 8 364 22 584 186 112 22 111 2 849 2 588 2 116 14 117 48 119 8 120 4 853 48 591 4 854 2 592 2 373 2 596 22 862 4 127 2 600 2 378 2 379 6 873 2 130 2 875 26 610 2 611 2 881 146 136 48 884 2 615 146 395 8 397 8 891 8 892 2 625 2 145 4 401 2 627 4 403 2 407 8 410 4 411 4 904 2 153 2 638 2 157 48 415 2 417 2 419 4 916 4 163 48 422 4 648 4 649 2 650 6 919 2 427 48 920 2 428 6 430 2 922 2 169 8 925 2 439 2 661 48 933 2 442 26 664 2 937 2 938 4 447 2 941 2 189 2 450 4 671 2 672 2 944 2 193 2 457 2 674 2 459 2 461 2 675 2 949 2 462 4 197 10 953 2 199 2 200 2 954 2 202 2 960 2 470 2 471 2 206 2 963 2 208 4 688 2 478 2 213 4 695 4 482 14 696 6 975 2 218 4 699 38 988 2 987 2 230 2 991 2 992 2 993 24 233 2 235 4 996 2 240 4 490 10 241 2 999 2 1001 16 244 2 710 4 493 2 716 2 718 2 249 2 251 2 
65 2 786 2 393 2 220 1 
522 2 786 2 
0 2 165 2 302 2 513 2 912 2 530 2 786 2 
530 2 786 2 897 2 
880 2 530 2 786 2 
438 2 477 2 393 2 
530 2 786 2 
449 2 438 2 
485 2 786 2 
438 2 454 2 393 2 
25 2 574 2 393 2 
467 2 90 2 393 2 
518 2 205 2 393 2 
39 2 612 2 393 2 
512 2 438 2 
224 2 786 2 
964 2 574 2 
467 2 371 2 
205 2 309 2 
39 2 173 2 
438 2 138 2 
39 2 520 2 
965 2 205 2 
467 2 927 2 
574 2 945 2 
438 2 454 2 259 2 393 2 
438 2 454 2 259 2 393 2 188 2 
438 2 552 2 393 2 
438 2 393 2 980 2 
22 2 215 2 985 2 41 2 
70 2 353 2 694 6 131 4 435 2 305 2 819 2 764 2 743 2 825 4 826 2 844 2 517 2 125 2 184 2 317 2 795 2 869 2 
239 2 393 2 
302 2 167 2 94 2 912 2 
0 2 302 2 167 2 223 2 94 2 912 2 
302 2 513 2 912 2 530 2 786 2 876 2 
760 2 915 2 
302 2 513 2 912 2 237 2 
108 2 205 2 
39 2 85 2 
313 2 574 2 
414 2 467 2 
39 2 124 2 467 2 
39 2 346 2 467 2 
39 2 467 2 24 2 
39 2 467 2 392 2 
912 2 677 2 888 2 302 2 658 2 203 6 900 2 541 6 
438 2 575 2 
425 2 
602 2 384 2 877 2 605 2 132 2 9 6 11 2 14 2 733 2 737 4 142 2 399 2 19 2 20 2 890 2 620 2 893 6 740 2 144 26 742 2 895 26 277 6 148 2 28 2 279 4 151 2 755 2 159 4 162 2 293 4 294 2 297 2 429 2 655 2 773 2 532 6 172 2 533 4 781 2 660 4 782 2 929 2 932 2 53 2 312 2 57 2 453 2 198 4 952 2 679 2 73 8 468 2 78 2 339 2 828 4 80 2 474 2 87 2 480 2 974 2 359 2 582 2 977 2 583 2 701 2 121 2 238 2 489 2 856 2 122 4 376 2 123 2 858 2 720 2 
602 2 384 2 877 2 605 2 132 2 9 6 14 2 733 2 737 4 142 2 399 2 19 2 20 2 890 2 620 2 893 6 740 2 144 26 742 2 895 26 277 6 148 2 28 2 279 4 151 2 30 2 755 2 909 2 159 4 162 2 293 4 294 2 429 2 655 2 773 2 532 6 172 2 533 4 781 2 660 4 929 2 932 2 53 2 312 2 57 2 453 2 558 1 198 4 68 1 952 2 679 2 73 8 468 2 78 2 339 2 828 4 832 2 80 2 474 2 87 2 480 2 974 2 359 2 582 2 977 2 845 2 583 2 701 2 121 2 238 2 489 2 856 2 122 5 376 2 123 2 858 2 720 2 
488 2 
556 2 51 2 
724 2 943 8 668 2 190 2 549 2 604 6 458 2 324 2 133 2 195 4 557 6 730 4 678 2 950 2 198 2 391 2 17 2 270 2 736 2 815 2 400 2 738 2 335 4 336 4 144 6 146 4 744 2 895 12 277 4 689 8 907 2 351 2 282 4 34 2 974 2 357 2 359 2 917 2 164 2 105 2 369 2 587 10 368 2 590 2 781 2 783 2 660 2 705 2 174 4 928 2 929 2 931 2 930 4 856 2 53 2 1005 2 1007 2 312 2 939 2 318 6 
724 2 943 8 190 2 549 2 604 8 458 2 324 2 133 2 195 4 730 4 557 6 678 2 950 2 198 2 391 2 18 4 17 2 270 2 815 2 736 2 400 2 738 2 335 4 336 4 144 6 146 4 744 2 895 12 277 4 344 2 689 8 907 2 351 2 282 4 34 2 974 2 357 2 359 2 917 2 164 2 981 2 105 2 369 2 587 10 368 2 923 2 590 2 781 2 660 2 783 2 705 2 174 4 928 2 929 2 931 2 930 4 856 2 53 2 1007 2 312 2 939 2 318 8 
815 2 736 2 549 2 336 2 705 2 604 2 930 2 931 2 458 2 324 2 917 2 164 2 195 2 730 4 557 2 105 2 939 2 282 4 
724 2 943 4 668 2 190 2 549 2 604 6 458 2 324 2 133 2 195 4 557 4 730 4 678 2 950 2 198 2 391 2 17 2 270 2 736 2 815 2 400 2 738 2 335 4 336 4 144 6 146 4 744 2 895 12 277 4 689 4 907 2 351 2 282 4 34 2 974 2 357 2 359 2 917 2 164 2 981 2 105 2 369 2 587 6 368 2 590 2 781 2 660 2 705 2 174 4 928 2 929 2 931 2 930 4 856 2 53 2 1005 2 1007 2 312 2 939 2 318 6 
724 2 943 4 668 2 190 2 549 2 604 4 458 2 324 2 133 2 195 4 557 6 730 4 678 2 509 2 950 2 198 2 391 2 17 2 270 2 736 2 815 2 400 2 738 2 335 4 336 4 144 6 146 4 744 2 895 12 277 4 689 4 907 2 351 2 282 4 34 2 974 2 357 2 359 2 917 2 164 2 105 2 369 2 587 6 368 2 590 2 781 2 660 2 705 2 174 4 928 2 929 2 931 2 930 4 856 2 53 2 1005 2 1007 2 312 2 939 2 318 6 
724 2 943 8 668 2 190 2 549 2 604 6 458 2 324 2 133 2 195 4 557 6 730 4 678 2 950 2 198 2 391 2 17 2 270 2 736 2 815 2 400 2 738 2 335 4 336 4 144 6 146 4 744 2 895 12 277 4 689 4 907 2 351 2 282 4 34 2 974 2 357 2 359 2 917 2 164 2 105 2 369 2 587 6 368 2 590 2 781 2 783 2 660 2 705 2 174 4 928 2 929 2 931 2 930 4 856 2 53 2 1005 2 1007 2 312 2 939 2 318 6 
724 2 943 8 668 2 190 2 549 2 604 6 458 2 324 2 133 2 195 4 557 8 730 4 678 2 509 2 950 2 198 2 391 2 17 2 270 2 736 2 815 2 400 2 738 2 335 4 336 4 144 6 146 4 744 2 895 12 277 4 689 8 907 2 351 2 282 4 34 2 974 2 357 2 359 2 917 2 164 2 105 2 369 2 587 10 368 2 590 2 781 2 783 2 660 2 705 2 174 4 928 2 929 2 931 2 930 4 856 2 53 2 1005 2 1007 2 312 2 939 2 318 8 
724 2 943 8 668 2 190 2 549 2 604 6 458 2 324 2 133 2 195 4 557 6 730 4 678 2 950 2 198 2 391 2 17 2 270 2 736 2 815 2 400 2 738 2 335 4 336 4 144 6 146 4 744 2 895 12 277 4 689 8 907 2 351 2 282 4 34 2 974 2 357 2 359 2 917 2 164 2 105 2 369 2 587 10 368 2 590 2 781 2 783 2 660 2 705 2 174 4 928 2 929 2 931 2 930 4 856 2 53 2 1005 2 1007 2 312 2 939 2 318 6 
724 2 256 4 9 6 730 4 13 1 264 2 509 4 14 2 17 2 733 2 270 2 737 4 736 2 20 2 738 4 744 2 277 6 28 2 278 6 282 4 34 2 766 2 38 1 296 6 298 6 775 2 532 8 533 2 780 2 781 2 53 2 310 2 312 2 793 2 318 12 55 1 57 2 549 2 324 2 557 8 558 2 68 2 71 1 815 2 335 4 336 4 73 4 337 2 822 2 565 6 78 2 339 4 340 6 77 6 827 2 828 4 80 2 351 2 92 2 357 2 101 2 359 2 103 2 582 2 105 2 369 2 368 2 848 6 587 2 590 2 593 6 372 10 856 2 122 6 123 2 376 2 858 2 126 6 868 2 384 12 604 4 877 2 132 2 608 6 386 6 133 2 614 4 391 2 619 2 399 2 398 2 620 2 400 2 893 6 144 24 146 8 895 46 148 2 630 1 408 2 902 6 903 6 907 4 158 2 159 4 917 2 643 2 164 2 652 6 921 2 429 2 655 2 172 2 660 4 174 6 929 2 928 2 931 2 930 4 178 6 181 2 182 2 939 2 943 2 190 2 453 2 456 7 458 2 195 4 678 4 198 4 950 2 951 6 952 2 679 2 957 2 686 7 473 2 474 2 967 1 970 8 972 1 480 2 214 2 974 2 977 2 979 2 221 2 226 2 700 2 232 2 994 2 234 2 705 2 708 1 1005 2 245 2 1007 2 1008 1 
724 2 256 4 384 12 604 8 877 2 132 2 608 6 386 6 133 2 730 4 9 6 264 2 14 4 614 4 391 2 17 2 733 2 270 2 619 2 736 2 737 4 398 2 20 2 399 2 620 2 738 4 400 2 893 6 144 26 146 8 744 2 895 48 277 6 148 2 28 2 278 6 408 2 903 6 902 6 907 4 282 4 34 2 158 2 159 4 643 2 917 2 766 2 164 2 293 2 296 6 652 6 921 2 298 6 429 2 655 4 775 2 532 8 780 2 533 2 172 2 781 2 783 4 660 4 174 6 928 2 929 2 930 4 931 2 178 6 53 2 310 2 181 2 793 2 182 2 312 2 939 2 318 12 943 6 190 2 57 2 549 2 453 2 458 2 324 2 195 4 557 8 558 2 678 4 950 2 198 4 951 6 68 2 952 4 563 2 679 2 815 2 957 2 335 4 73 8 336 4 337 2 822 2 565 6 827 2 77 6 340 6 339 4 78 2 829 2 828 4 473 2 80 2 474 2 351 2 92 2 970 8 480 2 214 2 974 2 101 2 357 2 103 2 359 2 979 2 977 2 582 2 221 2 226 2 105 2 700 2 587 2 848 6 368 2 369 2 232 2 590 2 994 2 234 2 705 2 593 6 372 10 856 2 1005 2 122 6 376 2 123 2 245 2 858 2 1007 2 126 6 868 2 
724 2 256 4 384 12 604 8 877 2 132 2 608 6 386 6 133 2 9 6 730 4 264 2 14 4 614 4 391 2 17 2 733 2 270 2 619 2 736 2 737 4 398 2 20 2 399 2 620 2 738 4 400 2 893 6 144 26 146 8 744 2 895 48 277 6 148 2 28 2 278 6 408 2 903 6 902 6 907 4 282 4 34 2 158 2 159 4 643 2 917 2 766 2 164 2 293 2 296 6 652 6 921 2 298 6 429 2 655 4 775 2 532 8 780 2 533 2 172 2 781 2 783 4 660 4 174 6 928 2 929 2 930 4 931 2 178 6 53 2 310 2 181 2 793 2 182 2 312 2 939 2 318 12 943 6 190 2 57 2 549 2 453 2 458 2 324 2 195 4 557 8 558 2 678 4 950 2 198 4 951 6 68 2 952 4 563 2 679 2 815 2 957 2 335 4 73 8 336 4 337 2 822 2 565 6 827 2 77 6 340 6 339 4 78 2 829 2 828 4 473 2 80 2 474 2 689 4 351 2 92 2 970 8 480 2 214 2 974 2 101 2 357 2 103 2 359 2 979 2 977 2 582 2 221 2 226 2 105 2 700 2 848 6 368 2 587 6 369 2 232 2 590 2 994 2 234 2 705 2 593 6 372 10 856 2 1005 2 122 6 376 2 123 2 245 2 858 2 1007 2 126 6 868 2 
724 2 256 4 726 6 730 4 9 8 264 2 14 4 509 2 510 2 17 2 733 2 270 2 737 4 736 2 20 4 738 4 744 2 277 6 28 2 278 6 282 4 34 2 766 2 293 2 296 12 298 6 44 6 775 2 532 12 533 4 780 2 781 2 783 4 53 2 310 2 312 2 793 2 318 16 57 2 549 2 62 2 324 2 557 10 558 2 68 2 563 2 330 6 815 2 335 4 336 4 73 10 337 2 822 2 565 12 78 2 339 4 340 6 77 12 827 2 829 2 828 6 80 2 351 2 836 6 92 2 841 2 577 6 357 2 101 2 359 2 103 2 582 2 105 2 369 2 587 6 368 2 848 12 590 2 593 6 372 8 856 2 122 6 123 2 376 2 858 4 126 6 868 2 384 10 604 10 877 2 132 2 608 6 386 6 133 2 882 2 614 4 391 2 619 2 399 2 398 2 620 2 400 2 893 8 144 24 146 8 626 2 895 52 148 2 902 6 903 12 905 6 907 4 158 2 159 4 917 2 643 2 164 2 918 2 652 6 921 2 429 4 655 4 172 2 660 4 174 6 929 2 928 2 931 2 930 4 178 6 181 2 182 2 445 2 939 2 940 6 943 6 190 2 453 2 458 2 195 4 678 4 950 2 198 4 951 12 952 4 679 2 957 2 473 2 474 2 689 4 690 2 970 8 480 4 214 2 481 6 974 2 977 2 979 2 221 2 981 2 226 2 700 2 232 2 994 2 234 2 705 2 1005 2 711 6 245 2 1007 2 
724 2 943 6 34 2 604 6 357 2 917 2 164 2 730 2 557 6 105 2 391 2 17 2 368 2 587 4 369 2 270 2 815 2 736 2 738 2 400 2 335 2 336 4 783 2 174 2 146 2 895 4 931 2 930 4 1005 2 1007 2 689 4 939 2 318 4 351 2 282 2 
724 2 384 4 604 6 877 2 606 2 132 2 7 2 730 2 9 6 887 2 391 2 17 2 733 2 270 2 736 2 737 4 143 2 399 2 620 2 738 2 400 2 893 6 144 24 146 2 744 2 895 28 277 6 148 2 408 2 281 2 901 3 282 2 34 2 159 4 917 2 164 2 425 2 532 8 172 2 533 3 781 2 783 2 660 4 174 2 929 2 930 4 931 2 53 2 180 2 312 2 939 2 318 4 943 6 57 2 453 2 557 6 558 2 198 4 68 2 679 2 815 2 682 2 335 2 336 4 684 2 78 2 339 2 828 4 80 2 474 2 351 2 480 3 974 2 357 2 359 2 582 2 977 2 105 2 368 2 369 2 587 2 372 2 856 2 1005 2 122 6 376 2 123 2 858 3 1007 2 
601 2 1007 2 270 2 
601 2 1007 2 270 2 
601 2 256 2 384 4 604 12 877 2 132 2 9 2 730 2 14 4 509 4 614 2 733 2 270 6 737 4 736 2 399 2 620 2 738 4 893 2 740 4 144 16 147 2 146 4 895 24 277 6 148 2 28 4 404 2 406 2 750 2 635 2 907 4 282 2 757 2 910 2 159 4 917 2 655 4 532 2 780 2 172 2 533 2 781 2 660 4 783 4 174 4 928 2 929 2 930 4 178 2 53 2 181 2 312 2 318 16 943 6 57 2 549 2 453 2 324 2 195 4 557 12 558 2 678 2 950 2 198 4 68 2 69 4 952 4 679 2 335 2 73 4 336 4 821 2 78 2 339 6 80 2 570 2 689 4 86 2 476 2 89 2 692 2 95 2 974 2 357 2 103 2 359 2 582 2 977 2 981 4 105 4 587 6 368 2 590 2 372 2 856 2 1004 2 122 6 376 2 123 2 1007 4 715 2 1009 4 1011 2 
33 2 95 2 802 2 304 2 384 2 144 2 822 2 895 4 51 2 372 2 458 2 178 2 312 2 614 2 89 2 1011 2 92 2 
253 2 601 2 256 2 384 2 604 12 877 2 132 2 133 2 9 2 730 2 14 4 509 4 733 2 270 6 737 4 736 2 399 2 620 2 738 4 893 2 740 4 144 16 146 4 147 2 895 24 277 6 148 2 28 4 404 2 750 2 635 2 907 4 282 2 757 2 159 4 917 2 655 4 168 2 532 2 780 2 172 2 533 4 781 2 660 4 783 4 174 4 928 2 929 2 930 4 178 2 53 2 181 2 312 2 540 2 318 16 943 6 57 2 549 2 453 2 324 2 195 4 557 12 558 2 678 4 950 2 198 4 68 2 69 4 952 4 679 2 335 2 73 4 336 4 821 2 78 2 339 6 209 2 80 2 689 4 476 2 89 2 692 2 95 2 974 2 357 2 103 2 359 2 217 2 582 2 977 2 981 4 105 4 587 6 368 2 590 2 856 2 1004 4 122 6 376 2 123 2 1007 4 715 2 1009 4 1011 2 
601 2 256 2 384 4 604 12 877 2 132 2 133 2 9 2 730 2 389 2 14 4 509 4 614 2 733 2 270 6 737 4 736 2 399 2 620 2 738 4 893 2 740 4 144 16 147 2 146 4 895 24 277 6 148 2 28 4 404 2 750 2 635 2 907 4 282 2 757 2 159 4 917 2 292 2 655 4 532 2 46 2 780 2 172 2 533 2 781 2 660 4 783 4 174 4 928 2 929 2 930 4 178 2 53 2 181 2 935 2 312 2 318 16 943 6 57 2 549 2 453 2 324 2 195 4 557 12 558 2 678 4 950 2 198 4 68 2 69 4 952 4 679 2 335 2 73 4 336 4 821 2 823 2 78 2 339 6 80 2 689 4 476 2 89 2 692 2 95 2 974 2 357 2 103 2 359 2 582 2 977 2 981 4 105 4 587 6 368 2 590 2 372 2 856 2 1004 2 122 6 376 2 123 2 1007 4 715 2 1009 4 1011 2 
64 2 6 2 709 2 727 2 291 2 286 2 409 2 135 2 840 2 895 2 642 2 
839 2 480 3 99 1 322 2 697 2 104 2 9 2 460 2 227 2 885 4 429 6 889 2 770 2 434 2 532 2 893 2 533 3 144 2 895 2 828 2 443 2 858 3 474 2 936 3 1010 2 
839 2 480 2 322 2 697 2 104 2 9 2 460 2 227 2 885 4 429 6 889 2 770 2 434 2 532 2 893 2 533 2 144 2 895 2 828 2 443 2 858 2 474 2 936 2 1010 2 
839 2 480 2 322 2 697 2 104 2 9 2 460 2 227 2 885 4 429 6 889 2 770 2 434 2 532 2 893 2 533 2 144 2 895 2 828 2 443 2 858 2 474 2 936 2 1010 2 
96 2 913 6 763 2 160 4 420 2 607 2 290 2 879 2 527 4 225 2 506 2 651 4 227 2 732 2 140 2 990 2 114 2 774 2 681 2 621 2 532 2 926 2 486 2 533 3 275 2 624 3 144 4 894 4 306 2 895 10 594 2 1003 4 242 3 748 5 858 3 474 2 186 2 794 4 250 3 211 4 
96 2 913 6 763 2 160 4 420 2 607 2 290 2 879 2 527 4 225 2 506 2 651 4 227 2 562 2 732 2 140 2 990 2 114 2 774 2 681 2 621 2 118 2 532 2 926 2 486 2 533 2 275 2 624 2 144 4 894 4 306 2 895 10 594 2 1003 4 242 2 748 4 858 2 152 2 474 2 186 2 794 4 250 2 211 4 
96 2 913 6 763 2 160 4 420 2 607 2 290 2 879 2 527 4 225 2 506 2 651 4 227 2 562 2 732 2 140 2 990 2 114 2 774 2 681 2 621 2 118 2 532 2 926 2 486 2 533 2 275 2 624 2 144 4 894 4 306 2 895 10 594 2 1003 4 242 2 748 4 858 2 152 2 474 2 186 2 794 4 250 2 211 4 
96 2 913 6 763 2 160 4 420 2 607 2 290 2 879 2 527 4 225 2 506 2 651 4 227 2 562 2 732 2 140 2 990 2 114 2 774 2 681 2 621 2 118 2 532 2 926 2 486 2 533 2 275 2 624 2 144 4 894 4 306 2 895 10 594 2 1003 4 242 2 748 4 858 2 152 2 474 2 186 2 794 4 250 2 211 4 
96 2 913 6 763 2 160 4 420 2 607 2 290 2 879 2 527 4 225 2 506 2 651 4 227 2 562 4 732 2 140 2 990 2 114 2 774 2 681 2 621 2 118 4 532 2 926 2 486 2 533 2 275 2 624 2 144 4 894 4 306 2 895 10 594 2 1003 4 242 2 748 4 858 2 152 4 474 2 186 2 794 4 250 2 211 4 
898 2 170 2 571 2 487 2 267 2 374 2 
898 2 955 2 831 2 846 2 489 2 440 2 269 2 
911 2 257 2 976 1 194 1 359 2 360 2 8 2 729 1 388 2 585 2 327 1 106 2 531 2 848 2 300 1 144 8 961 2 895 10 441 2 516 2 899 2 568 2 444 2 712 2 713 2 865 2 
448 2 691 2 497 4 96 2 289 2 290 6 673 1 804 2 225 6 562 2 990 6 814 2 114 6 465 2 621 6 118 3 739 2 926 6 622 2 144 6 894 4 824 2 370 2 895 6 748 15 152 4 966 2 446 2 186 6 211 12 723 4 
416 2 852 2 998 2 381 2 144 1 60 2 160 2 204 2 895 1 855 4 358 1 10 7 527 2 651 2 835 2 84 2 886 2 187 2 
416 4 852 2 998 2 381 4 60 4 160 2 204 2 855 4 10 6 527 2 651 2 835 2 84 2 886 2 187 2 
416 8 852 6 998 2 381 8 144 1 60 8 160 2 204 2 895 1 855 4 358 1 10 10 527 2 651 2 835 2 84 2 886 2 187 8 
416 2 998 2 381 2 60 2 160 2 204 2 855 2 10 2 527 2 651 2 835 2 84 2 886 2 
871 26 129 2 874 2 500 4 383 6 725 6 263 6 505 4 265 6 390 4 613 18 15 6 137 2 268 4 511 4 139 50 271 2 396 4 272 4 737 108 273 2 21 2 514 2 144 126 895 138 402 6 629 2 405 8 749 3 632 8 633 8 751 4 906 6 637 12 155 4 413 4 283 10 641 6 156 6 758 24 761 2 762 90 159 84 37 6 424 92 645 4 166 12 647 6 295 6 426 6 767 4 43 4 42 42 433 84 657 6 779 2 662 2 785 24 176 6 535 8 307 12 789 10 791 6 179 6 539 4 934 8 315 6 316 6 796 24 546 2 942 6 548 4 801 2 191 24 453 14 554 6 558 56 328 6 68 56 333 2 564 4 956 4 818 9 75 2 472 6 207 12 567 14 79 20 80 8 569 6 345 26 347 2 210 12 350 6 969 8 968 90 352 6 578 4 579 24 580 24 978 4 219 4 361 116 222 8 984 24 107 2 366 42 113 4 484 10 704 2 997 4 707 10 1000 4 243 4 375 2 122 234 123 14 492 1 246 6 599 32 248 2 864 2 719 13 252 30 722 6 128 6 
942 2 548 4 255 6 383 2 453 2 503 2 725 2 878 2 947 2 263 2 196 2 558 2 505 2 328 2 68 2 329 2 618 2 394 2 737 20 680 2 514 2 144 44 26 2 895 46 685 4 402 2 962 2 745 2 567 2 629 2 405 2 749 2 80 2 633 2 83 2 572 2 519 2 210 4 31 2 754 2 636 2 637 4 88 4 283 2 969 2 352 2 693 2 284 2 523 2 973 4 36 2 354 2 355 2 159 20 580 2 37 2 361 6 983 2 166 4 984 2 646 2 528 2 426 2 767 2 228 2 107 2 653 2 654 2 432 2 589 2 484 2 702 4 703 2 785 2 535 6 707 2 787 2 491 2 1002 2 122 44 123 2 934 2 714 2 599 2 863 2 315 2 864 2 719 2 796 38 547 2 721 2 722 2 
737 4 514 2 453 2 144 10 159 4 895 10 787 2 405 2 629 2 122 10 123 2 80 2 558 4 934 2 768 2 107 2 864 2 68 4 796 4 969 2 
942 4 548 2 874 2 801 2 383 4 453 2 725 2 263 2 558 10 390 4 137 2 328 4 68 10 618 2 272 2 737 14 273 2 818 2 514 2 144 26 75 2 895 28 402 4 405 2 629 2 567 2 79 10 749 2 80 2 347 2 210 6 572 2 906 2 637 6 969 2 352 2 159 14 978 4 37 4 361 8 166 6 426 2 107 2 432 2 657 2 704 2 779 2 662 2 535 6 787 2 789 6 375 2 122 38 123 2 934 2 599 2 864 2 315 2 796 14 719 2 252 10 722 4 
797 2 

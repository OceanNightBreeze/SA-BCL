#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 633 853 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (561,591) 370 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (322,840) (388,842) (388,842) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 59 873 454 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 748 783 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 748 783 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 748 783 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 748 783 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 748 783 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 29 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 660 359 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException (708,935) (708,935) 821 599 359 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:gte(II)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:eltsGT([II)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.ProglangType:isArray()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 42931 | return null
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsLTE([II)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.RootNode:RootNode()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 3815 | stmt -> ;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfo:new_ppt()V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:memberOf(F[F)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfo:isPointer()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:memberOf(J[J)Z
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern:intern([J)[J
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.PptSlice0:arity()I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z | CONSTANT | 177979 | 0 -> 1
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:intersection([I[I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ValueTuple:isMissing(I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice2:arity()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:sign(I)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:noDups([I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ProglangType:dimensions()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoAux:hashCode()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:numIntArrays()I
utilMDE.MathMDE:pow_fast(II)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Assert:assertTrue(Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.Node:Node()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:readChar()C
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 131321 | if (x) -> if (!x)
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:size()I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Intern:intern([D)[D
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern:intern([I)[I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[F)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:backup(I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:subsetOf([I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:memberOf(I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:hashCode()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | RETURN | 66339 | return null
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:eltsLT([II)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:min([I)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo; | RETURN | 946 | return null
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE:gcd(JJ)J
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:eltwiseGT([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eq(DD)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaCharStream:getEndLine()I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 23053 | = null
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:gt(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:lexGT([I[I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ProglangType:isScalar()Z
daikon.Quant:eq(FF)Z
daikon.Quant:lt(II)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
116 2 758 2 868 2 280 2 418 2 612 4 181 2 861 2 511 2 
922 6 689 2 422 2 597 6 43 2 256 2 389 2 752 2 800 2 755 2 785 6 
744 2 371 6 254 2 661 6 722 4 509 2 181 2 363 4 378 2 511 2 858 6 553 2 68 6 
198 2 277 10 622 6 847 4 82 2 559 12 121 4 123 2 850 16 415 6 60 10 447 29 24 2 535 26 360 10 603 8 323 2 181 6 511 6 768 4 570 2 889 8 923 4 100 8 264 8 615 10 240 2 211 16 430 16 244 10 
17 6 908 4 
115 2 
222 2 653 2 117 2 280 2 351 4 476 4 229 2 534 2 181 4 608 2 484 2 544 2 666 2 611 4 780 2 431 2 724 2 15 2 150 2 198 2 786 2 848 4 561 2 625 2 626 2 503 2 733 2 448 2 450 2 918 2 799 2 635 2 511 4 641 2 95 2 39 2 334 2 40 2 265 2 107 2 870 2 401 2 51 2 591 2 
277 16 348 4 309 8 81 2 622 4 82 2 655 2 559 22 121 2 850 32 822 4 227 6 662 4 415 4 60 6 447 54 535 48 360 16 884 6 602 4 603 18 919 4 539 2 181 4 511 4 134 2 837 6 809 6 137 2 100 6 140 2 615 16 211 32 430 32 244 16 619 4 305 4 216 6 872 6 
561 2 400 2 616 2 
613 2 84 2 124 2 180 2 210 2 670 2 386 10 374 2 522 2 33 22 636 2 591 2 421 2 874 2 
650 2 277 2 558 2 622 2 759 2 559 2 121 2 850 2 60 4 447 6 535 4 360 2 507 2 603 2 606 2 575 2 615 2 300 2 211 2 430 2 244 2 249 2 152 2 
277 4 847 2 559 4 822 4 850 8 227 6 615 4 211 8 447 16 430 8 535 12 360 4 319 2 750 2 244 4 919 4 216 6 
819 4 311 10 473 2 155 4 561 8 624 2 476 4 201 2 178 2 444 2 706 4 127 62 508 2 541 4 635 2 830 2 512 4 891 4 515 2 640 4 545 2 896 4 331 14 72 2 95 4 10 2 165 2 335 2 902 4 616 2 547 10 238 2 44 4 869 2 751 2 677 2 400 6 844 4 79 2 247 2 
115 2 763 2 58 2 204 2 685 2 93 2 688 2 897 2 243 2 468 2 
221 1 595 3 353 2 702 1 703 4 705 2 704 2 228 2 5 2 356 2 7 32 9 2 129 16 130 4 362 1 234 2 480 2 364 2 711 2 712 1 833 2 236 2 717 2 492 2 375 12 618 3 620 2 843 2 379 6 151 2 381 2 250 2 849 2 501 2 631 2 854 3 157 8 634 2 159 2 857 3 511 32 161 2 859 2 260 2 740 2 639 2 642 2 393 2 517 6 167 2 745 3 746 3 747 4 267 2 867 2 868 2 646 1 749 4 398 2 271 6 173 2 174 3 274 1 53 2 405 2 652 2 876 2 278 1 656 2 409 2 877 2 286 2 533 2 62 1 287 1 417 2 419 2 64 24 540 2 181 34 542 2 65 2 543 2 185 2 69 3 425 4 777 2 669 2 298 4 188 3 546 2 428 16 778 4 192 1 672 2 302 3 548 2 781 2 433 1 550 8 195 3 549 2 783 2 678 2 679 2 784 2 911 24 910 16 680 1 310 2 560 2 792 2 312 2 439 2 441 16 682 2 314 2 446 4 797 2 315 1 318 1 453 5 92 3 924 2 925 2 94 2 926 1 805 2 333 2 576 2 810 2 459 1 461 32 930 2 693 2 212 2 816 2 933 2 694 6 469 2 588 2 590 2 697 8 113 2 936 2 698 2 218 2 
621 2 181 2 
866 2 181 4 720 2 
771 2 
788 2 307 2 347 2 700 2 681 2 654 2 557 2 120 2 793 2 252 2 313 2 853 2 564 2 203 2 827 2 320 2 633 2 537 2 451 2 452 2 738 18 70 2 572 2 296 18 643 2 928 2 99 2 862 2 812 2 779 2 839 2 268 2 584 2 194 2 273 2 14 2 217 2 554 18 
601 2 648 1 719 2 413 2 
424 2 
220 2 699 2 923 2 561 2 370 2 719 2 429 2 
699 2 498 2 719 2 
699 2 719 2 686 2 
22 2 601 2 695 2 
699 2 719 2 
22 2 863 2 
719 2 355 2 
22 2 834 2 601 2 
601 2 860 2 30 2 
601 2 340 2 901 2 
601 2 696 2 592 2 
601 2 932 2 490 2 
22 2 88 2 
719 2 586 2 
30 2 289 2 
97 2 901 2 
820 2 696 2 
932 2 898 2 
22 2 191 2 
932 2 912 2 
583 2 696 2 
80 2 901 2 
632 2 30 2 
22 2 834 2 601 2 308 2 
22 2 834 2 601 2 308 2 56 2 
22 2 601 2 475 2 
22 2 163 2 601 2 
731 2 179 2 589 2 909 2 
16 2 561 2 370 2 692 2 
220 2 16 2 231 2 561 2 370 2 692 2 
699 2 923 2 561 2 370 2 263 2 719 2 
401 2 470 2 
280 2 432 2 561 2 370 2 
696 2 125 2 
932 2 32 2 
789 2 30 2 
144 2 901 2 
200 2 932 2 901 2 
383 2 932 2 901 2 
932 2 901 2 905 2 
932 2 691 2 901 2 
561 2 6 6 826 6 766 2 321 2 327 2 370 2 403 2 
22 2 4 2 
893 2 555 2 37 2 488 4 294 2 385 2 410 2 284 2 73 2 823 4 917 2 931 2 885 2 387 2 258 2 33 6 569 2 638 2 
601 2 109 2 
381 2 
350 2 703 4 228 2 5 2 356 2 825 2 358 2 7 6 130 4 9 2 234 2 480 2 831 4 712 2 492 2 375 8 620 2 379 4 250 2 511 26 637 2 260 2 740 2 639 2 261 2 517 2 38 2 167 2 267 2 868 2 749 2 398 2 271 6 405 2 409 2 656 4 285 2 533 2 880 2 538 2 419 2 181 26 65 2 542 2 543 2 425 4 776 2 298 2 778 4 904 2 549 2 550 2 782 2 783 2 678 2 436 2 910 6 556 2 310 2 560 2 682 2 314 2 446 2 684 4 802 2 94 2 926 2 461 4 930 6 212 2 694 2 467 2 218 2 698 2 
350 2 705 1 703 4 228 2 5 2 356 2 825 2 358 2 7 6 130 4 9 2 234 2 480 2 831 4 712 2 492 2 375 8 620 2 148 2 379 5 250 2 511 26 36 2 637 2 260 2 740 2 639 2 261 2 517 2 38 2 167 2 267 2 868 2 749 2 398 2 271 6 652 1 405 2 409 2 656 4 533 2 880 2 538 2 419 2 181 26 65 2 542 2 543 2 425 4 298 2 778 4 904 2 549 2 550 2 782 2 783 2 678 2 436 2 910 6 556 2 310 2 560 2 682 2 314 2 446 2 684 4 94 2 926 2 461 4 930 6 212 2 933 2 694 2 467 2 111 2 218 2 698 2 
578 2 
907 2 86 2 
275 2 209 2 840 2 388 2 145 2 842 2 523 2 233 2 514 2 
275 2 209 2 840 2 388 2 145 2 842 2 523 2 233 2 514 2 
275 2 209 2 19 2 519 4 373 2 141 2 357 2 840 2 828 4 388 2 842 2 145 2 676 4 510 2 523 2 494 2 233 2 921 2 197 2 514 2 
275 2 209 2 19 2 519 4 373 2 141 2 357 2 840 2 828 4 388 2 842 2 145 2 676 4 510 2 523 2 494 2 233 2 921 2 197 2 514 2 
275 2 209 2 19 2 519 4 373 2 141 2 357 2 840 2 828 4 388 2 842 2 145 2 676 4 510 2 523 2 494 2 233 2 921 2 197 2 514 2 
275 2 209 2 19 2 519 4 373 2 141 2 357 2 840 2 828 4 388 2 842 2 145 2 676 4 510 2 523 2 494 2 233 2 921 2 197 2 514 2 
275 2 209 2 690 2 19 2 373 2 141 2 357 2 840 2 828 2 388 2 842 2 145 2 510 2 523 2 233 2 494 2 921 2 197 2 514 2 
275 2 209 2 690 2 19 2 373 2 141 2 357 2 840 2 828 2 388 2 842 2 145 2 510 2 523 2 233 2 494 2 921 2 197 2 514 2 
275 2 209 2 690 2 19 2 373 2 141 2 357 2 840 2 828 2 388 2 842 2 145 2 510 2 523 2 233 2 494 2 921 2 197 2 514 2 
275 2 209 2 690 2 19 2 373 2 141 2 357 2 840 2 828 2 388 2 842 2 145 2 510 2 523 2 233 2 494 2 921 2 197 2 514 2 
275 2 209 2 19 2 373 2 141 2 357 2 840 2 828 2 388 2 842 2 145 2 510 2 523 2 233 2 494 2 921 2 197 2 514 2 
345 2 350 2 3 2 703 4 705 2 228 2 356 2 357 2 7 8 828 2 130 4 480 2 234 2 233 2 831 4 236 2 373 2 141 2 239 2 492 2 840 2 842 2 145 2 494 2 379 6 246 2 381 2 250 2 19 2 628 3 388 2 510 2 511 24 260 2 514 2 740 2 517 3 519 2 266 2 267 2 868 2 398 2 271 6 523 2 652 2 275 2 409 2 533 2 419 2 538 2 181 24 65 2 425 4 777 2 778 4 549 2 78 2 783 2 678 2 197 2 910 6 310 2 792 2 682 2 921 2 801 2 209 2 94 4 461 3 930 6 338 2 212 2 694 3 467 2 218 2 
275 2 209 2 19 2 519 4 373 2 141 2 357 2 840 2 828 4 388 2 842 2 145 2 676 4 510 2 523 2 494 2 233 2 921 2 197 2 514 2 
275 2 209 2 836 2 19 2 519 4 373 2 141 2 357 2 840 2 617 2 828 4 388 2 842 2 145 2 676 4 510 2 523 2 494 2 233 2 921 2 197 2 514 2 
807 2 139 2 373 2 
807 2 139 2 373 2 
471 2 349 2 350 6 474 2 705 2 703 4 228 2 356 2 597 12 600 2 7 2 828 6 130 4 604 4 234 2 480 2 365 2 715 2 485 2 138 4 139 6 373 4 239 2 492 2 375 4 840 2 379 6 496 2 497 2 250 2 729 2 629 4 732 2 856 2 389 4 27 2 513 2 511 16 260 2 740 2 514 2 516 2 743 2 519 6 267 2 43 4 396 2 868 2 170 2 749 4 398 2 271 6 523 2 402 2 755 4 652 2 275 4 281 2 409 2 414 2 533 2 879 2 536 2 881 2 664 2 538 2 419 2 886 2 181 24 542 4 65 2 773 2 665 2 422 4 425 4 298 4 778 4 301 4 77 4 676 4 549 2 782 4 678 2 910 2 785 16 310 2 682 2 563 4 446 4 90 2 324 2 800 4 922 12 209 2 689 4 94 4 807 2 461 2 930 2 212 2 467 2 214 2 587 2 218 2 
773 2 438 2 471 2 94 2 614 2 372 2 478 2 414 2 907 2 239 2 881 2 856 2 419 2 181 4 328 2 511 2 846 2 
471 2 349 2 119 2 350 6 474 4 705 2 703 4 228 2 356 2 597 12 600 2 7 2 828 6 130 4 604 4 234 2 480 2 365 2 715 2 485 2 138 4 139 6 373 4 492 2 375 4 840 2 379 6 496 2 250 2 729 2 629 4 732 2 735 2 856 2 389 4 27 2 513 2 511 16 260 2 740 2 514 2 516 2 741 2 743 2 519 6 267 2 43 4 396 2 868 2 170 2 749 4 398 2 271 6 523 2 402 2 755 4 652 2 275 4 281 2 409 2 414 2 533 2 883 2 664 2 538 2 419 2 886 2 181 24 542 4 65 2 773 2 665 2 422 4 425 4 298 4 778 4 301 4 77 4 676 4 549 2 782 4 678 2 910 2 785 16 199 2 310 2 682 2 563 4 446 4 322 2 90 2 324 4 800 4 922 12 209 2 689 4 94 2 807 2 461 4 930 2 212 2 467 2 214 2 218 2 
818 2 471 2 349 2 350 6 474 4 705 2 703 4 228 2 356 2 597 12 600 2 7 2 230 2 828 6 130 4 604 4 234 2 480 2 365 2 715 2 485 2 138 4 139 6 373 4 239 2 492 2 375 4 840 2 379 6 496 2 250 2 729 2 629 4 732 2 856 2 389 4 27 2 513 2 511 16 260 2 740 2 514 2 516 2 741 2 743 2 519 6 267 2 43 4 396 2 868 2 170 2 749 4 398 2 271 6 523 2 402 2 755 4 652 2 275 4 281 2 409 2 878 2 414 2 533 2 881 2 664 2 538 2 419 2 886 2 181 24 542 4 65 2 773 2 665 2 186 2 422 4 668 2 425 4 298 4 778 4 301 4 77 4 676 4 549 2 782 4 678 2 910 2 785 16 310 2 682 2 563 4 446 4 90 2 324 2 800 4 922 12 209 2 689 4 94 4 807 2 461 2 930 2 212 2 467 2 214 2 218 2 
1 2 224 4 472 2 705 5 703 4 227 6 228 2 479 2 7 28 8 2 709 2 234 2 480 2 481 4 482 2 712 2 714 4 486 2 487 2 716 2 489 2 237 2 721 2 491 2 492 2 723 2 244 4 495 2 246 2 248 2 727 2 500 2 250 4 728 2 18 2 730 2 20 2 502 2 255 4 505 2 23 2 734 36 257 2 737 12 512 2 511 30 260 2 261 2 517 19 38 2 266 2 520 2 267 2 521 3 44 2 269 10 46 4 270 2 48 2 271 6 272 3 277 4 526 2 527 2 282 2 55 2 532 2 765 2 533 2 59 2 535 12 767 2 63 2 542 4 769 2 770 14 772 2 292 2 775 2 74 2 778 6 550 18 78 2 783 2 551 16 552 4 556 2 310 4 559 6 794 16 316 4 317 2 566 2 571 2 801 2 804 2 94 2 98 3 806 2 808 2 100 6 577 4 811 2 336 2 579 2 813 2 337 2 339 4 581 2 106 24 814 2 815 2 108 2 342 3 344 2 112 2 594 2 346 2 350 2 118 2 122 2 596 1 822 4 356 2 825 2 598 2 358 46 360 4 128 2 130 4 129 4 603 4 131 2 829 2 831 12 832 2 366 2 367 2 136 2 835 2 140 4 615 4 375 40 377 6 147 2 844 2 379 13 380 2 382 2 384 2 155 2 850 8 628 2 630 4 852 2 855 6 390 2 160 2 637 2 164 2 395 4 166 2 868 4 171 3 172 2 398 2 399 2 175 2 873 2 404 6 875 2 652 5 408 2 655 2 657 36 409 2 658 2 411 4 177 4 415 4 880 2 882 2 419 2 181 40 183 12 888 2 667 2 423 2 425 6 426 10 187 2 427 10 428 4 902 2 903 2 904 14 906 2 193 2 430 8 674 2 434 4 435 12 678 4 196 4 436 2 910 14 440 2 913 2 443 2 445 10 447 16 205 2 920 10 454 2 207 2 926 2 461 19 930 14 211 8 462 12 212 4 213 2 694 16 467 2 218 2 
282 2 472 2 532 2 358 6 7 2 257 2 566 2 181 2 920 2 831 2 511 2 367 2 716 2 426 2 517 2 98 2 427 4 461 2 520 2 930 2 647 2 694 2 783 2 910 2 
282 2 472 2 532 2 358 6 7 2 257 2 566 2 181 2 920 2 831 2 511 2 367 2 716 2 426 2 517 2 98 2 427 4 461 2 520 2 930 2 647 2 694 2 783 2 910 2 
282 2 472 2 532 2 358 6 7 2 257 2 566 2 181 2 920 2 831 2 511 2 367 2 716 2 426 2 517 2 98 2 427 4 461 2 520 2 930 2 647 2 694 2 783 2 910 2 
499 3 517 3 297 2 461 3 811 2 428 2 7 2 748 2 46 2 129 2 257 2 272 3 342 3 783 2 329 2 
499 2 517 2 297 2 461 2 811 2 428 2 7 2 748 2 46 2 129 2 257 2 272 2 342 2 783 2 329 2 
499 2 517 2 297 2 461 2 811 2 428 2 7 2 748 2 46 2 129 2 257 2 272 2 342 2 783 2 329 2 
499 2 517 2 297 2 461 2 811 2 428 2 7 2 748 2 46 2 129 2 257 2 272 2 342 2 783 2 329 2 
499 2 517 2 297 2 461 2 811 2 428 2 7 2 748 2 46 2 129 2 257 2 272 2 342 2 783 2 329 2 
813 2 506 2 153 2 361 2 442 2 929 2 
176 2 288 2 659 2 29 2 110 2 442 2 904 2 
251 2 627 1 201 1 126 2 915 2 533 2 416 2 158 2 508 1 181 10 31 1 326 2 34 1 208 2 511 8 133 2 71 2 573 2 75 2 582 2 675 2 50 2 303 2 524 2 437 2 114 2 
277 6 309 2 559 1 118 2 528 2 850 6 822 2 227 4 477 2 415 2 447 17 535 12 360 6 181 6 481 2 207 2 511 6 544 2 334 2 809 4 100 4 615 6 211 6 430 6 397 2 244 6 146 2 305 2 
1 2 369 2 382 2 486 2 531 2 671 2 707 2 142 7 565 1 242 2 420 2 798 2 181 1 753 2 511 1 259 2 726 4 162 2 
1 2 369 2 382 2 486 2 531 2 671 4 707 2 142 6 242 2 420 2 798 4 753 4 259 2 726 4 162 2 
1 2 369 2 382 2 486 2 531 2 671 8 707 2 142 10 565 1 242 2 420 6 798 8 181 1 753 8 511 1 259 2 726 4 162 8 
1 2 369 2 382 2 486 2 531 2 671 2 707 2 142 2 242 2 798 2 753 2 259 2 726 2 
223 2 2 4 701 16 821 2 354 10 705 26 479 2 359 2 599 2 607 1 713 4 132 2 368 6 609 2 610 14 11 6 12 4 838 4 143 4 841 4 245 10 379 102 725 4 250 6 253 4 156 2 26 4 28 10 35 4 511 70 739 16 391 4 392 2 742 4 262 10 394 4 864 4 865 16 169 24 48 2 754 2 756 4 276 2 652 28 525 2 406 4 757 11 760 4 761 4 57 2 412 8 660 2 764 4 181 78 887 8 290 2 182 4 66 24 184 10 892 32 774 24 894 4 895 8 425 36 293 2 295 8 900 4 190 10 189 4 778 44 76 4 673 16 304 4 678 2 306 4 310 6 791 4 440 2 914 4 795 4 562 4 85 4 796 4 683 4 916 4 87 2 449 4 89 8 91 4 206 4 568 4 455 4 803 10 456 2 457 4 332 8 927 6 460 8 101 4 102 30 104 4 105 2 463 2 464 4 934 2 341 8 215 4 817 2 593 4 219 6 
652 8 223 3 757 2 225 2 760 4 283 2 821 2 57 1 705 8 660 2 479 2 359 2 599 2 708 10 181 28 483 2 132 1 368 1 425 14 295 6 11 2 190 6 12 4 76 2 778 14 143 4 673 15 841 4 678 2 245 6 379 36 250 2 310 2 83 2 791 4 440 2 914 2 851 2 795 3 156 2 202 2 87 2 25 2 26 2 28 6 91 4 206 2 511 26 391 4 392 2 927 5 262 2 394 2 580 2 102 8 104 2 463 1 169 8 48 2 466 2 649 2 935 2 219 2 
223 4 225 3 2 4 701 12 821 2 226 2 352 6 705 36 479 4 359 2 599 2 708 16 605 4 232 24 710 2 713 6 483 4 132 2 368 2 135 2 610 12 11 18 13 6 12 6 838 4 143 4 841 6 245 12 379 138 149 8 845 12 250 12 623 2 253 4 851 2 156 2 736 4 26 6 28 12 511 92 391 6 262 12 394 6 864 6 42 24 169 66 48 4 47 8 49 2 649 2 52 2 756 6 652 36 406 6 757 12 279 2 760 6 761 6 762 2 57 2 764 4 181 104 182 6 290 2 66 24 774 24 895 12 425 50 295 8 900 4 899 2 190 12 778 62 76 6 673 8 304 6 678 6 306 6 787 2 310 12 83 2 791 6 440 4 914 2 795 2 85 6 796 6 683 6 202 2 916 6 87 1 449 6 89 12 91 6 567 8 206 2 455 4 457 6 332 24 96 6 927 8 574 12 101 4 580 2 102 28 104 6 463 2 464 4 465 2 466 2 215 4 817 2 935 4 593 4 219 6 
651 2 652 6 407 2 0 2 757 2 279 2 54 2 760 2 283 2 821 2 354 2 226 2 529 2 705 6 660 2 530 2 824 6 479 2 663 2 359 2 61 4 599 2 181 46 67 2 184 2 890 2 235 2 291 4 425 20 293 2 718 2 11 2 299 2 190 4 12 2 76 2 778 20 241 2 673 36 493 4 841 2 376 2 678 2 245 4 379 48 149 2 787 2 154 2 250 2 310 2 790 2 623 2 791 2 440 2 795 2 21 2 156 2 504 2 87 2 25 2 26 2 28 4 91 2 567 2 325 2 511 44 687 2 391 2 803 2 392 2 262 2 927 6 394 2 518 2 458 2 644 2 103 2 41 2 104 2 168 4 645 2 45 2 169 6 47 2 48 2 871 2 585 2 343 2 754 2 219 2 52 2 
330 2 

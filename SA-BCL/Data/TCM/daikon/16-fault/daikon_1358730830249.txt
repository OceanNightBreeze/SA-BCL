#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 969 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 870 (764,920) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 3 404 271 968 91 531 429 216 546 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (19,1066) 549 (629,646) 346 532 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 846 846 563 (945,980) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 846 846 563 (945,980) (945,980) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 846 846 563 (945,980) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 567 126 181 35 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.StringIndexOutOfBoundsException 1055 709 711 306 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:isDerived()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:noDups([I)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaCharStream:ReadByte()C
daikon.Debug:logDetail()Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltsGT([II)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([F[D)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:passes()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:slice([III)[I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:subsetOf([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.PptSlice0:arity()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_14()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaCharStream:getBeginLine()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsGTE([II)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | STATEMENT | 48374 | stmt -> ;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_50()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:intern([I)[I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:isReverse([I[I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:sameLength([I[I)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
daikon.ProglangType:base()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:union([I[I)[I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.ProglangType:isFloat()Z
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:sum([D)D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.PptSlice1:num_samples()I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_54()Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eq(II)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:gt(II)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J | ASSIGN | 32767 | = null
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:memberOf(I[I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName:hashCode()I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String; | ASSIGN | 18974 | = null
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ValueTuple:isMissing(I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.ProglangType:isArray()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd([I)I
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.Quant:eq(FF)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:eq(DD)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_88()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3R_85()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quantify.Constant:Constant(I)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([D[D)Z
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3_1()Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_ntk()I
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:eltsEqual([II)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2644 | return null
daikon.Quant:intersection([I[I)[I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isIOAArray()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.RootNode:RootNode()V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:jj_3R_63()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3R_163()Z
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z | CONSTANT | 40107 | 0 -> -1
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_161()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I | CONDITION | 910 | if (x) -> if (!x)
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 21385 | stmt -> ;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([D)[D
daikon.Quant:ne(II)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsFloat()Z
daikon.diff.InvMap:InvMap()V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfo:isPrestate()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2384 | return null
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eq(JJ)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:lexLT([I[I)Z | STATEMENT | 170908 | stmt -> ;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfo:isPointer()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:numIntArrays()I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakHasherMap:size()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3095 | - -> *
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(S[S)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
730 2 701 2 376 4 323 2 361 2 156 2 1065 2 252 2 1034 2 
840 2 108 2 713 2 846 2 277 2 351 6 897 2 950 6 11 2 77 6 356 2 
564 2 904 4 236 2 955 6 995 6 660 2 443 6 187 2 156 2 668 6 522 2 545 4 252 2 
162 10 375 10 304 2 442 26 130 8 742 16 307 6 1036 2 966 2 422 16 1007 2 252 6 597 2 527 30 430 4 284 8 458 10 1018 16 227 4 495 6 52 8 460 12 635 8 984 10 193 4 402 10 156 6 90 2 543 4 705 2 
312 6 86 4 
347 2 
162 2 1030 2 375 4 344 2 442 4 742 2 885 2 307 2 553 2 1039 2 1072 2 422 2 527 6 430 2 284 2 15 2 458 2 1018 2 20 2 460 2 984 2 402 2 638 2 
162 4 527 14 911 4 458 4 1018 8 414 6 442 12 114 2 742 8 460 5 983 6 984 4 402 4 543 2 422 8 198 2 1043 4 
282 2 550 2 847 2 1033 2 1020 2 98 2 157 2 895 4 575 2 898 2 969 2 900 2 482 2 772 2 651 6 581 2 
1 2 814 2 347 2 1001 2 12 2 942 2 979 2 262 2 665 2 808 2 
596 2 600 2 322 2 920 2 416 2 815 2 831 2 764 2 884 2 98 2 870 2 55 2 988 4 639 2 672 2 721 2 428 2 
162 16 642 6 954 2 776 6 375 6 843 8 414 6 740 6 442 48 130 6 418 4 742 32 307 4 1036 2 892 4 422 32 104 2 252 4 1043 4 527 54 256 2 939 2 430 2 284 18 107 6 657 2 458 16 911 4 1018 32 188 4 495 4 460 22 983 6 984 16 230 2 402 16 156 4 915 4 336 4 
98 2 282 2 969 2 
60 2 862 2 166 2 658 2 633 22 797 2 731 10 832 2 889 2 315 2 354 2 594 2 217 2 722 2 
410 3 121 3 413 1 2 6 552 16 960 2 812 1 274 4 4 2 682 2 419 2 819 5 689 2 970 8 140 2 556 32 557 2 559 2 558 3 824 12 565 2 826 2 286 2 978 4 981 2 146 3 149 32 293 2 436 2 155 1 295 2 570 16 156 34 573 2 27 1 987 2 836 2 29 4 837 2 580 2 990 2 302 1 31 2 303 2 32 2 167 6 170 24 174 2 851 3 588 2 309 2 591 3 592 2 41 2 1005 2 593 3 450 2 43 4 177 1 1010 2 455 2 861 2 321 2 866 2 459 2 1022 1 53 3 192 2 195 4 871 1 1026 8 197 2 334 1 462 24 65 2 201 3 66 1 879 1 739 16 204 2 881 2 741 2 469 2 1034 2 69 2 746 2 745 2 615 2 211 6 890 2 73 2 213 3 1040 2 899 2 79 2 623 2 755 2 1044 2 625 2 757 2 221 4 364 8 1047 2 627 2 85 6 367 1 1055 2 500 1 914 2 501 2 1057 2 917 2 370 2 641 2 379 2 512 1 383 2 240 2 515 2 780 2 516 2 99 2 929 2 103 2 386 1 525 4 252 32 936 16 106 2 1078 3 390 1 791 2 529 2 1079 2 260 2 394 4 395 2 533 2 534 2 537 2 662 2 1083 2 664 2 667 2 666 2 541 2 807 3 
888 2 
1013 2 156 2 
97 2 841 2 156 4 
412 4 676 4 124 2 271 2 129 34 415 24 3 36 961 24 132 2 816 24 818 8 136 36 278 2 421 2 968 2 280 2 821 2 691 4 429 2 562 14 975 36 976 4 699 2 16 34 828 4 290 2 291 10 829 36 435 20 151 4 24 118 296 2 702 4 437 34 438 4 299 2 159 2 161 44 440 22 586 4 305 4 34 2 171 2 173 4 850 20 852 2 715 2 855 4 1003 2 858 118 178 8 1011 4 451 2 1012 2 453 2 598 2 185 2 728 2 605 14 869 4 608 20 199 2 463 2 1029 4 875 18 63 2 737 36 341 2 203 2 738 16 883 2 475 2 1037 2 886 4 891 2 71 10 477 2 893 20 72 2 616 4 750 4 620 4 357 2 621 118 216 2 622 4 218 34 485 4 903 34 906 2 624 2 222 2 365 10 493 4 1056 4 368 4 767 2 91 2 232 36 369 14 775 2 93 2 645 2 96 4 245 2 647 8 100 4 789 24 654 6 656 4 261 4 794 2 531 2 1082 4 795 2 111 2 112 10 535 4 399 34 804 4 539 4 116 14 805 2 404 74 1089 4 546 2 117 14 809 6 
318 2 246 1 1085 2 478 2 
792 2 478 2 
754 2 98 2 349 2 193 2 478 2 520 2 1035 2 
75 2 478 2 520 2 
194 2 478 2 520 2 
318 2 916 2 316 2 
478 2 520 2 
916 2 744 2 
994 2 478 2 
318 2 916 2 76 2 
318 2 461 2 158 2 
318 2 389 2 506 2 
318 2 880 2 342 2 
318 2 84 2 445 2 
916 2 524 2 
478 2 425 2 
774 2 461 2 
1076 2 506 2 
880 2 95 2 
270 2 445 2 
916 2 874 2 
827 2 445 2 
339 2 880 2 
506 2 406 2 
461 2 574 2 
318 2 782 2 916 2 76 2 
318 2 782 2 916 2 76 2 467 2 
318 2 710 2 916 2 
318 2 916 2 770 2 
21 2 268 2 448 2 820 2 
320 2 98 2 932 2 1035 2 
320 2 98 2 349 2 363 2 932 2 1035 2 
98 2 193 2 478 2 520 2 92 2 1035 2 
9 2 669 2 
98 2 193 2 168 2 1035 2 
880 2 45 2 
266 2 445 2 
461 2 503 2 
825 2 506 2 
999 2 445 2 506 2 
144 2 445 2 506 2 
1058 2 506 2 445 2 
142 2 506 2 445 2 
1035 2 134 2 98 2 785 2 247 2 519 6 249 2 14 6 
916 2 719 2 
992 2 905 2 922 2 613 2 289 2 727 2 633 6 68 2 634 4 472 2 589 2 153 2 191 2 687 2 834 2 1070 2 313 4 179 2 
318 2 572 2 
455 2 
413 2 958 2 2 6 960 2 274 4 686 2 140 2 556 4 557 2 824 8 145 2 978 4 981 2 149 6 156 26 987 2 704 2 29 2 837 4 31 2 32 2 167 2 998 2 174 2 588 2 590 2 1005 2 43 4 459 2 197 2 873 2 65 2 876 2 736 2 465 2 879 2 204 2 741 2 205 2 469 2 1034 2 69 2 745 2 211 2 615 2 79 2 755 2 221 2 364 2 85 4 1055 2 229 4 88 2 917 2 1059 2 383 2 240 2 241 2 99 2 101 4 525 4 252 26 936 6 255 2 106 2 257 2 529 2 260 6 394 2 395 2 534 2 664 2 666 2 541 2 
413 2 958 2 2 6 960 2 274 4 8 2 686 2 140 2 556 4 557 2 824 8 826 2 145 2 978 4 981 2 149 6 156 26 987 2 29 2 837 4 31 2 32 2 167 2 998 2 174 2 588 2 590 2 41 2 1005 2 43 4 459 2 197 2 873 2 65 2 876 2 465 2 879 2 204 2 741 2 205 2 469 2 1034 2 69 2 746 2 745 2 211 2 615 2 79 2 755 2 221 2 364 2 85 6 1055 2 229 4 88 2 917 2 1059 2 383 2 1064 2 240 2 241 2 99 2 101 4 250 2 525 4 252 26 936 6 255 2 106 2 529 2 260 6 394 2 395 2 534 2 664 2 666 2 541 2 
918 2 
790 2 555 2 
840 2 186 2 629 2 346 2 761 4 532 2 980 2 606 4 275 2 23 2 927 2 277 2 351 2 806 2 1075 2 77 2 547 2 991 2 
549 2 551 2 2 4 204 2 67 2 346 2 274 2 469 2 275 2 69 2 743 2 277 4 6 2 210 2 351 4 140 2 690 2 77 6 356 2 219 2 563 2 629 2 761 4 981 2 980 2 1054 2 762 4 23 2 156 12 571 2 917 2 769 2 991 2 509 4 838 2 840 4 844 2 846 2 1066 2 646 2 927 2 38 4 248 4 521 2 44 2 43 2 1075 2 317 2 252 6 182 4 186 4 326 2 532 2 606 4 396 4 400 2 950 6 197 2 806 2 547 2 
549 2 551 2 2 4 204 2 67 2 346 2 274 2 469 2 275 2 69 2 743 2 277 4 6 2 210 2 351 6 140 2 690 2 77 4 219 2 563 2 629 2 761 4 981 2 980 2 1054 2 762 4 23 2 156 12 571 2 917 2 769 2 991 2 509 4 838 2 840 4 844 2 713 2 846 2 1066 2 646 2 927 2 38 4 248 4 521 2 44 2 43 2 1075 2 317 2 252 6 182 4 186 4 326 2 532 2 606 4 396 4 400 2 950 6 197 2 806 2 547 2 
549 2 551 2 2 4 204 2 67 2 346 2 274 2 469 2 275 2 69 2 743 2 277 4 6 2 210 2 351 6 11 2 140 2 690 2 77 6 219 2 563 2 629 2 761 4 981 2 980 2 1054 2 762 8 23 2 156 12 571 2 917 2 769 2 991 2 509 4 838 2 840 4 844 2 846 2 1066 2 646 2 927 2 38 4 248 4 521 2 44 2 43 2 1075 2 317 2 252 6 182 4 186 4 326 2 532 2 606 4 396 4 400 2 950 6 197 2 806 2 547 2 
549 2 551 2 2 4 204 2 67 2 346 2 274 2 469 2 275 2 69 2 743 2 277 4 6 2 210 2 351 8 11 2 140 2 690 2 77 6 219 2 563 2 629 2 761 4 981 2 980 2 1054 2 762 8 23 2 156 12 571 2 917 2 769 2 991 2 509 4 838 2 840 4 844 2 713 2 846 2 1066 2 646 2 927 2 38 4 248 8 521 2 44 2 43 2 1075 2 317 2 252 6 182 4 186 4 326 2 532 2 606 4 396 8 400 2 950 8 197 2 806 2 547 2 
549 2 551 2 2 4 204 2 67 2 346 2 274 2 469 2 275 2 69 2 743 2 277 4 6 2 210 2 351 6 11 2 140 2 690 2 77 6 219 2 563 2 629 2 761 4 981 2 980 2 1054 2 762 8 23 2 156 12 571 2 917 2 769 2 991 2 509 4 838 2 840 4 844 2 846 2 1066 2 646 2 927 2 38 4 248 8 521 2 44 2 43 2 1075 2 317 2 252 6 182 4 186 4 326 2 532 2 606 4 396 8 400 2 950 6 197 2 806 2 547 2 
549 2 551 2 2 6 269 2 813 2 274 4 275 2 277 4 6 2 556 2 557 2 563 2 824 4 826 2 19 2 22 1 569 1 568 7 23 2 25 2 571 2 833 2 835 2 29 2 578 2 300 2 838 2 301 6 839 6 32 2 840 4 844 4 846 4 848 2 588 2 38 6 310 2 43 4 44 2 317 2 46 2 50 1 326 2 327 2 606 4 331 1 65 2 611 6 346 2 67 2 69 2 888 6 351 8 619 2 77 4 79 2 80 1 364 2 629 2 85 6 631 6 88 2 636 2 917 2 644 6 97 6 927 2 646 2 99 2 101 4 933 6 936 6 106 2 394 2 397 2 400 2 666 2 401 2 948 2 950 12 405 10 952 2 409 1 957 1 683 6 685 2 686 2 423 6 140 2 690 4 693 6 971 6 141 6 973 2 143 2 696 7 145 4 978 4 981 2 980 2 433 1 434 2 149 8 156 46 987 12 986 2 991 2 993 6 165 2 167 2 169 1 713 4 174 2 1004 2 1013 6 182 8 186 4 459 2 1021 2 189 2 1023 8 197 2 1028 4 465 2 204 2 469 2 1034 2 745 2 746 2 210 2 211 2 1041 4 219 2 755 2 221 2 761 4 490 2 1050 2 762 2 1054 2 1055 2 498 2 769 2 509 4 513 2 778 6 1066 2 521 2 1075 2 525 4 252 24 529 2 260 6 532 2 534 2 806 2 547 2 810 2 
549 2 411 2 551 2 2 6 269 2 813 2 274 4 683 6 275 2 277 4 6 2 685 2 686 2 423 6 556 2 11 4 140 2 690 4 557 2 971 6 693 6 141 6 973 2 563 2 824 8 143 2 826 2 145 4 978 4 19 2 980 2 981 2 434 2 149 8 23 2 25 2 833 2 156 48 571 2 986 2 987 12 835 2 578 2 29 4 837 2 991 2 300 2 301 6 838 2 839 6 993 6 32 2 840 4 165 2 167 2 844 4 848 2 846 4 174 2 588 2 38 6 310 2 1004 2 44 2 43 4 317 2 1013 6 46 2 182 8 186 4 327 2 326 2 459 2 606 4 1021 2 189 2 1023 8 197 2 1028 4 65 2 465 2 611 6 204 2 67 2 346 2 469 2 1034 2 69 2 746 2 745 2 888 6 210 2 211 2 351 8 619 2 1041 4 77 8 79 2 219 2 755 2 221 4 364 2 629 2 631 6 490 2 761 4 85 6 1050 2 1054 2 762 6 1055 2 498 2 88 2 636 2 917 2 769 2 509 4 644 6 513 2 778 6 1066 2 97 6 646 2 927 2 99 2 101 4 521 2 933 6 1075 2 525 4 252 26 936 6 106 2 529 2 260 6 393 2 394 4 532 2 534 2 397 2 666 2 400 2 401 2 948 2 950 12 806 2 405 10 952 2 547 2 810 2 
549 2 411 2 551 2 2 6 269 2 813 2 274 4 683 6 275 2 277 4 6 2 685 2 686 2 423 6 556 2 11 4 140 2 690 4 557 2 971 6 693 6 141 6 973 2 563 2 824 8 143 2 826 2 145 4 978 4 19 2 980 2 981 2 434 2 149 8 23 2 25 2 833 2 156 48 571 2 986 2 987 12 835 2 578 2 29 4 837 2 991 2 300 2 301 6 838 2 839 6 993 6 32 2 840 4 165 2 167 2 844 4 848 2 846 4 174 2 588 2 38 6 310 2 1004 2 44 2 43 4 317 2 1013 6 46 2 182 8 186 4 327 2 326 2 459 2 606 4 1021 2 189 2 1023 8 197 2 1028 4 65 2 465 2 611 6 204 2 67 2 346 2 469 2 1034 2 69 2 746 2 745 2 888 6 210 2 211 2 351 8 619 2 1041 4 77 8 79 2 219 2 755 2 221 4 364 2 629 2 631 6 490 2 761 4 85 6 1050 2 1054 2 762 6 1055 2 498 2 88 2 636 2 917 2 769 2 509 4 644 6 513 2 778 6 1066 2 97 6 646 2 927 2 99 2 101 4 248 4 521 2 933 6 1075 2 525 4 252 26 936 6 106 2 529 2 260 6 393 2 394 4 532 2 534 2 396 4 397 2 666 2 400 2 401 2 948 2 950 12 806 2 405 10 952 2 547 2 810 2 
549 2 551 2 2 6 269 2 813 2 274 4 275 2 277 4 6 2 11 4 556 4 557 2 281 6 563 2 824 10 826 2 19 2 23 2 25 2 571 2 833 2 835 2 29 4 578 2 837 2 300 2 838 2 301 6 839 6 32 2 840 4 844 4 846 4 848 2 588 2 38 6 310 2 43 4 44 2 317 2 46 2 326 2 327 2 606 4 868 6 65 2 611 6 67 2 346 2 69 2 888 12 351 10 619 2 77 10 356 2 79 2 364 4 629 2 85 6 631 6 88 2 636 2 917 2 644 6 94 6 97 12 927 2 646 2 99 2 101 6 933 12 935 2 936 8 652 2 106 2 393 2 394 4 396 4 397 2 398 2 400 2 666 2 401 2 948 2 950 16 405 8 952 2 411 2 683 6 685 2 686 2 423 12 140 2 690 4 693 6 971 6 141 6 973 2 143 2 145 4 978 4 980 2 981 2 434 2 149 12 156 52 987 10 986 2 991 2 993 12 165 2 167 4 713 2 174 2 1004 2 1013 12 182 8 186 4 459 2 1021 2 1023 8 197 2 1028 4 465 4 204 2 469 2 1034 2 207 6 745 2 746 2 209 6 210 2 211 4 748 6 1041 4 219 2 755 2 221 4 758 2 761 4 490 2 1050 2 762 6 1054 2 1055 2 498 2 231 2 769 2 509 4 238 2 513 2 778 6 1066 2 248 4 521 2 787 6 1075 2 525 4 252 24 528 2 529 2 260 8 263 2 532 2 534 2 542 6 1088 6 806 2 547 2 810 2 
838 2 551 2 840 4 846 2 275 2 927 2 277 4 38 2 6 2 210 2 248 4 351 6 521 2 11 2 44 2 1075 2 77 6 317 2 219 2 182 2 563 2 326 2 761 2 980 2 396 4 606 2 1054 2 762 6 23 2 400 2 156 4 950 4 806 2 991 2 509 2 
551 2 2 6 125 3 274 4 275 2 277 4 419 2 6 2 686 2 689 2 11 2 140 2 556 3 557 2 426 2 563 2 826 2 145 2 978 4 432 2 980 2 981 2 149 8 23 2 156 28 571 2 987 4 991 2 838 2 32 2 840 4 167 3 846 2 174 2 588 2 38 2 44 2 43 4 317 2 182 2 455 2 326 2 606 2 189 2 197 2 65 2 466 2 204 2 469 2 1034 2 69 2 746 2 745 2 210 2 211 3 351 6 77 6 79 2 219 2 755 2 82 2 761 2 85 6 762 6 1054 2 1055 2 88 2 917 2 509 2 372 2 927 2 99 2 101 4 521 2 1075 2 525 4 252 24 936 6 106 2 529 2 1079 2 260 6 534 2 396 2 666 2 400 2 950 4 806 2 405 2 
549 2 551 2 2 4 204 2 67 2 346 2 274 2 469 2 275 2 69 2 743 2 277 4 6 2 210 2 351 6 11 2 140 2 690 2 77 6 219 2 563 2 629 2 761 4 981 2 980 2 1054 2 762 8 23 2 156 12 571 2 917 2 769 2 991 2 509 4 838 2 840 4 844 2 846 2 1066 2 646 2 927 2 38 4 248 8 521 2 44 2 43 2 1075 2 317 2 252 6 182 4 186 4 326 2 532 2 606 4 396 8 400 2 950 6 197 2 806 2 547 2 
549 2 2 4 204 2 67 2 346 2 274 2 469 2 275 2 69 2 277 4 6 2 210 2 351 6 11 2 140 2 690 2 77 8 356 2 219 2 563 2 1045 2 629 2 761 4 981 2 980 2 226 2 1054 2 762 8 23 2 156 12 571 2 917 2 769 2 991 2 509 4 773 4 838 2 840 4 844 2 846 2 1066 2 646 2 927 2 38 4 248 8 521 2 43 2 44 2 1075 2 252 6 317 2 182 4 186 4 326 2 532 2 396 8 606 4 400 2 197 2 950 8 806 2 547 2 
474 2 44 2 317 2 
474 2 44 2 317 2 
119 2 2 6 127 2 274 4 275 2 277 4 686 2 139 2 140 2 556 2 11 4 557 2 693 2 563 2 824 4 826 2 145 2 978 4 981 2 980 2 149 2 150 2 156 24 987 4 29 4 32 2 840 4 846 4 588 2 38 2 590 4 43 4 44 2 317 2 723 2 182 4 459 2 606 2 197 2 1028 2 65 2 204 2 469 2 1034 2 69 2 746 2 745 2 351 8 1041 2 77 8 79 2 753 2 755 2 221 4 85 6 761 2 762 6 1055 2 88 2 917 2 768 2 509 2 1061 2 927 2 99 2 248 2 1071 2 521 2 525 4 252 16 936 2 106 2 529 2 259 2 260 2 394 4 534 2 396 2 800 2 666 2 950 8 405 2 
790 2 511 2 119 2 123 2 813 2 417 2 397 2 800 2 156 4 139 2 987 2 197 2 405 2 1028 2 547 2 693 2 252 2 
119 2 2 6 127 2 274 4 275 2 277 4 686 2 139 2 140 2 556 4 11 4 557 2 563 2 824 4 826 2 145 2 978 4 981 2 980 2 149 2 150 2 156 20 987 2 29 4 32 2 840 4 846 4 588 2 38 2 590 4 43 4 44 2 317 2 723 2 182 4 459 2 606 2 197 2 65 2 204 2 469 2 1034 2 69 2 746 2 745 2 351 8 1041 2 77 8 79 2 753 2 902 2 755 2 221 4 85 6 761 2 762 6 1055 2 88 2 917 2 768 2 509 2 1061 4 927 2 99 2 248 2 1071 2 521 2 525 4 252 14 936 2 106 2 529 2 259 2 260 2 394 4 534 2 396 2 945 2 666 2 950 8 
119 2 2 6 127 2 274 4 275 2 277 4 686 2 139 2 140 2 556 2 11 4 557 2 693 2 563 2 824 4 826 2 145 2 978 4 981 2 980 2 149 2 150 2 156 24 987 4 29 4 32 2 840 4 846 4 588 2 38 2 590 4 43 4 44 2 317 2 723 2 182 4 459 2 606 2 197 2 1028 2 65 2 204 2 469 2 1034 2 69 2 746 2 745 2 351 8 1041 2 77 8 79 2 753 2 755 2 221 4 85 6 761 2 762 6 1055 2 88 2 917 2 768 2 509 2 1061 2 927 2 99 2 248 2 1071 2 521 2 525 4 252 16 936 2 106 2 529 2 259 2 260 2 394 4 534 2 396 2 800 2 666 2 950 8 405 2 
2 6 811 2 273 2 274 4 5 18 556 22 557 2 561 6 13 18 824 56 566 2 284 4 826 6 567 2 17 2 18 10 570 12 28 8 576 2 577 4 835 4 579 2 582 2 584 2 583 2 585 12 32 2 35 2 37 2 588 2 308 2 311 2 857 2 43 4 860 20 319 2 48 2 49 3 864 2 865 2 325 2 327 2 329 4 56 2 333 2 609 3 872 2 610 2 873 2 58 10 57 6 335 2 59 10 61 2 62 2 64 6 876 2 340 2 879 2 343 2 345 2 612 2 69 2 70 2 348 2 894 2 350 2 617 16 74 2 353 4 896 10 352 2 618 2 907 18 82 2 83 4 908 2 364 20 628 2 911 4 912 2 85 14 632 2 87 2 637 4 917 2 372 2 373 2 643 2 374 2 377 2 378 2 382 2 924 4 926 2 928 2 99 4 931 2 101 12 102 48 934 2 387 2 935 2 652 2 936 14 938 2 937 2 655 2 391 2 657 4 109 2 110 2 115 4 398 2 666 4 403 1 401 2 402 4 947 2 949 8 670 2 951 2 671 2 953 2 956 2 954 2 120 2 413 2 958 2 125 2 126 2 678 4 679 4 130 6 680 2 131 2 133 2 420 2 963 3 135 6 964 2 686 2 965 4 688 2 138 4 422 8 140 2 424 2 692 2 427 2 426 2 694 2 972 2 974 6 143 2 977 18 698 4 697 2 145 2 978 6 432 2 981 2 149 34 983 6 984 4 156 40 986 2 987 2 703 2 989 2 439 4 162 4 164 2 441 2 708 2 996 4 167 16 712 2 997 2 442 12 998 14 174 2 446 6 1002 4 717 2 1004 2 1008 16 1009 2 452 60 181 2 454 4 456 2 724 4 1015 2 183 20 726 4 458 4 1018 8 459 2 729 4 1019 2 460 6 1024 4 1027 2 733 2 197 2 200 2 735 2 465 44 202 2 1032 2 204 2 739 4 205 2 469 2 206 4 1034 4 742 8 471 2 746 6 208 2 211 22 1042 2 751 2 479 6 480 2 483 2 755 2 758 2 759 4 486 2 223 4 1048 4 225 16 224 2 489 2 1049 16 495 4 1053 2 1052 2 228 2 763 2 1055 4 766 2 497 10 499 2 498 2 1059 2 234 6 504 2 508 2 1062 2 237 2 238 2 1063 4 242 4 781 2 241 2 517 2 784 2 1069 2 786 2 525 6 252 30 526 8 1077 2 253 2 255 2 254 2 527 16 528 2 529 2 260 14 1080 2 530 2 263 2 534 4 537 2 798 2 801 2 265 3 267 4 1086 2 1087 2 
61 2 465 6 167 2 680 2 174 2 211 2 1069 2 101 2 896 2 556 2 481 2 252 2 937 2 936 2 260 2 486 2 17 2 325 2 18 2 149 2 265 2 156 2 703 2 59 4 
61 2 465 6 167 2 680 2 174 2 211 2 1069 2 101 2 896 2 556 2 481 2 252 2 937 2 936 2 260 2 486 2 17 2 325 2 18 2 149 2 265 2 156 2 703 2 59 4 
61 2 465 6 167 2 680 2 174 2 211 2 1069 2 101 2 896 2 556 2 481 2 252 2 937 2 936 2 260 2 486 2 17 2 325 2 18 2 149 2 265 2 156 2 703 2 59 4 
162 2 643 4 739 2 345 4 442 4 130 4 681 3 174 2 742 2 446 3 747 2 7 2 211 3 40 4 422 2 523 2 556 3 424 4 252 4 937 2 527 5 974 3 599 2 360 2 907 6 793 2 626 2 1048 2 458 2 1018 2 495 2 799 2 228 4 149 2 54 2 984 2 26 2 402 2 570 2 156 10 
162 2 643 4 739 2 345 4 442 4 130 4 681 2 174 2 742 2 446 2 747 2 1036 2 7 2 211 2 40 4 422 2 523 2 556 2 424 4 252 4 937 2 527 4 974 2 599 2 360 2 284 2 907 6 793 2 626 2 1048 2 458 2 1018 2 495 2 799 2 228 4 460 2 149 2 54 2 984 2 26 2 402 2 570 2 156 10 
162 2 643 4 739 2 345 4 442 4 130 4 681 2 174 2 742 2 446 2 747 2 1036 2 7 2 211 2 40 4 422 2 523 2 556 2 424 4 252 4 937 2 527 4 974 2 599 2 360 2 284 2 907 6 793 2 626 2 1048 2 458 2 1018 2 495 2 799 2 228 4 460 2 149 2 54 2 984 2 26 2 402 2 570 2 156 10 
162 2 643 4 739 2 345 4 442 4 130 4 681 2 174 2 742 2 446 2 747 2 1036 2 7 2 211 2 40 4 422 2 523 2 556 2 424 4 252 4 937 2 527 4 974 2 599 2 360 2 284 2 907 6 793 2 626 2 1048 2 458 2 1018 2 495 2 799 2 228 4 460 2 149 2 54 2 984 2 26 2 402 2 570 2 156 10 
162 2 643 4 739 2 345 4 442 4 130 4 681 2 174 2 742 2 446 2 747 2 1036 4 7 2 211 2 40 4 422 2 523 2 556 2 424 4 252 4 937 2 527 4 974 2 599 2 360 2 284 4 907 6 793 2 626 2 1048 2 458 2 1018 2 495 2 799 2 228 4 460 4 149 2 54 2 984 2 26 2 402 2 570 2 156 10 
330 2 279 2 502 2 867 2 859 2 694 2 
220 2 258 2 1031 2 381 2 1073 2 998 2 859 2 
548 2 674 1 408 2 993 2 33 2 959 2 1033 1 444 2 69 2 1067 2 930 2 39 1 898 1 10 2 718 2 649 2 252 8 863 2 1081 2 491 1 147 2 113 2 328 2 1084 2 156 10 297 2 
162 6 642 4 843 2 612 2 442 12 130 4 742 6 1036 2 965 2 422 6 1006 2 385 2 104 1 650 2 252 6 527 15 284 3 760 2 911 2 458 6 1018 6 495 2 460 5 983 4 984 6 156 6 402 6 1025 2 333 2 298 2 336 2 
0 2 407 2 643 2 603 2 488 2 845 2 492 2 228 2 765 2 817 4 1038 7 156 1 540 2 985 2 424 2 252 1 640 2 484 1 
407 2 0 4 643 2 603 2 488 2 845 2 492 4 228 2 765 4 817 4 1038 6 540 2 985 2 424 2 640 2 
407 2 0 8 643 2 603 2 488 2 845 8 492 8 228 2 765 8 817 4 1038 10 156 1 540 2 985 2 424 2 252 1 640 6 484 1 
765 2 0 2 407 2 643 2 817 2 1038 2 985 2 540 2 488 2 603 2 424 2 492 2 228 2 
673 11 118 2 675 4 677 4 272 8 962 1 276 8 554 2 967 14 695 4 560 4 823 24 283 2 826 26 287 2 285 4 978 36 288 4 982 4 148 4 292 24 152 8 294 4 154 2 156 78 160 10 706 4 163 6 707 4 708 2 709 2 711 2 842 4 997 2 714 16 306 2 587 4 853 4 854 10 1000 4 175 2 176 4 856 8 716 4 42 4 449 4 314 4 720 4 47 6 601 30 1016 6 725 4 604 4 607 4 732 10 734 4 337 2 877 4 878 4 343 2 614 8 470 4 746 28 749 6 214 4 355 4 215 2 358 10 752 2 901 2 756 2 81 2 362 16 1046 4 909 4 85 102 366 2 494 4 496 2 1055 2 235 4 505 24 510 4 919 4 921 16 923 4 514 10 779 4 243 8 783 10 99 6 1068 4 518 4 788 4 1074 2 105 32 251 4 525 44 252 70 388 4 940 8 264 2 534 6 661 8 536 16 944 4 943 4 803 10 544 2 1091 2 
337 2 673 2 675 2 878 2 343 2 128 2 272 6 468 2 470 2 746 12 887 2 749 2 78 2 752 2 901 2 823 8 826 12 285 4 487 2 910 2 978 14 630 10 85 40 494 2 1055 2 294 4 89 2 156 28 235 4 160 2 510 2 163 2 707 4 708 2 709 2 711 2 842 4 997 2 714 14 849 2 306 2 587 2 783 6 854 6 175 2 99 2 788 2 525 14 595 2 252 26 1014 2 47 4 601 6 1017 2 534 2 604 4 943 4 732 6 1091 2 
673 12 675 2 677 6 128 2 272 8 967 12 560 6 695 4 823 42 826 22 285 6 978 36 288 4 982 4 148 6 292 12 152 6 294 6 156 90 706 6 160 12 163 6 707 6 708 2 709 2 711 2 842 6 997 2 714 4 306 2 587 6 1000 6 854 12 175 2 176 4 716 6 42 4 314 4 720 4 595 4 1014 2 180 2 47 8 601 22 725 6 604 6 607 6 732 12 337 4 338 2 878 6 343 2 468 2 470 2 746 22 887 2 749 12 214 6 355 4 78 2 81 2 756 2 1046 6 487 2 910 4 909 4 630 12 85 90 494 6 496 2 1055 4 89 3 505 12 235 4 507 2 510 2 919 6 921 6 777 2 380 6 923 6 779 6 243 12 783 12 99 10 1068 4 788 6 1074 2 525 42 252 78 388 6 940 6 659 6 796 6 534 10 943 6 544 2 
464 2 673 2 878 2 122 2 343 2 882 4 746 6 473 2 476 2 554 2 212 2 749 2 137 2 215 2 358 2 752 2 822 2 359 2 901 2 823 6 826 6 285 2 431 4 978 20 85 48 494 2 700 2 1051 2 830 2 1055 2 294 2 913 2 156 46 233 4 160 2 371 2 771 2 510 2 30 2 1060 2 163 2 707 2 708 2 709 2 711 2 842 2 997 2 514 2 714 36 172 2 36 2 587 2 849 2 384 2 306 2 239 2 925 2 244 2 783 4 854 4 175 2 447 2 648 2 99 2 788 2 525 20 252 44 653 2 47 6 941 2 457 2 1017 2 184 2 324 6 392 2 602 2 604 2 534 2 51 2 802 2 663 2 943 2 538 2 190 2 732 4 803 2 332 4 946 2 196 2 1090 2 1091 2 
684 2 

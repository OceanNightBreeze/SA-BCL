#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (1,384) (1,384) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 374 281 169 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 374 281 169 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 374 281 169 
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 374 281 169 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 374 281 169 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 374 281 169 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 374 281 169 182 307 362 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 61 90 274 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 61 90 274 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:max([I)I
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.ModBitTracker:num_vars()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:union([I[I)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltsLT([II)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ValueTuple:isMissing(I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.Quant:memberOf(D[F)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:gt(II)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE:modulus([I)[I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern:intern([I)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:lexGT([I[I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set; | RETURN | 92707 | return null
utilMDE.ArraysMDE:indexOf([I[I)I | CONSTANT | 22394 | 0 -> 1
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakHasherMap:size()I
daikon.Quant:concat([I[I)[I
daikon.Quant:gte(II)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.ProglangType:dimensions()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | CONSTANT | 11643 | 0 -> -1
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:subsetOf([F[D)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaCharStream:getBeginLine()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:ne(II)Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:subsetOf([S[S)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(II)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType; | RETURN | 5873 | return null
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 279916 | = null
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:eq(FF)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:subsetOf([B[I)Z
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:memberOf(J[J)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Ppt:Ppt()V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | STATEMENT | 24560 | stmt -> ;
daikon.Quant:slice([III)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_sets()I
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:lt(II)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:min([I)I
daikon.Quant:subsetOf([I[I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.ValueTuple:size()I
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.PptSlice0:arity()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | STATEMENT | 5655 | stmt -> ;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:eltsGTE([II)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:noDups([I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 2 110 4 147 2 79 2 24 2 384 2 492 2 18 2 493 2 
5 2 526 6 376 2 439 2 419 2 539 2 481 2 269 2 10 6 181 6 289 2 
1 2 344 6 367 2 114 4 68 2 183 4 314 6 72 2 316 2 167 6 250 6 384 2 277 2 
1 4 476 8 311 4 392 2 391 6 418 2 3 2 133 6 163 2 37 4 240 10 318 14 247 4 249 6 106 6 521 6 491 2 330 2 52 8 416 6 23 2 123 8 304 8 384 4 97 15 
389 4 96 6 
144 2 
292 2 212 2 458 2 443 2 14 2 294 2 29 2 461 2 165 2 537 2 264 2 415 2 319 2 339 2 431 2 190 2 59 4 440 2 523 2 
1 4 386 2 476 32 64 8 391 16 390 4 133 16 34 2 37 2 101 2 240 6 426 6 206 2 243 6 318 48 41 2 249 4 106 16 520 4 252 6 521 18 324 6 407 4 529 6 178 4 531 6 368 2 117 4 52 32 265 4 188 4 416 16 472 6 509 4 304 32 384 4 123 22 383 2 97 55 
190 2 287 2 541 2 
363 2 496 22 111 2 410 2 198 10 164 2 19 2 39 2 95 2 468 2 341 2 432 2 108 2 175 2 
476 2 391 2 133 2 423 2 37 2 240 4 318 4 249 2 106 2 74 2 521 2 12 2 434 2 527 2 220 2 17 2 52 2 416 2 336 2 271 2 123 2 304 2 97 6 
476 8 215 2 391 4 529 6 178 4 133 4 20 2 117 4 52 8 426 6 318 12 416 4 23 2 106 4 123 4 304 8 97 16 
343 10 231 2 312 4 130 2 67 2 420 2 422 4 483 2 238 4 4 4 204 4 137 2 284 62 317 2 321 4 487 4 170 2 208 4 286 4 450 2 431 4 287 6 358 4 532 2 179 14 296 4 413 2 298 2 335 2 339 2 94 2 119 2 120 2 190 8 57 2 541 2 59 4 27 10 474 2 98 2 
129 2 398 2 32 2 251 2 144 2 412 2 81 2 261 2 503 2 186 2 
1 8 281 2 484 2 350 2 425 4 209 4 360 2 13 2 151 2 374 2 153 2 86 2 301 2 381 2 384 8 160 2 161 2 444 2 102 2 169 2 171 5 405 2 454 1 323 4 337 2 470 2 60 1 
166 2 384 2 
414 2 8 2 384 4 
408 2 
62 2 63 2 280 2 2 2 66 28 480 6 282 4 349 2 69 2 70 2 283 2 427 6 139 2 354 2 430 2 75 6 211 2 76 2 494 28 361 4 216 8 219 6 217 4 80 2 222 2 504 2 152 2 21 2 88 28 89 2 91 6 377 6 155 2 505 6 506 2 158 2 159 2 306 6 511 6 31 6 234 2 516 2 103 4 404 2 42 6 406 2 452 6 451 2 409 2 45 2 49 6 463 2 535 6 332 6 333 6 334 6 53 2 118 2 122 4 124 2 125 2 
378 1 25 2 35 2 262 2 
78 2 262 2 
205 2 230 2 141 2 190 2 330 2 262 2 99 2 
65 2 141 2 262 2 
459 2 141 2 262 2 
322 2 507 2 25 2 
141 2 262 2 
322 2 11 2 
214 2 262 2 
322 2 30 2 25 2 
168 2 25 2 273 2 
46 2 25 2 191 2 
25 2 210 2 58 2 
448 2 25 2 369 2 
322 2 464 2 
436 2 262 2 
438 2 273 2 
320 2 191 2 
489 2 58 2 
448 2 135 2 
322 2 290 2 
448 2 393 2 
457 2 58 2 
300 2 191 2 
447 2 273 2 
322 2 30 2 115 2 25 2 
322 2 30 2 115 2 25 2 437 2 
322 2 25 2 73 2 
322 2 25 2 33 2 
295 2 134 2 313 2 352 2 
128 2 190 2 272 2 99 2 
205 2 128 2 40 2 190 2 272 2 99 2 
141 2 190 2 330 2 262 2 456 2 99 2 
519 2 174 2 
429 2 190 2 330 2 99 2 
142 2 58 2 
448 2 512 2 
273 2 50 2 
176 2 191 2 
448 2 478 2 191 2 
448 2 191 2 473 2 
448 2 260 2 191 2 
448 2 113 2 191 2 
442 2 7 2 326 6 373 2 467 2 190 2 99 2 276 2 
22 2 322 2 
387 2 327 2 496 6 394 2 395 4 411 2 48 2 536 4 402 2 375 2 245 2 508 2 189 2 55 2 453 2 288 2 305 2 126 2 
199 2 25 2 
162 2 
1 8 281 2 161 2 444 2 350 2 484 2 425 4 102 2 169 2 405 2 171 4 209 4 323 4 360 2 13 2 151 2 374 2 86 2 153 2 337 2 470 2 381 2 26 2 384 8 160 2 
1 8 281 2 484 2 350 2 425 4 209 4 360 2 13 2 151 2 374 2 153 2 86 2 381 2 26 2 384 8 160 2 161 2 444 2 102 2 169 2 171 6 405 2 454 2 323 4 337 2 470 2 60 2 
1 8 281 2 161 2 444 2 350 2 484 2 425 4 102 2 169 2 405 2 171 4 209 4 323 4 360 2 13 2 151 2 374 2 86 2 153 2 337 2 470 2 381 2 26 2 384 8 160 2 
1 8 281 2 484 2 350 2 425 4 209 4 360 2 13 2 151 2 374 2 153 2 86 2 381 2 26 2 384 8 160 2 161 2 444 2 102 2 169 2 171 6 405 2 454 2 323 4 337 2 470 2 60 2 
1 8 281 2 484 2 350 2 425 4 209 4 360 2 13 2 151 2 374 2 153 2 86 2 381 2 26 2 384 8 160 2 161 2 444 2 102 2 169 2 171 5 405 2 454 1 323 4 337 2 470 2 60 1 
1 8 281 2 195 2 197 2 132 2 350 2 484 2 425 4 428 2 209 4 360 2 362 2 13 2 500 2 151 2 223 2 374 2 86 2 153 2 381 2 384 12 160 2 307 2 161 2 444 2 513 2 102 2 169 2 405 2 171 6 172 2 323 4 454 2 180 2 182 2 337 2 470 2 60 2 
177 2 112 2 379 2 518 2 239 2 229 2 
224 2 154 2 112 2 156 2 248 2 275 2 109 2 
0 1 1 8 477 2 345 2 130 1 446 2 397 2 36 2 403 2 244 2 488 1 364 2 257 2 259 2 533 2 116 2 370 1 82 2 372 2 331 2 184 2 337 2 119 1 270 2 192 2 384 10 
1 6 476 6 64 2 391 6 133 6 100 2 401 2 426 4 318 12 517 2 243 4 106 6 255 2 178 2 329 2 51 2 52 6 265 2 87 2 226 2 188 2 416 6 472 4 384 6 304 6 97 17 441 2 
1 1 279 2 43 7 131 2 530 2 460 2 201 2 371 1 297 4 424 2 83 2 485 2 104 2 417 2 140 2 303 2 107 2 384 1 
279 2 43 6 131 2 530 2 460 2 201 2 297 4 424 4 83 2 485 2 104 2 417 2 140 2 303 4 107 4 
1 1 279 2 43 10 131 2 530 6 460 2 201 2 371 1 297 4 424 8 83 2 485 8 104 2 417 2 140 2 303 8 107 8 384 1 
279 2 43 2 131 2 460 2 201 2 297 2 424 2 83 2 104 2 417 2 140 2 303 2 107 2 
1 20 127 4 136 2 143 2 293 2 157 2 28 2 161 4 444 4 171 13 449 2 455 2 323 8 454 3 462 2 466 4 338 2 469 2 470 4 61 2 60 3 194 2 482 2 351 1 209 6 213 4 495 2 498 2 218 4 499 2 90 2 92 4 93 2 227 2 384 20 236 2 399 2 237 2 241 2 253 2 256 2 524 2 525 2 258 1 263 2 266 2 121 2 274 2 
127 38 1 44 475 2 479 2 421 4 200 2 346 2 202 2 347 2 203 2 348 2 71 2 136 2 351 2 138 4 6 2 285 2 486 2 9 4 353 2 209 20 490 2 356 2 357 2 291 2 77 2 146 2 365 2 433 4 366 2 497 2 148 2 499 2 221 2 15 6 150 2 16 2 502 2 84 2 299 2 90 2 93 2 92 6 302 2 382 2 385 2 384 46 228 2 308 2 510 2 309 2 388 2 310 2 161 2 232 2 233 2 444 2 396 2 235 4 400 2 315 2 246 2 171 42 323 20 522 2 325 2 173 2 524 2 528 2 44 2 328 4 534 4 462 4 47 2 538 2 465 2 187 2 268 2 338 2 54 2 470 2 471 2 540 6 121 2 342 2 274 2 56 2 193 2 278 2 61 2 
127 14 1 26 475 2 71 2 136 2 351 2 6 2 207 2 9 2 209 8 143 2 359 2 291 2 213 6 433 2 293 2 218 2 149 2 499 2 501 2 90 2 93 1 92 6 227 4 380 2 384 26 28 2 510 2 161 2 444 2 445 2 236 2 237 2 400 2 315 2 38 4 241 2 242 4 171 20 253 2 454 4 323 10 455 2 522 2 524 2 44 2 534 2 462 2 263 2 185 2 466 6 266 2 267 4 338 2 470 2 274 2 60 4 61 2 
194 10 127 14 1 26 196 2 482 2 203 4 348 4 136 2 351 2 6 2 285 2 9 6 209 14 355 2 291 2 145 2 495 2 433 6 435 2 498 2 499 2 502 4 85 2 299 4 90 2 93 2 92 8 157 2 382 4 384 28 308 2 510 2 388 2 161 2 232 2 444 2 233 2 399 2 514 2 515 2 400 2 105 4 171 38 449 2 454 10 323 14 254 4 256 10 524 2 534 6 462 2 47 2 338 2 340 2 469 6 470 2 540 6 342 2 274 2 56 4 60 10 61 2 
225 2 

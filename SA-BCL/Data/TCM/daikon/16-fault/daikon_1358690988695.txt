#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (140,202) (140,202) (15,138,497,533,739) (15,138,497,533,739) (15,138,497,533,739) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 677 539 414 137 213 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 32 389 283 216 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 7 409 126 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 7 409 126 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 7 409 126 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 7 409 126 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 913 | = null
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:split(I)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.MathMDE:sign(I)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptSlice1:num_samples()I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | CONDITION | 1462 | if (x) -> if (!x)
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_51()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eq(JJ)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ProglangType:dimensions()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:eltsLT([II)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 283084 | = null
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:gte(II)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:intern([I)[I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_47()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:isReverse([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Debug:logOn()Z
daikon.Quant:gt(II)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:slice([III)[I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3_1()Z
daikon.diff.InvMap:InvMap()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLT([I[I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Invariant:logOn()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | ASSIGN | 4792 | = null
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.Node:Node()V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_ntk()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_2_1(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltsGT([II)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern:intern([J)[J
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:noDups([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:lt(II)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:lexNotEqual([I[I)Z | CONDITION | 170166 | if (x) -> if (!x)
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ProglangType:isArray()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([D[D)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:justified()Z
daikon.Quant:lte(II)Z
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:intersection([I[I)[I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:pow_fast(II)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:isIntegral()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ProglangType:baseIsScalar()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:min([I)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_13()Z
utilMDE.Intern:numIntArrays()I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:union([I[I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3R_135()Z
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.PptSlice0:arity()I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ModBitTracker:num_samples()I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_56()Z
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:sameLength([I[I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:setEqual([I[I)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName:hashCode()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_53()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus([I)[I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(J[J)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoAux:hashCode()I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariants:Invariants()V
daikon.PptSlice2:arity()I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long; | RETURN | 14632 | return null
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:relate_var()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter; | ASSIGN | 22890 | = null
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_14()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:size()I
jtb.JavaCharStream:readChar()C
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:ne(II)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.RootNode:RootNode()V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:getEndLine()I
daikon.Quant:lexGTE([I[I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.ModBitTracker:num_vars()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eq(II)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3R_85()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_57()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
202 2 59 2 268 2 43 4 527 2 520 2 273 2 529 2 140 2 
263 6 737 2 82 2 165 2 316 2 194 2 750 6 378 2 340 2 334 6 663 2 
377 2 658 6 100 6 327 2 407 2 236 4 652 6 140 2 202 2 713 4 570 2 628 6 614 2 
326 16 349 12 122 4 198 10 743 2 351 29 522 16 202 6 496 26 452 8 108 10 630 2 453 2 157 6 550 8 180 4 181 10 499 4 735 16 140 6 115 10 188 2 385 2 17 4 301 2 279 8 303 6 231 2 98 8 325 10 
548 6 736 4 
211 2 
516 4 471 2 288 2 50 2 718 2 202 4 239 2 241 2 154 2 242 2 204 2 725 2 575 2 577 4 59 2 205 2 339 2 578 4 732 2 687 2 62 2 435 2 382 2 13 2 591 2 693 2 71 2 649 2 650 2 125 2 748 2 270 2 456 2 552 2 221 2 140 4 186 2 555 4 189 2 366 2 758 2 559 2 231 2 465 2 
326 12 670 4 349 8 198 6 351 22 522 12 202 4 654 2 655 4 395 6 496 18 215 2 452 4 108 6 206 2 181 6 735 12 140 4 116 8 321 4 229 6 192 6 325 6 
311 2 687 2 214 2 
99 2 401 2 174 2 259 22 62 2 3 2 508 10 461 2 19 2 56 2 726 2 657 2 760 2 707 2 
42 2 326 2 349 2 198 2 351 6 124 2 522 2 394 2 496 4 452 2 108 2 682 2 727 2 157 2 181 2 499 2 272 2 460 2 735 2 226 2 115 4 320 2 325 2 
326 6 349 2 22 2 180 2 181 4 198 4 351 14 735 6 522 6 321 4 395 4 655 2 724 2 496 10 108 4 192 6 325 4 
444 2 516 4 197 4 173 2 102 2 626 2 289 2 701 2 27 2 675 2 392 2 235 2 718 2 81 4 54 2 330 2 705 4 311 6 478 4 214 2 573 2 398 4 482 2 133 4 269 4 339 4 687 8 433 4 662 62 274 2 639 4 556 10 510 14 20 2 463 4 143 4 645 2 669 10 647 2 594 2 
423 2 132 2 158 2 729 2 360 2 380 2 587 2 211 2 644 2 120 2 
232 2 149 2 47 1 328 2 369 2 674 2 474 2 0 1 200 2 568 2 291 2 237 4 4 2 202 22 5 2 105 1 58 1 427 2 337 5 634 4 731 1 635 2 432 2 580 4 249 1 583 2 381 2 586 1 437 1 436 2 383 1 15 2 486 2 343 2 739 2 386 1 488 1 302 2 304 1 643 2 167 2 72 1 443 2 537 4 445 1 538 2 352 6 448 2 28 3 744 2 497 2 219 5 313 5 312 2 607 2 404 1 88 4 660 1 273 2 140 24 187 2 558 1 511 2 714 2 759 2 464 6 
695 2 140 2 
561 2 317 2 140 4 
536 2 
560 2 469 2 290 2 475 82 677 2 371 6 571 2 680 2 683 82 111 4 298 4 300 2 208 4 582 2 584 2 12 2 485 2 592 2 593 8 305 2 698 26 213 2 306 4 307 2 598 4 702 2 495 14 308 10 603 2 310 2 217 6 399 16 498 2 606 20 31 2 315 2 608 36 501 2 609 4 502 2 137 2 504 2 505 26 34 2 38 2 142 28 228 26 323 12 414 2 622 2 623 20 517 2 421 2 329 2 234 4 151 4 238 10 721 14 153 26 57 2 243 2 428 28 336 14 60 2 636 10 160 2 251 20 637 8 163 2 535 26 65 2 439 10 67 26 642 26 347 10 69 2 255 2 73 2 257 2 75 2 539 2 742 6 172 4 261 12 651 2 80 2 354 8 653 26 547 26 178 2 745 26 266 2 746 2 659 2 359 82 182 2 459 2 184 2 363 2 753 2 557 10 95 4 97 26 666 2 667 2 280 2 762 2 
749 2 506 2 176 2 447 1 
749 2 415 2 
749 2 122 2 135 2 196 2 422 2 687 2 230 2 
749 2 525 2 135 2 
749 2 135 2 715 2 
506 2 164 2 694 2 
749 2 135 2 
694 2 63 2 
749 2 420 2 
506 2 694 2 368 2 
506 2 671 2 147 2 
506 2 168 2 484 2 
506 2 419 2 14 2 
506 2 361 2 544 2 
694 2 191 2 
749 2 712 2 
212 2 147 2 
292 2 168 2 
419 2 177 2 
361 2 79 2 
74 2 694 2 
722 2 361 2 
419 2 55 2 
89 2 168 2 
697 2 147 2 
506 2 487 2 694 2 368 2 
367 2 
506 2 589 2 694 2 
506 2 694 2 78 2 
49 2 144 2 618 2 
196 2 687 2 638 2 51 2 
462 2 196 2 687 2 230 2 638 2 51 2 
749 2 122 2 135 2 196 2 687 2 68 2 
221 2 324 2 
122 2 171 2 196 2 687 2 
282 2 419 2 
361 2 207 2 
129 2 147 2 
661 2 168 2 
193 2 361 2 168 2 
361 2 168 2 619 2 
526 2 361 2 168 2 
361 2 699 2 168 2 
491 2 196 2 541 2 127 6 481 2 687 2 35 6 513 2 
240 2 694 2 
400 2 121 4 405 2 285 2 259 6 90 2 543 2 676 2 664 2 640 4 128 2 740 2 396 2 106 2 245 2 605 2 118 2 119 2 
506 2 493 2 
5 2 
468 2 472 2 369 2 674 2 287 2 474 2 200 2 291 2 202 26 105 2 477 2 681 2 110 2 295 2 113 2 580 4 690 2 583 2 486 2 302 2 388 2 700 2 492 2 131 2 312 6 313 2 219 2 711 2 140 26 139 2 611 2 141 4 511 2 413 2 39 2 714 2 617 2 232 2 149 2 45 4 328 6 625 2 237 4 58 2 430 2 337 4 530 2 634 4 531 2 338 8 432 2 436 2 438 2 343 2 643 2 167 2 254 2 537 4 443 2 538 2 258 2 77 2 352 6 448 6 744 2 549 2 87 2 751 4 273 2 185 2 187 2 94 2 277 2 464 4 
468 2 472 2 369 2 674 2 287 2 474 2 200 2 291 2 202 26 105 2 477 2 681 2 110 2 295 2 113 2 688 2 580 4 690 2 583 2 486 2 302 2 388 2 700 2 492 2 131 2 312 6 313 2 219 2 711 2 140 26 139 2 611 2 141 4 511 2 413 2 39 2 714 2 617 2 232 2 149 2 45 4 328 6 625 2 237 4 58 2 426 2 427 1 430 2 337 4 530 2 634 4 531 2 338 8 432 2 161 2 436 2 438 2 343 2 643 2 167 2 537 4 443 2 538 2 77 2 352 6 448 6 744 2 549 2 751 4 273 2 185 2 187 2 94 2 665 2 277 2 759 1 464 5 
224 2 
9 2 350 2 
148 4 466 2 233 4 101 4 474 2 476 2 523 2 202 6 569 2 152 10 104 2 723 2 372 2 6 2 334 6 728 8 684 8 634 2 340 4 341 2 580 2 483 2 737 2 165 4 384 2 486 2 343 2 440 2 210 2 346 2 302 2 696 4 70 2 596 2 24 2 352 4 123 2 393 2 599 4 263 6 494 2 744 2 218 2 179 2 403 2 402 2 750 6 223 2 752 2 91 2 663 2 225 4 140 12 509 2 187 2 37 2 754 2 322 2 714 2 616 2 
148 4 466 2 233 4 101 4 474 2 476 2 202 6 523 2 569 2 152 10 104 2 372 2 723 2 6 2 334 8 728 8 684 8 634 2 340 4 580 2 483 2 737 2 165 4 384 2 486 2 343 2 440 2 210 2 346 2 302 2 696 4 70 2 596 2 24 2 352 4 123 2 542 2 393 2 599 4 263 8 494 2 82 2 744 2 218 2 179 2 403 2 402 2 750 6 223 2 91 2 663 2 364 4 225 4 140 12 509 2 187 2 37 2 754 2 322 2 615 2 714 2 616 2 
179 2 148 2 466 2 402 2 750 2 340 2 483 2 91 2 476 2 225 4 569 2 494 2 165 2 723 2 346 2 696 4 334 2 70 2 
148 4 466 2 233 4 101 4 474 2 476 2 523 2 202 6 569 2 152 6 104 2 723 2 372 2 6 2 334 6 728 4 684 4 634 2 340 4 341 2 580 2 483 2 165 4 384 2 486 2 343 2 440 2 210 2 346 2 302 2 696 4 70 2 596 2 24 2 352 4 123 2 393 2 599 4 263 6 494 2 82 2 744 2 218 2 179 2 403 2 402 2 750 4 223 2 752 2 91 2 663 2 225 4 140 12 509 2 187 2 37 2 754 2 322 2 714 2 616 2 
148 4 466 2 233 4 101 4 474 2 476 2 523 2 202 6 569 2 152 6 104 2 723 2 372 2 6 2 334 4 728 4 684 4 634 2 340 4 378 2 341 2 580 2 483 2 165 4 384 2 486 2 343 2 440 2 210 2 346 2 302 2 696 4 70 2 596 2 24 2 352 4 123 2 393 2 599 4 263 6 494 2 744 2 218 2 179 2 403 2 402 2 750 6 223 2 752 2 91 2 663 2 225 4 140 12 509 2 187 2 37 2 754 2 322 2 714 2 616 2 
148 4 466 2 233 4 101 4 474 2 476 2 523 2 202 6 569 2 152 6 104 2 723 2 372 2 6 2 334 6 728 4 684 8 634 2 340 4 341 2 580 2 483 2 737 2 165 4 384 2 486 2 343 2 440 2 210 2 346 2 302 2 696 4 70 2 596 2 24 2 352 4 123 2 393 2 599 4 263 6 494 2 744 2 218 2 179 2 403 2 402 2 750 6 223 2 752 2 91 2 663 2 225 4 140 12 509 2 187 2 37 2 754 2 322 2 714 2 616 2 
148 4 466 2 233 4 101 4 474 2 476 2 523 2 202 6 569 2 152 10 104 2 723 2 372 2 6 2 334 6 728 8 684 8 634 2 340 4 378 2 341 2 580 2 483 2 737 2 165 4 384 2 486 2 343 2 440 2 210 2 346 2 302 2 696 4 70 2 596 2 24 2 352 4 123 2 393 2 599 4 263 8 494 2 744 2 218 2 179 2 403 2 402 2 750 8 223 2 752 2 91 2 663 2 225 4 140 12 509 2 187 2 37 2 754 2 322 2 714 2 616 2 
148 4 466 2 233 4 101 4 474 2 476 2 523 2 202 6 569 2 152 10 104 2 723 2 372 2 6 2 334 6 728 8 684 8 634 2 340 4 341 2 580 2 483 2 737 2 165 4 384 2 486 2 343 2 440 2 210 2 346 2 302 2 696 4 70 2 596 2 24 2 352 4 123 2 393 2 599 4 263 6 494 2 744 2 218 2 179 2 403 2 402 2 750 6 223 2 752 2 91 2 663 2 225 4 140 12 509 2 187 2 37 2 754 2 322 2 714 2 616 2 
561 6 562 2 195 10 369 2 199 2 200 2 202 24 569 2 372 2 6 2 374 6 576 6 378 4 579 2 580 4 581 2 583 2 384 2 210 2 596 2 24 2 390 2 597 2 599 4 393 2 604 2 218 2 219 2 402 2 403 2 406 2 223 2 410 6 610 2 225 4 612 2 37 4 411 6 412 2 616 2 41 6 417 2 418 4 232 2 621 6 233 8 46 2 45 4 625 2 424 1 237 4 425 2 427 2 631 2 633 2 632 2 430 4 634 4 431 1 432 2 252 2 434 1 436 2 440 2 643 2 70 2 443 2 76 4 77 2 448 6 263 12 84 6 271 2 91 2 663 4 273 2 277 2 668 2 464 6 466 2 284 2 470 2 101 6 472 2 674 2 474 2 291 2 476 2 104 2 110 2 684 2 114 2 483 2 691 2 486 2 692 2 695 6 302 2 696 4 489 1 700 2 123 2 703 2 494 2 309 1 131 2 312 6 313 2 140 46 509 2 319 8 322 4 511 2 714 2 145 1 148 4 149 2 328 8 523 2 152 2 723 2 528 2 334 4 337 2 530 2 338 4 532 2 340 4 733 7 162 7 534 6 165 4 343 2 536 6 345 1 346 2 167 12 741 6 537 4 538 2 170 2 540 6 352 6 545 6 546 6 744 2 356 2 747 6 179 2 358 2 750 8 553 1 752 2 183 1 185 2 187 2 754 2 756 2 759 2 
561 6 466 2 284 2 470 2 562 2 195 10 472 2 101 6 369 2 674 2 474 2 199 2 200 2 476 2 291 2 202 26 569 2 104 2 6 2 372 2 374 6 576 6 110 4 684 6 114 2 579 2 580 4 581 2 483 2 691 2 583 2 384 2 486 2 692 2 695 6 210 2 302 2 696 4 24 2 596 2 390 2 597 2 700 2 123 2 393 2 599 4 703 2 494 2 604 2 131 4 218 2 219 2 313 2 312 6 403 2 402 2 406 2 223 2 410 6 610 2 140 48 225 4 612 2 509 2 411 6 319 8 37 4 141 2 322 4 412 2 511 2 714 2 616 2 41 6 417 2 418 4 621 6 232 2 148 4 149 2 233 8 45 4 46 2 625 2 328 8 237 4 523 2 152 2 723 2 425 2 528 2 334 8 427 2 631 2 632 2 633 2 337 2 430 4 530 2 634 4 338 8 532 2 340 4 432 2 252 2 534 6 436 2 737 4 165 4 343 2 536 6 440 2 641 2 346 2 643 2 167 12 70 2 741 6 537 4 443 2 256 2 170 2 538 2 540 6 76 4 77 4 352 6 448 6 545 6 263 12 546 6 744 2 356 2 747 6 358 2 84 6 179 2 750 8 271 2 752 2 91 2 273 2 663 4 185 2 187 2 754 2 756 2 277 2 668 2 464 6 759 2 
561 6 466 2 284 2 470 2 562 2 195 10 472 2 101 6 369 2 674 2 474 2 199 2 200 2 476 2 291 2 202 26 569 2 104 2 6 2 372 2 374 6 576 6 110 4 684 6 114 2 579 2 580 4 581 2 483 2 691 2 583 2 384 2 486 2 692 2 695 6 210 2 302 2 696 4 24 2 596 2 390 2 597 2 700 2 123 2 393 2 599 4 703 2 494 2 604 2 131 4 218 2 219 2 313 2 312 6 403 2 402 2 406 2 223 2 410 6 610 2 140 48 225 4 612 2 509 2 411 6 319 8 37 4 141 2 322 4 412 2 511 2 714 2 616 2 41 6 417 2 418 4 621 6 232 2 148 4 149 2 233 8 45 4 46 2 625 2 328 8 237 4 523 2 152 6 723 2 425 2 528 2 334 8 728 4 427 2 631 2 632 2 633 2 337 2 430 4 530 2 634 4 338 8 532 2 340 4 432 2 252 2 534 6 436 2 737 4 165 4 343 2 536 6 440 2 641 2 346 2 643 2 167 12 70 2 741 6 443 2 537 4 256 2 170 2 538 2 540 6 76 4 77 4 352 6 448 6 545 6 263 12 546 6 744 2 356 2 747 6 358 2 84 6 179 2 750 8 271 2 752 2 91 2 273 2 663 4 185 2 187 2 754 2 756 2 277 2 668 2 464 6 759 2 
561 12 562 2 195 8 369 2 565 2 199 2 200 2 370 6 202 24 569 2 372 2 6 2 374 6 576 6 378 2 579 2 580 4 379 6 581 2 583 2 384 2 590 2 210 2 596 2 24 2 390 2 597 2 393 2 599 4 604 2 218 2 29 2 219 4 402 2 403 2 406 2 223 2 410 6 610 2 225 4 612 2 37 4 411 6 616 2 41 12 417 2 418 4 232 2 621 6 233 8 44 2 46 2 45 6 625 4 237 4 425 2 427 2 631 2 633 2 632 2 430 4 634 4 432 2 252 2 436 2 64 6 440 2 641 2 643 2 70 2 443 2 256 2 76 4 77 4 448 8 263 16 82 2 84 6 271 2 458 2 91 2 663 4 273 2 277 2 668 2 464 6 466 2 284 2 470 2 472 2 101 6 674 2 474 2 291 2 476 2 104 2 110 4 296 6 684 6 114 2 686 2 483 2 691 2 486 2 692 2 695 12 302 2 696 4 700 2 123 2 703 2 494 2 131 4 312 8 313 4 708 6 140 52 509 2 319 8 141 2 322 4 511 2 714 2 148 4 149 2 328 12 521 6 523 2 152 6 723 2 528 2 334 10 728 4 337 4 530 2 338 10 532 2 340 4 734 2 534 6 737 4 165 4 343 2 536 12 346 2 167 10 741 6 537 4 170 2 538 2 540 12 352 6 545 6 546 12 744 2 356 2 747 6 179 2 358 2 551 2 750 10 752 2 554 6 185 4 187 2 754 2 756 2 190 6 757 6 759 2 
466 2 24 2 596 2 233 2 101 2 599 2 476 2 263 4 523 2 152 4 104 2 6 2 372 2 723 2 334 6 728 4 218 2 684 6 179 2 402 2 750 6 340 4 223 2 752 2 91 2 663 2 140 4 225 2 737 2 384 2 165 4 210 2 696 2 616 2 70 2 
467 2 466 2 101 2 472 2 195 2 369 2 674 2 474 2 200 2 291 2 2 2 476 2 202 24 5 2 104 2 6 2 372 2 684 6 580 4 583 2 384 2 486 2 210 2 302 2 696 2 24 2 596 2 599 2 218 2 312 6 313 3 219 3 134 2 402 2 223 2 138 2 225 2 140 28 412 2 511 2 714 2 616 2 232 2 149 2 233 2 45 4 328 8 237 4 53 2 523 2 152 2 723 2 334 6 427 2 430 2 337 3 530 2 634 4 61 2 340 4 432 2 247 3 533 2 436 2 737 2 165 4 343 2 440 2 643 2 167 4 70 2 537 4 443 2 538 2 352 6 448 6 263 4 744 2 179 2 750 6 752 2 91 2 663 2 273 2 187 2 277 2 96 2 464 6 759 2 
275 2 24 2 616 2 
275 2 24 2 616 2 
673 2 284 2 101 4 195 2 472 2 369 2 674 2 474 2 200 2 291 2 202 16 569 2 6 2 679 2 477 4 480 2 574 2 10 2 110 4 684 6 378 4 580 4 583 2 384 2 486 2 302 2 696 2 24 6 700 4 123 2 599 2 494 2 131 4 312 2 30 4 403 2 406 2 222 2 140 24 225 2 509 2 318 2 37 4 322 2 511 2 714 2 616 4 418 2 232 2 148 4 149 2 233 4 328 2 237 4 52 2 152 6 723 2 333 4 334 12 728 4 427 2 631 2 430 6 337 2 634 4 338 4 159 2 340 4 432 2 436 2 737 4 165 4 343 2 344 2 66 2 643 2 167 4 441 2 70 2 442 2 741 2 537 4 443 2 348 2 648 2 538 2 76 2 77 4 352 6 448 2 263 16 82 4 744 2 267 2 179 4 750 12 457 2 273 2 663 4 275 2 187 2 277 2 464 6 759 2 
418 2 170 2 195 2 457 2 483 2 474 2 408 2 52 2 140 4 507 2 202 2 425 2 9 2 155 2 66 2 167 2 741 2 
672 2 284 2 101 4 472 2 369 2 674 2 474 2 200 2 291 2 202 16 569 2 6 2 477 4 480 2 574 2 10 2 110 4 684 6 378 4 580 4 583 2 384 2 486 2 302 2 696 2 24 6 700 4 123 2 393 2 599 2 494 2 131 4 312 2 30 4 403 2 406 2 222 4 140 24 225 2 509 2 318 2 37 4 322 4 511 2 714 2 512 2 616 4 232 2 148 4 149 2 233 4 328 2 237 4 52 2 152 6 723 2 333 4 334 12 156 2 728 4 427 2 631 2 430 6 337 4 634 4 338 4 159 2 340 4 432 2 342 2 436 2 737 4 165 4 343 2 66 2 643 2 167 2 441 2 70 2 442 2 741 2 537 4 443 2 648 2 538 2 76 2 77 4 352 6 448 2 263 16 82 4 744 2 265 2 267 2 179 4 750 12 457 2 273 2 663 4 275 2 187 2 277 2 464 6 759 2 
284 2 101 4 195 2 472 2 369 2 674 2 566 2 474 2 200 2 291 2 202 16 569 2 6 2 678 2 477 4 480 2 574 2 10 2 110 4 684 6 378 4 580 4 583 2 384 2 486 2 302 2 696 2 24 6 700 4 123 2 393 2 599 2 494 2 131 4 312 2 30 4 403 2 406 2 500 2 222 2 140 24 225 2 36 2 509 2 318 2 37 4 322 4 511 2 714 2 616 4 418 2 232 2 148 4 149 2 233 4 328 2 237 4 52 2 152 6 723 2 333 4 334 12 728 4 427 2 631 2 430 6 337 2 634 4 338 4 159 2 340 4 432 2 436 2 737 4 165 4 343 2 66 2 643 2 167 4 441 2 70 2 442 2 741 2 537 4 443 2 648 2 538 2 76 2 77 4 352 6 448 2 263 16 82 4 744 2 267 2 179 4 86 2 750 12 457 2 273 2 663 4 275 2 187 2 277 2 464 6 759 2 
283 2 562 2 198 2 473 2 674 2 474 2 567 2 200 2 291 2 202 20 103 2 373 2 108 2 114 2 580 4 583 2 486 2 18 2 302 2 117 2 389 2 25 2 26 2 395 4 604 2 496 4 397 6 216 2 312 6 313 2 219 2 314 2 32 2 710 2 140 26 714 2 325 2 146 4 416 2 326 2 620 2 149 2 45 4 328 8 150 2 717 2 627 2 237 2 720 1 522 2 524 2 629 2 244 2 427 1 335 2 633 2 430 2 337 2 530 2 634 4 730 2 432 2 735 2 436 2 343 2 643 2 167 2 646 2 537 2 443 2 351 6 352 6 446 2 448 6 451 2 655 2 744 2 356 2 181 2 362 1 273 2 365 2 187 2 755 2 756 2 277 2 759 1 464 3 
595 4 21 2 45 2 564 2 328 2 48 2 353 2 201 1 1 2 448 2 202 2 8 2 572 2 219 3 313 3 312 2 337 3 530 2 299 2 689 2 136 3 185 6 140 2 276 2 281 2 
595 4 337 2 530 2 21 2 299 2 564 2 45 2 328 2 48 2 689 2 136 2 353 2 185 6 448 2 1 2 140 2 202 2 276 2 8 2 572 2 281 2 312 2 313 2 219 2 
595 4 337 2 530 2 21 2 299 2 564 2 45 2 328 2 48 2 689 2 136 2 353 2 185 6 448 2 1 2 140 2 202 2 276 2 8 2 572 2 281 2 312 2 313 2 219 2 
326 2 518 2 624 2 328 2 198 2 522 2 202 4 8 2 332 2 107 3 108 2 337 3 530 2 246 4 250 4 735 2 585 2 303 2 490 2 23 2 391 2 351 6 175 3 450 2 600 2 496 4 706 2 656 4 219 3 220 6 181 2 709 2 33 4 140 10 92 4 279 4 40 2 325 2 514 3 515 2 
490 2 326 2 23 2 349 2 624 2 518 2 328 2 198 2 351 4 391 2 175 2 450 2 202 4 522 2 600 2 332 2 496 4 8 2 452 2 108 2 107 2 706 2 656 4 453 2 219 2 337 2 246 4 530 2 220 6 181 2 709 2 250 4 33 4 585 2 735 2 140 10 92 4 279 4 303 2 40 2 325 2 514 2 515 2 
490 2 326 2 23 2 349 2 624 2 518 2 328 2 198 2 351 4 391 2 175 2 450 2 202 4 522 2 600 2 332 2 496 4 8 2 452 2 108 2 107 2 706 2 656 4 453 2 219 2 337 2 246 4 530 2 220 6 181 2 709 2 250 4 33 4 585 2 735 2 140 10 92 4 279 4 303 2 40 2 325 2 514 2 515 2 
490 2 326 2 23 2 349 2 624 2 518 2 328 2 198 2 351 4 391 2 175 2 450 2 202 4 522 2 600 2 332 2 496 4 8 2 452 2 108 2 107 2 706 2 656 4 453 2 219 2 337 2 246 4 530 2 220 6 181 2 709 2 250 4 33 4 585 2 735 2 140 10 92 4 279 4 303 2 40 2 325 2 514 2 515 2 
490 2 326 2 23 2 349 4 624 2 518 2 328 2 198 2 351 4 391 2 175 2 450 2 202 4 522 2 600 2 332 2 496 4 8 2 452 4 108 2 107 2 706 2 656 4 453 4 219 2 337 2 246 4 530 2 220 6 181 2 709 2 250 4 33 4 585 2 735 2 140 10 92 4 279 4 303 2 40 2 325 2 514 2 515 2 
601 2 375 2 454 2 761 2 387 2 253 2 
588 2 264 2 85 2 690 2 293 2 375 2 429 2 
444 1 169 2 540 2 716 2 519 2 260 2 701 1 719 2 449 1 202 8 203 2 704 2 602 2 130 2 479 2 376 2 83 2 297 2 455 2 685 2 503 2 140 10 738 1 16 2 278 1 302 2 
717 2 
112 2 246 2 11 2 563 2 286 4 33 2 262 2 209 7 140 1 202 1 227 2 613 2 92 2 93 2 331 2 166 2 294 1 109 2 
112 2 246 2 11 4 563 2 286 4 33 2 262 4 209 6 227 4 613 2 92 2 93 2 331 2 166 2 109 2 
112 6 246 2 11 8 563 2 286 4 33 2 262 8 209 10 140 1 202 1 227 8 613 2 92 2 93 2 331 2 166 2 294 1 109 8 
246 2 11 2 563 2 286 2 33 2 262 2 209 2 227 2 613 2 92 2 93 2 331 2 166 2 
7 2 248 1 126 2 357 1 409 2 
126 2 7 2 409 2 
126 2 7 2 409 2 
126 2 7 2 409 2 
355 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 559 118 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V ERROR java.lang.ArrayIndexOutOfBoundsException 272 
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 559 118 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 559 118 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 559 118 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 559 118 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 559 118 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 559 118 85 466 114 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 162 112 418 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([D)D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:intern([D)[D
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:lt(II)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:slice([III)[I
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:noDuplicates([D)Z | ASSIGN | 57849 | = null
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.ModBitTracker:num_sets()I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant:prob_or(DD)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:eq(JJ)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:gt(II)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ValueTuple:size()I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eq(DD)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_vars()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ModBitTracker:split(I)I
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z | CONDITION | 174937 | if (x) -> if (!x)
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaCharStream:ReadByte()C
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.WeakHasherMap:size()I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(II)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptSlice0:arity()I
daikon.Ppt:Ppt()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:lte(II)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | CONSTANT | 55424 | 2 -> 1
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:concat([I[I)[I
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:memberOf(F[D)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 120949 | = null
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:noDups([I)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | ASSIGN | 10801 | = null
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern:numIntArrays()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
420 2 116 2 229 4 2 2 539 2 99 2 244 2 216 2 582 2 
481 6 57 2 98 2 425 6 186 2 262 2 432 2 513 2 537 2 93 6 498 2 
99 2 424 2 131 6 573 2 64 2 239 6 70 4 244 2 12 2 71 6 478 2 330 6 568 4 
553 8 82 6 526 8 378 8 564 2 121 2 199 8 280 4 310 2 202 2 347 16 96 2 56 16 165 4 99 6 206 26 396 10 211 16 173 30 243 10 244 6 141 4 177 12 246 10 145 4 181 2 440 10 367 2 442 10 221 6 
274 6 22 4 
356 2 
223 2 378 2 280 2 347 2 419 2 56 2 501 2 206 4 208 2 396 2 211 2 173 6 243 2 296 2 246 2 177 2 437 2 583 2 220 2 109 2 440 4 442 2 221 2 
253 4 56 8 97 6 165 2 206 12 396 4 450 6 211 8 173 14 243 4 197 2 177 5 246 4 404 2 442 4 521 4 347 8 
554 4 408 4 81 4 449 2 263 2 487 2 306 2 527 2 528 2 342 2 529 2 156 8 531 4 52 4 120 2 495 4 503 2 101 2 540 2 235 6 391 2 24 10 543 2 61 4 209 4 25 2 507 2 316 2 242 4 434 4 579 62 401 2 548 2 34 14 178 2 438 4 248 4 298 10 550 2 443 4 
334 2 188 2 340 2 230 2 385 2 207 2 393 2 356 2 402 2 182 2 
447 2 260 2 81 2 5 2 302 2 267 2 86 2 156 2 530 2 50 2 279 2 310 2 422 2 166 2 101 2 21 2 104 2 315 2 508 2 143 2 216 2 248 4 331 2 366 2 
254 4 149 6 553 6 253 4 555 2 261 2 82 4 450 6 10 2 196 6 378 18 15 8 280 2 126 4 347 32 96 2 56 32 97 6 99 4 390 2 287 6 206 48 428 2 396 16 289 4 171 2 211 32 173 54 243 16 293 6 244 4 246 16 177 22 217 4 36 4 440 6 442 16 521 4 221 4 
540 2 235 2 156 2 
74 2 348 2 150 2 464 2 7 2 357 2 46 2 195 22 474 2 73 2 533 10 362 2 91 2 368 2 
252 4 523 2 445 2 256 1 43 5 6 2 192 2 409 2 115 2 559 2 118 2 560 2 119 2 499 1 99 4 285 2 169 4 468 2 429 2 317 2 318 4 241 2 323 2 244 4 360 2 
83 2 
244 2 147 2 
128 2 244 4 427 2 
1 6 4 4 224 4 371 2 448 2 304 4 305 4 376 4 375 2 379 12 532 2 161 2 381 8 382 8 383 2 460 4 462 2 164 12 313 10 387 2 234 2 168 2 467 12 544 2 26 2 172 8 399 2 322 18 31 4 245 4 32 6 477 2 329 2 39 2 110 10 251 10 255 2 257 2 335 12 113 8 190 4 264 12 558 2 557 12 276 38 277 10 566 12 58 38 426 12 505 4 572 12 506 2 352 2 133 4 353 2 575 2 354 12 213 2 510 38 358 12 435 2 140 2 215 8 580 2 439 4 519 2 
47 1 431 2 413 2 320 2 
129 2 320 2 
291 2 141 2 156 2 484 2 567 2 471 2 320 2 
567 2 441 2 320 2 
153 2 567 2 320 2 
49 2 155 2 413 2 
567 2 320 2 
49 2 247 2 
37 2 320 2 
49 2 413 2 210 2 
275 2 413 2 394 2 
67 2 107 2 413 2 
413 2 344 2 525 2 
413 2 38 2 270 2 
272 2 
218 2 320 2 
394 2 266 2 
107 2 571 2 
344 2 105 2 
326 2 38 2 
49 2 142 2 
38 2 45 2 
344 2 574 2 
107 2 311 2 
476 2 394 2 
49 2 413 2 179 2 210 2 
27 2 49 2 413 2 179 2 210 2 
95 2 49 2 413 2 
19 2 49 2 413 2 
157 2 
349 2 49 2 
55 2 0 4 226 2 135 2 29 2 195 6 324 2 341 2 72 2 514 2 198 2 160 2 456 2 535 2 180 4 94 2 17 2 405 2 
413 2 159 2 
291 2 480 2 156 2 346 2 
291 2 480 2 156 2 373 2 346 2 471 2 
291 2 141 2 156 2 567 2 320 2 552 2 
104 2 551 2 
291 2 48 2 141 2 156 2 
344 2 174 2 
380 2 38 2 
388 2 394 2 
522 2 107 2 
107 2 124 2 38 2 
107 2 307 2 38 2 
107 2 176 2 38 2 
107 2 123 2 38 2 
406 2 333 2 308 2 156 2 570 6 54 2 102 6 291 2 
515 2 
252 4 523 2 445 2 43 4 372 2 6 2 409 2 115 2 559 2 118 2 560 2 119 2 99 4 285 2 169 4 468 2 429 2 317 2 318 4 241 2 323 2 244 4 360 2 
252 4 523 2 445 2 256 1 43 5 372 2 6 2 409 2 115 2 559 2 118 2 560 2 119 2 499 1 99 4 285 2 169 4 468 2 429 2 317 2 318 4 241 2 323 2 244 4 360 2 
139 2 465 2 569 2 
139 2 465 2 569 2 
252 4 523 2 445 2 43 4 372 2 6 2 409 2 115 2 559 2 118 2 560 2 119 2 99 4 285 2 169 4 468 2 429 2 317 2 318 4 241 2 323 2 244 4 360 2 
445 2 523 2 372 2 6 2 99 4 169 4 468 2 317 2 318 4 241 2 323 2 244 4 252 4 256 2 43 6 409 2 115 2 559 2 118 2 560 2 119 2 499 2 285 2 429 2 360 2 
252 4 523 2 445 2 256 1 43 5 372 2 6 2 409 2 115 2 559 2 118 2 560 2 119 2 499 1 99 4 285 2 169 4 468 2 429 2 317 2 318 4 241 2 323 2 244 4 360 2 
523 2 445 2 6 2 85 2 309 2 534 2 99 4 169 4 466 2 468 2 397 2 317 2 318 4 241 2 323 2 244 8 252 4 483 2 256 1 43 5 114 2 268 2 409 2 115 2 559 2 118 2 560 2 119 2 200 2 499 1 205 2 285 2 132 2 429 2 355 2 360 2 
87 2 89 2 231 2 125 2 384 2 194 2 
578 2 511 2 282 2 403 2 219 2 125 2 303 2 
148 2 183 2 77 2 258 2 78 2 225 2 191 2 339 2 486 2 306 1 452 2 490 2 120 1 386 2 203 2 312 2 99 8 23 1 130 2 351 2 106 1 137 1 30 2 294 2 244 10 475 2 
553 4 151 2 82 2 410 2 489 2 378 1 15 2 278 2 53 2 345 2 347 6 56 6 281 2 97 4 99 6 206 12 428 1 396 6 211 6 136 2 173 15 243 6 293 4 244 6 436 2 246 6 177 1 217 2 442 6 521 2 
444 7 75 2 99 1 283 2 20 2 259 2 556 2 212 2 240 2 321 4 433 2 244 1 455 2 562 2 35 2 565 2 92 2 520 1 
444 6 75 2 283 2 20 2 259 2 556 2 212 4 240 2 321 4 433 2 455 4 562 2 35 4 565 2 92 2 
444 10 75 6 99 1 283 2 20 2 259 2 556 8 212 8 240 2 321 4 433 2 244 1 455 8 562 2 35 8 565 2 92 2 520 1 
444 2 283 2 20 2 259 2 212 2 240 2 321 2 433 2 455 2 562 2 35 2 565 2 92 2 
446 10 3 4 152 10 301 24 8 4 451 30 9 2 154 4 453 4 454 10 13 16 14 7 158 8 16 14 162 2 459 2 458 4 163 4 167 6 169 44 170 8 468 6 319 2 28 4 473 4 33 4 175 4 479 4 41 6 40 4 332 4 42 4 337 4 43 101 336 6 338 2 44 8 189 4 485 4 193 2 488 1 343 11 494 16 496 4 497 24 201 10 499 25 350 4 60 2 65 4 68 4 214 2 69 8 516 2 517 8 364 2 518 4 365 2 222 32 369 4 76 4 79 2 524 10 227 4 228 8 374 8 377 4 88 16 232 4 538 4 99 70 389 2 100 4 541 2 542 2 103 10 392 4 237 4 545 4 395 4 398 16 547 4 244 78 549 2 112 2 252 36 256 27 407 4 265 4 271 24 273 2 117 4 414 8 563 4 119 6 415 4 416 2 418 2 127 2 421 4 285 2 286 4 288 4 134 10 290 2 577 2 138 4 292 2 146 4 300 4 
446 6 76 2 3 4 152 2 79 2 227 2 451 6 9 2 154 4 454 6 88 14 458 4 459 2 162 2 232 2 18 2 463 2 233 2 389 2 99 26 167 2 169 14 468 2 395 4 469 2 28 2 244 28 175 4 327 10 249 2 40 2 112 2 41 2 252 14 256 12 336 4 43 40 337 2 187 2 265 4 273 2 343 2 119 2 122 2 497 8 415 4 499 12 418 2 201 6 127 2 285 2 60 2 288 2 62 2 290 2 359 2 297 2 144 2 517 6 
446 12 3 6 152 12 301 12 451 22 8 4 9 2 154 6 454 12 453 4 13 6 158 12 16 12 162 2 458 6 18 2 463 2 167 6 169 42 170 6 468 10 28 6 473 6 175 6 327 2 40 6 41 12 332 6 42 4 337 2 43 90 336 8 338 2 44 6 485 4 193 2 343 12 492 6 496 6 497 42 499 22 201 12 502 2 350 4 60 2 62 2 65 6 68 4 512 6 517 4 369 6 76 2 227 2 377 6 88 4 536 2 232 6 538 6 233 2 99 78 100 6 542 2 237 6 395 6 545 4 547 6 244 90 549 2 112 2 252 36 256 22 407 4 265 6 271 12 273 2 117 6 411 6 563 6 119 10 415 2 416 2 418 2 127 2 421 4 285 4 286 4 288 6 576 2 290 2 138 6 297 2 146 6 
446 4 370 2 3 2 152 2 79 2 524 2 80 2 227 2 9 2 154 2 11 2 454 4 88 36 457 2 90 2 232 2 458 2 162 2 459 2 461 4 389 2 99 44 167 2 169 20 103 2 236 2 314 2 468 2 395 2 238 2 546 2 470 2 28 2 472 2 108 2 244 46 325 2 400 2 175 2 328 2 250 6 111 2 41 2 40 2 112 2 252 20 184 2 482 2 256 6 185 2 43 48 336 6 187 2 265 2 269 2 273 2 412 4 343 2 561 4 491 2 51 2 119 2 493 2 122 2 497 6 417 2 499 6 418 2 201 4 500 2 127 2 204 2 423 2 504 2 284 2 285 2 59 2 60 2 288 2 63 2 134 2 509 4 66 2 214 2 430 2 295 2 581 2 361 2 363 2 364 2 299 2 
84 2 

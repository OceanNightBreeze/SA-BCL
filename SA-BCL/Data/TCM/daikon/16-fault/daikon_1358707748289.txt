#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 103 134 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 885 866 204 381 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 103 692 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException 103 878 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V ERROR java.lang.NullPointerException 103 339 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 182 810 (430,881) (430,881) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 554 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 554 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 781 610 870 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 464 511 140 758 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 511 140 758 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 253 511 140 758 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 464 511 140 758 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.Invariant:logOn()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2732 | = null
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:isArray()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfo:isPointer()Z
daikon.Quant:noDups([I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ValueTuple:size()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3_14()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:subarray([III)[I | ASSIGN | 29404 | = null
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Ppt:Ppt()V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.PptSlice0:arity()I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
daikon.ProglangType:isIntegral()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List; | ASSIGN | 100168 | = null
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsFloat()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 12410 | if (x) -> if (!x)
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3_16()Z
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 86983 | return null
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:modulus([I)[I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3R_57()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_13()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:slice([III)[I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel; | RETURN | 571 | return null
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:lexGT([I[I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:sum([I)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ModBitTracker:num_sets()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Debug:logOn()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_ntk()I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_51()Z
daikon.ProglangType:baseIsScalar()Z
daikon.ProglangType:isScalar()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:min([I)I
daikon.Quant:lt(II)Z
daikon.Quant:eq(DD)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE:negate(I)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.ModBitTracker:split(I)I
daikon.Quant:subsetOf([F[F)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3063 | return null
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.ProglangType:isFloat()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_54()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:max([I)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eq(II)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:intersection([I[I)[I
daikon.Quant:ne(II)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.Invariant:getConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:justified()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
jtb.JavaCharStream:backup(I)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:eltwiseLTE([I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice1:arity()I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:jj_3R_53()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:ReadByte()C
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[F)Z
daikon.test.FormatTestCase:passes()Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltsGT([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_135()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaCharStream:getEndColumn()I
daikon.diff.Node:Node()V
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Intern:intern([J)[J
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7264 | = null
jtb.JavaParser:jj_3R_48()Z
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:memberOf(J[J)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters; | STATEMENT | 22663 | stmt -> ;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
571 2 857 4 367 2 288 2 141 2 33 2 46 2 466 2 67 2 
132 2 286 2 423 2 501 6 756 2 834 2 341 2 491 2 314 6 747 2 534 6 
235 2 477 6 288 2 272 2 532 2 420 6 391 6 422 4 252 2 325 4 24 2 67 2 166 6 
869 2 84 6 288 2 54 2 200 2 427 4 872 8 177 4 611 2 538 6 67 2 277 2 548 2 332 6 134 2 13 8 263 2 103 2 76 6 469 2 80 2 312 2 
194 6 316 4 
752 2 
665 2 220 2 114 2 601 2 481 2 320 2 851 2 121 4 371 2 123 2 609 2 65 2 434 2 67 4 542 2 543 2 382 2 74 4 630 2 190 4 562 2 570 2 145 2 246 2 700 2 288 4 294 4 509 2 460 2 824 2 653 2 714 2 96 2 718 2 45 2 466 2 359 2 468 2 164 2 520 2 267 2 268 2 724 2 111 2 
27 6 755 4 84 32 399 4 400 2 288 4 54 16 2 8 600 2 872 56 427 22 292 4 826 4 228 4 177 4 611 16 828 4 538 6 682 6 67 4 277 2 548 16 260 2 332 32 358 6 13 48 553 4 76 32 393 6 264 6 836 2 559 4 395 2 469 18 20 2 561 2 524 6 80 16 725 6 
29 2 385 2 111 2 
617 2 787 2 788 2 589 2 210 2 439 2 551 22 227 2 268 2 794 2 470 10 765 2 26 2 800 2 
84 2 54 2 403 2 427 2 872 6 642 2 177 2 706 2 877 2 611 2 538 4 277 2 548 2 770 2 332 2 44 2 13 4 76 2 865 2 469 2 192 2 80 2 899 2 
84 8 548 4 332 8 54 4 55 2 200 2 13 12 427 4 872 16 292 4 76 8 605 2 264 6 826 4 524 6 611 4 80 4 
29 6 846 2 346 4 508 2 673 4 31 2 674 2 248 10 733 2 118 10 643 4 121 4 678 4 646 2 410 2 298 2 607 2 512 2 414 2 380 4 742 4 801 4 547 2 385 2 133 4 718 2 212 62 495 4 593 2 835 4 282 2 502 2 396 2 340 2 562 4 660 14 694 2 753 4 811 2 111 8 
219 2 364 2 479 2 225 2 825 2 768 2 622 2 138 2 752 2 167 2 
112 2 531 2 669 6 530 2 671 2 113 1 116 1 428 2 224 2 322 32 7 12 326 2 797 2 127 2 798 2 327 2 10 1 799 2 681 2 435 4 436 2 335 2 136 6 137 2 556 2 443 16 806 2 807 5 21 2 444 2 23 6 141 2 809 2 449 3 568 2 697 2 146 2 244 2 453 24 344 2 245 2 814 4 815 2 30 2 816 1 574 1 455 2 818 2 348 2 822 2 251 3 152 2 349 2 37 2 154 2 584 16 156 2 832 4 42 1 43 16 713 2 590 1 717 2 722 2 839 2 472 2 473 2 842 12 727 3 475 2 270 1 476 3 168 2 478 2 369 2 170 1 172 16 174 2 273 2 175 1 606 2 374 2 62 2 178 3 63 1 612 3 614 24 615 6 484 2 67 34 740 2 741 8 486 2 278 2 279 4 383 2 621 2 280 2 743 3 493 8 387 2 70 2 625 2 185 1 862 2 499 2 77 2 191 2 78 2 750 2 867 3 634 4 754 2 86 2 288 32 289 2 199 2 201 2 291 2 874 3 297 2 91 1 648 4 412 3 299 3 651 8 205 1 94 1 766 2 206 2 652 3 302 2 303 4 883 2 209 2 419 2 771 2 655 2 517 2 776 2 891 2 656 1 892 1 307 2 893 2 104 2 425 32 897 4 311 2 
657 2 67 2 
285 2 217 2 67 4 
337 2 
672 2 4 18 675 38 319 2 433 38 796 2 128 4 233 2 11 12 331 2 438 20 437 4 549 2 336 6 440 12 555 12 688 12 442 2 338 2 238 2 22 2 241 30 446 30 447 20 564 4 342 2 567 4 695 92 25 2 243 4 147 6 820 30 702 20 576 10 817 2 36 2 459 30 155 20 350 2 705 2 462 30 709 30 254 2 257 4 356 2 261 2 165 2 723 2 594 2 838 2 51 2 597 2 844 14 845 2 57 2 736 12 482 2 372 2 377 4 64 2 854 2 180 18 618 2 381 2 68 4 856 2 620 2 487 2 858 8 389 10 746 2 861 2 628 2 866 2 864 30 632 2 633 2 397 30 193 2 638 2 639 10 87 8 402 2 757 2 759 2 873 4 405 92 407 30 406 16 92 30 413 2 204 2 879 2 93 30 416 2 513 2 882 6 767 2 208 2 772 92 885 2 97 2 100 2 778 18 896 18 658 2 663 30 661 2 526 2 109 2 315 2 
698 1 357 2 79 2 687 2 
130 2 687 2 
103 2 692 2 
171 2 596 2 687 2 
596 2 859 2 687 2 
398 2 357 2 693 2 
596 2 687 2 
693 2 354 2 
687 2 497 2 
357 2 376 2 693 2 
357 2 522 2 616 2 
357 2 613 2 784 2 
357 2 126 2 708 2 
544 2 301 2 357 2 
693 2 458 2 
841 2 687 2 
432 2 522 2 
734 2 613 2 
894 2 708 2 
544 2 789 2 
699 2 693 2 
544 2 586 2 
102 2 708 2 
613 2 98 2 
471 2 522 2 
357 2 376 2 3 2 693 2 
370 2 357 2 376 2 3 2 693 2 
17 2 357 2 693 2 
357 2 691 2 693 2 
833 2 769 2 14 2 537 2 
598 2 608 2 550 2 111 2 
323 2 598 2 510 2 608 2 550 2 111 2 
103 2 878 2 
59 2 520 2 
103 2 339 2 608 2 111 2 
708 2 791 2 
544 2 595 2 
522 2 108 2 
418 2 613 2 
544 2 782 2 613 2 
544 2 650 2 613 2 
544 2 351 2 613 2 
544 2 560 2 613 2 
6 6 480 2 321 6 608 2 831 2 162 2 48 2 111 2 
49 2 693 2 
545 4 528 2 234 2 744 2 716 4 516 2 551 6 518 2 775 2 780 2 265 2 579 2 649 2 783 2 539 2 880 2 541 2 843 2 
357 2 721 2 
112 2 
531 2 669 4 530 2 115 2 428 2 322 4 7 8 127 2 681 2 435 4 436 2 136 6 139 2 556 2 558 2 806 2 444 6 23 2 141 2 809 2 142 2 146 2 814 2 815 2 455 2 818 2 822 2 827 2 37 2 156 2 832 4 42 2 713 2 590 4 163 4 266 2 839 2 473 4 842 8 363 4 271 2 168 2 478 2 369 2 170 2 172 6 606 2 374 2 62 2 483 2 615 2 67 26 486 2 279 4 383 2 493 2 625 2 862 2 748 2 634 4 81 2 195 2 287 2 288 26 289 2 201 2 89 2 648 2 415 2 303 2 884 2 771 2 655 2 887 2 104 2 425 6 
531 2 669 6 530 2 428 2 322 4 7 8 797 2 127 2 798 2 681 2 435 4 436 2 136 6 556 2 806 2 444 6 23 2 141 2 565 2 809 2 142 2 146 2 814 2 815 2 455 2 818 2 822 2 827 2 37 2 156 2 832 4 42 2 713 2 590 2 163 4 266 2 839 2 473 4 842 8 363 4 271 2 168 2 478 2 369 2 170 2 172 6 606 2 374 2 62 2 483 2 615 2 67 26 486 2 279 4 383 2 386 2 493 2 625 2 862 2 188 2 748 2 634 4 81 2 195 2 287 2 288 26 289 2 201 2 89 2 648 2 415 2 302 2 303 2 884 2 771 2 655 2 887 2 104 2 425 6 
685 2 
197 2 82 2 
686 2 666 2 506 2 489 2 182 2 390 2 890 2 519 2 430 2 690 2 868 2 810 2 378 2 881 2 
686 2 666 2 506 2 489 2 182 2 390 2 890 2 519 2 430 2 690 2 868 2 810 2 378 2 881 2 
683 2 489 2 773 2 99 2 747 2 202 4 534 2 821 4 430 2 423 2 580 2 61 2 810 2 314 2 378 2 144 2 881 2 451 2 
686 2 666 2 506 2 489 2 182 2 390 2 890 2 519 2 430 2 690 2 868 2 810 2 378 2 881 2 
686 2 666 2 506 2 489 2 182 2 390 2 890 2 519 2 430 2 690 2 868 2 810 2 378 2 881 2 
686 2 666 2 506 2 489 2 182 2 390 2 890 2 519 2 430 2 690 2 868 2 810 2 378 2 881 2 
686 2 666 2 506 2 489 2 182 2 390 2 890 2 519 2 430 2 690 2 868 2 810 2 378 2 881 2 
686 2 666 2 506 2 489 2 182 2 390 2 890 2 519 2 430 2 690 2 868 2 810 2 378 2 881 2 
686 2 430 2 506 2 182 2 489 2 690 2 390 2 868 2 810 2 890 2 378 2 881 2 
686 2 430 2 506 2 182 2 489 2 690 2 390 2 868 2 810 2 890 2 378 2 881 2 
686 2 430 2 506 2 182 2 489 2 690 2 390 2 868 2 810 2 890 2 378 2 881 2 
686 2 430 2 506 2 182 2 489 2 690 2 390 2 868 2 810 2 890 2 378 2 881 2 
686 2 430 2 506 2 182 2 489 2 690 2 390 2 868 2 810 2 890 2 378 2 881 2 
112 2 666 2 847 2 530 2 669 6 168 2 478 2 5 2 172 6 428 2 322 3 430 2 274 2 606 2 326 2 127 2 797 2 679 2 798 2 615 3 681 2 378 2 485 2 435 4 67 24 486 2 279 4 686 2 488 2 436 4 182 2 489 2 136 6 390 2 625 2 137 2 862 2 748 2 444 6 690 2 23 3 141 2 868 2 634 4 810 2 142 2 343 2 146 2 506 2 288 24 815 2 289 2 455 2 818 2 247 3 156 2 881 2 832 4 713 2 884 2 771 2 655 2 890 2 163 4 891 2 104 2 521 2 425 8 839 2 
751 2 284 2 623 2 
751 2 284 2 623 2 
666 6 529 2 669 6 530 2 5 2 534 12 428 2 790 4 322 2 7 4 797 2 127 2 798 2 681 2 435 4 683 2 686 6 132 4 436 4 136 6 554 2 341 4 444 2 141 2 142 2 144 2 146 2 451 2 345 2 701 2 814 4 815 2 455 2 818 2 32 2 821 2 703 2 352 2 156 2 256 2 157 2 712 2 832 4 713 2 834 4 160 2 590 2 592 2 839 2 840 2 842 4 726 2 271 4 168 2 478 2 172 2 602 2 60 4 606 2 61 2 378 4 67 24 486 2 279 4 181 2 281 2 623 2 625 2 862 2 747 4 186 2 748 6 501 16 394 2 751 2 284 4 505 2 634 4 756 4 288 16 196 4 289 2 201 4 202 2 645 4 648 4 303 4 884 2 771 2 655 2 99 2 519 4 423 4 425 2 898 2 314 12 
529 2 436 2 701 2 160 2 288 2 5 2 792 2 863 2 703 2 580 2 38 2 156 2 353 2 157 2 313 2 82 2 67 4 
666 6 529 2 669 6 530 2 222 2 534 12 790 4 428 2 322 4 7 4 797 2 127 2 798 2 681 2 435 4 683 2 686 6 132 4 436 2 236 4 136 6 554 2 341 4 689 2 444 2 141 2 142 2 144 2 146 2 451 2 28 2 345 2 701 2 573 2 814 4 815 2 455 2 818 2 32 2 821 2 156 2 256 2 157 2 712 2 832 4 713 2 834 4 160 2 720 2 262 2 592 4 839 2 840 2 842 4 726 2 271 4 168 2 478 2 849 2 172 2 602 2 60 4 606 2 738 2 373 2 61 2 375 2 378 4 67 24 486 2 279 4 181 2 623 2 625 2 862 2 747 4 186 2 748 6 501 16 394 2 751 4 284 6 505 2 634 4 756 4 288 16 196 4 289 2 201 4 202 2 404 2 295 2 645 4 648 4 303 4 211 2 884 2 771 2 655 2 99 4 519 4 423 4 425 2 898 2 314 12 
666 6 1 2 529 2 669 6 530 2 222 2 5 2 534 12 428 2 790 4 322 2 7 4 797 2 127 2 798 2 681 2 435 4 683 2 686 6 132 4 436 4 236 4 136 6 554 2 341 4 444 2 141 2 142 2 144 2 146 2 451 2 28 2 345 2 701 2 814 4 815 2 455 2 818 2 32 2 821 2 703 2 156 2 829 2 256 2 157 2 712 2 832 4 713 2 834 4 160 2 590 1 720 2 592 2 839 2 840 2 842 4 726 2 271 4 168 2 478 2 172 2 602 2 60 4 606 2 738 2 61 2 375 2 378 4 67 24 486 2 279 4 181 2 69 2 623 2 625 2 862 2 747 4 186 2 748 6 501 16 394 2 751 4 284 6 505 2 634 4 756 4 288 16 196 4 289 2 201 4 202 2 404 2 295 2 645 4 648 4 303 4 211 2 884 2 771 2 655 2 99 4 519 4 423 4 659 2 425 2 662 2 898 2 314 12 
0 10 669 6 670 2 673 2 676 2 427 4 428 2 226 4 431 2 7 14 231 2 9 2 680 2 681 2 435 4 684 2 436 2 13 6 237 2 16 10 18 4 239 6 240 2 19 2 444 12 23 11 242 2 455 2 247 2 34 2 704 6 461 2 42 2 713 2 715 6 719 2 467 2 266 20 469 4 269 2 478 2 54 2 56 2 732 2 58 2 274 2 483 2 276 2 485 2 67 30 486 2 279 4 490 2 493 10 492 6 71 2 495 2 72 2 73 8 748 2 76 4 80 2 753 2 81 2 84 4 85 2 287 2 507 4 288 24 289 2 290 2 89 2 760 2 762 2 763 2 764 8 95 2 514 2 771 2 305 6 779 2 104 2 105 2 521 2 781 2 524 6 310 2 525 4 785 2 786 2 527 2 530 2 317 2 533 2 322 11 793 2 324 10 122 2 125 8 127 2 797 2 798 2 131 2 540 2 329 2 330 2 548 2 133 2 332 4 333 2 136 6 802 2 804 2 141 2 808 2 142 2 143 2 812 2 343 2 146 2 813 2 815 2 347 2 148 2 819 1 818 2 575 2 577 2 150 6 153 6 826 4 827 2 581 2 156 2 585 2 830 2 832 4 587 6 161 2 591 2 163 10 837 4 839 2 361 2 842 14 168 2 368 6 170 2 600 4 172 12 173 2 606 2 610 2 611 2 615 11 380 2 179 2 183 2 624 10 184 2 625 2 860 2 626 2 862 2 187 2 189 2 629 4 634 4 636 4 195 2 870 2 198 4 201 4 872 8 875 3 408 8 644 4 203 4 876 6 415 2 417 4 654 2 655 2 886 6 213 2 888 2 887 10 214 24 215 2 425 18 216 2 218 2 
636 2 670 2 288 2 172 2 732 2 875 2 322 2 431 2 644 2 585 2 615 2 328 2 67 2 514 2 490 2 860 2 163 2 104 2 105 2 266 6 444 2 23 2 425 2 143 4 
636 2 670 2 288 2 172 2 732 2 875 2 322 2 431 2 644 2 585 2 615 2 328 2 67 2 514 2 490 2 860 2 163 2 104 2 105 2 266 6 444 2 23 2 425 2 143 4 
636 2 670 2 288 2 172 2 732 2 875 2 322 2 431 2 644 2 585 2 615 2 328 2 67 2 514 2 490 2 860 2 163 2 104 2 105 2 266 6 444 2 23 2 425 2 143 4 
366 2 54 2 318 2 322 3 431 2 535 6 611 2 852 2 615 3 67 10 739 3 548 2 332 2 13 4 745 2 76 2 443 2 504 2 80 2 448 2 84 2 288 4 872 6 457 2 293 4 250 4 647 3 828 2 582 4 711 2 259 2 43 2 465 4 304 4 306 2 101 2 104 2 425 2 725 4 900 3 
84 2 366 2 288 4 54 2 427 2 872 4 318 2 293 4 457 2 250 4 322 2 431 2 535 6 647 2 582 4 611 2 828 2 852 2 711 2 615 2 739 2 67 10 259 2 43 2 465 4 548 2 332 2 304 4 13 4 745 2 306 2 101 2 443 2 76 2 104 2 469 2 561 2 504 2 425 2 448 2 80 2 725 4 900 2 
84 2 366 2 288 4 54 2 427 2 872 4 318 2 293 4 457 2 250 4 322 2 431 2 535 6 647 2 582 4 611 2 828 2 852 2 711 2 615 2 739 2 67 10 259 2 43 2 465 4 548 2 332 2 304 4 13 4 745 2 306 2 101 2 443 2 76 2 104 2 469 2 561 2 504 2 425 2 448 2 80 2 725 4 900 2 
84 2 366 2 288 4 54 2 427 2 872 4 318 2 293 4 457 2 250 4 322 2 431 2 535 6 647 2 582 4 611 2 828 2 852 2 711 2 615 2 739 2 67 10 259 2 43 2 465 4 548 2 332 2 304 4 13 4 745 2 306 2 101 2 443 2 76 2 104 2 469 2 561 2 504 2 425 2 448 2 80 2 725 4 900 2 
84 2 366 2 288 4 54 2 427 4 872 4 318 2 293 4 457 2 250 4 322 2 431 2 535 6 647 2 582 4 611 2 828 2 852 2 711 2 615 2 739 2 67 10 259 2 43 2 465 4 548 2 332 2 304 4 13 4 745 2 306 2 101 2 443 2 76 2 104 2 469 4 561 4 504 2 425 2 448 2 80 2 725 4 900 2 
463 2 296 2 53 2 317 2 664 2 362 2 
120 2 498 2 463 2 8 2 887 2 15 2 75 2 
288 8 88 2 221 2 674 1 850 2 117 1 428 2 429 2 735 1 578 2 411 2 124 2 66 2 67 10 207 2 12 2 552 2 50 2 500 2 308 2 805 2 283 1 445 2 563 2 811 1 474 2 
84 6 288 6 454 2 2 2 54 6 872 16 427 4 371 2 826 2 228 2 611 6 828 2 540 2 158 2 67 6 682 4 548 6 332 6 135 2 13 12 72 2 630 2 76 6 392 2 469 2 524 4 561 2 525 2 80 6 725 4 
588 4 729 2 159 2 668 2 288 1 304 2 848 1 334 2 149 2 293 2 677 2 421 2 250 2 603 2 106 2 309 2 67 1 110 7 
588 4 729 2 159 2 668 2 304 2 334 4 149 2 677 2 293 2 421 2 250 2 603 4 106 4 309 2 110 6 
588 4 729 6 159 2 668 2 288 1 304 2 848 1 334 8 149 2 677 8 293 2 421 2 250 2 603 8 106 8 309 2 67 1 110 10 
588 2 159 2 668 2 304 2 334 2 149 2 293 2 421 2 250 2 603 2 106 2 309 2 110 2 
0 2 669 22 530 6 119 2 7 4 324 2 797 4 232 2 798 4 546 1 441 2 140 2 803 2 804 1 808 1 566 2 696 2 452 4 34 1 249 2 255 2 710 2 41 2 832 10 355 2 464 2 47 2 599 2 730 3 56 1 606 4 176 2 275 2 853 2 379 4 67 32 384 2 388 2 494 2 496 2 862 6 627 2 631 2 503 6 634 12 635 2 637 2 640 2 401 2 288 28 641 2 758 2 90 2 761 2 511 2 774 2 305 2 777 2 895 4 424 2 426 2 
728 2 52 2 667 2 530 2 669 26 169 2 731 4 223 4 119 2 604 2 7 20 737 2 606 2 229 2 795 2 797 2 536 2 129 2 232 2 798 2 855 2 131 2 67 28 619 2 494 2 862 2 627 2 140 2 557 2 749 2 503 2 634 12 566 2 450 2 569 2 83 2 572 2 288 28 758 2 871 2 151 2 761 2 409 2 511 2 707 2 583 2 39 4 40 2 300 2 710 2 258 2 832 12 587 2 355 2 515 2 590 2 889 2 360 2 107 2 523 2 426 2 
365 2 730 2 669 14 530 2 288 14 758 2 90 2 35 2 119 2 7 4 606 2 253 2 511 2 230 2 797 4 255 2 232 2 583 2 798 4 710 2 832 6 67 14 355 2 494 2 862 2 140 2 503 2 634 6 566 2 426 2 
637 2 730 2 669 16 530 2 288 14 758 2 90 2 119 2 823 2 7 4 606 2 511 2 797 4 255 2 232 2 583 2 798 4 710 2 832 6 67 16 355 2 464 2 590 2 388 2 494 2 862 2 140 2 803 2 503 2 634 6 566 2 426 2 
456 2 

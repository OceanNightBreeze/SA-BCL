#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR utilMDE.Assert$AssertionException (228,653) (228,653) 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (228,653) (228,653) (322,451,642,676,763) (322,451,642,676,763) (322,451,642,676,763) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 714 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 714 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 97 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 97 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 843 838 293 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 879 647 51 681 529 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 51 681 529 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_49()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:noDups([I)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 128699 | < -> <=
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_58()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaCharStream:readChar()C
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.PptSlice2:arity()I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:lte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Ppt:Ppt()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_3R_55()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:memberOf(F[D)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.PptSlice0:arity()I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:memberOf(F[F)Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexLT([I[I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_133()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String; | RETURN | 51684 | return null
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern:intern([D)[D
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:memberOf(J[J)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z | OPERATOR | 63684 | < -> >
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
jtb.JavaParser:jj_ntk()I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:eltwiseLTE([I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice1:num_samples()I
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[F)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_16()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:intersection([I[I)[I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:negate(I)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Debug:logOn()Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:gt(II)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaCharStream:backup(I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:setDiff([I[I)[I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptSlice1:arity()I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:eq(II)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:hashCode()I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltsLT([II)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfo:relate_var()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:sum([I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.RootNode:RootNode()V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_3R_162()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:num_vars()I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_3R_53()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([I)[I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:logDetail()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object; | ASSIGN | 262646 | = null
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.MathMDE:pow(II)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.ModBitTracker:num_sets()I
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isIntegral()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(II)I
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Debug:logDetail()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3R_134()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:eltwiseGT([I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eq(DD)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eq(FF)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:memberOf(I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I | ASSIGN | 816 | = null
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel; | RETURN | 571 | return null
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String; | RETURN | 10782 | return null
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:lt(II)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.Invariant:logOn()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 20834 | = null
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:setEqual([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_54()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
228 2 653 2 844 2 67 2 555 2 726 2 609 2 522 4 819 2 
460 2 439 6 448 2 520 2 831 2 42 2 58 2 553 6 275 2 32 6 92 2 
155 6 706 2 143 4 225 2 179 6 468 2 244 2 228 2 653 2 794 2 836 2 745 6 33 6 661 2 
762 4 209 2 767 2 741 8 650 12 716 10 321 2 653 6 624 10 298 10 411 4 541 10 598 16 188 2 869 2 576 6 546 2 547 8 608 4 464 8 550 6 43 10 551 26 228 6 46 2 446 4 556 16 136 29 371 8 669 16 
722 4 824 6 
304 2 
50 2 854 2 504 4 767 2 588 2 861 2 406 2 511 2 680 2 866 2 702 2 682 2 38 4 630 4 13 2 517 2 705 2 67 2 325 2 192 2 224 2 443 2 328 2 281 2 752 2 19 2 20 2 289 2 138 2 582 2 880 2 266 2 
620 6 762 2 404 4 84 4 805 6 650 22 294 4 716 16 566 2 538 4 653 4 624 6 86 8 298 16 657 2 541 16 249 4 598 32 120 6 388 2 576 4 546 2 547 6 123 4 126 6 690 2 550 4 43 16 551 48 228 4 877 2 556 32 207 6 825 4 136 54 371 18 208 2 669 32 373 6 
646 2 854 2 416 2 
269 22 782 2 783 10 177 2 651 2 366 2 863 2 87 2 88 2 667 2 615 2 169 2 798 2 237 2 
762 2 478 2 290 2 536 2 650 2 716 2 624 4 298 2 541 2 598 2 222 2 15 2 359 2 550 2 43 2 551 4 755 2 100 2 556 2 136 6 371 2 264 2 669 2 
852 2 608 2 84 4 650 4 716 4 126 6 43 4 551 12 298 4 249 4 541 4 556 8 24 2 598 8 136 16 669 8 373 6 
374 2 239 2 646 6 854 8 25 4 504 4 586 2 27 4 406 2 719 4 408 4 512 4 514 2 725 4 660 2 679 2 678 2 152 4 601 2 544 2 683 14 491 4 517 4 867 2 519 4 704 4 356 2 416 2 605 2 195 4 226 62 421 2 580 2 613 10 368 2 796 2 23 2 262 10 167 2 397 2 
398 2 712 2 109 2 720 2 732 2 665 2 733 2 124 2 304 2 131 2 
671 2 399 2 828 2 502 2 763 2 672 4 343 2 506 2 111 2 59 2 112 2 776 2 61 2 730 2 357 2 197 2 792 2 362 2 130 2 18 2 795 2 847 4 642 2 477 2 140 6 859 2 211 4 432 2 653 20 593 2 322 2 384 4 150 2 865 2 603 2 706 2 815 2 228 22 754 6 230 2 555 2 668 2 105 2 
228 2 395 2 
228 4 579 2 640 2 
72 2 
107 2 559 10 560 10 764 2 342 10 769 18 345 12 772 4 246 2 455 14 569 8 6 2 456 6 117 2 11 12 573 2 121 2 256 10 466 2 791 14 472 14 365 2 474 2 367 32 133 2 135 2 375 2 585 2 142 44 482 2 381 2 146 2 696 18 487 2 699 14 595 2 600 2 36 2 811 2 493 2 607 14 389 4 820 14 283 14 497 2 499 2 166 2 393 4 174 2 176 2 400 2 53 2 57 4 181 4 182 2 834 10 625 2 295 8 186 4 721 6 626 8 515 14 516 14 299 2 300 2 631 2 189 2 525 2 528 2 204 2 428 2 853 6 313 8 537 2 862 8 655 2 434 14 539 2 217 4 219 2 220 2 868 2 94 44 548 2 872 2 751 4 874 14 753 2 756 2 332 2 334 2 99 44 337 10 557 2 338 6 236 2 
454 2 645 2 533 1 90 2 
454 2 257 2 
454 2 854 2 14 2 698 2 411 2 714 2 394 2 
454 2 698 2 864 2 
454 2 698 2 577 2 
76 2 90 2 832 2 
454 2 698 2 
76 2 370 2 
454 2 170 2 
232 2 76 2 90 2 
442 2 90 2 35 2 
324 2 90 2 413 2 
134 2 90 2 736 2 
787 2 845 2 90 2 
76 2 599 2 
454 2 485 2 
433 2 35 2 
360 2 413 2 
633 2 134 2 
787 2 826 2 
76 2 728 2 
787 2 172 2 
29 2 134 2 
814 2 413 2 
786 2 35 2 
232 2 76 2 90 2 570 2 
364 2 232 2 76 2 90 2 570 2 
76 2 90 2 543 2 
545 2 76 2 90 2 
467 2 734 2 486 2 837 2 
854 2 30 2 14 2 280 2 
854 2 30 2 14 2 280 2 714 2 687 2 
454 2 854 2 450 2 14 2 698 2 411 2 
680 2 28 2 
854 2 64 2 14 2 411 2 
147 2 134 2 
787 2 700 2 
479 2 35 2 
663 2 413 2 
787 2 234 2 413 2 
787 2 731 2 413 2 
787 2 194 2 413 2 
787 2 413 2 610 2 
854 2 14 2 346 6 382 2 348 2 558 2 
163 2 76 2 
269 6 311 2 692 2 377 2 664 4 253 2 707 4 82 2 193 2 804 2 708 2 590 2 743 2 276 2 202 2 336 2 102 2 12 2 
270 2 90 2 
111 2 
561 2 672 4 343 2 452 2 112 2 776 6 354 2 686 2 463 8 357 2 792 6 469 2 793 4 18 2 475 2 799 4 477 2 372 2 271 2 140 6 480 2 379 2 593 6 383 2 384 4 278 5 150 2 37 2 154 2 603 2 494 2 815 2 391 2 611 2 710 2 282 2 396 2 828 2 399 2 502 2 506 2 180 2 59 2 61 2 727 2 730 2 191 2 302 2 197 2 842 2 73 3 425 2 847 4 309 2 644 3 849 2 859 2 211 4 318 2 317 2 432 2 653 26 214 4 540 2 865 2 662 3 750 2 228 26 444 2 754 4 230 2 333 2 555 2 668 2 
671 2 672 4 343 2 452 2 112 2 776 6 354 2 686 2 463 8 357 2 792 6 793 4 18 2 260 2 475 2 795 2 799 4 476 2 477 2 372 2 271 2 140 6 379 2 593 6 383 2 384 4 278 4 150 2 37 2 154 2 603 2 494 2 815 2 391 2 44 2 611 2 710 2 282 2 396 2 828 2 399 2 502 2 506 2 180 2 59 2 61 2 727 2 730 2 191 2 302 2 197 2 842 2 73 2 425 2 847 4 309 2 644 2 849 2 859 2 211 4 318 2 317 2 432 2 653 26 214 4 540 2 865 2 662 2 750 2 873 2 228 26 444 2 754 6 230 2 333 2 555 2 668 2 
674 2 
509 2 49 2 
106 2 460 2 0 2 670 2 518 4 801 2 387 2 2 2 420 2 45 4 553 2 349 2 275 2 32 2 48 2 205 2 34 2 810 2 
761 2 106 2 0 2 670 2 2 4 765 2 831 2 241 2 245 2 59 2 349 2 840 2 63 6 460 4 518 4 575 4 730 2 520 2 685 2 357 2 197 2 420 2 691 4 75 2 847 2 205 2 583 2 141 2 140 4 801 2 858 4 859 2 211 2 319 2 432 2 652 2 653 6 695 2 275 4 32 6 658 2 34 2 810 2 490 2 865 2 439 6 387 2 156 2 495 2 709 2 228 12 553 4 45 4 164 4 48 2 823 2 288 2 619 4 104 2 
761 2 106 2 0 2 670 2 2 4 765 2 241 2 245 2 59 2 349 2 840 2 63 4 460 4 518 4 575 4 730 2 520 2 685 2 357 2 197 2 420 2 691 4 75 2 847 2 205 2 583 2 141 2 140 4 801 2 858 4 859 2 211 2 319 2 432 2 652 2 653 6 695 2 275 4 32 4 658 2 34 2 810 2 490 2 865 2 439 6 387 2 156 2 495 2 42 2 709 2 228 12 553 6 45 4 164 4 48 2 823 2 288 2 619 4 104 2 
761 2 106 2 0 2 670 2 448 2 2 4 765 2 241 2 245 2 59 2 349 2 840 2 63 6 460 4 518 4 575 4 730 2 520 2 685 2 357 2 197 2 420 2 691 8 75 2 847 2 205 2 583 2 141 2 140 4 801 2 858 4 859 2 211 2 319 2 432 2 652 2 653 6 695 2 275 4 32 6 658 2 34 2 810 2 490 2 865 2 439 6 387 2 156 2 495 2 709 2 228 12 553 6 45 4 164 4 48 2 823 2 288 2 619 4 104 2 
761 2 106 2 0 2 670 2 448 2 2 4 765 2 241 2 245 2 59 2 349 2 840 2 63 10 460 4 518 4 575 8 730 2 520 2 685 2 357 2 197 2 420 2 691 8 75 2 847 2 205 2 583 2 141 2 140 4 801 2 858 4 859 2 211 2 319 2 432 2 652 2 653 6 695 2 275 4 32 6 658 2 34 2 810 2 490 2 865 2 439 8 387 2 156 2 495 2 42 2 709 2 228 12 553 8 45 4 164 4 48 2 823 2 288 2 619 4 104 2 
761 2 106 2 0 2 670 2 448 2 2 4 765 2 241 2 245 2 59 2 349 2 840 2 63 10 460 4 518 4 575 8 730 2 520 2 685 2 357 2 197 2 420 2 691 8 75 2 847 2 205 2 583 2 141 2 140 4 801 2 858 4 859 2 211 2 319 2 432 2 652 2 653 6 695 2 275 4 32 6 658 2 34 2 810 2 490 2 865 2 439 6 387 2 156 2 495 2 709 2 228 12 553 6 45 4 164 4 48 2 823 2 288 2 619 4 104 2 
761 2 106 2 670 2 0 2 671 2 108 2 2 4 765 2 672 4 343 2 242 2 241 2 452 4 773 6 245 2 247 6 112 2 349 2 776 6 571 2 250 6 459 6 460 4 252 1 685 2 686 2 463 4 788 6 357 2 465 2 689 6 792 8 470 2 363 6 793 4 691 2 18 2 795 2 369 6 137 2 372 2 477 2 141 2 140 6 801 2 26 1 587 2 380 1 694 1 695 2 807 2 275 4 593 6 32 4 597 2 384 4 278 2 34 2 150 2 37 2 490 2 810 2 385 2 603 2 156 2 387 2 39 6 40 2 815 2 495 2 42 4 709 2 391 2 45 4 822 10 710 2 164 6 286 2 823 2 48 2 288 2 395 6 501 2 396 2 619 8 399 12 828 2 502 2 503 2 621 4 506 2 405 1 623 2 407 8 59 2 296 2 297 2 61 2 840 2 634 2 518 4 190 1 730 2 520 4 302 2 197 2 420 2 638 2 72 6 526 2 640 6 75 2 203 6 425 2 847 4 206 7 205 2 643 2 644 2 312 2 856 4 858 4 859 2 211 4 318 2 319 2 432 2 652 2 653 24 744 1 218 2 89 2 658 4 437 2 865 2 438 2 662 2 439 12 870 1 326 1 327 2 666 2 876 6 228 46 229 2 552 2 754 6 445 6 230 2 553 8 331 2 759 2 555 2 101 6 235 2 668 2 103 7 104 2 
761 2 106 2 670 2 0 2 671 2 108 2 448 4 2 4 765 2 672 4 343 2 242 2 241 2 452 4 773 6 245 2 247 6 112 2 349 2 776 6 571 2 250 6 459 6 460 4 685 2 686 2 463 8 788 6 357 2 465 2 689 6 792 8 470 2 363 6 793 4 691 6 18 2 795 2 369 6 137 2 372 2 477 2 141 2 140 6 801 2 587 2 695 2 807 2 275 4 593 6 32 8 597 2 384 4 278 2 151 2 34 2 150 2 37 2 490 2 810 2 385 2 603 2 156 2 387 2 39 6 40 2 815 2 495 2 709 2 391 2 45 4 822 10 710 2 164 6 286 2 823 2 48 2 288 2 395 6 501 2 396 4 619 8 399 12 828 2 502 2 503 2 621 4 506 2 623 2 407 8 59 2 296 2 297 2 61 2 840 2 63 2 634 2 518 4 730 2 520 4 302 4 197 2 420 2 638 2 72 6 526 2 640 6 75 2 203 6 425 2 847 4 205 2 643 2 644 2 312 2 856 4 858 4 859 2 211 4 318 4 319 2 432 2 214 2 652 2 653 26 218 2 89 2 658 4 437 2 865 2 438 2 662 2 439 12 440 2 327 2 666 2 876 6 228 48 229 2 552 2 754 6 445 6 230 2 553 8 331 2 759 2 555 2 101 6 235 2 668 2 104 2 
761 2 106 2 670 2 0 2 671 2 108 2 448 4 2 4 765 2 672 4 343 2 242 2 241 2 452 4 773 6 245 2 247 6 112 2 349 2 776 6 571 2 250 6 459 6 460 4 575 4 685 2 686 2 463 8 788 6 357 2 465 2 689 6 792 8 470 2 363 6 793 4 691 6 18 2 795 2 369 6 137 2 372 2 477 2 141 2 140 6 801 2 587 2 695 2 807 2 275 4 593 6 32 8 597 2 384 4 278 2 151 2 34 2 150 2 37 2 490 2 810 2 385 2 603 2 156 2 387 2 39 6 40 2 815 2 495 2 709 2 391 2 45 4 822 10 710 2 164 6 286 2 823 2 48 2 288 2 395 6 501 2 396 4 619 8 399 12 828 2 502 2 503 2 621 4 506 2 623 2 407 8 59 2 296 2 297 2 61 2 840 2 63 6 634 2 518 4 730 2 520 4 302 4 197 2 420 2 638 2 72 6 526 2 640 6 75 2 203 6 425 2 847 4 205 2 643 2 644 2 312 2 856 4 858 4 859 2 211 4 318 4 319 2 432 2 214 2 652 2 653 26 218 2 89 2 658 4 437 2 865 2 438 2 662 2 439 12 440 2 327 2 666 2 876 6 228 48 229 2 552 2 754 6 445 6 553 8 230 2 331 2 759 2 555 2 101 6 235 2 668 2 104 2 
671 2 0 2 670 2 448 4 2 4 672 4 241 2 242 2 452 4 4 6 245 2 247 6 250 6 459 6 460 4 686 2 685 2 463 10 465 2 689 6 470 2 18 2 691 6 477 2 274 2 695 2 275 4 32 10 277 2 278 4 34 2 490 2 37 4 701 6 39 12 40 2 41 2 495 2 42 2 709 2 45 4 710 2 286 2 48 2 288 2 501 2 502 2 503 2 506 2 508 6 510 6 59 2 296 2 297 2 61 2 63 6 518 4 730 2 520 4 302 4 70 2 72 12 526 2 75 2 307 2 312 2 318 4 319 2 89 2 327 2 754 6 552 2 553 10 331 2 759 2 555 2 101 6 104 2 761 2 106 2 765 2 343 2 773 12 112 2 349 2 776 8 114 6 571 2 575 4 357 2 788 6 792 12 125 6 363 6 793 6 795 2 369 12 797 6 137 2 372 2 140 6 141 2 801 2 587 2 807 2 593 8 384 4 597 2 151 2 150 2 810 2 385 2 387 2 156 2 603 2 815 2 158 2 391 4 822 8 164 6 823 2 395 12 396 4 619 8 175 6 828 2 399 10 831 2 621 4 622 6 623 2 407 8 840 2 634 2 197 2 420 2 638 2 423 2 640 12 203 6 425 2 847 4 205 2 643 2 644 4 856 4 857 2 858 4 859 2 211 4 432 2 214 2 653 24 652 2 218 2 658 4 437 2 865 2 438 2 662 4 439 16 440 2 666 2 228 52 876 6 229 2 230 2 445 6 668 2 235 2 
106 2 670 2 0 2 141 2 448 2 858 2 765 2 319 2 245 2 652 2 275 4 32 6 490 2 810 2 63 4 460 4 439 4 518 2 156 2 387 2 575 4 520 2 709 2 228 4 691 6 45 2 553 6 164 2 75 2 823 2 48 2 205 2 288 2 619 2 104 2 
106 2 671 2 0 2 670 2 448 2 108 2 341 2 765 2 672 4 451 2 343 2 241 2 452 2 111 2 245 2 112 2 776 6 568 2 676 2 460 4 686 2 357 2 792 8 793 4 18 2 691 6 795 2 477 2 372 2 140 6 141 2 484 2 275 4 593 6 32 6 384 4 278 3 150 2 810 2 490 2 603 2 387 2 156 2 815 2 709 2 45 2 822 2 164 2 710 2 48 2 823 2 288 2 619 2 828 2 399 4 502 2 506 2 59 2 61 2 724 2 63 2 518 2 730 2 520 2 521 2 197 2 75 2 847 4 205 2 644 3 858 2 859 2 211 4 212 2 319 2 432 2 652 2 653 24 215 3 865 2 662 3 439 4 228 28 754 6 553 6 230 2 555 2 668 2 104 2 
761 2 106 2 0 2 670 2 448 2 2 4 765 2 241 2 245 2 59 2 349 2 840 2 63 10 460 4 518 4 575 8 730 2 520 2 685 2 357 2 197 2 420 2 691 8 75 2 847 2 205 2 583 2 141 2 140 4 801 2 858 4 859 2 211 2 319 2 432 2 652 2 653 6 695 2 275 4 32 6 658 2 34 2 810 2 490 2 865 2 439 6 387 2 156 2 495 2 709 2 228 12 553 6 45 4 164 4 48 2 823 2 288 2 619 4 104 2 
761 2 106 2 0 2 670 2 448 2 2 4 54 4 765 2 831 2 241 2 59 2 349 2 840 2 63 10 460 4 518 4 575 8 730 2 520 2 685 2 357 2 197 2 524 2 420 2 691 8 75 2 847 2 205 2 141 2 140 4 801 2 858 4 859 2 211 2 319 2 432 2 653 6 652 2 695 2 275 4 32 8 658 2 34 2 810 2 490 2 865 2 492 2 439 8 387 2 156 2 495 2 709 2 228 12 45 4 553 6 164 4 48 2 823 2 288 2 619 4 104 2 
259 2 288 2 709 2 
259 2 288 2 709 2 
761 2 671 2 670 4 448 4 2 2 672 4 765 2 343 2 452 6 453 2 347 2 112 2 776 2 460 4 461 2 575 4 463 4 357 2 792 2 259 2 18 2 691 6 475 4 795 2 477 2 372 2 139 2 140 6 801 2 272 4 275 4 593 2 32 12 384 4 278 2 34 2 150 2 603 2 815 2 495 2 42 4 709 2 45 2 822 2 164 4 710 2 48 2 288 4 396 4 619 4 827 4 828 2 399 4 502 2 52 2 621 2 831 4 506 2 184 2 59 2 185 2 61 2 839 2 63 6 518 2 730 2 520 4 302 4 197 2 201 2 306 2 203 2 425 4 847 4 205 2 856 2 858 2 648 2 859 2 211 4 318 4 432 2 653 16 652 2 865 2 439 16 95 2 97 2 228 24 754 6 230 2 553 12 555 2 668 2 
461 2 399 2 402 2 621 2 535 2 465 2 243 2 197 2 228 4 653 2 184 2 331 2 822 2 349 2 201 2 203 2 49 2 
761 2 671 2 670 4 448 4 2 4 672 4 765 2 343 2 452 6 453 2 112 2 776 2 458 2 460 4 461 2 575 4 463 4 357 2 792 2 259 2 18 2 691 6 475 4 795 2 477 2 372 2 139 2 140 6 801 2 145 2 272 4 695 2 275 4 593 2 32 12 384 4 278 4 34 2 150 2 603 2 815 2 495 2 42 4 709 4 45 2 164 4 710 2 48 2 288 6 168 2 396 4 619 4 827 4 828 2 399 2 502 2 52 2 503 2 831 4 506 2 184 2 59 2 185 2 61 2 840 2 839 4 63 6 518 2 730 2 520 4 635 2 302 4 197 2 526 2 201 2 306 2 203 2 425 4 847 4 205 2 737 2 856 2 858 2 859 2 649 2 211 4 318 4 432 2 653 16 652 2 656 2 658 4 865 2 438 2 439 16 95 2 97 2 228 24 754 6 230 2 553 12 555 2 235 2 668 2 
761 2 671 2 670 4 448 4 2 4 672 4 765 2 343 2 452 6 453 2 112 2 776 2 460 4 461 2 684 2 575 4 463 4 357 2 792 2 259 2 18 2 691 6 475 4 795 2 477 2 372 2 139 2 140 6 801 2 272 4 695 2 275 4 593 2 32 12 384 4 278 2 34 2 150 2 603 2 815 2 495 2 42 4 709 4 45 2 822 2 164 4 710 2 287 2 48 2 288 6 168 2 396 4 619 4 827 4 828 2 399 4 502 2 52 2 503 2 621 2 831 4 506 2 184 2 59 2 185 2 61 2 840 2 839 2 414 2 63 6 518 2 730 2 520 4 302 4 197 2 198 2 526 2 201 2 306 2 203 2 425 4 847 4 205 2 856 2 738 2 858 2 859 2 649 2 211 4 318 4 432 2 653 16 652 2 658 4 865 2 438 2 439 16 95 2 97 2 228 24 754 6 230 2 553 12 555 2 235 2 668 2 
399 2 828 2 502 2 449 2 672 2 343 2 766 2 293 2 768 2 506 2 452 2 110 2 59 2 112 2 776 6 838 2 187 2 571 2 632 2 730 2 686 2 462 2 357 2 418 2 197 2 792 8 470 2 793 4 843 2 473 2 846 2 847 4 79 2 644 2 477 2 80 1 584 1 140 6 859 2 860 2 144 2 211 4 432 2 653 18 807 2 697 2 593 6 436 2 384 2 278 2 865 2 385 2 662 2 603 2 223 2 40 2 815 2 390 2 228 24 754 2 759 2 710 2 555 2 668 2 173 2 
291 2 481 2 718 2 653 2 833 2 593 2 776 2 149 3 594 2 278 3 118 4 37 6 153 2 355 1 662 3 686 2 68 2 792 2 228 2 793 2 71 2 284 2 77 2 447 2 644 3 
662 2 291 2 68 2 686 2 481 2 718 2 792 2 228 2 71 2 653 2 793 2 833 2 776 2 593 2 149 2 284 2 77 2 594 2 278 2 447 2 118 4 37 6 644 2 153 2 
662 2 291 2 68 2 686 2 481 2 718 2 792 2 228 2 71 2 653 2 793 2 833 2 776 2 593 2 149 2 284 2 77 2 594 2 278 2 447 2 118 4 37 6 644 2 153 2 
240 2 716 2 298 2 115 4 412 2 9 4 457 3 781 3 415 2 576 2 686 2 196 6 16 4 792 2 17 2 637 2 128 3 639 2 641 4 136 6 644 3 81 2 802 2 483 2 653 4 85 2 541 2 435 4 594 2 598 2 278 3 91 2 547 4 871 2 43 2 228 10 551 4 612 2 556 2 669 2 
240 2 716 2 298 2 115 4 412 2 9 4 457 2 781 2 415 2 576 2 686 2 196 6 16 4 792 2 17 2 637 2 128 2 639 2 641 4 136 4 371 2 644 2 81 2 802 2 483 2 650 2 653 4 85 2 541 2 435 4 594 2 598 2 278 2 91 2 546 2 547 4 871 2 43 2 228 10 551 4 612 2 556 2 669 2 
240 2 716 2 298 2 115 4 412 2 9 4 457 2 781 2 415 2 576 2 686 2 196 6 16 4 792 2 17 2 637 2 128 2 639 2 641 4 136 4 371 2 644 2 81 2 802 2 483 2 650 2 653 4 85 2 541 2 435 4 594 2 598 2 278 2 91 2 546 2 547 4 871 2 43 2 228 10 551 4 612 2 556 2 669 2 
240 2 716 2 298 2 115 4 412 2 9 4 457 2 781 2 415 2 576 2 686 2 196 6 16 4 792 2 17 2 637 2 128 2 639 2 641 4 136 4 371 2 644 2 81 2 802 2 483 2 650 2 653 4 85 2 541 2 435 4 594 2 598 2 278 2 91 2 546 2 547 4 871 2 43 2 228 10 551 4 612 2 556 2 669 2 
240 2 716 2 298 2 115 4 412 2 9 4 457 2 781 2 415 2 576 2 686 2 196 6 16 4 792 2 17 2 637 2 128 2 639 2 641 4 136 4 371 4 644 2 81 2 802 2 483 2 650 4 653 4 85 2 541 2 435 4 594 2 598 2 278 2 91 2 546 4 547 4 871 2 43 2 228 10 551 4 612 2 556 2 669 2 
812 2 422 2 563 2 659 2 790 2 881 2 
775 2 494 2 829 2 778 2 790 2 850 2 507 2 
532 2 292 1 534 1 586 1 314 2 589 2 717 2 773 2 653 8 567 2 216 2 835 2 351 2 628 2 865 2 93 2 785 2 604 2 789 1 361 2 228 10 162 2 614 2 368 1 285 2 735 2 
739 2 3 2 650 3 213 2 716 6 653 6 86 2 808 2 298 6 249 2 541 6 7 2 598 6 629 2 576 2 546 2 547 4 123 2 43 6 228 6 551 12 127 2 305 2 556 6 47 2 207 4 136 16 371 2 669 6 373 4 
784 2 505 2 673 2 471 2 350 2 513 2 115 2 435 2 21 2 9 2 489 2 268 2 602 3 
784 2 747 2 693 2 505 2 715 1 673 2 471 2 228 1 653 1 350 2 513 2 115 2 435 2 21 4 9 2 489 2 268 2 602 6 
747 2 784 4 693 2 505 2 673 2 471 4 350 2 513 2 115 2 435 2 21 4 9 2 489 2 268 4 602 6 
747 8 784 8 693 6 505 2 715 1 673 2 471 8 228 1 653 1 350 2 513 2 115 2 435 2 21 4 9 2 489 2 268 8 602 10 
760 2 671 2 562 2 1 2 672 18 770 2 771 8 565 2 248 6 675 2 777 2 116 8 8 2 10 2 353 2 681 2 572 2 251 2 254 2 688 2 358 2 258 6 578 2 261 6 795 2 263 2 477 2 800 2 378 2 273 2 591 7 31 2 592 2 148 2 809 2 384 20 279 2 606 2 815 4 159 4 818 4 161 2 171 2 828 4 51 2 401 2 830 2 56 1 403 2 723 6 410 2 65 2 419 4 69 2 303 2 199 2 74 6 527 4 78 2 529 2 310 4 531 2 429 10 210 2 647 4 316 2 83 2 315 2 742 2 431 2 320 2 653 40 746 16 441 3 749 2 96 2 227 6 228 44 330 2 754 38 98 2 757 4 231 2 758 2 878 4 233 8 879 4 238 2 
671 8 340 4 51 2 828 2 1 2 672 14 55 2 774 2 409 2 5 4 8 2 572 2 681 2 417 4 419 6 636 2 523 2 200 4 578 6 129 2 74 2 132 2 424 2 527 2 795 8 22 2 308 2 848 6 267 2 530 2 265 4 800 2 529 2 477 2 376 4 429 8 803 2 378 2 83 2 315 2 742 2 653 26 591 2 384 14 221 10 746 14 441 2 157 2 749 2 815 2 817 2 159 6 818 2 875 4 228 28 754 36 757 6 231 2 554 4 165 2 878 2 879 10 
760 2 671 6 340 2 1 2 672 16 565 2 774 2 675 2 777 2 5 2 10 4 353 2 681 2 572 2 251 2 254 2 688 2 258 4 578 3 129 2 132 1 795 6 263 2 267 2 477 4 265 2 376 2 803 2 378 2 273 2 591 4 31 2 148 2 488 2 384 18 606 2 815 6 816 2 159 4 818 2 160 2 498 2 500 2 828 6 51 2 401 2 830 2 55 2 403 2 409 2 723 4 410 2 841 2 417 2 419 4 303 2 200 2 74 4 527 2 426 2 308 1 848 4 529 2 530 2 310 2 531 2 429 14 647 6 316 2 83 2 315 2 742 2 431 2 320 2 653 34 542 2 221 2 746 4 441 1 749 2 329 2 875 2 228 38 754 34 231 2 758 2 757 4 554 2 878 4 879 16 
671 6 340 2 51 2 828 2 1 2 178 2 672 20 344 2 713 2 770 2 564 2 183 6 248 2 60 2 113 2 677 2 352 2 8 2 627 2 62 4 681 2 572 2 119 2 780 2 729 4 574 2 66 2 301 2 255 2 122 2 419 4 523 2 200 2 74 2 261 2 424 2 527 2 795 6 427 2 581 4 848 6 265 2 800 2 529 2 477 2 851 2 855 2 376 2 429 6 315 2 83 2 430 2 378 2 740 2 742 2 806 2 591 2 653 44 654 2 809 2 596 2 384 20 323 2 703 2 746 36 386 2 813 2 749 2 748 2 815 2 549 2 227 2 159 4 818 2 496 2 875 2 228 46 754 48 821 2 231 2 757 4 554 2 711 4 335 2 165 2 878 2 392 2 616 2 618 2 617 2 339 2 
779 2 

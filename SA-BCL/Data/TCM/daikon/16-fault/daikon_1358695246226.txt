#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 69 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 177 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V ERROR utilMDE.Assert$AssertionException (28,547) 187 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 131 762 233 646 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (383,389) (846,857) (846,857) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 134 (383,389) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 134 (383,389) (383,389) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 134 (383,389) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 709 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 151 923 634 247 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair; | RETURN | 2847 | return null
daikon.Quant:memberOf(D[F)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3R_57()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isScalar()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:gt(II)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3R_50()Z
daikon.ProglangType:isIntegral()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ModBitTracker:num_samples()I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:intern([D)[D
daikon.Quant:slice([III)[I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lt(II)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseLT([I)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Ppt:Ppt()V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptName:isEnterPoint()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters; | STATEMENT | 22663 | stmt -> ;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName:hashCode()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 38491 | return null
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:concat([I[I)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D | STATEMENT | 6797 | stmt -> ;
jtb.JavaParser:jj_ntk()I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:split(I)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_163()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_1(I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Debug:logDetail()Z
daikon.Quant:gte(II)Z
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_162()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:subsetOf([D[D)Z
daikon.PptSlice2:arity()I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Intern:intern([J)[J
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:eq(FF)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE:pow(II)I
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.Quant:ne(II)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 10865 | if (x) -> if (!x)
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_14(I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:dimensions()I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.Node:Node()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_47()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Debug:logOn()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariants:Invariants()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.Quant:eltsLT([II)Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
daikon.ProglangType:isArray()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_135()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[F)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfo:name()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:lte(II)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 5998 | = null
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3_1()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:memberOf(I[I)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.ModBitTracker:num_vars()I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:memberOf(J[J)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptSlice0:arity()I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseLTE([I[I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
378 2 118 4 707 2 695 2 28 2 315 2 547 2 851 2 727 2 
5 2 319 4 919 2 77 6 166 2 150 2 69 2 585 2 453 2 916 4 
12 6 845 6 414 4 584 2 547 2 603 6 39 2 853 2 732 6 608 2 44 2 28 2 220 4 
764 30 426 8 571 16 693 8 126 2 271 6 211 12 906 4 547 6 128 26 215 10 97 8 909 2 245 6 385 2 793 2 193 10 136 16 774 2 413 10 559 10 321 8 49 2 18 16 52 4 839 4 536 2 28 6 335 4 782 10 
766 6 310 4 
58 2 
764 6 32 2 571 2 575 2 430 2 211 2 820 2 37 2 215 2 128 4 245 2 193 4 136 2 413 2 559 2 357 2 321 2 18 2 839 2 734 2 27 2 782 2 812 2 
764 14 413 4 559 4 571 8 124 2 211 5 18 8 906 2 128 12 548 6 215 4 367 6 532 2 883 4 136 8 782 4 555 4 
157 2 320 2 192 2 51 2 282 2 
2 2 622 2 177 2 91 2 297 2 
378 2 183 2 126 2 657 2 547 4 311 2 770 2 248 2 885 2 316 2 70 2 392 4 673 2 13 4 724 2 16 2 256 2 145 4 205 2 564 4 79 2 28 4 735 2 264 2 29 2 207 2 569 2 903 2 696 2 904 2 344 2 38 2 470 2 351 2 583 2 476 2 174 2 360 2 756 2 808 2 296 2 537 2 593 2 300 2 
764 54 571 32 875 8 271 4 211 22 547 4 215 16 309 6 128 48 548 6 97 6 465 4 578 4 912 6 434 4 277 2 245 4 883 4 771 2 193 6 136 32 554 6 284 2 441 2 555 4 774 2 413 16 559 16 71 4 321 18 18 32 50 4 367 6 867 2 758 2 148 6 839 2 28 4 782 16 
844 2 380 2 696 2 
379 10 393 2 253 22 122 2 174 2 598 2 495 2 823 2 242 2 259 2 228 2 913 2 733 2 671 2 
489 2 490 2 492 1 123 1 600 4 237 2 818 2 238 2 821 2 601 2 127 32 496 2 4 2 241 2 243 3 830 2 606 4 132 2 386 2 500 3 607 2 135 4 387 2 831 3 250 2 612 3 252 2 834 4 617 1 726 4 400 2 836 6 838 2 22 3 23 2 620 16 149 3 402 2 506 2 621 2 25 2 262 2 28 34 30 2 509 8 843 1 268 2 158 2 630 3 36 8 515 2 635 1 520 2 40 2 745 2 637 2 852 2 854 3 524 2 43 2 45 2 286 2 528 2 175 2 415 24 178 2 290 2 179 6 647 2 759 2 533 16 55 16 535 2 60 2 424 2 303 2 427 2 428 5 429 2 186 2 659 2 546 4 767 2 547 32 661 2 189 2 662 2 768 2 881 2 550 2 882 6 435 2 437 2 668 2 669 32 886 2 773 2 318 4 442 2 443 4 561 2 201 2 447 2 892 8 449 2 779 1 78 2 781 16 333 2 686 12 456 1 901 1 570 1 786 1 338 2 457 2 572 2 339 2 340 1 694 2 343 2 460 2 461 2 214 1 698 3 908 3 467 2 350 2 582 2 100 1 703 2 915 2 356 3 359 3 707 2 362 1 117 6 586 1 924 2 366 24 479 2 587 2 368 2 590 2 482 2 487 2 485 1 
111 2 
505 2 28 2 187 2 
260 2 462 2 28 4 
233 2 234 2 491 2 714 20 815 30 1 30 493 2 129 12 131 2 719 2 246 2 610 2 137 92 10 20 832 2 723 10 251 2 140 2 396 4 144 12 730 30 624 2 152 20 626 4 155 2 31 2 269 2 849 2 741 30 743 2 744 12 522 2 168 2 167 2 638 14 281 20 283 30 172 2 285 2 749 30 173 2 861 6 287 18 288 2 752 30 753 18 646 2 866 8 757 2 529 2 531 2 870 2 54 2 295 2 871 2 298 2 762 2 873 2 182 2 655 2 62 2 656 6 544 30 64 4 545 2 307 4 188 12 769 2 666 12 551 30 884 2 195 2 772 30 317 38 198 4 557 4 676 10 203 2 325 2 204 2 894 2 682 2 327 2 82 2 81 10 208 2 87 4 458 2 574 18 787 30 577 2 212 2 94 2 910 4 469 2 218 18 99 2 473 92 474 16 354 30 799 2 224 8 361 2 803 4 478 2 589 2 711 92 374 38 809 6 712 2 811 2 
560 1 865 2 501 2 92 2 
501 2 874 2 
568 2 784 2 253 6 674 2 725 4 619 4 364 2 6 2 665 2 731 2 280 2 794 2 412 2 439 2 899 2 353 2 232 2 267 2 
488 2 92 2 
681 2 165 2 184 2 696 2 
681 2 165 2 184 2 792 2 696 2 227 2 
681 2 221 2 754 2 696 2 501 2 335 2 
248 2 841 2 
681 2 72 2 696 2 335 2 
235 2 692 2 
636 2 90 2 
615 2 226 2 
47 2 639 2 
47 2 90 2 334 2 
860 2 47 2 90 2 
47 2 90 2 798 2 
47 2 90 2 642 2 
785 2 494 2 696 2 163 6 244 2 14 6 446 2 681 2 
289 2 683 2 
681 2 888 2 792 2 754 2 696 2 501 2 335 2 
754 2 101 2 501 2 
472 2 754 2 501 2 
289 2 755 2 92 2 
754 2 501 2 
289 2 143 2 
549 2 501 2 
289 2 92 2 275 2 
814 2 226 2 92 2 
47 2 926 2 92 2 
692 2 92 2 680 2 
406 2 90 2 92 2 
289 2 416 2 
902 2 501 2 
113 2 226 2 
108 2 47 2 
692 2 580 2 
90 2 822 2 
918 2 289 2 
90 2 451 2 
806 2 692 2 
0 2 47 2 
261 2 226 2 
164 2 289 2 92 2 275 2 
164 2 345 2 289 2 92 2 275 2 
289 2 486 2 92 2 
718 2 289 2 92 2 
141 2 436 2 747 2 194 2 
402 2 
382 2 818 2 127 4 496 2 241 2 606 4 132 2 135 4 249 2 252 2 834 2 726 4 400 2 836 2 838 2 506 2 25 2 26 2 28 26 509 2 843 2 161 2 515 2 524 2 43 2 45 6 286 2 750 4 528 2 179 2 868 2 55 6 535 2 427 2 546 4 547 26 189 2 661 2 882 4 435 2 668 2 669 6 886 2 318 2 442 2 887 2 443 2 444 2 561 4 333 2 686 8 338 2 457 2 339 2 88 2 89 4 460 2 461 2 576 2 214 2 911 2 702 2 915 2 707 2 801 2 117 6 588 2 368 2 479 2 590 2 372 2 373 2 807 2 487 2 
490 1 382 2 818 2 127 4 496 2 241 2 606 4 132 2 135 4 249 2 252 2 834 2 726 4 400 2 836 2 838 2 506 2 25 2 28 26 509 2 843 2 161 2 515 2 745 2 524 2 43 2 45 6 286 2 750 4 528 2 864 2 179 2 868 2 760 2 55 6 535 2 427 2 546 4 547 26 189 2 661 2 882 5 435 2 437 1 668 2 669 6 886 2 318 2 442 2 887 2 443 2 444 2 561 4 333 2 686 8 338 2 457 2 339 2 88 2 89 4 460 2 461 2 576 2 214 2 464 2 702 2 915 2 707 2 801 2 117 6 588 2 368 2 479 2 590 2 372 2 807 2 487 2 
63 2 
329 2 856 2 
121 2 597 4 305 2 546 2 818 2 819 8 432 2 547 6 605 2 824 2 497 2 5 2 67 2 8 2 668 2 606 2 134 2 389 2 11 10 775 8 319 6 503 2 776 2 324 2 400 2 401 2 77 6 328 2 150 2 28 12 685 2 508 4 453 4 687 2 454 2 455 2 270 2 457 2 846 2 460 2 463 4 788 2 521 2 347 4 915 2 916 6 857 2 705 2 751 2 222 2 919 4 528 2 802 2 117 4 648 2 229 4 534 2 484 2 653 4 654 2 
597 2 846 2 305 2 463 2 819 8 239 4 605 2 5 2 497 2 521 2 41 2 67 2 347 2 8 2 134 2 389 2 916 6 11 8 857 2 775 8 319 4 919 4 222 2 776 2 862 2 401 2 77 6 328 2 229 2 150 2 534 2 28 4 685 2 653 2 453 4 687 2 454 2 
705 2 919 2 503 2 846 2 776 2 463 4 824 2 521 2 648 2 77 2 347 4 534 2 508 2 389 2 687 2 453 2 916 2 857 2 
121 2 597 4 305 2 546 2 818 2 819 4 432 2 547 6 605 2 824 2 497 2 5 2 67 2 8 2 668 2 606 2 134 2 389 2 11 6 775 4 319 6 503 2 776 2 324 2 400 2 401 2 77 4 328 2 28 12 685 2 508 4 453 4 687 2 454 2 455 2 270 2 457 2 846 2 460 2 463 4 788 2 521 2 276 2 347 4 915 2 916 6 857 2 705 2 751 2 222 2 919 4 528 2 802 2 117 4 648 2 229 4 534 2 484 2 653 4 654 2 
121 2 597 4 305 2 546 2 818 2 819 4 432 2 547 6 605 2 824 2 497 2 5 2 67 2 8 2 668 2 606 2 134 2 389 2 11 6 775 4 319 6 503 2 776 2 324 2 400 2 401 2 77 6 328 2 28 12 685 2 508 4 453 4 687 2 454 2 455 2 270 2 457 2 846 2 460 2 463 4 788 2 521 2 166 2 347 4 915 2 916 4 857 2 705 2 751 2 222 2 919 4 528 2 802 2 117 4 648 2 229 4 534 2 484 2 653 4 654 2 
121 2 597 4 305 2 546 2 818 2 819 8 432 2 547 6 605 2 824 2 497 2 5 2 67 2 8 2 668 2 606 2 134 2 389 2 11 6 775 4 319 6 503 2 776 2 324 2 400 2 401 2 77 6 328 2 150 2 28 12 685 2 508 4 453 4 687 2 454 2 455 2 270 2 457 2 846 2 460 2 463 4 788 2 521 2 347 4 915 2 916 6 857 2 705 2 751 2 222 2 919 4 528 2 802 2 117 4 648 2 229 4 534 2 484 2 653 4 654 2 
121 2 597 4 305 2 546 2 818 2 819 8 432 2 547 6 605 2 824 2 497 2 5 2 67 2 606 2 8 2 668 2 134 2 389 2 11 10 775 8 319 8 503 2 776 2 324 2 400 2 401 2 77 8 328 2 150 2 28 12 685 2 508 4 453 4 687 2 454 2 455 2 270 2 457 2 846 2 460 2 463 4 788 2 521 2 166 2 347 4 915 2 916 6 857 2 705 2 751 2 222 2 919 4 528 2 802 2 117 4 648 2 229 4 534 2 484 2 653 4 654 2 
121 2 597 4 305 2 546 2 818 2 819 8 432 2 547 6 605 2 824 2 497 2 5 2 67 2 8 2 668 2 606 2 134 2 389 2 11 10 775 8 319 6 503 2 776 2 324 2 400 2 401 2 77 6 328 2 150 2 28 12 685 2 508 4 453 4 687 2 454 2 455 2 270 2 457 2 846 2 460 2 463 4 788 2 521 2 347 4 915 2 916 6 857 2 705 2 751 2 222 2 919 4 528 2 802 2 117 4 648 2 229 4 534 2 484 2 653 4 654 2 
490 2 497 2 5 4 8 2 249 4 502 2 11 2 503 2 254 2 17 2 257 2 19 2 726 4 506 12 25 2 260 6 28 46 508 4 509 2 266 7 270 2 513 6 272 1 521 2 524 2 45 6 286 2 751 4 528 2 291 6 55 6 534 2 56 1 535 2 538 2 540 8 302 2 541 7 305 2 546 4 547 24 312 2 67 2 318 2 319 12 776 2 324 2 75 4 778 6 77 8 328 2 780 4 332 2 333 2 84 2 567 2 783 6 337 2 338 2 339 2 573 6 89 4 347 4 106 2 111 6 802 2 117 6 368 2 119 2 372 2 376 2 377 6 121 2 597 4 818 2 819 2 127 2 605 2 824 2 828 1 606 4 132 2 133 1 134 2 135 4 388 6 389 2 395 2 834 2 397 6 400 2 836 2 838 2 401 2 623 1 625 2 627 6 153 2 846 2 166 4 169 2 857 2 858 2 179 2 648 2 421 10 180 6 872 2 653 6 654 2 425 2 427 2 187 6 432 2 664 1 190 1 882 6 668 2 437 2 669 8 197 6 442 2 443 2 444 2 679 2 891 2 450 2 206 2 685 2 686 4 900 1 453 4 687 2 454 2 455 4 209 2 689 2 457 2 210 2 460 2 463 4 461 2 905 2 216 6 702 2 915 2 916 4 705 2 222 2 919 4 707 2 921 2 223 1 225 2 479 2 480 6 229 8 484 2 487 2 
121 2 490 2 597 4 818 2 819 6 127 2 605 2 824 2 5 4 497 2 8 2 606 4 132 2 134 2 135 4 388 6 389 2 249 4 11 2 502 2 503 2 395 2 254 2 397 6 17 2 834 4 257 2 19 2 726 4 400 2 836 2 838 2 401 2 506 12 260 6 25 2 150 4 28 48 625 2 508 4 153 2 627 6 509 2 270 2 846 2 513 6 521 2 169 2 524 2 45 6 857 2 286 2 858 2 751 4 528 2 179 2 291 6 648 2 421 10 55 6 180 6 534 2 535 2 872 2 538 2 653 6 654 2 425 2 540 8 302 2 427 2 305 2 546 4 187 6 432 2 547 26 312 2 67 2 882 6 669 8 437 2 668 2 197 6 318 4 442 2 443 4 319 12 444 2 561 2 776 2 679 2 324 2 891 2 75 4 778 6 328 2 77 8 780 4 206 2 450 2 332 2 333 2 685 2 686 8 687 2 453 4 454 2 209 2 455 4 84 2 783 6 567 2 690 2 689 2 337 2 338 2 457 2 573 6 339 2 210 2 89 4 460 2 461 2 463 4 905 2 216 6 347 4 702 2 915 2 916 8 106 2 705 2 919 4 222 2 111 6 921 2 707 2 225 2 802 2 117 6 479 2 368 2 119 2 480 6 230 2 229 8 372 2 484 2 487 2 376 2 377 6 
121 2 490 2 597 4 818 2 819 6 127 2 605 2 824 2 5 4 497 2 8 2 606 4 132 2 134 2 135 4 388 6 389 2 249 4 502 2 11 6 503 2 395 2 254 2 397 6 17 2 834 4 257 2 19 2 726 4 400 2 836 2 838 2 401 2 506 12 260 6 25 2 150 4 28 48 625 2 508 4 153 2 627 6 509 2 270 2 846 2 513 6 521 2 169 2 524 2 45 6 857 2 286 2 858 2 751 4 528 2 179 2 291 6 648 2 421 10 55 6 180 6 534 2 535 2 872 2 538 2 653 6 654 2 425 2 540 8 302 2 427 2 305 2 546 4 187 6 432 2 547 26 312 2 67 2 882 6 669 8 437 2 668 2 197 6 318 4 442 2 775 4 443 4 319 12 444 2 561 2 776 2 679 2 324 2 891 2 75 4 778 6 328 2 77 8 780 4 206 2 450 2 332 2 333 2 685 2 686 8 687 2 453 4 454 2 209 2 455 4 84 2 783 6 567 2 690 2 689 2 337 2 338 2 457 2 573 6 339 2 210 2 89 4 460 2 461 2 463 4 905 2 216 6 347 4 702 2 915 2 916 8 106 2 705 2 919 4 222 2 111 6 921 2 707 2 225 2 802 2 117 6 479 2 368 2 119 2 480 6 230 2 229 8 372 2 484 2 487 2 376 2 377 6 
490 2 497 2 5 4 8 2 249 4 11 6 502 2 503 2 254 2 17 2 257 2 19 2 726 4 506 10 25 2 260 12 28 52 508 4 509 4 270 2 513 6 521 2 276 2 278 2 524 2 45 8 286 2 751 4 528 2 291 6 55 8 534 2 535 2 57 2 59 6 538 2 540 8 302 2 304 2 305 2 546 4 306 2 547 24 312 2 67 2 314 2 552 6 318 4 775 4 319 16 561 2 776 2 324 2 75 4 778 6 77 10 328 2 780 4 330 6 80 2 332 2 333 2 84 2 567 2 783 6 337 2 338 2 339 2 573 12 89 6 347 4 106 2 111 12 802 2 117 6 368 2 119 2 372 2 376 2 377 6 121 2 597 4 818 2 819 6 127 4 605 2 824 2 829 6 606 4 132 2 134 2 135 4 388 12 389 2 139 6 395 2 834 4 397 6 399 6 400 2 836 4 838 2 401 2 150 4 625 2 627 6 153 2 846 2 409 2 166 2 169 2 170 2 855 6 857 2 858 2 179 4 648 2 421 8 180 6 872 2 653 6 654 2 425 2 427 2 658 6 187 12 432 2 882 6 668 2 437 2 669 12 197 12 442 2 443 4 444 4 679 2 891 2 450 2 206 2 685 2 686 10 453 4 687 2 454 2 455 4 209 2 690 2 689 2 457 2 210 2 460 2 463 4 461 2 216 6 702 2 915 2 916 10 705 2 222 2 919 4 707 2 921 2 920 6 225 2 479 2 480 6 230 2 229 8 484 2 487 2 
121 2 597 2 846 2 305 2 819 6 463 2 605 2 5 2 497 2 521 2 67 2 8 2 347 2 134 2 389 2 11 4 916 6 857 2 775 4 319 4 222 2 919 4 776 2 401 2 328 2 77 6 229 2 150 2 534 2 28 4 685 2 653 2 687 2 453 4 454 2 
121 2 490 2 597 2 599 2 818 2 819 6 127 3 605 2 5 2 497 2 498 3 606 4 8 2 132 2 134 2 607 2 135 4 389 2 249 2 11 2 726 4 400 2 836 3 838 2 401 2 402 2 506 4 150 2 25 2 28 28 846 2 518 2 521 2 40 2 524 2 45 6 286 2 857 2 528 2 179 3 55 6 421 2 534 2 535 2 653 2 427 2 305 2 546 4 65 2 547 24 67 2 550 2 882 6 668 2 437 2 669 8 442 2 319 4 776 2 77 6 328 2 333 2 685 2 453 4 687 2 454 2 457 2 338 2 339 2 89 4 460 2 463 2 461 2 905 2 347 2 702 2 915 2 916 6 919 4 222 2 707 2 802 2 117 6 365 2 368 2 229 2 372 2 487 2 231 2 
497 2 684 2 605 2 
497 2 684 2 605 2 
490 2 597 2 818 2 819 6 127 2 605 2 497 2 5 4 606 4 132 2 134 2 135 4 389 2 249 4 11 2 834 4 726 4 400 2 838 2 24 2 506 4 25 2 150 4 736 2 28 24 627 2 160 2 850 2 521 2 166 2 523 2 524 2 45 2 286 2 644 2 528 2 53 2 421 2 55 2 535 2 299 2 653 2 427 2 765 2 546 4 547 16 882 6 67 2 437 2 668 2 669 2 318 4 775 2 443 4 319 10 776 2 202 2 75 2 77 10 780 2 333 2 686 4 453 4 338 2 457 2 339 2 460 2 461 2 463 2 347 2 702 2 217 2 915 2 916 8 919 4 707 2 117 6 479 2 588 4 368 2 371 2 229 4 372 2 487 2 
672 2 160 2 210 2 818 2 202 2 804 2 547 2 891 2 75 2 824 2 191 2 329 2 506 2 421 2 736 2 28 4 627 2 
490 2 597 2 818 2 819 6 383 2 127 4 605 2 497 2 5 4 606 4 132 2 134 2 135 4 389 2 249 4 11 2 834 4 726 4 400 2 838 2 24 2 506 2 25 2 150 4 736 2 28 20 160 2 850 2 521 2 166 2 523 2 524 2 45 2 286 2 644 2 528 2 53 2 55 2 535 2 299 2 653 2 427 2 765 4 546 4 547 14 882 6 67 2 437 2 668 2 669 2 318 4 775 2 443 4 319 10 776 2 563 2 77 10 780 2 333 2 686 4 453 4 338 2 457 2 339 2 460 2 461 2 463 2 347 2 702 2 217 2 915 2 916 8 919 4 707 2 117 6 479 2 588 4 368 2 371 2 229 4 372 2 487 2 
490 2 597 2 818 2 819 6 127 2 605 2 497 2 5 4 606 4 132 2 134 2 135 4 389 2 249 4 11 2 834 4 726 4 400 2 838 2 24 2 506 4 25 2 150 4 736 2 28 24 627 2 160 2 850 2 521 2 166 2 523 2 524 2 45 2 286 2 644 2 528 2 53 2 421 2 55 2 535 2 299 2 653 2 427 2 765 2 546 4 547 16 882 6 67 2 437 2 668 2 669 2 318 4 775 2 443 4 319 10 776 2 202 2 75 2 77 10 780 2 333 2 686 4 453 4 338 2 457 2 339 2 460 2 461 2 463 2 347 2 702 2 217 2 915 2 916 8 919 4 707 2 117 6 479 2 588 4 368 2 371 2 229 4 372 2 487 2 
709 2 
159 4 512 2 89 2 127 3 547 2 827 3 669 2 581 2 45 2 797 2 722 2 104 2 442 2 444 6 176 2 836 3 179 3 55 2 28 2 652 2 265 2 840 2 154 2 539 1 842 2 
159 4 512 2 89 2 127 2 547 2 827 2 669 2 581 2 45 2 797 2 722 2 104 2 442 2 444 6 176 2 836 2 179 2 55 2 28 2 652 2 265 2 840 2 154 2 842 2 
159 4 512 2 89 2 127 2 547 2 827 2 669 2 581 2 45 2 797 2 722 2 104 2 442 2 444 6 176 2 836 2 179 2 55 2 28 2 652 2 265 2 840 2 154 2 842 2 
596 3 764 5 691 6 571 2 341 2 631 4 877 3 236 4 3 2 271 2 716 3 273 2 127 3 547 4 215 2 128 4 97 4 433 4 880 4 384 4 826 2 669 2 196 2 553 2 609 2 136 2 138 2 442 2 413 2 559 2 616 2 706 2 417 2 18 2 179 3 620 2 781 2 28 10 652 2 782 2 
596 2 764 4 691 6 571 2 341 2 631 4 877 2 236 4 211 2 3 2 271 2 716 2 273 2 127 2 547 4 215 2 128 4 97 4 433 4 880 4 384 4 826 2 669 2 196 2 553 2 609 2 136 2 138 2 774 2 442 2 413 2 559 2 321 2 616 2 706 2 417 2 18 2 179 2 620 2 781 2 28 10 652 2 782 2 
596 2 764 4 691 6 571 2 341 2 631 4 877 2 236 4 211 2 3 2 271 2 716 2 273 2 127 2 547 4 215 2 128 4 97 4 433 4 880 4 384 4 826 2 669 2 196 2 553 2 609 2 136 2 138 2 774 2 442 2 413 2 559 2 321 2 616 2 706 2 417 2 18 2 179 2 620 2 781 2 28 10 652 2 782 2 
596 2 764 4 691 6 571 2 341 2 631 4 877 2 236 4 211 2 3 2 271 2 716 2 273 2 127 2 547 4 215 2 128 4 97 4 433 4 880 4 384 4 826 2 669 2 196 2 553 2 609 2 136 2 138 2 774 2 442 2 413 2 559 2 321 2 616 2 706 2 417 2 18 2 179 2 620 2 781 2 28 10 652 2 782 2 
596 2 764 4 691 6 571 2 341 2 631 4 877 2 236 4 211 4 3 2 271 2 716 2 273 2 127 2 547 4 215 2 128 4 97 4 433 4 880 4 384 4 826 2 669 2 196 2 553 2 609 2 136 2 138 2 774 4 442 2 413 2 559 2 321 4 616 2 706 2 417 2 18 2 179 2 620 2 781 2 28 10 652 2 782 2 
66 2 88 2 833 2 331 2 761 2 697 2 907 2 
504 2 527 2 833 2 240 2 213 2 274 2 
713 1 517 2 547 8 68 2 795 2 471 2 219 2 282 1 197 2 704 1 859 1 199 2 614 2 15 2 528 2 889 2 51 1 369 2 728 2 566 2 263 2 28 10 650 2 375 2 763 2 85 2 
764 15 571 6 875 2 816 2 271 2 211 4 547 6 308 2 128 12 215 6 97 4 578 2 883 2 771 1 349 2 136 6 640 2 774 2 558 2 413 6 559 6 321 3 18 6 756 2 367 4 895 2 205 2 148 4 591 2 28 6 782 6 
105 1 33 2 394 2 200 7 675 2 631 2 48 2 547 1 878 2 433 2 700 4 384 2 294 2 28 1 810 2 914 2 688 2 46 2 
33 4 394 2 200 6 675 4 631 2 48 2 878 2 433 2 700 4 384 2 294 2 810 4 914 2 688 2 46 2 
105 1 33 8 394 2 200 10 675 8 631 2 48 8 547 1 878 2 433 2 700 4 384 2 294 6 28 1 810 8 914 2 688 2 46 2 
33 2 394 2 200 2 675 2 631 2 878 2 433 2 700 2 384 2 810 2 914 2 688 2 46 2 
490 58 817 6 602 17 717 6 130 4 247 2 9 6 721 6 720 10 135 112 391 16 613 4 255 2 835 2 618 12 20 10 726 88 837 18 838 8 258 4 147 2 403 2 729 6 28 150 156 10 737 26 738 4 404 2 405 2 511 2 739 4 35 6 407 24 629 24 848 24 514 6 408 2 633 4 516 8 162 4 742 6 634 2 519 8 746 6 411 6 171 6 748 10 525 4 641 42 643 24 526 2 645 2 863 4 418 4 420 6 292 18 869 8 293 10 649 16 423 10 535 14 422 16 301 4 61 24 876 4 543 6 185 4 431 34 547 134 660 6 879 50 663 4 882 248 667 8 437 58 313 8 438 5 670 11 556 8 73 28 445 2 678 1 562 4 890 4 677 2 74 124 893 22 326 36 565 4 898 4 452 16 336 4 342 6 96 4 95 92 93 84 98 6 790 2 789 24 466 8 579 2 791 90 468 12 701 6 348 4 796 26 352 8 103 2 355 90 358 4 800 4 112 42 114 2 115 10 116 4 363 6 922 6 923 2 368 14 805 4 710 2 370 8 481 6 925 6 483 8 813 6 592 10 594 6 
595 2 490 2 542 2 381 2 547 22 7 2 882 24 437 2 438 2 247 2 135 10 611 2 390 2 391 2 556 2 73 16 398 2 562 2 448 2 777 2 726 10 74 2 838 2 76 2 146 2 21 2 729 2 151 2 28 22 452 2 510 2 34 4 511 2 628 4 634 2 699 2 519 2 279 2 701 2 411 2 42 2 102 2 917 4 110 2 708 2 363 2 923 2 368 2 530 2 869 2 535 2 422 2 651 2 
490 28 715 2 817 4 125 4 602 10 604 32 717 4 130 4 825 10 7 2 499 10 247 2 9 4 721 4 135 44 391 10 613 4 835 2 726 36 20 4 837 10 838 2 147 2 729 4 28 78 507 4 738 4 404 2 511 2 35 4 407 8 740 2 847 4 514 4 632 4 634 2 742 4 410 8 519 2 746 4 411 4 171 4 748 4 641 16 526 2 863 4 419 2 420 4 869 2 293 4 649 8 423 6 535 6 422 10 181 2 301 4 876 4 543 4 431 30 547 70 879 8 660 4 663 4 882 104 667 4 437 30 556 2 322 10 73 14 323 4 677 2 74 24 326 6 897 16 896 8 565 4 898 4 452 10 83 16 86 4 459 2 342 4 96 4 95 24 93 24 466 4 346 2 468 14 701 2 348 2 352 6 107 2 109 8 358 4 475 4 112 8 477 2 363 4 923 2 368 6 805 4 120 8 481 4 925 4 592 4 813 4 594 4 
490 12 431 6 602 2 547 26 660 4 7 2 882 40 313 2 437 12 438 2 247 2 135 14 670 2 440 2 391 6 556 2 73 14 255 2 835 2 726 14 74 8 20 2 837 2 893 10 838 2 326 2 565 2 403 2 729 4 898 2 28 28 452 6 405 2 511 2 408 2 633 2 162 2 742 4 634 2 519 2 579 2 466 4 701 2 411 4 348 2 352 4 748 2 645 2 363 4 923 2 368 2 869 2 293 2 649 6 422 6 535 2 423 2 813 4 592 2 
142 2 

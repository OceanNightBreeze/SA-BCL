#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 556 (83,287) 563 (22,101,169,183,360,628,766) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 556 (83,287) 563 (22,101,169,183,360,628,766) 
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V FAILED junit.framework.AssertionFailedError (345,475) 193 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 395 395 245 245 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 797 797 621 621 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 409 (693,728) (629,689) (629,689) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 409 (693,728) (629,689) (629,689) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 409 (693,728) (629,689) (629,689) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 409 (693,728) (629,689) (629,689) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 409 (693,728) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 409 (693,728) (693,728) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 409 (693,728) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 823 799 123 813 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 735 423 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 735 423 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 672 405 423 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 735 423 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd(II)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_49()Z
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
daikon.Quant:union([I[I)[I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.InvMap:InvMap()V
daikon.Quant:memberOf(D[F)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_53()Z
daikon.PptSlice0:arity()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 3291 | = null
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Prestate:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:isReverse([I[I)Z | CONDITION | 156037 | if (x) -> if (!x)
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:slice([III)[I
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.Invariant:logOn()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern([J)[J
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | CONDITION | 27362 | if (x) -> if (!x)
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfo:new_ppt()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.ModBitTracker:split(I)I
daikon.diff.RootNode:RootNode()V
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariants:Invariants()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:readChar()C
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.ModBitTracker:num_vars()I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Debug:logOn()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_50()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.Node:Node()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:size()I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:eltsEqual([II)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isArray()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 4583 | = null
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[D)Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I | RETURN | 37630 | return null
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:eltsGTE([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 18003 | if (x) -> if (!x)
daikon.Quant:eltwiseGT([I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.LimitedSizeIntSet:size()I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariant:justified()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:gt(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([D)D
daikon.PptName:isEnterPoint()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONDITION | 19149 | if (x) -> if (!x)
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.PptSlice1:arity()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_134()Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_85()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:ne(II)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gte(II)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5656 | = null
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:eq(FF)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.MathMDE:negate(I)I
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 54234 | = null
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_161()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.ModBitTracker:num_samples()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([J[J)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long; | RETURN | 14632 | return null
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3R_52()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
601 2 666 2 492 2 599 2 517 2 453 2 451 2 498 2 382 4 
585 2 38 2 553 2 748 6 410 2 537 2 548 6 148 6 222 2 208 2 551 2 
1 2 283 6 107 6 498 2 319 6 459 2 664 4 532 2 677 2 517 2 487 6 380 4 94 2 
638 2 83 2 563 2 57 2 556 2 22 2 
341 4 271 6 
71 2 
292 2 638 2 83 2 648 2 603 2 556 2 22 2 420 2 722 2 397 2 563 2 57 2 522 2 
0 13 638 6 83 6 618 4 718 2 556 10 765 6 752 3 766 2 287 4 476 2 796 4 645 4 563 6 727 2 101 4 445 4 
469 4 555 2 215 4 4 10 590 2 471 2 803 2 218 2 805 2 394 10 667 2 475 8 197 2 10 2 477 2 478 4 260 4 225 2 786 2 110 62 201 2 291 4 68 6 315 4 699 2 671 2 295 4 112 2 27 2 362 4 29 4 323 14 822 2 755 4 465 4 305 2 363 4 102 2 117 2 490 4 
2 2 146 2 504 2 71 2 348 2 24 2 274 2 736 2 364 2 739 2 
468 2 586 2 590 2 475 2 65 2 109 2 311 2 257 2 12 2 315 4 426 2 480 2 705 2 791 2 790 4 609 2 115 2 657 2 281 2 216 2 167 2 121 2 391 2 286 2 764 4 498 4 221 2 506 2 725 2 443 2 567 2 43 2 345 2 350 2 349 2 814 4 673 2 453 2 357 2 676 2 777 2 517 4 520 2 363 2 
0 19 638 12 83 12 493 4 618 6 556 18 557 6 498 4 765 6 169 2 766 4 287 6 255 2 645 6 563 12 445 6 21 2 628 8 752 8 360 4 796 6 517 4 101 4 
475 2 10 2 68 2 
345 2 176 2 541 2 730 2 782 2 267 2 596 2 377 2 641 2 776 10 381 2 185 22 314 2 715 2 
105 2 637 2 106 2 6 2 5 2 309 2 195 2 196 2 745 2 313 2 646 4 200 1 203 3 747 1 539 2 647 2 653 2 26 2 28 2 547 2 431 2 212 5 549 1 552 2 214 4 435 5 332 2 122 2 224 6 127 6 444 2 566 2 771 2 46 1 347 1 450 1 351 4 572 2 451 2 573 6 575 4 54 2 576 6 139 1 460 5 577 2 578 1 679 2 680 2 681 2 461 1 56 1 683 2 142 2 58 2 59 2 688 2 60 2 151 2 372 1 265 2 700 2 703 2 158 2 794 2 272 2 276 1 711 3 79 2 485 6 80 1 278 2 713 1 491 1 616 2 496 1 497 2 498 30 90 2 396 2 505 2 172 1 96 1 513 11 733 4 408 4 517 32 632 1 633 1 
108 2 
517 2 719 2 
400 2 163 2 517 4 
189 2 190 2 415 2 417 2 741 14 7 2 743 2 9 2 421 6 644 10 534 2 535 14 15 2 18 2 542 2 111 32 320 8 113 8 658 2 327 14 118 2 660 2 213 4 554 2 433 2 662 10 120 2 334 4 336 4 220 2 663 10 438 14 36 6 767 2 669 14 339 10 129 2 569 2 346 18 448 2 449 2 353 6 48 2 49 14 452 12 457 4 458 14 53 2 361 2 678 2 239 50 365 8 243 4 685 2 591 6 369 2 592 50 250 2 252 2 370 6 62 2 64 14 153 14 597 2 258 4 70 14 605 2 268 2 269 8 795 2 483 4 798 50 717 2 614 2 801 2 387 2 620 8 720 14 503 2 724 18 625 2 171 2 293 2 515 12 816 2 100 4 516 2 631 2 824 2 411 2 523 2 526 2 306 2 307 2 636 10 528 8 
702 1 634 2 751 2 34 2 
634 2 40 2 
716 2 475 2 193 2 734 2 634 2 639 2 247 2 
634 2 639 2 820 2 
30 2 634 2 639 2 
144 2 751 2 
634 2 639 2 
588 2 308 2 
374 2 634 2 
588 2 779 2 751 2 
617 2 751 2 75 2 
416 2 246 2 751 2 
751 2 310 2 343 2 
211 2 751 2 626 2 
588 2 610 2 
437 2 634 2 
617 2 231 2 
723 2 416 2 
337 2 310 2 
211 2 463 2 
588 2 87 2 
211 2 738 2 
447 2 310 2 
416 2 242 2 
617 2 412 2 
588 2 779 2 751 2 249 2 
588 2 779 2 619 2 751 2 249 2 
602 2 588 2 751 2 
588 2 751 2 136 2 
709 2 114 2 623 2 561 2 
331 2 475 2 453 2 193 2 446 2 
331 2 23 2 446 2 
475 2 91 2 193 2 634 2 639 2 247 2 
72 2 520 2 
475 2 193 2 247 2 150 2 
310 2 714 2 
211 2 335 2 
668 2 617 2 
416 2 501 2 
211 2 416 2 510 2 
211 2 416 2 654 2 
244 2 211 2 416 2 
37 2 211 2 416 2 
191 2 193 2 168 2 475 2 67 2 98 2 674 6 525 6 
540 2 588 2 
45 2 787 2 759 4 763 2 85 2 285 4 51 2 675 2 502 2 721 2 731 2 696 2 474 2 223 2 116 2 326 2 769 2 185 6 
413 2 751 2 
196 2 
105 2 106 6 5 2 419 2 640 2 309 2 195 2 536 2 198 2 646 4 647 2 17 2 750 2 653 2 429 2 544 2 753 2 431 2 214 4 761 2 125 2 224 4 127 6 565 2 566 2 771 2 132 4 570 2 351 4 572 2 451 2 356 2 455 2 573 2 575 4 54 2 359 2 576 2 679 2 680 2 681 2 56 2 240 2 683 2 58 2 59 2 467 2 245 2 60 2 151 2 265 2 700 6 375 2 73 2 703 2 481 2 276 2 79 2 485 6 616 2 388 2 390 2 497 2 498 22 88 2 395 2 505 2 729 2 513 4 406 2 408 6 517 22 737 2 
105 2 106 6 5 2 6 2 419 2 640 2 309 2 195 2 536 2 198 2 646 4 647 2 17 2 750 2 653 2 429 2 544 2 753 2 431 2 214 4 761 2 122 2 125 2 224 6 127 6 565 2 566 2 771 2 132 4 570 2 351 4 572 2 451 2 356 2 455 2 573 2 575 4 54 2 359 2 576 2 679 2 680 2 681 2 56 2 240 2 683 2 58 2 59 2 467 2 60 2 151 2 265 2 700 6 375 2 73 2 703 2 481 2 276 2 79 2 485 6 797 2 616 2 388 2 390 2 497 2 498 22 88 2 621 2 505 2 729 2 294 2 513 4 408 6 517 22 737 2 
488 2 
312 2 264 2 
585 2 404 2 165 2 728 2 748 2 205 4 145 2 689 2 296 4 50 2 148 2 418 2 318 2 629 2 784 2 580 2 410 2 768 2 
585 4 145 2 5 2 689 2 148 6 742 2 418 2 309 2 784 2 698 4 199 4 646 2 748 4 205 4 427 2 789 2 318 2 608 2 543 4 321 2 275 2 612 2 431 2 548 6 551 2 282 2 800 2 165 2 553 2 214 2 436 2 219 2 498 6 398 2 127 4 768 4 128 2 509 2 340 2 174 2 404 2 728 2 131 4 296 4 50 2 629 2 301 2 181 2 234 2 54 2 184 4 580 2 680 2 681 2 304 6 409 2 517 12 410 4 682 2 58 2 
585 4 145 2 5 2 689 2 148 4 742 2 418 2 309 2 784 2 698 4 199 4 646 2 748 6 205 4 427 2 789 2 318 2 608 2 543 4 321 2 275 2 612 2 431 2 548 6 282 2 800 2 165 2 553 2 214 2 436 2 219 2 498 6 38 2 398 2 127 4 768 4 128 2 509 2 340 2 174 2 404 2 728 2 131 4 296 4 50 2 629 2 301 2 181 2 234 2 54 2 184 4 580 2 680 2 681 2 304 6 409 2 517 12 410 4 682 2 58 2 
585 4 145 2 5 2 689 2 148 6 742 2 418 2 309 2 784 2 698 4 199 4 646 2 748 6 205 4 427 2 789 2 318 2 608 2 543 4 321 2 275 2 612 2 431 2 548 6 282 2 800 2 165 2 553 2 214 2 436 2 219 2 498 6 222 2 398 2 127 4 768 4 128 2 509 2 340 2 174 2 404 2 728 2 131 4 296 4 50 2 629 2 301 2 181 2 234 2 54 2 184 8 580 2 680 2 681 2 304 6 409 2 517 12 410 4 682 2 58 2 
585 4 145 2 5 2 689 2 148 6 742 2 418 2 309 2 784 2 698 4 199 8 646 2 748 8 205 4 427 2 789 2 318 2 608 2 543 4 321 2 275 2 612 2 431 2 548 8 282 2 800 2 165 2 553 2 214 2 436 2 219 2 498 6 222 2 38 2 398 2 127 4 768 4 128 2 509 2 340 2 174 2 404 2 728 2 131 4 296 4 50 2 629 2 301 2 181 2 234 2 54 2 184 8 580 2 680 2 681 2 304 10 409 2 517 12 410 4 682 2 58 2 
585 4 145 2 5 2 689 2 148 6 742 2 418 2 309 2 784 2 698 4 199 8 646 2 748 6 205 4 427 2 789 2 318 2 608 2 543 4 321 2 275 2 612 2 431 2 548 6 282 2 800 2 165 2 553 2 214 2 436 2 219 2 498 6 222 2 398 2 127 4 768 4 128 2 509 2 340 2 174 2 404 2 728 2 131 4 296 4 50 2 629 2 301 2 181 2 234 2 54 2 184 8 580 2 680 2 681 2 304 10 409 2 517 12 410 4 682 2 58 2 
105 2 585 2 282 2 106 2 553 2 165 2 616 2 689 2 148 2 742 2 436 2 38 2 398 2 698 2 128 2 508 2 404 2 728 2 748 4 131 2 205 2 427 2 296 2 703 2 50 2 789 2 318 2 629 2 181 2 234 2 321 2 184 2 517 4 409 2 612 2 410 2 548 4 
105 2 585 2 282 2 106 2 553 2 165 2 616 2 689 2 148 4 742 2 436 2 222 2 398 2 698 2 128 2 508 2 404 2 728 2 748 4 131 2 205 2 427 2 296 2 703 2 50 2 789 2 318 2 629 2 181 2 234 2 321 2 184 6 517 4 409 2 612 2 410 2 548 4 
105 2 585 2 282 2 106 2 553 2 165 2 616 2 689 2 148 4 742 2 436 2 222 2 398 2 698 2 199 4 128 2 508 2 404 2 728 2 748 4 131 2 205 2 427 2 296 2 703 2 50 2 789 2 318 2 629 2 181 2 234 2 321 2 184 6 517 4 409 2 304 4 612 2 410 2 548 4 
105 2 585 2 282 2 106 2 553 2 165 2 616 2 689 2 148 4 742 2 436 2 222 2 398 2 698 2 199 4 128 2 508 2 404 2 728 2 748 4 131 2 205 2 427 2 296 2 703 2 50 2 789 2 318 2 629 2 181 2 234 2 321 2 184 6 517 4 409 2 304 4 612 2 410 2 548 4 
282 2 585 4 553 2 165 2 689 2 148 6 742 2 436 2 222 2 398 2 698 2 199 4 128 2 404 2 728 2 748 6 131 2 205 2 427 2 296 2 50 2 789 2 318 2 629 2 181 2 234 2 543 2 321 2 184 6 517 4 409 2 304 4 612 2 410 4 548 4 
6 2 5 2 742 2 309 2 195 2 196 2 646 4 647 2 748 6 205 2 16 3 427 2 653 2 318 2 543 2 26 2 28 2 321 2 431 2 548 4 553 2 214 4 122 2 436 2 222 2 224 6 127 6 128 2 566 2 771 2 44 2 131 2 132 4 351 4 572 2 50 2 451 2 455 2 573 3 575 4 234 2 54 2 576 3 577 2 679 2 680 2 681 2 683 2 58 2 585 4 59 2 689 2 148 6 60 2 151 2 154 2 698 2 265 4 700 6 789 2 162 2 378 2 79 2 612 2 485 8 282 2 165 2 495 2 390 2 497 2 498 24 398 2 505 2 404 2 728 2 296 2 513 3 299 2 301 2 629 2 181 2 184 6 408 6 409 2 517 28 304 2 410 4 519 2 737 2 
585 4 145 2 5 2 689 2 148 6 742 2 418 2 309 2 784 2 698 4 199 8 646 2 748 6 205 4 427 2 789 2 318 2 608 2 543 4 321 2 275 2 612 2 431 2 548 6 282 2 800 2 165 2 553 2 214 2 436 2 219 2 498 6 222 2 398 2 127 4 768 4 128 2 509 2 340 2 174 2 404 2 728 2 131 4 296 4 50 2 629 2 301 2 181 2 234 2 54 2 184 8 580 2 680 2 681 2 304 10 409 2 517 12 410 4 682 2 58 2 
585 4 781 2 145 2 5 2 689 2 148 8 742 2 418 2 309 2 784 2 698 4 199 8 646 2 748 6 205 4 789 2 318 2 608 2 543 4 321 2 612 2 431 2 548 8 551 2 282 2 800 2 165 2 553 2 214 2 436 2 219 2 498 6 222 2 398 2 127 4 768 4 128 2 509 2 340 2 402 2 174 2 404 2 728 2 131 4 296 4 50 2 137 4 629 2 301 2 181 2 234 2 54 2 184 8 580 2 680 2 681 2 304 10 409 2 517 12 410 4 682 2 58 2 
414 2 398 2 612 2 
414 2 398 2 612 2 
105 2 106 2 3 2 5 2 6 2 309 2 195 2 199 2 646 4 748 4 205 2 750 2 653 2 431 2 548 4 553 2 214 4 122 2 222 2 224 6 127 6 566 2 128 2 771 2 131 2 351 4 572 2 50 2 451 2 455 2 575 4 235 2 54 2 774 2 236 2 679 2 680 2 681 2 778 2 683 2 58 2 59 2 585 2 148 4 60 2 151 2 698 2 265 2 700 2 703 2 79 2 485 2 612 2 615 2 616 2 390 2 497 2 498 14 500 2 505 2 398 2 404 2 728 2 513 2 296 2 184 6 408 2 517 18 304 2 409 2 410 2 737 2 
265 2 266 2 651 2 454 2 355 2 691 2 498 2 559 2 54 2 154 2 580 2 399 2 92 2 517 4 140 2 264 2 659 2 
105 2 106 2 3 2 5 2 6 2 309 2 195 2 199 2 646 4 748 4 205 2 750 2 653 2 431 2 548 4 553 2 214 4 122 2 222 2 224 6 127 6 566 2 128 2 771 2 131 2 351 4 572 2 50 2 451 2 455 2 575 4 235 2 54 2 774 2 236 2 679 2 680 2 681 2 778 4 683 2 58 2 59 2 585 2 148 4 60 2 693 2 151 2 698 2 265 2 700 2 703 2 79 2 485 2 612 2 615 2 616 2 390 2 497 2 498 14 500 2 398 2 505 2 507 2 404 2 728 2 513 4 296 2 184 6 408 2 517 18 304 2 409 2 410 2 737 2 
105 2 106 2 3 2 5 2 6 2 309 2 195 2 199 2 646 4 748 4 205 2 750 2 653 2 431 2 548 4 553 2 214 4 122 2 222 2 224 6 127 6 566 2 128 2 771 2 131 2 351 4 572 2 50 2 451 2 455 2 575 4 235 2 54 2 774 2 236 2 679 2 680 2 681 2 778 2 683 2 58 2 59 2 585 2 148 4 60 2 151 2 698 2 265 2 700 2 703 2 79 2 485 2 612 2 615 2 616 2 390 2 497 2 498 14 500 2 505 2 398 2 404 2 728 2 513 2 296 2 184 6 408 2 517 18 304 2 409 2 410 2 737 2 
0 6 638 2 6 1 5 2 309 2 195 2 643 2 645 2 646 4 647 2 649 2 20 2 19 2 653 2 210 2 322 2 656 2 430 6 754 2 431 2 214 4 122 1 123 2 556 4 439 4 766 2 224 3 127 6 563 2 562 2 564 2 566 2 445 2 132 4 351 2 451 2 455 2 573 2 574 2 575 2 54 2 576 2 680 2 681 2 462 1 582 2 780 2 584 2 683 2 58 2 466 2 59 2 60 2 151 2 251 1 695 2 371 2 265 2 700 6 376 2 796 2 79 2 485 8 277 2 383 2 799 2 83 2 802 2 390 2 618 4 497 2 498 20 806 2 809 2 287 2 810 2 622 2 95 2 813 2 513 2 178 2 818 2 408 6 823 2 517 26 825 2 527 2 188 2 
367 2 661 2 284 2 498 2 624 2 811 2 511 2 647 2 749 2 700 2 132 2 788 2 513 3 73 6 573 3 710 3 138 2 576 3 732 2 408 2 485 2 517 2 518 2 32 1 103 4 
367 2 661 2 284 2 498 2 624 2 811 2 511 2 647 2 749 2 700 2 132 2 788 2 513 2 73 6 573 2 710 2 138 2 576 2 732 2 408 2 485 2 517 2 518 2 103 4 
367 2 661 2 284 2 498 2 624 2 811 2 511 2 647 2 749 2 700 2 132 2 788 2 513 2 73 6 573 2 710 2 138 2 576 2 732 2 408 2 485 2 517 2 518 2 103 4 
0 5 166 2 638 2 83 2 687 2 333 2 783 4 217 3 86 2 556 4 498 4 61 2 441 4 287 2 745 2 624 2 289 2 645 2 93 2 66 2 726 4 563 2 313 2 227 4 173 6 445 2 600 4 647 2 206 4 513 3 514 3 573 3 233 2 752 1 183 2 325 2 796 2 485 2 517 10 583 3 329 2 
0 4 638 2 687 2 783 4 61 2 745 2 645 2 66 2 313 2 600 4 647 2 206 4 752 2 161 2 796 2 325 2 485 2 329 2 166 2 83 2 493 2 333 2 217 2 86 2 556 4 498 4 441 4 287 2 624 2 289 2 93 2 563 2 726 4 173 6 227 4 445 2 513 2 514 2 573 2 233 2 183 2 517 10 583 2 
0 4 638 2 687 2 783 4 61 2 745 2 645 2 66 2 313 2 600 4 647 2 206 4 752 2 161 2 796 2 325 2 485 2 329 2 166 2 83 2 493 2 333 2 217 2 86 2 556 4 498 4 441 4 287 2 624 2 289 2 93 2 563 2 726 4 173 6 227 4 445 2 513 2 514 2 573 2 233 2 183 2 517 10 583 2 
0 4 638 2 687 2 783 4 61 2 745 2 645 2 66 2 313 2 600 4 647 2 206 4 752 2 161 2 796 2 325 2 485 2 329 2 166 2 83 2 493 2 333 2 217 2 86 2 556 4 498 4 441 4 287 2 624 2 289 2 93 2 563 2 726 4 173 6 227 4 445 2 513 2 514 2 573 2 233 2 183 2 517 10 583 2 
0 4 638 2 687 2 783 4 61 2 745 2 645 2 66 2 313 2 600 4 647 2 206 4 752 4 161 4 796 2 325 2 485 2 329 2 166 2 83 2 493 4 333 2 217 2 86 2 556 4 498 4 441 4 287 2 624 2 289 2 93 2 563 2 726 4 173 6 227 4 445 2 513 2 514 2 573 2 233 2 183 2 517 10 583 2 
530 2 587 2 428 2 76 2 130 2 228 2 
155 2 55 2 697 2 494 2 368 2 356 2 130 2 
686 2 84 2 149 2 498 8 8 2 440 2 288 1 338 2 746 2 201 1 263 2 204 2 344 2 373 2 815 2 817 2 159 2 182 2 27 1 302 2 273 2 324 1 484 2 517 10 164 1 58 2 
178 2 
432 2 82 4 206 2 470 2 627 7 704 2 783 2 472 2 498 1 456 2 253 2 517 1 521 2 227 2 31 2 489 2 143 1 424 2 
432 2 82 4 206 2 470 2 627 6 704 4 783 2 472 4 456 2 253 2 521 2 227 2 31 2 489 4 424 2 
432 8 82 4 206 2 470 2 627 10 704 8 783 2 472 8 498 1 456 2 253 2 517 1 521 2 227 2 31 2 489 8 143 1 424 6 
82 2 206 2 470 2 627 2 704 2 783 2 472 2 456 2 253 2 521 2 227 2 31 2 489 2 
529 4 6 26 192 4 531 24 744 4 422 10 533 16 642 4 11 2 423 2 13 16 14 6 425 4 207 4 317 4 652 1 655 2 209 4 545 2 546 4 756 8 757 10 35 8 550 4 119 4 330 4 760 2 434 4 122 28 124 2 560 4 39 4 224 106 670 4 42 32 342 4 568 2 229 10 47 4 351 44 571 2 352 24 672 2 773 4 134 8 135 14 358 2 575 36 775 6 579 2 464 2 141 4 683 2 241 4 59 6 684 8 147 4 692 4 694 4 593 16 594 4 152 6 473 4 63 4 254 4 259 4 262 4 69 4 479 2 706 6 707 8 157 4 270 2 74 8 793 24 607 4 792 4 77 14 78 2 611 6 79 6 712 4 81 4 279 11 385 16 389 4 804 2 498 74 499 32 89 2 807 10 393 4 170 2 812 4 290 4 403 14 512 4 405 2 175 2 179 8 298 4 300 4 180 2 630 10 303 8 517 82 735 2 524 2 186 2 187 4 
59 2 6 12 147 2 192 4 690 2 531 8 152 4 594 2 744 2 63 4 422 6 254 4 642 4 423 2 13 14 425 2 14 2 207 2 317 4 606 2 707 8 792 2 77 4 611 2 79 2 757 2 279 2 758 2 328 2 330 4 760 2 122 12 498 30 558 2 499 6 807 6 442 4 224 44 170 2 290 4 770 2 568 2 403 4 175 2 405 2 772 2 229 6 99 2 47 2 571 2 351 14 672 2 354 4 230 2 358 2 575 14 407 2 237 12 517 32 464 2 735 2 683 2 
529 4 6 13 192 4 531 28 744 2 422 8 642 4 423 2 202 4 13 4 425 4 14 8 316 2 207 2 317 4 545 2 546 4 756 4 757 8 758 2 119 4 330 2 760 2 434 4 122 13 124 2 560 4 39 4 442 1 224 65 670 4 568 2 229 8 47 2 352 8 351 30 571 2 672 2 354 1 133 4 134 8 773 4 230 2 135 12 575 26 775 2 579 2 237 2 464 2 141 4 683 4 241 4 59 8 147 4 692 4 694 4 593 4 594 4 152 6 473 4 63 4 254 4 259 4 262 4 69 4 479 2 706 1 707 3 606 2 157 4 793 8 74 4 607 4 792 4 77 4 611 4 79 8 712 4 613 4 81 4 279 8 498 60 499 24 807 8 170 2 812 4 290 4 403 4 512 4 405 2 298 4 517 68 186 2 187 4 
104 2 740 2 6 3 192 2 531 6 194 2 744 3 422 4 642 2 423 2 13 39 538 2 425 2 14 2 650 2 317 2 25 2 757 2 760 2 762 2 122 3 665 4 224 47 126 2 226 2 41 2 568 2 772 2 229 4 571 2 351 20 672 2 52 2 232 2 358 2 575 20 581 2 464 2 238 2 683 2 59 2 366 4 589 4 147 2 248 2 152 6 594 2 595 2 63 2 254 2 256 2 598 2 785 2 261 2 604 2 701 2 156 2 708 4 792 2 482 2 160 2 77 4 379 2 78 2 611 2 79 2 486 2 279 2 384 2 280 2 386 2 498 46 804 4 807 4 808 2 392 2 401 2 290 2 403 4 175 2 405 2 97 2 177 2 297 2 819 6 821 2 630 2 407 2 517 48 735 2 635 2 186 1 
33 2 

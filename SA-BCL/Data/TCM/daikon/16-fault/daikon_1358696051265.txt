#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 411 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 79 337 466 38 37 283 84 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 97 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 97 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 97 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 97 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 97 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 122 336 354 299 153 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 213 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V FAILED junit.framework.AssertionFailedError 14 388 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 248 132 305 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 248 132 305 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 248 132 305 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 248 132 305 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:modulus([I)[I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3R_68()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:backup(I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type; | RETURN | 45164 | return null
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:sign(I)I
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | OPERATOR | 36110 | * -> +
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_57()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern:numIntArrays()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:memberOf(F[F)Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_50()Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3_13()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:eltsEqual([II)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_96()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern:intern([I)[I
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_133()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:eq(JJ)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_60()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3_15()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:eq(FF)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:eltwiseGTE([I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.ProglangType:dimensions()I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltsEqualIndex([I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:union([I[I)[I
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:readChar()C
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_118()Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_10()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Intern:intern([J)[J
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_2_15(I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_148()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:slice([III)[I
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3_14()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:gt(II)Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:jj_3R_121()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:concat([I[I)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_54()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:eltwiseEqual([I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3_5()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_49()Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:max([I)I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:gcd(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:setEqual([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_48()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:sameLength([I[I)Z
daikon.Quant:memberOf(D[F)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_3R_117()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3_4()Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.MathMDE:pow(II)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eq(DD)Z
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_3_16()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Assert:assertTrue(Z)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:eltsLT([II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:eq(II)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:lt(II)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | STATEMENT | 1433 | stmt -> ;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:lexGT([I[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:memberOf(S[S)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_2_3(I)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I | CONSTANT | 21177 | 2 -> 1
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
78 2 219 2 249 2 323 4 418 2 98 2 421 2 154 2 501 2 
497 6 453 2 390 2 295 2 500 6 368 2 157 2 231 2 161 2 375 6 276 2 
207 6 249 2 306 6 418 2 378 2 187 6 366 2 81 4 367 2 36 2 144 6 72 2 244 4 
448 16 0 8 450 29 209 16 237 6 418 6 136 12 325 8 3 8 96 4 424 2 177 16 241 10 491 2 105 8 108 10 107 10 152 26 343 4 112 2 249 6 189 2 118 2 13 2 18 10 318 4 442 4 477 2 127 6 358 10 
329 6 175 4 
70 2 
322 2 131 2 391 2 268 2 269 2 460 2 218 2 145 2 147 2 406 2 468 2 80 2 282 2 154 2 285 4 289 2 293 2 22 2 417 2 166 4 169 2 418 4 170 2 173 2 422 4 95 2 31 2 240 2 431 2 429 2 179 2 249 4 435 2 46 2 438 2 115 2 189 2 313 2 51 2 316 2 384 4 54 2 504 2 321 2 
90 6 448 32 206 2 0 6 450 54 209 32 451 2 454 4 237 4 418 4 455 8 136 22 326 4 28 4 241 16 177 32 221 6 491 2 104 6 105 18 302 4 107 16 108 6 152 48 343 2 249 4 304 2 186 2 311 4 473 4 18 16 261 6 478 2 294 2 233 4 127 4 358 16 129 6 203 6 
363 2 95 2 507 2 
465 2 45 2 438 2 407 2 382 10 215 2 121 2 34 2 399 2 272 2 196 2 197 2 21 2 275 22 
448 2 450 6 449 2 209 2 136 2 480 2 138 2 241 2 177 2 69 2 402 2 105 2 373 2 494 2 107 2 108 4 152 4 343 2 18 2 357 2 127 2 358 2 23 2 
448 8 450 16 209 8 26 2 136 4 326 4 311 4 177 8 241 4 221 6 18 4 442 2 444 2 358 4 107 4 152 12 203 6 
359 2 479 2 363 6 91 4 56 2 394 4 395 2 95 8 63 4 460 2 6 2 141 2 370 2 490 62 339 4 273 4 374 2 182 2 406 4 376 2 245 4 280 4 250 2 252 4 116 2 16 2 15 2 256 2 285 4 314 4 351 2 317 4 123 14 414 2 475 2 260 10 505 4 319 10 20 2 507 2 
419 2 70 2 430 2 180 2 184 2 377 2 469 2 254 2 310 2 232 2 
462 2 126 2 411 2 155 2 
249 2 210 2 
204 2 249 4 506 2 
487 2 
130 4 134 4 265 2 267 8 135 118 266 4 137 2 270 2 396 10 401 2 143 38 403 4 404 22 7 38 9 4 405 2 149 2 274 2 277 4 151 2 281 44 409 6 410 2 283 2 284 16 159 2 19 38 291 4 292 2 415 4 416 38 164 24 165 4 167 10 168 4 25 4 24 2 27 4 174 10 296 22 29 4 30 4 33 2 297 2 423 2 300 4 35 38 301 38 427 2 38 2 428 4 37 2 40 4 43 2 42 2 303 2 185 2 47 4 48 4 188 2 49 14 50 16 309 4 190 26 440 4 312 4 52 4 194 2 53 4 441 36 443 8 445 26 202 38 205 2 57 38 58 2 59 4 328 2 330 132 459 2 457 4 211 4 212 2 214 16 64 4 217 6 222 118 461 4 335 4 337 2 338 2 73 2 340 20 341 2 76 4 74 2 344 4 466 2 224 4 467 22 225 2 79 2 347 38 348 14 227 2 350 4 228 4 229 4 82 4 84 2 85 2 86 4 352 14 355 2 356 4 361 4 362 2 235 20 236 2 481 6 94 8 482 2 484 4 488 20 100 4 372 4 492 2 103 18 106 8 243 118 495 12 246 2 247 2 110 4 111 4 498 38 113 2 251 4 114 4 253 26 380 2 499 2 258 4 120 2 383 4 385 16 259 2 124 4 386 10 387 2 125 2 128 38 
345 2 324 2 463 2 119 1 
11 2 463 2 
67 2 315 2 364 2 318 2 463 2 95 2 234 2 
333 2 463 2 234 2 
463 2 242 2 234 2 
345 2 290 2 483 2 
463 2 234 2 
101 2 483 2 
463 2 342 2 
345 2 41 2 483 2 
216 2 345 2 456 2 
271 2 345 2 88 2 
345 2 44 2 257 2 
345 2 493 2 471 2 
298 2 483 2 
87 2 463 2 
456 2 255 2 
271 2 392 2 
452 2 257 2 
171 2 471 2 
199 2 483 2 
163 2 471 2 
381 2 257 2 
271 2 71 2 
456 2 10 2 
345 2 93 2 41 2 483 2 
345 2 278 2 93 2 41 2 483 2 
264 2 345 2 483 2 
345 2 307 2 483 2 
1 2 365 2 379 2 397 2 
364 2 95 2 446 2 286 2 
315 2 364 2 95 2 201 2 446 2 286 2 
447 2 364 2 318 2 463 2 95 2 234 2 
131 2 178 2 
263 2 364 2 318 2 95 2 
308 2 257 2 
117 2 471 2 
437 2 456 2 
271 2 226 2 
271 2 288 2 471 2 
271 2 262 2 471 2 
271 2 485 2 471 2 
271 2 474 2 471 2 
364 2 62 6 95 2 176 6 102 2 470 2 158 2 198 2 
146 2 483 2 
464 4 223 2 389 2 346 2 436 2 393 2 2 2 420 2 193 2 239 2 142 2 413 4 220 2 162 2 77 2 275 6 109 2 496 2 
345 2 489 2 
12 2 
97 2 462 2 126 2 155 2 
97 2 462 2 126 2 155 2 
287 2 230 2 65 2 
287 2 230 2 65 2 
97 2 462 2 126 2 155 2 
97 2 462 2 126 2 155 2 
97 2 462 2 126 2 155 2 
133 2 92 2 139 2 140 2 299 2 68 2 336 2 181 2 150 2 249 4 469 1 310 1 153 2 472 2 503 2 122 2 354 2 
83 2 89 2 60 2 55 2 320 2 213 2 
66 2 331 2 458 2 320 2 433 2 192 2 502 2 
360 2 388 2 418 4 395 1 61 1 32 2 398 2 400 1 369 2 371 2 75 2 183 2 249 4 279 1 250 1 14 2 191 2 476 2 
448 6 208 2 450 17 0 4 209 6 391 2 172 2 418 6 237 2 455 2 5 2 177 6 241 6 486 2 221 4 104 4 39 2 107 6 152 12 434 2 249 6 311 2 54 2 18 6 353 2 233 2 358 6 
249 1 418 1 238 2 439 2 408 7 327 2 4 2 349 2 412 2 425 4 332 2 426 1 334 2 195 2 99 2 160 2 148 2 200 2 
238 2 439 2 408 6 327 2 4 4 349 2 412 2 425 4 332 4 334 2 195 2 99 4 160 2 148 2 200 2 
249 1 418 1 238 2 439 2 408 10 327 2 4 8 349 8 412 2 425 4 332 8 426 1 334 6 195 2 99 8 160 2 148 2 200 2 
238 2 439 2 408 2 327 2 4 2 412 2 425 2 332 2 195 2 99 2 160 2 148 2 200 2 
132 2 8 2 17 1 418 2 432 1 248 2 305 2 249 2 
248 2 249 2 132 2 305 2 418 2 8 2 
248 2 249 2 132 2 305 2 418 2 8 2 
248 2 249 2 132 2 305 2 418 2 8 2 
156 2 

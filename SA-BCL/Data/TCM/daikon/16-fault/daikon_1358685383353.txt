#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 560 144 599 633 862 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 89 109 207 1138 528 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 823 57 315 747 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 823 768 57 315 747 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 823 823 823 823 57 315 747 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:eq(JJ)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap:size()I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3_35()Z
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method; | ASSIGN | 38039 | = null
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:lexEqual([I[I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_10()Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String; | RETURN | 23802 | return null
utilMDE.MathMDE:modulus([I)[I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eq(FF)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_110()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_67()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3_1()Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3_25()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.ValueTuple:size()I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_108()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:negate(I)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_77()Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_57()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_3_20()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3_3()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:noDups([I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.Invariant:logOn()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:lt(II)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptSlice1:num_samples()I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.Invariant:logDetail()Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:setEqual([I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3529 | = null
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice1:arity()I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3_36()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:jj_3R_102()Z
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern:intern([D)[D
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_126()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:jj_3R_62()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:pow(II)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_69()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_3R_101()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ProglangType:isScalar()Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Invariants:Invariants()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_105()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_123()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eltsLT([II)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_161()Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE:element_range([I)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_76()Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3R_49()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:eq(II)Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_2_21(I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_3_15()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_2_12(I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Debug:logDetail()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Ppt:Ppt()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:sum([D)D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_104()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:getEndColumn()I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:memberOf(J[J)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_17()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_99()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoAux:hashCode()I
jtb.JavaParser:jj_ntk()I
daikon.Quant:setDiff([I[I)[I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:ne(II)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaCharStream:getEndLine()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[I)I
daikon.PptSlice0:arity()I
daikon.ProglangType:dimensions()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3_30()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:jj_2_14(I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | RETURN | 28404 | return null
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_3_12()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:getConfidence()D
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([J)[J
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_50()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:hashCode()I
daikon.diff.InvMap:InvMap()V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3_29()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 9379 | stmt -> ;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_117()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:intersection([I[I)[I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_52()Z
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3R_107()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_28()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_18()Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_87()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_115()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3R_120()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3_27()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z | ASSIGN | 9658 | = null
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
549 2 1085 2 386 2 741 2 271 2 305 4 49 2 123 2 9 2 
1104 2 914 6 984 2 916 2 735 6 402 2 404 2 336 6 132 2 822 2 952 2 
56 2 1041 2 123 2 657 2 674 6 957 2 1112 4 888 6 386 2 166 6 682 4 927 6 16 2 
242 10 1035 16 431 2 253 8 38 16 7 2 462 12 1109 10 40 4 180 8 609 4 259 8 719 2 502 10 614 10 874 2 191 2 1015 8 417 4 585 10 882 6 123 6 621 16 1128 2 516 4 481 2 917 6 386 6 671 29 893 26 
640 4 174 6 
75 2 
710 2 430 2 1005 2 951 2 1012 2 294 2 295 2 728 2 296 4 231 2 1019 2 233 2 23 4 1092 2 454 2 665 4 386 4 963 2 666 4 520 2 388 2 1032 2 534 2 602 2 975 2 765 2 549 2 548 2 480 2 123 4 985 2 854 2 1128 2 780 2 627 2 129 2 64 2 199 2 67 2 704 2 68 2 492 2 929 2 793 2 
104 2 242 6 825 4 794 6 396 4 1035 32 35 2 38 32 1107 6 318 4 1109 16 462 22 83 8 259 18 719 2 614 16 502 16 579 2 216 2 217 4 471 4 114 6 653 4 1015 6 513 6 585 16 417 2 121 2 882 4 123 4 853 6 883 2 621 32 917 4 386 4 1028 4 489 6 893 48 671 54 
383 2 295 2 1060 2 
327 2 672 2 728 2 550 2 418 2 124 2 715 22 1110 2 356 2 835 2 163 2 101 2 1030 10 273 2 
242 4 73 2 1035 2 901 2 38 2 1109 2 462 2 259 2 614 2 502 2 507 2 229 2 585 2 417 2 621 2 623 2 917 2 1133 2 667 2 27 2 631 2 671 6 893 4 
1067 2 653 4 1035 8 585 4 22 2 853 6 1107 6 38 8 621 8 318 4 462 4 40 2 1109 4 614 4 502 4 893 12 671 16 
529 2 345 2 898 2 434 62 537 4 1108 4 257 4 838 4 977 2 760 2 436 2 761 2 873 4 1119 10 263 2 727 4 295 8 730 2 1121 2 1087 2 23 4 697 4 268 2 1060 2 778 4 96 2 383 6 128 2 452 4 628 2 420 14 487 10 488 4 520 4 925 2 820 2 339 2 68 2 493 4 424 2 
1069 2 1036 2 75 2 943 2 805 2 763 2 18 2 618 2 164 2 66 2 
1000 2 137 2 561 1 562 2 564 2 140 2 864 1 143 2 867 2 9 2 146 2 286 2 437 3 438 16 577 3 872 3 15 1 722 2 151 3 1010 2 726 2 725 1 877 2 584 4 1016 2 881 1 297 2 299 2 588 2 448 3 301 4 1024 2 162 32 170 2 1031 2 749 4 1033 1 894 16 458 2 31 6 896 2 900 2 34 2 1040 1 899 2 601 2 313 2 37 2 756 2 39 1 604 6 41 1 906 2 903 3 904 2 464 1 42 2 320 2 319 2 608 2 323 8 467 2 1050 2 325 2 470 4 767 2 330 5 478 2 620 2 622 6 625 2 1062 2 918 2 781 2 484 2 920 4 335 2 783 2 62 1 922 2 200 2 788 1 790 2 636 2 71 3 74 6 206 4 347 16 497 2 1072 2 352 2 1073 2 354 2 945 2 212 24 1076 2 86 8 800 2 804 4 504 2 87 2 364 2 1079 3 218 2 225 2 1082 2 367 2 93 2 1088 2 659 2 235 3 386 32 519 3 1099 16 391 6 394 2 824 2 532 2 533 2 1106 32 829 2 252 2 830 1 536 2 111 2 833 2 834 2 678 12 840 2 1115 2 260 1 979 4 844 1 262 24 848 2 412 2 415 2 123 34 856 3 1127 1 989 2 557 2 1134 2 859 2 707 2 422 3 709 2 
123 2 797 2 
72 2 843 2 123 4 
482 2 
279 2 565 2 280 2 862 2 863 2 284 4 569 2 868 2 576 4 578 2 13 8 870 48 875 2 17 2 581 2 293 2 292 2 583 2 879 48 19 2 21 2 587 2 885 16 303 2 886 2 304 4 597 2 306 2 28 2 892 4 599 2 308 2 311 2 897 48 36 2 603 4 907 2 43 2 607 2 45 2 47 2 48 2 616 2 52 10 913 4 334 2 632 2 633 2 634 2 926 2 341 2 69 2 638 48 343 4 641 2 932 2 642 4 937 2 935 24 645 2 938 2 348 2 349 2 353 2 942 2 944 2 647 48 358 10 359 2 360 2 950 28 651 8 652 2 90 146 366 4 654 2 370 2 656 48 372 2 956 8 94 2 660 2 661 36 375 2 958 4 959 2 379 2 382 2 385 2 384 2 960 2 961 2 99 6 387 2 389 44 392 2 393 2 103 2 675 2 105 2 974 2 403 2 405 2 406 36 679 2 408 2 112 2 978 2 113 2 411 14 688 8 687 2 982 8 116 8 983 4 118 2 690 4 691 2 986 2 125 2 696 2 699 2 419 2 992 2 991 26 701 2 993 4 995 2 705 2 998 2 997 16 134 4 426 20 136 24 711 2 712 2 429 2 139 2 714 26 1002 2 433 10 144 2 716 4 148 4 149 24 441 2 724 2 153 2 154 2 729 2 157 6 158 8 443 4 732 26 1020 2 734 48 1021 46 1022 2 161 2 450 2 1025 2 1026 2 740 4 165 2 1027 2 168 2 169 2 1029 2 456 2 744 2 746 2 172 2 751 6 173 2 753 2 1038 2 176 2 1043 146 177 4 461 4 178 14 755 2 179 2 182 22 1045 4 1047 2 184 2 183 4 468 48 1051 2 186 2 1053 2 189 2 1054 2 1055 4 472 6 474 4 771 2 769 2 475 4 193 4 772 2 477 48 479 2 775 2 195 2 196 4 776 48 777 48 483 36 198 2 485 2 1064 2 785 2 1065 2 787 2 490 2 789 2 792 146 205 2 494 8 1070 2 208 2 795 2 796 2 499 2 799 48 501 16 801 48 806 8 1080 2 808 4 1081 4 1083 2 810 2 228 2 811 2 230 2 812 2 1086 2 515 4 1089 6 1090 2 816 2 517 4 236 4 819 6 237 2 240 4 1097 20 1100 2 523 2 524 4 527 8 245 216 530 2 535 4 832 2 541 2 544 2 1111 22 258 2 841 2 842 2 1117 2 1118 8 1120 2 845 2 847 2 851 2 553 28 554 2 852 2 266 4 1126 4 1130 2 1131 2 270 2 1135 2 559 8 272 2 560 18 274 4 
70 2 551 2 670 1 400 2 
551 2 531 2 
295 2 310 2 551 2 970 2 1017 2 928 2 516 2 
551 2 361 2 928 2 
551 2 928 2 890 2 
368 2 400 2 737 2 
551 2 928 2 
737 2 905 2 
551 2 736 2 
1129 2 400 2 737 2 
54 2 547 2 400 2 
510 2 754 2 400 2 
30 2 203 2 400 2 
328 2 743 2 400 2 
282 2 737 2 
551 2 133 2 
432 2 547 2 
510 2 615 2 
908 2 203 2 
328 2 498 2 
414 2 737 2 
1068 2 328 2 
155 2 203 2 
510 2 44 2 
539 2 547 2 
97 2 1129 2 400 2 737 2 
97 2 1014 2 1129 2 400 2 737 2 
1096 2 400 2 737 2 
400 2 737 2 463 2 
643 2 281 2 798 2 486 2 
295 2 310 2 167 2 5 2 
295 2 310 2 518 2 167 2 1017 2 5 2 
295 2 310 2 551 2 733 2 928 2 516 2 
454 2 307 2 
1056 2 295 2 310 2 516 2 
669 2 203 2 
328 2 119 2 
508 2 547 2 
510 2 32 2 
510 2 328 2 909 2 
510 2 328 2 910 2 
510 2 328 2 63 2 
510 2 328 2 683 2 
310 2 827 2 865 6 147 6 980 2 295 2 300 2 25 2 
110 2 737 2 
752 2 773 2 445 4 283 2 715 6 446 2 757 2 941 2 79 4 698 2 197 2 594 2 130 2 451 2 630 2 14 2 1066 2 686 2 
455 2 400 2 
829 2 
140 2 864 2 9 2 438 6 291 2 726 2 877 2 584 4 162 6 170 2 749 2 598 2 31 2 899 2 34 2 313 2 37 2 604 2 904 2 42 2 467 6 470 4 325 4 1052 2 622 6 1062 2 781 2 920 4 484 2 335 2 783 2 62 2 922 2 200 2 790 2 636 2 206 2 76 2 344 2 1072 2 211 4 1073 2 945 2 800 2 86 2 804 4 219 2 225 2 511 2 373 2 380 2 386 26 522 4 1101 2 391 4 250 2 533 2 1106 4 252 2 107 2 676 2 833 2 678 8 840 2 261 2 979 2 848 2 120 2 123 26 700 2 1134 2 859 2 707 2 709 2 
140 2 864 2 9 2 718 2 438 6 291 2 726 2 877 2 584 4 297 2 162 6 170 2 748 2 749 2 31 2 899 2 34 2 313 2 37 2 604 2 904 2 42 2 467 6 1050 2 470 4 325 4 1052 2 53 2 622 6 1062 2 781 2 920 4 484 2 335 2 783 2 62 2 922 2 200 2 790 2 636 2 206 2 76 2 344 2 1072 2 211 4 1073 2 945 2 800 2 86 2 804 4 219 2 225 2 511 2 373 2 380 2 386 26 522 4 391 6 533 2 1106 4 252 2 107 2 676 2 111 2 833 2 678 8 840 2 261 2 979 2 848 2 120 2 123 26 700 2 1134 2 859 2 707 2 709 2 
234 2 
717 2 629 2 
1001 2 1072 2 350 2 210 2 81 10 945 2 1075 8 946 8 435 2 362 2 363 2 440 2 871 2 152 2 1013 4 92 2 584 2 514 4 815 2 735 6 449 2 381 4 818 2 386 6 742 2 239 2 889 2 1104 4 246 2 316 2 254 2 108 2 404 2 680 2 840 2 185 2 1116 2 470 2 409 2 326 2 410 2 619 2 332 2 914 6 984 4 123 12 622 4 624 2 781 2 921 2 335 2 994 4 336 6 337 2 996 4 859 2 132 2 276 2 709 2 428 4 
1001 2 1072 2 350 2 210 2 81 10 945 2 1075 8 946 8 435 2 362 2 363 2 440 2 871 2 649 2 152 2 952 2 1013 4 584 2 514 4 815 2 735 8 449 2 381 4 818 2 386 6 742 2 239 2 889 2 1104 4 246 2 254 2 108 2 404 2 1114 4 680 2 840 2 185 2 1116 2 470 2 409 2 326 2 410 2 619 2 332 2 774 2 914 8 984 4 123 12 622 4 624 2 781 2 921 2 335 2 994 4 336 6 337 2 996 4 859 2 132 2 276 2 709 2 428 4 
1104 2 514 2 984 2 914 2 815 2 254 2 108 2 624 2 435 2 921 2 994 4 336 2 363 2 871 2 409 2 276 2 410 2 428 4 
1001 2 1072 2 350 2 210 2 81 6 945 2 1075 4 946 4 435 2 362 2 363 2 440 2 871 2 152 2 952 2 1013 4 92 2 584 2 514 4 815 2 735 6 449 2 381 4 818 2 386 6 742 2 239 2 889 2 1104 4 246 2 316 2 254 2 108 2 680 2 840 2 185 2 1116 2 470 2 409 2 326 2 410 2 619 2 332 2 914 6 984 4 123 12 622 4 624 2 781 2 921 2 335 2 994 4 336 4 337 2 996 4 859 2 132 2 276 2 709 2 428 4 
1001 2 1072 2 350 2 210 2 81 6 945 2 1075 4 946 4 435 2 362 2 363 2 440 2 871 2 152 2 1013 4 92 2 584 2 514 4 815 2 735 6 449 2 381 4 818 2 386 6 742 2 239 2 822 2 889 2 1104 4 246 2 316 2 254 2 108 2 680 2 840 2 185 2 1116 2 470 2 409 2 326 2 410 2 619 2 332 2 914 4 984 4 123 12 622 4 624 2 781 2 921 2 335 2 994 4 336 6 337 2 996 4 859 2 132 2 276 2 709 2 428 4 
1001 2 1072 2 350 2 210 2 81 6 945 2 1075 4 946 8 435 2 362 2 363 2 440 2 871 2 152 2 1013 4 92 2 584 2 514 4 815 2 735 6 449 2 381 4 818 2 386 6 742 2 239 2 889 2 1104 4 246 2 316 2 254 2 108 2 404 2 680 2 840 2 185 2 1116 2 470 2 409 2 326 2 410 2 619 2 332 2 914 6 984 4 123 12 622 4 624 2 781 2 921 2 335 2 994 4 336 6 337 2 996 4 859 2 132 2 276 2 709 2 428 4 
1001 2 1072 2 350 2 210 2 81 10 945 2 1075 8 946 8 435 2 362 2 363 2 440 2 871 2 152 2 1013 4 92 2 584 2 514 4 815 2 735 8 449 2 381 4 818 2 386 6 742 2 239 2 822 2 889 2 1104 4 246 2 316 2 254 2 108 2 404 2 680 2 840 2 185 2 1116 2 470 2 409 2 326 2 410 2 619 2 332 2 914 6 984 4 123 12 622 4 624 2 781 2 921 2 335 2 994 4 336 8 337 2 996 4 859 2 132 2 276 2 709 2 428 4 
1001 2 1072 2 350 2 210 2 81 10 945 2 1075 8 946 8 435 2 362 2 363 2 440 2 871 2 152 2 1013 4 92 2 584 2 514 4 815 2 735 6 449 2 381 4 818 2 386 6 742 2 239 2 889 2 1104 4 246 2 316 2 254 2 108 2 404 2 680 2 840 2 185 2 1116 2 470 2 409 2 326 2 410 2 619 2 332 2 914 6 984 4 123 12 622 4 624 2 781 2 921 2 335 2 994 4 336 6 337 2 996 4 859 2 132 2 276 2 709 2 428 4 
277 2 2 2 1 2 278 2 6 2 9 2 575 2 12 2 871 2 291 2 876 6 878 2 584 4 884 2 24 2 590 1 596 6 889 4 31 2 899 2 316 2 604 2 904 2 42 12 321 10 612 2 51 6 326 2 55 6 619 2 332 2 914 4 333 6 622 6 624 2 626 2 920 4 921 2 335 2 922 2 336 8 337 2 924 8 338 2 72 6 350 2 646 2 80 2 81 2 945 2 84 2 946 2 86 2 948 1 362 2 363 2 650 1 91 7 954 2 373 4 374 2 95 1 376 4 378 2 381 8 386 24 964 2 391 6 395 2 106 1 108 2 111 2 678 4 976 1 680 2 979 2 409 2 981 6 410 2 689 2 984 4 123 46 695 2 700 2 994 4 996 4 131 6 132 4 707 2 135 2 709 2 428 4 140 2 141 1 1001 2 435 2 438 6 440 4 150 6 726 2 152 2 1013 6 160 1 735 12 447 2 449 2 162 8 738 6 742 2 749 2 467 6 185 2 1050 2 470 4 762 2 1052 2 192 6 1057 6 482 6 1062 2 781 2 783 2 200 2 790 2 206 2 1072 2 210 2 797 6 213 2 804 4 225 2 514 4 815 2 817 7 818 2 1094 6 239 2 822 4 522 4 525 1 1104 4 246 2 533 2 1106 2 252 2 254 2 833 2 542 6 837 2 840 2 1116 2 546 2 846 2 858 2 1134 2 859 2 1137 4 1136 2 276 2 
277 2 278 2 1 2 2 2 140 2 1001 2 6 2 9 2 435 2 575 2 438 6 869 2 12 2 440 4 871 2 291 2 150 6 726 2 878 2 876 6 152 2 1013 6 584 4 884 2 735 12 447 2 24 2 449 2 738 6 162 8 596 6 742 2 889 4 749 4 31 2 899 2 316 2 604 2 181 2 904 2 42 12 321 10 185 2 467 6 612 2 1050 2 325 2 762 2 51 6 470 4 1052 2 326 2 55 6 192 6 619 2 1057 6 332 2 914 8 333 6 622 6 626 2 482 6 624 2 1062 2 781 2 920 4 921 2 783 2 335 2 336 8 922 2 337 2 924 8 200 2 338 2 790 2 72 6 206 4 1072 2 350 2 797 6 646 2 210 2 80 2 81 2 84 2 945 2 946 6 213 2 86 2 362 2 804 4 363 2 225 2 954 2 514 4 374 2 373 4 815 2 376 4 378 2 381 8 818 2 386 26 964 2 1094 6 239 2 522 4 391 6 395 2 1104 4 246 2 1106 2 533 2 252 2 254 2 108 2 542 6 833 2 111 2 678 8 404 4 837 2 680 2 840 2 1116 2 979 4 409 2 546 2 981 6 846 2 410 2 689 2 123 48 984 4 695 2 700 2 994 4 858 2 131 6 996 4 1134 2 132 4 859 2 1136 2 1137 4 707 2 135 2 276 2 709 2 428 4 
277 2 278 2 1 2 2 2 140 2 1001 2 6 2 9 2 435 2 575 2 438 6 869 2 12 2 440 4 871 2 291 2 150 6 726 2 878 2 876 6 152 2 1013 6 584 4 884 2 735 12 447 2 24 2 449 2 738 6 162 8 596 6 742 2 889 4 749 4 31 2 899 2 316 2 604 2 181 2 904 2 42 12 321 10 467 6 185 2 612 2 1050 2 325 2 762 2 51 6 470 4 1052 2 326 2 55 6 192 6 619 2 1057 6 332 2 914 8 333 6 622 6 626 2 482 6 624 2 1062 2 781 2 920 4 921 2 783 2 335 2 336 8 922 2 337 2 924 8 200 2 338 2 790 2 72 6 206 4 1072 2 350 2 797 6 646 2 210 2 80 2 81 6 84 2 1075 4 945 2 946 6 213 2 86 2 362 2 804 4 363 2 225 2 954 2 514 4 374 2 373 4 815 2 376 4 378 2 381 8 818 2 386 26 964 2 1094 6 239 2 522 4 391 6 395 2 1104 4 246 2 1106 2 533 2 252 2 254 2 108 2 542 6 833 2 111 2 678 8 404 4 837 2 680 2 840 2 1116 2 979 4 409 2 546 2 981 6 846 2 410 2 689 2 123 48 984 4 695 2 700 2 994 4 858 2 131 6 996 4 1134 2 132 4 859 2 1136 2 1137 4 707 2 135 2 276 2 709 2 428 4 
277 2 278 2 1 2 2 2 9 2 11 2 575 2 869 2 12 2 290 6 871 2 291 2 876 6 878 2 880 2 584 4 884 2 24 2 596 12 889 4 600 2 31 4 899 2 316 2 604 4 904 2 42 10 321 8 612 2 325 2 51 6 326 2 55 6 619 2 332 2 914 10 333 12 622 6 624 2 626 2 920 4 921 2 335 2 922 2 336 10 337 2 924 8 338 2 72 12 350 2 646 2 80 2 81 6 945 2 84 2 946 6 357 6 86 4 947 6 362 2 363 2 648 2 952 2 954 2 371 6 373 4 374 2 376 4 378 2 381 8 386 24 964 2 391 6 395 2 108 2 111 2 678 10 404 4 680 2 979 4 409 2 981 6 410 2 689 2 984 4 123 52 695 2 700 4 994 4 996 4 131 12 132 4 707 2 135 2 709 2 428 4 427 6 140 2 1001 2 435 2 438 8 440 4 150 6 726 2 152 2 1013 6 735 16 447 2 449 2 162 12 738 6 742 2 749 4 1034 6 181 2 185 2 467 8 1050 2 470 4 762 2 1052 2 190 2 192 6 476 6 1057 6 1059 2 482 12 1062 2 781 2 783 2 200 2 790 2 206 4 1072 2 210 2 797 12 1075 4 213 2 804 4 225 2 224 6 514 4 815 2 818 2 1094 6 239 2 822 2 522 6 1104 4 243 6 246 2 533 2 1106 4 252 2 254 2 833 2 542 6 837 2 840 2 1116 2 546 2 846 2 1125 2 857 2 858 2 1134 2 859 2 1137 4 1136 2 276 2 
1104 4 316 2 254 2 81 4 1075 4 946 6 404 2 680 2 362 2 185 2 363 2 1116 2 409 2 410 2 1013 2 619 2 332 2 123 4 914 6 984 4 735 4 815 2 381 2 449 2 818 2 921 2 994 2 336 6 996 2 337 2 742 2 132 2 239 2 276 2 428 2 
140 2 6 2 568 3 9 2 438 6 291 2 726 2 1009 2 1013 2 156 2 584 4 735 4 449 2 162 8 453 2 742 2 458 2 31 3 899 2 316 2 604 3 904 2 42 4 321 2 185 2 467 6 1050 2 470 4 1052 2 619 2 332 2 914 6 194 2 622 6 1062 2 781 2 920 4 921 2 335 2 783 2 336 6 922 2 337 2 200 2 790 2 497 2 1072 2 210 2 81 2 945 2 946 6 804 4 362 2 363 2 225 2 373 2 815 2 381 2 818 2 386 24 239 2 522 4 391 6 394 2 1104 4 244 2 533 2 1106 3 829 2 252 2 254 2 111 2 833 2 404 2 680 2 840 2 1116 2 409 2 410 2 984 4 123 28 994 2 996 2 1134 2 132 2 859 2 709 2 276 2 428 2 
826 2 185 2 742 2 
826 2 185 2 742 2 
140 2 1001 2 9 2 435 2 438 2 440 4 291 2 723 2 580 2 726 2 1011 2 152 2 876 2 1013 4 584 4 735 16 1023 2 162 2 742 4 889 2 749 4 750 2 899 2 904 2 42 4 759 2 321 2 324 2 185 6 467 2 1050 2 470 4 1052 2 764 2 326 2 914 12 622 6 624 2 1062 2 781 2 920 4 921 4 335 2 783 2 922 2 336 12 786 2 200 2 491 2 342 2 931 2 206 4 1072 2 81 6 85 4 945 2 1075 4 946 6 804 4 363 2 225 2 952 4 954 2 514 4 373 6 376 2 381 4 818 2 386 16 1093 2 102 4 822 4 391 6 241 2 1103 2 1104 4 826 2 533 2 1106 2 252 2 254 2 111 2 833 2 678 4 404 4 837 2 840 2 680 2 979 4 120 4 123 24 984 4 695 2 994 2 996 2 1134 2 859 2 132 4 1137 2 707 4 709 2 275 2 708 2 428 2 
1103 2 20 2 1 2 495 2 123 4 108 2 376 2 42 2 781 2 321 2 629 2 386 2 1093 2 964 2 723 2 706 2 876 2 
140 2 1001 2 571 2 9 2 435 2 438 2 440 4 1006 2 291 2 723 2 580 2 726 2 876 2 152 2 1013 4 442 2 584 4 735 16 26 2 162 2 742 4 889 4 749 4 750 2 899 2 904 2 42 2 759 2 185 6 467 2 1050 2 470 4 1052 2 764 2 326 2 914 12 622 6 624 2 1062 2 781 2 920 4 921 4 335 2 783 2 922 2 336 12 786 2 200 2 491 2 342 4 931 2 206 4 1072 2 350 2 81 6 85 4 945 2 1075 4 946 6 804 4 363 2 225 2 952 4 954 2 514 4 373 6 381 4 818 2 386 16 1093 2 102 4 822 4 391 6 1103 2 1104 4 826 2 533 2 1106 4 252 2 254 2 111 2 833 2 678 4 404 4 837 2 840 2 680 2 979 4 120 4 123 24 984 4 695 2 994 2 996 2 1134 2 859 2 132 4 1137 2 707 4 709 2 275 2 708 2 1139 2 428 2 
138 2 140 2 1001 2 9 2 435 2 438 2 440 4 291 2 723 2 580 2 726 2 152 2 876 2 1013 4 584 4 735 16 162 2 739 2 742 4 889 4 749 4 750 2 899 2 904 2 42 4 759 2 321 2 185 6 467 2 1050 2 470 4 1052 2 764 2 326 2 188 2 914 12 622 6 624 2 1062 2 781 2 920 4 921 4 335 2 783 2 922 2 336 12 786 2 200 2 491 2 342 2 931 2 206 4 1072 2 350 2 81 6 85 4 945 2 1075 4 946 6 804 4 363 2 225 2 952 4 954 2 514 4 373 6 376 2 381 4 818 2 386 16 1093 2 102 4 822 4 391 6 1103 2 1104 4 826 2 969 2 533 2 1106 2 252 2 254 2 399 2 111 2 833 2 678 4 404 4 837 2 840 2 680 2 979 4 120 4 123 24 984 4 695 2 994 2 996 2 1134 2 859 2 132 4 1137 2 707 4 709 2 275 2 708 2 428 2 
0 2 277 2 2 2 140 2 3 2 4 2 1003 2 570 2 1004 2 9 2 573 2 438 6 12 2 721 2 1008 6 584 4 731 2 585 2 589 2 591 2 162 8 893 4 31 2 1035 2 899 2 38 2 317 1 604 2 605 2 904 2 42 2 467 6 614 2 50 2 1050 1 470 4 1052 2 473 4 617 2 621 2 622 6 1062 2 781 2 920 2 335 2 783 2 790 2 207 2 1072 2 78 2 945 2 804 2 502 2 807 2 89 2 225 2 953 2 509 2 653 2 373 2 378 2 663 2 962 2 386 20 522 4 1102 2 391 3 671 6 528 2 968 1 1105 2 1106 2 252 2 1107 4 109 2 1109 2 111 1 833 2 1113 2 840 2 123 26 421 2 1134 2 859 2 1136 2 1138 2 135 2 709 2 
930 2 31 3 331 2 33 2 1106 3 1122 2 444 3 123 2 604 3 256 2 10 2 162 2 919 4 700 6 386 2 595 2 668 2 803 2 467 2 438 2 681 2 522 2 790 2 88 2 966 1 
930 2 31 2 331 2 33 2 1106 2 1122 2 444 2 123 2 604 2 256 2 10 2 162 2 919 4 700 6 386 2 595 2 668 2 803 2 467 2 438 2 681 2 522 2 790 2 88 2 
930 2 31 2 331 2 33 2 1106 2 1122 2 444 2 123 2 604 2 256 2 10 2 162 2 919 4 700 6 386 2 595 2 668 2 803 2 467 2 438 2 681 2 522 2 790 2 88 2 
894 2 31 3 247 2 1035 2 644 2 175 6 1106 3 38 2 1109 2 465 2 287 2 1077 2 574 4 611 3 469 4 614 2 502 2 88 2 1015 4 416 3 585 2 586 2 655 4 556 2 882 2 232 3 123 10 1124 2 621 2 693 4 662 2 664 2 782 4 162 2 386 4 965 2 1099 2 790 2 671 6 893 4 
894 2 31 2 247 2 1035 2 644 2 175 6 1106 2 38 2 1109 2 462 2 465 2 287 2 1077 2 574 4 259 2 611 2 719 2 469 4 614 2 502 2 88 2 1015 4 416 2 585 2 586 2 655 4 556 2 882 2 232 2 123 10 1124 2 621 2 693 4 662 2 664 2 782 4 162 2 386 4 965 2 1099 2 790 2 671 4 893 4 
894 2 31 2 247 2 1035 2 644 2 175 6 1106 2 38 2 1109 2 462 2 465 2 287 2 1077 2 574 4 259 2 611 2 719 2 469 4 614 2 502 2 88 2 1015 4 416 2 585 2 586 2 655 4 556 2 882 2 232 2 123 10 1124 2 621 2 693 4 662 2 664 2 782 4 162 2 386 4 965 2 1099 2 790 2 671 4 893 4 
894 2 31 2 247 2 1035 2 644 2 175 6 1106 2 38 2 1109 2 462 2 465 2 287 2 1077 2 574 4 259 2 611 2 719 2 469 4 614 2 502 2 88 2 1015 4 416 2 585 2 586 2 655 4 556 2 882 2 232 2 123 10 1124 2 621 2 693 4 662 2 664 2 782 4 162 2 386 4 965 2 1099 2 790 2 671 4 893 4 
894 2 31 2 247 2 1035 2 644 2 175 6 1106 2 38 2 1109 2 462 4 465 2 287 2 1077 2 574 4 259 4 611 2 719 4 469 4 614 2 502 2 88 2 1015 4 416 2 585 2 586 2 655 4 556 2 882 2 232 2 123 10 1124 2 621 2 693 4 662 2 664 2 782 4 162 2 386 4 965 2 1099 2 790 2 671 5 893 4 
606 2 543 2 1037 2 77 2 365 2 390 2 
543 2 895 2 836 2 76 2 987 2 255 2 1074 2 
529 1 251 2 460 2 351 2 540 2 397 1 500 2 355 2 677 2 466 2 222 2 582 2 685 2 264 2 850 2 122 2 123 10 814 2 1091 2 386 8 100 2 131 2 859 2 821 1 521 1 424 1 
794 4 1035 6 4 2 1107 4 38 6 1109 6 462 5 975 2 83 2 1044 2 259 4 719 4 50 2 502 6 614 6 1007 2 471 2 653 2 1015 4 585 6 882 2 123 6 621 6 593 2 386 6 962 2 388 2 635 2 671 16 893 12 
226 2 673 2 1071 1 971 2 655 2 123 1 693 2 61 2 782 2 214 2 322 7 386 1 1049 2 702 2 1063 4 766 2 425 2 526 2 
226 4 673 2 971 2 655 2 693 2 61 2 782 2 214 2 322 6 1049 4 702 2 1063 4 766 4 425 2 526 2 
226 8 673 2 1071 1 971 2 655 2 123 1 693 2 61 8 782 2 214 6 322 10 386 1 1049 8 702 2 1063 4 766 8 425 2 526 2 
226 2 673 2 971 2 655 2 693 2 782 2 322 2 1049 2 702 2 1063 2 766 2 425 2 526 2 
999 1 140 2 496 1 804 2 386 6 747 2 391 6 823 2 828 2 315 2 538 2 111 2 904 2 1050 2 413 1 57 2 552 2 123 6 127 2 1062 2 920 2 
999 2 639 2 933 2 140 2 346 2 936 4 939 2 209 2 566 2 940 2 285 2 82 2 8 4 572 2 288 2 289 2 802 4 804 20 1078 6 720 2 505 2 506 2 220 2 221 4 223 2 1084 2 369 2 159 2 298 2 813 2 658 2 377 2 302 2 386 44 98 2 1095 2 238 2 457 2 171 2 745 2 1098 4 747 2 391 42 891 2 309 2 249 2 248 2 1039 2 1042 2 315 2 972 6 973 2 538 2 398 4 902 2 904 2 1046 2 839 2 610 2 46 2 407 2 187 2 115 2 770 4 911 2 413 2 57 2 552 38 117 2 555 2 1058 2 123 46 855 2 694 2 59 2 267 2 58 2 988 2 126 2 60 2 1062 2 269 4 920 20 990 2 923 2 423 2 860 2 791 2 204 2 1140 6 
637 2 999 6 713 2 563 2 934 2 140 4 933 2 939 6 567 2 866 2 145 2 8 4 804 18 949 2 439 2 720 6 503 4 505 2 221 4 809 2 227 2 512 2 955 2 298 4 658 2 1018 2 592 2 887 2 386 40 238 6 745 2 1098 4 29 8 747 2 391 40 823 2 967 2 312 6 459 8 1042 2 315 2 972 10 314 2 538 2 831 2 111 4 904 2 401 2 1048 2 613 2 1050 4 545 2 684 2 187 2 265 2 768 2 115 2 770 2 849 2 57 2 552 14 329 2 912 2 123 44 1123 2 692 2 915 2 855 2 59 4 267 2 127 2 1061 6 779 2 1062 4 920 20 1132 8 558 2 65 2 703 2 340 2 423 2 861 2 204 6 
999 2 639 2 140 2 142 2 566 2 82 2 8 4 215 2 804 10 1078 2 720 2 505 2 221 4 1084 2 813 2 298 2 658 2 386 20 457 2 745 2 1098 4 747 2 391 34 823 8 828 2 1042 2 315 2 972 6 538 2 758 2 111 6 904 2 1050 6 187 2 115 2 770 2 413 2 57 2 552 12 123 22 855 2 915 2 694 2 59 2 60 2 127 2 1062 2 920 10 423 2 201 2 202 2 
784 2 

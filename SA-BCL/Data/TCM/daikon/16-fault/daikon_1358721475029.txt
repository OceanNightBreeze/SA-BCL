#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (220,485) (277,350) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (339,396) (339,396) (339,396) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 356 116 761 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.Invariant:justified()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfo:isPointer()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern:intern([J)[J
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ModBitTracker:num_samples()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfo:new_ppt()V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:min([I)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ProglangType:isIntegral()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:memberOf(I[I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[F)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaCharStream:ReadByte()C
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_and(DDD)D | OPERATOR | 8959 | <= -> ==
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Debug:logDetail()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.ValueTuple:size()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGTE([I)Z
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 12410 | if (x) -> if (!x)
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:passes()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:gt(II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Debug:logOn()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282074 | = null
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:eltsGT([II)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_sets()I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:eltsLT([II)Z
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:hashCode()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.MathMDE:pow(II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:eq(FF)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_ntk()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:subsetOf([B[I)Z
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:sameLength([I[I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:numIntArrays()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginColumn()I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.ProglangType:isFloat()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaCharStream:backup(I)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptName:isEnterPoint()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.Node:Node()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoAux:hashCode()I
daikon.Quant:intersection([I[I)[I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaCharStream:getEndLine()I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Ppt:Ppt()V
daikon.ProglangType:isArray()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:eq(II)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.Quant:gte(II)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice2:arity()I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([D)D
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.ArraysMDE:sum([I)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.RootNode:RootNode()V
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token; | CONDITION | 213180 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:slice([III)[I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan; | RETURN | 1528 | return null
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:memberOf(J[J)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.MathMDE:gcd_differences([I)I | CONSTANT | 5121 | 0 -> 1
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaCharStream:FillBuff()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
394 2 120 2 334 2 485 2 630 2 205 2 305 4 550 2 220 2 
566 2 6 6 667 6 750 2 777 2 399 2 721 6 387 2 286 2 422 2 453 2 
827 6 42 4 292 2 129 2 429 4 445 2 446 6 220 2 485 2 341 6 173 6 462 2 692 2 
363 2 57 6 726 6 734 10 280 4 220 6 400 10 485 6 838 8 38 29 644 8 622 10 645 10 772 4 408 26 411 2 870 2 414 8 266 2 323 8 873 10 932 2 209 2 245 16 934 16 844 2 84 12 419 4 390 16 938 4 
661 4 87 6 
278 2 
128 2 2 4 130 2 4 2 602 2 485 4 257 2 604 4 139 2 774 4 649 2 440 2 264 2 201 2 903 2 905 2 209 2 780 2 145 2 78 4 81 2 328 2 507 2 91 2 394 2 567 2 728 2 572 2 220 4 221 2 156 2 226 2 740 2 404 2 679 2 416 2 809 2 685 2 688 2 817 2 177 2 818 2 589 2 881 2 
57 4 726 4 153 4 476 4 187 6 594 6 734 16 917 6 220 4 858 4 400 16 134 2 37 8 485 4 224 2 838 6 38 54 622 16 645 6 466 4 408 48 775 6 866 4 294 2 411 2 554 6 295 4 443 2 199 2 323 18 873 16 752 2 245 32 934 32 419 2 84 22 504 6 390 32 821 4 
679 2 832 2 377 2 
567 2 494 2 112 2 833 10 887 2 98 2 204 2 722 2 360 2 104 22 64 2 712 2 391 2 423 2 
454 2 726 2 364 2 595 2 734 2 400 2 402 2 375 2 38 6 622 2 645 4 408 4 628 2 323 2 873 2 875 2 245 2 934 2 845 2 419 2 84 2 390 2 362 2 
772 2 408 12 775 6 554 6 295 4 734 4 873 4 515 2 858 4 245 8 400 4 401 2 934 8 84 4 38 16 622 4 390 8 
489 2 876 2 707 6 538 2 796 2 312 2 711 2 805 2 
730 2 278 2 189 2 543 2 10 2 238 2 719 2 207 2 505 2 211 2 
366 2 830 17 3 2 700 2 596 1 703 2 371 2 8 2 370 5 705 2 836 1 599 6 600 1 255 2 485 32 11 11 13 4 15 2 262 1 493 1 383 2 843 2 267 6 268 4 146 1 388 2 506 2 392 2 511 4 849 4 850 2 732 6 851 2 733 6 32 6 518 1 287 2 619 2 741 2 621 2 864 2 291 3 165 1 293 2 868 2 413 1 415 2 171 6 754 3 532 4 535 2 883 2 58 2 428 1 540 12 310 2 767 2 190 1 436 6 314 2 66 1 439 2 68 2 551 2 773 2 552 2 902 2 71 1 442 2 776 2 202 1 906 1 657 2 82 2 784 2 786 1 333 2 334 2 216 1 220 30 459 2 223 2 575 1 105 3 672 3 674 2 465 11 349 2 803 2 677 2 239 2 241 3 806 2 119 2 121 2 586 2 936 2 124 1 939 6 
114 2 485 2 
350 2 485 4 802 2 277 2 
766 2 
590 2 759 2 829 2 152 2 251 18 794 2 639 2 640 2 368 2 513 2 888 2 279 2 34 2 62 2 65 2 258 2 620 2 577 2 623 2 490 2 746 2 579 2 580 2 607 2 678 2 467 2 682 2 718 2 46 18 872 2 557 2 498 18 583 2 324 2 907 2 723 2 301 2 531 2 303 2 178 2 787 2 824 2 214 2 
582 2 185 2 175 1 749 2 
749 2 840 2 
215 2 679 2 162 2 179 2 749 2 691 2 938 2 
179 2 749 2 389 2 
448 2 179 2 749 2 
582 2 874 2 492 2 
179 2 749 2 
492 2 689 2 
431 2 749 2 
582 2 492 2 357 2 
582 2 815 2 771 2 
582 2 231 2 361 2 
582 2 585 2 626 2 
582 2 813 2 154 2 
492 2 463 2 
647 2 749 2 
510 2 771 2 
652 2 361 2 
578 2 585 2 
321 2 154 2 
192 2 492 2 
848 2 154 2 
585 2 228 2 
816 2 361 2 
771 2 97 2 
582 2 492 2 468 2 357 2 
582 2 492 2 561 2 468 2 357 2 
582 2 492 2 227 2 
582 2 492 2 520 2 
338 2 21 2 918 2 451 2 
744 2 679 2 162 2 764 2 
744 2 215 2 679 2 162 2 770 2 764 2 
679 2 162 2 179 2 749 2 938 2 853 2 
714 2 264 2 
679 2 162 2 846 2 938 2 
585 2 460 2 
154 2 313 2 
491 2 771 2 
664 2 361 2 
154 2 18 2 361 2 
154 2 435 2 361 2 
236 2 154 2 361 2 
154 2 361 2 758 2 
396 4 569 6 339 2 576 2 162 2 679 2 653 2 203 2 
492 2 169 2 
56 4 867 2 198 2 458 4 143 2 296 2 243 2 573 2 558 2 842 2 76 2 48 2 547 2 104 6 877 2 587 2 862 2 346 2 
582 2 352 2 
388 2 
825 2 366 2 830 4 3 2 593 2 699 2 371 2 599 4 133 2 374 2 255 2 485 26 603 2 493 2 383 2 497 2 609 2 267 2 268 4 503 2 506 2 392 2 25 2 727 2 511 4 729 2 849 4 276 2 732 6 851 2 857 2 736 2 287 2 741 2 864 8 405 2 868 2 413 2 45 2 171 6 527 4 532 4 533 2 180 2 883 6 540 6 310 2 767 2 546 2 436 2 191 2 68 2 773 2 552 2 902 2 556 2 208 2 657 2 784 2 662 4 333 2 334 2 668 2 220 26 225 2 674 2 803 2 804 2 806 2 931 4 118 2 121 2 936 2 588 2 
825 2 366 2 830 4 3 2 371 2 599 6 133 2 374 2 255 2 485 26 603 2 493 2 715 2 383 2 497 2 609 2 843 2 267 2 268 4 503 2 506 2 392 2 151 2 25 2 727 2 511 4 729 2 849 4 276 2 732 6 851 2 857 2 736 2 287 2 741 2 288 2 864 8 40 2 405 2 868 2 413 2 171 6 527 4 532 4 533 2 180 2 883 6 540 6 310 2 767 2 546 2 436 2 191 2 68 2 551 2 773 2 552 2 902 2 556 2 208 2 657 2 784 2 662 4 333 2 334 2 668 2 220 26 225 2 674 2 803 2 804 2 806 2 931 4 118 2 121 2 936 2 588 2 
765 2 
254 2 95 2 
695 2 425 2 3 2 831 10 592 2 539 2 6 6 541 2 598 2 310 2 485 12 9 2 710 2 438 4 773 2 552 2 196 2 721 6 325 2 784 2 565 2 611 4 566 2 94 2 28 2 511 2 96 2 849 2 797 2 732 4 512 2 667 6 399 4 220 6 283 2 158 2 107 2 925 2 675 2 926 2 676 2 868 2 928 2 44 4 412 2 750 2 358 2 933 2 244 2 686 4 528 8 529 2 755 2 935 8 756 2 304 2 936 2 636 4 820 4 422 4 
695 2 425 2 3 2 831 10 592 2 539 2 6 6 541 2 598 2 310 2 485 12 9 2 710 2 438 4 773 2 552 2 196 2 608 2 721 8 325 2 784 2 565 2 611 4 566 2 94 2 28 2 511 2 96 2 849 2 797 2 732 4 512 2 571 2 667 8 399 4 220 6 281 4 283 2 158 2 286 2 107 2 925 2 675 2 926 2 868 2 928 2 44 4 412 2 750 2 358 2 933 2 244 2 528 8 686 4 529 2 755 2 935 8 756 2 936 2 636 4 820 4 422 4 
695 2 925 2 675 2 28 2 928 2 44 2 539 2 797 2 6 2 512 2 667 2 399 2 598 2 244 2 686 4 565 2 820 4 422 2 
695 2 425 2 3 2 831 6 592 2 539 2 6 4 541 2 598 2 310 2 485 12 9 2 710 2 438 4 773 2 552 2 196 2 721 6 325 2 784 2 565 2 611 4 94 2 28 2 511 2 96 2 849 2 797 2 732 4 512 2 667 6 399 4 220 6 283 2 158 2 286 2 107 2 925 2 675 2 926 2 676 2 868 2 928 2 44 4 412 2 750 2 358 2 933 2 244 2 686 4 528 4 529 2 755 2 935 4 756 2 304 2 936 2 636 4 820 4 422 4 
695 2 425 2 3 2 831 6 592 2 539 2 6 6 541 2 598 2 310 2 485 12 9 2 710 2 438 4 773 2 552 2 196 2 721 6 325 2 387 2 784 2 565 2 611 4 94 2 28 2 511 2 96 2 849 2 797 2 732 4 512 2 667 4 399 4 220 6 283 2 158 2 107 2 925 2 675 2 926 2 676 2 868 2 928 2 44 4 412 2 750 2 358 2 933 2 244 2 686 4 528 4 529 2 755 2 935 4 756 2 304 2 936 2 636 4 820 4 422 4 
695 2 425 2 3 2 831 6 592 2 539 2 6 6 541 2 598 2 310 2 485 12 9 2 710 2 438 4 773 2 552 2 196 2 721 6 325 2 784 2 565 2 611 4 566 2 94 2 28 2 511 2 96 2 849 2 797 2 732 4 512 2 667 6 399 4 220 6 283 2 158 2 107 2 925 2 675 2 926 2 676 2 868 2 928 2 44 4 412 2 750 2 358 2 933 2 244 2 686 4 528 4 529 2 755 2 935 8 756 2 304 2 936 2 636 4 820 4 422 4 
695 2 425 2 3 2 831 10 592 2 539 2 6 8 541 2 598 2 310 2 485 12 9 2 710 2 438 4 773 2 552 2 196 2 721 8 325 2 387 2 784 2 565 2 611 4 566 2 94 2 28 2 511 2 96 2 849 2 797 2 732 4 512 2 667 6 399 4 220 6 283 2 158 2 107 2 925 2 675 2 926 2 676 2 868 2 928 2 44 4 412 2 750 2 358 2 933 2 244 2 686 4 528 8 529 2 755 2 935 8 756 2 304 2 936 2 636 4 820 4 422 4 
695 2 425 2 3 2 831 10 592 2 539 2 6 6 541 2 598 2 310 2 485 12 9 2 710 2 438 4 773 2 552 2 196 2 721 6 325 2 784 2 565 2 611 4 566 2 94 2 28 2 511 2 96 2 849 2 797 2 732 4 512 2 667 6 399 4 220 6 283 2 158 2 107 2 925 2 675 2 926 2 676 2 868 2 928 2 44 4 412 2 750 2 358 2 933 2 244 2 686 4 528 8 529 2 755 2 935 8 756 2 304 2 936 2 636 4 820 4 422 4 
695 2 474 2 3 2 6 8 704 2 255 2 485 46 9 2 708 1 256 2 710 4 12 6 497 2 721 12 499 6 267 2 268 4 506 2 23 1 25 4 273 7 26 4 28 2 511 4 729 2 276 2 732 6 512 2 283 2 517 2 36 2 287 2 741 2 43 2 44 4 750 4 297 6 47 2 298 2 300 2 529 2 532 4 755 2 756 2 55 10 537 2 760 1 539 2 541 2 540 8 766 6 310 2 767 2 317 2 551 2 68 2 773 2 552 2 69 6 325 2 784 2 85 6 565 2 329 1 86 2 90 6 94 2 333 2 334 2 792 6 96 2 797 2 574 6 799 7 344 2 107 2 803 2 110 8 350 6 806 2 358 4 114 6 121 2 125 2 820 4 366 2 830 2 831 2 592 2 371 2 598 2 599 6 133 2 378 2 606 2 141 2 380 2 383 2 843 2 387 4 147 2 611 4 392 12 612 2 847 2 393 2 849 4 851 2 399 4 616 1 158 2 160 2 864 4 868 2 409 2 869 2 412 2 631 1 171 6 636 6 422 4 883 6 425 2 427 2 430 1 886 2 643 2 434 6 436 2 438 8 902 2 196 2 200 6 206 1 657 2 210 4 662 4 667 4 220 24 921 2 225 2 674 2 925 2 675 2 676 2 926 2 234 6 232 2 237 2 928 2 930 2 683 6 933 2 244 2 686 4 935 2 936 2 249 1 940 6 
695 2 474 2 366 2 830 2 3 2 831 2 592 2 6 8 371 2 704 2 598 2 133 2 599 6 255 2 485 48 9 2 256 2 710 4 378 2 606 2 12 6 380 2 141 2 383 2 497 2 721 12 499 6 843 2 267 2 268 4 147 2 611 4 506 2 612 2 392 12 847 2 25 4 393 2 26 4 28 2 511 4 729 2 849 4 276 2 732 6 512 2 851 4 399 4 517 2 283 2 36 2 158 2 160 2 287 2 741 2 863 2 864 8 409 2 868 2 43 2 869 2 44 4 412 2 750 4 297 6 47 2 171 6 298 2 527 2 300 2 529 2 755 2 532 4 756 2 636 6 55 10 422 4 883 6 884 2 425 2 427 2 537 2 539 2 886 2 540 8 541 2 766 6 310 2 643 2 434 6 767 4 436 2 438 8 317 2 68 2 551 2 773 2 69 6 552 2 902 2 196 2 200 6 657 2 325 2 784 2 85 6 210 4 565 2 86 2 90 6 662 4 566 4 94 2 333 2 334 2 792 6 96 2 797 2 667 8 220 26 574 6 921 2 225 2 107 2 344 2 674 4 803 2 925 2 110 8 675 2 926 2 676 2 232 2 350 6 234 6 237 2 928 2 930 2 806 2 683 6 114 6 358 4 244 2 933 2 686 4 121 2 935 6 936 2 125 2 820 4 940 6 
695 2 474 2 366 2 830 2 3 2 831 6 592 2 6 8 371 2 704 2 598 2 133 2 599 6 255 2 485 48 9 2 256 2 710 4 378 2 606 2 12 6 380 2 141 2 383 2 497 2 721 12 499 6 843 2 267 2 268 4 147 2 611 4 506 2 612 2 392 12 847 2 25 4 393 2 26 4 28 2 511 4 729 2 849 4 276 2 732 6 512 2 851 4 399 4 517 2 283 2 36 2 158 2 160 2 287 2 741 2 863 2 864 8 409 2 868 2 43 2 869 2 44 4 412 2 750 4 297 6 47 2 171 6 298 2 527 2 300 2 528 4 529 2 755 2 532 4 756 2 636 6 55 10 422 4 883 6 884 2 425 2 427 2 537 2 539 2 886 2 540 8 541 2 766 6 310 2 643 2 434 6 767 4 436 2 438 8 317 2 68 2 551 2 773 2 69 6 552 2 902 2 196 2 200 6 657 2 325 2 784 2 85 6 210 4 565 2 86 2 90 6 662 4 566 4 94 2 333 2 334 2 792 6 96 2 797 2 667 8 220 26 574 6 921 2 225 2 107 2 344 2 674 4 803 2 925 2 110 8 675 2 926 2 676 2 232 2 350 6 234 6 237 2 928 2 930 2 806 2 683 6 114 6 358 4 244 2 933 2 686 4 121 2 935 6 936 2 125 2 820 4 940 6 
695 2 474 2 3 2 6 10 701 6 702 2 704 2 255 2 485 52 9 2 256 2 710 4 12 6 14 2 19 2 497 2 721 16 499 6 267 4 268 4 271 2 506 2 272 6 25 4 26 4 28 2 511 4 30 6 729 4 276 2 732 6 512 2 283 2 36 2 286 2 287 2 741 2 39 6 43 2 44 4 750 4 297 6 47 2 298 2 527 2 528 4 300 2 529 2 532 4 755 2 756 2 55 8 537 2 539 2 541 2 540 12 766 12 310 2 767 4 317 2 551 2 68 2 773 2 552 2 69 6 325 2 564 6 784 2 85 6 565 2 86 2 90 6 566 4 94 2 333 2 334 2 792 12 96 2 797 2 574 12 107 2 344 2 803 2 110 8 350 12 806 2 358 4 114 12 121 2 125 2 820 4 126 2 366 2 830 4 831 6 592 2 371 2 598 2 599 6 133 2 137 2 378 2 606 2 141 2 380 2 383 2 843 2 387 2 147 2 611 4 612 2 392 10 847 2 393 2 849 4 851 4 399 4 158 2 160 2 863 2 864 10 868 2 409 2 869 2 412 2 171 8 174 6 636 6 637 2 422 4 883 8 884 2 425 2 427 2 886 2 643 2 434 6 436 4 438 8 902 2 196 2 651 6 200 6 657 2 210 4 662 6 911 6 457 2 667 10 220 24 921 2 225 4 674 4 924 6 925 2 675 2 676 2 926 2 234 12 232 2 237 2 928 2 930 2 683 6 933 2 244 2 686 4 935 6 936 2 940 6 
695 2 566 2 94 2 425 2 831 4 592 2 539 2 6 6 667 6 399 4 283 2 485 4 158 2 438 2 925 2 675 2 676 2 928 2 412 2 196 2 750 2 721 4 244 2 933 2 528 4 686 2 529 2 325 2 935 6 756 2 636 2 565 2 611 2 820 2 422 4 
695 2 366 2 830 3 3 2 831 2 592 2 6 6 371 2 133 2 599 6 372 2 255 2 485 28 383 2 721 4 843 2 267 3 268 4 388 2 611 2 506 2 392 4 25 2 511 4 849 4 276 2 732 6 399 4 517 2 283 2 158 2 287 2 619 2 741 2 868 2 412 2 750 2 171 6 529 2 532 4 756 2 636 2 421 2 55 2 422 4 883 6 425 2 58 2 539 2 541 2 540 8 310 2 436 3 438 2 68 2 551 2 773 2 552 2 902 2 196 2 555 2 74 3 657 2 325 2 784 2 908 2 565 2 662 4 566 2 94 2 333 2 334 2 667 6 220 24 349 2 803 2 925 2 675 2 676 2 928 2 806 2 811 2 933 2 244 2 686 2 121 2 935 6 936 2 820 2 
933 2 412 2 709 2 
933 2 412 2 709 2 
695 4 366 2 830 2 3 2 831 6 252 2 6 12 371 2 599 6 133 2 255 2 485 24 9 2 256 2 709 2 710 4 138 2 606 2 383 2 497 4 721 16 843 2 268 4 387 4 506 2 611 2 392 4 508 4 25 6 26 2 29 2 511 4 849 4 276 2 731 2 732 6 512 2 851 4 399 4 617 2 160 2 286 4 287 2 741 2 864 4 406 2 868 2 44 4 412 6 170 2 750 4 297 2 171 2 172 2 528 4 532 4 636 4 757 2 55 2 422 4 883 2 425 2 540 2 310 2 767 4 438 4 68 2 551 2 773 2 552 2 902 2 784 2 210 2 565 2 330 2 88 2 566 4 332 2 94 2 333 2 334 2 217 2 797 2 667 12 220 16 107 2 674 4 803 2 926 2 927 2 928 2 806 2 581 2 358 2 933 4 687 2 686 2 118 4 121 2 935 6 122 4 936 2 820 2 823 2 
474 2 26 2 95 2 3 2 717 2 930 2 297 2 220 2 598 2 501 2 485 4 270 2 330 2 55 2 88 2 392 2 138 2 
695 4 366 2 830 4 3 2 831 6 252 2 6 12 371 2 599 6 133 2 255 2 484 2 485 24 9 2 256 2 709 2 710 4 138 2 606 2 383 2 497 4 721 16 843 2 268 4 269 2 387 4 611 2 506 2 392 2 508 4 25 6 511 4 849 4 276 2 731 2 732 6 512 2 851 4 399 4 160 2 286 4 287 2 741 2 864 4 406 4 868 2 44 4 412 6 170 2 750 4 297 2 171 2 172 2 528 4 532 4 636 4 757 2 422 4 883 2 425 2 540 2 310 2 767 4 438 4 68 2 551 2 773 2 552 2 902 2 80 2 784 2 210 2 565 2 330 2 88 2 566 4 94 2 333 2 334 2 96 2 217 2 797 2 667 12 220 16 107 2 674 4 803 2 926 2 927 2 928 2 929 2 806 2 581 2 358 4 933 4 687 2 686 2 118 4 121 2 814 2 935 6 122 4 936 2 820 2 
695 4 366 2 830 2 3 2 831 6 252 2 6 12 597 2 371 2 599 6 133 2 255 2 485 24 136 2 9 2 256 2 709 2 710 4 138 2 606 2 383 2 497 4 721 16 843 2 268 4 387 4 506 2 611 2 392 4 508 4 25 6 26 2 511 4 849 4 276 2 731 2 732 6 512 2 851 4 399 4 157 2 160 2 286 4 287 2 741 2 864 4 406 2 868 2 44 4 412 6 170 2 750 4 297 2 171 2 172 2 528 4 532 4 636 4 757 2 55 2 422 4 883 2 425 2 540 2 310 2 767 4 548 2 438 4 68 2 551 2 773 2 552 2 902 2 784 2 210 2 565 2 330 2 88 2 566 4 94 2 333 2 334 2 96 2 217 2 797 2 667 12 220 16 107 2 464 2 674 4 803 2 926 2 927 2 928 2 806 2 581 2 358 4 933 4 687 2 686 2 118 4 121 2 935 6 122 4 936 2 820 2 
0 2 3 2 697 2 479 2 480 2 253 2 483 4 482 2 255 2 485 30 488 2 16 2 493 2 17 2 495 2 497 4 267 11 268 2 725 2 503 2 25 2 727 2 27 2 511 4 274 4 729 14 276 2 732 6 734 2 35 24 36 2 287 2 38 8 741 2 743 2 41 2 747 26 43 2 295 4 748 2 298 2 753 4 532 2 52 2 53 2 537 2 307 2 761 2 540 18 60 2 310 2 544 2 546 10 315 8 551 2 773 2 552 2 775 6 555 2 74 2 323 4 784 2 84 4 327 10 785 2 89 2 93 2 331 2 333 2 568 10 334 2 335 2 793 3 795 2 100 2 340 2 101 2 102 2 342 2 106 4 344 2 802 2 800 2 803 2 111 2 351 26 354 2 356 2 806 2 807 2 808 2 113 2 116 2 359 2 121 2 127 12 825 2 826 2 830 11 835 2 132 6 372 2 599 4 373 6 603 2 383 2 843 2 384 2 386 2 390 4 392 2 395 2 849 4 155 2 852 8 856 2 857 2 400 2 615 1 859 2 159 4 161 4 622 2 864 28 405 2 865 2 408 6 625 2 868 2 627 4 168 4 413 2 171 12 873 2 417 2 634 2 418 8 420 6 421 2 878 2 883 12 427 2 426 4 186 2 641 2 436 11 895 2 896 2 648 2 902 2 195 2 444 2 654 4 208 2 447 2 657 2 659 12 660 2 908 2 452 2 909 2 662 10 213 2 912 2 218 2 220 24 222 6 670 2 921 2 224 4 671 2 225 22 240 6 245 4 934 4 471 2 247 2 936 2 690 2 694 4 
883 2 826 2 830 2 793 2 274 2 540 2 220 2 482 2 485 2 436 2 106 2 225 6 800 2 488 2 865 2 648 2 167 2 113 4 171 2 267 2 657 2 247 2 53 2 662 2 
883 2 826 2 830 2 793 2 274 2 540 2 220 2 482 2 485 2 436 2 106 2 225 6 800 2 488 2 865 2 648 2 167 2 113 4 171 2 267 2 657 2 247 2 53 2 662 2 
883 2 826 2 830 2 793 2 274 2 540 2 220 2 482 2 485 2 436 2 106 2 225 6 800 2 488 2 865 2 648 2 167 2 113 4 171 2 267 2 657 2 247 2 53 2 662 2 
57 2 830 3 184 2 5 4 540 2 432 4 433 2 485 10 436 3 838 4 897 2 193 3 320 2 901 3 560 4 657 2 450 4 390 2 665 2 733 2 734 2 735 2 220 4 400 2 738 2 38 6 622 2 109 2 407 3 408 4 680 6 469 2 524 2 873 2 245 2 117 4 934 2 247 2 123 2 939 2 
57 2 665 2 184 2 830 2 5 4 733 2 540 2 734 2 735 2 220 4 432 4 433 2 400 2 485 10 738 2 38 4 838 4 436 2 622 2 109 2 897 2 407 2 193 2 408 4 320 2 411 2 901 2 680 6 469 2 323 2 873 2 524 2 560 4 117 4 245 2 657 2 934 2 247 2 123 2 450 4 84 2 390 2 939 2 
57 2 665 2 184 2 830 2 5 4 733 2 540 2 734 2 735 2 220 4 432 4 433 2 400 2 485 10 738 2 38 4 838 4 436 2 622 2 109 2 897 2 407 2 193 2 408 4 320 2 411 2 901 2 680 6 469 2 323 2 873 2 524 2 560 4 117 4 245 2 657 2 934 2 247 2 123 2 450 4 84 2 390 2 939 2 
57 2 665 2 184 2 830 2 5 4 733 2 540 2 734 2 735 2 220 4 432 4 433 2 400 2 485 10 738 2 38 4 838 4 436 2 622 2 109 2 897 2 407 2 193 2 408 4 320 2 411 2 901 2 680 6 469 2 323 2 873 2 524 2 560 4 117 4 245 2 657 2 934 2 247 2 123 2 450 4 84 2 390 2 939 2 
57 2 665 2 184 2 830 2 5 4 733 2 540 2 734 2 735 2 220 4 432 4 433 2 400 2 485 10 738 2 38 4 838 4 436 2 622 2 109 2 897 2 407 2 193 2 408 4 320 2 411 4 901 2 680 6 469 2 323 4 873 2 524 2 560 4 117 4 245 2 657 2 934 2 247 2 123 2 450 4 84 4 390 2 939 2 
896 2 49 2 916 2 698 2 871 2 673 2 
365 2 546 2 49 2 563 2 891 2 892 2 275 2 
910 2 397 1 367 2 538 1 220 8 889 2 542 1 519 2 461 2 485 10 893 2 711 1 549 2 290 2 234 2 868 2 353 2 629 2 322 2 523 2 115 2 781 2 530 2 473 2 150 1 306 2 
91 2 57 2 187 4 734 6 220 6 737 2 400 6 37 2 485 6 38 16 838 4 622 6 895 2 743 2 466 2 408 12 775 4 411 2 355 2 295 2 168 2 323 2 873 6 525 2 245 6 724 2 934 6 84 4 328 2 390 6 
898 1 638 2 381 2 591 2 5 2 655 2 220 1 560 2 117 2 103 2 485 1 343 2 819 4 230 2 742 2 108 2 212 2 250 7 
638 4 381 4 591 2 5 2 655 4 560 2 117 2 103 2 343 2 819 4 230 2 742 2 108 2 212 2 250 6 
898 1 638 8 381 8 591 2 5 2 655 8 220 1 560 2 117 2 103 2 485 1 343 2 819 4 230 8 742 6 108 2 212 2 250 10 
638 2 381 2 591 2 5 2 655 2 560 2 117 2 103 2 343 2 819 2 108 2 212 2 250 2 
696 17 834 4 478 16 7 6 481 4 131 2 599 248 601 6 485 150 486 6 837 26 376 4 259 8 260 4 487 4 839 5 605 6 713 4 261 4 379 11 382 42 716 90 20 2 142 12 263 10 841 4 265 10 610 4 843 58 268 88 502 10 24 2 398 18 33 6 854 4 855 6 516 4 860 26 287 14 403 2 741 14 289 2 745 18 624 10 164 24 410 10 521 2 751 1 299 2 526 2 532 112 50 24 879 4 534 16 880 2 54 4 424 24 882 6 536 24 181 6 183 8 308 10 885 6 762 2 763 36 309 24 642 4 61 8 890 4 768 8 311 4 894 6 437 28 67 2 551 58 899 4 318 6 194 42 70 50 441 92 553 6 197 2 72 6 73 6 75 12 778 10 779 8 656 8 658 8 562 34 79 4 326 2 782 24 783 2 83 8 92 2 788 90 789 4 790 124 333 8 455 8 663 6 456 16 914 2 666 6 336 4 337 2 219 2 99 6 220 134 919 4 798 2 922 6 345 6 229 16 801 6 348 4 347 8 233 6 235 2 681 4 810 4 812 10 584 84 248 6 472 6 937 4 693 22 
882 2 828 4 182 2 696 2 1 2 183 2 308 2 763 2 477 2 309 2 188 4 7 4 369 2 599 44 61 2 706 2 545 2 485 46 63 2 768 2 769 2 894 2 437 38 839 2 551 2 646 2 140 2 318 2 650 2 496 2 263 2 265 2 904 4 720 2 559 2 843 2 778 2 268 20 779 2 658 6 502 2 783 2 449 2 148 2 22 2 149 2 509 2 790 6 791 2 333 2 663 2 456 4 913 2 570 2 915 2 31 2 398 2 337 2 220 44 614 2 798 2 920 2 284 4 285 2 922 2 739 2 287 2 741 2 229 4 163 2 624 2 164 2 233 2 410 2 521 2 522 2 681 2 632 2 684 2 812 2 633 2 299 2 532 20 246 2 302 2 51 2 176 6 879 2 534 4 880 2 822 2 424 2 
475 8 696 10 478 8 7 2 599 104 601 4 135 4 485 78 486 4 376 4 260 4 487 4 605 4 261 4 382 16 142 14 841 4 265 4 144 4 610 4 843 28 500 4 268 36 385 8 502 4 613 4 31 2 398 10 514 2 33 4 854 4 855 4 282 4 618 8 287 6 861 2 741 6 163 10 624 4 166 2 410 6 299 2 526 2 635 2 532 44 51 2 534 10 880 2 54 4 882 4 536 8 181 4 183 2 885 4 763 6 59 16 642 4 768 2 311 4 894 4 437 14 316 32 67 2 551 30 900 2 318 4 194 8 441 24 70 8 197 2 73 4 778 4 779 2 77 8 658 6 562 30 783 2 83 4 790 24 791 10 333 2 456 10 663 4 336 4 666 4 337 2 219 2 99 4 220 70 669 4 919 2 798 2 920 10 922 4 229 10 801 4 345 4 923 4 347 4 233 4 242 16 810 4 684 2 584 24 470 2 248 4 472 4 
882 4 183 2 696 2 763 2 478 6 7 2 642 2 131 2 599 40 485 28 768 2 894 4 437 14 839 2 379 2 551 12 318 4 20 2 265 2 843 12 778 2 779 2 268 14 658 4 502 2 562 6 783 2 92 2 24 2 789 2 790 8 455 2 333 2 456 6 663 4 336 2 337 2 398 2 220 26 516 2 919 2 798 2 922 4 287 2 741 2 229 6 347 4 624 2 235 2 233 4 410 2 522 2 521 2 684 2 299 2 532 14 534 6 880 2 693 10 
319 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (37,641) (37,641) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 81 516 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (37,641) (37,641) (88,333,351,463,555) (88,333,351,463,555) (88,333,351,463,555) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 244 58 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (37,641) 99 262 499 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 226 586 11 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 226 586 11 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 226 586 11 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 226 586 11 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | RETURN | 66339 | return null
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.MathMDE:sign(I)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsLTE([II)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Invariant:getConfidence()D
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:memberOf(J[J)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eq(FF)Z
daikon.Quant:gte(II)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ProglangType:isScalar()Z
utilMDE.WeakHasherMap:size()I
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:Node()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eq(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaCharStream:getEndColumn()I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfo:new_ppt()V
daikon.Quant:eltsLtIndex([I)Z
daikon.PptSlice2:arity()I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | RETURN | 282442 | return null
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.PptSlice1:num_samples()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.InvMap:InvMap()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 913 | = null
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:subsetOf([D[F)Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:isArray()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_ntk()I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:slice([III)[I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:lte(II)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaCharStream:FillBuff()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaCharStream:ReadByte()C
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:lt(II)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern:intern([J)[J
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 45016 | if (x) -> if (!x)
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:isReverse([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Debug:logDetail()Z
utilMDE.MathMDE:negate(I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant:justified()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ValueTuple:isMissing(I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
daikon.Quant:subsetOf([F[D)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Intern:intern([I)[I
daikon.Quant:eltsLteIndex([I)Z
daikon.ProglangType:isIntegral()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName:hashCode()I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:eltwiseLT([I)Z
daikon.ValueTuple:size()I
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey; | RETURN | 6660 | return null
daikon.Quant:noDups([I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoAux:hashCode()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:split(I)I
daikon.Quant:memberOf(S[S)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ModBitTracker:num_samples()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:setEqual([I[I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:eltsEqual([II)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ProglangType:dimensions()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13739 | = null
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:lexGT([I[I)Z
daikon.Quant:eq(II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set; | CONDITION | 16702 | if (x) -> if (!x)
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaCharStream:BeginToken()C
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:union([I[I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:gcd(II)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:sum([I)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:ne(II)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:max([I)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
526 2 27 2 641 2 634 2 119 2 98 4 24 2 37 2 256 2 
414 6 194 2 31 6 391 2 104 2 592 2 523 6 604 2 230 2 565 2 13 2 
642 4 26 4 520 2 284 4 512 2 36 2 486 2 658 2 444 2 
641 4 365 6 385 2 196 8 407 8 540 6 5 6 475 2 562 8 508 8 160 2 201 10 393 8 245 2 165 8 464 8 72 2 271 2 400 2 494 2 637 2 215 8 37 4 404 8 
304 4 469 6 
378 2 
507 2 516 2 81 2 267 2 
471 4 196 4 407 8 524 4 165 8 562 8 72 2 508 8 595 2 136 4 201 10 393 8 597 2 206 4 215 8 404 8 
449 2 4 2 618 2 525 2 454 2 223 2 368 4 621 10 646 4 579 4 392 14 530 6 314 2 316 2 580 2 317 4 411 2 583 2 581 2 188 8 481 4 653 4 441 2 212 4 69 2 551 4 550 2 484 62 227 10 374 4 93 2 570 2 214 2 337 2 273 4 379 2 299 4 446 4 422 2 500 4 
78 2 329 2 644 2 107 2 209 2 287 2 70 2 536 2 378 2 173 2 
449 2 154 2 328 4 503 2 280 2 83 2 579 2 544 2 126 2 626 4 549 2 212 4 629 2 631 2 419 2 421 2 467 2 22 2 60 2 641 4 174 2 387 2 388 4 101 2 307 2 102 2 526 2 29 2 354 2 186 2 652 2 187 2 188 2 146 2 488 2 34 2 270 2 537 2 571 2 402 2 613 2 37 4 660 2 497 2 
641 4 382 4 196 4 407 4 562 4 508 4 105 4 393 4 201 5 85 2 144 8 165 4 464 2 215 4 37 4 216 2 404 4 
530 2 188 2 214 2 
423 2 44 2 79 2 289 2 503 2 453 2 166 2 576 2 231 2 28 2 493 2 125 22 495 2 12 10 
3 2 574 6 238 2 119 2 80 2 367 2 241 2 542 2 157 6 543 2 245 2 511 2 88 2 56 2 463 2 291 2 57 4 131 2 465 2 418 4 297 4 168 2 170 2 342 2 380 4 641 20 23 2 345 2 63 2 180 2 527 2 312 2 351 2 433 2 479 2 567 2 439 2 33 2 607 2 611 2 37 22 539 2 614 2 
190 2 
472 2 37 2 
20 2 636 2 37 4 
195 2 235 2 2 2 522 2 199 2 645 2 428 2 281 2 349 2 184 2 350 2 282 18 124 2 244 2 205 2 185 2 30 2 357 2 600 2 358 18 601 2 568 18 322 2 129 2 264 2 483 2 268 2 295 2 58 2 556 2 272 2 171 2 401 2 298 2 343 2 657 2 638 2 77 2 
191 1 502 2 152 2 412 2 
318 2 502 2 
535 2 178 2 509 2 188 2 
535 2 178 2 509 2 599 2 188 2 294 2 
211 2 271 2 535 2 502 2 277 2 188 2 
270 2 405 2 
271 2 535 2 259 2 188 2 
263 2 117 2 
585 2 285 2 
416 2 75 2 
14 2 496 2 
496 2 348 2 285 2 
461 2 496 2 285 2 
501 2 496 2 285 2 
496 2 292 2 285 2 
197 6 330 2 203 2 188 2 321 6 535 2 606 2 274 2 
649 2 7 2 
211 2 271 2 535 2 502 2 656 2 188 2 294 2 
211 2 456 2 502 2 
211 2 128 2 502 2 
309 2 649 2 152 2 
211 2 502 2 
462 2 649 2 
502 2 38 2 
649 2 91 2 152 2 
547 2 75 2 152 2 
496 2 152 2 305 2 
263 2 302 2 152 2 
257 2 152 2 285 2 
35 2 649 2 
502 2 448 2 
397 2 75 2 
584 2 496 2 
263 2 609 2 
200 2 285 2 
18 2 649 2 
164 2 285 2 
263 2 578 2 
366 2 496 2 
169 2 75 2 
82 2 649 2 91 2 152 2 
82 2 649 2 91 2 152 2 92 2 
649 2 474 2 152 2 
649 2 265 2 152 2 
175 2 73 2 514 2 587 2 
615 4 42 2 450 2 591 2 347 2 620 2 630 2 229 2 94 4 114 2 74 2 97 2 125 6 432 2 352 2 532 2 76 2 100 2 
619 2 152 2 
465 2 
1 2 3 2 574 4 238 2 239 3 80 6 156 3 241 2 157 6 506 2 243 2 246 2 582 2 511 2 90 2 418 4 250 4 168 2 21 2 253 2 255 2 23 2 590 4 345 2 177 2 180 2 182 2 430 4 527 2 433 2 353 2 435 2 260 2 32 2 607 2 610 2 611 2 37 26 278 2 539 2 447 8 614 2 43 2 119 2 367 6 542 2 369 2 628 2 56 2 213 3 291 2 57 4 131 2 296 2 297 4 375 2 380 4 641 26 61 2 218 2 219 2 63 6 311 5 312 2 647 2 65 2 651 2 564 2 567 2 479 2 233 2 498 2 234 2 573 2 
1 2 3 2 574 6 238 2 239 2 80 6 156 2 241 2 157 6 506 2 243 2 161 2 246 2 582 2 511 2 90 2 418 4 250 4 168 2 342 2 21 2 253 2 255 2 588 2 23 2 590 4 345 2 177 2 180 2 182 2 430 4 527 2 433 2 353 2 435 2 32 2 607 2 610 2 611 2 37 26 278 2 539 2 447 8 614 2 43 2 119 2 367 6 542 2 543 2 55 2 628 2 56 2 213 2 291 2 57 4 131 2 296 2 297 4 375 2 468 2 380 4 641 26 61 2 218 2 63 6 311 4 312 2 647 2 65 2 651 2 564 2 567 2 479 2 233 2 498 2 234 2 573 2 
575 2 
158 2 301 2 
194 2 3 2 238 2 406 2 45 10 504 2 157 4 8 4 123 2 410 4 510 2 51 2 87 2 54 2 414 6 15 2 89 4 286 2 372 2 56 2 291 2 335 2 167 2 131 2 418 2 336 2 554 2 132 8 338 2 297 2 137 2 172 8 59 4 557 2 254 2 641 6 473 2 523 6 303 2 593 2 225 2 140 4 104 2 433 2 565 4 31 6 485 2 569 2 193 2 230 4 269 2 396 2 325 2 491 2 361 2 608 2 276 2 37 12 659 4 614 2 
194 2 3 2 238 2 406 2 45 10 504 2 157 4 8 4 622 2 624 2 123 2 410 4 510 2 87 2 13 2 54 2 414 8 15 2 89 4 286 2 56 2 372 2 291 2 335 2 167 2 131 2 418 2 336 2 554 2 132 8 297 2 338 2 137 2 172 8 59 4 557 2 254 2 641 6 473 2 523 8 303 2 593 2 225 2 140 4 104 2 433 2 565 4 31 6 485 2 569 2 193 2 230 4 269 2 396 2 491 2 361 2 608 2 276 2 37 12 659 4 614 2 41 4 
31 2 89 4 406 2 523 2 303 2 230 2 193 2 593 2 269 2 8 4 225 2 137 2 123 2 510 2 557 2 659 2 565 2 87 2 
3 2 238 2 406 2 45 6 504 2 157 4 8 4 123 2 410 4 510 2 51 2 87 2 13 2 54 2 414 6 15 2 89 4 286 2 372 2 56 2 291 2 335 2 167 2 131 2 418 2 336 2 554 2 132 4 338 2 297 2 137 2 172 4 59 4 557 2 254 2 641 6 473 2 523 6 303 2 593 2 225 2 140 4 104 2 433 2 565 4 31 4 485 2 569 2 193 2 230 4 269 2 396 2 325 2 491 2 361 2 608 2 276 2 37 12 659 4 614 2 
3 2 238 2 406 2 45 6 504 2 157 4 8 4 123 2 410 4 510 2 51 2 87 2 54 2 414 6 15 2 89 4 286 2 372 2 56 2 291 2 335 2 167 2 131 2 418 2 336 2 554 2 132 4 338 2 297 2 137 2 172 4 59 4 557 2 254 2 641 6 473 2 523 4 303 2 593 2 225 2 140 4 104 2 391 2 433 2 565 4 31 6 485 2 569 2 193 2 230 4 269 2 396 2 325 2 491 2 361 2 608 2 276 2 37 12 659 4 614 2 
194 2 3 2 238 2 406 2 45 6 504 2 157 4 8 4 123 2 410 4 510 2 51 2 87 2 54 2 414 6 15 2 89 4 286 2 372 2 56 2 291 2 335 2 167 2 131 2 418 2 336 2 554 2 132 4 338 2 297 2 137 2 172 8 59 4 557 2 254 2 641 6 473 2 523 6 303 2 593 2 225 2 140 4 104 2 433 2 565 4 31 6 485 2 569 2 193 2 230 4 269 2 396 2 325 2 491 2 361 2 608 2 276 2 37 12 659 4 614 2 
194 2 3 2 238 2 406 2 45 10 504 2 157 4 8 4 123 2 410 4 510 2 51 2 87 2 54 2 414 8 15 2 89 4 286 2 372 2 56 2 291 2 335 2 167 2 131 2 418 2 336 2 554 2 132 8 338 2 297 2 137 2 172 8 59 4 557 2 254 2 641 6 473 2 523 6 303 2 593 2 225 2 140 4 104 2 391 2 433 2 565 4 31 8 485 2 569 2 193 2 230 4 269 2 396 2 325 2 491 2 361 2 608 2 276 2 37 12 659 4 614 2 
194 2 3 2 238 2 406 2 45 10 504 2 157 4 8 4 123 2 410 4 510 2 51 2 87 2 54 2 414 6 15 2 89 4 286 2 372 2 56 2 291 2 335 2 167 2 131 2 418 2 336 2 554 2 132 8 338 2 297 2 137 2 172 8 59 4 557 2 254 2 641 6 473 2 523 6 303 2 593 2 225 2 140 4 104 2 433 2 565 4 31 6 485 2 569 2 193 2 230 4 269 2 396 2 325 2 491 2 361 2 608 2 276 2 37 12 659 4 614 2 
3 2 156 2 504 2 157 6 8 4 510 2 332 2 10 2 162 2 511 2 15 4 335 2 167 2 336 4 338 2 168 2 20 6 342 2 172 2 23 2 521 7 345 2 180 2 523 4 182 2 527 2 529 2 355 10 356 2 31 8 32 2 190 6 193 2 359 1 538 2 361 2 37 46 39 1 539 2 40 6 45 2 367 6 541 2 542 2 543 2 202 6 50 2 370 2 207 2 371 2 54 2 546 1 56 2 372 2 213 2 373 2 57 4 554 2 375 2 376 2 59 4 557 2 380 4 381 8 383 1 386 2 62 1 63 8 559 1 224 6 225 2 391 4 565 4 567 2 71 2 569 2 230 4 395 2 396 2 232 2 399 2 572 6 573 2 574 6 238 2 406 2 80 6 241 2 243 4 409 6 410 6 86 2 246 2 87 2 414 12 89 4 90 2 249 2 418 4 95 2 252 1 254 2 253 2 424 6 258 6 590 4 593 2 429 4 594 2 104 4 433 2 598 2 436 2 440 2 603 7 113 2 266 6 607 2 269 2 115 2 608 2 610 2 611 2 276 2 118 6 447 4 614 2 617 6 119 2 452 1 623 2 123 2 283 2 457 2 460 1 286 2 291 2 131 2 296 2 297 4 137 2 635 6 641 24 473 2 472 6 303 2 140 8 311 2 312 12 315 2 145 6 479 2 320 4 485 2 325 2 491 2 490 6 492 2 659 4 
574 6 3 2 238 2 406 2 80 6 156 2 504 2 241 2 157 6 8 4 9 2 243 4 409 6 410 6 510 2 86 2 10 2 332 2 162 2 246 4 87 2 414 12 15 4 511 2 90 2 89 4 335 2 249 2 167 2 418 4 336 4 250 2 95 2 338 2 168 2 20 6 342 2 172 6 253 2 254 2 424 6 23 2 258 6 590 4 345 2 523 8 180 2 182 2 593 2 429 4 594 2 527 2 104 4 529 2 433 2 355 10 598 2 436 2 356 2 31 8 32 2 190 6 440 2 266 6 113 2 193 2 269 2 607 2 538 2 115 2 361 2 610 4 608 2 611 2 118 6 276 2 37 48 539 2 447 8 40 6 614 2 194 4 617 6 119 2 45 2 367 6 541 2 542 2 623 2 543 2 283 2 123 2 50 2 202 6 370 2 457 2 207 2 371 2 54 2 286 2 372 2 56 2 213 2 373 2 291 2 57 4 131 2 296 4 554 2 297 4 376 2 137 2 375 2 635 6 59 4 557 2 380 4 381 8 641 26 386 2 472 6 473 2 63 8 303 2 390 2 224 6 140 8 225 2 311 2 312 12 315 2 565 4 145 6 479 2 567 2 320 4 485 2 71 2 569 2 230 4 395 2 396 2 325 2 232 2 490 6 491 2 399 2 492 2 572 6 573 2 659 4 
574 6 3 2 238 2 406 2 80 6 156 2 504 2 241 2 157 6 8 4 9 2 243 4 409 6 410 6 510 2 86 2 10 2 332 2 162 2 246 4 87 2 414 12 15 4 511 2 90 2 89 4 335 2 249 2 167 2 418 4 336 4 250 2 95 2 338 2 168 2 20 6 342 2 172 6 253 2 254 2 424 6 23 2 258 6 590 4 345 2 523 8 180 2 182 2 593 2 429 4 594 2 527 2 104 4 529 2 433 2 355 10 598 2 436 2 356 2 31 8 32 2 190 6 440 2 266 6 113 2 193 2 269 2 607 2 538 2 115 2 361 2 610 4 608 2 611 2 118 6 276 2 37 48 539 2 447 8 40 6 614 2 194 4 617 6 119 2 45 6 367 6 541 2 542 2 623 2 543 2 283 2 123 2 50 2 202 6 370 2 457 2 207 2 371 2 54 2 286 2 372 2 56 2 213 2 373 2 291 2 57 4 131 2 296 4 554 2 132 4 297 4 376 2 137 2 375 2 635 6 59 4 557 2 380 4 381 8 641 26 386 2 472 6 473 2 63 8 303 2 390 2 224 6 140 8 225 2 311 2 312 12 315 2 565 4 145 6 479 2 567 2 320 4 485 2 71 2 569 2 230 4 395 2 396 2 325 2 232 2 490 6 491 2 399 2 492 2 572 6 573 2 659 4 
3 2 156 4 504 2 157 6 8 4 9 2 510 2 10 2 332 2 162 2 13 2 511 2 15 4 335 2 334 6 167 2 336 4 338 2 168 2 20 12 342 2 172 6 23 2 345 2 180 2 523 10 182 4 527 2 529 2 355 8 356 2 31 10 32 2 533 6 190 12 193 2 538 2 361 2 37 52 539 2 40 6 194 4 45 6 367 8 541 2 542 2 543 2 202 12 50 2 370 2 207 2 371 2 53 2 54 2 56 2 372 2 213 4 373 2 552 2 57 4 554 2 375 2 376 2 59 4 557 2 380 4 381 8 386 2 63 12 560 6 390 2 224 6 225 2 391 2 565 4 567 2 71 2 569 2 230 4 395 2 396 2 232 2 399 2 572 6 573 4 236 2 574 6 238 2 406 2 80 8 241 2 242 6 243 4 409 6 410 6 246 4 87 2 414 16 90 2 89 4 249 2 418 4 250 2 95 2 254 2 253 2 424 12 258 6 590 6 426 6 593 2 429 4 594 2 104 4 433 2 598 2 436 2 440 2 113 2 266 12 607 2 269 2 115 2 608 2 610 4 611 2 275 2 276 2 118 6 447 10 614 2 616 6 617 6 119 2 121 6 623 2 123 2 283 2 457 2 458 2 127 2 286 2 291 2 131 2 296 4 132 4 297 4 137 2 635 6 639 6 641 24 473 2 472 12 303 2 140 8 311 4 312 10 315 2 142 2 145 6 479 2 320 4 485 2 487 2 325 2 491 2 490 6 492 2 659 4 153 6 
194 2 406 2 45 4 523 6 303 2 593 2 8 2 140 2 225 2 104 2 123 2 410 2 565 4 87 2 414 4 54 2 31 6 89 2 286 2 372 2 569 2 167 2 193 2 230 4 396 2 325 2 554 2 132 4 338 2 361 2 608 2 172 6 59 2 37 4 254 2 
574 6 3 2 238 2 406 2 80 6 156 3 241 2 157 6 8 2 243 2 410 2 84 2 86 2 333 2 87 2 414 4 511 2 89 2 90 2 167 2 418 4 338 2 168 2 342 2 172 6 253 2 254 2 23 2 590 4 345 2 523 6 180 2 593 2 527 2 104 2 433 2 355 2 31 6 111 2 193 2 607 2 361 2 608 2 611 2 276 2 37 28 539 2 614 2 194 2 119 2 45 2 367 6 120 2 542 2 543 2 123 2 54 2 286 2 56 2 372 2 213 3 291 2 57 4 131 2 465 2 554 2 555 2 297 4 375 2 59 2 380 4 641 24 63 8 303 2 140 2 225 2 311 3 312 4 563 2 565 4 567 2 479 2 480 3 482 2 569 2 230 4 396 2 325 2 655 2 
338 2 192 2 608 2 
338 2 192 2 608 2 
3 2 574 6 238 2 80 2 241 2 157 6 8 2 243 6 410 4 510 2 331 2 246 4 13 4 414 16 15 4 511 2 90 2 89 2 247 2 415 2 335 2 167 2 418 4 336 2 338 4 168 2 342 2 172 6 23 2 345 2 180 2 523 12 427 2 593 2 429 2 527 2 104 4 433 2 355 2 531 2 31 12 32 4 192 2 602 2 607 2 538 2 610 4 608 6 611 2 37 24 447 4 539 2 40 2 614 2 194 4 119 2 45 6 367 2 542 2 543 2 283 2 123 2 457 2 52 2 627 4 56 2 291 2 57 4 131 2 296 4 132 4 297 4 135 2 375 2 377 2 138 2 59 2 557 2 558 2 380 4 217 2 641 16 218 4 643 2 63 2 310 2 225 4 140 4 311 2 312 4 141 2 391 4 313 2 565 4 567 2 479 2 320 2 147 2 485 2 569 2 230 4 491 2 403 4 659 4 
641 2 320 2 301 2 643 2 147 2 346 2 56 2 605 2 312 2 137 2 376 2 355 2 531 2 518 2 10 2 37 4 40 2 
3 2 574 6 238 2 80 2 504 2 241 2 157 6 8 2 243 6 410 4 510 2 331 2 246 4 13 4 414 16 15 4 511 2 90 2 89 2 247 2 415 2 335 2 167 2 418 4 336 4 339 2 338 4 168 2 342 2 172 6 23 2 345 2 180 2 523 12 427 2 593 2 429 2 527 2 104 4 433 2 108 2 531 2 31 12 32 4 192 2 602 2 607 2 538 2 610 4 608 6 611 2 37 24 447 4 539 2 40 2 614 2 194 4 119 2 45 6 367 2 455 2 542 2 543 2 283 2 123 2 457 2 52 2 627 4 56 2 291 2 57 4 131 2 633 2 296 4 132 4 297 4 135 2 375 2 59 2 557 2 558 2 380 4 641 16 218 4 643 2 63 2 140 4 310 4 225 4 311 4 312 2 141 2 391 4 394 2 565 4 567 2 479 2 147 2 485 2 569 2 230 4 491 2 403 4 659 4 
0 2 3 2 574 6 238 2 80 2 155 2 6 2 504 2 241 2 157 6 8 2 243 6 410 4 510 2 331 2 246 4 13 4 414 16 15 4 511 2 90 2 89 2 247 2 415 2 335 2 167 2 418 4 336 4 338 4 168 2 342 2 172 6 23 2 345 2 180 2 523 12 427 2 593 2 429 2 527 2 104 4 433 2 355 2 531 2 31 12 32 4 192 2 602 2 112 2 607 2 538 2 610 4 608 6 611 2 37 24 447 4 539 2 40 2 614 2 194 4 119 2 45 6 367 2 542 2 543 2 283 2 123 2 457 2 52 2 627 4 56 2 291 2 57 4 131 2 296 4 132 4 297 4 135 2 375 2 59 2 557 2 558 2 380 4 641 16 218 4 643 2 63 2 310 2 225 4 140 4 311 2 312 4 141 2 391 4 565 4 567 2 479 2 320 2 147 2 485 2 569 2 230 4 491 2 150 2 403 4 659 4 
3 2 574 2 238 2 119 2 80 2 367 2 542 2 241 2 505 2 157 6 47 2 243 2 245 2 413 2 511 2 56 2 130 2 288 2 291 2 57 2 131 2 553 2 418 4 513 2 420 1 297 4 168 2 133 2 340 2 375 2 99 2 517 2 380 2 641 16 23 2 384 2 345 2 63 2 180 2 183 2 312 2 433 2 143 2 438 2 479 2 262 2 534 2 319 2 360 1 37 22 539 2 499 2 614 2 
641 2 589 2 590 2 63 2 80 2 367 2 156 3 477 4 103 2 311 3 408 3 459 2 189 1 566 2 110 2 66 2 213 3 443 2 466 2 151 2 37 2 253 2 573 6 519 2 139 2 
641 2 589 2 590 2 63 2 80 2 367 2 156 2 477 4 103 2 311 2 408 2 459 2 566 2 110 2 66 2 213 2 443 2 466 2 151 2 37 2 253 2 573 6 519 2 139 2 
641 2 589 2 590 2 63 2 80 2 367 2 156 2 477 4 103 2 311 2 408 2 459 2 566 2 110 2 66 2 213 2 443 2 466 2 151 2 37 2 253 2 573 6 519 2 139 2 
641 4 344 2 470 4 451 2 425 3 63 2 407 2 279 2 46 2 240 2 156 3 561 4 25 3 562 2 308 2 508 2 596 4 48 2 311 3 434 4 393 2 201 3 106 4 545 2 210 2 261 2 163 2 67 6 165 2 417 3 489 2 293 2 326 2 37 10 215 2 253 2 404 2 364 2 139 2 
641 4 344 2 470 4 196 2 451 2 425 2 63 2 407 2 279 2 46 2 240 2 156 2 561 4 25 2 562 2 308 2 508 2 596 4 48 2 311 2 434 4 201 2 393 2 106 4 545 2 210 2 261 2 163 2 67 6 165 2 464 2 417 2 324 2 489 2 293 2 326 2 37 10 215 2 253 2 404 2 364 2 139 2 
641 4 344 2 470 4 196 2 451 2 425 2 63 2 407 2 279 2 46 2 240 2 156 2 561 4 25 2 562 2 308 2 508 2 596 4 48 2 311 2 434 4 201 2 393 2 106 4 545 2 210 2 261 2 163 2 67 6 165 2 464 2 417 2 324 2 489 2 293 2 326 2 37 10 215 2 253 2 404 2 364 2 139 2 
641 4 344 2 470 4 196 2 451 2 425 2 63 2 407 2 279 2 46 2 240 2 156 2 561 4 25 2 562 2 308 2 508 2 596 4 48 2 311 2 434 4 201 2 393 2 106 4 545 2 210 2 261 2 163 2 67 6 165 2 464 2 417 2 324 2 489 2 293 2 326 2 37 10 215 2 253 2 404 2 364 2 139 2 
641 4 344 2 470 4 196 2 451 2 425 2 63 2 407 2 279 2 46 2 240 2 156 2 561 4 25 2 562 2 308 2 508 2 596 4 48 2 311 2 434 4 201 2 393 2 106 4 545 2 210 2 261 2 163 2 67 6 165 2 464 2 417 2 324 2 489 2 293 2 326 2 37 10 215 2 253 2 404 2 364 2 139 2 
548 2 476 2 122 2 19 2 233 2 612 2 640 2 
220 2 237 2 548 2 528 2 49 2 68 2 
641 8 176 2 238 2 618 1 64 2 221 1 389 2 222 2 431 2 159 1 204 2 109 1 323 2 290 2 248 2 654 2 228 2 17 2 445 2 266 2 398 2 251 2 341 2 379 1 37 10 363 2 
641 6 382 2 471 2 327 2 196 2 407 6 181 2 306 2 562 6 508 6 48 2 393 6 201 9 105 2 206 2 186 2 144 2 16 2 146 2 148 2 165 6 464 2 324 1 293 2 96 2 515 2 37 6 215 6 216 1 404 6 
478 2 641 1 470 2 198 2 179 2 632 1 577 2 625 2 362 2 648 2 434 2 106 2 650 4 116 2 37 1 300 2 208 2 437 7 
478 2 470 2 198 2 179 4 577 4 625 2 362 2 648 2 434 2 106 2 116 2 650 4 300 2 208 4 437 6 
478 2 641 1 470 2 198 2 179 8 632 1 577 8 625 2 362 6 648 2 434 2 106 2 116 8 650 4 37 1 300 2 208 8 437 10 
478 2 470 2 198 2 179 2 577 2 625 2 648 2 434 2 106 2 650 2 300 2 208 2 437 2 
11 2 586 2 442 1 226 2 149 1 
226 2 11 2 586 2 
226 2 11 2 586 2 
226 2 11 2 586 2 
134 2 

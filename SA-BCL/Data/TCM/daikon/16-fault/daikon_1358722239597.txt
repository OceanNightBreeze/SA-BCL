#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 696 787 420 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (475,631) (475,631) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 304 774 632 717 653 212 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 214 618 290 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (259,451) (259,451) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 686 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 508 344 289 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 172 719 795 (46,206,325,720,723,736,832) (606,846) 83 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (475,631) 704 105 151 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 531 704 105 151 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 841 704 105 151 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 531 704 105 151 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:eltsGT([II)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eq(FF)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 915 | = null
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Debug:logOn()Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaCharStream:FillBuff()V
daikon.PptSlice2:arity()I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:subsetOf([F[D)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
daikon.Quant:memberOf(I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | OPERATOR | 107346 | <= -> ==
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:gte(II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus([I)[I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:isMissing(I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 184000 | = null
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String; | RETURN | 6378 | return null
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41719 | return null
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE:pow(II)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:setDiff([I[I)[I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 86983 | return null
daikon.Quant:subsetOf([F[F)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ProglangType:dimensions()I
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Debug:logDetail()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | STATEMENT | 5655 | stmt -> ;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lt(II)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptName:isEnterPoint()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51688 | 64 -> 1
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.Invariant:getConfidence()D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Assert:assertTrue(Z)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7988 | if (x) -> if (!x)
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:memberOf(D[F)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Ppt:Ppt()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:noDups([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:eltsLT([II)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:lte(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptSlice1:arity()I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:ne(II)Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eq(DD)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName:hashCode()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:union([I[I)[I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfo:new_ppt()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.PptSlice0:arity()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:memberOf(J[J)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:InvMap()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I | ASSIGN | 23529 | = null
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.ModBitTracker:num_samples()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaCharStream:readChar()C
daikon.Quant:slice([III)[I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern:intern([J)[J
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ProglangType:baseIsFloat()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariants:Invariants()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfo:relate_var()V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern:numIntArrays()I
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
265 2 184 6 495 5 795 2 32 4 449 2 888 2 719 2 106 2 303 2 891 2 567 2 305 2 287 2 310 2 570 2 835 2 573 4 516 2 736 2 438 2 
376 5 206 4 184 15 495 8 244 8 795 7 32 13 447 2 888 7 302 2 719 7 172 2 893 1 46 3 287 6 310 6 606 2 835 7 17 1 438 7 
264 14 143 4 878 2 209 2 708 2 384 2 27 4 586 2 61 2 816 2 711 2 420 2 718 2 600 10 866 2 604 2 696 2 568 6 77 2 114 2 288 4 430 2 639 2 786 2 312 2 199 2 50 2 14 2 787 2 204 2 
208 2 4 2 410 2 100 2 661 2 418 2 722 2 153 2 536 2 703 2 
374 2 1 2 319 2 55 2 842 2 165 2 381 2 558 2 390 2 326 2 277 2 631 4 690 2 861 2 504 2 455 2 170 2 568 2 396 2 232 2 337 2 572 2 875 2 88 2 519 2 809 2 811 2 707 4 345 2 524 2 31 2 711 4 147 2 475 4 665 2 191 2 776 4 718 2 361 4 48 2 368 2 119 2 788 2 121 2 
184 9 495 8 32 8 795 4 475 4 888 4 325 4 858 8 631 4 720 8 719 4 222 1 723 2 172 1 287 4 310 4 835 4 438 4 
143 2 568 2 586 2 
0 2 484 2 39 2 223 2 602 2 879 2 242 10 728 2 730 2 103 22 135 2 551 2 191 2 19 2 
359 2 33 2 475 2 6 2 892 4 121 2 129 2 163 2 631 2 
11 6 38 2 168 2 138 2 670 2 183 2 656 2 636 6 575 2 542 6 777 2 
377 2 792 6 793 2 197 6 347 2 475 2 803 2 353 6 261 6 464 4 52 2 220 4 631 2 
719 8 654 2 184 17 495 16 444 2 287 8 310 8 32 16 795 8 475 4 835 8 573 12 888 8 820 2 715 2 736 6 438 8 355 4 85 4 302 2 631 4 
511 6 812 4 
410 2 
501 2 
597 2 631 2 
124 2 269 2 631 4 
207 2 683 2 128 2 212 2 3 2 129 2 557 16 684 2 130 2 797 2 216 3 798 2 799 2 560 1 8 2 562 2 800 6 565 2 692 2 566 2 227 1 13 3 229 2 462 1 338 2 339 1 576 2 20 2 807 2 705 2 240 2 472 16 23 5 28 3 26 1 588 2 814 2 815 2 146 1 475 32 818 2 594 3 150 2 821 32 247 2 717 2 358 1 154 4 155 2 251 3 725 2 43 2 44 4 254 2 727 2 488 3 365 3 490 2 608 24 257 2 731 2 732 2 735 2 612 2 370 6 263 2 741 2 614 2 493 2 616 1 744 2 57 2 60 2 59 1 167 3 63 4 65 2 66 16 169 2 274 16 68 2 860 2 631 34 632 2 863 2 754 2 72 2 73 1 285 2 78 2 509 2 80 2 79 2 759 2 640 2 510 2 760 2 292 3 398 2 514 2 293 1 646 2 763 1 647 1 404 2 87 2 649 32 518 2 517 2 651 2 766 3 765 2 652 4 653 2 655 1 90 2 880 4 882 3 770 2 525 6 773 2 886 2 188 24 529 1 774 2 414 2 416 1 194 3 195 2 304 2 425 1 782 2 541 2 540 4 543 2 307 2 673 2 432 4 897 2 677 6 
555 2 375 2 125 2 92 2 618 2 270 6 214 2 712 2 528 2 854 2 245 2 662 6 483 2 421 2 752 2 71 4 826 6 505 2 286 6 544 2 331 2 290 2 311 2 463 2 550 2 679 2 371 2 553 2 
680 2 295 2 887 1 24 2 654 2 112 2 568 2 849 2 
140 2 24 2 112 2 
351 2 24 2 112 2 
281 2 599 2 767 2 
24 2 112 2 
599 2 607 2 
24 2 62 2 
281 2 599 2 629 2 
281 2 895 2 196 2 
281 2 249 2 97 2 
592 2 281 2 76 2 
281 2 34 2 391 2 
131 2 599 2 
749 2 24 2 
748 2 196 2 
249 2 200 2 
592 2 664 2 
104 2 391 2 
373 2 599 2 
428 2 391 2 
592 2 780 2 
387 2 249 2 
512 2 196 2 
778 2 281 2 599 2 629 2 
778 2 281 2 599 2 642 2 629 2 
281 2 599 2 322 2 
281 2 599 2 747 2 
56 2 784 2 496 2 231 2 
250 2 273 2 568 2 849 2 
680 2 250 2 273 2 682 2 568 2 849 2 
323 2 24 2 654 2 112 2 568 2 849 2 
788 2 569 2 
654 2 827 2 568 2 849 2 
592 2 10 2 
625 2 391 2 
196 2 590 2 
249 2 609 2 
802 2 249 2 391 2 
249 2 415 2 391 2 
249 2 746 2 391 2 
249 2 391 2 617 2 
568 2 306 2 849 2 259 6 451 2 876 2 
739 2 599 2 
357 2 328 2 742 2 383 2 829 2 93 4 211 2 175 2 5 2 117 2 513 2 82 2 103 6 643 4 35 2 217 2 530 2 86 2 
281 2 350 2 
281 2 24 2 611 2 
24 2 453 2 
490 2 
442 2 2 2 212 2 129 2 213 2 684 2 797 2 798 2 562 2 800 2 565 2 229 2 574 2 339 2 576 2 470 4 705 2 585 2 475 26 818 2 821 6 596 2 717 2 358 4 155 2 154 8 725 2 43 2 831 2 47 2 727 2 157 2 255 2 731 2 732 2 735 2 370 2 263 2 741 2 59 2 619 2 63 8 65 2 66 6 272 2 853 2 631 26 863 2 632 2 754 2 864 2 285 2 507 4 78 2 79 2 759 4 760 2 514 2 402 2 649 4 404 2 517 2 651 6 652 4 653 2 296 2 880 4 525 6 773 2 886 2 414 2 540 4 113 2 543 2 432 4 677 4 
442 2 212 2 129 2 213 2 684 2 132 2 797 2 324 2 798 2 562 2 800 2 565 2 229 2 574 2 339 2 576 2 470 4 807 2 705 2 585 2 815 2 475 26 818 2 821 6 596 2 717 2 358 2 155 2 154 8 725 2 43 2 831 2 47 2 727 2 157 2 255 2 731 2 732 2 735 2 370 2 263 2 741 2 59 2 619 2 63 8 65 2 66 6 853 2 631 26 863 2 632 2 754 2 392 2 864 2 285 2 507 4 78 2 79 2 759 4 760 2 514 2 402 2 649 4 404 2 517 2 651 6 652 4 653 2 296 2 880 4 525 6 773 2 886 2 414 2 540 4 543 2 432 4 202 2 677 6 
400 2 
867 2 417 2 
380 4 743 2 266 2 844 2 166 2 386 2 446 2 134 2 687 2 751 2 798 2 279 2 688 4 9 4 631 12 136 2 137 2 11 6 138 4 757 2 457 4 636 6 395 2 458 2 228 2 638 8 758 2 645 2 575 4 238 2 705 2 144 2 183 2 880 2 709 2 710 2 525 4 771 2 475 6 414 2 419 2 152 2 595 2 667 2 356 2 38 2 725 2 253 2 43 2 783 10 540 2 542 6 309 2 836 4 731 2 732 2 436 4 437 2 552 2 441 8 
380 4 266 2 844 2 166 2 386 2 446 2 134 2 687 2 751 2 798 2 279 2 688 4 9 4 631 12 136 2 137 2 11 6 138 4 757 2 457 4 636 8 458 2 228 2 638 8 758 2 645 2 575 4 238 2 705 2 144 2 183 2 880 2 298 4 709 2 710 2 525 4 771 2 475 6 481 2 414 2 419 2 152 2 595 2 667 2 356 2 777 2 38 2 825 2 725 2 253 2 43 2 540 2 783 10 542 8 309 2 836 4 732 2 731 2 436 4 437 2 552 2 441 8 
136 2 137 2 11 2 138 2 253 2 457 4 542 2 386 2 687 2 751 2 436 4 437 2 575 2 419 2 9 2 595 2 667 2 356 2 
380 4 743 2 266 2 844 2 166 2 386 2 446 2 134 2 687 2 751 2 798 2 279 2 688 4 9 4 631 12 136 2 137 2 11 4 138 4 757 2 457 4 636 6 395 2 458 2 228 2 638 4 758 2 645 2 575 4 238 2 705 2 144 2 183 2 880 2 709 2 710 2 525 4 771 2 475 6 414 2 419 2 152 2 595 2 667 2 356 2 777 2 725 2 253 2 43 2 783 6 540 2 542 6 309 2 836 4 731 2 732 2 436 4 437 2 552 2 441 4 
380 4 743 2 266 2 844 2 166 2 386 2 446 2 134 2 687 2 751 2 798 2 279 2 688 4 9 4 631 12 136 2 137 2 11 6 138 4 757 2 457 4 636 6 395 2 458 2 228 2 638 4 758 2 645 2 575 4 238 2 705 2 144 2 183 2 880 2 709 2 710 2 525 4 771 2 475 6 414 2 419 2 152 2 595 2 667 2 356 2 670 2 725 2 253 2 43 2 783 6 540 2 542 4 309 2 836 4 731 2 732 2 436 4 437 2 552 2 441 4 
380 4 743 2 266 2 844 2 166 2 386 2 446 2 134 2 687 2 751 2 798 2 279 2 688 4 9 4 631 12 136 2 137 2 11 6 138 4 757 2 457 4 636 6 395 2 458 2 228 2 638 4 758 2 645 2 575 4 238 2 705 2 144 2 183 2 880 2 709 2 710 2 525 4 771 2 475 6 414 2 419 2 152 2 595 2 667 2 356 2 38 2 725 2 253 2 43 2 783 6 540 2 542 6 309 2 836 4 731 2 732 2 436 4 437 2 552 2 441 8 
380 4 743 2 266 2 844 2 166 2 386 2 446 2 134 2 687 2 751 2 798 2 279 2 688 4 9 4 631 12 136 2 137 2 11 8 138 4 757 2 457 4 636 8 395 2 458 2 228 2 638 8 758 2 645 2 575 4 238 2 705 2 144 2 183 2 880 2 709 2 710 2 525 4 771 2 475 6 414 2 419 2 152 2 595 2 667 2 356 2 38 2 670 2 725 2 253 2 43 2 783 10 540 2 542 6 309 2 836 4 731 2 732 2 436 4 437 2 552 2 441 8 
380 4 743 2 266 2 844 2 166 2 386 2 446 2 134 2 687 2 751 2 798 2 279 2 688 4 9 4 631 12 136 2 137 2 11 6 138 4 757 2 457 4 636 6 395 2 458 2 228 2 638 8 758 2 645 2 575 4 238 2 705 2 144 2 183 2 880 2 709 2 710 2 525 4 771 2 475 6 414 2 419 2 152 2 595 2 667 2 356 2 38 2 725 2 253 2 43 2 783 10 540 2 542 6 309 2 836 4 731 2 732 2 436 4 437 2 552 2 441 8 
442 2 213 2 446 2 687 2 452 2 7 2 688 4 9 4 11 8 457 4 693 2 228 2 458 2 465 6 466 2 21 1 470 4 238 4 705 2 243 1 474 1 709 2 710 2 475 24 477 6 714 2 482 10 717 2 725 2 253 2 43 2 42 2 727 2 732 2 731 2 733 2 735 2 263 2 54 6 741 2 266 2 494 2 63 4 65 12 66 6 751 2 275 6 501 6 279 2 754 2 757 2 283 6 284 1 285 2 78 2 79 2 81 2 758 2 760 2 515 2 517 2 89 2 525 6 771 2 772 4 773 2 98 2 99 7 527 2 540 4 783 2 542 4 545 2 309 2 789 2 552 2 124 6 321 2 129 2 797 2 134 4 798 2 562 2 800 2 137 2 136 2 138 4 334 2 141 2 571 6 575 4 576 2 342 2 807 2 144 2 579 2 585 2 348 1 815 2 818 2 821 8 354 1 595 2 152 2 596 4 356 2 823 1 597 6 358 1 155 2 154 4 836 8 369 6 370 2 161 2 372 6 380 6 844 2 166 2 385 6 386 2 847 7 621 2 851 2 631 46 863 2 636 12 395 2 869 6 637 1 173 4 645 2 649 2 651 6 181 2 652 4 406 2 183 4 880 4 658 2 659 2 409 6 660 2 886 2 411 6 414 2 889 8 419 2 890 6 193 1 667 2 670 4 672 2 427 2 894 2 674 2 432 4 677 6 436 4 437 2 441 2 
442 2 124 6 321 2 129 2 213 2 446 2 797 4 134 4 687 2 798 2 7 2 452 2 688 4 9 4 562 4 800 2 136 2 137 2 11 8 138 4 225 2 693 2 457 4 458 2 228 2 334 2 141 2 571 6 465 6 575 4 466 2 576 2 577 2 342 2 470 4 807 2 238 4 705 2 144 2 579 2 585 2 709 2 710 2 815 2 475 26 477 6 714 2 482 10 818 2 821 8 152 2 595 2 717 2 596 4 356 2 597 6 38 4 154 8 155 2 253 2 725 2 42 2 43 2 727 2 369 6 836 8 731 2 732 2 733 2 735 2 370 2 263 2 161 2 372 6 54 6 741 2 380 6 266 2 494 2 166 2 844 2 385 6 386 2 621 2 63 8 65 12 851 2 66 6 751 2 501 6 275 6 279 2 631 48 863 2 754 2 757 2 283 6 636 12 395 2 285 2 869 6 173 4 78 2 79 2 81 2 759 2 758 2 760 4 515 2 645 2 649 2 651 6 517 2 181 2 652 4 89 2 406 2 183 4 880 4 658 2 659 2 660 2 409 6 525 6 772 4 771 2 773 2 886 2 98 2 527 2 411 6 414 2 889 8 890 6 419 2 667 2 672 2 783 2 540 4 542 8 545 2 427 2 309 2 894 2 674 2 432 4 436 4 677 6 437 2 552 2 789 2 441 6 
442 2 124 6 321 2 129 2 213 2 446 2 797 4 134 4 687 2 798 2 7 2 452 2 688 4 9 4 562 4 800 2 136 2 137 2 11 8 138 4 225 2 693 2 457 4 458 2 228 2 334 2 141 2 571 6 465 6 575 4 466 2 576 2 577 2 342 2 470 4 807 2 238 4 705 2 144 2 579 2 585 2 709 2 710 2 815 2 475 26 477 6 714 2 482 10 818 2 821 8 152 2 595 2 717 2 596 4 356 2 597 6 38 4 154 8 155 2 253 2 725 2 42 2 43 2 727 2 369 6 836 8 731 2 732 2 733 2 735 2 370 2 263 2 161 2 372 6 54 6 741 2 380 6 266 2 494 2 166 2 844 2 385 6 386 2 621 2 63 8 65 12 851 2 66 6 751 2 501 6 275 6 279 2 631 48 863 2 754 2 757 2 283 6 636 12 395 2 285 2 869 6 173 4 78 2 79 2 638 4 81 2 759 2 758 2 760 4 515 2 645 2 649 2 651 6 517 2 181 2 652 4 89 2 406 2 183 4 880 4 658 2 659 2 660 2 409 6 525 6 772 4 771 2 773 2 886 2 98 2 527 2 411 6 414 2 889 8 890 6 419 2 667 2 672 2 783 6 540 4 542 8 545 2 427 2 309 2 894 2 674 2 432 4 436 4 677 6 437 2 552 2 789 2 441 6 
442 2 213 4 446 2 687 2 452 2 7 2 688 4 9 4 11 10 225 2 457 4 693 2 228 2 458 2 699 6 465 6 466 2 470 6 238 4 705 2 709 2 710 2 475 24 477 12 713 6 714 2 482 8 717 2 38 4 253 2 725 2 43 2 42 2 727 2 732 2 731 2 733 2 735 2 260 6 263 2 54 6 741 2 266 2 494 2 63 10 65 10 66 8 751 2 275 6 501 12 276 6 279 2 754 4 757 2 74 6 283 6 285 2 78 2 79 2 81 2 759 2 758 2 760 4 515 2 517 2 89 2 768 2 525 6 771 2 772 4 773 2 98 2 527 2 777 2 540 4 783 6 542 10 545 2 309 2 116 2 552 2 789 2 316 2 318 2 124 12 126 6 321 2 129 2 797 4 134 4 798 2 562 4 800 4 137 2 136 2 138 4 334 2 141 2 571 6 340 2 575 4 576 2 577 2 342 2 806 6 807 2 144 2 579 2 585 2 815 2 145 6 818 2 821 12 595 2 152 2 596 4 356 2 597 12 155 2 154 10 836 8 369 6 370 4 161 2 372 12 380 6 844 2 166 2 385 6 386 2 621 2 851 2 631 52 863 2 634 2 865 2 636 16 395 2 869 12 173 4 638 4 645 2 649 4 651 8 181 2 652 4 406 2 183 4 880 4 658 2 409 6 660 2 886 2 411 6 414 2 889 8 419 2 890 6 667 2 670 2 423 6 672 2 427 2 894 2 674 2 432 4 898 2 677 6 436 4 437 2 441 6 
380 2 183 2 166 2 844 2 386 2 710 2 771 2 446 2 687 2 751 2 688 2 279 2 419 2 595 2 631 4 356 2 11 6 38 2 138 4 757 2 253 2 457 2 636 4 783 4 395 2 542 6 228 2 309 2 638 4 758 2 836 2 436 2 645 2 575 4 441 6 
442 2 129 2 446 2 687 2 798 2 688 2 800 3 11 6 138 4 457 2 694 2 228 2 575 4 576 2 470 4 807 2 705 2 144 2 585 2 815 2 710 2 475 24 818 2 482 2 821 8 595 2 596 2 356 2 38 2 40 2 155 2 725 2 253 2 43 2 727 2 490 2 729 2 836 2 732 2 731 2 735 2 370 3 263 2 741 2 380 2 166 2 844 2 57 2 386 2 65 4 66 6 751 2 279 2 860 2 631 28 863 2 757 2 636 4 395 2 285 2 78 2 79 2 758 2 645 2 649 3 517 2 651 6 652 4 183 2 880 4 523 3 659 2 525 6 771 2 773 2 886 2 414 2 419 2 195 2 540 4 783 2 542 6 309 2 432 4 118 2 313 2 436 2 677 6 441 6 
164 2 757 2 309 2 
164 2 757 2 309 2 
123 2 442 2 129 2 686 2 445 2 446 2 797 4 134 2 798 2 688 2 9 4 562 4 136 2 11 12 138 4 457 2 458 2 16 2 465 2 236 2 575 4 576 2 807 2 238 4 705 2 585 2 589 2 815 2 476 4 475 16 482 2 821 2 716 2 152 2 595 2 717 4 596 6 38 4 358 2 154 4 155 2 725 2 43 2 485 2 47 4 726 2 727 2 159 2 836 4 731 2 732 2 733 2 735 2 263 2 161 2 741 2 164 2 380 4 166 2 386 2 63 4 850 2 65 4 66 2 751 4 278 2 631 24 863 2 757 4 636 16 285 2 173 2 78 2 79 2 638 4 81 2 760 4 649 2 517 2 651 2 652 4 183 4 880 4 881 2 525 6 772 2 187 2 773 2 886 2 414 2 301 2 667 2 777 4 670 4 540 4 783 6 542 12 309 6 432 4 434 2 201 2 549 4 677 6 436 2 552 2 441 6 
137 2 867 2 25 2 95 2 589 2 698 2 173 2 894 2 187 2 65 2 475 2 732 2 482 2 465 2 7 2 278 2 631 4 
123 2 790 2 442 2 129 2 686 2 445 2 446 2 797 4 134 4 798 2 688 2 9 4 562 4 136 2 11 12 138 4 457 2 458 2 16 2 236 2 575 4 576 2 807 2 238 2 705 2 585 2 709 2 815 2 476 4 475 14 821 2 716 2 152 2 595 2 717 4 596 6 38 4 358 1 154 4 155 2 725 2 43 2 47 4 726 4 487 2 727 2 836 4 159 2 731 2 732 2 735 2 263 2 161 2 741 2 164 2 380 4 166 2 58 2 386 2 63 4 65 2 66 2 751 4 278 2 631 20 863 2 757 4 636 16 285 2 78 2 79 2 638 4 81 2 871 2 760 4 872 2 649 4 517 2 651 2 652 4 183 4 880 4 525 6 772 2 187 2 773 2 886 2 414 2 301 2 667 2 777 4 670 4 540 4 783 6 542 12 309 6 432 4 434 2 549 4 677 6 436 2 552 2 441 6 
123 2 442 2 205 2 129 2 686 2 445 2 446 2 797 4 134 4 798 2 688 2 9 4 562 4 136 2 11 12 138 4 457 2 458 2 16 2 465 2 236 2 575 4 576 2 807 2 238 4 705 2 585 2 589 2 709 2 815 2 476 4 475 16 482 2 821 2 716 2 152 2 595 2 717 4 596 6 38 4 358 1 154 4 155 2 725 2 43 2 47 4 726 2 727 2 159 2 836 4 610 2 731 2 732 2 733 2 735 2 263 2 161 2 741 2 164 2 380 4 166 2 386 2 63 4 65 4 66 2 751 4 278 2 859 2 631 24 863 2 757 4 636 16 285 2 173 2 78 2 79 2 638 4 81 2 760 4 649 2 517 2 651 2 652 4 183 4 880 4 94 2 525 6 772 2 187 2 773 2 886 2 300 2 414 2 301 2 667 2 777 4 670 4 540 4 783 6 542 12 309 6 432 4 434 2 549 4 677 6 436 2 552 2 441 6 
681 4 443 2 444 2 213 46 448 2 452 2 454 2 691 2 456 2 693 4 694 2 226 14 697 2 459 4 460 2 230 2 461 2 235 2 701 12 18 2 17 4 702 2 467 2 470 12 469 2 468 2 239 2 471 16 705 2 706 2 22 2 472 4 241 10 30 2 32 16 475 38 478 2 479 16 37 2 717 4 719 8 721 2 248 16 40 2 41 2 723 2 252 8 725 2 43 2 46 4 486 2 727 2 489 2 729 2 255 2 491 2 256 2 731 2 732 2 51 2 735 2 262 2 263 2 737 24 738 6 740 10 741 2 745 2 494 2 268 12 59 2 495 13 63 24 64 6 65 2 497 2 66 14 271 2 750 4 67 16 502 6 503 2 70 2 754 20 755 14 756 2 75 4 285 2 287 8 78 4 508 2 79 2 289 2 291 2 83 2 515 2 84 2 517 4 764 2 89 2 296 2 520 4 521 2 768 2 297 6 96 2 523 2 769 2 525 6 773 2 102 2 775 2 533 2 535 4 539 2 540 4 110 3 308 2 310 8 116 2 548 2 118 2 314 2 316 2 554 3 556 2 318 2 320 10 321 2 129 4 557 4 795 8 133 3 796 2 798 2 800 16 801 2 332 4 139 2 333 2 335 2 336 2 574 2 339 2 340 2 341 4 576 4 804 10 807 4 808 4 578 2 343 2 344 2 810 2 582 2 583 10 585 2 587 2 813 2 815 4 149 2 352 12 818 2 821 28 822 12 596 2 598 2 360 2 358 2 156 4 155 2 154 26 363 2 831 2 830 2 832 4 364 2 157 2 605 2 835 8 837 2 838 2 370 19 840 2 162 2 376 8 378 14 843 2 382 3 845 2 846 4 620 3 624 4 852 4 853 2 389 2 626 1 627 2 628 2 630 2 857 2 631 48 862 12 863 4 634 2 864 14 635 4 865 2 171 2 172 4 393 2 394 2 868 4 174 16 176 2 641 2 399 2 874 2 178 4 402 2 403 2 180 2 877 2 649 19 651 14 652 10 880 4 184 19 408 2 658 2 185 4 186 2 885 2 886 2 413 2 412 2 663 2 888 8 414 2 192 2 669 2 671 2 424 2 426 12 429 2 431 2 432 8 675 2 896 2 435 2 676 2 677 16 438 8 900 4 899 2 
651 2 470 2 740 2 241 4 583 2 29 2 213 6 620 2 475 2 66 2 818 2 821 2 503 2 800 2 631 2 360 2 424 2 486 2 308 2 874 2 370 2 840 2 180 2 649 2 
651 2 470 2 740 2 241 4 583 2 29 2 213 6 620 2 475 2 66 2 818 2 821 2 503 2 800 2 631 2 360 2 424 2 486 2 308 2 874 2 370 2 840 2 180 2 649 2 
651 2 470 2 740 2 241 4 583 2 29 2 213 6 620 2 475 2 66 2 818 2 821 2 503 2 800 2 631 2 360 2 424 2 486 2 308 2 874 2 370 2 840 2 180 2 649 2 
554 3 127 2 495 1 557 2 795 2 750 2 502 6 561 4 503 2 631 10 69 2 330 4 172 1 287 2 179 2 294 2 649 3 472 2 184 6 884 4 32 4 475 4 189 1 888 2 818 2 821 2 668 3 719 2 824 2 422 2 252 4 110 3 832 2 785 2 115 2 834 4 310 2 546 2 835 2 258 4 734 2 370 3 438 2 
554 2 472 2 184 4 127 2 495 4 884 4 557 2 795 2 32 4 475 4 750 2 888 2 818 2 821 2 561 4 502 6 503 2 668 2 69 2 631 10 719 2 824 2 330 4 422 2 252 4 110 2 832 2 115 2 785 2 834 4 287 2 546 2 310 2 835 2 258 4 734 2 370 2 179 2 438 2 294 2 649 2 
554 2 472 2 184 4 127 2 495 4 884 4 557 2 795 2 32 4 475 4 750 2 888 2 818 2 821 2 561 4 502 6 503 2 668 2 69 2 631 10 719 2 824 2 330 4 422 2 252 4 110 2 832 2 115 2 785 2 834 4 287 2 546 2 310 2 835 2 258 4 734 2 370 2 179 2 438 2 294 2 649 2 
554 2 472 2 184 4 127 2 495 4 884 4 557 2 795 2 32 4 475 4 750 2 888 2 818 2 821 2 561 4 502 6 503 2 668 2 69 2 631 10 719 2 824 2 330 4 422 2 252 4 110 2 832 2 115 2 785 2 834 4 287 2 546 2 310 2 835 2 258 4 734 2 370 2 179 2 438 2 294 2 649 2 
554 2 472 2 184 4 127 2 495 4 884 4 557 2 795 2 32 4 475 4 750 2 888 2 818 2 821 2 561 4 502 6 503 2 668 2 69 2 631 10 719 2 824 2 330 4 422 2 252 4 110 2 832 2 115 2 785 2 834 4 287 2 546 2 310 2 835 2 258 4 734 2 370 2 179 2 438 2 294 2 649 2 
547 2 537 2 593 2 839 2 857 2 848 2 
547 2 349 2 108 2 864 2 581 2 91 2 473 2 
237 2 317 2 61 1 591 2 526 2 475 8 817 2 480 2 819 2 689 2 631 10 329 2 12 2 109 1 282 2 111 2 43 2 828 2 367 2 366 2 49 2 312 1 761 1 15 2 122 1 372 2 
719 2 376 2 184 4 172 4 495 4 46 2 846 2 795 2 32 2 835 2 83 2 888 2 838 2 17 4 438 2 
805 7 534 2 633 2 330 2 538 2 603 2 522 2 833 2 884 2 834 2 177 2 475 1 158 1 700 2 190 2 234 2 678 4 631 1 
805 6 534 2 633 2 330 2 538 2 603 2 522 2 833 4 884 2 834 2 177 2 700 4 190 2 234 4 678 4 
805 10 534 2 633 2 330 2 538 2 603 8 522 2 833 8 884 2 834 2 177 6 475 1 158 1 700 8 190 2 234 8 678 4 631 1 
805 2 534 2 633 2 330 2 538 2 522 2 833 2 884 2 834 2 700 2 190 2 234 2 678 2 
315 1 556 2 210 2 444 2 215 2 691 2 695 2 702 2 341 4 467 2 807 4 704 2 343 1 578 2 815 4 475 20 479 2 352 2 151 2 154 4 363 2 51 2 162 2 745 2 631 22 863 4 75 4 393 2 174 2 78 4 399 2 178 4 877 1 517 4 652 8 408 1 96 2 883 2 185 4 769 2 299 1 413 2 775 2 105 2 669 2 539 1 432 6 677 14 440 2 
613 2 791 2 556 2 379 2 615 2 267 2 794 2 623 2 685 2 622 2 559 2 388 2 450 4 499 2 498 4 855 2 500 2 218 2 219 2 563 2 631 46 753 2 221 2 863 2 327 2 280 2 564 2 224 4 506 2 870 4 78 2 397 2 233 2 399 2 873 2 401 2 142 2 644 2 648 2 650 4 517 2 467 1 807 3 652 20 405 2 704 2 182 4 580 2 407 2 584 2 883 2 346 2 769 2 185 4 815 3 148 2 475 44 299 2 101 2 531 2 105 2 822 6 666 2 532 2 36 2 246 2 151 2 107 2 358 2 779 2 724 2 154 31 781 2 671 4 601 2 362 2 198 2 432 20 433 2 203 2 492 6 51 1 160 2 120 2 677 45 439 2 53 2 
517 2 652 6 807 4 556 2 704 2 182 2 580 2 657 2 883 2 185 2 769 2 815 4 475 14 299 2 388 2 498 2 856 2 105 2 151 2 631 14 863 2 327 2 154 4 224 2 78 2 432 6 762 2 399 2 677 14 841 2 
517 2 791 2 652 6 807 4 556 2 704 2 182 2 580 2 883 2 185 2 769 2 815 4 475 14 299 2 388 2 498 2 105 2 531 2 532 2 151 2 631 16 753 2 863 2 221 2 327 2 358 2 154 4 224 2 78 2 432 6 399 2 677 16 
45 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 700 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 433 682 283 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V FAILED junit.framework.AssertionFailedError 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 901 778 951 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 901 778 951 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (490,884) (490,884) (235,463) (235,463) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (490,884) (490,884) (235,463) (235,463) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (490,884) (490,884) (235,463) (235,463) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (490,884) (490,884) (235,463) (235,463) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName:hashCode()I
utilMDE.Intern:intern([D)[D
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.LimitedSizeIntSet:size()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Ppt:Ppt()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:justified()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptName:isCombinedExitPoint()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:subsetOf([B[I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ModBitTracker:split(I)I
daikon.Debug:logOn()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:eq(FF)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:isReverse([I[I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:slice([III)[I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaCharStream:backup(I)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.ProglangType:isArray()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:memberOf(J[J)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String; | ASSIGN | 16305 | = null
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.RootNode:RootNode()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 105786 | = null
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:gte(II)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd([I)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | STATEMENT | 972 | stmt -> ;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:noDups([I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ValueTuple:size()I
daikon.test.FormatTestCase:passes()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ModBitTracker:num_samples()I
daikon.Quant:eltsEqual([II)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:internSubsequence([III)[I
daikon.ProglangType:baseIsIntegral()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:num_sets()I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Assert:assertTrue(Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice1:num_samples()I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:isFloat()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:eq(JJ)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logDetail()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfo:relate_var()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:intersection([I[I)[I
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus; | RETURN | 17563 | return null
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:union([I[I)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:gcd_differences([I)I | CONSTANT | 5121 | 0 -> 1
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:sameLength([I[I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | ASSIGN | 20429 | = null
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaCharStream:getEndLine()I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Node:Node()V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:memberOf(S[S)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:logDetail()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptSlice0:arity()I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:gt(II)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([J[J)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I | CONDITION | 23649 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern:numIntArrays()I
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([J)[J
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ProglangType:isPointerFileRep()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.PptSlice2:arity()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
501 2 732 2 881 2 892 2 225 2 459 2 446 2 488 2 26 4 
493 2 759 2 883 6 424 2 327 2 808 2 633 2 204 6 826 6 195 2 910 2 
501 2 169 2 691 2 66 6 3 6 459 2 129 2 548 4 786 4 52 2 367 6 803 6 154 2 
422 2 0 4 879 10 393 8 571 4 459 6 542 2 885 16 426 10 913 2 788 8 857 26 705 8 615 10 501 6 948 6 525 16 864 6 475 2 21 2 924 4 267 2 741 29 449 2 927 4 53 16 712 10 805 10 597 8 212 12 
180 4 20 6 
15 2 
128 2 544 2 130 2 248 2 364 2 726 2 913 2 552 2 677 2 439 2 501 4 198 2 446 2 736 2 622 2 143 4 925 2 747 2 748 2 510 4 329 2 332 2 459 4 642 2 818 2 161 2 823 2 40 2 404 4 164 2 704 2 289 2 223 2 109 2 167 2 407 4 589 2 172 2 654 2 118 2 227 2 595 2 955 2 839 2 
0 2 422 2 603 6 779 2 546 8 426 18 788 18 857 46 728 4 554 6 615 18 501 4 864 4 19 4 741 53 626 4 805 18 211 4 92 6 212 21 690 6 879 6 878 2 393 6 459 4 815 4 885 28 100 2 34 4 35 2 284 6 948 4 525 28 412 4 53 28 712 18 840 2 769 4 843 2 
700 2 
241 2 849 2 458 2 686 2 161 2 448 2 319 10 55 2 535 2 339 2 844 2 255 2 583 22 468 2 
0 2 932 2 879 4 484 2 426 2 885 2 788 2 889 2 857 4 615 2 112 2 525 2 864 2 741 6 230 2 53 2 712 2 805 2 628 2 297 2 566 2 212 2 906 2 
525 8 426 4 885 8 412 4 741 16 927 2 53 8 712 4 805 4 627 2 769 4 662 2 92 6 857 12 212 4 554 6 615 4 
888 2 88 2 688 2 937 2 181 6 476 2 61 2 366 2 
717 2 573 2 431 2 13 2 15 2 115 2 116 2 91 2 25 2 664 2 
353 3 125 2 718 1 355 2 356 2 357 2 486 1 852 2 131 2 360 1 365 2 492 1 608 2 854 16 8 2 610 6 497 3 373 2 374 4 729 2 858 1 614 3 501 32 732 2 617 2 618 2 734 2 863 2 504 2 18 4 259 1 737 24 385 2 262 2 865 2 740 2 386 2 266 5 868 8 23 2 387 2 872 3 508 3 749 16 151 2 273 16 27 2 638 2 28 6 753 2 155 8 279 2 280 2 398 2 32 3 31 2 281 12 162 2 402 2 645 2 36 1 649 2 406 2 519 3 518 4 290 2 523 2 171 2 292 2 896 2 652 2 410 1 651 4 899 2 176 2 531 4 177 2 900 16 767 2 54 2 533 2 766 2 415 2 298 1 663 2 538 3 905 8 62 1 302 2 907 3 308 2 908 2 909 1 186 2 673 2 189 2 789 12 791 4 678 2 312 2 199 24 200 2 80 2 797 2 85 4 203 2 561 2 564 2 447 2 322 2 320 1 565 2 450 32 806 1 324 3 810 2 95 1 457 2 459 34 934 3 694 4 336 2 103 2 940 32 104 6 577 2 942 2 829 2 587 2 706 2 949 2 114 2 472 2 832 2 591 3 474 2 950 1 709 2 710 1 479 2 954 6 231 2 480 2 598 2 121 2 714 2 600 1 715 2 963 2 
459 2 685 2 
459 4 515 2 173 2 
405 2 
482 2 240 2 775 2 602 30 1 4 606 4 182 2 781 2 670 2 427 2 489 2 185 6 547 2 361 4 372 4 675 2 435 2 436 6 376 2 498 2 11 2 137 4 316 2 680 2 317 6 556 8 201 2 738 6 209 4 742 6 928 6 325 6 274 2 809 6 215 2 635 2 637 2 395 8 157 2 574 2 30 2 396 2 99 2 101 4 220 2 699 6 37 2 286 6 337 2 340 30 758 6 585 2 761 2 762 2 707 2 228 6 51 2 658 30 711 2 413 6 348 6 300 6 904 2 352 2 419 4 
63 2 724 2 807 2 543 1 
63 2 346 2 
657 2 63 2 571 2 816 2 202 2 704 2 153 2 
63 2 676 2 153 2 
63 2 153 2 86 2 
724 2 830 2 196 2 
63 2 153 2 
830 2 443 2 
63 2 773 2 
724 2 830 2 226 2 
724 2 127 2 349 2 
724 2 861 2 877 2 
724 2 579 2 124 2 
763 2 724 2 359 2 
830 2 918 2 
63 2 567 2 
349 2 375 2 
264 2 877 2 
304 2 124 2 
106 2 359 2 
470 2 830 2 
666 2 359 2 
41 2 124 2 
893 2 877 2 
349 2 282 2 
724 2 830 2 226 2 621 2 
724 2 821 2 830 2 226 2 621 2 
724 2 830 2 239 2 
724 2 830 2 653 2 
445 2 249 2 624 2 113 2 
588 2 816 2 580 2 704 2 
588 2 672 2 816 2 202 2 580 2 704 2 
63 2 571 2 816 2 704 2 59 2 153 2 
172 2 391 2 
571 2 816 2 704 2 208 2 
124 2 160 2 
359 2 499 2 
713 2 349 2 
648 2 877 2 
466 2 359 2 877 2 
4 2 359 2 877 2 
158 2 359 2 877 2 
359 2 827 2 877 2 
539 6 816 2 245 2 704 2 500 6 315 2 142 2 634 2 
830 2 9 2 
568 2 751 2 96 2 933 2 593 2 49 2 898 4 491 2 295 2 478 4 623 2 190 2 148 2 941 2 582 2 74 2 583 6 931 2 
724 2 429 2 
533 2 
242 2 357 2 365 2 854 6 610 2 374 4 501 26 732 2 618 2 863 2 18 4 259 2 262 2 385 2 865 2 740 2 868 2 387 6 630 2 873 2 389 2 151 2 27 2 28 6 753 2 638 2 279 2 398 2 281 8 400 2 402 2 645 2 406 2 290 2 522 4 170 2 44 2 651 4 652 2 531 2 54 2 415 1 302 2 303 2 785 4 186 2 912 2 189 2 789 8 791 2 555 2 80 2 920 2 85 4 203 2 447 2 318 2 321 2 450 6 806 4 811 2 810 2 812 2 459 26 694 2 940 4 104 5 584 2 949 2 587 4 829 2 114 1 832 2 474 2 950 2 709 2 954 2 480 2 
242 2 357 2 365 2 854 6 610 2 374 4 729 2 501 26 732 2 618 2 863 2 18 4 259 2 385 2 262 2 867 2 865 2 740 2 868 2 387 6 873 2 389 2 151 2 27 2 28 6 753 2 638 2 279 2 398 2 281 8 402 2 645 2 406 2 290 2 760 2 522 4 44 2 651 4 652 2 531 2 54 2 415 2 302 2 303 2 785 4 186 2 912 2 189 2 789 8 791 2 194 2 555 2 80 2 920 2 85 4 203 2 447 2 318 2 321 2 450 6 806 2 811 2 810 2 812 2 459 26 694 2 940 4 104 6 584 2 949 2 587 4 829 2 114 2 832 2 474 2 950 2 709 2 954 2 480 2 
119 2 
856 2 607 2 
424 2 604 2 851 2 780 4 721 2 243 2 784 2 247 2 362 2 910 4 725 2 368 2 252 4 612 2 374 2 10 2 136 2 195 2 313 2 314 4 501 6 441 2 735 2 383 2 921 2 17 4 85 2 262 2 385 2 204 6 745 4 149 8 455 2 327 4 930 2 27 2 456 2 94 2 28 4 883 6 156 2 572 2 459 12 279 2 98 2 643 10 219 2 697 2 461 4 163 2 38 2 826 6 290 2 949 2 47 2 832 2 117 2 179 2 958 2 841 8 
424 2 604 2 851 2 780 4 721 2 243 2 784 2 247 2 362 2 910 4 493 2 725 2 368 2 252 4 612 2 374 2 10 2 136 2 195 2 313 2 314 4 501 6 441 2 735 2 383 2 921 2 17 4 85 2 262 2 385 2 204 8 866 4 745 4 146 2 149 8 455 2 327 4 930 2 27 2 456 2 94 2 28 4 883 6 156 2 572 2 459 12 279 2 643 10 219 2 461 4 163 2 38 2 222 2 826 8 290 2 949 2 47 2 832 2 117 2 179 2 958 2 841 8 
883 2 156 2 572 2 780 2 383 2 921 2 721 2 784 2 910 2 725 2 745 4 327 2 10 2 930 2 826 2 136 2 456 2 314 4 
424 2 604 2 851 2 780 4 721 2 243 2 784 2 247 2 362 2 910 4 493 2 725 2 368 2 252 4 612 2 374 2 10 2 136 2 313 2 314 4 501 6 441 2 735 2 383 2 921 2 17 4 85 2 262 2 385 2 204 6 745 4 149 4 455 2 327 4 930 2 27 2 456 2 94 2 28 4 883 4 156 2 572 2 459 12 279 2 98 2 643 6 219 2 697 2 461 4 163 2 38 2 826 6 290 2 949 2 47 2 832 2 117 2 179 2 958 2 841 4 
424 2 604 2 851 2 780 4 721 2 243 2 784 2 247 2 362 2 910 4 725 2 368 2 252 4 612 2 374 2 10 2 136 2 313 2 314 4 501 6 441 2 735 2 383 2 921 2 17 4 85 2 262 2 385 2 204 6 745 4 149 4 455 2 327 4 930 2 27 2 456 2 94 2 28 4 883 6 156 2 572 2 459 12 279 2 98 2 643 6 219 2 697 2 461 4 163 2 38 2 826 4 759 2 290 2 949 2 47 2 832 2 117 2 179 2 958 2 841 4 
424 2 604 2 851 2 780 4 721 2 243 2 784 2 247 2 362 2 910 4 725 2 368 2 252 4 612 2 374 2 10 2 136 2 195 2 313 2 314 4 501 6 441 2 735 2 383 2 921 2 17 4 85 2 262 2 385 2 204 6 745 4 149 8 455 2 327 4 930 2 27 2 456 2 94 2 28 4 883 6 156 2 572 2 459 12 279 2 98 2 643 6 219 2 697 2 461 4 163 2 38 2 826 6 290 2 949 2 47 2 832 2 117 2 179 2 958 2 841 4 
424 2 604 2 851 2 780 4 721 2 243 2 784 2 247 2 362 2 910 4 725 2 368 2 252 4 612 2 374 2 10 2 136 2 195 2 313 2 314 4 501 6 441 2 735 2 383 2 921 2 17 4 85 2 262 2 385 2 204 8 745 4 149 8 455 2 327 4 930 2 27 2 456 2 94 2 28 4 883 8 156 2 572 2 459 12 279 2 98 2 643 10 219 2 697 2 461 4 163 2 38 2 826 6 759 2 290 2 949 2 47 2 832 2 117 2 179 2 958 2 841 8 
424 2 604 2 851 2 780 4 721 2 243 2 784 2 247 2 362 2 910 4 725 2 368 2 252 4 612 2 374 2 10 2 136 2 195 2 313 2 314 4 501 6 441 2 735 2 383 2 921 2 17 4 85 2 262 2 385 2 204 6 745 4 149 8 455 2 327 4 930 2 27 2 456 2 94 2 28 4 883 6 156 2 572 2 459 12 279 2 98 2 643 10 219 2 697 2 461 4 163 2 38 2 826 6 290 2 949 2 47 2 832 2 117 2 179 2 958 2 841 8 
243 2 721 2 247 4 723 6 725 2 252 6 253 6 10 2 730 6 501 24 732 2 735 2 18 4 17 8 261 2 262 2 745 4 746 2 27 2 28 6 753 2 279 2 281 4 755 2 38 2 759 4 290 2 524 2 47 2 527 6 528 1 531 2 54 2 302 2 540 6 780 4 784 2 69 4 545 6 70 2 785 4 787 2 789 4 791 2 75 6 314 4 313 4 555 2 794 6 80 2 85 4 84 6 802 2 321 2 87 2 89 2 323 2 327 4 94 2 328 2 572 2 814 2 333 1 819 2 820 2 104 6 105 2 826 4 586 2 343 1 114 2 832 2 117 2 842 4 350 10 846 2 604 2 851 2 357 2 358 2 362 2 365 2 854 6 368 2 610 2 612 2 374 4 136 2 860 1 383 2 863 2 620 2 385 2 865 2 868 2 625 2 387 6 149 2 629 1 151 12 883 8 392 6 156 2 640 2 641 6 397 2 398 2 643 2 402 2 163 2 645 2 403 7 650 1 405 6 406 2 168 7 651 4 173 6 179 2 415 2 903 2 424 4 184 2 910 4 912 2 189 2 434 1 441 2 917 1 920 4 921 2 204 12 685 6 447 2 450 8 455 2 930 2 456 2 216 8 692 2 459 46 693 2 694 2 695 2 219 2 697 2 461 4 940 2 701 2 943 6 224 2 949 2 474 2 954 2 229 2 232 1 958 2 236 2 961 2 237 6 
604 2 851 2 358 2 721 2 243 2 357 2 247 4 362 2 723 6 365 2 854 6 725 2 368 2 610 2 252 6 253 6 612 2 374 4 10 2 730 6 136 2 732 2 501 26 735 2 863 2 383 2 620 2 17 8 18 4 261 2 385 2 262 2 865 2 868 2 625 2 746 2 745 4 387 6 149 6 151 12 27 2 753 2 28 6 392 6 883 8 640 2 156 2 279 2 641 6 397 2 643 2 398 2 281 8 402 2 163 2 645 2 755 2 38 2 405 6 406 2 290 2 524 2 47 2 651 4 527 6 173 6 531 4 54 2 179 2 415 2 903 2 302 2 540 6 424 4 780 4 184 2 69 4 784 2 545 6 70 2 785 4 910 4 787 2 912 2 189 2 789 8 791 4 195 4 75 6 313 4 314 4 794 6 555 2 441 2 920 4 80 2 921 2 84 6 85 4 204 12 685 6 802 2 447 2 87 2 321 2 323 2 89 2 450 8 327 4 455 2 930 2 456 2 328 2 94 2 216 8 570 2 814 2 572 2 692 2 693 2 459 48 694 4 695 2 219 2 819 2 102 2 461 4 697 2 820 2 940 2 104 6 105 2 701 2 943 6 826 8 224 2 586 2 587 2 949 2 114 2 832 2 474 2 117 2 229 2 954 2 958 2 842 4 350 10 236 2 237 6 961 2 846 2 
604 2 851 2 358 2 721 2 243 2 357 2 247 4 362 2 723 6 365 2 854 6 725 2 368 2 610 2 252 6 253 6 612 2 374 4 10 2 730 6 136 2 732 2 501 26 735 2 383 2 863 2 620 2 17 8 18 4 261 2 385 2 262 2 865 2 868 2 625 2 746 2 745 4 387 6 149 6 151 12 27 2 753 2 28 6 392 6 883 8 640 2 156 2 279 2 641 6 397 2 398 2 643 6 281 8 402 2 163 2 645 2 755 2 38 2 405 6 406 2 290 2 524 2 47 2 651 4 527 6 173 6 531 4 54 2 179 2 415 2 903 2 302 2 540 6 424 4 780 4 184 2 69 4 784 2 545 6 70 2 785 4 910 4 787 2 912 2 189 2 789 8 791 4 195 4 75 6 313 4 314 4 794 6 555 2 441 2 920 4 80 2 921 2 84 6 85 4 204 12 685 6 802 2 447 2 87 2 321 2 323 2 89 2 450 8 327 4 455 2 930 2 456 2 328 2 94 2 216 8 570 2 814 2 572 2 692 2 693 2 459 48 694 4 695 2 219 2 819 2 102 2 461 4 697 2 820 2 940 2 104 6 105 2 701 2 943 6 826 8 224 2 586 2 587 2 949 2 114 2 832 2 474 2 117 2 229 2 954 2 841 4 958 2 842 4 350 10 236 2 237 6 961 2 846 2 
719 2 243 2 721 2 247 4 723 6 493 2 725 2 252 6 253 6 10 2 730 6 501 24 732 2 735 2 18 4 17 8 261 2 262 2 263 6 745 4 746 2 272 2 27 2 28 6 753 2 279 2 281 10 285 2 755 2 38 2 756 6 759 2 290 2 524 2 47 2 527 6 531 4 54 2 302 2 540 6 780 4 784 2 69 4 545 12 70 2 785 6 787 2 789 10 791 4 75 12 314 4 313 4 555 2 794 6 80 2 85 4 83 2 84 12 802 2 321 2 87 2 89 2 323 2 327 4 94 2 328 2 570 2 572 2 814 2 334 6 335 2 819 2 102 2 820 2 104 6 105 2 581 2 826 10 586 2 587 2 114 2 832 2 117 2 841 4 842 4 350 8 846 2 604 2 851 2 357 2 358 2 362 2 365 2 854 8 368 2 610 4 612 2 374 4 136 2 863 2 383 2 620 2 385 2 865 2 868 4 625 2 387 8 149 6 151 10 883 10 392 6 640 2 156 2 641 6 397 2 159 6 643 6 398 2 644 6 402 2 163 2 645 2 405 12 406 2 651 4 173 12 174 6 179 2 415 2 903 2 424 4 184 2 671 6 910 4 912 4 189 2 195 4 441 2 920 4 919 2 921 2 204 16 685 12 447 2 450 12 455 2 930 2 456 2 216 8 692 2 459 52 693 2 694 4 219 2 697 2 461 4 940 4 701 2 943 6 467 6 224 2 945 6 949 2 474 2 954 4 229 2 958 2 959 2 236 2 961 2 237 6 
883 6 424 2 572 2 604 2 459 4 243 2 643 4 219 2 461 2 697 2 910 4 163 2 252 2 612 2 38 2 10 2 826 6 195 2 136 2 314 2 441 2 921 2 383 2 17 2 204 4 117 2 745 2 179 2 149 6 841 4 958 2 455 2 327 4 930 2 456 2 
604 2 243 2 357 2 365 2 854 6 368 2 610 3 252 2 612 2 254 2 374 4 10 2 136 2 501 24 732 2 863 2 383 2 17 2 18 4 385 2 262 2 865 2 386 2 745 2 387 6 149 6 151 4 27 2 275 3 28 6 753 2 883 6 639 2 279 2 643 2 402 2 163 2 645 2 38 2 406 2 290 2 651 4 899 2 533 2 54 2 179 2 415 2 302 2 424 2 785 4 910 4 189 2 195 2 314 2 555 2 441 2 80 2 920 2 921 2 82 2 85 4 204 4 564 2 447 2 321 2 450 8 327 4 455 2 930 2 689 2 456 2 572 2 459 28 695 2 219 2 461 2 697 2 940 3 104 6 826 6 949 2 114 2 471 2 832 2 474 2 117 2 954 3 958 2 350 2 
331 2 38 2 243 2 
331 2 38 2 243 2 
721 2 357 2 243 4 247 4 362 2 365 2 493 4 133 2 854 2 252 4 369 2 374 4 12 2 501 16 732 2 14 2 502 2 735 2 863 2 18 4 17 4 385 2 262 2 865 2 745 2 387 2 149 6 389 4 151 4 27 2 28 6 753 2 883 12 394 2 279 2 398 4 643 6 281 4 401 2 402 2 163 2 645 2 38 6 759 4 290 2 47 2 651 4 526 2 531 4 54 2 415 2 302 2 424 4 780 4 183 2 784 2 69 2 910 4 189 2 789 4 191 2 193 2 791 4 195 4 313 2 314 2 555 2 441 2 80 2 920 6 85 4 204 16 206 2 447 2 210 4 321 2 450 2 806 2 326 2 327 4 930 2 456 4 330 2 331 2 572 2 692 2 459 24 694 4 460 2 461 2 940 2 104 6 943 2 826 12 469 2 949 2 114 2 832 2 474 2 952 4 229 2 841 4 842 2 350 2 961 2 716 2 
501 2 380 2 640 2 459 4 832 2 575 2 69 2 70 2 206 2 549 2 725 2 856 2 369 2 326 2 151 2 943 2 350 2 
850 2 851 2 721 2 357 2 243 4 247 4 362 2 365 2 493 4 854 2 252 4 374 4 12 2 501 14 732 2 379 2 502 2 735 2 863 2 17 4 18 4 385 2 262 2 865 2 745 2 387 2 149 6 389 4 151 2 27 2 28 6 753 2 883 12 279 2 398 4 643 6 281 4 401 4 402 2 163 2 645 2 38 4 759 4 290 2 47 2 651 4 526 2 531 4 54 2 415 2 302 2 424 4 780 4 784 2 910 4 189 2 789 4 191 2 193 2 791 4 195 4 313 4 77 2 314 2 555 2 441 2 80 2 920 6 85 4 204 16 206 2 447 2 210 4 321 2 450 2 806 1 326 2 327 4 93 2 930 2 456 4 330 2 331 2 572 2 692 2 459 20 694 4 460 2 461 2 940 4 104 6 826 12 469 2 949 2 114 2 832 2 474 2 952 4 229 2 841 4 842 2 961 2 847 2 
851 2 721 2 357 2 243 4 247 4 362 2 365 2 493 4 854 2 252 4 496 2 369 2 374 4 12 2 501 16 732 2 502 2 735 2 863 2 18 4 17 4 385 2 262 2 506 2 865 2 144 2 745 2 387 2 149 6 389 4 151 4 27 2 28 6 753 2 883 12 394 2 279 2 754 2 398 4 643 6 281 4 401 2 402 2 163 2 645 2 38 6 759 4 290 2 47 2 651 4 526 2 531 4 54 2 415 2 302 2 424 4 780 4 784 2 69 2 910 4 189 2 789 4 191 2 193 2 791 4 195 4 313 4 314 2 555 2 441 2 80 2 920 6 85 4 204 16 206 2 447 2 210 4 321 2 450 2 806 1 326 2 327 4 930 2 456 4 330 2 331 2 572 2 692 2 459 24 694 4 460 2 461 2 940 2 104 6 943 2 826 12 110 2 469 2 949 2 114 2 832 2 474 2 952 4 229 2 841 4 842 2 350 2 961 2 
719 2 485 2 242 2 722 2 5 2 6 16 250 3 251 6 494 1 727 4 254 2 731 2 732 4 501 38 733 2 18 10 260 2 259 2 262 2 505 2 739 2 22 2 741 15 268 2 269 4 270 4 507 4 271 2 509 2 27 2 273 4 750 2 275 2 753 2 28 6 277 4 279 2 281 24 35 2 283 2 285 2 755 2 287 4 514 2 757 12 42 2 517 4 43 2 290 2 521 2 44 14 45 2 525 8 50 3 529 4 296 2 764 2 532 16 53 8 54 2 534 1 58 2 768 2 57 2 536 4 301 4 302 2 303 2 774 2 541 2 65 16 776 2 305 2 779 4 307 2 783 1 782 2 309 2 71 2 785 12 550 2 787 2 788 4 310 2 789 25 72 10 553 4 311 2 792 2 554 6 793 2 79 2 555 2 795 2 559 4 80 4 558 4 560 16 81 2 82 2 85 4 83 2 563 2 800 24 799 2 318 2 90 2 89 2 805 4 811 2 812 2 569 2 813 2 97 2 335 2 104 17 105 2 107 10 578 2 824 2 338 2 581 2 584 2 341 2 828 2 114 5 344 2 832 2 590 1 594 1 835 2 836 2 837 2 838 2 345 2 120 2 122 14 846 2 351 2 354 10 126 2 605 2 357 4 853 2 132 2 365 4 854 14 609 2 134 2 610 19 135 2 855 3 370 2 857 12 374 4 377 4 615 4 616 2 378 2 381 2 863 2 384 2 140 2 385 2 865 2 869 2 868 20 870 2 147 2 387 14 871 16 873 2 874 2 151 2 152 10 636 4 393 6 639 2 398 4 885 8 402 2 645 2 891 2 165 6 166 12 406 2 895 2 408 3 651 8 411 6 412 4 900 4 659 2 660 2 661 14 415 5 417 2 418 14 420 2 421 1 423 2 669 12 426 4 430 6 912 46 914 2 189 4 192 2 433 2 437 12 440 2 681 1 920 2 682 2 919 2 684 12 922 4 923 4 447 2 452 2 450 28 929 2 212 6 213 12 217 2 459 46 936 2 696 2 939 2 940 19 698 3 221 2 944 2 224 2 947 2 946 2 949 2 948 4 471 2 474 2 950 2 477 2 954 16 956 2 712 4 957 4 959 2 236 4 962 2 238 10 
501 2 126 2 459 2 785 2 954 2 134 2 120 2 940 2 854 2 698 2 912 6 450 2 610 2 107 2 387 2 824 2 578 2 72 4 192 2 311 2 845 2 238 2 406 2 828 2 
501 2 126 2 459 2 785 2 954 2 134 2 120 2 940 2 854 2 698 2 912 6 450 2 610 2 107 2 387 2 824 2 578 2 72 4 192 2 311 2 845 2 238 2 406 2 828 2 
501 2 126 2 459 2 785 2 954 2 134 2 120 2 940 2 854 2 698 2 912 6 450 2 610 2 107 2 387 2 824 2 578 2 72 4 192 2 311 2 845 2 238 2 406 2 828 2 
393 4 667 2 459 4 426 2 885 2 250 3 251 2 940 3 7 3 610 3 790 2 857 4 615 2 257 2 828 2 406 2 501 2 948 2 915 2 558 2 293 2 525 2 796 2 50 3 741 5 450 2 900 2 53 2 712 2 805 2 273 2 
422 2 393 4 667 2 459 4 426 2 885 2 250 2 251 2 940 2 7 2 788 2 610 2 790 2 857 4 615 2 257 2 828 2 406 2 501 2 948 2 915 2 558 2 293 2 525 2 796 2 50 2 741 4 450 2 900 2 53 2 712 2 805 2 212 2 273 2 
422 2 393 4 667 2 459 4 426 2 885 2 250 2 251 2 940 2 7 2 788 2 610 2 790 2 857 4 615 2 257 2 828 2 406 2 501 2 948 2 915 2 558 2 293 2 525 2 796 2 50 2 741 4 450 2 900 2 53 2 712 2 805 2 212 2 273 2 
422 2 393 4 667 2 459 4 426 2 885 2 250 2 251 2 940 2 7 2 788 2 610 2 790 2 857 4 615 2 257 2 828 2 406 2 501 2 948 2 915 2 558 2 293 2 525 2 796 2 50 2 741 4 450 2 900 2 53 2 712 2 805 2 212 2 273 2 
422 4 393 4 667 2 459 4 426 2 885 2 250 2 251 2 940 2 7 2 788 4 610 2 790 2 857 4 615 2 257 2 828 2 406 2 501 2 948 2 915 2 558 2 293 2 525 2 796 2 50 2 741 4 450 2 900 2 53 2 712 2 805 2 212 4 273 2 
464 2 703 2 307 2 473 2 798 2 214 2 
44 2 890 2 777 2 46 2 935 2 246 2 798 2 
665 1 64 2 848 2 29 2 459 10 576 2 363 2 462 2 888 1 432 2 501 8 290 2 442 2 862 2 84 2 708 2 801 2 88 1 804 2 451 2 765 2 596 2 150 2 687 1 601 2 876 1 
690 4 752 2 422 2 393 4 459 6 128 2 546 2 885 6 426 6 788 2 552 2 39 2 857 12 554 4 615 6 501 6 948 2 733 2 525 6 530 2 529 2 412 2 741 16 53 6 90 2 712 6 626 2 805 6 632 2 212 4 
501 1 880 2 444 2 459 1 294 2 562 6 656 2 655 2 887 2 145 2 743 1 551 2 56 2 647 2 454 4 613 2 256 2 390 2 
880 4 444 4 294 2 562 6 656 2 655 2 887 2 145 2 551 2 56 2 647 2 454 4 613 2 256 2 390 4 
501 1 880 8 444 8 459 1 294 2 562 10 656 6 655 2 887 2 145 2 743 1 551 2 56 2 647 2 454 4 613 2 256 8 390 8 
880 2 444 2 294 2 562 2 655 2 887 2 145 2 551 2 56 2 647 2 454 2 613 2 390 2 
485 2 357 4 853 2 6 2 365 4 494 1 859 2 731 2 501 20 16 2 18 8 22 2 269 4 270 4 744 1 24 2 750 2 514 2 651 6 901 2 534 1 902 2 415 4 417 2 65 2 778 2 783 1 550 2 789 4 440 2 79 2 681 1 559 4 80 4 684 2 922 4 97 2 459 20 104 14 702 1 341 2 947 2 114 4 590 2 834 2 951 2 594 2 
2 2 425 2 778 2 244 2 487 2 357 2 668 2 669 6 71 4 853 2 428 2 365 2 188 2 911 2 789 38 611 2 371 2 73 2 438 4 679 2 76 2 501 44 78 2 197 2 916 2 557 2 258 2 80 2 559 6 382 2 503 4 619 2 139 2 18 20 141 2 205 2 207 2 926 4 744 2 806 2 453 2 388 2 631 2 875 2 276 2 511 2 97 2 278 2 459 46 512 2 817 2 33 2 218 2 938 2 399 2 886 2 513 2 104 42 822 2 465 4 646 2 108 2 288 2 516 2 111 4 520 2 947 2 894 2 291 2 833 2 48 6 651 20 590 2 897 2 834 2 951 2 594 4 953 2 175 2 178 2 901 2 233 2 416 2 234 2 123 2 599 4 299 2 960 2 772 2 60 2 
483 2 67 2 778 2 485 2 68 2 720 4 357 2 853 2 365 2 550 2 789 14 859 2 438 2 731 2 440 2 501 26 80 2 559 6 258 2 138 2 503 2 382 2 16 2 18 10 922 6 22 4 269 6 270 2 744 2 453 2 750 2 97 2 459 26 817 2 513 2 104 20 514 2 111 2 341 2 947 2 520 2 894 2 114 4 833 2 651 8 834 2 951 2 594 2 347 4 901 2 481 4 415 4 770 2 537 2 771 2 60 2 417 2 
65 10 425 2 778 2 357 2 783 2 853 2 187 2 6 2 365 2 494 2 674 2 789 14 438 6 501 26 916 4 681 6 80 2 559 8 503 6 683 2 18 14 684 10 265 2 744 2 24 2 806 2 453 2 631 2 875 4 882 2 97 2 459 28 817 2 33 2 938 2 886 4 513 2 104 38 825 4 111 6 947 2 520 2 342 2 114 10 409 4 48 6 651 14 592 2 834 2 951 2 594 2 953 2 175 4 901 2 178 2 534 2 414 2 902 2 415 10 960 4 123 4 772 2 
831 2 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 
463 1 495 1 306 1 884 1 235 1 490 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 188 550 618 744 937 409 397 65 9 839 663 562 230 842 451 539 450 50 985 136 424 650 982 902 140 152 381 585 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (544,1037) 221 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 1067 801 757 835 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 442 333 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 758 1050 333 
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 442 333 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:lte(II)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3_3()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:lexGTE([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression; | ASSIGN | 68700 | = null
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaCharStream:readChar()C
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:eltsLT([II)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_22()Z
daikon.Quant:ne(II)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_12()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ModBitTracker:split(I)I
daikon.VarInfo:relate_var()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:min([I)I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:isArray()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_163()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_62()Z
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:gt(II)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:subsetOf([D[F)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_161()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3R_75()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eq(FF)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.Invariant:logOn()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_2_5(I)Z
daikon.Debug:logOn()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3R_61()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_114()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
jtb.JavaCharStream:getEndLine()I
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_85()Z
daikon.diff.Node:Node()V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.FuzzyFloat:eq(DD)Z | CONDITION | 2791 | if (x) -> if (!x)
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Debug:logDetail()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:slice([III)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([I)[I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_15()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_57()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.MathMDE:negate(I)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_3R_63()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaCharStream:ReadByte()C
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:modulus([I)[I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:union([I[I)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal; | RETURN | 91149 | return null
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:lexGT([I[I)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_14()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:noDups([I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I | ASSIGN | 181361 | = null
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd([I)I
daikon.Quant:lt(II)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3_4()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.ProglangType:dimensions()I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3_10()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:new_ppt()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String; | CONDITION | 3378 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7310 | = null
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:eq(DD)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:memberOf(J[J)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_123()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:memberOf(S[S)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_119()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 133346 | return null
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3_5()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptSlice2:arity()I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3R_89()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3_35()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
daikon.PptSlice1:arity()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:eltsGT([II)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ProglangType:isIntegral()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_54()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
933 2 655 4 171 2 696 2 695 2 828 2 705 2 814 2 555 2 
1084 2 601 2 715 2 819 2 448 2 55 2 135 6 589 2 1046 2 493 6 789 6 
713 4 943 6 513 2 695 2 516 2 719 6 122 6 645 2 386 2 159 2 1039 6 555 2 524 4 
775 16 525 4 731 4 598 2 600 8 338 10 446 10 695 6 608 10 474 6 421 10 920 16 248 2 621 2 107 2 1080 2 885 4 286 26 790 16 1083 8 832 29 834 12 119 6 636 10 639 8 223 2 768 2 438 4 368 8 555 6 
571 4 200 6 
69 2 
339 2 695 4 605 2 341 2 344 2 914 2 917 4 477 4 983 2 851 4 921 2 621 2 281 2 1052 2 541 2 74 2 214 2 216 2 429 2 997 2 544 2 642 2 24 2 938 2 814 2 555 4 494 2 560 2 568 2 743 2 569 2 312 2 955 2 318 2 110 2 175 2 176 2 894 2 117 4 125 2 1091 2 970 2 1037 2 908 2 
525 2 775 32 598 2 338 16 445 4 471 2 446 16 695 4 608 16 57 4 474 4 37 6 787 2 8 6 421 6 920 32 617 6 66 4 285 6 11 4 286 48 790 32 751 4 1083 18 925 2 832 54 834 22 119 4 636 16 430 2 996 8 639 6 932 2 967 4 27 6 28 4 905 2 838 6 555 4 
78 2 836 2 544 2 
1089 2 212 2 260 2 277 2 261 6 697 2 439 14 137 2 356 2 
525 2 775 2 338 2 446 2 608 2 309 2 474 2 421 4 920 2 286 4 790 2 750 2 830 2 1083 2 832 6 834 2 679 2 636 2 935 2 1002 2 406 2 299 2 224 2 
775 8 790 8 731 2 924 2 338 4 832 16 446 4 834 4 636 4 608 4 967 4 27 6 920 8 66 4 940 2 285 6 286 12 
735 2 497 2 233 4 53 2 568 2 877 4 609 2 783 2 879 4 6 2 104 2 276 10 851 4 622 4 956 2 1023 10 541 4 583 14 510 2 511 2 1025 4 755 2 995 4 19 4 324 2 1061 2 1064 4 544 8 722 62 78 2 294 4 591 4 644 2 836 6 904 2 29 2 866 2 907 2 411 4 227 2 
469 2 944 2 475 2 353 2 69 2 426 2 716 2 489 2 298 2 263 2 
526 2 975 2 413 2 1 2 695 34 528 2 843 2 4 2 138 1 532 3 848 2 700 2 420 2 703 2 987 4 704 2 423 16 146 1 707 24 709 2 542 3 290 4 858 2 432 2 295 2 726 2 436 3 547 2 153 6 1005 2 553 3 868 2 1006 2 555 32 31 2 732 2 304 1 34 2 165 2 35 2 741 2 168 2 1016 2 572 2 1017 6 456 2 171 2 746 2 883 2 317 24 886 2 889 2 749 2 892 2 320 1 1024 2 759 2 1027 3 590 2 46 2 1028 2 901 2 763 2 764 1 766 2 592 2 191 16 1035 2 769 5 1040 1 336 16 470 2 779 1 602 1 51 1 56 1 1043 2 201 1 202 2 611 3 61 2 347 2 205 8 476 3 1047 16 785 2 613 3 616 4 351 2 619 2 68 2 625 2 626 2 627 4 1055 2 1056 2 927 6 635 2 641 2 222 2 81 12 363 2 802 2 364 2 804 8 936 4 82 2 646 2 86 1 648 2 370 3 815 6 226 2 1071 1 496 4 1072 1 89 2 945 2 817 2 238 3 236 1 658 8 241 3 96 2 820 2 244 2 823 2 245 2 954 4 389 2 109 2 508 2 392 4 958 1 1082 2 112 3 959 2 676 32 680 2 961 2 682 2 963 2 1088 2 519 32 521 2 129 2 410 2 
418 2 695 2 
391 2 695 4 847 2 
48 2 
265 20 842 2 2 14 269 2 3 46 846 2 273 2 275 4 537 2 9 2 539 2 538 2 855 2 287 4 857 2 543 20 23 2 26 8 550 2 300 2 551 2 302 2 556 16 870 4 871 8 303 6 562 2 564 24 876 4 875 2 570 2 36 2 577 46 882 8 579 46 887 2 580 146 319 4 582 2 890 2 893 4 584 4 323 2 585 2 587 8 588 146 898 2 329 2 902 2 593 4 594 10 335 2 597 12 599 176 50 2 919 46 918 2 614 4 65 2 350 2 618 2 354 2 67 2 71 146 623 2 923 2 73 2 357 4 629 2 77 2 361 2 638 2 83 2 937 2 366 10 371 46 650 2 377 4 949 48 94 46 98 2 659 8 381 2 660 2 661 10 663 2 667 2 388 14 108 6 670 16 672 46 671 2 116 2 397 2 683 8 402 36 404 2 686 2 407 46 409 2 973 26 693 2 979 4 414 4 134 2 416 42 136 2 140 2 982 2 141 22 702 8 985 2 422 36 711 4 424 2 994 2 720 4 431 4 725 4 999 2 1001 2 152 2 156 4 733 4 161 4 162 8 163 2 449 6 450 2 1013 2 451 2 167 2 169 2 744 2 457 2 1019 2 1021 4 747 2 173 4 1022 20 754 2 756 8 761 2 185 8 186 4 1029 4 188 2 464 4 1034 2 770 2 195 4 197 14 780 4 1041 2 472 46 781 8 782 6 784 2 478 2 482 2 788 36 211 2 1059 6 215 2 793 4 485 2 217 16 218 14 1065 4 799 2 490 46 805 46 492 2 806 4 1069 8 813 4 816 4 495 4 1073 6 231 4 230 2 240 2 501 24 502 2 243 2 825 22 1078 28 505 20 249 8 254 4 255 2 518 46 258 2 520 2 1090 2 1092 4 839 2 523 4 
534 2 873 2 972 1 328 2 
178 2 534 2 
821 2 534 2 85 2 438 2 284 2 544 2 221 2 
160 2 534 2 85 2 
49 2 534 2 85 2 
99 2 873 2 840 2 
534 2 85 2 
99 2 988 2 
559 2 534 2 
99 2 873 2 1044 2 
873 2 576 2 900 2 
274 2 873 2 106 2 
7 2 873 2 604 2 
965 2 736 2 873 2 
99 2 869 2 
207 2 534 2 
576 2 865 2 
274 2 714 2 
7 2 681 2 
736 2 315 2 
99 2 369 2 
736 2 144 2 
7 2 738 2 
274 2 533 2 
576 2 399 2 
99 2 873 2 1044 2 70 2 
99 2 777 2 873 2 1044 2 70 2 
99 2 873 2 688 2 
99 2 873 2 139 2 
232 2 447 2 981 2 864 2 
831 2 484 2 92 4 44 2 43 2 325 2 1014 2 272 2 1077 2 204 2 546 2 453 2 574 2 880 2 863 2 439 6 282 2 829 4 
873 2 352 2 
486 2 544 2 221 2 856 2 
821 2 647 2 486 2 544 2 221 2 856 2 
143 2 534 2 85 2 438 2 544 2 221 2 
605 2 706 2 
438 2 544 2 221 2 468 2 
992 2 7 2 
100 2 736 2 
576 2 84 2 
274 2 874 2 
274 2 736 2 721 2 
274 2 643 2 736 2 
274 2 736 2 689 2 
274 2 63 2 736 2 
221 2 544 2 723 2 664 2 814 2 
99 2 308 2 
470 2 
526 2 413 2 1 2 695 26 700 2 703 2 987 2 704 2 709 2 290 4 432 2 726 2 547 2 153 4 437 2 301 2 868 2 555 26 557 2 31 2 732 2 1009 2 165 2 35 2 168 2 572 4 1017 2 456 2 171 2 886 2 749 2 892 2 759 2 897 2 1028 6 187 2 763 2 764 2 1031 2 911 2 201 2 1045 2 1047 6 785 2 616 4 351 2 619 2 68 2 625 2 627 4 927 6 928 2 81 8 488 2 936 2 82 2 804 2 491 2 807 2 648 2 815 2 226 2 496 2 376 2 500 2 383 2 103 4 824 4 954 4 389 2 676 4 519 6 521 2 129 2 
526 2 413 2 1 2 695 26 700 2 703 2 987 2 704 2 709 2 290 4 432 2 726 2 547 2 153 6 437 2 868 2 555 26 557 2 31 2 732 2 1009 2 165 2 35 2 168 2 572 4 1017 2 456 2 171 2 886 2 749 2 892 2 759 2 897 2 590 2 1028 6 763 2 764 2 1031 2 194 2 1043 2 201 2 1045 2 202 2 1047 6 785 2 616 4 351 2 620 2 619 2 68 2 625 2 627 4 927 6 928 2 81 8 488 2 936 2 82 2 804 2 491 2 807 2 648 2 815 2 226 2 496 2 376 2 500 2 383 2 103 4 824 4 954 4 389 2 676 4 964 2 519 6 521 2 129 2 
895 2 
786 2 1058 2 
337 2 267 2 1 2 415 4 695 12 910 2 55 2 270 4 135 6 1042 4 60 2 610 10 616 2 280 2 283 2 789 6 147 2 630 8 358 2 715 4 18 2 927 4 797 2 859 4 433 2 934 2 82 2 727 2 862 2 493 6 868 2 373 2 558 2 555 6 374 4 561 8 90 2 91 2 448 4 239 2 1010 2 165 2 504 2 102 2 387 2 666 2 316 4 954 2 886 2 748 2 41 2 1084 2 753 2 833 2 517 2 763 2 521 2 1036 2 465 2 126 2 
337 2 267 2 601 2 1 2 415 4 695 12 910 2 55 2 270 4 135 8 1042 4 60 2 610 10 616 2 279 2 283 2 789 8 147 2 630 8 358 2 993 2 18 2 715 4 927 4 797 2 859 4 433 2 934 2 82 2 727 2 862 2 493 6 868 2 373 2 558 2 555 6 374 4 561 8 90 2 91 2 448 4 239 2 1010 2 165 2 504 2 102 2 954 2 387 2 666 2 316 4 886 2 748 2 41 2 1084 2 833 2 960 4 517 2 763 2 521 2 1036 2 465 2 126 2 
374 2 41 2 337 2 415 4 715 2 448 2 910 2 1010 2 270 4 135 2 797 2 433 2 102 2 727 2 465 2 862 2 493 2 387 2 
337 2 267 2 601 2 1 2 415 4 695 12 910 2 55 2 270 4 135 6 1042 4 60 2 610 6 616 2 280 2 283 2 789 6 147 2 630 4 358 2 715 4 18 2 927 4 797 2 859 4 433 2 934 2 82 2 727 2 862 2 493 4 868 2 373 2 558 2 555 6 374 4 561 4 90 2 91 2 448 4 239 2 1010 2 165 2 504 2 102 2 387 2 666 2 316 4 954 2 886 2 748 2 41 2 753 2 833 2 517 2 763 2 521 2 1036 2 465 2 126 2 
337 2 267 2 1 2 415 4 695 12 910 2 55 2 270 4 135 4 1042 4 60 2 610 6 616 2 280 2 283 2 789 6 147 2 630 4 358 2 715 4 18 2 927 4 797 2 859 4 433 2 934 2 82 2 727 2 862 2 493 6 868 2 373 2 558 2 555 6 374 4 561 4 90 2 91 2 819 2 448 4 239 2 1010 2 165 2 504 2 102 2 387 2 666 2 316 4 954 2 886 2 748 2 41 2 753 2 833 2 517 2 763 2 521 2 1036 2 465 2 126 2 
337 2 267 2 1 2 415 4 695 12 910 2 55 2 270 4 135 6 1042 4 60 2 610 6 616 2 280 2 283 2 789 6 147 2 630 8 358 2 715 4 18 2 927 4 797 2 859 4 433 2 934 2 82 2 727 2 862 2 493 6 868 2 373 2 558 2 555 6 374 4 561 4 90 2 91 2 448 4 239 2 1010 2 165 2 504 2 102 2 387 2 666 2 316 4 954 2 886 2 748 2 41 2 1084 2 753 2 833 2 517 2 763 2 521 2 1036 2 465 2 126 2 
337 2 267 2 1 2 415 4 695 12 910 2 55 2 270 4 135 6 1042 4 60 2 610 10 616 2 280 2 283 2 789 8 147 2 630 8 358 2 715 4 18 2 927 4 797 2 859 4 433 2 934 2 82 2 727 2 862 2 493 8 868 2 373 2 558 2 555 6 374 4 561 8 90 2 91 2 819 2 448 4 239 2 1010 2 165 2 504 2 102 2 954 2 387 2 666 2 316 4 886 2 748 2 41 2 1084 2 753 2 833 2 517 2 763 2 521 2 1036 2 465 2 126 2 
337 2 267 2 1 2 415 4 695 12 910 2 55 2 270 4 135 6 1042 4 60 2 610 10 616 2 280 2 283 2 789 6 147 2 630 8 358 2 715 4 18 2 927 4 797 2 859 4 433 2 934 2 82 2 727 2 862 2 493 6 868 2 373 2 558 2 555 6 374 4 561 8 90 2 91 2 448 4 239 2 1010 2 165 2 504 2 102 2 387 2 666 2 316 4 954 2 886 2 748 2 41 2 1084 2 753 2 833 2 517 2 763 2 521 2 1036 2 465 2 126 2 
526 2 1 2 267 2 527 6 845 2 270 4 5 2 536 8 283 2 290 4 18 2 20 6 291 6 859 6 547 2 862 2 868 2 552 6 555 24 558 2 563 2 567 6 35 2 314 2 316 4 886 2 891 1 892 2 41 2 896 2 897 2 45 2 590 2 595 2 334 2 337 2 48 6 340 2 910 2 55 4 342 10 343 2 60 4 610 2 615 2 616 4 351 12 68 2 624 2 625 2 627 4 630 2 358 4 927 6 928 4 360 1 81 4 934 2 82 2 936 2 939 6 373 2 374 4 90 2 91 2 379 6 380 2 382 1 383 2 102 2 103 4 952 6 954 4 387 2 666 2 390 1 391 6 393 2 394 2 676 2 677 4 400 2 684 1 126 2 127 2 129 2 974 6 412 2 977 2 415 4 695 46 135 4 698 2 418 6 142 4 700 2 419 6 703 2 987 2 989 2 147 2 715 4 432 2 433 2 726 2 435 2 153 6 727 2 440 2 441 2 443 2 1008 1 448 4 1010 2 165 2 1017 2 745 6 454 2 170 1 456 2 171 2 749 2 748 2 753 2 462 2 182 1 759 2 1028 6 763 2 765 7 1036 2 465 2 192 1 473 2 1043 2 1042 8 1047 6 785 2 789 12 219 2 220 6 797 2 804 2 491 2 493 8 815 2 496 2 819 4 239 2 504 2 247 6 252 2 1081 7 833 2 517 2 519 8 521 2 837 2 262 2 
526 2 977 2 267 2 1 2 527 6 695 48 415 4 845 2 698 2 135 8 270 4 5 2 418 6 142 4 419 6 700 2 536 8 703 2 987 4 989 2 283 2 147 2 290 4 18 2 715 4 20 6 291 6 432 2 859 6 433 2 724 2 726 2 435 2 547 2 153 6 727 2 862 2 552 6 868 2 440 2 558 2 555 26 441 2 443 2 563 2 448 4 567 6 1010 2 165 2 35 2 572 2 454 2 745 6 1017 2 314 2 456 2 171 2 316 4 886 2 748 2 749 2 892 2 41 2 753 2 896 2 462 2 759 2 897 2 45 2 590 2 1028 6 763 2 1036 2 465 2 334 2 595 2 48 6 337 2 340 2 342 10 473 2 55 4 910 2 343 2 1042 8 1043 2 610 2 60 4 1047 6 785 2 615 2 351 12 616 4 68 2 624 2 789 12 625 2 627 4 630 6 358 4 927 6 928 4 219 2 220 6 797 2 81 8 934 2 804 2 936 4 82 2 491 2 493 8 939 6 815 2 373 2 496 4 374 4 90 2 91 2 379 6 239 2 380 2 504 2 383 2 103 4 102 2 247 6 952 6 666 2 387 2 954 4 251 2 252 2 391 6 393 2 394 2 1084 4 833 2 676 2 677 4 400 2 517 2 519 8 521 2 837 2 126 2 127 2 129 2 262 2 974 6 412 2 
526 2 977 2 267 2 1 2 527 6 695 48 415 4 845 2 698 2 135 8 270 4 5 2 418 6 142 4 419 6 700 2 536 8 703 2 987 4 989 2 283 2 147 2 290 4 18 2 715 4 20 6 291 6 432 2 859 6 433 2 724 2 726 2 435 2 547 2 153 6 727 2 862 2 552 6 868 2 440 2 558 2 555 26 441 2 443 2 561 4 563 2 448 4 567 6 1010 2 165 2 35 2 572 2 454 2 745 6 1017 2 314 2 456 2 171 2 316 4 886 2 748 2 749 2 892 2 41 2 753 2 896 2 462 2 897 2 759 2 45 2 590 2 1028 6 763 2 1036 2 465 2 334 2 595 2 48 6 337 2 340 2 342 10 473 2 55 4 910 2 343 2 1042 8 1043 2 60 4 610 6 1047 6 785 2 615 2 351 12 616 4 68 2 624 2 789 12 625 2 627 4 630 6 358 4 927 6 928 4 219 2 220 6 797 2 81 8 934 2 804 2 936 4 82 2 491 2 493 8 939 6 815 2 373 2 496 4 374 4 90 2 91 2 379 6 239 2 380 2 504 2 383 2 103 4 102 2 247 6 952 6 666 2 387 2 954 4 251 2 252 2 391 6 393 2 394 2 1084 4 833 2 676 2 677 4 400 2 517 2 519 8 521 2 837 2 126 2 127 2 129 2 262 2 974 6 412 2 
526 2 1 2 267 2 527 6 845 2 270 4 5 2 536 8 278 6 283 2 290 4 18 2 20 6 291 6 859 6 547 2 862 2 868 2 552 6 555 24 558 2 561 4 563 2 567 6 35 2 572 2 314 2 316 4 886 2 892 2 41 2 896 2 897 2 45 2 590 2 595 2 334 2 337 2 48 12 601 2 340 2 910 2 55 4 342 8 343 2 610 6 60 4 612 2 615 2 616 4 351 10 68 2 624 2 625 2 627 4 630 6 358 4 927 6 928 4 81 10 934 2 82 2 936 4 365 6 939 6 373 2 374 4 90 2 378 2 91 2 379 12 380 2 383 2 102 2 103 6 952 6 954 4 387 2 666 2 391 12 393 2 115 6 394 2 676 4 677 4 400 2 126 2 127 2 687 6 129 2 974 6 412 2 977 2 415 4 695 52 135 10 698 2 418 12 142 4 700 2 419 6 703 2 987 4 989 2 145 6 147 2 991 6 428 2 715 4 432 2 433 2 724 2 726 2 435 2 153 6 727 2 440 2 441 2 443 2 448 4 1010 2 165 2 1015 2 1017 4 745 12 454 2 456 2 171 2 749 2 748 2 753 2 461 6 181 2 462 2 759 2 1028 8 763 2 1036 2 767 2 465 2 773 6 1043 2 1042 8 1047 8 785 2 789 16 219 2 1063 6 220 6 797 2 804 4 491 4 493 10 1070 2 815 4 496 4 819 2 239 2 504 2 247 12 251 2 252 2 1084 4 833 2 517 2 256 2 519 12 521 2 837 2 262 2 
561 4 267 2 91 2 695 4 415 2 448 4 239 2 55 2 910 2 1010 2 270 2 135 6 1042 2 610 4 102 2 316 2 666 2 387 2 283 2 789 4 753 2 1084 2 630 6 833 2 18 2 715 4 517 2 797 2 859 2 433 2 934 2 126 2 862 2 493 6 373 2 
526 2 266 2 267 2 1 2 415 2 695 28 843 2 135 6 270 2 700 2 703 2 283 2 147 2 290 4 715 4 18 2 859 2 432 2 433 2 726 2 547 2 153 6 862 2 868 2 555 24 448 4 1010 2 165 2 35 2 1017 3 171 2 316 2 886 2 581 2 749 2 892 2 753 2 759 2 897 2 590 2 1028 6 763 2 906 2 470 2 55 2 473 2 342 2 910 2 607 2 1042 2 1043 2 610 2 1047 6 785 2 616 4 351 4 68 2 789 4 625 2 627 4 630 6 792 2 927 6 928 2 797 2 363 2 934 2 82 2 493 6 815 3 373 2 91 2 239 2 383 2 102 2 103 4 954 4 387 2 666 2 1079 3 109 2 1084 2 833 2 676 3 517 2 519 8 521 2 126 2 129 2 
1076 2 91 2 283 2 
1076 2 91 2 283 2 
526 2 978 2 1 2 695 24 415 2 270 2 135 12 530 2 142 2 700 2 703 2 987 4 283 4 990 2 288 2 290 4 715 4 859 4 22 2 726 2 547 2 153 6 868 2 558 2 555 16 561 4 448 4 1010 2 165 2 35 2 456 4 171 2 316 2 1020 2 886 2 748 2 749 2 40 2 892 2 41 2 179 2 759 2 897 2 590 2 1028 2 763 2 1032 2 772 2 776 4 596 2 337 2 601 4 54 2 342 2 910 4 55 4 345 2 1043 2 1042 4 60 4 610 6 1047 2 785 2 616 4 351 4 68 2 789 16 625 2 627 4 628 2 630 6 358 2 76 2 927 6 928 6 929 2 81 4 936 4 82 2 493 12 496 4 374 4 90 2 376 4 91 6 819 4 239 2 1076 2 383 2 102 2 105 2 952 2 954 4 252 2 1084 4 676 2 677 2 400 2 519 2 521 2 405 4 126 2 127 2 129 2 
978 2 15 2 288 2 695 4 677 2 342 2 219 2 22 2 123 2 452 2 786 2 465 2 351 2 952 2 886 2 440 2 555 2 
526 2 978 2 1 2 695 24 415 2 270 2 135 12 530 4 142 2 700 2 703 2 987 4 283 4 990 2 288 2 290 4 715 4 22 2 859 4 726 2 547 2 153 6 868 2 730 2 558 2 555 16 561 4 448 4 1010 2 165 2 35 2 742 2 456 4 881 2 171 2 316 2 886 2 748 2 749 2 40 2 892 2 41 2 179 2 759 2 897 2 590 2 1028 2 763 2 1032 2 1036 2 772 2 196 2 776 4 337 2 601 4 910 4 55 4 345 2 1042 4 1043 2 60 4 610 6 1047 2 785 2 616 4 351 2 68 2 789 16 625 2 627 4 628 2 630 6 358 4 76 2 927 6 928 6 929 2 81 4 936 4 82 2 1068 2 493 12 496 4 374 4 90 2 376 4 91 6 819 4 239 2 1076 2 383 2 102 2 952 2 954 4 252 2 1084 4 676 4 400 2 519 2 521 2 405 4 126 2 127 2 129 2 
526 2 978 2 1 2 695 24 415 2 270 2 135 12 530 2 142 2 700 2 703 2 987 4 283 4 708 2 990 2 289 2 288 2 290 4 715 4 859 4 22 2 726 2 547 2 153 6 868 2 558 2 555 16 561 4 448 4 1010 2 165 2 35 2 456 4 171 2 316 2 886 2 748 2 749 2 40 2 892 2 41 2 179 2 759 2 897 2 590 2 1028 2 763 2 1032 2 1036 2 772 2 776 4 337 2 601 4 342 2 910 4 55 4 345 2 1043 2 1042 4 60 4 610 6 1047 2 785 2 616 4 351 4 68 2 789 16 625 2 627 4 628 2 630 6 358 4 75 2 76 2 927 6 928 6 929 2 81 4 936 4 82 2 493 12 496 4 374 4 90 2 376 4 91 6 819 4 239 2 1076 2 383 2 102 2 952 2 665 2 954 4 252 2 1084 4 676 2 677 2 400 2 519 2 966 2 521 2 405 4 126 2 127 2 129 2 
976 2 977 2 264 2 1 2 695 26 698 2 984 2 700 2 852 2 703 2 10 2 989 2 286 4 710 1 540 2 13 2 290 2 432 2 27 4 860 2 547 2 153 3 868 2 555 20 32 1 446 2 165 2 739 2 166 2 740 2 35 2 1017 2 171 2 886 2 459 2 888 2 174 2 892 2 752 2 757 2 590 1 184 2 1028 6 763 2 467 2 47 6 775 2 595 2 338 2 340 2 608 2 1043 1 206 2 1047 6 785 2 615 2 920 2 616 4 351 2 66 2 68 2 625 2 790 2 1053 2 72 2 627 2 359 1 927 6 928 2 636 2 362 2 1067 2 801 2 803 4 82 2 808 2 812 2 649 2 652 2 815 2 229 2 93 2 383 2 103 4 954 4 253 2 673 2 114 2 832 6 676 2 401 2 835 2 519 8 521 2 971 2 129 2 
695 2 947 2 915 2 503 2 1047 2 699 2 101 4 103 2 348 2 1017 3 712 2 926 3 514 2 676 3 396 2 398 2 432 2 519 2 1028 2 121 2 257 2 491 6 815 3 555 2 
695 2 947 2 915 2 503 2 1047 2 699 2 101 4 103 2 348 2 1017 2 712 2 926 2 514 2 676 2 396 2 398 2 432 2 519 2 1028 2 121 2 257 2 491 6 815 2 555 2 
695 2 947 2 915 2 503 2 1047 2 699 2 101 4 103 2 348 2 1017 2 712 2 926 2 514 2 676 2 396 2 398 2 432 2 519 2 1028 2 121 2 257 2 491 6 815 2 555 2 
775 2 338 2 198 3 695 10 608 2 58 6 701 2 535 2 920 2 209 2 423 2 286 4 790 2 1054 4 213 3 636 2 639 4 432 2 25 3 728 2 88 2 815 3 555 4 446 2 657 2 1012 2 1075 4 39 4 957 2 832 6 42 4 676 3 514 2 119 2 519 2 1030 2 330 2 191 2 903 2 771 4 
775 2 598 2 338 2 198 2 446 2 695 10 1012 2 657 2 608 2 58 6 1075 4 535 2 701 2 920 2 209 2 39 4 423 2 286 4 957 2 790 2 1054 4 1083 2 213 2 42 4 832 4 514 2 676 2 834 2 119 2 636 2 639 4 432 2 519 2 25 2 1030 2 330 2 191 2 903 2 771 4 728 2 88 2 815 2 555 4 
775 2 598 2 338 2 198 2 446 2 695 10 1012 2 657 2 608 2 58 6 1075 4 535 2 701 2 920 2 209 2 39 4 423 2 286 4 957 2 790 2 1054 4 1083 2 213 2 42 4 832 4 514 2 676 2 834 2 119 2 636 2 639 4 432 2 519 2 25 2 1030 2 330 2 191 2 903 2 771 4 728 2 88 2 815 2 555 4 
775 2 598 2 338 2 198 2 446 2 695 10 1012 2 657 2 608 2 58 6 1075 4 535 2 701 2 920 2 209 2 39 4 423 2 286 4 957 2 790 2 1054 4 1083 2 213 2 42 4 832 4 514 2 676 2 834 2 119 2 636 2 639 4 432 2 519 2 25 2 1030 2 330 2 191 2 903 2 771 4 728 2 88 2 815 2 555 4 
775 2 598 4 338 2 198 2 446 2 695 10 1012 2 657 2 608 2 58 6 1075 4 535 2 701 2 920 2 209 2 39 4 423 2 286 4 957 2 790 2 1054 4 1083 4 213 2 42 4 832 4 514 2 676 2 834 4 119 2 636 2 639 4 432 2 519 2 25 2 1030 2 330 2 191 2 903 2 771 4 728 2 88 2 815 2 555 4 
653 2 242 2 692 2 1049 2 259 2 685 2 
774 2 242 2 942 2 1085 2 515 2 500 2 531 2 
498 1 53 1 695 10 1048 2 384 1 62 2 745 2 481 2 507 2 460 2 512 2 180 2 718 2 717 2 293 2 434 2 154 1 158 2 297 2 866 1 868 2 408 2 128 2 1038 2 690 2 555 8 
775 6 598 2 734 2 338 6 872 2 445 2 695 6 446 6 608 6 206 2 246 2 920 6 66 2 286 12 790 6 72 2 1083 2 894 2 832 16 834 4 119 2 636 6 996 2 639 4 332 2 27 4 860 2 838 4 908 2 555 6 
1054 2 1057 2 33 2 695 1 948 4 310 2 1075 2 1087 2 80 2 969 2 951 2 155 1 64 2 479 7 771 2 922 2 225 2 555 1 
1054 2 1057 2 33 4 948 4 310 4 1075 2 1087 2 80 2 969 2 951 2 64 2 479 6 771 2 922 2 225 4 
1054 2 1057 2 33 8 695 1 948 4 310 8 1075 2 1087 2 80 2 969 6 951 2 155 1 64 8 479 10 771 2 922 2 225 8 555 1 
1054 2 1057 2 33 2 948 2 310 2 1075 2 1087 2 80 2 951 2 479 2 771 2 922 2 225 2 
133 6 132 6 694 4 841 36 980 4 268 6 695 150 417 2 850 6 986 10 853 4 854 6 12 2 148 6 14 4 427 8 16 4 17 11 290 112 998 24 292 2 21 24 150 2 1000 4 861 10 547 14 1004 16 153 248 1003 16 296 6 549 6 157 8 554 4 30 2 555 134 442 2 305 17 306 18 737 12 566 2 565 4 878 24 573 6 38 6 575 92 1018 6 455 4 458 4 313 26 172 8 884 4 177 2 892 8 321 2 586 22 758 2 327 10 899 8 762 42 590 58 463 124 190 6 189 34 331 6 333 2 193 6 909 4 778 4 52 4 913 8 1043 58 346 4 59 10 916 10 1050 2 349 50 480 2 68 14 210 24 627 88 483 6 632 8 1060 16 633 4 634 24 794 6 1062 4 640 24 930 6 798 4 487 2 1066 5 931 28 79 4 811 84 810 90 367 4 372 4 651 6 654 8 228 18 375 4 818 6 234 2 946 6 499 8 95 2 97 6 1074 4 822 12 950 2 385 6 826 4 250 8 506 4 669 42 111 6 509 2 113 1 675 16 678 10 1086 90 962 26 120 2 403 2 968 10 131 10 691 8 
695 28 199 2 844 2 1043 2 850 2 208 2 1050 2 68 2 627 12 425 2 632 2 290 12 631 2 1060 2 794 2 795 4 637 2 149 2 998 2 640 2 796 2 1066 2 931 20 545 2 151 2 548 2 547 2 153 26 1004 2 296 2 87 2 729 4 555 28 941 2 656 2 946 2 237 2 565 2 1011 2 311 4 878 2 950 2 662 2 827 2 953 2 250 2 892 2 674 2 675 2 1026 2 758 2 760 2 326 2 183 2 899 2 590 2 463 2 1033 2 466 2 333 2 691 2 
0 2 133 4 132 4 841 6 980 4 268 4 695 78 529 10 271 4 849 2 850 4 853 4 854 4 148 4 290 44 292 2 545 2 1000 4 547 6 861 4 1004 10 153 104 1003 8 296 2 549 4 867 16 554 4 555 70 1007 8 442 2 305 10 444 4 566 2 164 4 573 4 38 4 575 24 578 16 172 4 884 4 892 2 322 4 758 2 899 2 762 8 590 30 463 24 189 30 331 4 190 4 193 4 333 2 909 4 603 4 52 4 606 2 912 2 913 4 1043 28 346 2 916 6 1050 2 349 8 1051 4 68 6 355 32 627 36 791 8 483 4 1060 10 633 4 634 8 794 4 930 4 931 14 800 2 809 4 811 24 367 4 651 4 654 6 228 10 375 4 818 4 235 2 946 4 97 4 822 14 950 2 826 4 668 2 250 2 506 4 669 16 111 4 509 2 675 10 395 10 118 10 678 4 124 8 403 2 968 4 522 8 130 2 691 2 131 4 
841 2 52 2 695 28 913 4 1043 12 346 2 417 2 916 2 203 2 850 4 1050 2 854 4 68 2 627 14 148 4 17 2 290 14 1060 6 633 2 794 4 1062 2 545 2 1066 2 931 14 487 2 150 2 547 2 861 2 153 40 1004 6 1003 6 296 2 157 2 30 2 555 26 442 2 654 4 228 2 305 2 946 4 950 2 455 2 250 2 111 4 892 2 321 2 675 6 586 10 678 2 758 2 899 2 590 12 120 2 463 8 189 6 968 2 333 2 691 2 131 2 
307 2 

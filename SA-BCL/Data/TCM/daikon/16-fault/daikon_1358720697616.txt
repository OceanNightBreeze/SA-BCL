#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 361 465 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (107,450) (107,450) (107,450) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 876 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 439 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 96 165 18 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:ne(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7264 | = null
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282204 | = null
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Debug:logOn()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:sameLength([I[I)Z
daikon.Quant:gt(II)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.PptSlice0:arity()I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(JJ)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:lexLT([I[I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:lexGTE([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:subsetOf([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:isSubset([D[D)Z | OPERATOR | 63684 | < -> >
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.diff.Node:Node()V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:slice([III)[I
daikon.PptSlice2:arity()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_ntk()I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V | OPERATOR | 1654 | == -> <
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:isIntegral()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.MathMDE:sign(I)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern:intern([J)[J
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:intern([D)[D
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:memberOf(J[J)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:eltsGT([II)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:size()I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Debug:logDetail()Z
daikon.ModBitTracker:num_samples()I
daikon.Quant:noDups([I)Z
daikon.Quant:eq(II)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:lt(II)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:eltwiseGT([I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:subsetOf([F[D)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | RETURN | 66339 | return null
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:memberOf(F[D)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice1:num_samples()I
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.PptName:isEnterPoint()Z
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGtIndex([I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
98 2 114 2 423 2 111 2 204 4 66 2 447 2 317 2 248 2 
181 2 551 2 483 6 271 6 753 2 537 6 245 2 30 2 721 2 325 2 350 2 
114 2 573 4 84 6 317 2 232 2 879 6 892 4 78 2 277 6 170 2 505 2 783 6 859 2 
210 4 315 10 102 10 317 6 686 10 257 4 135 2 109 10 856 16 689 8 195 2 762 8 569 2 329 2 732 2 835 26 457 8 114 6 803 4 333 8 524 6 177 2 807 6 334 2 864 12 500 10 90 4 183 30 530 16 780 16 
688 6 436 4 
710 2 
210 2 315 2 102 2 686 2 588 2 77 2 856 2 109 4 453 2 712 2 835 4 457 2 228 2 17 2 631 2 807 2 864 2 500 2 183 6 530 2 124 2 780 2 743 2 
835 12 803 2 315 4 102 4 716 2 303 2 495 6 686 4 864 5 500 4 516 4 530 8 183 14 780 8 856 8 886 6 764 4 
470 4 586 2 415 2 366 10 512 2 726 2 685 2 702 2 40 2 789 4 791 4 705 8 323 4 194 10 138 14 373 2 12 6 13 2 828 2 260 62 15 4 711 4 801 2 459 2 461 2 665 4 202 4 526 4 60 2 427 2 576 2 406 4 670 2 697 4 777 2 240 2 782 2 379 2 673 4 507 4 
208 2 163 2 291 2 74 2 710 2 326 2 349 2 117 2 121 2 742 2 
643 2 250 2 100 2 514 2 255 2 852 4 565 2 191 2 135 2 705 2 110 2 197 4 858 2 44 2 81 2 713 2 628 2 377 2 21 2 236 2 670 2 357 2 529 2 503 2 409 2 673 2 720 2 784 2 507 4 815 2 285 2 248 2 
97 2 210 2 315 16 102 16 727 4 317 4 686 16 52 2 790 2 516 4 108 2 856 32 109 6 224 4 886 6 764 4 329 2 834 6 835 48 457 18 114 4 734 8 494 6 333 6 524 4 525 2 495 6 694 2 807 4 864 22 500 16 92 6 530 32 183 54 780 32 579 4 871 4 536 4 412 6 
705 2 379 2 12 2 
599 2 70 2 148 22 59 10 116 2 61 2 7 2 855 2 654 2 53 2 295 2 660 2 640 2 31 2 
440 3 209 4 1 4 680 3 443 2 211 1 341 2 101 2 444 1 103 2 215 2 342 12 344 3 10 6 218 2 794 2 223 2 691 2 455 16 113 1 114 34 806 2 462 2 352 2 575 16 463 16 119 2 22 2 234 2 464 3 235 2 238 2 466 2 696 3 239 1 122 2 29 2 698 2 469 2 700 1 127 2 817 2 587 2 129 2 130 2 701 2 371 2 707 2 43 2 593 2 261 2 487 6 829 2 263 2 143 4 142 3 46 2 602 2 605 2 273 2 48 24 840 3 50 2 275 1 841 2 842 4 843 8 607 1 51 4 378 2 155 2 279 3 380 2 610 32 384 6 510 2 848 2 158 2 386 2 160 32 851 1 290 2 169 2 620 16 623 2 392 2 55 2 729 24 395 2 298 4 624 2 731 2 521 2 176 2 304 2 401 2 632 2 178 1 305 2 636 2 180 2 64 2 405 1 637 2 869 1 531 3 66 2 67 2 411 2 750 1 874 2 414 2 752 2 71 4 72 1 756 3 317 32 541 8 75 2 320 2 880 5 322 6 659 2 196 2 80 2 327 2 545 2 199 2 328 4 765 1 767 3 82 2 769 2 201 1 332 2 667 2 426 3 89 1 776 2 552 2 433 2 206 2 896 2 437 2 897 2 558 2 676 8 
36 2 
114 2 861 2 
343 2 114 4 339 2 
471 2 754 2 367 2 213 2 651 2 289 2 542 2 657 2 761 2 826 2 139 2 394 2 198 2 763 2 456 2 570 2 200 2 460 2 770 2 802 18 424 2 604 2 270 2 774 2 773 2 403 2 669 2 465 2 276 2 527 2 811 2 408 18 741 18 813 2 361 2 435 2 748 2 284 2 
554 1 647 2 171 2 683 2 
647 2 797 2 
0 2 148 6 860 2 475 2 849 2 254 4 863 2 23 2 179 2 821 2 120 2 391 2 709 2 538 2 246 2 336 2 422 2 508 4 
171 2 87 2 
389 2 705 2 301 2 781 2 
389 2 705 2 301 2 781 2 362 2 722 2 
90 2 705 2 345 2 771 2 647 2 781 2 
646 2 377 2 
90 2 705 2 351 2 781 2 
550 2 146 2 
658 2 93 2 
719 2 635 2 
480 2 172 2 
658 2 172 2 188 2 
658 2 724 2 172 2 
658 2 115 2 172 2 
229 2 658 2 172 2 
69 6 107 4 450 2 705 2 832 2 601 2 577 2 781 2 
14 2 265 2 
90 2 705 2 345 2 647 2 360 2 781 2 362 2 
345 2 589 2 647 2 
345 2 647 2 233 2 
171 2 638 2 14 2 
345 2 647 2 
14 2 152 2 
647 2 737 2 
171 2 14 2 106 2 
171 2 719 2 810 2 
740 2 171 2 172 2 
146 2 219 2 171 2 
658 2 845 2 171 2 
585 2 14 2 
653 2 647 2 
719 2 618 2 
26 2 172 2 
146 2 674 2 
692 2 658 2 
385 2 14 2 
658 2 595 2 
887 2 146 2 
421 2 172 2 
227 2 719 2 
171 2 615 2 14 2 106 2 
171 2 615 2 56 2 14 2 106 2 
171 2 818 2 14 2 
171 2 14 2 596 2 
306 2 28 2 381 2 583 2 
752 2 
209 2 1 4 562 2 215 2 342 8 10 2 567 2 794 2 223 2 455 6 799 2 114 26 806 2 234 2 235 2 466 2 122 2 698 4 127 2 129 2 370 2 261 2 486 4 487 4 829 2 143 2 489 2 838 2 605 2 50 2 842 4 843 2 51 4 155 2 609 2 281 4 610 4 509 2 384 6 510 6 160 6 386 2 290 2 167 2 619 2 169 2 395 2 298 2 731 2 733 2 57 2 176 2 401 2 178 2 180 2 64 2 637 2 66 2 67 2 411 2 642 2 750 2 414 2 317 26 75 2 189 2 321 2 322 2 196 2 199 2 328 4 769 2 332 2 668 2 
209 2 1 4 562 2 215 2 342 8 10 2 218 1 567 2 794 2 223 2 455 6 799 2 114 26 806 2 234 2 235 2 466 2 122 2 698 4 127 2 129 2 370 2 261 2 486 4 487 5 829 2 263 2 143 2 144 2 489 2 605 2 50 2 842 4 843 2 51 4 155 2 609 2 281 4 610 4 509 2 384 6 510 6 848 1 160 6 386 2 290 2 167 2 619 2 169 2 395 2 298 2 731 2 733 2 176 2 401 2 178 2 736 2 180 2 64 2 637 2 66 2 67 2 411 2 642 2 750 2 414 2 317 26 75 2 321 2 322 2 196 2 199 2 328 4 769 2 332 2 668 2 894 2 
358 2 
481 2 613 2 
384 4 1 2 157 2 3 10 788 2 446 4 166 2 8 2 853 2 225 2 796 2 454 2 300 8 174 4 572 2 16 2 114 12 230 2 302 4 176 2 806 2 401 2 19 2 20 2 234 2 633 2 245 4 537 6 535 2 30 2 310 2 872 2 414 2 584 2 539 8 816 2 875 2 365 4 314 4 129 2 753 4 187 2 38 2 317 6 41 4 134 2 483 6 491 2 492 2 837 2 888 2 271 6 50 2 205 2 842 2 551 2 432 2 504 2 846 2 283 2 
384 4 1 2 157 2 3 10 788 2 446 4 166 2 8 2 853 2 225 2 796 2 454 2 300 8 174 4 572 2 16 2 114 12 230 2 302 4 176 2 806 2 401 2 19 2 20 2 118 4 234 2 633 2 245 4 537 8 535 2 30 2 749 2 310 2 872 2 414 2 584 2 539 8 816 2 365 4 314 4 129 2 753 4 648 2 187 2 38 2 317 6 41 4 134 2 483 6 492 2 837 2 888 2 271 8 50 2 205 2 842 2 551 2 432 2 504 2 846 2 721 2 283 2 
816 2 174 2 837 2 302 4 271 2 753 2 20 2 38 2 446 4 205 2 432 2 483 2 245 2 504 2 225 2 796 2 310 2 454 2 
384 4 1 2 157 2 3 6 788 2 446 4 166 2 8 2 853 2 225 2 796 2 454 2 300 4 174 4 572 2 16 2 114 12 230 2 302 4 176 2 806 2 401 2 19 2 20 2 234 2 633 2 245 4 537 6 535 2 30 2 310 2 872 2 414 2 584 2 539 4 816 2 875 2 365 4 314 4 129 2 753 4 187 2 38 2 317 6 41 4 134 2 483 4 491 2 492 2 837 2 888 2 271 6 50 2 205 2 842 2 432 2 504 2 846 2 721 2 283 2 
384 4 1 2 157 2 3 6 788 2 446 4 166 2 8 2 853 2 225 2 796 2 454 2 350 2 300 4 174 4 572 2 16 2 114 12 230 2 302 4 176 2 806 2 401 2 19 2 20 2 234 2 633 2 245 4 537 6 535 2 30 2 310 2 872 2 414 2 584 2 539 4 816 2 875 2 365 4 314 4 129 2 753 4 187 2 38 2 317 6 41 4 134 2 483 6 491 2 492 2 837 2 888 2 271 4 50 2 205 2 842 2 432 2 504 2 846 2 283 2 
384 4 1 2 157 2 3 6 788 2 446 4 166 2 8 2 853 2 225 2 796 2 454 2 300 4 174 4 572 2 16 2 114 12 230 2 302 4 176 2 806 2 401 2 19 2 20 2 234 2 633 2 245 4 537 6 535 2 30 2 310 2 872 2 414 2 584 2 539 8 816 2 875 2 365 4 314 4 129 2 753 4 187 2 38 2 317 6 41 4 134 2 483 6 491 2 492 2 837 2 888 2 271 6 50 2 205 2 842 2 551 2 432 2 504 2 846 2 283 2 
384 4 1 2 157 2 3 10 788 2 446 4 166 2 8 2 853 2 225 2 796 2 454 2 350 2 300 8 174 4 572 2 16 2 114 12 230 2 302 4 176 2 806 2 401 2 19 2 20 2 234 2 633 2 245 4 537 8 535 2 30 2 310 2 872 2 414 2 584 2 539 8 816 2 875 2 365 4 314 4 129 2 753 4 187 2 38 2 317 6 41 4 134 2 483 8 491 2 492 2 837 2 888 2 271 6 50 2 205 2 842 2 551 2 432 2 504 2 846 2 283 2 
384 4 1 2 157 2 3 10 788 2 446 4 166 2 8 2 853 2 225 2 796 2 454 2 300 8 174 4 572 2 16 2 114 12 230 2 302 4 176 2 806 2 401 2 19 2 20 2 234 2 633 2 245 4 537 6 535 2 30 2 310 2 872 2 414 2 584 2 539 8 816 2 875 2 365 4 314 4 129 2 753 4 187 2 38 2 317 6 41 4 134 2 483 6 491 2 492 2 837 2 888 2 271 6 50 2 205 2 842 2 551 2 432 2 504 2 846 2 283 2 
1 4 209 2 3 2 212 2 682 6 446 4 215 2 684 2 687 2 8 2 10 2 11 4 218 2 225 2 454 2 455 6 226 4 16 2 230 2 19 2 20 2 234 2 235 2 24 2 245 4 30 4 249 1 472 6 36 6 38 2 41 6 703 2 483 8 261 2 486 4 487 6 264 2 492 2 714 1 271 4 272 1 50 2 51 4 504 2 283 2 509 2 510 6 287 6 725 6 290 2 292 2 518 2 298 2 520 6 58 2 302 4 64 2 537 12 535 2 66 2 67 2 309 2 310 2 312 7 539 2 314 8 753 4 317 24 73 2 75 2 318 6 321 4 79 2 322 2 328 4 83 2 768 10 332 2 548 2 86 2 775 6 88 2 335 1 91 2 555 2 561 2 788 2 104 2 342 4 343 6 794 2 796 2 348 6 350 4 798 6 114 46 572 4 804 2 806 2 574 1 122 12 125 2 584 2 816 2 365 4 127 2 129 2 134 2 822 2 823 2 824 6 825 2 829 2 594 2 143 2 837 2 603 8 605 2 842 4 843 2 609 2 156 2 610 2 846 2 384 6 848 2 157 2 160 8 386 2 161 6 166 4 167 2 388 6 853 2 174 4 175 1 176 2 861 6 862 1 401 2 404 2 633 2 180 2 411 2 872 2 414 2 644 2 875 2 650 1 416 6 187 2 662 2 888 2 205 2 429 2 432 2 431 7 893 1 677 2 
209 4 1 4 561 2 3 2 682 6 212 2 788 2 215 2 446 4 684 2 104 2 687 2 343 6 342 8 8 2 11 4 10 2 218 2 794 2 348 6 796 2 225 2 455 6 454 2 798 6 226 4 16 2 572 4 114 48 230 2 804 2 806 2 19 2 20 2 809 2 234 2 235 2 24 2 122 12 245 4 125 2 30 4 698 2 584 2 816 2 472 6 128 2 127 2 365 4 129 2 36 6 38 2 41 6 822 2 134 2 823 2 825 2 824 6 703 2 483 8 261 2 486 4 594 2 487 6 829 2 264 2 143 4 492 2 837 2 603 8 271 8 605 2 50 2 842 4 843 2 51 4 609 2 504 2 846 2 610 2 156 2 283 2 509 2 384 6 510 6 848 2 157 2 386 2 160 8 287 6 161 6 725 6 166 4 290 2 388 6 167 2 292 2 853 2 518 2 298 4 520 6 174 4 58 2 302 4 176 2 861 6 401 2 404 2 633 2 64 2 180 2 535 2 537 12 66 2 309 2 67 2 310 2 411 2 872 2 414 2 644 2 539 6 875 2 314 8 753 4 416 6 187 2 317 26 73 2 318 6 75 2 321 4 322 2 79 2 328 4 662 2 768 10 83 2 888 2 332 2 548 2 86 2 775 6 88 2 205 2 429 2 91 2 551 4 432 2 555 2 677 2 
209 4 1 4 561 2 3 6 682 6 212 2 788 2 215 2 446 4 684 2 104 2 687 2 343 6 342 8 8 2 11 4 10 2 218 2 794 2 348 6 796 2 225 2 455 6 454 2 798 6 226 4 16 2 572 4 114 48 230 2 804 2 806 2 19 2 20 2 809 2 234 2 235 2 24 2 122 12 245 4 125 2 30 4 698 2 584 2 816 2 472 6 128 2 127 2 365 4 129 2 36 6 38 2 41 6 822 2 134 2 823 2 825 2 824 6 703 2 483 8 261 2 486 4 594 2 487 6 829 2 264 2 143 4 492 2 837 2 603 8 271 8 605 2 50 2 842 4 843 2 51 4 609 2 504 2 846 2 610 2 156 2 283 2 509 2 510 6 384 6 848 2 157 2 386 2 160 8 287 6 161 6 725 6 166 4 290 2 388 6 167 2 292 2 853 2 518 2 298 4 520 6 300 4 174 4 58 2 302 4 176 2 861 6 401 2 404 2 633 2 64 2 180 2 535 2 537 12 66 2 309 2 67 2 310 2 411 2 872 2 414 2 644 2 539 6 875 2 314 8 753 4 416 6 187 2 317 26 73 2 318 6 75 2 321 4 322 2 79 2 328 4 662 2 768 10 83 2 888 2 332 2 548 2 86 2 775 6 88 2 205 2 429 2 91 2 551 4 432 2 555 2 677 2 
1 4 209 4 3 6 212 2 682 6 6 6 215 2 446 4 684 2 687 2 8 2 10 4 11 4 218 2 225 2 454 2 455 8 226 4 16 2 230 2 19 2 20 2 234 2 235 2 24 2 241 2 245 4 30 4 698 2 472 6 36 12 38 2 41 6 703 2 704 6 483 10 484 6 261 2 486 6 487 6 264 2 266 6 492 2 271 10 50 2 51 4 504 2 721 2 283 2 509 4 510 8 287 12 725 6 290 2 292 2 518 2 298 4 520 6 300 4 58 2 302 4 64 2 537 16 535 2 66 2 67 2 747 6 309 2 310 2 539 6 314 8 753 4 317 24 73 2 75 2 318 6 319 6 321 4 79 2 322 4 328 4 768 8 332 2 548 2 86 2 775 6 88 2 551 4 91 2 555 2 556 2 561 2 788 2 564 2 104 2 342 10 343 12 794 2 796 2 348 6 350 2 798 6 114 52 572 4 804 2 806 2 809 2 356 6 122 10 125 2 364 2 584 2 816 2 128 2 365 4 127 2 129 2 822 2 134 2 823 2 824 12 825 2 829 2 594 2 143 4 837 2 603 8 605 2 842 4 843 4 609 2 156 2 610 4 846 2 384 6 848 2 157 2 160 12 386 2 161 6 166 4 167 2 388 12 853 2 174 4 399 2 176 2 861 12 401 2 402 6 404 2 633 2 180 2 867 6 410 2 411 2 872 2 414 2 644 2 875 2 877 2 416 6 187 2 662 2 888 2 203 2 205 2 429 2 432 2 677 2 
539 6 584 2 875 2 314 2 365 2 3 4 753 4 788 2 446 2 41 2 8 2 134 2 853 2 483 6 796 2 225 2 454 2 300 4 114 4 888 2 230 2 302 2 271 6 19 2 633 2 205 2 551 2 432 2 535 2 537 4 245 4 30 2 504 2 310 2 872 2 
1 4 3 2 788 2 446 2 215 2 8 2 10 3 218 2 794 2 795 2 225 2 796 2 454 2 455 6 114 28 230 2 806 2 19 2 234 2 235 2 122 4 245 4 30 2 584 2 365 2 127 2 817 2 129 2 41 2 134 2 483 6 261 2 486 4 487 6 829 2 492 2 271 6 605 2 50 2 841 2 842 4 51 4 153 2 504 2 609 2 610 3 384 6 510 6 848 2 160 8 386 2 290 2 167 2 853 2 302 2 176 2 304 2 401 2 633 2 180 2 64 2 532 2 535 2 537 4 66 2 310 2 411 2 311 2 641 2 872 2 414 2 539 6 875 2 752 2 314 2 753 4 652 3 317 24 75 2 321 2 322 3 328 4 83 2 768 2 888 2 332 2 205 2 551 2 432 2 
584 2 853 2 448 2 
584 2 853 2 448 2 
209 4 1 4 561 2 3 6 215 2 446 2 448 2 217 4 342 4 11 2 218 2 794 2 222 2 455 2 454 2 350 4 798 2 226 2 572 2 16 2 114 24 806 2 805 2 20 2 234 2 235 2 355 4 122 4 580 2 245 4 125 2 30 4 584 4 127 2 365 2 129 2 131 2 41 4 483 12 261 2 487 6 829 2 143 4 490 2 837 2 271 12 605 2 150 2 50 2 842 4 51 4 844 2 609 2 504 2 610 2 721 4 282 2 283 2 611 2 384 6 510 2 848 2 160 2 166 4 290 2 167 2 853 6 298 4 523 2 300 4 398 2 174 4 733 4 302 2 176 2 401 2 735 2 633 2 180 2 64 2 537 16 535 2 66 2 67 4 310 4 411 2 414 2 539 6 314 4 753 4 187 2 317 16 73 2 75 2 321 6 655 2 883 2 328 4 768 2 332 2 425 2 551 4 671 2 557 2 
398 2 816 2 768 2 114 4 613 2 786 2 400 2 176 2 317 2 822 2 823 2 122 2 11 2 844 2 706 2 222 2 798 2 
209 4 1 4 561 2 3 6 215 2 446 2 448 2 217 4 342 4 218 2 794 2 222 2 455 2 454 2 350 4 798 2 226 2 572 4 16 2 114 24 806 2 805 2 20 2 234 2 235 2 355 4 122 2 244 2 580 4 245 4 125 2 30 4 584 4 365 2 127 2 129 2 131 2 41 4 478 2 483 12 261 2 487 6 829 2 143 4 837 2 271 12 605 2 150 2 50 2 842 4 51 4 844 2 609 2 504 2 610 4 721 4 282 2 283 2 611 2 384 6 510 2 848 2 157 2 160 2 166 4 290 2 167 2 853 6 298 4 523 2 300 4 398 2 174 4 733 4 302 2 176 2 401 2 735 2 633 2 180 2 64 2 537 16 535 2 66 2 67 4 310 4 411 2 414 2 539 6 314 4 753 4 187 2 317 16 73 2 75 2 758 2 321 6 655 2 883 2 328 4 332 2 85 2 551 4 430 2 
209 4 1 4 561 2 3 6 215 2 446 2 448 2 217 4 342 4 11 2 218 2 220 2 794 2 222 2 455 2 454 2 350 4 798 2 226 2 572 4 16 2 114 24 806 2 805 2 20 2 234 2 353 2 235 2 355 4 122 4 580 2 245 4 125 2 30 4 584 4 127 2 365 2 129 2 131 2 41 4 483 12 261 2 487 6 829 2 143 4 831 2 837 2 271 12 605 2 150 2 50 2 842 4 51 4 844 2 609 2 504 2 610 2 721 4 282 2 283 2 611 2 847 2 384 6 510 2 848 2 157 2 160 2 166 4 290 2 167 2 853 6 298 4 523 2 300 4 398 2 174 4 733 4 302 2 176 2 401 2 735 2 633 2 180 2 64 2 537 16 535 2 66 2 67 4 310 4 411 2 414 2 539 6 314 4 753 4 187 2 317 16 73 2 75 2 321 6 655 2 543 2 883 2 328 4 768 2 332 2 551 4 
876 2 
509 6 510 2 340 2 442 2 160 2 386 2 787 4 288 2 540 2 317 2 728 2 10 3 322 3 346 2 486 2 455 2 626 2 114 2 666 2 891 2 49 3 428 2 467 1 610 3 506 2 
509 6 510 2 340 2 442 2 160 2 386 2 787 4 288 2 540 2 317 2 728 2 10 2 322 2 346 2 486 2 455 2 626 2 114 2 666 2 891 2 49 2 428 2 610 2 506 2 
509 6 510 2 340 2 442 2 160 2 386 2 787 4 288 2 540 2 317 2 728 2 10 2 322 2 346 2 486 2 455 2 626 2 114 2 666 2 891 2 49 2 428 2 610 2 506 2 
315 2 251 2 160 2 386 2 681 2 102 2 162 3 540 2 317 4 686 2 168 2 621 2 620 2 322 3 856 2 708 4 294 2 884 2 485 4 330 2 835 4 114 10 269 2 715 4 333 4 524 2 376 2 839 4 463 2 237 3 500 2 407 2 183 5 530 2 242 3 780 2 610 3 382 6 337 2 68 4 
315 2 251 2 160 2 386 2 681 2 102 2 162 2 540 2 317 4 686 2 168 2 621 2 620 2 322 2 856 2 708 4 294 2 884 2 485 4 329 2 330 2 835 4 457 2 114 10 269 2 715 4 333 4 524 2 376 2 839 4 463 2 864 2 237 2 500 2 407 2 183 4 530 2 242 2 780 2 610 2 382 6 337 2 68 4 
315 2 251 2 160 2 386 2 681 2 102 2 162 2 540 2 317 4 686 2 168 2 621 2 620 2 322 2 856 2 708 4 294 2 884 2 485 4 329 2 330 2 835 4 457 2 114 10 269 2 715 4 333 4 524 2 376 2 839 4 463 2 864 2 237 2 500 2 407 2 183 4 530 2 242 2 780 2 610 2 382 6 337 2 68 4 
315 2 251 2 160 2 386 2 681 2 102 2 162 2 540 2 317 4 686 2 168 2 621 2 620 2 322 2 856 2 708 4 294 2 884 2 485 4 329 2 330 2 835 4 457 2 114 10 269 2 715 4 333 4 524 2 376 2 839 4 463 2 864 2 237 2 500 2 407 2 183 4 530 2 242 2 780 2 610 2 382 6 337 2 68 4 
315 2 251 2 160 2 386 2 681 2 102 2 162 2 540 2 317 4 686 2 168 2 621 2 620 2 322 2 856 2 708 4 294 2 884 2 485 4 329 4 330 2 835 4 457 4 114 10 269 2 715 4 333 4 524 2 376 2 839 4 463 2 864 4 237 2 500 2 407 2 183 4 530 2 242 2 780 2 610 2 382 6 337 2 68 4 
9 2 619 2 656 2 137 2 186 2 145 2 479 2 
627 2 35 2 186 2 374 2 634 2 439 2 
313 2 645 2 287 2 5 1 755 2 820 2 513 2 417 2 317 8 757 2 420 2 566 2 857 2 827 2 597 2 112 1 331 1 114 10 60 1 401 2 62 2 777 1 895 2 814 2 744 2 95 2 
315 6 102 6 37 2 317 6 133 2 686 6 216 2 856 6 519 2 764 2 329 2 835 12 457 3 267 2 114 6 47 2 734 2 231 2 524 2 333 4 525 1 495 4 864 4 500 6 866 2 354 2 183 15 530 6 780 6 579 2 412 4 
397 2 800 2 785 2 819 3 839 2 808 2 499 2 192 2 882 2 243 2 708 2 258 2 485 2 
397 2 800 4 560 2 114 1 785 2 819 6 839 2 317 1 808 2 549 2 499 2 192 2 882 2 622 1 243 2 708 2 258 2 485 2 
397 2 800 4 560 2 785 2 819 6 839 2 808 2 549 2 499 2 192 4 882 4 243 4 708 2 258 2 485 2 
397 2 800 4 560 6 114 1 785 2 819 10 839 2 317 1 808 2 549 8 499 2 192 8 882 8 622 1 243 8 708 2 258 2 485 2 
678 6 679 24 2 92 563 16 214 2 449 12 218 58 568 12 451 24 452 4 794 8 347 2 690 11 571 2 114 150 18 2 693 2 25 4 812 10 123 2 578 6 581 6 582 6 468 34 247 4 699 6 32 4 34 10 126 16 473 2 252 2 476 4 253 6 477 84 369 1 368 8 39 8 256 36 136 10 482 16 591 6 372 4 259 6 141 28 261 14 262 24 487 248 45 4 833 8 488 2 600 4 836 4 268 4 149 26 493 17 606 6 717 124 496 4 151 2 274 6 497 6 498 24 51 88 501 5 608 50 502 4 154 42 383 4 848 58 612 24 723 4 511 18 616 4 614 6 387 24 164 2 165 2 515 8 854 6 390 6 517 6 393 90 54 4 297 4 730 8 299 16 625 10 630 2 738 8 739 4 63 90 865 2 528 6 182 2 868 6 307 6 870 10 534 4 533 6 308 6 639 26 873 4 413 42 751 2 185 2 316 22 317 134 419 4 881 18 760 8 324 8 885 2 328 112 661 4 664 6 546 10 772 4 332 14 547 8 890 6 778 8 553 10 434 6 207 4 438 4 675 2 559 10 96 2 
679 2 99 2 848 2 441 2 850 2 563 2 165 2 515 2 218 2 293 2 792 2 451 2 221 4 794 2 347 2 296 2 396 4 299 2 458 2 114 28 629 2 18 2 27 2 533 2 65 2 363 2 582 2 184 2 33 2 474 2 418 2 39 2 317 28 76 2 190 2 590 2 482 2 591 2 592 2 140 2 141 20 261 2 262 2 487 26 830 2 328 12 833 2 147 2 332 2 547 2 717 2 718 2 51 12 501 2 779 2 502 2 434 2 278 4 672 2 338 2 96 2 
678 4 2 24 4 2 445 4 563 10 214 2 218 28 568 14 793 2 452 4 794 2 347 2 114 78 18 2 812 6 359 2 581 4 468 30 582 4 699 4 126 8 477 24 253 4 368 4 132 10 256 6 482 10 591 4 42 8 372 4 259 4 261 6 141 14 487 104 375 4 598 2 833 2 836 4 268 4 147 2 493 10 717 24 606 4 496 4 151 2 274 4 51 36 608 8 154 16 280 4 286 8 848 30 612 8 723 4 159 4 616 2 614 4 165 2 617 8 515 2 390 4 854 4 517 4 54 4 299 10 730 6 522 2 173 10 630 2 738 4 528 4 182 2 307 4 868 4 870 4 534 4 533 2 308 4 745 2 746 8 873 4 413 8 649 10 317 70 878 4 419 4 759 4 881 10 193 2 544 16 661 4 328 44 663 2 766 4 664 4 546 4 772 4 332 6 547 2 889 16 890 4 553 4 434 4 94 32 675 2 96 2 559 4 
848 12 723 2 616 2 563 6 164 2 165 2 515 2 218 12 794 2 347 2 690 2 730 4 299 6 571 2 114 28 18 2 695 2 739 2 307 4 812 2 123 2 870 2 533 2 468 6 582 4 126 6 473 2 185 2 316 10 253 4 368 4 317 26 419 2 256 2 881 2 760 2 482 6 591 4 141 14 261 2 487 40 328 14 488 2 833 2 147 2 546 2 332 2 493 2 547 2 717 8 606 4 51 14 501 2 553 2 434 4 383 2 675 2 96 2 559 2 
105 2 

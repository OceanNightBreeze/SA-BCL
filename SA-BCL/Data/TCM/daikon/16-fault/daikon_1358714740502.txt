#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 57 449 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 330 995 600 708 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.IllegalArgumentException 857 (659,783) (659,783) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.IllegalArgumentException 857 (659,783) (659,783) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.IllegalArgumentException 857 (659,783) (659,783) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.IllegalArgumentException 857 (659,783) (659,783) 
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (580,964) (580,964) 649 458 978 992 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 458 978 992 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:setDiff([I[I)[I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 123126 | = null
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z | CONSTANT | 1896 | 0 -> -1
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptSlice1:num_samples()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName; | RETURN | 78413 | return null
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern:intern([D)[D
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ValueTuple:size()I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | STATEMENT | 5303 | stmt -> ;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:sameLength([I[I)Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:prob_and(DD)D
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:lexLT([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern:intern([J)[J
daikon.Quant:eq(II)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:union([I[I)[I
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:isPointer()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:eltsLT([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Debug:logDetail()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 5354 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 131294 | = null
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice2:arity()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:ne(II)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:isDerived()Z
daikon.Quant:setEqual([I[I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:eltsLTE([II)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaCharStream:readChar()C
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:lte(II)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([[D)D
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V | OPERATOR | 20199 | - -> *
jtb.JavaCharStream:ReadByte()C
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.InvMap:InvMap()V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String; | RETURN | 4792 | return null
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quantify.Constant:Constant(I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:gt(II)Z
daikon.Debug:logOn()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.MathMDE:gcd(II)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaCharStream:getEndColumn()I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.WeakHasherMap:size()I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:eltwiseGT([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V | ASSIGN | 3964 | = null
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:isFloat()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.Ppt:Ppt()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:negate(I)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability; | CONDITION | 1674 | if (x) -> if (!x)
daikon.PptName:isEnterPoint()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:eltsNotEqual([II)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.FuzzyFloat:gte(DD)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:isIOAArray()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quant:memberOf(D[F)Z
daikon.Quant:gte(II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.FormatTestCase:passes()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_ntk()I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.Quant:eq(FF)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
90 2 561 2 455 2 964 2 261 2 580 2 22 2 425 4 781 2 
207 6 356 2 274 6 399 2 92 6 999 2 82 2 320 2 79 2 478 2 939 2 
275 2 964 2 580 2 788 2 97 6 46 4 819 2 384 2 611 6 1029 2 72 6 181 4 961 6 
4 29 161 10 784 4 921 6 379 16 164 16 690 4 951 2 513 2 655 8 572 12 958 4 996 10 800 2 451 8 702 8 297 2 456 10 964 6 299 6 580 6 938 2 396 2 495 10 1008 10 676 2 29 26 31 16 501 4 682 8 
236 6 758 4 
132 2 
977 2 786 2 512 2 11 2 794 2 874 4 90 2 276 2 334 2 580 4 25 2 1005 2 587 2 744 2 533 2 597 2 286 2 684 2 349 2 687 2 686 2 757 2 691 2 357 2 361 2 295 2 296 2 297 2 964 4 61 2 248 2 426 2 908 2 369 2 371 2 549 2 623 4 372 4 308 2 914 2 856 2 633 2 256 4 316 2 
225 6 826 2 503 4 161 16 4 49 921 4 379 28 830 2 202 4 690 2 164 28 833 6 475 2 111 4 208 6 572 22 996 16 800 2 451 18 702 6 964 4 456 6 299 4 620 4 580 4 705 2 810 8 495 16 1008 16 219 8 68 6 29 44 854 4 31 28 377 4 1050 4 
977 2 578 2 95 2 
390 2 673 2 952 2 415 2 220 10 993 2 696 2 796 2 926 2 916 2 768 22 361 2 441 2 223 2 
226 2 161 2 4 6 921 2 379 2 690 2 164 2 108 2 607 2 906 2 572 2 996 2 799 2 612 2 771 2 451 2 456 4 1043 2 495 2 1008 2 29 4 31 2 376 2 
161 4 4 16 379 8 164 8 833 6 473 2 495 4 1008 4 29 12 854 4 208 6 176 2 31 8 572 4 958 2 996 4 1050 4 
977 8 832 2 834 2 760 10 205 4 989 10 569 2 869 4 957 2 699 2 147 2 90 2 998 2 578 2 879 2 740 2 304 2 95 6 622 58 623 2 431 4 67 4 588 2 914 2 969 2 530 4 593 2 886 4 129 4 341 2 780 2 747 2 71 2 103 4 135 2 
508 2 234 2 836 2 544 2 417 2 772 2 524 2 1037 2 132 2 440 2 
378 2 137 1 785 1 262 12 923 3 8 22 381 2 514 6 517 2 145 3 660 2 148 2 930 1 932 2 388 4 149 16 936 1 523 1 22 2 525 2 808 2 812 2 672 2 26 2 818 2 677 1 681 1 34 2 535 2 828 6 829 2 45 22 170 2 413 4 414 2 174 1 177 2 57 2 703 2 964 32 59 2 303 16 429 2 709 2 186 2 66 2 187 1 312 10 435 2 855 2 69 1 315 6 712 2 559 2 197 1 722 2 861 1 200 2 723 1 979 2 201 4 982 1 203 2 204 2 728 2 731 2 570 2 449 2 735 5 452 2 877 3 739 2 878 2 580 30 1003 2 96 3 586 2 594 2 101 2 599 2 345 2 893 2 755 12 105 2 602 3 1013 2 467 12 354 2 1018 1 470 6 238 2 904 3 481 2 482 2 362 3 485 2 246 2 367 1 1036 4 120 2 1038 2 251 2 126 4 778 1 632 2 915 2 779 2 917 3 642 2 
964 2 824 2 
964 4 850 2 272 2 
750 2 
1 2 2 16 506 12 507 2 380 4 206 2 447 2 568 12 793 2 450 8 927 12 331 2 519 2 89 16 667 8 277 2 23 6 582 12 885 8 589 38 28 4 282 38 817 12 284 2 680 4 683 4 892 2 465 10 162 8 353 4 894 8 38 2 895 8 355 2 229 2 47 2 477 2 233 8 173 4 545 38 766 12 359 2 697 4 767 12 842 2 613 4 56 2 243 12 615 12 1032 4 844 2 1033 12 301 6 965 6 706 2 302 4 63 12 625 2 627 2 628 2 1045 2 432 6 1046 2 192 6 130 2 972 4 70 2 640 6 918 10 
348 2 300 2 169 1 258 2 
300 2 658 2 
245 2 827 4 150 4 725 2 306 2 852 2 124 2 853 2 1009 2 1047 2 1048 2 888 2 598 2 768 6 242 2 737 2 975 2 560 2 
136 2 258 2 
37 2 977 2 163 2 669 2 
37 2 311 2 977 2 163 2 669 2 713 2 
977 2 163 2 784 2 300 2 471 2 35 2 
564 2 61 2 
977 2 288 2 163 2 784 2 
776 2 550 2 
605 2 898 2 
976 2 338 2 
529 2 738 2 
605 2 738 2 279 2 
605 2 663 2 738 2 
605 2 490 2 738 2 
160 2 605 2 738 2 
977 2 163 2 956 2 294 6 801 2 247 2 583 2 502 6 
977 2 163 2 784 2 300 2 713 2 865 2 471 2 
300 2 471 2 493 2 
300 2 769 2 471 2 
648 2 488 2 258 2 
300 2 471 2 
839 2 488 2 
300 2 880 2 
20 2 488 2 258 2 
976 2 919 2 258 2 
537 2 738 2 258 2 
409 2 550 2 258 2 
310 2 605 2 258 2 
488 2 820 2 
300 2 883 2 
976 2 576 2 
21 2 738 2 
782 2 550 2 
605 2 1019 2 
488 2 890 2 
16 2 605 2 
536 2 550 2 
199 2 738 2 
976 2 1004 2 
20 2 488 2 258 2 515 2 
20 2 488 2 264 2 258 2 515 2 
488 2 924 2 258 2 
488 2 335 2 258 2 
91 2 688 2 835 2 762 2 
488 2 698 2 
855 2 
137 2 504 2 8 6 381 2 10 2 514 2 14 2 660 2 662 2 932 2 934 2 804 4 22 2 392 2 808 2 528 2 26 2 535 2 828 6 829 2 948 4 40 2 290 2 45 4 170 6 413 4 414 2 174 2 177 2 964 26 186 2 312 6 436 2 315 2 439 2 559 2 719 2 979 2 201 4 204 2 728 2 570 8 449 2 872 2 86 2 739 2 878 2 580 26 213 4 586 2 594 2 748 2 599 2 751 2 345 2 1014 2 354 2 470 4 759 2 897 2 1024 2 235 2 360 2 483 2 246 2 619 2 1036 4 120 2 123 2 626 2 126 4 253 2 632 2 255 2 
137 2 504 2 8 6 381 2 10 2 514 2 14 2 660 2 662 2 932 2 804 4 22 2 392 2 808 2 528 2 26 2 402 2 535 2 828 6 829 2 948 4 40 2 290 2 45 4 170 6 837 2 413 4 414 2 174 2 177 2 964 26 59 2 186 2 312 6 553 2 436 2 315 2 439 2 559 2 979 2 201 4 204 2 728 2 570 8 449 2 872 2 739 2 878 2 580 26 213 4 586 2 743 2 594 2 748 2 599 2 751 2 345 2 1014 2 354 2 470 6 759 2 897 2 1024 2 235 2 481 2 360 2 483 2 246 2 619 2 1036 4 120 2 123 2 626 2 126 4 253 2 632 2 255 2 
143 2 
882 2 64 2 
505 8 138 2 980 2 565 2 922 2 983 4 986 2 263 8 381 2 511 4 79 2 141 4 207 6 82 2 733 2 210 2 932 2 274 6 92 6 212 4 93 2 580 6 808 2 98 2 215 4 280 2 1006 2 590 2 941 2 464 2 753 2 535 2 345 2 754 2 685 2 1012 2 828 4 829 2 606 2 478 4 356 4 900 2 239 2 240 2 484 2 964 12 1035 2 1036 2 848 2 250 2 1044 10 494 2 190 2 126 2 556 2 970 2 858 2 638 2 639 4 559 2 
198 4 505 8 138 2 980 2 320 2 565 2 922 2 983 4 986 2 263 8 381 2 511 4 79 2 141 4 207 8 82 2 209 2 733 2 210 2 932 2 274 8 92 6 212 4 93 2 580 6 808 2 98 2 215 4 280 2 1006 2 590 2 941 2 753 2 535 2 345 2 754 2 685 2 1012 2 828 4 829 2 761 2 606 2 478 4 356 4 900 2 239 2 240 2 484 2 964 12 1035 2 1036 2 848 2 250 2 1044 10 494 2 126 2 190 2 556 2 970 2 638 2 639 4 559 2 
274 2 92 2 212 4 980 2 922 2 98 2 986 2 606 2 280 2 511 4 141 2 478 2 356 2 590 2 638 2 484 2 753 2 754 2 
505 4 138 2 980 2 320 2 565 2 922 2 983 4 986 2 263 4 381 2 511 4 141 4 207 6 82 2 733 2 210 2 932 2 274 6 92 4 212 4 93 2 580 6 808 2 98 2 215 4 280 2 1006 2 590 2 941 2 464 2 753 2 535 2 345 2 754 2 685 2 1012 2 828 4 829 2 606 2 478 4 356 4 900 2 239 2 240 2 484 2 964 12 1035 2 1036 2 848 2 250 2 1044 6 494 2 190 2 126 2 556 2 970 2 858 2 638 2 639 4 559 2 
505 4 138 2 980 2 565 2 922 2 983 4 986 2 263 4 381 2 511 4 141 4 207 6 82 2 733 2 210 2 932 2 274 4 92 6 212 4 93 2 580 6 808 2 98 2 215 4 280 2 1006 2 590 2 399 2 941 2 464 2 753 2 535 2 345 2 754 2 685 2 1012 2 828 4 829 2 606 2 478 4 356 4 900 2 239 2 240 2 484 2 964 12 1035 2 1036 2 848 2 250 2 1044 6 494 2 190 2 126 2 556 2 970 2 858 2 638 2 639 4 559 2 
505 4 138 2 980 2 565 2 922 2 983 4 986 2 263 8 381 2 511 4 79 2 141 4 207 6 82 2 733 2 210 2 932 2 274 6 92 6 212 4 93 2 580 6 808 2 98 2 215 4 280 2 1006 2 590 2 941 2 464 2 753 2 535 2 345 2 754 2 685 2 1012 2 828 4 829 2 606 2 478 4 356 4 900 2 239 2 240 2 484 2 964 12 1035 2 1036 2 848 2 250 2 1044 6 494 2 190 2 126 2 556 2 970 2 858 2 638 2 639 4 559 2 
505 8 138 2 980 2 565 2 922 2 983 4 986 2 263 8 381 2 511 4 79 2 141 4 207 8 82 2 733 2 210 2 932 2 274 6 92 8 212 4 93 2 580 6 808 2 98 2 215 4 280 2 1006 2 590 2 399 2 941 2 464 2 753 2 535 2 345 2 754 2 685 2 1012 2 828 4 829 2 606 2 478 4 356 4 900 2 239 2 240 2 484 2 964 12 1035 2 1036 2 848 2 250 2 1044 10 494 2 126 2 190 2 556 2 970 2 858 2 638 2 639 4 559 2 
505 8 138 2 980 2 565 2 922 2 983 4 986 2 263 8 381 2 511 4 79 2 141 4 207 6 82 2 733 2 210 2 932 2 274 6 92 6 212 4 93 2 580 6 808 2 98 2 215 4 280 2 1006 2 590 2 941 2 464 2 753 2 535 2 345 2 754 2 685 2 1012 2 828 4 829 2 606 2 478 4 356 4 900 2 239 2 240 2 484 2 964 12 1035 2 1036 2 848 2 250 2 1044 10 494 2 190 2 126 2 556 2 970 2 858 2 638 2 639 4 559 2 
646 2 260 2 138 2 139 6 922 2 140 1 652 2 8 8 263 2 511 4 381 2 514 2 141 4 925 6 267 1 792 1 14 2 798 2 660 2 272 6 931 2 932 2 665 6 274 4 522 2 804 4 151 2 22 2 808 2 394 1 674 2 26 2 280 2 397 2 399 4 941 2 154 2 155 2 33 4 824 6 535 2 685 2 36 2 828 6 829 2 539 2 45 2 170 6 542 7 413 4 414 2 692 2 49 1 419 2 177 2 962 7 964 46 59 2 848 2 551 6 309 2 186 2 312 6 190 2 436 2 438 4 970 2 556 4 315 2 439 2 858 2 714 2 559 2 979 2 981 2 980 2 201 4 565 2 323 1 984 1 983 4 727 6 986 2 204 2 566 2 867 6 728 2 81 6 207 12 328 6 570 4 82 4 449 2 733 2 85 2 210 2 875 6 739 12 878 2 92 8 212 4 1000 2 93 4 580 24 94 2 98 2 215 8 586 2 1006 2 590 2 745 2 99 2 594 2 100 10 748 2 599 2 750 6 753 2 345 2 346 2 754 2 1012 2 350 1 106 2 468 6 354 2 230 6 759 2 470 6 110 6 606 2 478 4 356 4 900 2 1024 4 765 2 237 2 239 2 240 2 481 2 363 1 484 2 618 8 246 2 1035 2 120 2 1036 4 1044 2 250 2 494 2 375 2 630 2 126 4 632 2 131 6 635 2 133 2 638 2 639 6 
0 2 646 2 260 2 138 2 139 6 922 2 652 2 8 8 263 6 511 4 381 2 514 2 141 4 925 6 14 2 798 2 660 2 272 6 931 2 932 2 665 6 274 8 522 2 804 4 151 2 22 2 808 2 674 2 26 4 280 2 397 2 941 2 154 2 155 2 33 4 824 6 535 2 685 2 36 2 828 6 829 2 948 2 539 2 45 2 170 6 413 4 414 2 692 2 419 2 177 2 964 48 59 2 848 2 551 6 309 2 186 2 312 6 190 2 436 2 438 4 970 2 556 4 315 2 439 2 858 2 714 2 559 2 979 2 981 2 980 2 201 4 565 2 983 4 727 6 986 2 204 2 566 2 79 4 867 6 728 2 81 6 207 12 328 6 570 8 82 4 449 2 733 2 85 2 210 2 875 6 739 12 878 2 92 8 212 4 1000 2 93 4 580 26 94 2 98 2 215 8 586 4 1006 2 590 2 745 2 99 2 594 2 100 10 748 2 599 2 750 6 753 2 345 2 346 2 754 2 1012 2 106 2 468 6 354 2 230 6 759 2 470 6 110 6 472 2 606 2 478 4 356 4 900 2 1024 4 765 2 237 2 239 2 240 2 481 2 484 2 618 8 246 4 1035 2 120 2 1036 4 1044 2 250 2 494 2 375 2 630 2 126 4 632 2 131 6 635 2 133 2 638 2 639 6 
0 2 646 2 505 4 260 2 138 2 139 6 922 2 652 2 8 8 263 6 511 4 381 2 514 2 141 4 925 6 14 2 798 2 660 2 272 6 931 2 932 2 665 6 274 8 522 2 804 4 151 2 22 2 808 2 674 2 26 4 280 2 397 2 941 2 154 2 155 2 33 4 824 6 535 2 685 2 36 2 828 6 829 2 948 2 539 2 45 2 170 6 413 4 414 2 692 2 419 2 177 2 964 48 59 2 848 2 551 6 309 2 186 2 312 6 190 2 436 2 438 4 970 2 556 4 315 2 439 2 858 2 714 2 559 2 979 2 981 2 980 2 201 4 565 2 983 4 727 6 986 2 204 2 566 2 79 4 867 6 728 2 81 6 207 12 328 6 570 8 82 4 449 2 733 2 85 2 210 2 875 6 739 12 878 2 92 8 212 4 1000 2 93 4 580 26 94 2 98 2 215 8 586 4 1006 2 590 2 745 2 99 2 594 2 100 10 748 2 599 2 750 6 753 2 345 2 346 2 754 2 1012 2 106 2 468 6 354 2 230 6 759 2 470 6 110 6 472 2 606 2 478 4 356 4 900 2 1024 4 765 2 237 2 239 2 240 2 481 2 484 2 618 8 246 4 1035 2 120 2 1036 4 1044 6 250 2 494 2 375 2 630 2 126 4 632 2 131 6 635 2 133 2 638 2 639 6 
0 2 505 4 260 2 8 12 263 6 511 4 514 4 266 2 14 2 798 2 272 12 274 10 522 2 804 6 805 6 22 2 808 2 26 4 280 2 33 4 824 12 535 2 825 2 36 2 828 6 829 2 539 2 45 4 51 6 59 2 848 2 309 2 551 6 312 8 556 4 315 4 557 2 858 2 559 2 320 2 565 2 79 4 566 2 867 6 81 12 328 6 82 4 570 10 873 2 85 2 875 6 92 10 878 2 580 24 93 4 98 2 586 4 590 2 594 2 99 2 340 6 100 8 599 2 345 2 346 2 106 2 354 2 110 6 606 2 356 4 900 2 618 8 120 2 630 2 375 2 126 4 127 2 632 2 635 2 131 12 638 2 133 2 639 6 641 6 646 2 138 2 139 6 922 2 652 2 381 2 141 4 925 6 660 2 931 2 932 2 665 6 151 2 674 2 397 2 399 2 941 2 154 2 155 2 685 2 948 2 170 8 413 4 414 2 692 2 694 2 954 6 177 2 419 2 178 6 963 2 964 52 186 2 190 2 434 2 436 2 438 4 970 2 439 2 714 2 716 6 979 2 201 4 980 2 981 2 983 4 727 6 204 2 986 2 728 2 207 16 733 2 449 2 210 2 739 10 212 4 1000 2 215 8 1006 2 745 2 748 4 750 12 753 2 754 2 1012 2 468 6 230 12 470 6 759 4 472 2 1020 6 478 4 1024 4 237 2 765 2 239 2 481 2 240 2 484 2 1031 6 246 4 1035 2 1036 4 250 2 1044 6 494 2 
1012 2 505 4 565 2 983 2 263 6 606 2 79 2 511 2 478 4 207 4 356 4 82 2 733 2 239 2 240 2 210 2 484 2 274 6 964 4 92 6 212 2 1035 2 848 2 215 2 280 2 1006 2 1044 4 250 2 590 2 858 2 638 2 639 2 753 2 754 2 685 2 
8 8 263 6 511 2 381 2 514 3 660 2 932 2 274 6 804 4 22 2 808 2 280 2 535 2 685 2 828 6 829 2 45 3 170 6 413 4 414 2 177 2 843 2 964 28 59 2 848 2 186 2 190 2 312 6 436 2 855 2 315 3 712 2 858 2 439 2 559 2 979 2 201 4 565 2 983 2 204 2 79 2 728 2 207 4 82 2 449 2 733 2 210 2 452 2 739 4 92 6 878 2 212 2 580 24 94 2 215 2 337 2 1006 2 591 2 590 2 594 2 100 2 599 2 345 2 753 2 754 2 1012 2 354 2 470 6 606 2 478 4 356 4 1024 2 239 2 240 2 481 2 482 2 484 2 614 3 1035 2 1036 4 120 2 491 2 1044 2 250 2 126 4 632 2 257 2 638 2 639 2 
1012 2 239 2 383 2 
1012 2 239 2 383 2 
505 4 138 2 922 2 8 2 263 6 381 2 511 2 10 4 141 4 14 4 383 2 660 2 932 2 387 2 274 12 522 2 22 2 808 2 26 4 280 2 816 2 399 4 33 2 158 4 535 2 828 6 829 2 689 2 45 2 170 2 413 4 414 2 953 2 841 2 177 2 964 24 59 2 848 2 967 2 309 2 186 2 312 2 436 2 438 2 556 2 970 2 439 2 558 2 559 2 724 4 979 2 201 4 320 4 983 2 986 2 204 2 79 4 728 2 207 16 991 2 570 4 82 4 332 2 875 2 997 2 574 2 739 4 878 2 92 12 579 2 212 2 93 4 580 16 215 4 216 2 586 4 594 2 100 2 599 2 345 2 1012 6 352 2 354 2 470 6 606 2 478 4 356 4 900 2 1024 6 764 2 239 4 481 2 246 4 1035 2 1036 4 120 2 1044 6 126 4 632 2 635 2 638 4 639 4 1049 2 644 2 
739 2 964 4 74 2 539 2 580 2 98 2 64 2 967 2 913 2 816 2 991 2 339 2 438 2 100 2 798 2 932 2 875 2 
505 4 138 2 922 2 8 2 263 6 381 2 511 2 10 4 141 4 14 4 383 2 660 2 932 2 803 2 387 2 274 12 522 2 22 2 808 2 809 2 26 4 280 2 816 2 399 4 33 2 158 4 535 2 828 6 829 2 689 2 45 4 170 2 413 4 414 2 953 4 841 2 177 2 964 24 59 2 848 2 428 2 967 2 968 2 309 2 186 2 710 2 312 2 436 2 556 4 970 2 439 2 559 2 724 4 979 2 201 4 320 4 983 2 986 2 204 2 79 4 728 2 207 16 991 2 570 4 82 4 332 2 875 2 997 2 739 2 878 2 92 12 579 2 212 2 93 4 580 16 215 4 586 4 594 2 599 2 345 2 1012 6 354 2 470 6 606 2 478 4 356 4 900 2 1024 6 764 2 239 4 481 2 246 4 1035 2 1036 4 120 2 1044 6 494 2 126 4 632 2 635 2 638 4 639 4 1049 2 644 2 
505 4 138 2 922 2 8 2 263 6 381 2 511 2 653 2 10 4 141 4 14 4 383 2 660 2 932 2 19 2 387 2 274 12 522 2 22 2 808 2 26 4 280 2 816 2 399 4 33 2 158 4 535 2 828 6 829 2 689 2 45 2 170 2 413 4 414 2 953 2 841 2 177 2 964 24 59 2 848 2 967 2 309 2 186 2 312 2 436 2 438 2 971 2 556 4 970 2 439 2 718 2 559 2 724 4 979 2 201 4 320 4 983 2 986 2 204 2 446 2 79 4 728 2 207 16 991 2 570 4 82 4 332 2 875 2 997 2 739 4 878 2 92 12 579 2 212 2 93 4 580 16 215 4 586 4 594 2 100 2 599 2 345 2 1012 6 354 2 470 6 606 2 478 4 356 4 900 2 1024 6 764 2 239 4 481 2 246 4 1035 2 1036 4 120 2 1044 6 494 2 126 4 632 2 635 2 638 4 639 4 1049 2 644 2 
259 2 4 16 6 10 262 14 7 2 789 2 790 4 8 34 791 2 509 2 510 4 514 16 266 2 13 2 268 4 14 2 520 4 273 4 802 2 18 2 804 12 22 4 808 2 24 4 526 2 527 2 278 2 528 2 811 2 814 2 281 3 815 2 27 2 29 12 532 4 283 2 31 8 821 2 535 2 825 2 826 4 828 6 829 2 830 2 40 2 540 2 291 16 541 2 45 22 838 2 52 2 54 2 546 4 548 2 58 2 59 6 299 4 305 3 849 2 851 2 307 2 65 2 552 2 313 4 312 14 854 4 554 2 314 2 557 2 315 22 859 4 559 2 860 2 319 6 563 2 75 2 73 6 864 2 78 4 77 10 570 58 871 10 571 2 84 6 330 2 873 2 572 6 87 2 575 2 878 2 577 2 580 30 581 2 585 4 337 2 591 2 592 48 594 2 99 4 887 2 102 2 889 4 599 2 344 2 345 2 600 2 347 2 351 2 601 10 603 2 604 6 107 2 897 2 899 2 903 2 358 2 113 2 905 2 360 2 114 2 609 8 608 20 365 2 614 2 616 2 617 12 118 2 120 2 368 16 121 3 370 2 910 2 122 2 373 2 125 4 630 2 126 4 631 4 127 2 636 10 637 2 645 2 137 2 379 8 381 2 146 10 656 3 660 4 929 2 661 2 385 2 931 2 932 2 664 2 386 6 666 2 389 2 933 2 935 4 670 2 674 2 400 2 678 2 944 2 945 4 156 4 406 2 946 26 947 2 161 4 949 2 164 8 950 4 166 4 165 8 412 2 168 2 170 14 413 6 693 10 416 2 695 2 175 2 174 2 418 2 177 4 700 4 959 4 701 6 421 2 180 2 702 6 963 2 964 40 704 6 424 2 184 16 707 6 427 2 185 4 708 2 430 2 186 4 711 2 433 2 434 2 437 2 973 2 974 6 439 2 196 2 442 8 979 2 201 6 985 2 728 4 730 2 990 4 732 6 995 2 449 2 208 6 734 20 736 22 996 4 451 4 454 2 739 2 457 2 1000 2 460 6 461 4 742 16 217 2 1008 4 748 20 1011 2 751 14 752 2 1014 2 466 2 1015 2 467 4 227 2 228 2 469 2 231 4 470 14 759 44 476 4 1022 2 1023 2 1024 2 479 60 1025 4 765 2 237 2 1027 6 481 6 1030 2 486 2 487 1 775 2 249 2 1036 4 489 2 1039 2 491 2 492 26 777 18 495 4 496 2 497 6 253 2 498 2 254 2 500 2 255 2 257 2 
466 2 6 2 540 2 759 6 8 2 45 2 514 2 170 2 899 2 146 4 449 2 661 2 964 2 845 2 804 2 249 2 580 2 581 2 281 2 27 2 312 2 400 2 315 2 636 2 
466 2 6 2 540 2 759 6 8 2 45 2 514 2 170 2 899 2 146 4 449 2 661 2 964 2 845 2 804 2 249 2 580 2 581 2 281 2 27 2 312 2 400 2 315 2 636 2 
466 2 6 2 540 2 759 6 8 2 45 2 514 2 170 2 899 2 146 4 449 2 661 2 964 2 845 2 804 2 249 2 580 2 581 2 281 2 27 2 312 2 400 2 315 2 636 2 
161 2 4 5 467 2 379 2 39 4 73 3 262 2 164 2 292 2 8 2 45 3 480 2 449 2 52 4 734 6 83 2 114 4 929 4 53 2 661 2 996 2 702 4 964 10 299 2 580 4 847 2 460 3 910 4 185 2 1041 3 495 2 1008 2 29 4 746 2 31 2 596 2 193 2 315 3 194 2 287 2 
161 2 4 4 467 2 379 2 39 4 73 2 262 2 164 2 292 2 8 2 45 2 480 2 449 2 52 4 734 6 83 2 114 4 929 4 53 2 572 2 661 2 996 2 800 2 451 2 702 4 964 10 299 2 580 4 847 2 460 2 910 4 185 2 1041 2 495 2 1008 2 29 4 746 2 31 2 596 2 193 2 315 2 194 2 287 2 
161 2 4 4 467 2 379 2 39 4 73 2 262 2 164 2 292 2 8 2 45 2 480 2 449 2 52 4 734 6 83 2 114 4 929 4 53 2 572 2 661 2 996 2 800 2 451 2 702 4 964 10 299 2 580 4 847 2 460 2 910 4 185 2 1041 2 495 2 1008 2 29 4 746 2 31 2 596 2 193 2 315 2 194 2 287 2 
161 2 4 4 467 2 379 2 39 4 73 2 262 2 164 2 292 2 8 2 45 2 480 2 449 2 52 4 734 6 83 2 114 4 929 4 53 2 572 2 661 2 996 2 800 2 451 2 702 4 964 10 299 2 580 4 847 2 460 2 910 4 185 2 1041 2 495 2 1008 2 29 4 746 2 31 2 596 2 193 2 315 2 194 2 287 2 
161 2 4 4 467 2 379 2 39 4 73 2 262 2 164 2 292 2 8 2 45 2 480 2 449 2 52 4 734 6 83 2 114 4 929 4 53 2 572 4 661 2 996 2 800 4 451 4 702 4 964 10 299 2 580 4 847 2 460 2 910 4 185 2 1041 2 495 2 1008 2 29 4 746 2 31 2 596 2 193 2 315 2 194 2 287 2 
218 2 459 2 9 2 751 2 474 2 152 2 547 2 
548 2 30 2 807 2 76 2 407 2 474 2 
832 1 325 1 109 2 444 2 381 2 567 2 81 2 144 2 868 2 797 1 957 1 420 2 271 2 364 2 183 2 422 2 366 2 964 10 298 2 1001 2 580 8 1007 2 595 2 221 2 679 2 224 1 
4 16 161 6 379 6 164 6 111 2 763 2 448 2 50 2 208 4 572 4 996 6 451 2 800 2 295 2 702 4 964 6 577 2 299 2 580 6 881 2 495 6 1008 6 219 2 68 4 29 12 854 2 856 2 31 6 859 2 406 2 
857 2 52 2 659 2 929 2 822 2 910 2 783 2 
964 1 580 1 857 2 52 2 659 2 929 2 822 2 910 2 232 1 783 2 
857 2 52 2 659 2 929 2 822 2 910 2 783 2 
857 2 52 2 659 2 929 2 822 2 910 2 783 2 
647 1 3 6 649 6 920 2 650 4 142 2 654 6 270 4 518 13 660 6 928 6 521 8 668 6 806 8 937 4 671 46 153 2 401 6 398 6 404 2 405 2 823 8 534 4 408 6 159 2 831 2 41 24 42 2 167 4 44 6 168 4 171 16 172 14 413 42 48 2 840 2 293 6 177 12 179 6 960 16 964 96 59 32 423 2 62 4 186 12 188 2 189 2 191 2 555 6 195 4 317 2 715 6 717 6 720 4 721 4 978 2 443 2 862 8 726 4 201 50 321 6 324 1 987 3 445 6 80 12 988 6 729 6 327 4 992 2 994 8 211 2 573 4 88 2 580 84 458 2 214 2 741 2 1002 6 336 2 462 2 584 2 884 4 463 6 891 2 749 12 347 4 756 12 1016 8 896 2 470 112 1021 6 112 6 902 6 481 32 1028 12 610 6 115 4 117 6 244 4 118 4 774 12 1034 12 621 4 909 6 374 2 1042 6 252 6 499 2 634 16 643 6 
562 2 647 2 978 2 5 2 862 6 201 20 321 2 322 2 863 2 326 2 866 2 265 2 80 2 382 2 142 2 516 2 988 38 654 2 12 2 329 2 992 2 269 2 518 2 870 2 795 4 657 2 660 2 17 2 876 2 333 2 453 2 668 2 391 2 458 2 580 44 393 2 1002 2 671 6 813 2 336 4 395 2 675 2 531 2 401 2 1010 2 943 2 32 2 403 2 342 4 405 2 891 2 343 2 157 2 749 4 104 6 408 2 222 2 347 2 756 4 289 2 538 2 1017 2 896 2 470 42 44 2 168 2 413 20 543 2 840 2 955 2 241 2 177 2 1028 4 610 2 770 2 773 4 964 46 118 2 774 2 423 2 119 2 846 2 909 2 911 2 1040 2 1042 2 912 2 186 2 318 4 643 2 
3 4 649 4 787 8 650 4 651 16 654 4 270 4 518 10 15 4 660 2 928 4 668 4 806 8 937 4 671 24 675 10 940 4 401 4 398 4 942 8 285 4 405 2 823 16 534 4 408 4 159 2 410 2 41 28 411 4 42 2 167 4 44 4 168 2 171 8 413 36 293 4 177 6 55 2 960 24 182 2 964 78 59 28 60 16 62 4 966 2 186 6 555 4 195 4 717 4 721 2 978 2 862 6 726 4 201 44 322 10 321 4 445 4 80 10 988 14 327 4 729 4 329 10 992 2 870 2 994 8 211 2 580 70 458 2 741 2 1002 6 336 2 462 4 884 4 463 4 749 10 347 2 756 10 1016 8 470 104 112 4 901 8 902 4 1026 2 481 30 1028 10 610 4 115 4 116 8 117 4 244 4 907 4 118 2 1034 12 774 6 119 2 909 4 624 4 911 2 629 2 1042 4 252 4 128 4 499 4 634 24 134 32 643 4 
721 2 720 2 647 2 978 2 862 4 201 14 321 2 863 2 987 2 80 2 988 14 654 4 992 2 518 2 994 6 657 2 660 2 88 2 668 2 458 2 580 26 214 2 671 8 1002 2 336 2 462 2 584 2 401 4 405 2 749 6 408 2 347 2 756 6 831 2 41 6 470 40 44 4 168 2 172 10 413 14 1028 6 481 12 177 2 610 4 59 12 964 28 118 2 774 2 621 2 846 2 62 4 909 2 911 2 1042 4 186 2 188 2 191 2 499 2 643 4 
43 2 

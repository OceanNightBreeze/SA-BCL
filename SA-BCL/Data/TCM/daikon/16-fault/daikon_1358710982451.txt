#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (104,714) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 749 123 963 729 649 742 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 257 607 712 632 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 789 
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (233,283) (321,913) (321,913) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 629 836 179 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 317 935 126 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 317 935 126 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Intern:numIntArrays()I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:eq(II)Z
daikon.Quant:eltsLT([II)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:max([I)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_47()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.ValueSet:ValueSet(I)V
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_ntk()I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd(II)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern:intern([I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfo:relate_var()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:gt(II)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:subsetOf([F[F)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:setEqual([I[I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.PptSlice0:arity()I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:modulus([I)[I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:noDups([I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:ne(II)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters; | STATEMENT | 22663 | stmt -> ;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quant:subsetOf([I[I)Z
daikon.Debug:logOn()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:lt(II)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap; | RETURN | 20923 | return null
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:isPointerFileRep()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node()V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.Invariant:justified()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:union([I[I)[I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGT([II)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:slice([III)[I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaCharStream:getBeginLine()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_54()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.WeakHasherMap:size()I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONSTANT | 127547 | 2 -> -1
daikon.diff.RootNode:RootNode()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
daikon.ValueTuple:isMissing(I)Z
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ModBitTracker:num_sets()I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:gte(II)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:isFloat()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isIntegral()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41719 | return null
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:intersection([I[I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_50()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsGteIndex([I)Z | CONSTANT | 179520 | 0 -> -1
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3R_134()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:lexGT([I[I)Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I | CONDITION | 9296 | while (x) -> while (!x)
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([J)Z | ASSIGN | 58337 | = null
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([J[J)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3_13()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfo:new_ppt()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:memberOf(F[D)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:sign(I)I
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaCharStream:BeginToken()C
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaCharStream:getEndLine()I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_133()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:backup(I)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
401 2 506 2 462 2 677 2 357 2 866 4 247 2 910 2 634 2 
360 2 253 2 717 2 793 2 92 6 345 2 132 6 519 2 335 2 304 6 160 2 
558 6 841 2 68 6 344 6 677 2 398 2 144 2 244 2 506 2 762 4 507 2 831 6 63 4 
702 10 205 2 309 4 616 8 128 12 707 10 6 2 677 6 133 6 279 10 448 26 561 16 506 6 747 8 479 2 877 2 90 2 718 28 482 2 163 16 662 10 40 8 517 4 573 4 667 8 198 4 670 10 303 16 896 2 100 6 
402 6 408 4 
883 2 
342 2 28 2 125 2 644 4 906 2 237 2 846 2 57 2 711 2 597 2 12 2 714 2 479 2 659 2 460 2 884 2 426 2 605 2 400 2 634 2 93 2 726 2 305 2 
702 15 469 8 235 4 902 2 128 22 707 15 276 4 677 4 154 2 133 4 448 47 279 6 848 5 780 6 944 2 561 32 108 4 506 4 747 19 603 6 90 2 718 52 186 2 292 4 163 32 662 15 366 6 333 6 295 2 71 4 667 6 861 6 830 3 198 2 670 15 302 4 303 32 27 4 100 4 
76 2 435 2 714 2 
87 2 792 2 458 2 811 2 185 2 778 2 347 2 104 2 157 10 611 2 83 2 113 22 652 2 920 2 
702 2 128 2 707 2 676 2 448 4 279 4 561 2 354 2 747 2 718 6 163 2 662 2 608 2 23 2 860 2 198 2 967 2 406 2 670 2 303 2 642 2 306 2 100 2 
702 4 618 2 128 4 718 16 707 4 163 8 662 4 366 6 573 2 448 12 71 4 561 8 861 6 670 4 303 8 27 4 788 2 
903 2 76 2 275 4 586 2 842 2 447 2 476 2 746 2 319 2 714 6 456 2 486 2 634 2 259 2 574 2 193 2 334 2 96 8 299 2 640 2 435 4 407 14 494 2 
1 2 617 2 705 2 560 2 750 2 752 2 324 2 883 2 425 2 552 2 
341 3 471 2 209 1 210 2 103 2 213 2 214 1 353 16 216 2 218 2 358 2 357 2 220 2 117 3 224 24 363 2 225 2 719 2 483 3 485 2 22 1 121 2 724 3 490 2 123 2 370 3 729 2 374 32 25 2 26 2 495 2 867 2 869 3 500 2 737 2 501 6 503 4 31 2 872 2 740 2 239 3 742 2 385 3 242 2 506 34 873 2 37 2 874 2 749 2 748 16 389 4 141 2 627 4 512 2 511 5 516 2 142 2 757 1 633 1 261 2 635 2 891 2 766 1 767 2 898 2 148 2 412 2 899 2 769 2 53 2 900 1 55 1 150 1 904 6 774 1 413 2 649 2 278 2 281 2 419 4 918 2 285 2 286 1 922 2 538 2 790 2 65 2 541 1 66 2 67 2 424 2 544 2 665 2 545 2 165 1 293 2 930 4 296 2 430 2 297 2 72 1 168 2 802 3 300 6 803 1 806 2 171 2 440 4 441 2 172 2 559 2 937 2 677 32 451 16 680 2 945 2 817 2 947 2 949 2 684 3 318 2 565 3 953 1 457 32 183 1 692 2 954 2 824 2 326 3 570 2 327 6 571 4 961 24 331 2 963 2 191 2 577 2 465 2 337 2 200 16 
506 2 623 2 
539 2 889 2 506 4 
808 2 
2 2 206 12 208 2 840 12 588 4 107 2 110 30 351 2 477 30 355 12 712 2 851 4 715 30 599 2 223 8 362 2 601 2 722 14 227 2 120 2 607 2 606 4 857 2 859 2 725 4 231 38 730 18 732 92 497 20 499 4 734 6 129 2 735 2 736 2 619 2 504 2 384 2 241 18 243 2 744 2 36 2 751 92 390 2 882 2 257 2 754 30 514 20 631 4 397 2 632 2 887 6 42 30 758 2 759 2 47 30 405 92 765 2 895 2 147 10 410 4 52 2 770 2 526 2 151 2 905 38 907 30 414 2 648 20 530 2 416 6 60 2 781 2 914 2 915 30 284 2 62 2 64 2 537 10 785 2 656 20 924 2 161 2 540 2 797 2 798 2 543 16 164 4 428 30 932 2 307 2 557 18 809 2 173 4 934 2 443 2 78 12 814 2 446 2 940 30 450 10 453 2 180 2 948 30 455 2 566 2 827 8 464 18 576 30 965 2 833 12 579 2 
753 1 48 2 316 2 143 2 
273 2 48 2 
761 2 77 2 612 2 48 2 329 2 517 2 714 2 
77 2 48 2 139 2 
77 2 48 2 260 2 
252 2 143 2 399 2 
77 2 48 2 
252 2 535 2 
955 2 48 2 
252 2 170 2 143 2 
823 2 650 2 143 2 
600 2 111 2 143 2 
255 2 119 2 143 2 
269 2 134 2 143 2 
252 2 383 2 
48 2 13 2 
650 2 268 2 
111 2 923 2 
45 2 119 2 
269 2 308 2 
252 2 820 2 
789 2 
795 2 119 2 
81 2 111 2 
650 2 678 2 
252 2 170 2 69 2 143 2 
252 2 170 2 69 2 143 2 777 2 
252 2 189 2 143 2 
252 2 417 2 143 2 
149 2 105 2 849 2 245 2 
733 2 870 2 880 2 852 4 484 2 812 2 826 2 547 2 666 2 942 2 454 2 532 2 420 2 113 6 137 2 99 2 508 2 556 4 
143 2 140 2 
612 2 959 2 590 2 714 2 
403 2 612 2 959 2 329 2 590 2 714 2 
912 2 77 2 612 2 48 2 517 2 714 2 
597 2 246 2 
612 2 463 2 517 2 714 2 
432 2 119 2 
269 2 550 2 
650 2 49 2 
111 2 589 2 
269 2 11 2 111 2 
269 2 111 2 122 2 
269 2 828 2 111 2 
269 2 111 2 908 2 
523 2 79 2 112 2 217 6 714 2 423 6 162 2 612 2 
252 2 893 2 
424 2 
103 2 216 2 14 2 358 6 357 2 225 2 485 2 230 2 727 2 374 6 729 2 26 2 495 2 867 2 379 2 500 2 501 2 737 2 503 4 31 2 740 2 382 4 742 2 242 2 506 26 37 2 748 6 248 2 141 2 389 8 38 2 627 4 261 2 521 2 766 2 53 4 904 6 527 4 156 2 649 2 278 2 281 2 61 2 918 2 285 2 922 2 787 2 790 2 65 2 930 4 297 2 72 4 168 2 300 4 803 2 440 4 175 2 674 2 937 2 177 2 677 26 943 2 816 2 817 2 818 2 457 4 824 2 954 2 692 2 327 2 331 2 571 8 191 2 963 2 465 2 199 2 
210 2 103 2 348 2 216 2 14 2 358 6 357 2 225 2 485 2 230 2 727 2 374 6 729 2 26 2 495 2 867 2 379 2 500 2 501 2 737 2 503 4 31 2 740 2 382 4 742 2 242 2 506 26 37 2 748 6 248 2 141 2 389 8 38 2 627 4 261 2 766 2 898 2 53 4 904 6 527 4 649 2 278 2 281 2 61 2 918 2 285 2 922 2 787 2 790 2 65 2 930 4 297 2 72 2 168 2 300 6 803 2 436 2 440 4 175 2 674 2 937 2 177 2 677 26 943 2 816 2 817 2 457 4 824 2 954 2 692 2 327 2 331 2 571 8 191 2 963 2 465 2 466 2 467 2 199 2 
7 2 
298 2 835 2 
378 2 625 2 615 2 498 2 321 2 16 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 921 2 687 2 339 2 
378 2 625 2 615 2 498 2 321 2 16 2 773 2 39 2 473 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 921 2 687 2 377 4 339 2 
615 2 350 2 282 2 913 2 321 2 553 2 283 2 39 2 
378 2 625 2 615 2 498 2 321 2 16 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 921 2 687 2 339 2 
378 2 625 2 615 2 498 2 321 2 16 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 921 2 687 2 339 2 
378 2 625 2 615 2 498 2 321 2 16 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 921 2 687 2 339 2 
378 2 625 2 615 2 498 2 321 2 16 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 921 2 687 2 339 2 
378 2 625 2 615 2 498 2 321 2 16 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 921 2 687 2 339 2 
378 2 625 2 615 2 321 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 267 2 921 2 687 2 339 2 
378 2 625 2 615 2 321 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 267 2 921 2 687 2 339 2 
378 2 625 2 615 2 321 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 267 2 921 2 687 2 339 2 
378 2 625 2 615 2 321 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 267 2 921 2 687 2 339 2 
378 2 625 2 615 2 321 2 39 2 44 2 166 2 941 2 350 2 913 2 282 2 553 2 801 2 283 2 921 2 687 2 339 2 
837 2 3 2 584 2 210 2 103 2 350 2 478 2 216 2 358 6 357 2 15 2 225 2 16 2 489 2 490 2 374 8 26 2 495 2 867 2 378 2 615 2 501 3 503 4 740 2 242 2 506 24 37 2 748 6 876 3 625 2 141 2 627 4 39 2 261 4 44 2 898 2 904 6 527 4 278 2 281 2 913 2 282 2 283 2 285 2 921 2 922 2 787 2 65 2 424 2 545 2 930 4 166 2 168 2 553 2 801 2 300 6 440 4 937 2 677 24 941 2 816 2 949 2 687 2 457 3 824 2 321 2 459 2 327 3 331 2 191 2 195 2 465 2 199 2 339 2 
203 2 44 2 197 2 
203 2 44 2 197 2 
203 6 101 2 709 4 210 2 103 2 349 2 350 2 356 2 596 2 216 2 358 2 357 2 360 4 222 2 225 2 717 4 16 6 369 2 229 2 489 2 230 4 729 4 374 2 26 2 495 2 376 2 867 2 615 2 498 4 503 4 31 4 132 16 242 2 506 24 37 2 748 2 389 4 141 2 627 4 253 4 256 4 393 2 261 4 519 4 44 4 639 2 764 2 264 4 897 2 898 2 51 2 524 2 771 2 904 6 528 2 776 2 278 2 281 2 283 2 917 2 285 2 922 2 421 2 787 2 160 4 925 2 793 4 65 2 927 2 926 2 660 2 930 4 297 4 668 4 72 2 168 2 553 4 801 6 300 6 169 2 73 4 304 12 440 4 810 2 937 2 677 16 313 4 816 6 946 2 817 4 688 2 690 2 457 2 824 2 691 2 184 2 693 2 92 12 957 2 571 4 331 2 191 2 196 2 465 2 197 2 199 2 
393 2 853 2 677 2 723 2 261 2 489 2 349 2 431 2 298 2 168 2 506 4 819 2 892 2 136 2 356 2 421 2 376 2 
203 6 101 2 709 4 210 2 103 2 349 2 350 2 596 2 216 2 358 2 357 2 360 4 222 2 225 2 717 4 16 6 19 2 369 4 229 2 230 4 729 4 374 2 373 2 26 2 495 2 233 2 376 2 867 2 615 2 498 4 502 2 503 4 31 4 132 16 242 2 506 24 37 2 748 2 389 4 141 2 627 4 253 4 256 4 393 2 261 2 519 4 44 4 639 2 764 2 264 4 897 2 898 2 51 2 904 6 646 2 528 2 776 2 278 2 281 2 283 2 917 2 285 2 922 2 421 2 787 2 160 4 925 4 793 4 65 2 926 2 660 2 930 4 297 4 668 4 168 2 553 4 801 6 300 6 169 2 73 4 304 12 805 2 440 4 810 2 937 2 677 16 313 4 816 6 946 2 817 4 688 2 690 2 457 4 824 2 691 2 184 2 693 2 92 12 571 4 331 2 191 2 196 2 465 2 197 2 199 2 
203 6 207 2 704 2 101 2 709 4 210 2 103 2 349 2 350 2 356 2 596 2 216 2 358 2 357 2 360 4 222 2 225 2 717 4 16 6 369 2 229 2 489 2 230 4 24 2 729 4 374 2 26 2 495 2 376 2 867 2 615 2 498 4 503 4 31 4 132 16 242 2 506 24 37 2 748 2 389 4 141 2 627 4 253 4 256 4 393 2 261 4 519 4 44 4 639 2 764 2 264 4 146 2 897 2 898 2 51 2 270 2 904 6 528 2 776 2 278 2 281 2 283 2 917 2 285 2 922 2 421 2 787 2 160 4 925 4 793 4 65 2 926 2 660 2 930 4 297 4 668 4 72 1 168 2 553 4 801 6 300 6 169 2 73 4 304 12 805 2 440 4 810 2 937 2 677 16 313 4 816 6 946 2 817 4 688 2 690 2 457 2 824 2 691 2 184 2 693 2 92 12 571 4 331 2 191 2 196 2 465 2 197 2 199 2 
202 2 702 4 703 4 3 2 706 4 472 1 707 4 5 2 708 2 8 1 211 2 710 16 210 9 474 2 215 2 216 6 14 2 713 2 15 2 225 2 17 2 718 15 18 4 226 2 721 3 21 2 727 2 729 4 232 2 26 2 495 2 496 3 731 16 29 2 234 2 236 6 501 19 503 4 738 2 30 2 739 4 740 2 741 24 32 2 505 12 33 10 242 2 743 2 34 2 35 2 506 64 37 2 747 4 748 14 248 2 251 4 249 2 38 2 510 2 513 2 755 2 41 10 258 2 515 2 261 2 518 4 43 2 760 2 46 2 522 4 763 2 263 2 265 2 766 2 50 2 271 2 525 2 272 6 772 2 527 12 274 6 56 2 529 2 278 2 59 2 280 2 779 2 281 2 783 2 782 2 531 2 534 2 784 2 285 6 536 2 787 2 791 16 289 4 794 2 65 4 796 3 291 16 70 12 546 2 294 1 548 2 799 2 71 4 800 2 300 39 804 2 803 2 303 8 74 4 555 2 807 2 310 4 813 2 312 12 314 4 816 2 561 8 82 2 315 2 85 4 564 1 821 4 89 10 569 2 824 2 323 2 825 2 91 2 327 16 328 2 331 4 571 25 575 2 94 2 97 2 95 2 829 4 578 2 832 1 581 6 834 4 338 2 836 2 837 2 838 2 585 2 839 2 587 2 845 4 103 2 847 2 591 2 592 2 106 2 353 4 598 2 357 4 358 14 115 2 361 2 602 14 364 14 365 4 604 2 366 6 368 2 610 2 862 2 371 12 372 2 375 2 374 28 124 2 865 1 867 2 614 2 868 4 379 2 128 6 871 12 381 2 131 3 133 4 620 4 622 2 621 2 135 2 624 2 386 2 875 10 876 2 626 4 141 2 389 24 627 4 392 2 629 2 881 2 394 2 630 2 885 2 886 2 888 4 636 2 145 12 894 14 409 2 898 9 411 2 643 16 901 3 902 2 904 6 153 2 647 4 909 2 154 4 415 2 418 2 916 2 919 2 922 2 653 2 655 2 422 2 928 2 163 8 663 2 662 4 167 2 930 20 667 6 168 2 669 2 434 14 670 4 671 2 437 2 438 4 439 2 440 18 442 2 174 2 673 2 175 2 674 14 444 2 445 2 675 4 176 2 937 2 177 2 677 52 178 2 448 12 943 46 179 2 683 2 181 2 685 2 686 2 182 2 457 19 692 20 956 2 958 1 190 2 694 2 191 2 195 2 698 2 465 2 699 2 966 2 701 10 200 4 
457 2 901 2 527 2 501 2 41 4 327 2 30 2 677 2 740 2 529 2 694 2 943 6 95 2 94 2 638 2 506 2 622 2 124 2 374 2 701 2 685 2 358 2 748 2 875 2 
457 2 901 2 527 2 501 2 41 4 327 2 30 2 677 2 740 2 529 2 694 2 943 6 95 2 94 2 638 2 506 2 622 2 124 2 374 2 701 2 685 2 358 2 748 2 875 2 
457 2 901 2 527 2 501 2 41 4 327 2 30 2 677 2 740 2 529 2 694 2 943 6 95 2 94 2 638 2 506 2 622 2 124 2 374 2 701 2 685 2 358 2 748 2 875 2 
702 2 768 2 933 2 343 2 706 2 707 2 152 2 501 3 740 2 677 4 529 2 131 3 133 2 448 4 561 2 506 10 950 4 353 2 86 3 786 2 822 2 457 3 718 5 796 3 481 2 163 2 325 4 662 2 395 4 929 4 520 4 863 2 667 4 700 2 374 2 670 2 613 2 303 2 581 6 200 2 
702 2 768 2 933 2 343 2 128 2 706 2 707 2 152 2 501 2 740 2 677 4 529 2 131 2 133 2 448 4 561 2 506 10 950 4 353 2 86 2 747 2 786 2 822 2 457 2 90 2 718 4 796 2 481 2 163 2 325 4 662 2 395 4 929 4 520 4 863 2 667 4 700 2 374 2 670 2 613 2 303 2 581 6 200 2 
702 2 768 2 933 2 343 2 128 2 706 2 707 2 152 2 501 2 740 2 677 4 529 2 131 2 133 2 448 4 561 2 506 10 950 4 353 2 86 2 747 2 786 2 822 2 457 2 90 2 718 4 796 2 481 2 163 2 325 4 662 2 395 4 929 4 520 4 863 2 667 4 700 2 374 2 670 2 613 2 303 2 581 6 200 2 
702 2 768 2 933 2 343 2 128 2 706 2 707 2 152 2 501 2 740 2 677 4 529 2 131 2 133 2 448 4 561 2 506 10 950 4 353 2 86 2 747 2 786 2 822 2 457 2 90 2 718 4 796 2 481 2 163 2 325 4 662 2 395 4 929 4 520 4 863 2 667 4 700 2 374 2 670 2 613 2 303 2 581 6 200 2 
702 2 768 2 933 2 343 2 128 4 706 2 707 2 152 2 501 2 740 2 677 4 529 2 131 2 133 2 448 4 561 2 506 10 950 4 353 2 86 2 747 4 786 2 822 2 457 2 90 4 718 4 796 2 481 2 163 2 325 4 662 2 395 4 929 4 520 4 863 2 667 4 700 2 374 2 670 2 613 2 303 2 581 6 200 2 
475 2 864 2 109 2 493 2 50 2 695 2 
254 2 658 2 674 2 493 2 20 2 336 2 155 2 
340 1 204 2 54 2 380 2 238 2 677 8 346 2 58 1 506 10 593 2 595 2 138 2 114 2 922 2 319 1 567 2 628 2 187 1 756 2 855 2 429 2 574 1 609 2 262 2 641 2 301 2 
702 6 469 2 868 2 128 5 707 6 936 2 775 2 738 2 677 6 56 2 133 2 448 12 848 4 108 2 561 6 506 6 747 2 718 16 90 2 661 2 163 6 662 6 366 4 664 2 192 2 71 2 404 2 667 4 670 6 303 6 
0 2 657 2 879 2 325 2 311 2 395 2 102 2 520 2 194 2 551 2 352 2 98 2 952 2 
0 2 657 2 879 6 325 2 311 2 395 2 677 1 102 4 9 2 696 1 520 2 194 2 506 1 551 2 352 2 98 2 850 2 952 2 
0 2 657 2 879 6 325 2 311 2 395 2 102 4 9 2 520 2 194 4 551 4 352 4 98 2 850 2 952 2 
0 2 657 2 879 10 325 2 311 2 395 2 677 1 102 4 9 8 696 1 520 2 194 8 506 1 551 8 352 8 98 2 850 6 952 2 
472 2 587 2 8 2 845 4 210 4 591 2 106 2 594 2 216 6 713 2 115 2 361 2 116 2 602 14 226 2 720 2 365 4 604 2 368 2 21 2 372 2 865 1 614 2 731 2 29 2 126 2 234 2 32 2 240 1 34 2 506 38 624 2 251 4 626 4 392 2 513 2 630 2 755 2 886 2 518 4 43 2 46 2 265 2 409 2 898 4 647 4 415 2 59 2 534 2 784 2 919 2 285 6 791 2 422 2 294 1 930 18 549 2 300 32 671 2 437 2 74 4 438 4 440 16 672 2 935 2 176 2 677 34 178 2 312 2 314 5 82 2 317 2 958 1 331 4 571 4 832 1 338 2 
470 4 583 2 472 4 647 4 843 2 8 2 212 2 59 2 158 2 533 4 651 2 784 2 159 4 285 2 288 2 216 2 359 2 115 2 361 2 290 2 602 6 480 2 542 2 118 2 854 2 226 2 367 2 368 2 488 2 228 2 930 20 931 2 72 2 433 2 300 42 492 2 554 2 74 2 438 4 440 20 672 2 29 2 126 2 935 2 127 2 130 2 176 6 80 2 677 44 178 2 939 2 32 2 815 2 679 2 452 2 314 2 34 2 506 46 82 2 681 2 682 2 624 2 951 2 563 2 317 2 509 2 250 2 387 2 251 4 320 2 388 2 568 2 391 2 569 4 630 2 188 2 960 2 330 2 571 38 331 2 332 2 518 2 962 2 697 2 637 2 145 6 266 2 580 2 338 2 468 2 
472 2 587 2 4 2 647 4 843 2 415 2 845 6 210 6 10 2 59 2 594 2 784 2 919 2 285 4 216 4 219 8 221 2 716 2 602 10 422 2 480 6 226 2 118 2 365 2 604 2 487 2 368 2 427 2 21 2 294 2 930 20 858 8 856 2 549 2 300 40 372 2 554 6 671 2 74 6 437 2 438 4 440 18 614 2 672 2 29 4 234 2 126 2 935 2 178 2 677 40 939 2 449 2 679 6 314 6 506 44 562 2 745 2 624 2 317 2 251 4 878 2 626 6 392 2 513 2 755 2 461 2 886 2 571 14 331 2 518 4 43 2 964 8 46 4 890 2 265 2 582 2 898 6 338 2 
472 2 647 6 277 2 210 10 911 2 212 2 59 2 784 2 285 2 216 2 654 4 115 4 361 4 791 10 116 2 602 8 720 2 226 2 368 2 294 6 930 14 72 2 491 2 433 2 300 38 74 2 865 2 438 6 440 14 672 2 731 2 29 2 126 2 935 2 176 6 178 2 677 26 939 2 312 10 32 4 314 2 34 4 506 28 82 4 84 2 624 2 317 2 689 2 251 6 88 4 630 4 958 2 396 2 572 2 571 14 331 2 332 2 518 2 832 2 898 10 338 2 201 2 
75 2 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 
322 1 645 1 728 1 287 1 844 1 938 1 

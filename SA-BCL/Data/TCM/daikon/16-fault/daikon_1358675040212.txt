#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 430 (833,849) 813 287 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (144,575) 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 392 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 392 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 392 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 392 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 392 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 369 906 812 437 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 432 265 791 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltsGtIndex([I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:gte(II)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | RETURN | 123502 | return null
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_55()Z
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_ntk()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo; | RETURN | 1206 | return null
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quantify.Constant:Constant(I)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:isIOAArray()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:gt(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant; | CONDITION | 1464 | if (x) -> if (!x)
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.ProglangType:isPointerFileRep()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ModBitTracker:split(I)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaCharStream:BeginToken()C
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([[D)D
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:eq(II)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:gcd(II)I
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_163()Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfo:simplify_name()Ljava.lang.String; | RETURN | 105067 | return null
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:intersection([I[I)[I
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:eq(FF)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.WeakHasherMap:size()I
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:subsetOf([F[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | CONDITION | 21420 | if (x) -> if (!x)
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 37686 | 64 -> 0
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:setDiff([I[I)[I
daikon.Ppt:Ppt()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
daikon.ProglangType:dimensions()I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_58()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:slice([III)[I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_samples()I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53476 | = null
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern:intern([I)[I | ASSIGN | 15925 | = null
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:isDerived()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:lexGT([I[I)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName:hashCode()I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ProglangType:base()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
jtb.JavaCharStream:readChar()C
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoAux:hashCode()I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ProglangType:isScalar()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:relate_var()V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_49()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:memberOf(F[D)Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
743 4 910 2 434 2 794 2 225 2 745 2 802 2 184 2 389 2 
825 2 271 6 331 2 99 2 86 2 104 6 515 2 125 2 254 2 922 6 954 2 
416 2 633 6 347 4 225 2 735 4 154 6 717 2 648 2 408 2 579 6 485 2 354 6 802 2 
14 2 568 4 814 2 813 4 694 2 792 2 833 4 849 2 225 2 516 2 39 2 869 2 752 2 287 2 802 2 430 4 970 2 
958 4 760 6 
502 2 
540 2 956 2 192 2 751 2 145 2 506 2 68 2 487 2 256 2 
14 2 568 8 813 8 792 14 849 4 833 8 332 6 850 2 851 4 822 4 752 4 583 2 360 4 430 12 907 6 970 4 443 5 
139 2 910 2 618 2 330 2 59 2 551 2 451 6 601 2 144 4 82 2 406 2 51 2 683 2 524 2 908 2 12 2 259 2 
889 2 60 2 1 2 502 2 250 2 949 2 289 2 290 2 886 2 180 2 
491 2 61 2 126 2 193 2 127 2 557 2 8 2 70 2 445 2 446 2 385 2 513 2 575 2 144 2 705 2 269 2 397 2 149 4 461 2 778 2 895 2 283 2 336 2 409 2 217 4 41 4 413 2 596 2 910 2 225 4 662 2 348 2 350 2 420 4 544 2 115 2 737 2 547 2 968 2 616 2 802 4 617 2 55 2 56 2 
742 8 833 32 890 2 332 6 3 6 532 2 752 18 374 4 251 4 564 2 845 2 473 4 846 16 907 6 443 20 730 6 568 32 813 32 792 51 694 4 911 6 849 18 225 4 17 2 851 14 516 4 452 4 822 4 609 6 399 6 831 2 358 4 88 4 802 4 430 46 360 4 970 18 89 2 
59 2 144 2 12 2 
239 2 262 2 589 2 35 2 542 2 143 2 278 2 23 10 575 2 857 2 159 2 26 22 537 2 757 2 
121 2 366 1 492 2 124 28 244 2 864 4 498 2 626 1 130 2 4 2 250 1 753 2 628 2 375 2 252 2 754 3 875 2 11 3 16 3 140 2 634 14 636 2 882 2 392 2 395 3 272 2 147 2 642 27 400 2 275 2 520 2 276 6 774 2 891 2 781 1 896 2 782 2 785 2 786 4 533 14 534 1 653 2 904 3 905 2 788 2 414 1 909 21 541 2 417 6 292 2 419 2 667 2 426 4 801 2 670 2 180 1 182 2 921 2 672 14 802 32 54 2 185 2 805 2 189 2 924 2 307 2 433 1 64 2 552 6 555 2 434 2 684 3 689 2 313 3 447 1 696 2 697 2 700 3 81 2 320 2 824 2 578 6 324 2 580 3 706 2 828 2 586 2 709 2 210 2 834 2 835 2 837 2 721 1 335 1 464 2 468 5 729 2 953 2 476 2 225 30 600 1 853 21 349 1 229 2 481 1 231 2 604 4 855 4 607 2 353 1 860 3 966 1 237 1 488 2 489 14 490 1 120 2 
220 2 
879 2 802 2 
507 2 802 4 351 2 
494 16 243 2 625 2 128 2 129 2 868 4 6 4 508 2 871 2 872 56 376 20 378 2 630 10 381 2 257 2 761 2 763 4 266 4 270 6 770 2 30 2 887 12 776 2 403 20 529 4 38 2 645 20 779 2 780 2 152 2 405 2 407 2 787 2 160 4 652 2 902 16 288 2 162 4 45 20 660 20 174 20 175 2 299 2 181 6 301 2 673 2 183 10 187 2 188 4 679 2 550 2 927 8 810 8 65 20 685 6 558 2 560 2 563 18 197 2 692 2 316 56 72 2 695 16 818 2 703 20 322 20 576 2 323 2 85 2 940 2 329 2 712 56 943 2 460 2 713 2 716 6 95 2 96 2 723 10 842 2 103 2 469 2 951 2 108 2 111 2 110 4 848 2 222 16 597 32 731 2 733 2 603 2 606 4 856 20 117 2 233 4 610 2 234 4 861 20 
878 1 686 2 230 2 415 2 
415 2 867 2 
477 2 669 2 135 2 646 2 144 2 415 2 33 2 
190 2 646 2 415 2 
894 2 646 2 415 2 
394 2 755 2 230 2 
646 2 415 2 
755 2 585 2 
836 2 415 2 
881 2 755 2 230 2 
246 2 62 2 230 2 
573 2 230 2 334 2 
384 2 418 2 230 2 
170 2 230 2 164 2 
693 2 755 2 
122 2 415 2 
211 2 62 2 
77 2 334 2 
418 2 482 2 
356 2 164 2 
620 2 755 2 
671 2 164 2 
418 2 9 2 
136 2 334 2 
598 2 62 2 
769 2 881 2 755 2 230 2 
769 2 238 2 881 2 755 2 230 2 
525 2 755 2 230 2 
608 2 755 2 230 2 
775 2 282 2 173 2 207 2 
44 2 863 2 18 2 478 2 479 2 961 2 767 2 483 2 682 2 52 2 26 6 950 2 106 2 509 2 236 2 562 4 42 2 804 4 
230 2 681 2 
964 2 669 2 734 2 144 2 
964 2 311 2 669 2 734 2 135 2 144 2 
669 2 646 2 144 2 415 2 33 2 577 2 
326 2 617 2 
669 2 621 2 144 2 33 2 
202 2 418 2 
69 2 164 2 
711 2 62 2 
698 2 334 2 
471 2 164 2 334 2 
939 2 164 2 334 2 
771 2 164 2 334 2 
264 2 164 2 334 2 
806 2 531 2 100 6 661 6 144 2 669 2 740 2 402 2 
28 2 755 2 
706 2 
774 2 140 2 225 2 417 4 307 2 213 2 864 4 392 2 426 4 653 2 488 2 729 2 802 2 788 2 400 2 
185 2 774 2 140 2 225 2 417 6 307 2 835 2 213 2 864 4 392 2 426 4 653 2 488 2 729 2 802 2 788 2 400 2 
926 2 720 2 137 2 
926 2 720 2 137 2 
185 2 774 2 140 2 225 2 417 6 307 2 835 2 213 2 864 4 392 2 426 4 653 2 488 2 729 2 802 2 788 2 400 2 
185 2 774 2 140 2 225 2 417 6 307 2 835 2 213 2 864 4 392 2 426 4 653 2 488 2 729 2 802 2 788 2 400 2 
185 2 774 2 140 2 225 2 417 6 307 2 835 2 213 2 864 4 392 2 426 4 653 2 488 2 729 2 802 2 788 2 400 2 
0 4 493 2 495 2 499 2 500 2 2 20 504 2 4 2 505 2 7 2 510 2 15 48 17 2 512 2 19 2 20 2 22 8 24 4 25 2 519 2 31 2 523 2 522 4 521 8 34 2 526 2 37 2 527 20 528 2 530 2 533 14 535 10 538 18 46 2 47 10 543 2 50 4 53 2 546 2 54 88 548 10 57 2 549 8 552 35 553 2 554 18 556 6 559 2 561 1 565 4 71 2 568 8 570 2 74 2 76 2 571 4 75 8 572 2 79 2 574 8 80 8 578 6 84 2 581 8 582 2 587 2 588 8 90 28 91 2 92 22 94 38 98 3 594 2 101 10 107 2 599 4 114 2 602 18 604 4 605 2 609 6 118 2 612 8 614 2 123 18 619 22 124 44 624 2 130 2 131 2 133 2 627 4 134 2 138 2 631 2 634 8 141 2 638 3 637 2 640 2 641 22 148 4 642 35 644 2 151 3 150 2 155 2 156 18 647 2 157 15 158 2 651 2 653 2 654 2 161 2 658 10 663 10 167 2 168 2 169 14 665 2 171 2 176 3 177 2 670 2 179 2 672 34 675 2 674 2 185 6 677 2 186 2 680 10 687 2 690 28 691 6 198 10 199 28 699 2 701 2 704 2 204 2 206 2 208 10 209 2 212 2 715 2 718 68 214 8 724 3 726 10 727 16 219 2 221 3 732 2 224 18 225 34 228 2 229 2 232 2 736 2 235 2 739 10 240 32 241 4 748 2 747 22 746 10 750 2 247 2 752 4 753 2 252 2 756 2 253 2 759 74 261 2 260 2 765 2 267 2 272 2 275 2 276 20 773 4 777 16 277 10 279 2 280 8 783 2 285 2 786 4 286 18 788 4 291 2 790 2 792 16 796 8 797 1 292 2 293 2 296 8 297 2 298 18 802 64 304 2 807 2 307 4 308 66 310 18 812 2 312 2 315 2 314 4 813 8 815 2 318 2 817 4 816 2 319 2 821 2 321 2 823 18 826 15 325 1 827 2 829 2 831 4 830 2 328 2 833 8 832 8 332 6 835 6 837 2 838 2 839 16 339 18 340 2 343 10 342 2 344 8 846 4 345 2 849 4 851 4 349 2 852 10 352 4 859 96 359 2 357 4 360 4 363 2 364 6 362 2 365 2 862 2 368 4 369 2 864 6 866 2 371 12 870 10 873 8 874 2 377 2 379 8 380 3 876 24 877 2 382 2 880 2 882 14 883 2 884 46 390 4 885 2 392 2 400 4 888 3 891 4 892 2 893 2 896 2 898 10 900 2 899 3 411 2 903 2 412 18 906 2 912 2 417 14 914 2 915 2 916 2 423 2 426 6 425 2 919 10 921 2 428 2 429 2 430 12 923 4 929 2 434 4 930 8 435 2 437 2 931 2 439 2 438 2 443 6 933 20 448 2 936 2 937 2 938 24 454 3 453 2 942 2 459 4 945 3 946 3 462 2 463 36 465 2 948 2 466 2 470 2 473 4 952 2 955 10 481 2 480 8 962 2 963 2 965 2 486 2 967 2 970 4 
208 2 644 2 124 2 552 2 371 2 898 2 505 2 533 2 756 2 107 2 874 2 225 2 852 4 882 2 229 2 962 2 884 6 232 2 668 2 25 2 176 2 642 2 802 2 276 2 
208 2 644 2 124 2 552 2 371 2 898 2 505 2 533 2 756 2 107 2 874 2 225 2 852 4 882 2 229 2 962 2 884 6 232 2 668 2 25 2 176 2 642 2 802 2 276 2 
208 2 644 2 124 2 552 2 371 2 898 2 505 2 533 2 756 2 107 2 874 2 225 2 852 4 882 2 229 2 962 2 884 6 232 2 668 2 25 2 176 2 642 2 802 2 276 2 
644 2 833 2 36 2 306 2 124 2 718 6 552 3 157 3 752 2 286 4 688 2 412 4 473 2 538 4 567 2 475 3 568 2 656 2 813 2 792 5 849 2 225 4 634 2 851 2 19 2 229 2 295 2 602 4 296 2 826 3 609 4 800 4 178 2 615 2 672 2 941 2 642 3 802 10 430 4 970 2 
124 2 306 2 552 2 752 2 688 2 567 2 443 2 568 2 813 2 634 2 19 2 826 2 642 2 941 2 89 2 833 2 644 2 36 2 718 6 157 2 286 4 412 4 473 2 846 2 538 4 475 2 656 2 792 4 849 2 225 4 851 2 229 2 295 2 296 2 602 4 609 4 800 4 178 2 672 2 615 2 802 10 430 4 970 2 
124 2 306 2 552 2 752 2 688 2 567 2 443 2 568 2 813 2 634 2 19 2 826 2 642 2 941 2 89 2 833 2 644 2 36 2 718 6 157 2 286 4 412 4 473 2 846 2 538 4 475 2 656 2 792 4 849 2 225 4 851 2 229 2 295 2 296 2 602 4 609 4 800 4 178 2 672 2 615 2 802 10 430 4 970 2 
124 2 306 2 552 2 752 2 688 2 567 2 443 2 568 2 813 2 634 2 19 2 826 2 642 2 941 2 89 2 833 2 644 2 36 2 718 6 157 2 286 4 412 4 473 2 846 2 538 4 475 2 656 2 792 4 849 2 225 4 851 2 229 2 295 2 296 2 602 4 609 4 800 4 178 2 672 2 615 2 802 10 430 4 970 2 
124 2 306 2 552 2 752 2 688 2 567 2 443 4 568 2 813 2 634 2 19 2 826 2 642 2 941 2 89 4 833 2 644 2 36 2 718 6 157 2 286 4 412 4 473 2 846 4 538 4 475 2 656 2 792 4 849 2 225 4 851 2 229 2 295 2 296 2 602 4 609 4 800 4 178 2 672 2 615 2 802 10 430 4 970 2 
582 2 341 2 87 2 496 2 309 2 798 2 
503 2 619 2 808 2 758 2 719 2 281 2 798 2 
944 2 242 2 191 2 623 2 370 2 865 1 809 2 248 2 67 1 725 2 932 2 259 1 112 2 934 1 225 8 386 2 959 2 172 2 294 2 766 2 203 2 424 2 802 10 327 2 524 1 275 2 
742 2 833 6 241 2 332 3 245 2 895 2 3 4 532 1 752 5 411 2 473 2 846 4 70 2 443 5 568 6 813 6 792 13 632 2 849 5 795 2 225 6 935 2 851 5 321 2 609 4 831 1 88 2 802 6 430 11 360 2 970 5 89 2 
659 2 333 2 514 2 142 2 404 2 602 2 393 2 373 3 843 2 611 2 613 2 412 2 538 2 
659 2 225 1 333 2 514 2 142 2 404 2 602 2 639 2 928 2 393 2 373 6 843 4 611 2 613 2 412 2 802 1 10 1 538 2 
659 4 333 2 514 2 142 4 404 2 602 2 639 2 928 2 393 2 373 6 843 4 611 2 613 4 412 2 538 2 
659 8 225 1 333 2 514 2 142 8 404 2 602 2 639 8 928 6 393 2 373 10 843 4 611 2 613 8 412 2 802 1 10 1 538 2 
367 4 497 2 864 42 249 6 5 22 258 12 263 2 383 3 762 6 635 6 764 2 21 4 265 2 768 4 391 2 517 12 396 6 518 6 146 12 398 4 273 4 274 1 401 6 400 10 153 12 649 12 40 2 784 4 410 6 536 6 788 10 163 12 43 6 165 6 791 2 793 2 166 4 417 88 913 6 49 6 426 36 920 2 300 4 802 90 185 20 432 2 303 6 678 6 305 2 58 6 307 4 925 6 66 4 436 2 195 6 811 2 196 4 440 8 441 2 442 8 444 6 317 2 73 2 78 6 449 6 450 6 201 2 205 6 456 6 457 6 328 2 458 4 590 12 591 4 835 20 714 12 93 2 97 4 840 2 947 4 841 6 215 4 337 6 594 2 728 6 470 2 218 2 595 6 847 4 223 2 957 12 113 1 225 78 854 13 484 42 116 6 355 6 969 6 119 12 741 2 
185 2 676 2 432 2 307 2 925 2 622 2 744 2 864 20 63 2 501 2 749 2 194 6 372 2 132 2 249 2 440 6 566 2 511 2 255 2 629 2 13 2 258 4 569 2 317 2 200 2 78 2 819 2 388 2 387 2 265 2 702 4 768 38 268 2 83 2 396 2 27 2 518 2 455 2 146 4 707 2 205 2 584 2 32 4 328 2 400 2 772 2 710 2 590 2 835 2 714 2 592 2 897 2 284 2 593 2 722 2 338 2 594 2 102 2 467 2 105 2 844 2 472 2 470 2 536 2 595 2 109 2 655 2 788 2 163 4 165 2 539 2 789 2 791 2 793 4 113 2 225 44 417 44 227 2 664 2 960 2 854 2 49 2 422 4 799 2 484 6 738 2 426 20 355 2 427 4 802 46 741 2 302 2 
744 2 497 2 864 44 132 2 249 4 5 30 13 10 258 10 762 4 635 4 764 2 21 4 265 2 768 14 517 24 396 4 518 4 146 10 273 4 398 4 400 6 643 4 153 24 649 8 284 2 40 4 784 4 650 16 410 16 901 4 536 4 788 6 163 10 43 4 165 4 539 10 791 2 657 2 793 2 166 4 417 104 666 4 48 32 49 4 421 2 545 2 917 8 918 4 426 36 300 4 802 78 803 4 185 30 431 16 432 2 303 4 678 4 58 4 307 2 925 4 436 2 66 4 811 4 440 6 442 8 444 8 78 6 819 2 449 4 450 8 820 2 707 10 708 4 205 4 456 4 457 4 328 2 458 2 590 10 591 4 714 6 835 28 840 2 97 4 947 4 215 4 841 4 337 4 594 2 216 4 470 2 728 4 595 4 847 4 474 8 346 8 957 14 225 70 226 2 854 10 116 4 484 24 858 2 355 4 969 4 361 8 741 2 
185 12 432 2 367 2 305 2 307 2 925 4 744 2 864 14 249 4 5 6 811 2 196 2 440 4 566 2 441 2 629 2 442 6 258 6 263 2 383 2 73 2 819 2 78 2 21 4 265 2 201 2 768 14 391 2 396 2 518 2 146 6 205 4 328 2 400 2 458 2 590 2 835 12 714 2 40 2 594 2 470 2 536 2 595 4 163 6 788 2 165 4 791 2 793 2 113 2 225 26 417 40 854 2 49 4 484 8 426 14 355 2 802 28 119 10 741 2 
29 2 

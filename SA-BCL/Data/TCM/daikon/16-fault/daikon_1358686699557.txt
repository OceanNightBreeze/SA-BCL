#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (106,210,292,803,959) (106,210,292,803,959) (106,210,292,803,959) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 252 679 983 629 526 1066 562 550 1086 560 156 559 674 670 502 328 950 760 290 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 401 764 127 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 1103 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 125 66 57 466 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 417 66 57 466 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 66 57 466 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 125 125 125 125 66 57 466 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_75()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | RETURN | 100880 | return null
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_81()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:jj_3R_74()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_61()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.MathMDE:pow(II)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_124()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_36()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_10(I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3R_76()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 30997 | return null
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:isIOAArray()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_47()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfo:isPrestate()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_3_4()Z
daikon.Quant:subsetOf([B[I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:baseIsScalar()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.Invariant:logDetail()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_52()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3_18()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eq(FF)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:memberOf(S[S)Z
daikon.Quant:memberOf(D[F)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.ProglangType:isFloat()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.ProglangType:base()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression; | STATEMENT | 66792 | stmt -> ;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_28()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.ProglangType:isIntegral()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.Invariants:Invariants()V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_62()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3_20()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_25()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.Invariant:logOn()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String; | RETURN | 50824 | return null
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.ArraysMDE:max([I)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfo:isPointer()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_72()Z
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:memberOf(F[F)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.ModBitTracker:num_sets()I
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_2_3(I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_63()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvMap:InvMap()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfo:isDerived()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_121()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:memberOf(I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern:intern([J)[J
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min([I)I
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quantify.Constant:Constant(I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_2_12(I)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.ProglangType:baseIsFloat()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:memberOf(F[D)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_163()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ProglangType:dimensions()I
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_118()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_77()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_119()Z
daikon.Quant:ne(II)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:sameLength([I[I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Debug:logDetail()Z
daikon.Quant:lexLT([I[I)Z
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_115()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_133()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.Debug:logOn()Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3_22()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3_35()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_54()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String; | RETURN | 23802 | return null
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:subsetOf([D[F)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.Quant:setDiff([I[I)[I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_57()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaCharStream:BeginToken()C | CONSTANT | 4375 | 0 -> 1
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_50()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaCharStream:readChar()C
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer; | RETURN | 13631 | return null
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:noDups([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(II)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3_21()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.JavaParser:jj_2_36(I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.PptSlice2:arity()I
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:negate(I)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eq(II)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator; | RETURN | 36787 | return null
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:memberOf(J[J)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsGT([II)Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isArray()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseLT([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:lte(II)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_56()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_148()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([F[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_116()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:eq(DD)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptSlice1:arity()I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_67()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:hashCode()I
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_3R_48()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.Invariant:justified()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | OPERATOR | 18331 | == -> !=
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:isMissing(I)Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_135()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.NodeFinder:inPre()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
638 4 696 2 561 2 846 2 870 2 338 2 351 2 654 2 474 2 
347 2 607 6 881 2 915 2 686 2 228 2 524 2 551 6 847 2 617 2 975 6 
696 2 1053 6 1085 4 515 6 342 6 1110 2 754 2 846 2 737 2 214 2 530 6 59 2 531 4 
123 16 717 10 6 2 420 2 1094 8 523 6 768 16 796 10 736 29 331 4 1024 12 1025 10 928 2 393 4 997 8 965 10 696 6 536 4 104 2 584 8 182 10 810 6 255 2 846 6 710 4 668 8 1113 2 711 16 79 26 285 2 
1075 6 618 4 
400 2 
717 2 85 2 123 2 89 2 377 2 1094 2 326 2 796 2 768 2 329 2 736 6 1024 2 1025 2 62 2 965 4 807 2 182 2 810 2 281 2 1004 2 710 2 711 2 79 4 
1025 2 717 2 123 2 851 2 536 2 680 4 182 2 768 2 796 2 769 2 736 5 711 2 79 4 1024 1 
509 2 230 4 2 8 912 2 876 10 5 2 951 2 514 2 595 4 319 2 352 2 1016 4 1096 4 381 2 522 62 19 2 734 2 923 6 925 2 215 2 995 2 177 4 961 4 929 4 69 2 68 2 464 4 111 14 934 4 499 4 815 2 973 2 73 2 257 4 709 2 260 2 817 4 77 2 159 4 621 10 
773 2 862 2 631 2 630 2 880 2 170 2 465 2 237 2 400 2 712 2 
1045 2 2 2 84 2 718 2 478 2 561 2 288 2 235 2 20 2 295 2 243 2 579 2 929 4 25 2 1000 2 108 2 1001 2 935 2 439 2 587 2 1007 2 1008 2 368 2 316 2 126 2 1096 2 333 4 532 2 604 2 696 4 274 2 275 2 540 2 897 4 221 2 403 2 779 4 846 4 468 2 709 2 1113 2 286 2 784 2 80 2 
717 4 123 8 851 4 680 6 49 2 1094 2 796 4 768 8 736 13 1024 6 1025 4 696 4 182 4 866 4 747 8 223 2 1036 6 846 4 711 8 79 12 
2 2 973 2 923 2 
960 2 143 22 932 2 289 2 413 2 306 2 48 2 745 10 656 2 221 2 732 2 501 2 424 2 117 2 
3 2 730 2 635 2 921 2 483 6 486 2 992 2 576 1 803 2 491 2 106 2 805 6 653 2 307 2 185 2 498 1 1072 4 662 2 364 2 311 2 673 2 42 2 369 2 445 2 200 2 678 1 1091 2 685 2 884 2 830 2 52 2 687 1 767 4 210 2 269 2 455 2 696 20 460 2 338 2 339 4 280 2 899 2 1035 2 282 2 846 22 848 2 284 4 
129 2 
676 2 846 2 
846 4 168 2 41 2 
555 8 0 48 556 2 559 2 560 2 854 2 562 2 564 2 565 2 10 2 290 2 566 2 567 2 568 4 18 2 572 2 578 48 860 4 300 2 302 2 27 4 303 2 582 2 28 4 305 6 309 2 36 26 868 2 586 2 38 48 314 2 872 2 874 48 317 2 320 2 597 4 883 2 598 48 325 6 328 2 888 2 56 2 330 2 60 2 890 2 891 22 601 2 61 4 335 4 337 6 615 10 896 2 72 6 904 48 75 4 619 4 346 2 620 4 83 2 909 2 627 2 629 2 90 4 633 2 93 4 637 8 640 2 922 2 96 48 354 4 644 14 643 4 99 2 103 40 931 14 105 2 650 2 933 22 651 2 110 2 657 10 663 2 664 8 667 2 941 2 942 2 365 16 943 2 670 2 118 2 119 2 367 2 674 2 950 2 679 2 955 48 376 2 378 2 684 48 131 2 380 2 133 8 691 4 958 36 386 2 138 2 693 2 388 4 141 2 144 4 697 2 145 2 967 2 701 2 708 26 153 14 406 2 156 2 714 2 715 2 716 4 980 4 983 2 723 2 169 2 171 4 985 2 727 2 728 4 986 48 421 2 173 2 733 2 994 2 427 2 743 2 180 2 184 2 746 2 1002 48 188 2 749 2 437 2 1003 4 752 2 756 14 443 2 196 2 1009 6 760 2 447 2 765 4 766 2 451 14 450 24 204 2 454 2 1021 8 1023 8 770 4 456 20 216 18 772 8 217 4 1027 8 1028 2 1029 2 462 2 777 2 1033 4 222 2 225 2 1037 2 471 8 1038 4 475 2 1047 22 1049 2 787 2 789 2 233 36 482 4 240 28 1060 2 484 8 242 2 487 2 247 2 248 2 494 2 1066 2 497 8 252 2 812 20 254 2 814 2 500 4 502 2 816 28 1074 192 1077 2 820 6 261 4 507 2 1079 4 512 146 823 2 1083 2 825 4 1086 2 827 48 516 146 1090 4 1092 2 828 8 520 16 829 4 831 4 1097 2 833 2 526 2 272 20 1100 2 838 36 539 4 840 4 543 2 1109 8 547 2 1111 4 843 2 548 2 550 2 850 146 554 48 
970 2 411 1 916 2 682 2 
112 2 916 2 
1102 2 2 2 393 2 489 2 67 2 503 2 916 2 
362 2 503 2 916 2 
26 2 503 2 916 2 
665 2 682 2 1115 2 
503 2 916 2 
665 2 541 2 
490 2 916 2 
15 2 665 2 682 2 
558 2 571 2 682 2 
387 2 1068 2 682 2 
998 2 682 2 13 2 
273 2 1080 2 682 2 
190 2 665 2 
731 2 916 2 
558 2 974 2 
387 2 193 2 
998 2 271 2 
273 2 1039 2 
665 2 137 2 
273 2 788 2 
161 2 998 2 
387 2 416 2 
558 2 397 2 
15 2 665 2 682 2 969 2 
705 2 15 2 665 2 682 2 969 2 
665 2 1055 2 682 2 
665 2 682 2 91 2 
675 2 898 2 312 2 120 2 
366 2 143 6 197 2 410 2 649 2 45 2 231 2 232 2 613 2 166 2 1030 4 1015 2 616 2 956 2 797 2 1022 2 1040 4 229 2 
46 2 682 2 
647 2 2 2 962 2 489 2 
647 2 1102 2 2 2 962 2 900 2 489 2 
811 2 2 2 393 2 489 2 503 2 916 2 
861 2 108 2 
2 2 393 2 489 2 645 2 
998 2 968 2 
273 2 332 2 
558 2 902 2 
387 2 246 2 
387 2 273 2 695 2 
387 2 273 2 609 2 
387 2 273 2 624 2 
387 2 273 2 298 2 
2 2 446 6 489 2 146 6 778 2 1108 2 813 2 408 2 
665 2 360 2 
200 2 
3 2 4 2 722 2 984 3 856 2 419 2 730 2 987 2 569 2 992 2 307 2 185 2 191 2 755 2 311 2 42 2 871 2 44 2 594 2 1011 2 445 2 884 6 767 4 455 2 336 2 606 5 64 8 460 2 338 2 339 4 463 2 1035 2 226 3 227 2 1042 2 921 2 483 4 1059 2 486 6 353 3 98 4 799 2 800 2 488 2 491 2 805 6 653 2 1072 4 660 2 258 2 364 2 673 2 511 2 263 2 369 2 370 2 953 4 1091 2 830 2 382 2 689 2 132 2 136 2 269 2 696 26 394 2 542 2 280 6 842 4 971 2 703 2 282 2 846 26 284 4 
3 2 4 2 722 2 984 2 856 2 419 2 730 2 987 2 569 2 992 2 307 2 185 2 191 2 755 2 311 2 42 2 871 2 44 2 594 2 1011 2 445 2 448 2 884 6 767 4 455 2 336 2 606 4 64 8 460 2 338 2 339 4 463 2 1035 2 226 2 227 2 1042 2 87 2 921 2 635 2 483 6 1059 2 486 6 353 2 98 4 799 2 800 2 488 2 491 2 805 6 653 2 1072 4 258 2 364 2 262 2 673 2 263 2 369 2 370 2 953 4 1091 2 685 2 830 2 382 2 689 2 132 2 136 2 269 2 696 26 394 2 542 2 280 6 842 4 703 2 404 2 282 2 846 26 284 4 
267 2 
963 2 1054 2 
801 2 593 2 492 2 763 4 107 2 1089 4 322 2 321 2 881 2 915 2 496 2 344 2 205 2 207 2 551 2 945 2 782 2 975 2 
785 2 1046 2 786 4 3 2 720 2 7 2 915 4 238 2 857 2 992 2 735 4 1061 2 23 4 801 2 492 2 107 2 805 4 496 2 1006 6 945 2 672 4 311 2 313 2 822 2 122 2 1081 2 1010 2 369 2 593 2 763 4 1089 4 322 4 321 2 881 4 1091 2 324 2 205 2 207 2 767 2 887 2 54 2 889 4 603 2 607 6 696 6 775 2 460 2 398 2 344 2 402 2 282 2 846 12 551 4 847 2 617 2 284 2 849 2 782 2 975 6 908 2 
785 2 1046 2 786 4 347 2 3 2 720 2 7 2 915 4 238 2 857 2 992 2 735 4 1061 2 23 4 801 2 492 2 107 2 805 4 496 2 1006 6 945 2 672 4 311 2 313 2 822 2 122 2 1081 2 1010 2 369 2 593 2 763 4 1089 4 322 4 321 2 881 4 1091 2 324 2 205 2 207 2 767 2 887 2 54 2 889 4 603 2 607 6 696 6 775 2 460 2 398 2 344 2 402 2 282 2 846 12 551 6 847 2 284 2 849 2 782 2 975 4 908 2 
785 2 1046 2 786 4 3 2 720 2 7 2 915 4 238 2 857 2 992 2 735 4 1061 2 23 8 801 2 492 2 107 2 805 4 496 2 1006 6 945 2 672 4 311 2 313 2 822 2 122 2 1081 2 1010 2 369 2 593 2 763 4 1089 4 322 4 321 2 881 4 1091 2 324 2 205 2 207 2 686 2 767 2 887 2 54 2 889 4 603 2 607 6 696 6 775 2 460 2 398 2 344 2 402 2 282 2 846 12 551 6 847 2 284 2 849 2 782 2 975 6 908 2 
785 2 1046 2 786 8 347 2 3 2 720 2 7 2 915 4 238 2 857 2 992 2 735 4 1061 2 23 8 801 2 492 2 107 2 805 4 496 2 1006 10 945 2 672 4 311 2 313 2 822 2 122 2 1081 2 1010 2 369 2 593 2 763 4 1089 4 322 4 321 2 881 4 1091 2 324 2 205 2 207 2 686 2 767 2 887 2 54 2 889 4 603 2 607 8 696 6 775 2 460 2 398 2 344 2 402 2 282 2 846 12 284 2 551 8 847 2 849 2 782 2 975 6 908 2 
785 2 1046 2 786 8 3 2 720 2 7 2 915 4 238 2 857 2 992 2 735 4 1061 2 23 8 801 2 492 2 107 2 805 4 496 2 1006 10 945 2 672 4 311 2 313 2 822 2 122 2 1081 2 1010 2 369 2 593 2 763 4 1089 4 322 4 321 2 881 4 1091 2 324 2 205 2 207 2 686 2 767 2 887 2 54 2 889 4 603 2 607 6 696 6 775 2 460 2 398 2 344 2 402 2 282 2 846 12 551 6 847 2 284 2 849 2 782 2 975 6 908 2 
557 2 3 2 853 2 7 2 857 2 575 2 23 2 864 2 307 2 585 2 39 2 589 1 311 2 313 2 42 2 593 2 881 4 321 2 322 4 884 8 887 2 885 8 54 2 889 6 602 2 603 4 606 2 607 12 64 4 893 6 338 2 339 4 344 2 74 6 345 2 908 2 347 4 913 2 88 2 915 4 635 2 921 2 95 6 353 2 641 2 355 10 107 2 653 2 658 6 938 2 364 2 945 2 672 8 673 2 122 2 369 2 676 6 129 6 130 2 685 2 382 2 383 1 689 2 692 2 694 2 389 1 390 1 696 24 966 6 398 2 399 2 151 2 402 2 154 2 975 4 713 2 720 2 984 2 724 2 168 6 172 2 730 12 992 2 735 4 993 2 740 1 739 6 428 6 185 2 434 6 191 2 1006 2 1010 4 1011 2 445 2 762 2 763 4 201 1 449 2 205 2 207 2 767 4 213 2 455 2 458 1 775 2 460 2 463 2 1032 6 1035 2 227 2 1041 2 782 2 1042 4 785 2 476 2 1043 7 1046 2 792 1 238 2 483 6 486 6 1061 2 801 2 488 2 491 2 492 2 493 6 805 6 808 7 496 2 253 4 1072 4 258 2 259 6 1076 2 822 2 1081 2 263 2 1089 4 1091 2 830 2 832 1 269 2 836 6 1101 4 534 2 538 2 1105 2 841 6 280 6 842 4 282 2 1112 2 846 46 284 4 551 8 847 4 849 2 
713 2 557 2 3 2 853 2 720 2 7 2 984 2 168 6 724 2 172 2 730 12 857 2 575 2 993 2 735 4 992 2 23 6 739 6 428 6 429 2 864 2 307 2 585 2 434 6 185 2 37 2 191 4 1006 2 39 2 311 2 313 2 42 2 1010 4 593 2 1011 2 762 2 445 2 763 4 322 4 321 2 881 4 449 2 205 2 884 8 207 2 767 4 885 8 887 2 54 2 213 2 889 6 455 2 603 4 602 2 606 2 64 8 607 12 775 2 460 2 893 6 338 2 339 4 463 2 344 2 1032 6 1035 2 74 6 227 4 1041 2 345 2 782 2 1042 4 908 2 476 2 785 2 1046 2 913 2 88 2 915 4 238 2 921 2 635 2 95 6 483 6 641 2 353 2 486 6 355 10 98 2 1061 2 488 2 801 2 492 2 491 2 493 6 107 2 805 6 653 2 496 2 658 6 253 4 1072 4 938 2 258 2 259 6 1076 2 364 2 672 8 945 2 673 2 822 2 122 2 1081 2 263 4 369 2 676 6 129 6 1089 4 1091 2 130 2 685 2 830 2 686 4 382 2 689 2 269 2 692 2 694 2 836 6 1101 4 534 2 696 26 966 6 538 2 1105 2 398 2 399 2 841 6 151 2 842 4 280 6 402 2 282 2 1112 2 846 48 154 2 847 4 551 8 284 4 849 2 975 8 
713 2 557 2 3 2 853 2 720 2 7 2 984 2 168 6 724 2 172 2 730 12 857 2 575 2 993 2 735 4 992 2 23 6 739 6 428 6 429 2 864 2 307 2 585 2 434 6 185 2 37 2 191 4 39 2 1006 6 311 2 313 2 42 2 1010 4 593 2 1011 2 762 2 445 2 763 4 322 4 321 2 881 4 449 2 205 2 884 8 207 2 767 4 885 8 887 2 54 2 213 2 889 6 455 2 603 4 602 2 606 2 64 8 607 12 775 2 460 2 893 6 338 2 339 4 463 2 344 2 1032 6 1035 2 74 6 227 4 1041 2 345 2 782 2 1042 4 908 2 476 2 785 2 1046 2 786 4 913 2 88 2 915 4 238 2 921 2 635 2 95 6 483 6 641 2 353 2 486 6 355 10 98 2 1061 2 488 2 801 2 492 2 491 2 493 6 107 2 805 6 653 2 496 2 658 6 253 4 1072 4 938 2 258 2 259 6 1076 2 364 2 672 8 945 2 822 2 673 2 122 2 1081 2 263 4 369 2 676 6 129 6 1089 4 1091 2 130 2 685 2 830 2 686 4 382 2 689 2 269 2 692 2 694 2 836 6 1101 4 534 2 696 26 966 6 538 2 1105 2 398 2 399 2 841 6 151 2 842 4 280 6 402 2 282 2 1112 2 846 48 154 2 847 4 551 8 284 4 849 2 975 8 
557 2 3 2 853 2 7 2 857 2 575 2 23 6 299 6 864 2 307 2 585 2 37 2 39 2 311 2 313 2 42 2 591 6 593 2 881 4 321 2 322 4 884 12 887 2 885 8 54 2 889 6 602 2 603 4 606 4 607 16 64 10 893 6 338 2 339 4 344 2 74 6 617 2 345 2 908 2 625 6 347 2 913 2 349 6 88 2 915 4 918 6 919 2 635 2 921 2 95 6 353 4 641 2 355 8 98 2 646 2 102 2 107 2 653 2 658 6 938 2 940 2 364 2 945 2 672 8 673 2 122 2 369 2 676 12 952 2 129 12 681 6 130 2 685 2 686 4 382 2 689 2 694 2 696 24 966 6 698 2 398 2 399 2 151 2 402 2 154 2 975 10 713 2 720 2 984 4 724 2 168 12 172 2 730 10 988 6 735 4 992 2 993 2 739 6 428 6 429 2 185 2 434 6 750 6 191 4 192 6 1006 6 1010 4 1011 4 445 2 762 2 763 4 449 2 205 2 207 2 767 4 213 2 455 2 775 2 460 2 463 4 1032 6 1035 2 227 4 1041 2 782 2 1042 4 476 2 785 2 1046 2 786 4 238 2 239 2 483 6 486 8 1061 2 488 2 801 2 491 2 492 2 493 12 805 6 496 2 253 4 1072 4 258 2 259 6 1076 2 822 2 1081 2 263 4 1089 4 1091 2 830 2 269 2 836 12 1101 4 534 2 538 2 1105 2 276 2 841 12 280 8 842 6 282 2 1112 2 846 52 284 4 551 10 847 4 849 2 
822 2 785 2 786 4 1081 2 720 2 763 2 7 2 1089 2 881 4 915 4 205 2 207 2 686 2 857 2 887 2 54 2 735 2 889 2 23 6 801 2 607 4 492 2 398 2 496 2 402 2 846 4 847 2 551 6 849 2 1006 4 672 2 945 2 782 2 975 6 908 2 
976 3 3 2 720 2 7 2 984 3 292 2 730 4 857 2 573 2 735 2 992 2 296 2 23 6 307 2 185 2 1006 2 311 2 42 2 445 2 763 2 200 2 881 4 205 2 884 8 207 2 767 4 887 2 54 2 889 2 455 2 606 3 607 4 460 2 338 2 339 4 340 2 70 2 1035 2 782 2 908 2 1042 2 785 2 915 4 238 2 921 2 635 2 483 6 241 2 486 6 353 3 355 2 488 2 801 2 491 2 492 2 805 6 653 2 496 2 1072 4 258 2 364 2 672 2 945 2 822 2 673 2 1081 2 369 2 1089 2 1091 2 683 2 685 2 830 2 686 2 689 2 959 2 269 2 692 2 696 24 398 2 280 6 842 4 402 2 282 2 846 28 847 2 551 6 284 4 849 2 975 6 
785 2 1046 2 786 8 3 2 720 2 7 2 915 4 238 2 857 2 992 2 735 4 1061 2 23 8 801 2 492 2 107 2 805 4 496 2 1006 10 945 2 672 4 311 2 313 2 822 2 122 2 1081 2 1010 2 369 2 593 2 763 4 1089 4 322 4 321 2 881 4 1091 2 324 2 205 2 207 2 686 2 767 2 887 2 54 2 889 4 603 2 607 6 696 6 775 2 460 2 398 2 344 2 402 2 282 2 846 12 551 6 847 2 284 2 849 2 782 2 975 6 908 2 
785 2 1046 2 786 8 3 2 720 2 8 2 7 2 915 4 238 2 992 2 735 4 1061 2 23 8 801 2 492 2 107 2 805 4 999 2 496 2 1006 10 311 2 945 2 672 4 313 2 822 2 122 2 1081 2 1010 2 369 2 593 2 763 4 1089 4 322 4 321 2 881 4 1091 2 205 2 207 2 686 2 767 2 887 2 54 2 889 4 603 2 696 6 607 8 775 2 460 2 398 2 344 2 402 2 282 2 846 12 284 2 470 4 551 6 847 2 617 2 849 2 782 2 975 8 908 2 
822 2 398 2 632 2 
822 2 398 2 632 2 
979 2 981 2 3 2 720 2 167 2 419 4 172 2 730 4 992 2 735 2 23 6 176 2 428 2 307 2 185 2 435 2 748 2 867 2 189 2 191 4 1006 6 40 2 311 2 313 2 42 2 1010 2 445 2 763 2 322 4 321 2 881 4 205 2 884 2 767 4 886 2 889 4 455 2 603 4 606 2 64 4 607 16 218 4 460 2 338 2 339 4 343 2 1035 2 227 4 617 4 782 2 1042 6 785 2 1046 2 786 4 347 4 632 2 915 4 94 2 921 2 635 2 483 6 486 2 355 2 798 2 488 2 491 2 492 4 107 2 805 6 653 2 253 2 1072 4 258 2 364 2 672 4 822 6 673 2 122 2 263 4 369 2 264 2 1089 2 1091 2 685 2 830 2 686 4 382 4 1098 2 269 2 1101 2 534 2 837 4 696 16 699 2 398 4 399 2 148 2 280 2 282 2 846 24 284 4 551 12 847 4 975 12 
476 2 1101 2 428 2 696 2 47 2 1084 2 1054 2 699 2 344 2 795 2 730 2 94 2 886 2 641 2 846 4 355 2 311 2 
979 2 3 2 720 2 167 2 419 4 172 2 730 2 735 2 992 2 23 6 176 2 428 2 307 2 185 2 435 2 748 2 189 4 191 4 1006 6 40 2 311 2 313 2 42 2 1010 4 198 2 445 2 763 2 322 4 321 2 881 4 205 2 884 2 767 4 886 2 889 4 455 2 603 4 606 4 64 4 607 16 775 2 218 4 460 2 338 2 339 4 1035 2 227 4 76 2 617 4 782 2 1042 6 785 2 1046 2 82 2 910 2 786 4 347 4 632 2 915 4 94 2 921 2 635 2 483 6 486 2 798 2 488 2 491 2 492 4 107 2 805 6 109 2 653 2 253 2 1072 4 258 2 364 2 672 4 822 6 673 2 122 2 263 4 369 2 1089 2 1091 2 685 2 830 2 686 4 382 4 1098 2 269 2 534 2 837 4 696 16 699 2 398 4 399 2 148 2 280 2 282 2 846 24 284 4 551 12 847 4 975 12 
979 2 3 2 287 2 720 2 9 2 167 2 419 4 172 2 730 4 992 2 735 2 23 6 176 2 428 2 307 2 185 2 435 2 748 2 189 2 191 4 1006 6 40 2 311 2 313 2 42 2 1010 4 445 2 763 2 322 4 321 2 881 4 205 2 884 2 767 4 886 2 889 4 455 2 603 4 606 2 64 4 607 16 775 2 218 4 460 2 338 2 339 4 1035 2 227 4 617 4 782 2 1042 6 785 2 1046 2 786 4 347 4 632 2 915 4 94 2 921 2 635 2 483 6 486 2 355 2 798 2 488 2 491 2 492 4 107 2 805 6 653 2 253 2 1072 4 258 2 364 2 672 4 822 6 673 2 947 2 122 2 263 4 369 2 1088 2 1089 2 1091 2 685 2 830 2 686 4 382 4 1098 2 269 2 834 2 1101 2 534 2 837 4 696 16 699 2 398 4 399 2 148 2 280 2 282 2 846 24 284 4 551 12 847 4 975 12 
1 2 3 2 4 2 563 6 855 2 291 6 11 2 856 2 570 2 573 2 293 2 575 2 581 10 296 2 22 9 580 4 297 2 24 2 583 8 304 2 584 6 30 12 307 4 32 4 33 4 35 2 865 4 869 18 310 2 588 64 311 2 42 2 43 2 44 2 594 2 315 2 877 2 879 2 318 8 882 2 49 2 596 2 884 36 51 1 55 2 599 4 58 12 63 4 602 2 334 2 606 25 64 62 610 4 611 4 65 2 894 2 338 4 339 6 340 2 895 2 70 2 71 2 901 2 903 18 905 2 78 4 906 2 79 12 622 2 623 4 626 2 911 2 914 12 350 2 92 3 917 6 919 2 920 2 921 4 635 6 639 2 353 16 642 2 357 16 926 4 358 4 646 2 648 2 928 2 100 2 930 4 102 2 652 2 653 2 655 2 361 2 934 2 114 9 113 3 661 2 940 2 116 2 364 4 669 16 944 3 121 2 123 8 948 4 369 2 370 2 952 2 127 2 954 2 128 2 372 4 374 16 130 2 375 2 685 6 379 4 382 4 688 2 689 2 384 8 385 4 134 2 136 2 139 2 142 4 961 2 391 2 964 2 696 32 698 2 396 2 149 2 700 2 150 2 702 6 151 2 401 2 972 14 152 4 405 2 407 6 409 2 711 8 157 2 977 4 976 2 978 2 717 4 160 10 982 6 163 2 162 2 412 2 165 20 722 2 414 2 984 25 724 4 418 2 729 2 730 2 989 2 422 2 990 6 423 2 174 2 991 24 992 2 736 15 426 4 738 4 741 2 178 4 177 2 430 28 742 2 179 10 431 2 181 2 432 2 433 2 183 2 182 4 436 4 438 2 753 24 757 50 758 2 440 2 442 6 759 2 1011 46 445 2 762 2 1012 3 1013 2 202 2 764 2 1016 2 452 2 206 4 767 4 208 2 1017 2 209 2 1018 2 453 2 1019 6 1020 4 768 8 211 4 212 2 1024 8 1025 4 457 2 774 10 1026 2 219 2 460 2 461 2 220 2 463 24 464 2 1031 2 224 10 1035 4 226 2 781 2 467 8 1041 2 472 2 1042 2 783 2 1048 2 1050 2 1051 2 1052 2 479 2 234 2 1056 6 236 2 1058 4 239 2 483 14 1059 2 486 14 796 4 244 4 245 4 802 2 1064 6 495 26 805 6 249 4 806 2 251 2 1067 2 1069 2 1072 6 1073 2 258 2 506 4 818 2 505 2 821 2 1078 2 510 2 513 2 824 2 826 2 518 6 1091 2 266 2 1093 2 830 2 1094 6 521 4 1095 2 523 4 525 2 527 2 269 2 270 2 533 4 1103 2 1104 2 537 2 839 4 1107 2 277 4 542 18 279 26 544 2 842 12 280 14 546 3 282 2 845 6 549 2 846 44 284 4 553 4 
160 4 606 2 696 2 1011 6 315 2 806 2 984 2 700 2 544 2 842 2 280 2 92 2 884 2 1095 2 1034 2 224 2 438 2 689 2 846 2 486 2 353 2 525 2 505 2 581 2 
160 4 606 2 696 2 1011 6 315 2 806 2 984 2 700 2 544 2 842 2 280 2 92 2 884 2 1095 2 1034 2 224 2 438 2 689 2 846 2 486 2 353 2 525 2 505 2 581 2 
160 4 606 2 696 2 1011 6 315 2 806 2 984 2 700 2 544 2 842 2 280 2 92 2 884 2 1095 2 1034 2 224 2 438 2 689 2 846 2 486 2 353 2 525 2 505 2 581 2 
622 4 717 2 123 2 949 2 444 2 984 3 266 4 884 2 206 2 521 2 523 2 689 2 639 2 796 2 768 2 736 6 529 2 22 3 1025 2 802 4 605 2 964 4 606 3 395 3 696 4 612 2 744 2 584 4 279 6 182 2 34 2 972 2 114 3 438 2 846 10 115 2 711 2 473 4 79 4 81 2 
622 4 717 2 123 2 949 2 444 2 984 2 266 4 1094 2 884 2 206 2 521 2 523 2 689 2 639 2 796 2 768 2 736 4 529 2 22 2 1024 2 1025 2 802 4 928 2 605 2 964 4 606 2 395 2 696 4 612 2 744 2 584 4 279 6 182 2 34 2 972 2 114 2 438 2 846 10 115 2 711 2 473 4 79 4 81 2 
622 4 717 2 123 2 949 2 444 2 984 2 266 4 1094 2 884 2 206 2 521 2 523 2 689 2 639 2 796 2 768 2 736 4 529 2 22 2 1024 2 1025 2 802 4 928 2 605 2 964 4 606 2 395 2 696 4 612 2 744 2 584 4 279 6 182 2 34 2 972 2 114 2 438 2 846 10 115 2 711 2 473 4 79 4 81 2 
622 4 717 2 123 2 949 2 444 2 984 2 266 4 1094 2 884 2 206 2 521 2 523 2 689 2 639 2 796 2 768 2 736 4 529 2 22 2 1024 2 1025 2 802 4 928 2 605 2 964 4 606 2 395 2 696 4 612 2 744 2 584 4 279 6 182 2 34 2 972 2 114 2 438 2 846 10 115 2 711 2 473 4 79 4 81 2 
622 4 717 2 123 2 949 2 444 2 984 2 266 4 1094 4 884 2 206 2 521 2 523 2 689 2 639 2 796 2 768 2 736 4 529 2 22 2 1024 4 1025 2 802 4 928 4 605 2 964 4 606 2 395 2 696 4 612 2 744 2 584 4 279 6 182 2 34 2 972 2 114 2 438 2 846 10 115 2 711 2 473 4 79 4 81 2 
508 2 1 2 294 2 373 2 671 2 634 2 
659 2 348 2 873 2 608 2 425 2 294 2 542 2 
124 2 5 1 164 2 415 2 858 1 992 2 577 2 696 8 301 2 459 2 1106 2 841 2 614 2 250 1 545 2 704 1 1070 2 751 2 1071 2 846 10 283 2 937 2 666 2 469 2 77 1 819 2 
1025 2 245 2 717 2 1103 2 123 2 930 2 826 2 291 4 182 2 363 2 796 2 768 2 736 6 711 2 79 4 1024 2 
622 2 802 2 964 2 371 2 776 2 278 2 31 2 186 2 268 2 256 2 504 3 1005 2 771 2 
927 1 622 2 802 2 964 2 696 1 371 2 776 2 147 2 878 2 278 4 31 2 186 2 268 2 846 1 256 2 504 6 1005 2 771 2 
622 2 802 2 964 2 371 2 776 2 147 2 878 2 278 4 31 2 186 4 268 4 256 2 504 6 1005 4 771 2 
927 1 622 2 802 2 964 2 696 1 371 2 776 2 147 8 878 6 278 4 31 2 186 8 268 8 846 1 256 2 504 10 1005 8 771 2 
793 2 636 2 635 2 921 2 483 6 307 2 308 1 1072 2 364 2 946 1 125 2 685 2 957 2 57 2 140 1 696 6 66 2 339 2 466 2 846 6 158 2 
946 2 592 2 199 2 721 2 790 2 417 2 794 2 519 2 921 2 483 12 485 2 209 2 21 2 957 2 423 2 53 2 135 2 859 2 528 2 57 2 996 2 696 14 66 2 339 6 307 2 466 2 1072 6 936 2 846 14 364 2 441 2 158 10 821 2 
1044 2 852 8 86 6 719 2 721 4 628 2 790 2 791 2 480 6 794 4 1057 2 14 4 635 4 921 2 17 2 16 2 483 38 574 2 423 2 97 2 175 2 924 2 356 2 1062 2 996 4 1063 2 359 2 101 2 804 2 863 2 1065 2 809 2 307 4 187 6 1072 20 936 10 939 2 194 2 195 2 364 4 821 2 590 6 592 2 761 2 875 2 1082 4 677 8 1014 2 265 2 50 2 323 4 203 6 685 4 209 2 957 2 1099 2 57 2 600 6 835 2 140 6 392 2 535 2 696 40 66 2 339 18 341 2 466 2 706 2 707 2 780 8 846 44 552 2 155 2 907 2 1114 2 1116 2 158 14 
477 2 86 2 721 4 790 2 481 2 12 2 793 2 725 2 794 4 726 2 14 2 635 6 921 2 636 2 483 34 423 2 21 2 175 2 996 4 1062 2 1065 2 29 2 307 2 1072 10 936 6 364 2 441 2 821 2 946 2 592 2 125 8 517 2 323 2 685 6 327 2 209 2 690 2 957 2 1099 2 57 2 528 2 140 2 892 2 696 20 66 2 339 10 341 2 466 2 844 2 846 22 158 12 
1087 2 

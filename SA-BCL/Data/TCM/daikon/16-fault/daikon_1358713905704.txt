#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR utilMDE.Assert$AssertionException (115,291) (115,291) 
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (115,291) (115,291) 824 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 650 588 608 474 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 579 222 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice2:arity()I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:eq(JJ)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern:intern([I)[I | RETURN | 15863 | return null
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:memberOf(D[F)Z
jtb.JavaCharStream:getEndColumn()I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.PptSlice1:arity()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isArray()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:lt(II)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | STATEMENT | 122987 | stmt -> ;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | CONSTANT | 55424 | 2 -> 1
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ProglangType:dimensions()I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Debug:logOn()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariant:logDetail()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:lte(II)Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Intern:intern([J)[J
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:justified()Z
jtb.JavaCharStream:ReadByte()C
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Ppt:Ppt()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:gt(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:sign(I)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(DD)Z
daikon.ProglangType:isScalar()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsLT([II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexLTE([I[I)Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:noDups([I)Z
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24033 | = null
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:isIntegral()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfo:relate_var()V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptSlice1:num_samples()I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 20834 | = null
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:lexEqual([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
daikon.VarInfo:new_ppt()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:arity()I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([J[J)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
198 2 449 2 115 2 165 4 767 2 146 2 284 2 338 2 291 2 
421 2 137 6 698 2 730 2 437 2 427 6 129 2 541 2 792 6 816 2 235 2 
681 2 440 2 670 4 724 2 705 6 115 2 155 6 880 2 881 2 689 6 374 6 430 2 271 2 291 2 
136 4 487 2 851 2 652 4 553 4 227 7 393 2 824 2 31 6 115 2 626 2 573 2 340 4 302 2 381 2 89 4 271 2 404 6 291 2 
107 4 750 6 
14 2 
136 2 103 2 851 2 652 2 227 6 480 2 31 4 626 2 573 2 302 2 381 2 327 2 89 2 726 2 553 2 393 2 335 2 242 2 463 2 639 2 50 2 340 2 404 4 
136 8 831 6 487 2 679 2 306 2 652 5 851 4 553 8 227 14 393 4 535 6 626 4 573 4 130 4 340 8 725 4 404 12 
485 2 763 2 326 2 543 2 528 2 
220 2 876 2 479 2 324 2 688 2 207 2 14 2 457 2 276 2 415 2 
502 2 622 2 680 2 509 2 855 4 115 4 686 2 66 2 410 2 356 2 233 2 518 4 71 2 696 2 240 2 636 2 755 2 640 2 643 4 530 2 712 2 472 2 28 2 319 2 193 2 721 2 197 2 827 2 201 2 771 2 382 4 268 2 545 2 883 2 488 2 490 2 783 2 284 2 44 2 45 2 339 2 844 2 794 2 291 4 
136 16 253 2 851 8 652 10 227 25 31 6 770 6 115 4 535 6 626 8 573 8 118 8 381 6 515 2 89 4 725 4 831 6 72 4 553 16 393 8 340 16 130 4 812 2 404 24 291 4 648 2 
721 2 144 2 443 2 
56 2 550 2 885 2 521 2 183 2 20 2 785 2 243 2 810 2 555 22 589 2 356 2 517 2 593 10 
563 3 0 2 344 1 565 2 223 6 567 2 111 2 802 2 453 2 115 34 455 2 355 2 804 4 690 2 9 4 575 3 357 2 236 2 12 2 122 8 577 16 364 1 578 2 582 2 807 2 366 2 583 3 18 1 461 2 586 2 811 2 587 2 466 2 814 2 250 2 251 2 134 5 260 2 259 32 140 16 718 3 820 2 720 2 478 2 825 1 264 1 484 6 483 1 35 3 828 2 269 2 270 3 385 2 603 3 275 2 40 2 41 2 280 3 391 2 392 2 733 1 46 24 840 2 839 4 49 2 841 2 154 3 398 2 495 1 496 3 399 2 290 2 52 3 403 8 160 2 616 2 738 2 847 2 291 32 620 2 161 2 503 2 294 2 298 2 296 2 507 2 59 32 853 2 854 2 169 12 510 2 511 2 61 4 746 2 301 2 747 2 173 16 858 2 631 1 67 4 68 1 305 2 307 2 863 2 414 2 865 2 309 2 310 4 638 2 417 8 651 2 81 2 764 2 317 2 192 1 423 2 533 2 424 6 656 6 428 2 198 2 200 2 660 16 325 1 202 1 542 1 661 2 662 2 775 2 544 2 206 1 91 2 549 2 665 2 333 2 552 4 436 2 211 4 336 2 337 3 439 2 671 2 212 2 674 24 447 1 791 2 793 2 
152 2 
115 2 277 2 
115 4 225 2 554 2 
163 8 740 4 407 38 347 2 742 10 800 2 228 4 349 12 63 4 856 2 6 2 857 4 120 2 177 4 234 10 360 2 411 2 860 12 695 12 70 4 179 12 753 12 369 38 585 2 308 8 868 2 126 8 706 2 707 2 871 4 25 2 420 2 762 4 78 12 649 2 595 10 376 8 256 12 261 2 822 4 477 38 378 2 481 2 380 2 328 12 601 10 331 12 776 6 834 6 668 2 94 2 150 2 732 2 493 2 98 2 444 12 288 4 736 18 889 4 156 2 100 12 342 2 446 4 217 2 892 8 54 2 
230 2 69 2 451 2 614 1 
69 2 691 2 
501 2 887 2 721 2 273 2 
501 2 887 2 758 2 623 2 721 2 273 2 
658 2 315 2 450 2 69 2 887 2 721 2 
599 2 509 2 
315 2 887 2 798 2 721 2 
406 2 2 2 
316 2 151 2 
739 2 564 2 
322 2 522 2 
522 2 151 2 806 2 
522 2 151 2 576 2 
522 2 151 2 363 2 
522 2 151 2 112 2 
377 2 721 2 34 2 513 2 186 2 887 2 813 6 529 6 
65 2 23 2 
658 2 315 2 69 2 887 2 758 2 692 2 721 2 
658 2 69 2 531 2 
658 2 69 2 536 2 
230 2 65 2 635 2 
658 2 69 2 
65 2 558 2 
69 2 823 2 
230 2 65 2 434 2 
739 2 230 2 500 2 
230 2 675 2 522 2 
230 2 406 2 768 2 
230 2 151 2 24 2 
65 2 267 2 
257 2 69 2 
739 2 175 2 
522 2 629 2 
406 2 737 2 
537 2 151 2 
65 2 482 2 
405 2 151 2 
406 2 395 2 
522 2 663 2 
739 2 135 2 
230 2 729 2 65 2 434 2 
230 2 729 2 65 2 434 2 110 2 
230 2 297 2 65 2 
230 2 757 2 65 2 
869 2 285 2 497 2 715 2 
548 4 388 2 697 2 58 2 778 2 75 2 878 4 657 2 99 2 673 2 555 6 524 2 512 2 870 2 772 2 795 2 619 2 386 2 
230 2 383 2 
366 2 
223 2 797 2 108 2 231 2 115 26 455 2 804 4 690 2 9 4 357 2 122 2 237 2 578 2 582 2 807 2 371 2 811 2 132 2 259 4 260 4 820 2 143 2 825 2 484 6 385 2 39 4 40 2 390 2 391 2 392 2 734 2 287 2 839 4 397 4 495 2 160 2 291 26 620 2 850 2 294 2 296 2 852 2 59 6 507 2 853 2 169 8 510 2 61 2 749 2 858 2 67 4 862 2 309 2 310 2 638 2 81 2 764 2 317 2 424 2 656 4 84 2 428 2 198 2 85 2 660 6 775 2 549 6 333 2 211 2 439 2 671 2 212 2 791 2 793 2 
223 2 797 2 108 2 231 2 115 26 455 2 804 4 690 2 9 4 357 2 122 2 237 2 578 2 365 2 582 2 807 2 371 2 811 2 132 2 259 4 260 4 820 2 143 2 825 2 484 6 385 2 39 4 275 1 40 2 390 2 391 2 392 2 287 2 839 4 397 4 495 2 399 1 160 2 291 26 620 2 850 2 294 2 296 2 59 6 507 2 853 2 854 2 169 8 510 2 61 2 749 2 858 2 67 4 309 2 310 2 638 2 80 2 81 2 764 2 317 2 424 2 656 5 84 2 428 2 198 2 85 2 660 6 538 2 775 2 549 6 333 2 211 2 439 2 671 2 212 2 791 2 793 2 
817 2 
17 2 759 2 
292 2 293 2 294 2 296 2 621 2 168 2 685 2 116 2 115 12 455 2 804 2 748 2 121 4 357 2 632 4 304 8 698 4 701 2 182 8 241 10 244 2 246 2 129 2 128 4 418 2 76 2 465 2 645 2 249 4 816 2 26 2 27 4 137 6 653 2 426 2 427 6 484 4 540 2 429 2 775 2 829 2 832 2 40 2 730 4 606 2 551 2 334 2 279 2 282 4 391 2 781 2 786 2 47 2 839 2 611 2 790 2 216 2 792 6 676 2 291 6 
292 2 293 2 294 2 296 2 621 2 168 2 685 2 115 12 455 2 804 2 748 2 121 4 357 2 10 4 632 4 304 8 698 4 701 2 702 2 182 8 241 10 244 2 246 2 129 2 128 4 418 2 76 2 465 2 645 2 249 4 816 2 26 2 27 4 137 8 653 2 426 2 427 6 484 4 540 2 429 2 541 2 775 2 829 2 832 2 40 2 730 4 606 2 551 2 334 2 279 2 282 4 391 2 781 2 97 2 839 2 786 2 611 2 790 2 216 2 792 8 676 2 291 6 
26 2 27 2 621 2 698 2 730 2 653 2 279 2 427 2 244 2 246 2 418 2 540 2 748 2 429 2 121 4 792 2 676 2 632 4 
292 2 293 2 294 2 296 2 621 2 168 2 685 2 116 2 115 12 455 2 804 2 748 2 121 4 357 2 632 4 304 4 698 4 701 2 182 4 241 6 244 2 246 2 128 4 418 2 76 2 465 2 645 2 249 4 816 2 26 2 27 4 137 6 653 2 426 2 427 4 484 4 540 2 429 2 541 2 775 2 829 2 832 2 40 2 730 4 606 2 551 2 334 2 279 2 282 4 391 2 781 2 786 2 47 2 839 2 611 2 790 2 216 2 792 6 676 2 291 6 
292 2 293 2 294 2 296 2 621 2 168 2 685 2 116 2 115 12 455 2 804 2 748 2 121 4 357 2 632 4 304 4 698 4 701 2 182 4 241 6 244 2 246 2 128 4 418 2 76 2 465 2 645 2 249 4 816 2 26 2 27 4 137 6 653 2 426 2 427 6 484 4 540 2 429 2 775 2 829 2 832 2 40 2 730 4 606 2 551 2 334 2 279 2 282 4 391 2 781 2 437 2 786 2 47 2 839 2 611 2 790 2 216 2 792 4 676 2 291 6 
292 2 293 2 294 2 296 2 621 2 168 2 685 2 116 2 115 12 455 2 804 2 748 2 121 4 357 2 632 4 304 4 698 4 701 2 182 8 241 6 244 2 246 2 129 2 128 4 418 2 76 2 465 2 645 2 249 4 816 2 26 2 27 4 137 6 653 2 426 2 427 6 484 4 540 2 429 2 775 2 829 2 832 2 40 2 730 4 606 2 551 2 334 2 279 2 282 4 391 2 781 2 786 2 47 2 839 2 611 2 790 2 216 2 792 6 676 2 291 6 
292 2 293 2 294 2 296 2 621 2 168 2 685 2 116 2 115 12 455 2 804 2 748 2 121 4 357 2 632 4 304 8 698 4 701 2 182 8 241 10 244 2 246 2 129 2 128 4 418 2 76 2 465 2 645 2 249 4 816 2 26 2 27 4 137 8 653 2 426 2 427 8 484 4 540 2 429 2 775 2 829 2 832 2 40 2 730 4 606 2 551 2 334 2 279 2 282 4 391 2 781 2 437 2 839 2 786 2 47 2 611 2 790 2 216 2 792 6 676 2 291 6 
292 2 293 2 294 2 296 2 621 2 168 2 685 2 116 2 115 12 455 2 804 2 748 2 121 4 357 2 632 4 304 8 698 4 701 2 182 8 241 10 244 2 246 2 129 2 128 4 418 2 76 2 465 2 645 2 249 4 816 2 26 2 27 4 137 6 653 2 426 2 427 6 484 4 540 2 429 2 775 2 829 2 832 2 40 2 730 4 606 2 551 2 334 2 279 2 282 4 391 2 781 2 786 2 47 2 839 2 611 2 790 2 216 2 792 6 676 2 291 6 
1 2 223 2 225 6 685 2 452 2 455 2 7 2 690 2 9 4 693 10 15 2 698 4 699 1 701 2 241 2 703 6 244 2 246 2 464 6 465 2 248 2 467 2 249 6 470 2 26 2 27 4 259 2 716 2 476 4 263 2 33 2 265 7 484 6 36 6 727 2 275 2 486 1 40 2 730 4 277 6 279 2 282 4 291 24 292 2 294 2 293 2 295 6 296 2 59 8 61 2 748 2 67 4 520 2 309 2 756 6 310 2 76 2 312 2 313 2 81 2 764 2 317 2 766 2 84 2 85 2 86 2 540 2 87 7 775 2 549 6 333 12 551 2 334 4 781 2 786 2 788 1 556 2 557 2 790 2 560 1 792 4 343 6 799 8 346 2 108 4 348 2 113 2 116 2 115 46 353 1 804 4 119 2 121 4 357 2 122 2 582 2 367 2 124 2 584 6 128 8 815 6 816 4 137 12 139 2 829 2 385 2 147 2 832 2 833 6 389 6 606 4 607 1 391 2 392 2 152 6 153 1 839 4 611 2 397 4 396 2 399 2 160 2 845 2 615 6 850 2 620 2 621 2 168 2 169 4 858 2 632 4 181 6 864 2 182 2 185 1 638 2 187 6 418 2 645 2 875 4 653 2 424 2 426 2 656 6 427 8 198 2 660 6 429 2 203 2 431 2 666 2 437 4 211 2 439 2 671 2 212 2 216 2 891 1 676 2 
1 2 223 2 225 6 346 2 799 8 108 4 348 2 452 2 113 2 685 2 115 48 116 2 455 2 7 2 804 4 119 2 690 2 121 4 9 4 693 10 357 2 122 2 15 2 698 4 582 2 701 2 124 2 367 2 584 6 241 2 703 6 244 2 246 2 464 6 128 8 129 4 465 2 467 2 248 2 249 6 815 6 470 2 816 4 26 2 27 4 260 2 716 2 259 2 137 12 139 2 476 4 263 2 33 2 484 6 36 6 38 2 147 2 385 2 829 2 727 2 275 2 832 2 833 6 389 6 40 2 277 6 730 4 606 4 279 2 282 4 391 2 392 2 152 6 839 4 611 2 396 2 397 4 399 2 845 2 160 2 615 6 291 26 292 2 620 2 850 2 293 2 294 2 295 6 621 2 296 2 59 8 168 2 169 8 625 2 61 4 748 2 858 2 632 4 67 4 520 2 181 6 864 2 182 6 756 6 309 2 310 4 187 6 638 2 418 2 76 2 312 2 313 2 645 2 875 4 81 2 764 2 317 2 653 2 766 2 426 2 424 2 656 6 427 8 84 2 85 2 198 2 86 2 660 6 540 2 203 2 429 2 775 2 431 2 549 6 666 2 333 12 551 2 334 4 211 4 781 2 439 2 671 2 212 2 786 2 556 2 557 2 216 2 790 2 792 8 676 2 343 6 
1 2 223 2 225 6 346 2 799 8 108 4 348 2 452 2 113 2 685 2 115 48 116 2 455 2 7 2 804 4 119 2 690 2 121 4 9 4 693 10 357 2 122 2 15 2 698 4 582 2 701 2 124 2 367 2 584 6 241 6 703 6 244 2 246 2 464 6 128 8 129 4 465 2 467 2 248 2 249 6 815 6 470 2 816 4 26 2 27 4 260 2 716 2 259 2 137 12 139 2 476 4 263 2 33 2 484 6 36 6 38 2 147 2 385 2 829 2 727 2 275 2 832 2 833 6 389 6 40 2 277 6 730 4 606 4 279 2 282 4 391 2 392 2 152 6 839 4 611 2 396 2 397 4 399 2 845 2 160 2 615 6 291 26 292 2 850 2 620 2 293 2 294 2 295 6 621 2 296 2 59 8 168 2 169 8 625 2 61 4 748 2 858 2 632 4 67 4 304 4 520 2 181 6 864 2 182 6 756 6 309 2 310 4 187 6 638 2 418 2 76 2 312 2 313 2 645 2 875 4 81 2 764 2 317 2 653 2 766 2 426 2 424 2 656 6 427 8 84 2 85 2 198 2 86 2 660 6 540 2 203 2 429 2 775 2 431 2 549 6 666 2 333 12 551 2 334 4 211 4 781 2 439 2 671 2 212 2 786 2 556 2 557 2 216 2 790 2 792 8 676 2 343 6 
1 2 223 4 225 12 685 2 452 2 455 2 7 2 690 2 9 4 693 8 15 2 698 4 701 2 241 6 703 12 244 2 246 2 464 6 465 2 248 2 467 2 249 6 252 6 470 2 255 2 26 2 27 4 260 2 259 4 716 2 476 4 263 2 33 2 484 6 36 6 38 2 727 2 275 2 40 2 730 4 277 12 279 2 282 4 283 2 291 24 292 2 294 2 293 2 295 6 296 2 59 12 743 2 61 4 748 2 67 4 304 4 520 2 309 2 756 6 310 4 76 2 312 2 313 2 81 2 764 2 317 2 766 2 84 4 85 2 86 2 540 2 541 2 775 2 549 8 333 10 551 2 334 4 780 6 781 2 786 2 556 2 557 2 790 2 792 10 343 6 799 8 346 2 108 4 801 2 348 2 113 2 116 2 115 52 804 4 119 2 121 4 357 2 122 4 582 2 367 2 124 2 584 12 129 4 128 8 815 6 816 4 592 6 818 6 137 16 139 2 142 6 829 2 385 2 147 2 387 6 832 2 833 6 389 6 606 4 391 2 392 2 152 12 839 4 611 2 397 6 396 2 399 2 160 2 845 2 615 6 620 2 850 2 621 2 168 2 169 10 625 2 409 6 172 2 628 6 174 6 858 2 632 4 181 12 864 2 182 6 638 2 187 6 418 2 645 2 874 2 875 4 653 2 424 4 426 2 656 6 427 10 198 2 660 8 429 2 431 2 666 2 211 4 437 2 439 2 671 2 212 2 213 2 216 2 676 2 893 2 
137 4 621 2 653 2 168 2 427 6 685 2 115 4 116 2 429 2 748 2 121 2 632 2 304 4 832 2 698 4 730 4 551 2 701 2 279 2 282 2 781 2 241 4 182 6 244 2 786 2 128 2 129 2 76 2 465 2 216 2 790 2 792 6 249 2 676 2 816 2 
223 3 221 2 108 2 685 2 116 2 455 2 115 28 804 4 121 2 690 2 9 4 357 2 693 2 362 2 698 4 582 2 366 2 701 2 241 2 462 2 244 2 128 2 129 2 465 2 249 2 816 2 137 4 259 3 484 6 829 2 385 2 275 2 832 2 40 2 730 4 279 2 282 2 391 2 392 2 839 4 397 4 399 2 400 2 160 2 291 24 620 2 850 2 294 2 298 2 296 2 621 2 59 8 168 2 748 2 858 2 632 2 67 4 307 2 634 2 74 3 182 6 309 2 638 2 76 2 81 2 764 2 317 2 653 2 533 2 424 3 656 6 427 6 198 2 85 2 660 6 203 2 429 2 775 2 549 6 333 4 551 2 781 2 439 2 671 2 786 2 216 2 790 2 792 6 676 2 
76 2 465 2 514 2 
76 2 465 2 514 2 
108 6 115 24 455 2 804 4 690 2 8 2 121 2 9 4 693 2 357 2 698 4 581 2 582 2 701 2 125 2 241 6 19 2 129 4 128 4 465 4 591 2 249 4 816 4 26 2 27 4 259 2 137 16 475 2 476 2 723 2 484 6 147 2 385 2 727 2 275 2 40 2 730 4 606 4 279 2 391 2 282 2 392 2 837 2 838 2 287 4 839 4 399 2 843 2 160 2 53 2 291 16 292 2 620 2 850 2 293 2 294 2 296 2 504 2 59 2 169 4 60 4 61 4 514 2 858 2 632 2 67 4 304 4 413 2 182 6 309 2 310 4 418 2 76 6 645 2 875 2 81 2 764 2 317 2 422 2 656 6 427 12 198 2 85 2 660 2 539 2 429 4 541 4 775 2 431 2 549 2 208 2 333 4 334 2 211 4 437 4 439 2 671 2 212 4 787 4 101 2 216 2 792 12 676 2 343 2 
666 2 17 2 333 2 581 2 476 2 838 2 115 4 879 2 419 2 540 2 843 2 775 2 693 2 845 2 343 2 796 2 291 2 
219 2 108 6 115 24 455 2 804 4 690 2 8 2 121 2 9 4 357 2 698 4 581 2 582 2 701 2 241 6 128 4 129 4 465 4 591 2 249 4 133 2 816 4 26 2 27 4 259 4 137 16 723 2 484 6 147 2 385 2 727 2 275 2 40 2 730 4 606 4 279 2 282 2 391 2 392 2 43 2 837 2 838 2 287 4 839 4 611 2 399 2 843 2 160 2 53 2 617 2 291 16 292 2 620 2 850 2 293 2 294 2 296 2 59 2 169 4 60 4 61 4 514 2 858 2 632 2 67 4 304 4 413 2 182 6 309 2 310 4 418 2 76 6 645 2 875 2 81 2 764 2 317 2 422 2 656 6 427 12 198 2 85 2 660 2 539 4 429 4 541 4 775 2 431 2 549 2 208 2 333 2 334 4 211 4 437 4 439 2 671 2 212 4 787 4 101 2 216 2 792 12 676 2 343 2 102 2 
108 6 115 24 455 2 804 4 690 2 8 2 121 2 9 4 693 2 357 2 698 4 581 2 582 2 701 2 241 6 459 2 129 4 128 4 465 4 591 2 249 4 816 4 26 2 27 4 259 2 137 16 476 2 723 2 484 6 147 2 385 2 727 2 275 2 604 2 40 2 730 4 606 4 279 2 391 2 282 2 392 2 837 2 838 2 287 4 839 4 611 2 399 2 843 2 160 2 53 2 618 2 291 16 292 2 620 2 850 2 293 2 294 2 296 2 299 2 59 2 169 4 60 4 61 4 514 2 858 2 632 2 67 4 304 4 413 2 182 6 309 2 310 4 418 2 76 6 645 2 875 2 81 2 764 2 317 2 422 2 656 6 427 12 198 2 85 2 660 2 539 2 429 4 541 4 775 2 431 2 432 2 549 2 208 2 333 4 334 4 211 4 437 4 439 2 671 2 212 4 787 4 101 2 216 2 792 12 676 2 343 2 
650 2 224 2 474 2 188 2 588 2 42 2 608 2 433 2 321 2 
223 3 259 3 596 2 424 3 59 2 30 2 84 6 745 2 115 2 660 2 630 1 359 4 546 2 549 2 148 2 779 2 95 2 73 2 394 2 416 3 638 2 397 2 157 2 159 2 291 2 
223 2 259 2 596 2 424 2 59 2 30 2 84 6 745 2 115 2 660 2 359 4 546 2 549 2 148 2 779 2 95 2 73 2 394 2 416 2 638 2 397 2 157 2 159 2 291 2 
223 2 259 2 596 2 424 2 59 2 30 2 84 6 745 2 115 2 660 2 359 4 546 2 549 2 148 2 779 2 95 2 73 2 394 2 416 2 638 2 397 2 157 2 159 2 291 2 
851 2 59 2 167 3 227 5 62 2 115 10 117 6 573 2 626 2 577 2 752 4 700 3 458 2 368 2 127 2 638 2 709 2 711 4 644 2 136 2 259 3 652 1 140 2 597 4 83 4 424 3 598 4 30 2 600 2 830 2 547 2 884 3 278 4 553 2 393 2 438 2 672 2 340 2 404 4 561 2 291 4 
851 2 59 2 167 2 227 4 62 2 115 10 117 6 573 2 626 2 577 2 752 4 700 2 458 2 368 2 127 2 638 2 709 2 711 4 644 2 136 2 259 2 652 2 140 2 597 4 83 4 424 2 598 4 30 2 145 2 600 2 381 2 830 2 547 2 884 2 278 4 553 2 393 2 438 2 672 2 340 2 404 4 561 2 291 4 
851 2 59 2 167 2 227 4 62 2 115 10 117 6 573 2 626 2 577 2 752 4 700 2 458 2 368 2 127 2 638 2 709 2 711 4 644 2 136 2 259 2 652 2 140 2 597 4 83 4 424 2 598 4 30 2 145 2 600 2 381 2 830 2 547 2 884 2 278 4 553 2 393 2 438 2 672 2 340 2 404 4 561 2 291 4 
851 2 59 2 167 2 227 4 62 2 115 10 117 6 573 2 626 2 577 2 752 4 700 2 458 2 368 2 127 2 638 2 709 2 711 4 644 2 136 2 259 2 652 2 140 2 597 4 83 4 424 2 598 4 30 2 145 2 600 2 381 2 830 2 547 2 884 2 278 4 553 2 393 2 438 2 672 2 340 2 404 4 561 2 291 4 
851 2 59 2 167 2 227 4 62 2 115 10 117 6 573 2 626 2 577 2 752 4 700 2 458 2 368 2 127 2 638 2 709 2 711 4 644 2 136 2 259 2 652 4 140 2 597 4 83 4 424 2 598 4 30 2 145 4 600 2 381 4 830 2 547 2 884 2 278 4 553 2 393 2 438 2 672 2 340 2 404 4 561 2 291 4 
237 2 21 2 765 2 473 2 239 2 523 2 848 2 
138 2 526 2 239 2 435 2 109 2 229 2 
763 1 294 2 222 2 579 2 777 1 209 2 141 1 572 1 115 4 372 2 499 2 543 1 358 2 205 2 291 4 
136 6 254 2 622 2 345 2 851 6 652 5 227 14 598 4 770 4 232 2 115 6 535 4 145 4 201 2 659 2 573 6 626 6 118 2 381 5 515 1 882 2 725 2 332 2 238 2 72 2 553 6 393 6 438 2 340 6 404 12 291 6 
375 2 92 2 678 2 597 2 278 2 425 2 262 2 704 7 534 2 300 1 708 2 115 1 711 2 37 2 498 2 471 2 291 1 751 4 
375 4 92 4 678 2 597 2 278 2 425 4 262 2 704 6 534 2 708 2 711 2 37 2 498 2 471 2 751 4 
375 8 92 8 678 2 597 2 278 2 425 8 262 2 704 10 534 2 300 1 708 8 115 1 711 2 37 6 498 2 471 2 291 1 751 4 
375 2 92 2 678 2 597 2 278 2 425 2 262 2 704 2 534 2 711 2 498 2 471 2 751 2 
448 2 568 4 569 8 571 2 683 4 3 6 4 4 803 10 454 4 350 4 114 84 351 6 115 150 687 90 354 2 805 6 9 88 574 4 11 124 361 6 456 5 13 6 580 6 123 18 809 4 460 42 370 2 247 2 131 4 22 6 468 92 469 8 714 6 594 2 819 4 258 8 821 24 29 8 379 2 722 4 826 4 266 2 384 2 272 42 728 8 275 58 605 8 489 2 149 18 731 4 835 36 492 2 836 16 494 4 286 24 610 4 842 2 402 10 399 58 613 6 51 22 158 6 289 24 846 8 291 134 162 24 164 4 57 6 505 4 506 12 408 2 624 2 166 50 508 2 744 6 171 6 64 1 627 16 303 24 176 2 858 8 859 11 67 112 178 10 519 10 412 26 861 4 866 6 637 4 184 6 525 4 77 16 760 4 642 8 761 2 873 26 646 6 647 2 191 34 79 28 81 14 317 14 82 6 654 6 655 10 656 248 196 4 195 24 320 2 323 4 199 4 88 16 773 6 329 10 664 6 93 90 669 10 886 2 782 8 784 4 441 17 214 8 888 12 341 6 445 6 789 4 559 6 218 10 
562 2 566 2 104 4 226 2 105 2 505 2 106 2 408 2 741 2 682 2 624 2 508 2 569 2 744 2 684 2 5 2 803 2 171 2 115 46 627 4 303 2 9 20 858 2 516 2 11 6 456 2 67 20 519 2 178 2 16 2 180 2 123 2 808 4 866 2 867 2 184 4 245 6 641 2 710 2 373 4 189 2 590 2 713 2 647 2 714 2 79 38 81 2 317 2 318 2 717 2 655 2 654 2 821 2 719 2 877 2 656 44 194 2 769 2 320 2 88 4 90 2 774 2 329 2 204 2 330 2 275 2 605 2 669 2 835 2 281 2 492 2 96 2 782 6 836 4 784 2 441 2 442 4 735 2 286 2 48 2 214 2 612 2 215 2 402 2 399 2 401 2 158 2 846 2 55 2 218 2 291 44 849 2 
566 10 568 4 569 2 570 2 571 2 683 4 114 24 115 78 352 32 805 4 9 36 11 24 361 4 13 4 694 4 16 10 580 4 123 10 809 4 460 8 247 2 22 4 468 24 469 4 714 4 594 2 258 4 722 2 826 4 272 16 602 4 274 4 275 28 605 2 835 6 491 2 492 2 836 10 609 2 494 4 399 30 613 4 289 8 158 4 846 2 291 70 164 4 57 4 624 2 166 8 508 2 744 4 170 2 171 4 627 10 858 2 67 44 519 6 633 4 861 4 866 4 184 2 754 2 311 8 77 8 760 4 527 8 190 4 872 16 646 4 647 2 191 30 314 4 79 14 81 6 317 6 82 4 318 2 655 4 654 4 532 8 656 104 196 4 769 2 320 2 323 4 199 4 88 10 90 10 773 4 329 4 664 4 669 4 667 4 210 8 886 2 782 6 441 10 888 14 215 2 341 4 890 16 445 4 789 4 559 4 677 2 218 4 
448 2 408 2 624 2 508 2 569 2 744 4 4 2 684 2 115 28 171 4 354 2 627 6 9 14 858 2 859 2 11 8 456 2 67 14 519 2 123 2 866 4 184 2 370 2 77 6 131 2 647 2 714 4 79 14 191 6 81 2 258 4 317 2 654 4 655 2 29 2 656 40 722 2 320 2 323 2 266 2 88 6 384 2 329 2 275 12 605 2 669 2 835 2 492 2 782 4 836 6 441 2 215 2 399 12 51 10 789 2 158 4 846 2 291 26 218 2 
32 2 

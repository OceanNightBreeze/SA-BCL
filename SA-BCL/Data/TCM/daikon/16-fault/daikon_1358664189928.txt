#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 1029 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 698 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.NullPointerException 1129 856 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 1129 856 1045 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (397,448) 1035 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (125,954) (181,286) (181,286) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 43 (125,954) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 43 (125,954) (125,954) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 43 (125,954) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 792 266 265 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 791 1157 1268 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 791 1157 1268 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLT([I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:eltwiseLTE([I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:memberOf(F[D)Z
daikon.Quant:setEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_96()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_3R_110()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_116()Z
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:justified()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_62()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:noDups([I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_77()Z
daikon.PptSlice1:num_samples()I
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3R_126()Z
jtb.JavaCharStream:readChar()C
daikon.PptSlice2:arity()I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:relate_var()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_36()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_3()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_70()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_2_10(I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_17()Z
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:baseIsScalar()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_107()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ProglangType:isArray()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_3R_102()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_81()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_80()Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_69()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String; | CONDITION | 3378 | if (x) -> if (!x)
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_164()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_3R_210()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:logOn()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Intern:intern([D)[D
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:lexGT([I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_137()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_48()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lt(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_67()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
daikon.Quant:lexLTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.diff.Node:Node()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice0:arity()I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([D)D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:eltsGT([II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set; | RETURN | 92707 | return null
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
daikon.Quant:ne(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_89()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_104()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern:internSubsequence([III)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParser:jj_3R_119()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3_12()Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ValueTuple:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:slice([III)[I | RETURN | 160908 | return null
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_ntk()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Debug:logDetail()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_162()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String; | ASSIGN | 10463 | = null
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.MathMDE:gcd([I)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_99()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_98()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:jj_3R_75()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:passes()Z
daikon.Ppt:Ppt()V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.ModBitTracker:num_sets()I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:concat([I[I)[I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_68()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Invariant:logOn()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:subsetOf([I[I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_4(I)Z
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_3R_169()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.JavaParser:jj_3R_148()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:num_samples()I
daikon.PptName:isEnterPoint()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eq(FF)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_10()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_51()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_12(I)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_74()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.WeakHasherMap:size()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_4()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_87()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3_15()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:concat([I[I)[I | ASSIGN | 37483 | = null
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3_27()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:getEndColumn()I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3_29()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.PptSlice1:arity()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair; | RETURN | 2847 | return null
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_3_5()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_108()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1200 2 859 2 888 2 1272 2 1022 2 288 2 736 4 1262 2 388 2 
1029 2 718 4 858 2 333 2 1238 2 1019 4 528 2 734 2 1143 2 11 6 
888 2 1092 6 63 4 1121 2 1161 2 403 6 859 2 134 6 1002 2 327 2 988 4 663 6 1034 2 
991 8 513 8 888 6 645 10 77 6 263 28 1162 8 657 16 184 6 1128 2 859 6 147 2 188 16 367 2 1008 10 90 4 195 2 667 2 743 2 456 12 290 10 578 10 585 10 1274 16 424 4 634 2 952 4 1150 26 1245 4 765 8 
571 6 1213 4 
158 2 
884 2 1037 2 886 2 964 2 888 4 1119 2 967 2 397 2 231 2 659 2 1218 2 88 2 87 2 489 2 1060 2 1062 2 498 2 577 2 753 2 755 2 342 2 1241 2 591 4 846 2 349 4 1250 2 920 2 859 4 1166 2 367 2 532 2 445 4 60 2 280 2 448 2 196 2 1093 2 449 2 941 2 288 2 133 2 1276 4 953 2 717 2 
991 6 1118 5 888 4 645 15 1251 8 77 4 263 52 657 32 1162 19 184 4 479 2 6 6 859 4 527 4 864 6 188 32 1220 2 1008 15 239 6 826 2 667 2 739 4 699 2 454 6 1182 4 456 22 130 6 578 15 290 6 836 3 1103 4 207 4 585 15 341 2 384 4 1274 32 424 2 1150 47 1198 4 
728 2 448 2 604 2 
240 2 740 2 451 2 1097 2 397 2 1043 10 4 2 706 2 1101 22 183 2 541 2 145 2 524 2 238 2 
687 2 645 2 77 2 649 2 263 6 1123 2 559 2 1162 2 657 2 1081 2 188 2 1008 2 493 2 536 2 456 2 578 2 290 4 295 2 585 2 1274 2 424 2 303 2 1150 4 
645 4 454 6 456 4 263 16 578 4 1211 2 657 8 207 4 585 4 628 2 1274 8 952 2 188 8 1150 12 1008 4 1198 4 239 6 
604 2 995 2 967 2 812 4 427 2 553 2 728 6 361 4 1001 4 1127 2 226 4 926 2 1214 2 118 14 117 2 120 4 330 4 1009 10 57 2 123 10 1013 4 534 2 494 2 448 8 742 4 938 2 537 2 1177 4 796 2 498 4 1065 4 705 2 800 62 838 4 1106 2 466 2 346 2 1276 4 138 2 254 2 
396 2 855 2 433 2 328 2 484 2 336 2 158 2 801 2 345 2 99 2 
142 24 809 3 317 4 1120 1 2 2 814 2 1124 32 482 2 820 1 976 2 149 2 331 2 1137 2 152 8 492 2 14 2 155 2 154 1 497 8 671 2 670 1 673 3 986 2 837 2 30 2 1148 2 31 2 845 2 36 1 167 2 170 3 38 2 681 12 1156 2 42 2 692 3 179 2 360 2 362 2 859 34 1003 2 526 32 529 2 55 2 368 2 1171 3 190 1 371 2 1175 2 1014 3 200 2 1020 2 869 2 1026 2 707 4 68 2 875 2 544 2 1190 6 1031 2 1192 1 1194 2 385 2 387 2 388 2 218 2 887 2 719 4 550 2 888 32 395 3 552 2 398 3 221 4 1209 2 892 4 727 1 1049 3 225 6 1215 2 1216 2 404 2 1052 2 407 1 235 1 737 1 1057 1 92 2 572 2 1226 2 900 2 241 12 741 2 1229 6 903 2 419 2 905 3 583 2 1067 2 911 24 759 2 101 2 595 4 596 2 762 2 914 2 599 2 1246 1 256 2 921 2 261 2 107 2 108 4 769 2 607 2 608 2 1076 3 927 2 612 2 1082 1 272 2 1083 2 1260 16 438 2 785 3 439 2 276 1 281 16 793 6 283 1 453 16 287 2 291 2 132 1 292 16 627 2 297 2 629 2 298 2 299 2 1273 5 802 2 135 4 137 2 301 8 1112 2 1115 2 640 2 1280 2 
859 2 408 2 
859 4 7 2 1239 2 
710 2 
641 2 643 4 644 2 647 2 648 16 650 2 654 2 653 2 5 52 655 88 658 56 8 2 664 2 662 2 10 50 661 4 12 4 668 22 669 44 16 2 20 2 19 52 21 4 674 2 27 2 28 2 32 2 678 2 35 2 680 4 684 4 39 2 688 2 690 2 691 94 46 4 48 2 694 6 697 2 50 4 51 14 53 30 54 2 56 18 58 2 698 2 59 4 62 4 701 12 703 2 66 58 704 2 67 2 708 18 711 2 712 4 72 2 71 2 73 2 74 18 720 4 723 2 80 2 79 2 725 2 81 2 83 2 730 2 731 2 733 358 735 2 85 6 745 22 747 104 751 94 750 2 754 2 756 6 100 2 764 6 766 2 105 2 767 2 110 4 109 2 772 2 770 4 111 2 771 2 774 2 773 6 777 18 775 2 779 2 780 2 115 2 783 94 787 2 788 4 121 74 122 2 794 2 126 246 129 62 128 96 799 12 803 2 140 2 141 2 808 2 811 4 813 2 815 2 144 2 821 2 819 4 822 4 824 2 825 2 153 2 827 2 828 2 829 94 830 20 157 2 834 2 839 4 159 10 160 2 841 4 162 16 163 8 844 2 165 2 166 246 847 2 171 94 173 2 175 2 174 48 853 6 180 2 854 2 185 12 860 2 192 2 193 2 194 4 198 2 866 4 201 2 202 6 870 2 871 94 873 2 210 4 212 2 876 2 216 8 879 2 880 2 878 2 885 30 890 2 220 2 891 2 222 6 227 2 228 4 229 36 232 4 237 2 895 4 896 14 242 2 902 2 243 2 245 2 904 42 906 2 248 2 907 88 250 2 252 4 251 2 913 2 915 2 918 2 917 4 919 12 257 2 924 2 925 2 270 2 271 4 928 4 929 2 930 2 277 2 279 62 937 2 936 2 282 2 939 2 284 4 285 2 293 2 947 90 296 2 949 4 304 6 305 2 955 94 308 2 956 2 960 2 959 88 312 2 963 4 314 2 315 2 965 2 966 4 316 2 319 2 969 2 320 2 321 2 970 2 971 2 972 14 974 4 975 16 324 2 326 4 329 28 334 18 335 2 337 18 338 246 343 2 344 2 348 2 992 2 352 50 353 4 355 2 358 94 357 2 996 2 999 2 364 2 1005 2 1010 2 373 4 1017 2 1016 4 1015 6 1018 2 1025 62 1023 2 375 2 377 2 1028 4 379 2 382 2 383 22 1032 2 389 94 390 48 1036 6 392 2 393 2 1040 2 1041 8 399 2 400 2 401 2 1046 4 1048 2 402 4 1051 8 1054 2 409 2 411 4 412 2 1064 12 416 4 418 2 422 2 1069 4 1071 2 1075 8 425 2 1074 8 429 44 430 2 1079 2 1080 4 436 4 435 2 1084 4 1086 2 1087 2 1089 2 441 2 446 4 1091 4 1090 18 447 16 455 4 458 2 457 30 460 2 462 2 1107 4 1110 4 1111 6 467 2 1113 2 469 4 1117 2 470 2 471 2 472 2 473 74 1122 2 474 2 1125 2 475 2 478 6 1130 4 480 2 1131 2 1133 2 1132 2 1135 2 483 58 485 12 486 2 487 4 488 2 1138 2 1140 4 495 2 1141 94 499 2 501 2 506 2 505 50 507 2 1147 2 508 2 1149 4 509 2 1152 2 510 6 1153 2 511 2 1154 2 1155 2 514 2 1158 2 518 2 1159 2 1163 4 1168 2 1167 2 525 16 530 2 1172 4 1178 2 1179 4 1180 2 1184 6 538 2 539 2 1187 54 1188 4 540 2 543 2 1189 2 1191 2 546 2 1196 8 1201 4 1199 2 549 2 1204 8 1205 2 1207 2 554 2 1208 12 557 44 1212 42 564 2 563 2 1222 4 569 2 570 2 1225 58 1232 46 1231 2 1233 2 576 2 580 4 1235 2 582 2 1237 2 588 2 590 18 1242 2 593 2 1248 2 1247 2 606 94 1252 36 610 2 1253 42 1256 100 1254 2 611 2 1258 2 1259 2 617 2 1264 2 620 12 621 4 1266 4 622 2 1267 4 623 2 1269 2 626 2 625 2 630 2 631 2 1275 4 636 18 635 2 1278 4 639 2 
1146 2 309 1 150 2 1270 2 
463 2 1146 2 
90 2 448 2 1146 2 93 2 84 2 566 2 1035 2 
1146 2 84 2 45 2 
932 2 1146 2 84 2 
700 2 567 2 1270 2 
1146 2 84 2 
113 2 567 2 
442 2 1146 2 
994 2 567 2 1270 2 
1193 2 637 2 1270 2 
65 2 3 2 1270 2 
672 2 307 2 1270 2 
459 2 547 2 1270 2 
567 2 95 2 
1066 2 1146 2 
1193 2 37 2 
41 2 3 2 
672 2 354 2 
459 2 598 2 
1271 2 567 2 
459 2 1095 2 
1174 2 672 2 
574 2 3 2 
624 2 1193 2 
994 2 567 2 1160 2 1270 2 
994 2 0 2 567 2 1160 2 1270 2 
1236 2 567 2 1270 2 
545 2 567 2 1270 2 
682 2 1 2 632 2 217 2 
311 4 255 4 768 2 867 2 177 2 18 2 985 2 44 2 835 2 1101 6 359 2 477 2 214 2 1134 2 164 2 594 2 139 2 931 2 
176 2 1270 2 
856 2 1129 2 
856 2 1129 2 1045 2 
90 2 709 2 448 2 1146 2 84 2 1035 2 
96 2 88 2 
448 2 665 2 288 2 1035 2 
535 2 672 2 
459 2 278 2 
1193 2 851 2 
1038 2 3 2 
459 2 874 2 3 2 
459 2 516 2 3 2 
459 2 386 2 3 2 
459 2 3 2 1197 2 
521 2 325 6 448 2 197 6 211 2 877 2 1035 2 1070 2 
567 2 151 2 
986 2 
317 4 814 2 1124 4 1136 2 331 2 1137 2 497 2 503 2 30 2 1148 2 31 2 38 2 681 8 42 2 179 2 362 1 693 2 859 26 861 2 526 6 529 2 368 2 371 2 1176 4 200 2 1020 2 1181 2 1026 2 204 2 68 1 707 2 872 2 1190 2 1192 2 385 2 388 2 218 2 719 4 888 26 1044 2 221 4 1209 2 892 2 727 2 223 2 225 5 1216 2 1052 6 1057 4 572 2 741 2 241 8 900 2 1229 2 759 2 1243 2 595 2 762 2 599 2 258 2 106 4 921 2 108 4 107 2 267 2 114 2 439 2 793 6 1094 2 453 6 1098 2 291 2 946 2 629 4 299 2 802 2 1115 2 1280 2 
317 4 814 2 1124 4 1136 2 331 2 1137 2 497 2 503 2 30 2 1148 2 31 2 38 2 681 8 172 2 42 2 179 2 360 2 362 2 693 2 859 26 861 2 526 6 529 2 368 2 371 2 1176 4 200 2 1020 2 1181 2 1026 2 204 2 707 2 68 2 872 2 1190 2 1192 2 385 2 388 2 218 2 719 4 219 2 888 26 221 4 1209 2 892 2 727 2 223 2 225 6 1216 2 1052 6 1057 2 572 2 741 2 241 8 900 2 1229 2 759 2 1243 2 595 2 762 2 599 2 258 2 106 4 921 2 108 4 107 2 267 2 114 2 439 2 793 6 798 2 453 6 291 2 946 2 629 4 299 2 802 2 1115 2 1280 2 
260 2 
17 2 978 2 
718 6 719 2 888 6 221 2 814 2 556 2 82 2 656 2 224 2 1216 2 977 2 11 6 332 2 899 10 333 4 1227 2 981 2 1061 4 417 2 748 2 1143 2 24 8 908 4 249 2 25 2 587 2 1238 2 29 4 1072 2 599 2 38 2 43 2 609 2 519 4 181 2 1078 2 431 2 1255 2 695 2 696 2 859 12 862 2 528 4 52 2 529 2 189 2 1011 2 793 4 125 2 1019 6 1020 2 286 2 131 2 1024 2 464 4 381 2 300 4 1108 2 633 8 385 2 
718 6 43 2 609 2 519 2 181 2 1078 2 656 2 1255 2 82 2 859 4 696 2 528 4 52 2 977 2 11 6 1088 2 1139 4 899 8 332 2 333 4 1227 2 125 2 1019 4 982 2 286 2 1143 2 1024 2 908 2 24 8 464 2 249 2 25 2 1238 2 300 2 1108 2 633 8 29 2 
718 2 1227 2 333 2 125 2 1061 2 286 2 519 4 609 2 748 2 181 2 556 2 82 2 696 2 300 4 528 2 11 2 1072 2 1011 2 
718 6 719 2 888 6 221 2 814 2 556 2 82 2 656 2 224 2 973 2 1216 2 977 2 11 4 332 2 899 6 333 4 1227 2 981 2 1061 4 417 2 748 2 24 4 908 4 249 2 25 2 587 2 1238 2 29 4 1072 2 599 2 38 2 43 2 609 2 519 4 181 2 1078 2 431 2 1255 2 695 2 696 2 859 12 862 2 528 4 52 2 529 2 189 2 1011 2 793 4 125 2 1019 6 1020 2 286 2 131 2 1024 2 464 4 381 2 300 4 1108 2 633 4 385 2 
718 4 719 2 888 6 221 2 814 2 556 2 82 2 656 2 224 2 1216 2 977 2 11 6 332 2 899 6 333 4 1227 2 981 2 1061 4 417 2 748 2 24 4 908 4 249 2 25 2 587 2 1238 2 29 4 1072 2 599 2 38 2 43 2 609 2 519 4 181 2 1078 2 431 2 1255 2 695 2 858 2 696 2 859 12 862 2 528 4 52 2 529 2 189 2 1011 2 793 4 125 2 1019 6 1020 2 286 2 131 2 1024 2 464 4 381 2 300 4 1108 2 633 4 385 2 
718 6 719 2 888 6 221 2 814 2 556 2 82 2 656 2 224 2 1216 2 977 2 11 6 332 2 899 6 333 4 1227 2 981 2 1061 4 417 2 748 2 1143 2 24 4 908 4 249 2 25 2 587 2 1238 2 29 4 1072 2 599 2 38 2 43 2 609 2 519 4 181 2 1078 2 431 2 1255 2 695 2 696 2 859 12 862 2 528 4 52 2 529 2 189 2 1011 2 793 4 125 2 1019 6 1020 2 286 2 131 2 1024 2 464 4 381 2 300 4 1108 2 633 8 385 2 
718 6 719 2 888 6 221 2 814 2 556 2 82 2 656 2 224 2 1216 2 977 2 11 8 332 2 899 10 333 4 1227 2 981 2 1061 4 417 2 748 2 1143 2 24 8 908 4 249 2 25 2 587 2 1238 2 29 4 1072 2 599 2 38 2 43 2 609 2 519 4 181 2 1078 2 431 2 1255 2 695 2 858 2 696 2 859 12 862 2 528 4 52 2 529 2 189 2 1011 2 793 4 125 2 1019 8 1020 2 286 2 131 2 1024 2 464 4 381 2 300 4 1108 2 633 8 385 2 
718 6 719 2 888 6 221 2 814 2 556 2 82 2 656 2 224 2 1216 2 977 2 11 6 332 2 899 10 333 4 1227 2 981 2 1061 4 417 2 748 2 1143 2 24 8 908 4 249 2 25 2 587 2 1238 2 29 4 1072 2 599 2 38 2 43 2 609 2 519 4 181 2 1078 2 431 2 1255 2 695 2 696 2 859 12 862 2 528 4 52 2 529 2 189 2 1011 2 793 4 125 2 1019 6 1020 2 286 2 131 2 1024 2 464 4 381 2 300 4 1108 2 633 8 385 2 
317 4 318 6 656 2 322 2 7 6 977 2 11 8 13 1 332 2 333 4 981 2 675 2 25 2 29 8 677 2 30 2 347 6 31 2 38 2 350 2 681 4 43 2 998 2 47 1 362 2 695 4 696 2 52 2 368 2 1011 2 371 12 1019 12 1020 2 1021 7 1024 2 1026 2 68 2 707 2 710 6 381 2 69 4 385 2 714 2 715 1 388 2 718 4 719 4 394 6 75 2 78 6 82 2 726 7 729 1 1052 6 408 6 86 2 741 2 1061 4 417 2 748 2 759 2 97 2 1068 1 760 2 761 2 762 2 1072 2 108 4 776 2 1078 2 112 6 431 2 789 2 443 2 444 4 793 6 125 2 1096 2 453 6 131 2 464 6 1105 6 1108 2 802 2 806 2 1114 2 814 2 1124 2 816 2 1136 2 823 6 1137 2 491 2 497 2 840 2 1148 2 1151 2 168 1 848 2 519 4 179 2 181 2 520 6 522 6 858 4 859 46 1164 2 861 2 523 2 186 2 528 4 526 8 862 2 529 2 189 4 1176 4 1181 4 1183 6 1190 2 1195 6 883 2 888 24 221 4 1209 2 892 2 556 2 224 2 225 6 1216 2 898 10 899 2 1227 2 241 4 1228 6 1229 2 573 2 1234 8 908 4 249 2 1238 4 912 2 1243 2 595 2 597 1 599 2 921 2 259 2 609 2 1255 2 615 2 1263 1 940 2 286 2 942 2 291 2 299 2 300 4 633 2 306 6 1279 1 
317 4 318 6 814 2 1124 2 322 2 656 2 816 2 7 6 1136 2 823 6 977 2 11 8 491 2 1137 2 332 2 333 4 497 2 981 2 1143 4 675 2 840 2 25 2 677 2 29 8 347 6 1148 2 30 2 31 2 1151 2 350 2 38 2 681 8 848 2 43 2 179 2 519 4 181 2 998 2 520 6 522 6 362 2 695 4 1164 2 859 48 696 2 861 2 186 2 523 2 862 2 526 8 528 4 52 2 529 2 189 4 368 2 1011 2 371 12 1176 4 1019 12 1020 2 1181 4 1183 6 1024 2 205 2 1026 2 707 4 68 2 710 6 69 4 381 2 1190 2 385 2 1195 6 714 2 388 2 883 2 718 8 394 6 719 4 75 2 888 26 78 6 221 4 1209 2 556 2 892 4 82 2 224 2 561 2 225 6 1216 2 1052 6 408 6 86 2 898 10 899 2 241 8 1227 2 741 2 1228 6 1229 2 1061 4 573 2 1234 8 417 2 748 2 908 4 249 2 1238 4 759 2 97 2 760 2 912 2 761 2 1243 2 595 4 762 2 1072 2 599 2 921 2 259 2 108 4 609 2 776 2 112 6 1078 2 431 2 1255 2 615 2 789 2 443 2 444 4 793 6 125 2 1096 2 940 2 453 6 286 2 942 2 131 2 291 2 464 6 629 2 1105 6 1108 2 300 4 299 2 633 6 802 2 306 6 806 2 1114 2 
317 4 318 6 814 2 1124 2 322 2 656 2 816 2 7 6 1136 2 823 6 977 2 11 8 491 2 1137 2 332 2 333 4 497 2 981 2 1143 4 24 4 675 2 840 2 25 2 677 2 29 8 347 6 1148 2 30 2 31 2 1151 2 350 2 38 2 681 8 848 2 43 2 179 2 519 4 181 2 998 2 520 6 522 6 362 2 695 4 1164 2 859 48 696 2 861 2 186 2 523 2 862 2 526 8 528 4 52 2 529 2 189 4 368 2 1011 2 371 12 1176 4 1019 12 1020 2 1181 4 1183 6 1024 2 205 2 1026 2 707 4 68 2 710 6 69 4 381 2 1190 2 385 2 1195 6 714 2 388 2 883 2 718 8 394 6 719 4 75 2 888 26 78 6 221 4 1209 2 556 2 892 4 82 2 224 2 561 2 225 6 1216 2 1052 6 408 6 86 2 898 10 899 6 241 8 1227 2 741 2 1228 6 1229 2 1061 4 573 2 1234 8 417 2 748 2 908 4 249 2 1238 4 759 2 97 2 760 2 912 2 761 2 1243 2 595 4 762 2 1072 2 599 2 921 2 259 2 108 4 609 2 776 2 112 6 1078 2 431 2 1255 2 615 2 789 2 443 2 444 4 793 6 125 2 1096 2 940 2 453 6 286 2 942 2 131 2 291 2 464 6 629 2 1105 6 1108 2 300 4 299 2 633 6 802 2 306 6 806 2 1114 2 
642 6 317 4 318 6 322 2 656 2 973 2 7 12 977 2 11 10 332 2 333 4 981 2 24 4 675 2 25 2 29 8 677 2 30 2 347 6 31 2 990 2 38 2 350 2 681 10 993 6 689 6 43 2 998 2 362 2 695 4 696 2 52 2 368 2 1007 6 369 6 1011 2 371 10 1019 16 1020 2 1024 2 1026 2 68 2 707 4 710 12 381 2 1030 2 69 4 385 2 714 2 388 2 718 10 719 4 394 6 75 2 78 6 82 2 1052 8 408 12 86 2 741 2 1061 4 417 2 748 2 759 2 97 2 760 2 761 2 762 2 1072 2 108 4 776 2 1078 2 112 12 431 2 432 2 116 6 789 2 440 2 443 2 444 4 793 6 125 2 1096 2 453 8 131 2 461 2 464 6 1105 12 1108 2 802 2 806 2 1114 2 814 2 1124 4 816 2 1136 2 823 6 1137 2 491 2 497 4 1143 4 840 2 1148 2 1151 2 848 2 519 4 179 2 181 2 520 12 522 6 858 2 859 52 1164 2 861 4 523 2 186 2 862 2 528 4 526 12 529 2 189 4 1176 6 865 2 1181 4 1183 6 205 2 1185 6 208 6 1190 4 1195 6 883 2 888 24 221 4 1209 2 892 4 556 2 224 2 561 2 225 6 1216 2 230 6 898 8 899 6 1227 2 241 10 1228 6 1229 4 1234 8 908 4 249 2 1238 4 912 2 1243 2 595 4 599 2 601 2 921 2 259 2 609 2 1255 2 614 2 615 2 940 2 286 2 942 2 291 2 629 2 299 2 300 4 633 6 306 6 
718 6 43 2 519 2 609 2 181 2 1078 2 656 2 1255 2 82 2 859 4 696 2 528 4 52 2 977 2 11 6 899 4 332 2 1227 2 333 4 125 2 981 2 1019 4 286 2 1143 2 1024 2 908 2 24 4 464 2 249 2 25 2 1238 2 1108 2 300 2 633 6 29 2 
317 4 968 2 814 2 1124 3 656 2 1136 2 977 2 11 6 1137 2 332 2 333 4 981 2 671 2 1143 2 986 2 25 2 1144 3 29 2 30 2 1148 2 31 2 38 2 43 2 519 2 179 2 181 2 362 2 859 28 696 2 528 4 526 8 52 2 529 2 368 2 370 2 371 4 1176 4 1019 4 1020 2 1181 2 1024 2 1026 2 68 2 381 2 1190 3 385 2 1194 2 1033 2 388 2 718 6 719 4 888 24 221 4 1209 2 82 2 225 6 1216 2 1052 6 565 2 898 2 899 2 741 2 1227 2 1229 3 573 2 908 2 249 2 1238 2 759 2 1243 2 762 2 599 2 108 4 609 2 1078 2 1255 2 619 2 793 6 125 2 453 6 286 2 291 2 464 2 300 2 299 2 1108 2 633 6 802 2 1112 2 
950 2 52 2 656 2 
950 2 52 2 656 2 
317 4 814 2 1124 2 656 2 1136 2 11 10 1137 2 333 4 496 2 1143 4 24 2 29 4 30 2 1148 2 31 2 679 2 989 2 38 2 681 4 40 2 43 2 179 2 519 2 362 2 858 2 859 24 696 2 365 2 1004 2 526 2 528 4 52 2 529 2 368 2 371 4 1012 2 1019 10 1020 2 1181 4 376 2 1024 2 1026 2 707 4 68 2 69 2 70 2 385 2 388 2 718 8 719 4 888 16 221 4 892 4 223 4 225 6 1216 2 1052 2 1057 2 898 2 899 2 241 4 741 2 1228 2 908 2 1238 4 759 2 1243 2 595 4 762 2 599 2 921 2 108 4 609 2 444 2 793 6 125 2 127 2 453 2 291 2 944 2 464 2 299 2 300 2 633 6 802 2 805 2 
371 2 934 2 1012 2 898 2 1228 2 888 2 17 2 127 2 832 2 776 2 376 2 556 2 322 2 69 2 859 4 529 2 89 2 
317 4 814 2 1124 4 656 2 1136 2 11 10 1137 2 333 4 496 2 1143 4 24 2 29 4 30 2 1148 2 31 2 679 2 989 2 38 2 681 4 40 4 43 2 179 2 519 2 362 2 858 2 859 20 696 2 365 2 1004 2 526 2 528 4 52 2 529 2 368 2 371 2 1012 2 1019 10 1020 2 1181 4 1024 2 1026 2 707 4 68 2 70 2 385 2 388 2 718 8 719 4 888 14 221 4 892 4 223 4 225 6 1216 2 1052 2 899 2 241 4 741 2 908 2 1238 4 759 2 1243 2 595 4 762 2 599 2 921 2 108 4 609 2 444 2 1265 2 793 6 125 2 127 2 453 2 291 2 944 2 464 2 299 2 300 2 633 6 802 2 805 2 954 2 
317 4 814 2 1124 2 656 2 1136 2 11 10 1137 2 333 4 496 2 1143 4 24 2 29 4 30 2 1148 2 31 2 679 2 989 2 38 2 681 4 40 2 43 2 179 2 519 2 362 2 858 2 859 24 696 2 365 2 1004 2 526 2 528 4 52 2 529 2 368 2 371 4 1012 2 1019 10 1020 2 1181 4 376 2 1024 2 1026 2 707 4 68 2 69 2 70 2 385 2 388 2 718 8 719 4 888 16 221 4 892 4 223 4 225 6 1216 2 1052 2 1057 1 898 2 899 2 241 4 741 2 1228 2 908 2 1238 4 759 2 1243 2 595 4 762 2 599 2 921 2 108 4 609 2 444 2 793 6 125 2 127 2 453 2 291 2 944 2 464 2 299 2 300 2 633 6 802 2 805 2 
645 2 646 4 317 4 814 2 1124 2 657 2 1137 2 983 1 340 2 30 2 1148 2 31 2 1150 4 1151 2 169 6 38 2 686 2 178 2 179 2 997 2 362 2 859 26 1169 2 523 2 526 8 188 2 529 2 1008 2 368 2 371 2 1176 4 1020 2 1181 2 203 2 1026 2 68 2 1186 2 207 2 1190 2 385 2 388 2 1202 2 719 4 1203 2 888 20 722 2 221 4 1209 2 893 2 225 6 1216 2 1052 6 732 2 239 4 1224 2 741 2 1229 2 247 2 578 2 585 2 910 2 759 2 758 2 98 2 1243 2 253 2 762 2 599 2 600 2 602 2 108 4 263 5 265 2 266 2 1077 2 781 2 1257 2 119 2 786 2 792 2 793 6 1096 2 453 6 942 2 289 2 291 2 299 2 1274 2 802 2 806 2 1114 2 
603 2 888 2 721 3 262 2 1209 2 1124 3 859 2 1052 2 861 6 526 2 236 2 1221 2 410 2 1173 4 1223 2 1176 2 64 2 1229 3 795 2 744 2 453 2 380 2 1190 3 882 2 
603 2 888 2 721 2 262 2 1209 2 1124 2 859 2 1052 2 861 6 526 2 236 2 1221 2 410 2 1173 4 1223 2 1176 2 64 2 1229 2 795 2 744 2 453 2 380 2 1190 2 882 2 
603 2 888 2 721 2 262 2 1209 2 1124 2 859 2 1052 2 861 6 526 2 236 2 1221 2 410 2 1173 4 1223 2 1176 2 64 2 1229 2 795 2 744 2 453 2 380 2 1190 2 882 2 
962 2 888 4 1039 2 645 2 889 3 551 2 1124 3 1209 2 657 2 578 2 579 4 339 3 585 2 1240 3 1150 4 102 2 991 4 922 4 515 4 263 6 184 2 857 4 784 2 859 10 273 2 526 2 188 2 1008 2 790 2 933 2 281 2 374 6 64 2 292 2 1102 2 1104 4 1190 3 713 2 1274 2 804 2 
962 2 888 4 1039 2 645 2 889 2 551 2 1124 2 1209 2 657 2 667 2 578 2 579 4 339 2 585 2 1240 2 1150 4 102 2 991 4 922 4 515 4 263 4 1162 2 184 2 857 4 784 2 859 10 273 2 526 2 188 2 1008 2 790 2 933 2 281 2 374 6 64 2 456 2 292 2 1102 2 1104 4 1190 2 713 2 1274 2 804 2 
962 2 888 4 1039 2 645 2 889 2 551 2 1124 2 1209 2 657 2 667 2 578 2 579 4 339 2 585 2 1240 2 1150 4 102 2 991 4 922 4 515 4 263 4 1162 2 184 2 857 4 784 2 859 10 273 2 526 2 188 2 1008 2 790 2 933 2 281 2 374 6 64 2 456 2 292 2 1102 2 1104 4 1190 2 713 2 1274 2 804 2 
962 2 888 4 1039 2 645 2 889 2 551 2 1124 2 1209 2 657 2 667 2 578 2 579 4 339 2 585 2 1240 2 1150 4 102 2 991 4 922 4 515 4 263 4 1162 2 184 2 857 4 784 2 859 10 273 2 526 2 188 2 1008 2 790 2 933 2 281 2 374 6 64 2 456 2 292 2 1102 2 1104 4 1190 2 713 2 1274 2 804 2 
962 2 888 4 1039 2 645 2 889 2 551 2 1124 2 1209 2 657 2 667 4 578 2 579 4 339 2 585 2 1240 2 1150 4 102 2 991 4 922 4 515 4 263 4 1162 4 184 2 857 4 784 2 859 10 273 2 526 2 188 2 1008 2 790 2 933 2 281 2 374 6 64 2 456 4 292 2 1102 2 1104 4 1190 2 713 2 1274 2 804 2 
426 2 724 2 881 2 868 2 568 2 428 2 
1126 2 206 2 503 2 517 2 568 2 1027 2 897 2 
961 1 888 8 814 2 652 2 1047 2 520 2 269 2 926 1 859 10 481 2 366 2 1261 2 124 2 1059 2 980 2 1230 2 797 2 23 2 294 2 502 2 161 1 842 2 138 1 807 2 716 2 763 1 
991 4 1118 4 888 6 645 6 1251 2 263 16 182 2 657 6 1162 2 184 2 859 6 659 2 234 2 188 6 1008 6 239 4 1224 2 667 2 739 2 456 5 577 2 289 2 578 6 207 2 584 2 585 6 1274 6 1150 12 253 2 958 2 
685 2 888 1 515 2 94 2 1042 2 984 2 143 2 1210 2 752 2 579 2 500 4 857 2 213 2 909 2 49 6 859 1 951 1 146 2 
685 4 515 2 94 2 1042 2 984 4 143 2 1210 2 752 2 579 2 500 4 857 2 213 4 909 2 49 6 146 2 
685 8 888 1 515 2 94 6 1042 8 984 8 143 2 1210 2 752 2 579 2 500 4 857 2 213 8 909 2 49 10 859 1 951 1 146 2 
685 2 515 2 984 2 143 2 1210 2 752 2 579 2 500 2 857 2 213 2 909 2 49 2 146 2 
317 8 666 2 15 2 987 2 22 1 681 4 351 2 1157 2 850 2 852 2 362 4 859 20 863 2 1170 2 1006 1 372 2 199 2 378 4 1026 4 68 4 215 4 548 2 888 20 1206 2 555 2 225 14 562 2 406 1 233 2 1058 1 414 2 741 4 901 2 746 2 420 2 589 2 923 2 108 6 616 2 274 2 791 2 1268 2 945 4 299 4 948 4 136 1 638 1 
391 2 310 2 313 2 810 2 888 44 317 20 560 2 894 2 476 2 323 2 225 42 1050 2 405 2 818 2 1217 2 562 2 1053 2 660 2 1056 2 490 2 1057 2 738 2 91 4 741 2 15 4 156 2 415 2 244 2 1063 2 1142 2 833 2 246 2 22 2 504 2 586 2 26 2 757 2 1145 2 589 2 843 2 33 4 592 4 1244 2 34 4 103 6 104 2 916 4 681 38 1249 2 512 2 351 2 1073 2 605 2 108 20 849 2 356 2 1157 2 850 2 264 2 778 4 782 2 1000 2 434 4 363 2 613 2 1165 2 859 46 187 2 1085 2 863 2 275 2 618 2 791 2 533 2 935 2 61 2 450 2 943 2 1268 2 1099 2 1026 2 945 6 542 2 209 6 299 2 465 2 302 2 1277 2 957 2 1116 2 
888 26 317 10 1206 2 555 2 225 20 476 2 562 2 233 2 1219 2 666 2 414 4 979 2 741 2 15 2 156 2 833 2 746 2 22 2 420 2 421 2 586 2 26 2 423 2 592 2 1244 2 916 2 681 14 683 4 351 2 1073 2 108 8 1157 2 850 2 852 2 778 2 268 4 362 4 363 2 859 26 863 2 274 2 275 2 531 2 791 2 191 2 372 2 199 2 702 2 1268 2 378 6 1026 2 68 4 945 6 299 2 948 6 215 2 468 4 
548 10 313 2 888 26 317 14 651 4 225 38 476 2 1050 4 817 2 818 4 406 2 562 2 1217 2 9 2 1057 2 1058 6 413 2 741 2 15 2 901 10 1142 2 575 2 749 2 987 2 22 2 581 2 504 2 592 6 1244 2 103 6 916 6 681 14 351 2 512 4 1073 2 605 2 108 14 1157 2 850 2 778 6 362 10 859 28 437 2 616 2 863 2 275 2 1170 2 1006 2 791 2 935 2 450 4 452 2 943 4 1268 2 1026 2 68 10 945 8 542 4 299 2 1109 4 638 2 1116 2 
148 2 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 
676 1 76 1 831 1 1055 1 1100 1 558 1 

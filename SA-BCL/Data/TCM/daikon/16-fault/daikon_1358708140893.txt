#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 200 553 1019 860 334 455 502 748 766 514 669 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (178,814) (91,383) (91,383) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (827,900) 369 378 301 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 462 611 452 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 462 611 452 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (827,900) (827,900) 897 462 611 452 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_29()Z
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:concat([I[I)[I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3R_57()Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_134()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3_5()Z
daikon.PptSlice1:arity()I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3_4()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_115()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_2_18(I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_58()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3_21()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 23053 | = null
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3R_62()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:backup(I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:readChar()C
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_118()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_102()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression; | RETURN | 57109 | return null
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_70()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_47()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:hashCode()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_109()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:memberOf(J[J)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | RETURN | 100880 | return null
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_99()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_103()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eq(FF)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
daikon.Quant:lte(II)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3R_68()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:eq(II)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:pow_fast(II)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3_10()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:eq(DD)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:union([I[I)[I
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:sameLength([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_124()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:isPseudoArray()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:ne(II)Z
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.ProglangType:isArray()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfo:relate_var()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice0:arity()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern([D)[D
utilMDE.Intern:intern([J)[J
daikon.Quant:gt(II)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.ModBitTracker:num_samples()I
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:gcd(II)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | RETURN | 55834 | return null
jtb.JavaParser:jj_3R_120()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_3_18()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:jj_3_1()Z
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_3R_53()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:setDiff([I[I)[I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_114()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_105()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_2_10(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.Invariant:justified()Z
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6772 | = null
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_27()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_15()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_135()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf([B[I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_76()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_96()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_63()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvMap:InvMap()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:subsetOf([F[D)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:memberOf(F[F)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V | STATEMENT | 564 | stmt -> ;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_49()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_17()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:min([I)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_2_21(I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_77()Z
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ModBitTracker:num_vars()I
daikon.diff.Node:Node()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:jj_3_3()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:lt(II)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:jj_3R_121()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_85()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:eltsGT([II)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_5(I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:num_sets()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ProglangType:isScalar()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3_35()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
791 2 900 2 32 2 457 2 418 2 827 2 34 2 784 4 99 2 
63 2 752 6 116 2 947 2 466 6 396 2 28 2 995 2 1003 2 442 6 130 2 
251 2 900 2 728 6 428 6 827 2 382 4 1005 4 81 2 232 6 597 2 319 2 686 2 215 6 
474 29 194 16 778 2 506 4 841 4 330 2 935 10 517 6 594 2 105 16 719 8 848 2 363 10 546 6 602 2 900 6 979 10 827 6 804 8 828 4 459 8 672 26 577 4 122 16 809 10 685 8 920 12 467 2 89 10 501 2 
580 4 973 6 
356 2 
778 2 133 2 540 2 296 2 213 2 900 4 305 2 157 2 902 2 158 4 730 2 731 2 904 2 221 4 984 2 495 2 76 2 734 2 77 2 806 2 230 2 739 4 499 4 376 2 504 2 509 2 565 2 238 2 239 2 749 2 99 2 1008 2 389 2 394 2 339 2 109 2 110 2 454 2 760 2 827 4 636 2 261 2 264 2 351 2 
194 32 474 54 134 6 841 2 168 6 935 6 206 6 517 4 594 2 105 32 386 4 660 2 363 16 545 4 546 4 366 2 668 4 66 4 900 4 979 16 825 4 827 4 345 2 804 18 672 48 161 6 676 2 371 8 350 6 122 32 809 16 413 4 685 6 836 2 920 22 89 16 742 6 888 2 922 4 
585 2 540 2 831 2 
926 2 132 2 781 2 511 10 328 22 264 2 434 2 293 2 352 2 541 2 147 2 741 2 364 2 365 2 
474 6 194 2 841 2 98 2 786 2 1001 2 935 4 517 2 105 2 363 2 979 2 804 2 732 2 672 4 677 2 987 2 122 2 809 2 615 2 920 2 126 2 89 2 961 2 
194 8 474 16 506 2 979 4 825 4 672 12 161 6 386 4 209 2 105 8 350 6 122 8 809 4 363 4 740 2 920 4 89 4 
272 4 585 2 92 2 277 2 239 2 929 2 790 4 568 10 384 2 291 2 695 4 540 8 598 10 697 4 176 2 894 4 339 4 753 2 942 2 487 2 725 2 758 2 11 2 727 62 402 4 801 2 901 2 223 2 608 2 907 4 831 6 988 2 887 4 465 14 739 4 271 2 469 4 235 4 776 2 997 4 
95 2 419 2 783 2 356 2 486 2 346 2 13 2 372 2 582 2 375 2 
532 2 780 1 534 2 535 2 282 2 283 2 138 2 287 2 658 2 289 2 789 12 292 3 423 4 5 2 8 2 152 2 9 3 798 2 670 2 900 32 899 2 429 2 155 2 430 1 903 2 307 2 310 2 16 1 805 1 313 24 163 8 20 2 23 1 439 32 165 8 164 2 320 2 684 2 813 2 30 32 31 2 443 2 817 2 167 2 32 2 928 6 170 1 172 2 693 16 820 6 173 2 571 4 696 2 698 2 44 2 700 1 824 2 180 1 181 1 456 2 702 2 827 34 185 2 347 2 703 2 187 2 707 4 464 3 54 2 56 2 709 2 468 3 838 2 193 4 962 2 475 2 478 3 966 4 586 1 61 2 198 2 355 2 971 1 846 1 592 2 207 4 593 2 361 2 722 2 211 2 212 2 600 16 850 2 851 2 217 1 368 2 218 2 74 2 494 4 609 5 224 2 737 2 861 2 863 2 614 1 498 16 744 2 617 2 745 2 377 8 513 3 515 16 624 3 1002 2 243 2 627 2 872 2 106 2 873 2 391 3 1010 2 521 6 755 2 522 2 111 2 757 2 399 2 114 3 1014 2 400 2 878 1 525 2 880 2 255 2 257 2 763 2 765 24 405 2 883 1 406 3 407 3 644 2 886 3 773 4 530 6 128 2 131 2 
827 2 767 2 
884 2 827 4 520 2 
46 2 
274 2 275 2 278 48 281 2 538 48 284 2 285 2 1 2 788 2 787 8 290 2 2 38 3 2 793 6 794 6 295 2 543 48 298 2 796 2 544 2 300 2 797 2 303 28 548 2 550 2 800 2 12 4 14 2 314 2 312 2 553 2 316 22 21 4 808 146 554 2 810 2 812 2 559 2 560 4 27 2 324 2 815 2 562 2 816 4 561 2 33 2 35 2 334 2 823 2 338 8 340 2 43 2 47 2 49 2 574 2 343 2 51 2 829 48 576 4 578 4 832 26 579 8 834 2 581 2 837 36 584 14 60 2 844 2 589 2 847 38 591 2 360 2 595 2 64 2 596 2 849 4 599 4 603 2 69 4 367 2 71 2 73 2 855 2 72 2 856 2 857 2 79 2 860 2 80 4 612 48 86 48 85 2 87 10 373 4 865 2 374 6 90 2 618 4 866 2 93 2 869 2 868 2 96 48 380 2 621 24 622 4 623 2 100 4 102 146 625 2 104 10 388 8 874 2 108 146 395 6 875 2 115 8 118 2 632 2 633 2 634 2 635 2 882 22 638 2 641 2 120 2 121 2 885 4 410 2 411 2 412 4 646 2 647 2 648 20 649 14 651 2 416 2 417 18 652 2 135 2 654 2 656 2 657 2 139 2 891 2 141 2 144 48 662 2 146 2 151 48 150 2 895 4 425 2 896 18 669 2 432 2 674 20 673 26 908 2 910 4 678 2 679 2 912 48 914 2 682 2 916 2 440 4 918 2 683 2 687 2 688 4 923 2 924 2 925 2 446 2 932 4 692 48 169 2 448 4 171 2 449 4 933 2 694 20 175 4 453 216 938 2 699 2 179 8 455 2 182 2 701 2 458 2 460 2 704 2 188 2 706 16 955 2 708 2 191 8 710 2 712 6 473 2 964 2 965 8 713 4 197 2 967 4 714 14 200 10 972 2 201 4 717 4 204 2 483 2 210 48 721 2 720 2 724 2 488 2 490 48 981 2 729 4 983 2 219 2 986 14 736 4 227 2 226 2 993 2 992 8 500 36 994 8 233 4 502 2 998 2 236 2 508 36 747 4 748 2 512 2 514 2 750 2 1004 2 1007 2 518 6 519 2 1011 16 756 22 1012 2 1015 2 762 8 527 8 256 4 528 2 764 4 766 2 258 2 259 2 770 4 267 2 771 2 1018 2 270 2 775 2 1019 2 531 4 
451 2 379 2 491 1 269 2 
379 2 890 2 
37 2 379 2 540 2 607 2 828 2 398 2 205 2 
317 2 379 2 398 2 
379 2 398 2 322 2 
497 2 451 2 604 2 
379 2 398 2 
497 2 949 2 
379 2 542 2 
497 2 451 2 533 2 
822 2 451 2 248 2 
451 2 547 2 263 2 
451 2 370 2 583 2 
451 2 950 2 963 2 
497 2 879 2 
379 2 119 2 
409 2 248 2 
547 2 934 2 
309 2 370 2 
950 2 26 2 
497 2 435 2 
392 2 950 2 
853 2 370 2 
195 2 547 2 
248 2 25 2 
497 2 974 2 451 2 533 2 
497 2 643 2 974 2 451 2 533 2 
497 2 78 2 451 2 
497 2 451 2 231 2 
630 2 159 2 845 2 570 2 
540 2 607 2 6 2 821 2 
37 2 540 2 431 2 607 2 6 2 821 2 
626 2 379 2 540 2 607 2 828 2 398 2 
454 2 103 2 
156 2 540 2 607 2 828 2 
969 2 370 2 
950 2 858 2 
839 2 248 2 
613 2 547 2 
196 2 950 2 547 2 
950 2 547 2 426 2 
88 2 547 2 950 2 
479 2 547 2 950 2 
137 6 540 2 45 2 799 2 980 2 607 2 353 6 996 2 
497 2 859 2 
427 4 601 2 524 2 826 2 344 2 276 2 404 2 328 6 348 2 830 2 349 4 142 2 990 2 975 2 189 2 919 2 754 2 665 2 
451 2 735 2 
850 2 
532 2 535 2 534 2 789 8 423 4 297 2 8 2 898 2 900 26 429 2 307 2 162 2 807 2 20 2 439 4 684 2 321 2 30 6 167 2 32 2 689 2 928 4 170 2 820 2 36 2 173 2 571 2 698 2 824 2 456 2 702 2 827 26 185 2 184 2 703 2 187 2 707 2 54 2 833 2 835 2 192 2 838 2 193 4 966 2 355 2 207 4 358 2 593 2 217 2 606 4 368 2 218 2 224 2 737 2 82 2 498 6 377 2 101 4 1002 6 106 2 627 2 107 2 873 2 1010 2 521 2 522 2 255 2 880 2 644 2 123 2 773 4 530 6 128 4 777 2 
532 2 535 2 534 2 789 8 423 4 297 2 8 2 898 2 900 26 429 2 307 2 807 2 20 2 439 4 684 2 321 2 30 6 167 2 32 2 689 2 928 6 170 2 820 2 36 2 173 2 571 2 939 2 698 2 824 2 48 2 456 2 702 2 827 26 185 2 703 2 187 2 707 2 54 2 833 2 709 2 192 2 838 2 193 4 966 2 355 2 207 4 358 2 593 2 851 2 217 2 606 4 368 2 218 2 224 2 225 2 737 2 82 2 498 6 377 2 101 4 1002 6 106 2 627 2 107 2 873 2 1010 2 521 2 522 2 880 2 255 2 405 2 644 2 123 2 773 4 530 6 128 4 777 2 
671 2 
523 2 726 2 
265 2 91 2 336 2 803 2 420 2 723 2 931 2 178 2 383 2 
265 2 91 2 336 2 803 2 420 2 723 2 931 2 178 2 383 2 
91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 936 4 22 2 336 2 124 2 977 4 393 2 723 2 57 2 178 2 774 4 
91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 936 4 22 2 336 2 124 2 977 4 393 2 723 2 57 2 178 2 774 4 
91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 936 4 22 2 336 2 124 2 977 4 393 2 723 2 57 2 178 2 774 4 
91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 936 4 22 2 336 2 124 2 977 4 393 2 723 2 57 2 178 2 774 4 
68 2 91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 22 2 336 2 124 2 977 2 723 2 393 2 57 2 178 2 
68 2 91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 22 2 336 2 124 2 977 2 723 2 393 2 57 2 178 2 
68 2 91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 22 2 336 2 124 2 977 2 723 2 393 2 57 2 178 2 
68 2 91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 22 2 336 2 124 2 977 2 723 2 393 2 57 2 178 2 
91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 22 2 336 2 124 2 977 2 723 2 393 2 57 2 178 2 
532 2 535 2 420 2 423 4 659 2 8 2 900 24 803 2 307 2 19 2 913 2 20 2 22 2 439 3 684 2 30 8 167 2 32 2 928 6 931 2 820 3 36 2 936 2 696 2 336 2 698 4 178 2 824 2 827 24 703 2 187 2 956 2 54 2 56 2 57 2 354 2 838 2 193 4 587 2 355 2 207 4 358 2 977 2 723 2 850 2 851 2 606 4 368 2 218 2 75 2 737 2 498 6 616 3 91 2 746 2 383 2 1002 6 106 2 1010 2 521 3 393 2 755 2 629 2 253 2 880 2 255 2 405 2 529 2 265 2 644 2 266 2 123 2 124 2 773 4 530 6 
91 2 587 2 803 2 420 2 931 2 75 2 383 2 529 2 913 2 265 2 936 4 22 2 336 2 124 2 977 4 393 2 723 2 57 2 178 2 774 4 
91 2 587 2 803 2 420 2 931 2 75 2 202 2 383 2 529 2 628 2 913 2 265 2 936 4 22 2 336 2 124 2 977 4 393 2 723 2 57 2 178 2 774 4 
913 2 539 2 240 2 
913 2 539 2 240 2 
779 2 532 2 535 2 420 2 0 2 789 4 539 2 423 4 424 2 664 2 8 2 900 16 803 4 307 2 17 2 807 4 915 2 20 2 913 4 439 2 684 2 558 2 28 4 30 2 442 12 167 2 32 2 327 2 927 2 928 6 691 2 931 2 36 6 333 2 569 4 936 6 571 4 336 2 40 2 698 4 178 2 824 2 573 2 947 4 183 2 827 24 953 2 705 2 187 2 956 2 707 4 54 2 466 16 711 2 838 2 470 2 193 4 966 4 355 2 207 4 62 2 593 4 358 2 65 2 977 6 851 2 368 2 218 2 854 2 493 2 610 2 737 2 989 2 738 4 498 2 995 4 94 4 240 6 1002 2 1003 4 752 12 106 2 1009 2 1010 2 396 4 250 2 876 2 877 2 759 2 526 4 403 2 254 4 880 2 255 2 405 2 644 2 123 2 773 4 530 6 127 4 774 4 1020 2 1021 2 130 4 
341 2 477 2 900 2 779 2 535 2 827 4 905 2 516 2 675 2 956 2 698 2 558 2 711 2 664 2 113 2 726 2 1021 2 
779 2 532 2 535 2 0 2 420 2 789 4 539 2 423 4 424 2 8 2 900 16 803 4 306 2 307 2 17 2 807 4 915 2 20 2 913 4 439 4 684 2 558 2 28 4 30 2 814 2 442 12 167 2 32 2 327 4 927 2 928 6 931 2 36 6 333 2 569 4 936 6 571 4 336 2 40 4 698 2 178 2 824 2 573 2 947 4 183 2 827 24 187 2 707 4 55 2 54 2 466 16 711 2 838 2 470 2 193 4 966 4 968 2 970 2 355 2 207 4 62 2 593 4 358 2 65 2 977 6 851 2 368 2 218 2 854 2 493 2 610 2 737 2 989 2 738 4 498 2 995 4 94 4 240 6 1002 2 1003 4 752 12 106 2 1010 2 396 4 250 2 876 2 877 2 759 2 526 4 403 2 254 4 880 2 255 2 881 2 405 2 644 2 123 2 773 4 530 6 127 4 774 4 1020 2 1021 2 130 4 
779 2 532 2 535 2 420 2 0 2 789 4 539 2 423 4 424 2 664 2 8 2 900 16 802 2 803 4 307 2 17 2 807 4 915 2 20 2 913 4 439 2 684 2 558 2 28 4 30 2 442 12 167 2 32 2 327 2 927 2 928 6 931 2 36 6 333 2 569 4 936 6 571 4 336 2 40 4 698 4 178 2 824 2 573 2 947 4 183 2 827 24 187 2 956 2 707 4 54 2 466 16 711 2 838 2 470 2 472 2 193 4 966 4 968 2 355 2 207 4 62 2 593 4 358 2 65 2 977 6 851 2 368 2 218 2 854 2 493 2 610 2 737 2 989 2 738 4 498 2 995 4 507 2 94 4 97 2 240 6 1002 2 1003 4 752 12 106 2 1010 2 396 4 250 2 876 2 877 2 759 2 526 4 403 2 254 4 880 2 255 2 405 2 644 2 123 2 645 2 773 4 530 6 127 4 774 4 1020 2 1021 2 130 4 
532 2 842 2 535 2 355 2 421 2 207 2 423 4 976 2 8 2 301 2 666 2 851 1 900 16 67 2 218 2 369 2 368 2 222 1 437 2 556 2 498 2 30 2 325 2 378 2 444 2 167 2 32 2 566 2 928 3 1000 2 1002 2 36 2 385 2 106 2 937 1 335 2 245 2 337 2 1010 2 698 2 824 2 112 2 255 2 827 22 880 2 405 1 769 2 187 2 644 2 123 2 54 2 773 4 530 6 838 2 193 2 
381 2 820 3 1002 2 332 2 143 2 521 3 893 2 941 3 10 2 900 2 606 2 605 2 827 2 308 4 260 2 703 2 642 2 439 3 864 1 833 6 498 2 889 2 29 2 30 2 505 2 
381 2 820 2 1002 2 332 2 143 2 521 2 893 2 941 2 10 2 900 2 606 2 605 2 827 2 308 4 260 2 703 2 642 2 439 2 833 6 498 2 889 2 29 2 30 2 505 2 
381 2 820 2 1002 2 332 2 143 2 521 2 893 2 941 2 10 2 900 2 606 2 605 2 827 2 308 4 260 2 703 2 642 2 439 2 833 6 498 2 889 2 29 2 30 2 505 2 
474 6 194 2 564 2 782 2 515 2 450 2 105 2 244 4 145 2 143 2 363 2 42 4 521 3 940 6 546 2 600 2 549 2 304 4 154 4 900 4 979 2 982 2 575 2 827 10 492 2 220 4 672 4 703 2 637 2 906 2 463 3 53 3 122 2 809 2 24 2 439 3 685 4 89 2 471 3 30 2 
474 4 194 2 564 2 782 2 515 2 450 2 594 2 105 2 244 4 145 2 143 2 363 2 42 4 521 2 940 6 546 2 600 2 549 2 304 4 154 4 900 4 979 2 982 2 575 2 827 10 492 2 220 4 804 2 672 4 703 2 637 2 906 2 463 2 53 2 122 2 809 2 24 2 439 2 685 4 920 2 89 2 471 2 30 2 
474 4 194 2 564 2 782 2 515 2 450 2 594 2 105 2 244 4 145 2 143 2 363 2 42 4 521 2 940 6 546 2 600 2 549 2 304 4 154 4 900 4 979 2 982 2 575 2 827 10 492 2 220 4 804 2 672 4 703 2 637 2 906 2 463 2 53 2 122 2 809 2 24 2 439 2 685 4 920 2 89 2 471 2 30 2 
474 4 194 2 564 2 782 2 515 2 450 2 594 2 105 2 244 4 145 2 143 2 363 2 42 4 521 2 940 6 546 2 600 2 549 2 304 4 154 4 900 4 979 2 982 2 575 2 827 10 492 2 220 4 804 2 672 4 703 2 637 2 906 2 463 2 53 2 122 2 809 2 24 2 439 2 685 4 920 2 89 2 471 2 30 2 
474 4 194 2 564 2 782 2 515 2 450 2 594 4 105 2 244 4 145 2 143 2 363 2 42 4 521 2 940 6 546 2 600 2 549 2 304 4 154 4 900 4 979 2 982 2 575 2 827 10 492 2 220 4 804 4 672 4 703 2 637 2 906 2 463 2 53 2 122 2 809 2 24 2 439 2 685 4 920 4 89 2 471 2 30 2 
359 2 948 2 917 2 733 2 242 2 952 2 
82 2 795 2 536 2 733 2 286 2 186 2 945 2 
476 2 999 2 840 2 818 2 510 1 567 2 655 2 930 2 716 2 384 1 4 2 946 1 900 8 901 1 827 10 255 2 50 2 461 1 315 2 954 2 1017 2 83 2 415 2 268 2 557 2 619 2 
474 16 194 6 620 2 870 2 326 2 168 4 105 6 386 2 594 2 1006 2 978 2 363 6 546 2 109 2 489 2 900 6 979 6 827 6 804 2 672 12 985 2 77 2 371 2 350 4 122 6 809 6 685 4 920 3 89 6 922 2 
900 1 304 2 563 2 70 2 827 1 311 1 140 2 262 2 244 2 229 2 84 2 41 2 811 2 485 7 42 2 397 4 667 2 441 2 
304 2 563 2 70 4 140 2 262 2 244 2 229 2 84 2 41 4 811 2 485 6 42 2 397 4 441 2 667 4 
900 1 304 2 563 2 70 8 827 1 311 1 140 2 262 2 244 2 229 6 84 2 41 8 811 2 485 10 42 2 397 4 441 8 667 8 
304 2 563 2 70 2 140 2 262 2 244 2 84 2 41 2 811 2 485 2 42 2 397 2 667 2 
653 2 279 8 280 2 537 2 422 6 288 2 792 16 892 2 661 1 299 2 663 2 302 2 153 2 900 40 15 2 552 2 909 2 18 2 911 2 438 8 555 2 166 2 921 6 323 7 819 10 928 36 331 6 38 2 452 2 39 8 943 2 824 2 944 2 342 2 827 44 462 2 951 4 52 6 959 4 190 2 838 4 193 20 843 2 355 4 481 2 588 2 482 2 203 4 357 2 208 4 207 18 484 2 362 2 214 2 216 2 851 2 852 2 496 2 228 4 611 2 862 4 743 6 867 2 237 2 751 2 387 2 247 2 249 4 252 6 761 2 117 2 631 2 405 2 639 2 408 2 1016 2 414 2 125 2 129 2 650 2 
58 2 653 2 843 2 715 4 199 4 355 2 481 2 136 2 785 2 590 4 207 14 208 2 792 14 148 4 149 2 216 6 851 8 900 26 160 10 680 2 228 2 611 2 436 2 862 6 991 6 318 2 743 2 234 2 503 2 323 2 445 2 819 8 871 10 928 36 447 2 329 2 241 4 174 4 387 2 452 2 390 4 943 2 824 2 249 2 1013 2 944 2 401 4 827 28 405 8 462 2 639 2 951 6 768 2 414 2 957 2 772 2 125 2 959 6 190 2 960 2 838 2 193 14 
273 2 480 2 715 2 199 2 481 2 280 2 355 6 590 2 422 4 357 2 203 2 288 2 208 2 207 16 792 4 718 2 892 2 484 2 362 2 148 2 663 2 214 2 302 2 216 1 851 6 900 34 160 2 18 2 909 2 680 2 228 2 611 2 862 4 991 2 166 2 743 4 323 4 445 1 867 2 819 14 871 2 928 34 329 1 241 2 387 2 38 4 452 2 390 2 246 2 943 2 249 4 824 4 944 2 1013 2 252 4 572 2 761 2 342 2 117 2 827 38 405 6 462 2 639 2 951 4 408 2 1016 2 414 2 957 1 959 4 125 2 190 2 960 2 838 6 193 18 650 2 
59 2 819 2 715 2 843 2 653 2 928 16 355 2 690 2 241 2 207 6 792 8 294 2 452 2 390 2 177 2 943 2 824 2 944 2 897 2 851 6 900 18 551 2 827 18 433 2 462 2 405 6 951 2 640 2 681 2 611 2 862 2 437 2 414 2 959 2 125 2 958 2 838 2 193 6 
7 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 779 214 527 892 49 226 143 529 869 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (125,284) 201 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (125,284) 201 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 650 403 20 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 22 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 75 37 405 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 75 37 405 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_89()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z | ASSIGN | 925 | = null
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:setEqual([I[I)Z | CONDITION | 155109 | if (x) -> if (!x)
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3R_88()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.ArraysMDE:sum([I)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:jj_3_15()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3R_118()Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_50()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:num_samples()I
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:lexLT([I[I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107780 | = null
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_55()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaCharStream:FillBuff()V
daikon.PptSlice1:arity()I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_48()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3_12()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13092 | = null
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_2_13(I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
daikon.Quant:gt(II)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_3R_134()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern:intern([D)[D
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quant:eltwiseLTE([I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.PptSlice0:arity()I
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfo:isPointer()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_4(I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ModBitTracker:split(I)I
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:lexLTE([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndLine()I
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:memberOf(I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_sets()I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:gte(II)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:jj_3R_69()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_1(I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:jj_3R_56()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:relate_var()V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_120()Z
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:intern([J)[J
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:eq(FF)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_10()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I | ASSIGN | 181361 | = null
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakHasherMap:size()I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:isArray()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType; | ASSIGN | 45582 | = null
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.ProglangType:baseIsIntegral()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10682 | = null
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.RootNode:RootNode()V
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE:pow_fast(II)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_4()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaCharStream:backup(I)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:memberOf(S[S)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:baseIsScalar()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptSlice1:num_samples()I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ModBitTracker:num_vars()I
daikon.Quant:subsetOf([J[J)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.Invariant:getConfidence()D
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_162()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:ne(II)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eq(DD)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.Node:Node()V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_163()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.ProglangType:isScalar()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.ArraysMDE:min([I)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3_5()Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V | CONDITION | 919 | if (x) -> if (!x)
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_ntk()I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 2 192 2 629 2 883 2 202 2 963 4 854 2 537 2 30 2 
715 2 943 2 743 2 148 2 1031 2 173 6 698 2 878 6 111 6 465 2 58 2 
918 2 1035 2 904 2 188 6 780 6 273 4 983 4 883 2 30 2 230 2 732 6 81 2 297 6 
815 8 287 6 0 2 816 16 388 30 1033 12 665 6 4 10 289 10 253 8 782 2 740 4 625 2 519 16 106 8 953 10 194 10 138 4 635 16 43 4 874 2 268 2 642 2 964 8 86 10 377 4 883 6 852 26 30 6 773 2 
256 6 541 4 
338 2 
287 2 816 2 388 6 1033 2 289 2 4 2 740 2 519 2 106 2 953 2 194 2 333 2 872 2 635 2 474 2 757 2 86 4 1057 2 852 4 654 2 1026 2 158 2 575 2 
835 4 816 8 388 14 1033 5 289 4 176 2 4 4 532 2 377 2 519 8 821 4 953 4 194 4 852 12 350 6 635 8 309 6 
1029 4 540 2 62 2 38 2 223 2 819 4 518 4 225 14 785 4 952 62 463 2 823 10 14 2 710 4 824 4 197 2 397 2 296 4 711 2 141 4 957 2 402 6 475 2 1048 2 437 4 565 4 300 2 52 2 566 2 604 2 477 2 909 2 937 4 278 10 808 2 611 2 304 4 413 2 284 8 219 4 
458 2 666 2 548 2 630 2 524 2 262 2 338 2 340 2 348 2 762 2 
125 2 1 2 0 2 513 2 664 2 392 4 69 2 134 4 588 2 76 2 824 2 398 2 827 2 399 2 1014 2 829 2 960 2 598 2 838 2 761 2 690 2 611 2 284 2 30 4 766 2 99 2 1036 2 545 2 866 4 295 2 170 2 45 2 497 2 789 2 637 2 369 2 991 2 303 2 883 4 936 2 304 4 940 2 1060 2 998 2 
815 6 287 4 891 6 34 2 816 32 388 54 1033 22 665 4 289 16 4 16 740 2 1005 4 322 2 515 2 519 32 131 2 106 18 821 4 923 6 953 16 194 16 928 6 635 32 471 6 401 4 835 4 146 4 642 2 439 8 86 6 883 4 1056 2 535 4 852 48 350 6 351 4 30 4 309 6 186 2 
402 2 540 2 284 2 
125 2 387 2 528 2 903 22 224 2 684 2 108 10 378 2 552 2 97 2 396 2 897 2 19 2 1046 2 
945 2 127 2 3 24 517 1 393 2 255 6 136 2 670 3 671 2 13 32 956 2 955 3 676 1 264 3 140 1 526 1 265 2 679 1 682 2 149 2 270 2 408 2 844 2 685 2 846 2 410 2 848 2 689 2 28 1 412 2 31 2 30 32 975 2 418 2 33 2 286 1 857 16 976 2 421 2 423 2 35 2 165 2 543 2 427 2 701 5 166 1 707 2 870 4 431 2 985 2 555 2 714 2 46 2 47 2 171 6 436 2 564 2 722 2 442 4 879 16 992 2 725 2 883 34 882 1 445 2 727 2 180 2 57 2 996 4 574 2 1000 8 576 2 185 2 890 2 578 3 65 2 189 2 585 3 895 2 1006 24 70 8 461 3 896 2 327 6 326 1 747 2 1011 1 334 2 332 2 899 3 750 2 901 16 1017 2 1016 3 202 2 204 2 345 2 476 2 755 2 87 3 90 4 91 2 605 2 96 2 763 2 217 2 483 2 769 16 221 4 354 8 615 2 776 2 775 4 617 2 102 3 777 3 778 2 359 2 624 2 783 12 922 2 1039 1 628 2 492 2 1042 2 631 2 495 2 364 2 365 2 636 2 366 4 368 3 639 1 792 32 370 1 1050 2 796 2 798 6 645 2 805 2 939 1 240 2 242 4 810 1 656 2 382 2 124 2 
32 2 
883 2 997 2 
883 4 154 2 139 2 
944 2 251 6 512 6 662 4 389 20 129 8 817 4 818 2 947 4 948 4 6 2 522 20 672 2 825 38 18 2 958 4 830 16 527 2 23 16 267 6 142 2 143 2 961 38 529 2 26 4 841 2 533 38 845 38 280 38 850 10 281 4 536 38 29 22 538 4 696 4 977 2 162 20 164 4 36 2 425 2 981 4 426 2 699 118 428 4 702 8 865 4 868 4 869 2 293 2 553 4 169 38 556 38 44 2 987 4 48 2 298 4 49 2 988 2 719 132 875 2 438 118 721 2 441 4 881 4 571 12 306 8 572 2 307 4 573 4 308 2 450 4 449 4 889 4 577 2 60 4 310 2 451 20 579 2 892 2 314 36 735 2 61 2 581 16 582 2 321 4 583 38 584 26 586 2 589 10 1008 2 591 4 77 4 78 118 466 4 749 4 751 4 337 4 199 4 597 2 83 4 1018 10 759 4 208 2 606 4 211 2 1025 2 609 2 213 22 214 2 215 2 911 2 484 2 914 4 915 38 485 14 1028 4 614 2 618 24 917 4 779 2 358 4 781 4 623 4 226 2 107 4 229 2 232 4 233 4 791 44 114 2 372 2 933 2 799 4 1052 16 238 26 647 4 1055 4 118 2 938 4 503 2 241 2 123 2 811 4 814 38 243 10 507 14 1061 16 657 26 385 8 248 4 
867 2 887 2 856 1 500 2 
867 2 156 2 
201 2 539 2 867 2 284 2 66 2 138 2 346 2 
539 2 24 2 
539 2 867 2 464 2 
946 2 500 2 335 2 
539 2 867 2 
653 2 946 2 
867 2 456 2 
946 2 183 2 500 2 
640 2 561 2 500 2 
9 2 288 2 500 2 
179 2 480 2 500 2 
680 2 733 2 500 2 
119 2 946 2 
867 2 447 2 
561 2 104 2 
288 2 414 2 
179 2 453 2 
250 2 680 2 
950 2 946 2 
680 2 771 2 
179 2 560 2 
786 2 288 2 
561 2 600 2 
11 2 946 2 183 2 500 2 
155 2 11 2 946 2 183 2 500 2 
787 2 946 2 500 2 
411 2 946 2 500 2 
490 2 282 2 765 2 352 2 
677 2 832 2 716 2 903 6 962 4 390 2 1020 2 320 2 876 2 795 2 1022 2 132 2 493 2 885 4 94 2 708 2 380 2 294 2 
691 2 500 2 
201 2 534 2 807 2 284 2 
491 2 201 2 534 2 807 2 284 2 66 2 
201 2 539 2 867 2 748 2 284 2 138 2 
648 2 170 2 
1 2 201 2 284 2 416 2 
179 2 744 2 
680 2 258 2 
443 2 561 2 
1041 2 288 2 
680 2 147 2 288 2 
680 2 494 2 288 2 
680 2 288 2 959 2 
54 2 680 2 288 2 
1 2 201 2 394 2 284 2 730 2 
313 2 946 2 
180 2 
255 4 136 4 13 4 16 4 676 2 682 2 149 2 844 2 152 2 410 2 848 2 689 2 30 26 418 2 423 2 979 2 165 2 543 2 551 2 870 2 431 2 985 6 557 2 558 2 46 2 171 6 564 2 442 2 883 26 996 4 57 2 574 2 65 2 323 2 70 2 327 2 332 2 468 2 198 2 594 2 901 6 900 2 1017 2 202 2 204 2 345 2 907 2 90 4 605 2 91 2 216 2 217 2 482 4 221 4 775 4 617 2 778 2 359 2 624 2 783 8 628 2 361 2 109 2 636 2 366 2 639 2 792 6 798 2 1051 2 645 2 805 2 656 2 384 2 124 2 
255 6 136 4 13 4 16 4 676 2 682 2 149 2 844 2 152 2 410 2 848 2 689 2 30 26 418 2 976 2 423 2 979 2 165 2 543 2 551 2 870 2 431 2 985 6 557 2 558 2 46 2 171 6 564 2 442 2 883 26 996 4 57 2 574 2 457 2 64 2 65 2 323 2 70 2 327 2 332 2 468 2 198 2 594 2 901 6 900 2 1017 2 202 2 204 2 345 2 907 2 90 4 605 2 91 2 216 2 217 2 482 4 483 2 221 4 775 4 617 2 356 2 778 2 359 2 624 2 783 8 628 2 361 2 1042 2 636 2 366 2 639 2 792 6 798 2 645 2 805 2 656 2 124 2 
973 2 
324 2 661 2 
663 2 741 10 587 2 330 2 257 2 73 2 332 2 261 2 828 2 831 8 266 2 200 2 203 4 148 2 25 2 837 2 271 4 758 2 90 2 410 2 972 4 764 2 693 2 30 6 767 4 157 2 418 2 419 2 978 2 1031 4 698 2 360 2 41 2 864 2 547 2 111 6 46 2 434 2 931 2 171 4 562 8 173 6 878 6 797 2 440 2 643 2 802 2 237 2 177 4 883 12 805 2 806 4 886 2 1059 2 996 2 656 2 58 4 245 2 508 2 124 2 
943 2 663 2 741 10 587 2 330 2 257 2 73 2 332 2 261 2 828 2 831 8 266 2 200 2 203 4 148 2 25 2 837 2 271 4 758 2 90 2 410 2 764 2 972 4 218 2 30 6 693 2 767 4 157 2 418 2 978 2 1031 4 698 2 360 2 41 2 864 2 547 2 111 6 46 2 434 2 931 2 171 4 562 8 173 8 794 4 878 8 797 2 499 2 440 2 643 2 802 2 177 4 883 12 805 2 806 4 886 2 1059 2 996 2 656 2 58 4 245 2 508 2 124 2 
434 2 200 2 978 2 1031 2 663 2 878 2 864 2 330 2 806 4 73 2 764 2 972 4 886 2 767 2 157 2 111 2 828 2 58 2 
943 2 663 2 741 6 587 2 330 2 257 2 73 2 332 2 261 2 828 2 831 4 266 2 200 2 203 4 148 2 25 2 837 2 271 4 758 2 90 2 410 2 972 4 764 2 693 2 30 6 767 4 157 2 418 2 419 2 978 2 1031 4 360 2 41 2 864 2 547 2 111 4 46 2 434 2 931 2 171 4 562 4 173 6 878 6 797 2 440 2 643 2 802 2 237 2 177 4 883 12 805 2 806 4 886 2 1059 2 996 2 656 2 58 4 245 2 508 2 124 2 
663 2 741 6 587 2 330 2 743 2 257 2 73 2 332 2 261 2 828 2 831 4 266 2 200 2 203 4 148 2 25 2 837 2 271 4 758 2 90 2 410 2 972 4 764 2 693 2 30 6 767 4 157 2 418 2 419 2 978 2 1031 4 360 2 41 2 864 2 547 2 111 6 46 2 434 2 931 2 171 4 562 4 173 6 878 4 797 2 440 2 643 2 802 2 237 2 177 4 883 12 805 2 806 4 886 2 1059 2 996 2 656 2 58 4 245 2 508 2 124 2 
663 2 741 6 587 2 330 2 257 2 73 2 332 2 261 2 828 2 831 8 266 2 200 2 203 4 148 2 25 2 837 2 271 4 758 2 90 2 410 2 972 4 764 2 693 2 30 6 767 4 157 2 418 2 419 2 978 2 1031 4 698 2 360 2 41 2 864 2 547 2 111 6 46 2 434 2 931 2 171 4 562 4 173 6 878 6 797 2 440 2 643 2 802 2 237 2 177 4 883 12 805 2 806 4 886 2 1059 2 996 2 656 2 58 4 245 2 508 2 124 2 
663 2 741 10 587 2 330 2 743 2 257 2 73 2 332 2 261 2 828 2 831 8 266 2 200 2 203 4 148 2 25 2 837 2 271 4 758 2 90 2 410 2 972 4 764 2 693 2 30 6 767 4 157 2 418 2 419 2 978 2 1031 4 698 2 360 2 41 2 864 2 547 2 111 8 46 2 434 2 931 2 171 4 562 8 173 8 878 6 797 2 440 2 643 2 802 2 237 2 177 4 883 12 805 2 806 4 886 2 1059 2 996 2 656 2 58 4 245 2 508 2 124 2 
663 2 741 10 587 2 330 2 257 2 73 2 332 2 261 2 828 2 831 8 266 2 200 2 203 4 148 2 25 2 837 2 271 4 758 2 90 2 410 2 972 4 764 2 693 2 30 6 767 4 157 2 418 2 419 2 978 2 1031 4 698 2 360 2 41 2 864 2 547 2 111 6 46 2 434 2 931 2 171 4 562 8 173 6 878 6 797 2 440 2 643 2 802 2 237 2 177 4 883 12 805 2 806 4 886 2 1059 2 996 2 656 2 58 4 245 2 508 2 124 2 
509 2 255 6 257 4 15 2 13 2 261 2 828 2 263 2 831 2 266 2 25 2 837 2 271 8 840 1 27 6 30 24 32 6 859 6 862 1 543 2 544 2 40 2 41 2 864 2 547 2 550 2 292 2 870 2 557 2 46 2 878 4 564 2 301 2 883 46 886 2 58 4 580 4 893 6 65 2 318 2 587 2 70 2 590 2 327 2 330 2 328 2 73 2 71 2 332 2 594 2 901 6 80 2 345 2 601 10 89 7 90 4 605 2 607 2 92 1 613 6 617 2 359 2 360 2 624 2 111 8 929 6 636 2 931 2 366 2 643 2 645 2 934 2 120 2 379 2 656 2 124 2 663 2 391 6 130 6 133 2 139 6 148 4 682 2 406 2 152 2 410 2 689 2 971 1 972 4 693 2 157 2 694 2 418 2 419 2 978 2 697 2 165 2 703 2 704 1 984 6 431 12 985 6 432 2 712 1 986 7 434 2 171 6 173 12 720 2 440 4 442 2 177 6 726 1 996 4 997 6 999 2 187 6 741 2 460 6 743 4 467 6 1013 6 470 1 200 2 1017 2 202 2 203 4 205 1 758 2 1023 8 210 4 216 4 764 2 482 4 767 4 768 2 483 2 221 4 1030 2 775 4 1031 4 222 2 778 2 1034 2 783 4 784 2 1042 2 1044 2 496 2 792 8 798 2 797 2 802 2 501 6 805 2 806 4 1059 2 245 2 508 2 
509 2 663 2 391 6 130 6 133 2 255 6 136 2 257 4 13 2 15 2 261 2 828 2 263 2 139 6 831 6 266 2 145 2 148 4 25 2 682 2 837 2 406 2 271 8 152 2 27 6 410 2 689 2 972 4 693 2 30 26 157 2 694 2 418 2 32 6 419 2 859 6 978 2 697 2 165 2 698 4 544 2 543 2 40 2 41 2 864 2 547 2 703 2 984 6 550 2 292 2 870 4 431 12 985 6 432 2 557 2 46 2 434 2 171 6 173 12 720 2 878 8 564 2 301 2 440 4 442 4 177 6 883 48 886 2 997 6 996 4 999 2 58 4 187 6 893 6 580 4 318 2 65 2 741 2 587 2 460 6 70 2 327 2 590 2 328 2 330 2 71 2 73 2 332 2 1013 6 467 6 594 2 80 2 901 6 1017 2 200 2 202 2 203 4 344 2 345 2 601 10 758 2 1023 8 90 4 605 2 210 4 607 2 216 4 764 2 768 2 767 4 482 4 483 2 613 6 221 4 1030 2 775 4 617 2 1031 4 222 2 1034 2 778 2 359 2 360 2 624 2 784 2 783 8 1042 2 1044 2 111 8 929 6 496 2 636 2 366 4 931 2 792 8 797 2 798 2 643 2 934 2 645 2 802 2 501 6 805 2 806 4 120 2 379 2 1059 2 656 2 508 2 245 2 124 2 
509 2 663 2 391 6 130 6 133 2 255 6 136 2 257 4 13 2 15 2 261 2 828 2 263 2 139 6 831 6 266 2 145 2 148 4 25 2 682 2 837 2 406 2 271 8 152 2 27 6 410 2 689 2 972 4 693 2 30 26 157 2 694 2 418 2 32 6 419 2 859 6 978 2 697 2 165 2 698 4 544 2 543 2 40 2 41 2 864 2 547 2 703 2 984 6 550 2 292 2 870 4 431 12 985 6 432 2 557 2 46 2 434 2 171 6 173 12 562 4 720 2 878 8 564 2 301 2 440 4 442 4 177 6 883 48 886 2 997 6 996 4 999 2 58 4 187 6 893 6 580 4 318 2 65 2 741 6 587 2 460 6 70 2 327 2 590 2 328 2 330 2 71 2 73 2 332 2 1013 6 467 6 594 2 80 2 901 6 1017 2 200 2 202 2 203 4 344 2 345 2 601 10 758 2 1023 8 90 4 605 2 210 4 607 2 216 4 764 2 768 2 767 4 482 4 483 2 613 6 221 4 1030 2 775 4 1031 4 617 2 222 2 1034 2 778 2 359 2 360 2 624 2 784 2 783 8 1042 2 1044 2 111 8 929 6 496 2 636 2 366 4 931 2 792 8 797 2 798 2 643 2 934 2 645 2 802 2 501 6 805 2 806 4 120 2 379 2 1059 2 656 2 508 2 245 2 124 2 
509 2 820 6 255 6 257 4 15 2 13 4 261 2 828 2 263 2 831 6 266 2 25 2 837 2 271 8 27 6 30 24 32 12 859 12 543 2 544 2 40 2 41 2 864 2 547 2 290 6 291 2 550 2 292 2 870 4 557 2 46 2 562 4 878 10 564 2 301 2 883 52 886 2 58 4 580 4 893 6 65 2 318 2 587 2 70 4 590 2 327 4 330 2 328 2 73 2 71 2 332 2 594 2 80 2 901 8 902 6 344 2 345 2 601 8 602 6 90 4 605 2 607 2 613 12 355 6 617 2 359 2 360 2 105 6 624 2 632 2 111 10 929 12 636 2 931 2 366 4 116 6 643 2 645 2 934 2 120 2 121 2 379 2 656 2 124 2 943 2 663 2 391 6 130 6 133 2 136 2 139 12 145 2 148 4 682 2 406 2 152 4 410 2 687 2 689 2 972 4 693 2 157 2 418 2 419 2 420 2 978 2 697 2 165 2 698 4 980 2 703 2 984 6 709 2 431 10 985 8 432 2 434 2 171 6 173 16 720 2 440 4 442 4 177 6 444 6 182 2 996 4 997 12 999 2 187 6 741 6 1007 6 460 6 743 2 467 6 1013 6 200 2 1017 2 202 2 203 4 758 2 1023 8 210 4 216 4 764 2 482 6 767 4 768 2 483 2 221 4 1030 2 775 4 1031 4 222 2 778 2 1034 2 783 10 784 2 1042 2 1044 2 496 2 792 12 797 2 798 4 802 2 501 6 805 2 806 4 1059 2 245 2 508 2 
419 2 1031 4 663 2 698 2 41 2 360 2 741 4 864 2 547 2 587 2 330 2 73 2 111 6 831 6 266 2 931 2 200 2 203 2 148 2 173 4 562 4 271 2 878 6 758 2 802 2 177 2 883 4 806 2 764 2 972 2 886 2 693 2 58 4 508 2 245 2 
663 2 255 6 669 2 13 3 831 6 266 2 148 2 682 2 270 2 271 2 531 3 410 2 689 2 972 2 30 24 693 2 694 2 418 2 419 2 165 2 698 2 543 2 41 2 864 2 547 2 431 4 985 6 557 2 46 2 171 6 173 4 175 2 878 6 564 2 177 2 883 28 180 2 886 2 996 4 731 2 58 4 65 2 189 2 741 2 587 2 327 3 330 2 73 2 332 2 594 2 901 6 200 2 202 2 203 2 345 2 601 2 758 2 90 4 605 2 216 2 764 2 482 4 483 2 221 4 775 4 1031 4 617 2 778 2 359 2 360 2 624 2 922 2 1040 2 1042 2 111 6 636 2 931 2 792 8 798 3 645 2 802 2 646 2 805 2 806 2 1059 2 656 2 245 2 508 2 124 2 
266 2 931 2 316 2 
266 2 931 2 316 2 
943 4 663 4 252 2 133 2 255 6 257 4 13 2 826 2 828 2 831 6 266 4 144 2 148 4 25 2 682 2 406 2 271 4 839 4 410 2 847 2 689 2 972 2 30 16 418 2 978 2 165 2 698 4 543 2 41 2 546 2 864 2 982 2 870 4 431 4 985 2 557 2 46 2 171 6 562 4 173 16 878 12 564 2 440 2 442 4 880 2 177 4 883 24 728 2 996 4 58 4 734 2 316 2 580 2 893 2 65 2 736 2 894 2 741 6 462 2 330 2 743 4 72 2 332 2 594 2 901 2 1017 4 202 2 203 2 345 2 601 2 90 4 605 2 210 2 216 6 767 4 483 2 221 4 916 2 775 4 617 2 1031 4 778 2 359 2 783 4 361 4 1042 2 111 12 231 2 1045 4 636 2 366 4 931 6 792 2 498 2 797 2 643 2 645 2 644 2 802 2 805 2 806 2 379 2 656 2 124 2 
454 2 50 2 893 2 720 2 601 2 1053 2 784 2 210 2 324 2 883 4 462 2 72 2 431 2 30 2 826 2 157 2 418 2 
943 4 663 4 133 2 255 6 257 4 13 4 826 2 828 2 831 6 266 4 148 4 25 2 682 2 406 2 837 2 271 4 839 4 966 2 410 2 847 2 689 2 972 2 30 16 418 2 978 2 165 2 698 4 543 2 41 2 546 2 864 2 982 4 870 4 431 2 985 2 557 2 46 2 171 6 562 4 173 16 878 12 564 2 440 4 442 4 880 2 177 4 883 24 568 2 996 4 58 4 734 2 316 2 893 2 580 2 65 2 736 2 894 2 741 6 462 2 330 2 743 4 72 2 332 2 594 2 901 2 1017 4 202 2 203 2 345 2 90 4 605 2 216 6 767 4 483 2 221 4 775 4 617 2 1031 4 778 2 620 2 359 2 783 4 361 4 1042 2 927 2 111 12 231 2 1045 4 636 2 366 4 931 6 792 2 234 2 498 2 797 2 643 2 645 2 644 2 802 2 805 2 806 2 379 2 656 2 124 2 
943 4 2 2 663 4 133 2 255 6 257 4 13 2 826 2 828 2 831 6 266 4 148 4 25 2 682 2 406 2 837 2 271 4 839 4 277 2 410 2 847 2 689 2 972 2 30 16 418 2 978 2 165 2 698 4 543 2 41 2 546 2 864 2 982 2 870 4 431 4 985 2 557 2 46 2 171 6 562 4 173 16 878 12 564 2 440 4 442 4 880 2 177 4 883 24 996 4 58 4 734 2 316 2 580 2 893 2 65 2 736 2 894 2 741 6 462 2 330 2 743 4 72 2 332 2 594 2 901 2 1017 4 202 2 203 2 345 2 601 2 90 4 605 2 210 2 216 6 767 4 483 2 221 4 775 4 617 2 1031 4 778 2 1037 2 359 2 783 4 361 4 1042 2 111 12 231 2 1045 4 636 2 366 4 931 6 792 2 498 2 797 2 643 2 645 2 644 2 802 2 805 2 806 2 1058 2 379 2 244 2 656 2 124 2 
249 2 816 4 514 10 4 2 5 2 515 4 519 4 821 4 255 4 7 10 521 8 13 11 15 2 17 2 525 1 20 2 21 2 530 4 531 2 274 2 275 2 276 12 852 6 853 2 30 24 855 24 861 4 542 10 543 2 289 2 550 2 551 2 292 2 871 2 296 2 557 2 558 2 46 2 563 2 565 2 53 2 883 32 569 2 570 2 55 2 305 14 309 6 317 2 65 2 319 2 323 2 70 16 327 11 329 2 74 14 332 2 901 12 900 2 343 2 599 10 345 2 907 2 906 10 603 2 90 4 605 2 98 2 353 2 357 4 619 2 920 6 919 2 359 2 622 2 624 2 106 4 925 2 634 2 635 4 636 2 639 2 375 2 376 2 646 2 650 2 651 2 652 6 122 2 381 2 656 2 124 2 941 2 942 2 388 8 667 2 951 2 135 4 669 2 953 2 676 2 678 2 403 2 682 2 683 4 965 2 967 2 152 42 410 2 968 2 688 2 970 2 692 2 974 2 418 2 422 4 979 2 163 10 165 2 168 2 431 2 985 12 432 2 171 6 718 4 175 2 723 2 178 2 993 2 181 30 448 2 729 2 996 4 737 3 742 2 745 2 194 2 1009 2 1012 2 198 2 468 10 469 6 1015 2 752 2 473 2 1017 4 202 2 753 4 754 2 1021 4 1024 2 479 4 216 2 481 2 482 10 483 2 219 2 221 2 1030 2 1029 2 774 4 775 2 1034 2 778 2 1033 4 487 10 489 4 1038 2 783 30 1040 2 785 2 1042 2 1043 2 1044 2 790 30 792 18 793 2 236 2 798 11 1054 2 803 2 805 2 502 2 504 2 809 8 
317 2 163 4 737 2 919 2 487 2 624 2 1038 2 167 2 327 2 13 2 985 2 901 2 792 2 599 2 754 2 798 2 723 2 152 6 883 2 55 2 122 2 30 2 729 2 482 2 
317 2 163 4 737 2 919 2 487 2 624 2 1038 2 167 2 327 2 13 2 985 2 901 2 792 2 599 2 754 2 798 2 723 2 152 6 883 2 55 2 122 2 30 2 729 2 482 2 
317 2 163 4 737 2 919 2 487 2 624 2 1038 2 167 2 327 2 13 2 985 2 901 2 792 2 599 2 754 2 798 2 723 2 152 6 883 2 55 2 122 2 30 2 729 2 482 2 
815 4 857 2 126 4 816 2 386 2 63 2 388 5 665 2 486 4 863 2 289 2 4 2 68 2 624 2 949 2 519 2 705 2 953 2 194 2 10 2 228 4 13 3 954 2 635 2 82 3 559 3 792 2 404 2 235 4 115 4 798 3 151 6 724 2 608 3 842 2 883 10 852 4 55 2 30 4 769 2 
815 4 816 2 126 4 386 2 388 4 63 2 665 2 4 2 68 2 949 2 519 2 953 2 194 2 10 2 13 2 954 2 82 2 404 2 151 6 842 2 608 2 852 4 30 4 769 2 857 2 1033 2 289 2 863 2 486 4 624 2 106 2 705 2 228 4 635 2 559 2 792 2 235 4 642 2 115 4 798 2 724 2 883 10 55 2 
815 4 816 2 126 4 386 2 388 4 63 2 665 2 4 2 68 2 949 2 519 2 953 2 194 2 10 2 13 2 954 2 82 2 404 2 151 6 842 2 608 2 852 4 30 4 769 2 857 2 1033 2 289 2 863 2 486 4 624 2 106 2 705 2 228 4 635 2 559 2 792 2 235 4 642 2 115 4 798 2 724 2 883 10 55 2 
815 4 816 2 126 4 386 2 388 4 63 2 665 2 4 2 68 2 949 2 519 2 953 2 194 2 10 2 13 2 954 2 82 2 404 2 151 6 842 2 608 2 852 4 30 4 769 2 857 2 1033 2 289 2 863 2 486 4 624 2 106 2 705 2 228 4 635 2 559 2 792 2 235 4 642 2 115 4 798 2 724 2 883 10 55 2 
815 4 816 2 126 4 386 2 388 4 63 2 665 2 4 2 68 2 949 2 519 2 953 2 194 2 10 2 13 2 954 2 82 2 404 2 151 6 842 2 608 2 852 4 30 4 769 2 857 2 1033 4 289 2 863 2 486 4 624 2 106 4 705 2 228 4 635 2 559 2 792 2 235 4 642 4 115 4 798 2 724 2 883 10 55 2 
926 2 98 2 331 2 103 2 260 2 675 2 
930 2 924 2 362 2 468 2 675 2 913 2 1001 2 
658 1 858 2 220 2 455 2 1003 2 516 1 627 2 227 2 325 2 668 2 137 2 673 2 397 1 554 2 713 2 989 2 883 10 279 2 686 1 884 2 808 1 506 2 30 8 415 2 613 2 124 2 
815 4 816 6 388 15 1033 6 665 2 4 6 289 6 1005 2 519 6 821 2 106 4 953 6 194 6 928 4 295 2 635 6 960 2 22 2 752 2 1021 2 642 4 756 2 1024 2 283 2 852 12 994 2 309 4 
833 2 510 2 126 2 84 2 115 2 738 2 800 2 228 2 195 3 898 2 888 2 770 2 417 2 
833 2 510 2 126 2 84 2 85 1 115 2 738 4 800 2 1004 2 804 2 883 1 228 2 195 6 30 1 898 2 888 2 770 2 417 2 
833 2 510 2 126 2 84 2 115 2 738 4 800 2 1004 2 804 2 228 2 195 6 898 2 888 4 770 4 417 4 
833 2 510 2 126 2 84 2 85 1 115 2 738 4 800 2 1004 8 804 6 883 1 228 2 195 10 30 1 898 2 888 8 770 8 417 8 
659 2 128 2 255 32 520 2 395 1 12 4 523 10 834 2 682 6 681 2 405 2 407 2 843 2 969 2 849 2 851 14 30 34 159 4 160 2 161 2 860 2 37 2 424 4 700 2 429 2 42 2 549 2 706 2 873 1 433 2 717 2 51 4 990 2 174 2 877 2 883 38 446 2 56 2 452 2 1002 4 67 2 739 4 459 4 190 2 191 2 746 2 75 2 341 2 472 2 596 2 595 2 345 6 1019 2 908 4 207 2 88 1 209 4 347 2 478 4 349 2 93 2 212 5 95 2 483 4 1027 1 772 2 221 16 101 2 616 2 775 18 1032 2 778 4 621 4 626 2 1042 4 788 2 932 2 638 2 371 2 113 2 641 2 373 2 374 2 649 4 505 2 813 2 655 2 246 2 247 1 
311 2 452 2 312 2 511 2 315 2 1002 4 739 4 255 42 822 4 592 2 193 2 520 2 1010 2 259 2 75 2 196 2 593 2 79 2 674 2 400 2 336 2 339 2 596 2 834 2 342 2 836 2 681 2 682 2 345 2 405 2 905 2 272 2 150 2 908 38 409 2 760 2 478 2 349 2 153 2 910 2 212 2 610 2 95 2 851 6 30 44 285 2 912 2 159 4 612 2 160 2 100 2 695 2 221 20 775 20 1032 2 778 2 37 2 424 2 921 2 39 2 488 2 429 4 430 2 633 2 110 2 363 6 873 2 112 2 788 2 367 2 435 2 172 2 990 2 1049 4 373 2 374 2 299 2 877 2 935 2 117 4 302 2 649 6 883 46 239 4 567 2 995 2 813 2 246 2 59 2 383 2 
221 4 511 2 775 4 682 2 345 2 405 2 778 2 37 2 877 2 908 4 801 2 883 10 255 10 1042 4 95 2 75 2 30 10 483 4 246 2 788 2 
452 2 511 2 660 2 1002 6 739 6 254 2 255 38 520 4 395 2 8 2 12 2 1010 2 75 2 523 10 400 2 341 10 472 2 596 2 834 4 206 2 269 2 682 2 345 2 681 2 405 2 905 2 407 2 908 14 478 2 349 4 849 4 212 2 95 2 851 8 30 26 483 10 159 6 1027 6 160 2 772 2 221 14 775 14 1032 4 778 2 37 2 424 2 429 2 626 2 706 2 1042 10 873 2 788 2 1047 2 374 4 877 2 373 2 649 6 883 28 812 4 813 4 246 2 247 2 
184 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.IllegalArgumentException 1000 1000 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 397 543 872 402 425 741 152 57 540 684 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 637 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 637 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 919 606 973 699 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 945 736 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 185 235 229 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 185 235 229 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 185 235 229 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 185 235 229 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.MathMDE:pow(II)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3R_75()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_117()Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_87()Z
daikon.inv.Invariant:logDetail()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:lt(II)Z
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_107()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_136()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3R_125()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_81()Z
daikon.Quant:lexGT([I[I)Z
daikon.Debug:logDetail()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3_10()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
utilMDE.Intern:intern([J)[J
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_163()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:ne(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14018 | 108 -> 109
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_127()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_126()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1652 | = null
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3_17()Z
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:subsetOf([D[D)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:noDups([I)Z
daikon.Quant:lte(II)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3R_104()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_3R_78()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_58()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:gte(II)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:eltsGTE([II)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_85()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptSlice2:arity()I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_35()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:memberOf(F[F)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:memberOf(F[D)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt:Ppt()V
daikon.VarInfoName:hashCode()I
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3R_98()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId; | ASSIGN | 30324 | = null
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_106()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_105()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:min([I)I
daikon.PptSlice1:arity()I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3_27()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_15()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_29()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_97()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Debug:logOn()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_134()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_88()Z
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:isReverse([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_108()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:concat([I[I)[I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_60()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaCharStream:FillBuff()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_70()Z
daikon.ProglangType:dimensions()I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3R_116()Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_14()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ProglangType:isIntegral()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_148()Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_2_4(I)Z
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:jj_2_5(I)Z
daikon.diff.Node:Node()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_210()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_180()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isArray()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_99()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:setDiff([I[I)[I
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_18(I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:memberOf(J[J)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_169()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_3_12()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3_4()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_35(I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3_30()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_62()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3R_110()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | RETURN | 1469 | return null
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_54()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_3R_164()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel; | RETURN | 571 | return null
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_26()Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:relate_var()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3_21()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24033 | = null
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:negate(I)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_73()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_2_12(I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3R_128()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_26(I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | OPERATOR | 60487 | == -> <
jtb.JavaParser:jj_3R_48()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
642 2 70 2 681 4 159 2 209 2 234 2 120 2 980 2 372 2 
355 2 583 2 53 2 253 2 25 2 375 6 878 2 676 6 277 6 88 2 72 2 
608 6 198 4 21 6 815 2 130 2 315 6 70 2 10 2 224 2 299 2 413 4 980 2 910 6 
124 6 541 16 840 29 479 8 156 16 895 8 792 2 274 4 549 2 70 6 770 26 334 4 706 10 980 6 13 10 46 16 146 2 305 2 805 2 917 12 659 4 954 8 876 8 571 2 879 4 85 10 960 2 605 10 153 10 577 6 
1000 4 
617 2 
932 2 131 2 295 2 70 4 796 2 193 2 856 2 244 2 73 2 805 2 309 2 250 2 311 2 871 2 371 2 372 2 952 2 433 2 374 2 883 2 575 2 631 4 215 2 897 2 517 2 219 2 823 2 769 4 331 2 278 2 980 4 43 2 279 4 107 2 48 2 776 2 111 4 916 2 716 2 283 2 989 2 288 2 349 2 469 2 
31 6 124 4 541 32 889 4 840 54 694 4 156 32 895 18 421 4 6 4 137 6 70 4 903 2 275 6 770 48 977 6 706 16 980 4 13 16 164 2 46 32 710 2 528 6 914 4 918 2 917 22 873 6 954 6 571 2 879 2 85 16 835 4 628 2 378 2 350 8 605 16 153 6 760 4 577 4 
193 2 885 2 488 2 
761 2 336 2 724 2 213 2 269 2 252 2 294 2 846 2 700 2 390 22 981 2 244 2 942 10 828 2 
541 2 67 2 840 6 127 2 156 2 895 2 696 2 770 4 706 2 13 2 46 2 867 2 917 2 432 2 661 2 58 2 879 2 85 2 118 2 629 2 605 2 153 4 577 2 
541 8 840 16 694 4 401 2 917 4 156 8 274 2 275 6 85 4 835 4 770 12 977 6 706 4 605 4 13 4 46 8 669 2 
812 4 90 4 1 2 270 4 672 2 766 4 297 2 295 4 898 2 298 14 851 2 674 4 161 10 193 8 103 10 163 2 488 2 245 2 393 2 304 4 107 2 454 2 562 4 111 4 984 2 428 2 807 4 431 2 748 62 314 2 342 2 924 2 784 4 721 4 119 2 885 6 999 2 154 2 690 4 417 2 
935 2 158 2 134 2 703 2 617 2 825 2 456 2 80 2 656 2 181 2 
607 2 474 2 727 2 729 2 480 16 843 2 361 2 731 1 849 2 485 2 857 2 16 2 145 2 490 3 618 2 365 4 366 6 619 2 869 1 367 4 149 1 744 2 621 2 251 2 495 2 498 24 151 2 500 2 624 16 258 2 262 4 263 4 380 2 757 6 382 3 633 3 33 2 35 2 384 2 890 1 636 2 764 2 894 8 639 2 640 3 272 4 765 2 387 3 900 2 41 2 905 4 160 2 523 2 391 8 908 2 162 2 526 2 394 2 651 2 650 1 50 1 174 2 176 2 658 1 406 1 287 2 179 1 59 2 60 5 665 2 536 1 537 2 61 2 786 2 787 1 788 16 184 1 65 2 929 4 418 2 420 2 671 2 791 32 934 2 936 2 937 3 793 2 70 32 795 2 798 2 800 2 550 2 303 2 556 2 306 2 946 3 307 2 199 2 79 2 683 2 566 2 207 2 570 4 572 2 573 1 435 6 576 2 320 2 578 3 89 2 441 2 443 2 444 2 212 2 91 6 325 2 817 2 582 2 326 8 95 2 328 2 98 2 99 2 702 16 824 2 449 3 980 34 982 2 829 2 225 2 714 3 593 2 458 2 988 2 462 24 598 3 717 1 230 12 834 2 113 3 601 2 994 32 602 2 120 2 998 1 723 1 122 2 
980 2 515 2 
512 2 290 2 980 4 
337 2 
0 364 471 2 726 4 475 2 3 2 476 2 477 14 239 4 730 4 482 6 732 2 8 18 483 6 11 2 484 2 243 4 735 2 487 2 489 2 18 4 246 2 20 44 740 2 741 2 742 2 493 4 743 18 494 2 249 24 746 4 23 4 747 208 24 78 499 2 254 4 255 4 256 2 257 2 261 62 754 2 755 2 758 2 505 2 265 52 507 2 30 2 510 4 762 2 34 6 763 38 36 4 37 2 38 2 516 2 273 2 518 2 42 2 520 2 521 18 522 2 771 2 45 2 772 16 775 2 527 4 529 2 531 2 51 10 777 4 282 2 778 4 779 2 285 4 55 88 56 2 57 2 782 4 783 2 538 2 539 12 63 46 789 34 540 2 64 2 542 2 544 44 543 2 69 26 548 2 547 2 296 2 794 2 799 52 301 78 555 2 75 2 557 2 804 2 76 2 560 2 77 10 806 2 564 2 81 4 82 4 808 2 84 2 316 2 86 4 574 2 809 2 318 2 323 2 579 2 813 10 92 2 816 2 818 2 327 2 820 2 586 6 97 10 587 2 821 10 588 2 330 2 822 2 101 2 590 78 102 2 826 2 827 2 106 2 109 2 592 34 594 2 340 4 596 6 599 2 600 2 116 10 345 2 351 2 352 2 123 2 609 2 126 4 128 18 356 2 357 2 610 2 358 78 611 18 612 78 136 78 615 22 853 2 142 34 854 2 858 2 860 2 147 2 868 20 620 2 622 2 150 62 872 2 376 4 626 6 880 2 377 208 152 2 379 18 381 18 886 4 887 78 888 2 634 6 893 4 896 2 385 2 386 2 641 16 906 2 904 2 643 2 907 2 644 2 909 2 165 2 911 2 912 16 647 6 169 2 170 2 171 208 396 28 397 2 399 2 172 4 173 2 915 2 920 4 402 2 657 2 921 28 922 2 405 52 660 2 409 34 407 14 662 4 663 18 177 2 178 2 410 2 412 2 925 42 180 4 414 4 666 2 415 22 667 2 928 2 182 2 416 2 183 22 670 6 930 78 187 18 933 4 188 2 190 2 673 2 938 68 192 2 675 78 677 2 939 2 678 2 940 2 425 2 194 2 943 2 682 10 427 2 947 2 203 2 948 2 684 2 950 2 951 2 685 2 957 4 208 2 686 4 958 2 687 2 964 18 966 2 965 4 438 2 967 4 968 2 693 2 214 2 695 44 698 2 445 2 971 6 446 6 972 6 701 2 704 2 222 2 976 78 978 2 709 2 452 2 711 4 453 78 983 2 455 2 715 2 457 2 460 6 461 2 985 2 228 4 718 14 991 14 992 2 464 4 232 2 233 2 993 2 465 4 466 6 996 2 997 40 1001 4 
719 2 597 2 62 1 96 2 
398 2 96 2 
881 2 338 2 193 2 645 2 334 2 96 2 437 2 
338 2 959 2 96 2 
338 2 725 2 96 2 
135 2 597 2 534 2 
338 2 96 2 
135 2 530 2 
96 2 913 2 
135 2 597 2 739 2 
247 2 652 2 597 2 
472 2 138 2 597 2 
713 2 597 2 211 2 
47 2 28 2 597 2 
135 2 737 2 
354 2 96 2 
83 2 247 2 
138 2 129 2 
9 2 211 2 
28 2 291 2 
135 2 866 2 
864 2 28 2 
211 2 426 2 
138 2 189 2 
247 2 797 2 
135 2 974 2 597 2 739 2 
135 2 974 2 597 2 739 2 749 2 
135 2 267 2 597 2 
135 2 312 2 597 2 
186 2 561 2 201 2 604 2 
632 2 861 2 558 2 341 2 284 4 697 2 949 2 206 2 220 2 768 4 902 2 752 2 390 6 362 2 344 2 29 2 364 2 155 2 
569 2 597 2 
559 2 193 2 645 2 785 2 
559 2 115 2 881 2 193 2 645 2 785 2 
712 2 338 2 193 2 645 2 334 2 96 2 
210 2 349 2 
193 2 645 2 334 2 468 2 
368 2 211 2 
28 2 271 2 
491 2 247 2 
322 2 138 2 
329 2 138 2 28 2 
138 2 28 2 733 2 
138 2 28 2 93 2 
138 2 28 2 302 2 
440 2 839 6 969 2 388 6 193 2 645 2 403 2 319 2 
135 2 463 2 
793 2 
607 2 729 2 843 2 242 2 144 2 145 2 365 2 366 6 869 2 367 4 251 2 621 2 870 2 151 2 500 2 624 6 875 2 750 2 262 2 263 4 757 2 509 2 32 2 384 6 764 2 636 2 638 2 514 4 905 2 523 2 908 2 773 2 394 2 651 2 174 2 287 2 929 4 65 2 289 2 420 2 671 4 791 6 70 26 795 2 798 2 800 2 303 2 680 2 199 2 683 2 566 2 570 4 572 2 434 2 435 4 441 2 212 2 91 2 443 2 970 2 584 2 95 2 326 2 819 2 980 26 108 2 593 2 988 2 717 2 833 4 230 8 601 2 994 4 120 2 
607 2 729 2 843 2 242 2 144 2 145 2 365 2 366 6 619 2 869 2 367 4 621 2 251 2 870 2 151 2 500 2 624 6 875 2 750 2 262 2 263 4 757 2 509 2 32 2 384 6 764 2 636 2 638 2 514 4 157 2 41 2 905 2 523 2 908 2 526 2 394 2 651 2 174 2 287 2 929 4 65 2 289 2 420 2 671 4 791 6 70 26 795 2 798 2 800 2 303 2 680 2 199 2 202 2 683 2 566 2 570 4 572 2 434 2 435 6 441 2 212 2 91 2 443 2 584 2 95 2 326 2 819 2 980 26 593 2 988 2 717 2 833 4 230 8 601 2 994 4 120 2 837 2 
231 2 
614 2 627 2 
238 2 2 8 478 2 729 2 843 2 845 2 360 4 240 2 70 6 423 2 798 2 552 2 676 6 363 2 424 4 72 2 196 10 366 4 22 2 745 2 310 2 251 2 683 2 25 2 953 2 26 2 570 2 375 6 878 4 503 2 263 2 436 2 962 2 508 4 321 2 441 2 891 2 216 2 218 2 585 2 223 2 975 4 591 2 333 8 277 6 448 2 646 2 104 2 980 12 707 2 708 2 451 2 394 2 653 2 53 4 286 4 343 2 722 2 668 4 
238 2 2 8 478 2 729 2 843 2 845 2 360 4 240 2 70 6 423 2 798 2 552 2 676 8 363 2 424 4 72 2 196 10 366 4 22 2 745 2 310 2 251 2 683 2 25 2 570 2 26 2 375 6 956 2 878 4 503 2 263 2 436 2 506 2 508 4 321 2 441 2 891 2 583 2 216 2 218 2 585 2 223 2 975 4 591 2 333 8 277 8 448 2 646 2 104 2 980 12 707 2 708 2 451 2 49 4 394 2 653 2 53 4 286 4 343 2 722 2 668 4 
321 2 238 2 22 2 216 2 53 2 286 2 218 2 26 2 375 2 240 2 878 2 552 2 503 2 591 2 277 2 708 2 508 4 668 4 
238 2 2 4 478 2 729 2 843 2 845 2 360 4 240 2 70 6 423 2 798 2 552 2 676 6 363 2 424 4 196 6 366 4 22 2 745 2 310 2 251 2 683 2 25 2 953 2 26 2 570 2 375 4 878 4 503 2 263 2 436 2 962 2 508 4 321 2 441 2 891 2 583 2 216 2 218 2 585 2 223 2 975 4 591 2 333 4 277 6 448 2 646 2 104 2 980 12 707 2 708 2 451 2 394 2 653 2 53 4 286 4 343 2 722 2 668 4 
238 2 2 4 478 2 729 2 843 2 845 2 360 4 240 2 70 6 423 2 798 2 552 2 676 6 363 2 424 4 196 4 366 4 22 2 745 2 310 2 251 2 683 2 25 2 953 2 26 2 570 2 375 6 878 4 503 2 263 2 436 2 962 2 88 2 508 4 321 2 441 2 891 2 216 2 218 2 585 2 223 2 975 4 591 2 333 4 277 4 448 2 646 2 104 2 980 12 707 2 708 2 451 2 394 2 653 2 53 4 286 4 343 2 722 2 668 4 
238 2 2 8 478 2 729 2 843 2 845 2 360 4 240 2 70 6 423 2 798 2 552 2 676 6 363 2 424 4 72 2 196 6 366 4 22 2 745 2 310 2 251 2 683 2 25 2 953 2 26 2 570 2 375 6 878 4 503 2 263 2 436 2 962 2 508 4 321 2 441 2 891 2 216 2 218 2 585 2 223 2 975 4 591 2 333 4 277 6 448 2 646 2 104 2 980 12 707 2 708 2 451 2 394 2 653 2 53 4 286 4 343 2 722 2 668 4 
238 2 2 8 478 2 729 2 843 2 845 2 360 4 240 2 70 6 423 2 798 2 552 2 676 8 363 2 424 4 72 2 196 10 366 4 22 2 745 2 310 2 251 2 683 2 25 2 953 2 26 2 570 2 375 8 878 4 503 2 263 2 436 2 962 2 88 2 508 4 321 2 441 2 891 2 216 2 218 2 585 2 223 2 975 4 591 2 333 8 277 6 448 2 646 2 104 2 980 12 707 2 708 2 451 2 394 2 653 2 53 4 286 4 343 2 722 2 668 4 
238 2 2 8 478 2 729 2 843 2 845 2 360 4 240 2 70 6 423 2 798 2 552 2 676 6 363 2 424 4 72 2 196 10 366 4 22 2 745 2 310 2 251 2 683 2 25 2 953 2 26 2 570 2 375 6 878 4 503 2 263 2 436 2 962 2 508 4 321 2 441 2 891 2 216 2 218 2 585 2 223 2 975 4 591 2 333 8 277 6 448 2 646 2 104 2 980 12 707 2 708 2 451 2 394 2 653 2 53 4 286 4 343 2 722 2 668 4 
238 2 2 2 478 2 4 2 729 2 240 2 241 2 734 6 19 2 492 1 22 2 745 2 251 2 496 1 497 6 25 4 500 12 26 2 750 2 260 2 262 2 263 4 503 2 753 6 757 2 759 2 508 4 512 6 764 2 513 2 515 6 39 2 41 2 519 1 277 4 44 4 280 2 53 4 533 6 286 4 287 2 546 6 791 8 70 24 795 2 798 2 552 2 801 6 300 2 71 6 554 6 303 2 310 2 78 2 566 2 570 4 572 2 88 4 321 2 811 8 91 2 324 1 326 2 94 2 585 2 819 2 589 2 591 2 104 2 337 6 830 2 112 1 833 4 114 2 601 2 343 2 836 2 603 6 120 2 348 2 121 6 125 2 841 1 843 2 845 2 133 2 360 8 359 2 613 1 850 2 141 1 616 2 363 2 852 2 143 2 145 2 859 6 365 2 366 6 619 2 367 4 621 2 151 2 624 6 375 8 878 4 884 2 384 6 891 2 905 2 908 2 646 2 166 2 167 2 394 2 651 2 653 2 654 2 408 7 664 10 927 7 668 4 929 4 420 2 931 2 422 2 423 2 676 12 424 4 680 2 199 2 683 2 205 2 434 4 688 2 435 6 962 2 436 2 441 2 212 2 216 2 218 2 221 6 975 6 223 2 448 2 980 46 708 2 707 4 451 2 226 2 986 6 990 1 230 4 994 2 720 4 995 2 722 2 
125 2 238 2 2 6 4 2 478 2 729 2 843 2 133 2 845 2 359 2 360 8 240 2 850 2 241 2 616 2 734 6 852 2 363 2 143 2 145 2 859 6 19 2 365 4 366 6 619 2 367 4 22 2 745 2 621 2 251 2 497 6 151 2 500 12 25 4 624 6 26 2 375 8 750 2 260 2 878 4 262 4 753 6 503 2 263 4 884 2 757 2 759 2 508 4 512 6 384 6 764 2 891 2 513 2 515 6 39 2 41 2 905 4 908 2 277 8 646 2 44 4 166 2 167 2 280 2 394 2 651 2 653 2 654 2 533 6 53 4 286 4 287 2 664 10 668 4 929 4 931 2 420 2 671 2 546 6 791 8 422 2 795 2 70 26 423 2 798 2 801 6 552 2 676 12 300 2 424 4 71 6 554 6 195 2 72 4 303 2 196 2 803 2 680 2 199 2 310 2 78 2 683 2 205 2 566 2 570 4 572 2 434 4 688 2 435 6 436 2 962 2 811 8 321 2 441 2 91 2 212 2 216 2 94 2 326 2 819 2 585 2 218 2 221 6 589 2 223 2 975 6 591 2 448 2 104 2 980 48 707 4 708 2 451 2 337 6 830 2 226 2 986 6 833 4 230 8 114 2 601 2 994 2 995 2 720 4 343 2 836 2 603 6 120 2 722 2 348 2 121 6 
125 2 238 2 2 6 4 2 478 2 729 2 843 2 133 2 845 2 359 2 360 8 240 2 850 2 241 2 616 2 734 6 852 2 363 2 143 2 145 2 859 6 19 2 365 4 366 6 619 2 367 4 22 2 745 2 621 2 251 2 497 6 151 2 500 12 25 4 624 6 26 2 375 8 750 2 260 2 878 4 262 4 753 6 503 2 263 4 884 2 757 2 759 2 508 4 512 6 384 6 764 2 891 2 513 2 515 6 39 2 41 2 905 4 908 2 277 8 646 2 44 4 166 2 167 2 280 2 394 2 651 2 653 2 654 2 533 6 53 4 286 4 287 2 664 10 668 4 929 4 931 2 420 2 671 2 546 6 791 8 422 2 795 2 70 26 423 2 798 2 801 6 552 2 676 12 300 2 424 4 71 6 554 6 195 2 72 4 303 2 803 2 196 6 680 2 199 2 310 2 78 2 683 2 205 2 566 2 570 4 572 2 434 4 688 2 435 6 436 2 962 2 811 8 321 2 441 2 91 2 212 2 216 2 94 2 326 2 819 2 585 2 218 2 221 6 589 2 223 2 975 6 591 2 333 4 448 2 104 2 980 48 707 4 708 2 451 2 337 6 830 2 226 2 986 6 833 4 230 8 114 2 601 2 994 2 995 2 720 4 343 2 836 2 603 6 120 2 722 2 348 2 121 6 
238 2 2 6 478 2 4 2 729 2 481 2 240 2 241 2 734 6 19 2 22 2 745 2 251 2 497 6 25 4 500 10 26 2 750 4 260 2 501 2 502 6 262 4 263 4 503 2 753 12 757 4 759 2 264 2 508 4 512 12 764 2 513 2 515 12 39 2 40 2 41 2 277 10 44 4 280 2 53 4 533 6 286 4 780 6 287 2 546 12 791 12 70 24 795 2 798 2 552 2 801 6 300 2 71 6 554 6 303 2 72 4 803 2 563 6 310 2 78 2 566 2 570 4 572 2 810 6 88 2 321 2 811 8 91 4 583 2 326 4 94 2 585 2 819 2 589 2 591 2 333 4 104 2 337 12 831 6 830 2 832 2 833 6 114 2 601 2 343 2 836 2 603 6 120 2 348 2 121 12 125 2 843 2 844 6 845 2 133 2 360 8 359 2 850 2 616 2 363 2 852 2 143 2 145 2 859 6 862 2 365 4 366 6 619 2 367 4 621 2 151 2 624 8 375 10 878 4 884 2 384 8 891 2 905 4 908 2 646 2 166 2 167 2 394 2 651 2 653 2 654 2 404 6 411 6 664 8 668 4 929 4 420 2 931 2 419 2 671 2 191 6 423 2 676 16 424 4 195 2 196 6 680 2 199 2 683 2 205 2 434 4 688 2 435 6 962 2 436 2 441 2 212 2 216 2 218 2 221 6 223 2 975 6 448 2 980 52 708 2 707 4 451 2 226 2 986 6 227 2 230 10 994 4 720 4 995 2 722 2 
238 2 2 6 478 2 216 2 585 2 218 2 845 2 360 2 975 2 363 2 676 4 591 2 424 2 333 4 277 6 646 2 448 2 980 4 708 2 451 2 72 2 196 4 653 2 22 2 310 2 53 4 25 2 26 2 375 6 878 4 343 2 722 2 962 2 508 2 668 2 
238 2 2 6 478 2 729 2 843 2 845 2 360 2 139 2 363 2 12 2 145 2 366 6 619 2 367 4 22 2 621 2 251 2 151 2 25 2 500 4 624 6 26 2 375 6 878 4 263 4 757 3 508 2 33 2 384 6 764 2 892 2 41 2 277 6 908 2 646 2 394 2 651 2 653 2 53 4 287 2 664 2 668 2 929 4 420 2 292 2 68 2 791 8 422 2 793 2 70 24 795 2 798 2 676 4 424 2 72 2 303 2 196 2 680 2 199 2 310 2 683 2 566 2 570 4 572 2 434 2 435 6 962 2 441 2 212 2 91 3 582 2 216 2 218 2 585 2 819 2 975 2 591 2 104 2 448 2 980 28 708 2 451 2 829 2 339 3 833 4 994 3 343 2 120 2 722 2 
845 2 168 2 363 2 
845 2 168 2 363 2 
2 6 729 2 843 2 845 2 360 4 240 2 734 2 363 4 242 4 15 2 145 2 365 4 366 6 619 2 367 4 22 4 621 2 251 2 151 2 500 4 25 4 624 2 375 12 878 4 262 4 263 4 756 2 508 2 384 2 764 2 637 2 891 2 899 2 41 2 905 4 908 2 277 12 646 2 44 2 168 2 394 2 648 2 651 2 400 2 53 4 286 2 175 2 287 2 664 2 668 2 929 4 66 2 420 2 791 2 70 16 795 2 798 2 552 2 676 16 424 2 303 2 72 4 196 6 680 2 308 4 199 2 310 2 683 2 567 4 570 4 572 2 434 6 435 6 436 2 88 4 580 2 441 2 212 2 583 4 216 2 217 2 819 2 218 2 100 2 975 4 333 4 980 24 105 2 110 2 230 4 601 4 994 2 720 2 120 2 
321 2 66 2 370 2 217 2 175 2 500 2 955 2 70 2 798 2 627 2 664 2 836 2 734 2 346 2 980 4 44 2 166 2 
2 6 729 2 843 2 845 4 360 4 240 2 734 2 363 6 143 2 242 4 145 2 365 4 366 6 619 2 367 4 22 4 745 2 621 2 251 2 151 2 500 2 25 4 624 2 375 12 878 4 262 4 263 4 756 4 508 2 635 2 384 2 764 2 637 2 891 2 41 2 905 4 908 2 277 12 646 2 392 2 167 2 168 2 394 2 648 2 651 2 400 2 53 4 286 4 175 2 287 2 668 2 929 4 66 2 420 2 545 2 790 2 791 2 70 16 795 2 798 2 552 2 676 16 424 2 303 2 72 4 196 6 680 2 308 4 199 2 310 2 683 2 567 4 570 4 572 2 434 6 435 6 436 2 88 4 580 2 441 2 212 2 583 4 216 2 217 2 819 2 218 2 589 2 100 2 223 2 975 4 333 4 335 2 980 24 105 2 707 4 110 2 226 2 230 4 601 4 994 4 117 2 720 2 120 2 236 2 
2 6 729 2 843 2 845 4 360 4 240 2 734 2 363 6 143 2 242 4 145 2 365 4 366 6 619 2 367 4 22 4 745 2 621 2 251 2 151 2 500 4 25 4 624 2 27 2 375 12 878 4 262 4 263 4 756 2 508 2 635 2 384 2 764 2 637 2 891 2 41 2 905 4 908 2 277 12 646 2 44 2 167 2 168 2 394 2 648 2 651 2 400 2 53 4 286 4 175 2 287 2 664 2 668 2 929 4 66 2 420 2 791 2 70 16 795 2 798 2 552 2 676 16 424 2 944 2 303 2 72 4 196 6 680 2 308 4 199 2 310 2 683 2 430 2 567 4 570 4 572 2 434 6 435 6 436 2 88 4 580 2 441 2 212 2 692 2 583 4 216 2 217 2 819 2 218 2 589 2 100 2 223 2 975 4 705 2 333 4 980 24 105 2 707 4 110 2 226 2 230 4 601 4 994 2 117 2 720 2 120 2 
874 2 606 2 353 2 383 2 973 2 467 2 919 2 373 2 699 2 
838 2 91 3 442 2 384 2 791 2 70 2 980 2 450 2 14 2 679 2 865 2 649 2 148 2 281 2 52 2 566 2 833 2 624 2 750 6 994 3 926 1 757 3 87 4 630 2 470 3 
838 2 91 2 442 2 384 2 791 2 70 2 980 2 450 2 14 2 679 2 865 2 649 2 148 2 281 2 52 2 566 2 833 2 624 2 750 6 994 2 757 2 87 4 630 2 470 2 
838 2 91 2 442 2 384 2 791 2 70 2 980 2 450 2 14 2 679 2 865 2 649 2 148 2 281 2 52 2 566 2 833 2 624 2 750 6 994 2 757 2 87 4 630 2 470 2 
788 2 124 2 541 2 91 3 840 6 268 2 511 2 156 2 791 2 848 2 70 4 140 3 702 2 770 4 551 2 553 2 706 2 980 10 941 2 13 2 46 2 802 4 197 3 524 2 148 2 595 4 987 2 655 2 566 2 954 4 259 4 877 2 994 3 85 2 504 4 317 3 689 4 605 2 963 6 266 2 
788 2 541 2 124 2 840 4 791 2 70 4 848 2 140 2 551 2 553 2 13 2 941 2 802 4 197 2 148 2 566 2 954 4 259 4 571 2 877 2 85 2 504 4 317 2 963 6 689 4 266 2 91 2 511 2 268 2 156 2 895 2 702 2 770 4 980 10 706 2 46 2 524 2 595 4 987 2 917 2 655 2 994 2 605 2 
788 2 541 2 124 2 840 4 791 2 70 4 848 2 140 2 551 2 553 2 13 2 941 2 802 4 197 2 148 2 566 2 954 4 259 4 571 2 877 2 85 2 504 4 317 2 963 6 689 4 266 2 91 2 511 2 268 2 156 2 895 2 702 2 770 4 980 10 706 2 46 2 524 2 595 4 987 2 917 2 655 2 994 2 605 2 
788 2 541 2 124 2 840 4 791 2 70 4 848 2 140 2 551 2 553 2 13 2 941 2 802 4 197 2 148 2 566 2 954 4 259 4 571 2 877 2 85 2 504 4 317 2 963 6 689 4 266 2 91 2 511 2 268 2 156 2 895 2 702 2 770 4 980 10 706 2 46 2 524 2 595 4 987 2 917 2 655 2 994 2 605 2 
788 2 541 2 124 2 840 4 791 2 70 4 848 2 140 2 551 2 553 2 13 2 941 2 802 4 197 2 148 2 566 2 954 4 259 4 571 4 877 2 85 2 504 4 317 2 963 6 689 4 266 2 91 2 511 2 268 2 156 2 895 4 702 2 770 4 980 10 706 2 46 2 524 2 595 4 987 2 917 4 655 2 994 2 605 2 
751 2 347 2 961 2 429 2 855 2 5 2 
439 2 814 2 32 2 395 2 332 2 961 2 728 2 
863 2 74 2 1 1 459 2 313 1 293 2 842 1 729 2 623 2 847 2 781 2 70 8 901 2 7 2 276 1 736 2 979 2 980 10 417 1 691 2 945 2 
237 2 541 6 124 2 840 15 694 2 156 6 895 4 132 2 421 2 70 6 137 4 447 2 770 12 977 4 980 6 706 6 13 6 46 6 738 2 250 2 532 2 917 4 954 4 625 2 288 2 923 2 571 4 85 6 350 2 605 6 
774 2 473 2 248 1 595 2 200 2 565 4 204 2 54 2 767 2 568 2 259 2 70 1 535 2 882 2 389 7 980 1 486 2 802 2 
774 2 473 2 595 2 200 2 565 4 204 2 54 2 767 4 568 4 259 2 535 2 882 4 389 6 486 2 802 2 
774 2 473 6 248 1 595 2 200 2 565 4 204 2 54 2 767 8 568 8 259 2 70 1 535 2 882 8 389 10 980 1 486 8 802 2 
774 2 595 2 200 2 565 2 204 2 54 2 767 2 568 2 259 2 535 2 882 2 389 2 802 2 
185 2 369 1 581 2 525 1 229 2 235 2 
185 2 581 2 235 2 229 2 
185 2 581 2 235 2 229 2 
185 2 581 2 235 2 229 2 
17 2 

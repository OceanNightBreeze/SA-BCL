#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArithmeticException 588 115 863 8 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 781 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 775 578 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 1104 578 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 684 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 69 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 1122 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 985 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 884 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 984 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 759 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 370 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 864 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 322 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 452 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 626 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 366 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 79 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 825 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 748 578 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 613 578 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 752 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 938 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 803 578 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 47 578 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 1125 578 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 653 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 938 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 446 690 578 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 1125 578 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 921 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 938 (10,17,37,90,125,140,159,176,188,221,238,259,290,299,300,316,324,326,395,396,461,561,583,584,638,652,713,742,848,868,929,930,936,977,1028,1029,1035,1051,1063,1075,1093,1202) 655 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (727,883) 795 (289,462) 747 379 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 1116 472 164 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 273 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 956 1090 1061 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 903 794 956 1090 1061 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 956 1090 1061 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 956 1090 1061 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.Quant:lt(II)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3R_106()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:intersection([I[I)[I
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_25()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_117()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3_19()Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z | ASSIGN | 58337 | = null
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3_27()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([D)[D
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z | CONSTANT | 23955 | 1 -> 0
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3_30()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(II)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_161()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_17()Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.RootNode:RootNode()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName:hashCode()I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3_1()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_180()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3_28()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_137()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Intern:intern([J)[J
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_75()Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_86()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice1:arity()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_125()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_22()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_73()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_2_13(I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String; | ASSIGN | 18974 | = null
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3R_115()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_67()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_29()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_ntk()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_108()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_99()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3_14()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_134()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | RETURN | 27662 | return null
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_149()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3095 | - -> *
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:noDups([I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gt(II)Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_77()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 14876 | return null
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3R_97()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice1:num_samples()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_3R_98()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_104()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3_12()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_2_21(I)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_114()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:isIntegral()Z
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:readChar()C
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_88()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
jtb.JavaParser:jj_3_3()Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_2_25(I)Z | STATEMENT | 146859 | stmt -> ;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:memberOf(I[I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:relate_var()V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_35(I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Invariant:justified()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.Quant:isReverse([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_61()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3_15()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3R_126()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_164()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:jj_3R_50()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.Token:newToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_116()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_2_10(I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | STATEMENT | 17277 | stmt -> ;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice2:arity()I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Debug:logDetail()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_62()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_169()Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_18()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaCharStream:BeginToken()C
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3R_110()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:gte(II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqual([II)Z
jtb.JavaCharStream:getEndColumn()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression; | RETURN | 83887 | return null
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.ModBitTracker:num_vars()I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:passes()Z
daikon.Quant:union([I[I)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_76()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:memberOf(J[J)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.PptSlice0:arity()I
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_107()Z
daikon.ProglangType:baseIsScalar()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:eltsGT([II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_10()Z
utilMDE.Intern:intern([I)[I
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:jj_3R_105()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eq(JJ)Z
daikon.Quant:subsetOf([B[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_36()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
569 2 87 2 722 4 55 2 910 2 946 2 765 2 656 2 837 2 1126 2 535 2 1068 2 996 2 465 2 963 2 469 2 296 2 46 2 84 2 483 2 1087 2 86 2 651 2 
1162 4 1123 32 12 48 834 56 726 6 728 16 97 4 622 2 846 2 180 16 1065 4 808 18 282 6 254 4 255 6 287 2 506 2 998 6 550 4 704 6 636 2 466 4 1040 6 599 4 1042 4 562 2 304 2 567 32 753 8 1086 16 1010 4 824 4 866 6 365 32 520 22 167 6 405 2 1152 16 973 4 
837 2 186 2 589 2 
430 2 816 2 832 2 763 2 797 2 1055 10 836 2 43 2 965 2 63 22 400 2 49 2 697 2 828 2 
796 2 1162 2 1123 2 834 6 12 4 728 2 1096 2 622 2 180 2 19 2 808 2 587 2 696 2 1185 2 103 2 397 2 1009 2 567 2 1086 2 365 2 520 2 167 4 1152 2 
998 6 704 6 1123 8 12 12 834 16 728 4 876 2 693 2 923 2 180 4 567 8 824 4 1010 4 1086 4 365 8 520 4 1152 4 
115 2 1121 2 1013 2 722 2 724 2 944 2 529 4 8 2 531 2 725 2 1126 2 837 8 769 4 456 2 844 4 353 2 321 4 383 2 502 10 65 2 281 2 588 8 186 2 885 2 589 6 546 4 139 60 393 2 1071 2 673 10 634 2 552 4 513 2 863 4 645 2 757 2 269 2 
718 2 488 2 781 2 105 2 637 2 859 2 560 2 1142 2 480 2 886 2 739 2 
592 2 710 2 721 2 1165 2 881 4 882 2 599 2 651 2 973 2 
72 6 916 2 60 2 559 2 784 2 15 6 947 6 45 2 1024 2 606 2 682 2 
23 6 1186 6 1155 4 527 2 360 6 599 2 820 2 1143 2 163 2 906 4 1102 2 22 6 973 2 
117 4 1162 6 1123 16 59 2 656 2 834 30 12 26 728 10 693 4 622 4 180 10 808 8 254 6 26 8 1034 4 599 6 260 2 562 2 1199 2 646 2 565 8 567 16 1086 10 866 8 941 2 365 16 520 12 167 10 1152 10 973 6 
464 4 152 6 
859 2 
85 2 599 2 
952 2 267 2 599 4 
1157 2 
313 2 1 2 612 2 1049 2 913 2 3 2 447 3 616 2 449 4 766 16 917 1 1054 2 318 2 1057 2 919 2 174 4 453 2 319 3 178 32 182 2 625 4 629 2 187 3 1072 24 633 12 189 8 1080 2 473 1 474 8 195 4 789 2 484 2 200 2 345 2 53 2 203 2 489 2 348 1 58 2 349 3 1094 3 61 2 351 2 802 2 949 2 64 2 212 2 663 3 214 2 809 6 669 2 1107 2 359 2 961 6 1115 2 75 2 77 2 227 2 818 1 228 5 675 2 363 2 519 2 969 1 232 2 829 2 973 32 685 2 523 2 687 2 371 3 373 2 979 2 93 2 842 2 244 2 989 2 381 2 382 1 540 8 542 2 253 2 387 16 388 2 257 2 258 1 856 2 1001 2 1002 1 556 2 557 2 109 2 1139 2 861 2 261 2 1003 2 709 3 862 2 1147 16 402 32 266 2 1153 2 721 2 723 2 572 1 573 2 1166 2 410 2 411 2 875 3 1021 2 877 2 1026 2 730 1 733 2 732 2 276 1 1179 4 129 6 736 4 130 1 428 2 138 2 284 1 286 2 593 2 142 2 595 12 1187 2 1191 2 893 16 1188 3 432 1 1039 1 1037 1 1194 3 599 34 598 2 437 4 601 2 898 2 1197 2 1201 4 904 2 308 2 1203 3 168 6 1047 2 1204 24 
608 2 609 2 613 2 614 4 5 2 7 2 9 2 10 2 13 16 14 2 16 2 17 2 18 2 623 2 624 44 626 2 631 94 27 30 28 42 30 2 635 4 33 2 638 4 37 2 41 4 641 2 44 52 644 2 47 2 648 6 48 2 652 2 51 4 653 2 56 2 57 2 655 2 661 12 664 2 69 2 70 4 671 2 674 4 74 18 76 2 79 2 81 2 80 2 677 22 83 2 684 2 88 4 89 2 90 2 91 22 690 2 98 2 695 2 698 14 701 14 703 94 106 4 702 2 705 2 108 26 708 2 111 22 113 4 713 2 114 2 717 6 116 2 719 4 720 2 118 2 121 2 120 2 124 2 125 26 126 2 731 4 735 4 132 4 136 18 137 8 140 2 141 2 741 2 742 2 144 2 744 2 746 2 147 48 148 12 748 2 149 18 151 2 750 16 153 2 752 2 161 2 159 48 162 56 755 2 166 4 169 2 170 94 758 4 759 2 760 46 761 8 762 2 173 2 768 246 772 2 176 2 775 2 776 2 188 2 779 94 782 2 786 2 790 10 791 2 792 12 204 2 210 2 803 2 806 2 213 2 215 2 216 2 217 2 218 2 812 2 813 2 815 2 221 2 223 2 225 2 226 62 819 2 230 2 822 30 821 2 823 8 825 22 233 4 236 2 830 2 238 2 242 50 243 2 839 2 841 2 245 4 843 4 246 4 248 2 249 4 847 20 848 2 251 4 851 4 853 2 854 2 858 4 259 2 864 2 865 2 868 2 270 2 870 2 872 6 874 4 878 4 879 2 880 2 278 2 884 2 283 246 887 2 888 2 894 2 290 18 896 2 292 2 897 2 299 2 300 2 302 12 905 2 305 4 907 8 908 2 312 4 911 2 914 4 915 2 316 2 315 2 921 2 922 2 924 2 320 2 927 2 925 4 928 94 322 2 929 2 324 22 325 2 326 2 931 16 930 2 933 2 329 2 935 2 332 2 936 2 937 2 938 26 336 2 939 2 339 2 940 4 340 4 341 2 344 2 943 18 350 2 951 2 352 2 953 48 356 18 955 4 958 4 962 4 967 4 968 42 362 12 364 2 367 42 366 2 970 2 972 18 368 2 370 2 977 2 980 4 983 94 984 2 378 2 985 2 987 2 988 2 380 2 992 2 385 358 995 36 391 2 997 2 395 2 396 4 1005 2 399 2 1008 2 401 2 404 2 1011 2 407 2 1016 4 412 4 1018 4 416 2 1023 94 1022 44 1025 4 1027 2 419 62 1028 4 1029 2 422 2 423 4 424 18 426 6 427 44 425 30 1031 14 1032 2 1033 2 1035 2 433 2 1038 2 438 2 439 4 440 2 443 18 446 2 1050 2 1051 4 1052 94 1056 104 451 2 1058 2 1060 18 452 2 454 2 457 2 1063 2 459 4 1067 4 461 2 1069 4 463 2 1074 2 1075 2 468 2 1079 2 471 94 1081 2 1082 2 1083 2 476 2 479 8 478 4 487 2 1092 94 490 2 1093 2 491 4 492 2 1098 72 497 2 1101 4 1103 4 1104 2 1110 2 1109 2 1112 2 1111 2 508 94 511 22 509 4 515 2 521 62 522 12 524 18 525 48 526 2 1122 2 528 4 1125 18 1128 4 1129 18 533 2 536 2 538 4 541 2 543 4 1134 74 545 2 548 2 549 2 551 2 553 2 1140 2 1141 90 561 2 563 6 564 2 1145 2 1146 2 1150 2 1161 8 571 8 1160 2 1163 2 577 4 1168 2 578 30 1170 4 1171 246 583 2 1174 4 584 2 1177 4 1175 2 1178 28 590 2 596 2 597 2 1192 2 600 2 1195 4 602 2 603 2 1198 4 605 8 1200 2 1202 2 
475 2 157 2 158 2 1034 2 964 1 837 2 39 2 800 2 
157 2 895 2 800 2 
157 2 800 2 827 2 
94 2 849 2 771 2 
157 2 800 2 
1091 2 771 2 
785 2 157 2 
94 2 639 2 771 2 
94 2 1077 2 1193 2 
94 2 104 2 654 2 
94 2 668 2 311 2 
94 2 460 2 11 2 
207 2 771 2 
157 2 585 2 
510 2 1077 2 
654 2 954 2 
902 2 311 2 
756 2 11 2 
54 2 771 2 
11 2 706 2 
804 2 311 2 
805 2 654 2 
1077 2 165 2 
94 2 639 2 1120 2 771 2 
94 2 220 2 639 2 1120 2 771 2 
94 2 586 2 771 2 
94 2 414 2 771 2 
486 2 890 2 274 2 716 2 
158 2 1044 2 837 2 749 2 
475 2 1117 2 158 2 1044 2 837 2 749 2 
157 2 158 2 1034 2 279 2 837 2 800 2 
628 2 86 2 
158 2 1034 2 837 2 1066 2 
1154 2 311 2 
932 2 11 2 
1077 2 767 2 
516 2 654 2 
654 2 11 2 436 2 
654 2 34 2 11 2 
654 2 11 2 343 2 
654 2 11 2 413 2 
837 2 1181 2 740 2 1073 2 999 6 1114 6 158 2 1151 2 
711 2 771 2 
172 2 594 2 1014 2 783 2 376 2 532 2 295 2 63 6 986 2 1131 2 1064 2 807 2 131 2 133 2 867 4 568 4 1183 2 1182 2 
154 2 94 2 
94 2 127 2 157 2 
157 2 201 2 
232 2 
313 4 611 2 913 2 616 2 449 2 766 6 1054 2 318 2 1057 2 174 2 621 2 178 6 25 2 633 8 32 2 191 2 1080 2 474 2 338 2 195 4 484 2 485 2 345 2 203 2 802 2 212 2 1099 2 809 2 505 4 961 4 818 2 517 2 363 2 973 26 831 2 93 2 96 2 1137 2 257 2 554 4 1001 2 1002 2 1139 2 402 4 266 6 1153 2 721 2 723 2 573 2 1164 2 410 2 411 2 733 4 1179 4 129 6 736 4 428 2 138 2 286 2 593 2 142 2 595 8 1187 2 599 26 598 2 437 4 601 2 1196 2 1197 2 1201 2 904 2 306 2 307 2 308 2 168 2 1047 2 
313 2 1049 2 913 2 1053 2 616 2 449 2 766 6 1054 2 318 2 1057 2 174 2 920 2 621 2 178 6 25 2 633 8 191 2 1080 2 474 2 338 2 195 4 484 2 485 2 345 2 203 2 802 2 212 2 809 2 505 4 961 6 818 2 517 2 363 2 973 26 831 2 93 2 96 2 1137 2 257 2 107 2 554 4 1001 2 1002 2 109 2 1139 2 1003 2 402 4 266 6 1153 2 721 2 723 2 573 2 1164 2 410 2 411 2 733 4 1179 4 129 6 736 4 428 2 138 2 286 2 593 2 142 2 595 8 1187 2 599 26 598 2 437 4 601 2 1196 2 1197 2 1201 2 904 2 306 2 307 2 308 2 168 2 1047 2 
264 2 
604 2 1000 2 
462 2 190 4 747 2 945 4 916 2 40 2 15 2 947 2 379 2 177 2 247 2 712 2 1007 2 1132 2 1148 2 500 2 680 2 682 2 
686 4 239 2 372 2 916 4 1127 2 691 4 15 4 93 2 379 2 177 2 247 2 845 2 1132 2 390 2 462 2 392 4 855 2 190 4 331 2 467 2 38 4 640 2 40 4 1139 2 45 2 712 2 1007 2 1148 2 650 2 484 2 345 2 795 2 723 2 945 4 1167 2 410 2 1095 4 947 6 662 2 1024 2 129 4 500 2 736 2 883 2 355 2 503 2 67 4 1108 2 1030 2 960 2 72 6 289 2 747 2 599 12 437 2 899 2 904 2 680 2 682 4 973 6 
686 4 239 2 372 2 916 4 1127 2 691 4 15 6 93 2 379 2 177 2 247 2 845 2 1132 2 390 2 462 2 392 4 855 2 190 4 331 2 467 2 38 4 640 2 40 4 1139 2 45 2 712 2 1007 2 1148 2 650 2 484 2 345 2 795 2 723 2 945 4 1167 2 410 2 1095 4 947 4 662 2 129 4 500 2 736 2 883 2 355 2 503 2 67 4 1108 2 1030 2 960 2 72 6 289 2 747 2 599 12 437 2 899 2 904 2 606 2 680 2 682 4 973 6 
686 8 239 2 372 2 916 4 1127 2 691 4 15 6 93 2 379 2 177 2 247 2 845 2 1132 2 390 2 462 2 392 4 855 2 190 4 331 2 467 2 38 4 640 2 40 4 784 2 1139 2 45 2 712 2 1007 2 1148 2 650 2 484 2 345 2 795 2 723 2 945 4 1167 2 410 2 1095 4 947 6 662 2 129 4 500 2 736 2 883 2 355 2 503 2 67 4 1108 2 1030 2 960 2 72 6 289 2 747 2 599 12 437 2 899 2 904 2 680 2 682 4 973 6 
686 8 239 2 372 2 916 4 1127 2 691 8 15 8 93 2 379 2 177 2 247 2 845 2 1132 2 390 2 462 2 392 4 855 2 190 4 331 2 467 2 38 4 640 2 40 4 784 2 1139 2 45 2 712 2 1007 2 1148 2 650 2 484 2 345 2 795 2 723 2 945 4 1167 2 410 2 1095 8 947 6 662 2 129 4 500 2 736 2 883 2 355 2 503 2 67 4 1108 2 1030 2 960 2 72 8 289 2 747 2 599 12 437 2 899 2 904 2 606 2 680 2 682 4 973 6 
686 8 239 2 372 2 916 4 1127 2 691 8 15 6 93 2 379 2 177 2 247 2 845 2 1132 2 390 2 462 2 392 4 855 2 190 4 331 2 467 2 38 4 640 2 40 4 784 2 1139 2 45 2 712 2 1007 2 1148 2 650 2 484 2 345 2 795 2 723 2 945 4 1167 2 410 2 1095 8 947 6 662 2 129 4 500 2 736 2 883 2 355 2 503 2 67 4 1108 2 1030 2 960 2 72 6 289 2 747 2 599 12 437 2 899 2 904 2 680 2 682 4 973 6 
610 6 615 6 616 2 916 4 15 8 620 2 630 2 328 2 633 4 38 6 331 4 640 2 40 4 45 4 345 2 347 6 945 4 947 4 662 2 952 6 667 2 355 2 67 4 66 2 961 6 960 2 72 12 966 2 680 2 85 6 682 4 973 24 975 2 686 2 369 6 688 2 372 4 689 2 93 2 379 2 991 2 99 2 994 2 390 2 392 8 1001 2 109 2 1003 2 1006 1 712 2 1007 2 402 2 715 6 721 2 723 2 1015 6 410 2 411 2 727 2 729 1 417 4 129 6 736 4 428 2 138 2 1030 2 747 2 434 1 437 4 155 2 160 8 168 2 1047 2 449 2 766 6 448 1 1054 2 174 2 177 2 178 8 181 2 462 2 190 4 1076 2 191 2 467 2 192 6 470 2 474 2 195 4 1088 6 484 2 203 12 795 2 209 2 496 1 802 2 499 2 500 2 809 2 503 2 811 1 1108 2 505 4 507 6 224 2 229 2 231 2 237 1 239 2 833 4 240 2 1127 2 534 2 247 2 845 2 1132 2 1133 10 544 2 547 1 1136 2 1137 2 855 2 257 2 857 1 1139 2 1148 2 566 7 265 2 1149 2 266 6 1157 6 573 2 1167 2 873 2 580 6 581 6 275 6 1176 2 1179 4 883 2 285 6 591 7 286 2 593 2 595 4 891 2 289 2 598 2 599 46 601 2 899 2 1197 2 294 2 1201 2 904 2 606 4 306 4 307 2 
610 6 615 6 616 2 766 6 449 4 1054 2 916 4 174 4 15 8 620 2 177 2 178 8 181 2 630 2 462 2 328 2 633 8 1076 2 190 4 191 2 331 4 38 6 467 2 640 2 192 6 40 4 470 2 784 4 474 2 45 4 195 4 1088 6 484 2 345 2 795 2 203 12 347 6 945 4 209 2 947 8 802 2 662 2 499 2 952 6 500 2 667 2 809 2 503 2 355 2 66 2 67 4 1108 2 505 4 507 6 72 12 960 2 961 6 224 2 966 2 229 2 231 2 680 2 85 6 682 4 973 26 975 2 686 6 369 6 239 2 1124 2 833 4 688 2 240 2 372 4 689 2 1127 2 93 2 534 2 379 2 990 2 845 2 247 2 991 2 1132 2 99 2 1133 10 994 2 544 2 390 2 1136 2 392 8 1137 2 855 2 257 2 1001 2 109 2 1139 2 1003 2 712 2 1007 2 402 2 1148 2 1149 2 265 2 715 6 266 6 721 2 1157 6 723 2 1015 6 573 2 1167 2 410 2 411 2 873 2 727 2 580 6 581 6 417 4 275 6 1176 2 733 2 1179 4 129 6 736 4 883 2 428 2 285 6 138 2 286 2 1030 2 593 2 595 8 891 2 289 2 747 2 599 48 598 2 437 4 601 2 899 2 294 2 1197 2 155 2 160 8 1201 4 904 2 306 4 307 2 168 2 1047 2 
610 6 615 6 616 2 766 6 449 4 1054 2 916 4 174 4 15 8 620 2 177 2 178 8 181 2 630 2 462 2 328 2 633 8 1076 2 190 4 191 2 331 4 38 6 467 2 640 2 192 6 40 4 470 2 784 4 474 2 45 4 195 4 1088 6 484 2 345 2 795 2 203 12 347 6 945 4 209 2 1095 4 947 8 802 2 662 2 499 2 952 6 500 2 667 2 809 2 503 2 355 2 66 2 67 4 1108 2 505 4 507 6 72 12 960 2 961 6 224 2 966 2 229 2 231 2 680 2 85 6 682 4 973 26 975 2 686 6 369 6 239 2 1124 2 833 4 688 2 240 2 372 4 689 2 1127 2 691 4 93 2 534 2 379 2 990 2 845 2 247 2 991 2 1132 2 99 2 1133 10 994 2 544 2 390 2 1136 2 392 8 1137 2 855 2 257 2 1001 2 109 2 1139 2 1003 2 712 2 1007 2 402 2 1148 2 1149 2 265 2 715 6 266 6 721 2 1157 6 723 2 1015 6 573 2 1167 2 410 2 411 2 873 2 727 2 580 6 581 6 417 4 275 6 1176 2 733 2 1179 4 129 6 736 4 883 2 428 2 285 6 138 2 1030 2 286 2 593 2 595 8 891 2 289 2 747 2 599 48 598 2 437 4 601 2 899 2 294 2 1197 2 155 2 160 8 1201 4 904 2 306 4 307 2 168 2 1047 2 
607 2 610 6 615 6 616 2 916 4 15 10 620 2 630 2 328 2 633 10 38 6 331 4 640 2 40 4 45 4 50 2 345 2 347 6 945 4 947 10 948 6 662 2 952 12 667 2 355 2 66 2 67 4 961 6 960 2 72 16 966 2 676 6 680 2 85 12 682 4 683 6 973 24 975 2 686 6 369 6 688 2 372 4 689 2 691 4 93 2 379 2 990 2 991 2 994 2 390 2 392 8 1001 2 109 2 1003 2 712 2 1007 2 402 4 715 12 721 2 723 2 1015 6 410 2 411 2 727 2 417 4 1024 2 733 2 129 6 736 4 134 2 428 2 138 2 1030 2 747 2 437 4 155 2 160 8 444 6 168 4 1047 2 449 4 766 8 1054 2 174 4 177 2 178 12 181 2 183 6 778 2 462 2 190 4 1076 2 191 2 467 2 192 6 784 4 470 2 474 4 195 4 1085 2 1088 6 484 2 793 6 203 10 795 2 208 2 209 2 1095 4 802 2 499 2 1100 2 500 2 809 4 503 2 1108 2 505 6 507 6 224 2 229 2 231 2 239 2 1124 2 833 4 240 2 1127 2 534 2 247 2 845 2 1132 2 1133 8 544 2 1135 6 1136 2 1137 4 855 2 257 2 1138 6 1139 2 1148 2 265 2 1149 2 266 8 1157 12 573 2 1167 2 871 6 873 2 580 12 581 12 275 6 1176 2 1179 4 883 2 285 6 286 2 593 2 595 10 891 2 1189 2 289 2 598 2 599 52 601 2 899 2 1197 2 294 2 1201 4 904 2 606 2 306 4 307 2 
686 6 239 2 945 2 1167 2 916 4 1127 2 691 4 1095 4 15 6 947 6 177 2 845 2 247 2 500 2 503 2 355 2 67 2 390 2 1108 2 1030 2 392 2 855 2 72 4 960 2 190 2 38 2 599 4 467 2 784 2 45 2 712 2 1007 2 1148 2 680 2 682 4 
616 2 766 6 916 4 1054 2 15 6 177 2 178 8 777 2 327 2 190 2 191 2 38 2 467 2 784 2 193 2 45 2 195 4 484 2 345 2 203 4 945 2 947 6 802 2 662 2 500 2 809 3 669 2 503 2 355 2 67 2 1108 2 505 4 72 4 961 6 960 2 232 2 680 2 682 4 973 24 829 2 686 6 239 2 1127 2 691 2 93 2 247 2 845 2 99 2 1133 2 390 2 392 2 394 2 855 2 257 2 1001 2 1139 2 109 2 1003 2 862 2 712 2 1007 2 402 3 1148 2 266 6 721 2 723 2 1167 2 410 2 411 2 129 6 1179 4 736 4 428 2 138 2 286 2 1030 2 593 2 598 2 599 28 437 4 601 2 293 2 1197 2 297 3 904 2 306 2 307 2 168 3 1047 2 
686 8 239 2 372 2 916 4 1127 2 691 8 15 6 93 2 379 2 177 2 247 2 845 2 1132 2 390 2 462 2 392 4 855 2 190 4 331 2 467 2 38 4 640 2 40 4 784 2 1139 2 45 2 712 2 1007 2 1148 2 650 2 484 2 345 2 795 2 723 2 945 4 1167 2 410 2 1095 8 947 6 662 2 129 4 500 2 736 2 883 2 355 2 503 2 67 4 1108 2 1030 2 960 2 72 6 289 2 747 2 599 12 437 2 899 2 904 2 680 2 682 4 973 6 
686 8 239 2 372 2 916 4 1127 2 691 8 15 6 93 2 379 2 177 2 845 2 247 2 1132 2 384 2 462 2 392 4 780 2 855 2 190 4 331 2 467 2 38 4 640 2 40 4 1139 2 784 2 45 2 712 2 1007 2 1148 2 484 2 345 2 795 2 723 2 945 4 1167 2 410 2 1095 8 947 8 662 2 1024 2 129 4 500 2 736 2 883 2 355 2 503 2 67 4 1108 2 1184 4 1030 2 960 2 72 8 289 2 747 2 599 12 437 2 899 2 904 2 680 2 682 4 973 6 
855 2 1167 2 981 2 
855 2 1167 2 981 2 
313 2 764 4 616 2 449 4 766 2 317 2 1054 2 916 4 174 4 15 12 618 2 773 2 620 2 178 2 462 2 1070 2 633 4 190 2 191 2 331 4 38 4 467 2 640 2 40 4 784 4 337 2 194 2 45 4 195 4 199 2 484 2 345 2 942 2 795 2 203 4 945 2 1095 4 947 12 801 2 802 2 211 4 950 2 67 2 961 6 72 16 73 2 231 2 682 4 973 16 971 2 686 6 239 2 833 2 372 2 981 2 691 6 93 2 96 4 247 2 1133 2 100 2 392 4 855 6 257 2 1001 2 109 2 1139 2 1003 2 712 2 714 2 1007 4 402 2 266 2 721 2 723 2 573 4 1167 4 410 2 1017 2 576 2 411 2 417 2 1024 4 1176 2 1179 4 129 6 736 4 428 2 285 2 138 2 286 2 593 2 595 4 1190 2 289 2 747 2 599 24 598 2 437 4 601 2 1197 2 1201 4 904 2 606 4 306 6 307 2 
1136 2 1070 2 203 2 73 2 833 2 1000 2 689 2 599 4 1139 2 1097 2 1130 2 1132 2 1133 2 199 2 234 2 285 2 973 2 
764 4 616 2 449 4 766 2 317 2 1054 2 916 4 174 4 15 12 773 2 620 2 178 2 627 2 21 2 462 2 1070 2 633 4 190 2 191 2 331 4 38 4 467 2 640 2 40 4 784 4 194 2 45 4 195 4 199 2 484 2 345 2 942 2 795 2 203 2 945 2 1095 4 947 12 802 2 211 4 950 2 67 2 961 6 72 16 73 2 361 2 231 2 682 4 973 16 971 2 686 6 239 2 372 4 981 2 691 6 93 2 96 4 247 2 100 2 392 4 855 6 257 2 1001 2 109 2 1139 2 1003 2 263 2 712 2 1007 4 402 4 266 2 721 2 723 2 573 4 1167 4 410 2 1017 4 576 2 411 2 417 2 1024 4 1176 2 1179 4 129 6 736 4 428 2 285 2 138 2 286 2 593 2 595 4 1190 2 289 2 747 2 599 24 598 2 437 4 601 2 899 2 1197 2 442 2 1201 4 904 2 606 4 306 6 307 2 
313 1 764 4 616 2 449 4 766 2 317 2 1054 2 916 4 174 4 15 12 773 2 455 2 620 2 178 2 179 2 462 2 1070 2 633 4 190 2 191 2 331 4 38 4 467 2 640 2 40 4 784 4 194 2 45 4 195 4 199 2 484 2 345 2 942 2 795 2 203 4 945 2 1095 4 947 12 802 2 211 4 950 2 67 2 961 6 72 16 73 2 231 2 682 4 973 16 971 2 686 6 239 2 833 2 372 4 981 2 691 6 93 2 96 4 247 2 1133 2 100 2 392 4 699 2 855 6 257 2 1001 2 110 2 109 2 1139 2 1003 2 712 2 1007 4 402 2 266 2 721 2 723 2 573 4 1167 4 410 2 1017 2 576 2 411 2 415 2 417 2 1024 4 1176 2 1179 4 129 6 736 4 428 2 285 2 138 2 286 2 593 2 595 4 1190 2 289 2 747 2 599 24 598 2 437 4 601 2 899 2 1197 2 1201 4 904 2 606 4 306 6 307 2 
616 2 766 6 1054 2 12 4 1059 2 178 8 180 2 181 2 470 2 472 2 195 4 1086 2 484 2 1089 2 346 2 345 2 203 2 205 2 657 2 660 2 802 2 498 2 809 2 1105 2 505 4 814 2 961 6 514 1 1116 2 229 2 824 2 365 2 973 20 1123 2 688 2 834 6 838 2 982 2 93 2 252 2 544 2 850 2 256 2 102 6 704 4 257 2 1001 2 1139 2 109 2 558 2 1003 2 402 2 567 2 265 2 266 6 1152 2 721 2 723 2 410 2 411 2 1019 2 728 2 1020 2 129 6 1179 4 421 2 736 4 428 2 138 2 286 2 593 2 889 2 892 2 599 26 291 4 435 2 598 2 437 4 601 2 1197 2 441 2 751 2 298 2 301 2 904 2 164 2 306 2 307 2 168 2 1047 2 
271 2 766 2 835 2 241 3 619 2 178 2 418 2 993 2 809 3 738 2 504 2 505 2 1137 6 36 2 599 2 787 2 402 3 481 2 266 2 909 2 826 4 168 3 1047 2 973 2 
271 2 766 2 835 2 241 2 619 2 178 2 418 2 993 2 809 2 738 2 504 2 505 2 1137 6 36 2 599 2 787 2 402 2 481 2 266 2 909 2 826 4 168 2 1047 2 973 2 
271 2 766 2 835 2 241 2 619 2 178 2 418 2 993 2 809 2 738 2 504 2 505 2 1137 6 36 2 599 2 787 2 402 2 481 2 266 2 909 2 826 4 168 2 1047 2 973 2 
1159 6 1123 2 530 2 834 5 12 4 798 2 617 4 377 2 728 2 175 2 178 2 418 2 180 2 277 4 694 4 665 2 666 2 254 2 700 2 893 2 288 2 29 2 599 10 333 3 860 2 398 4 82 4 1147 2 402 3 567 2 1086 2 197 3 866 4 365 2 342 2 1012 3 168 3 1152 2 1047 2 973 4 
1123 2 530 2 12 4 834 4 617 4 377 2 175 2 178 2 180 2 694 4 254 2 700 2 29 2 333 2 860 2 398 4 562 2 402 2 1147 2 567 2 197 2 1086 2 866 4 342 2 1012 2 1152 2 1159 6 798 2 728 2 418 2 665 2 277 4 666 2 808 2 893 2 288 2 599 10 82 4 365 2 520 2 168 2 973 4 1047 2 
1123 2 530 2 12 4 834 4 617 4 377 2 175 2 178 2 180 2 694 4 254 2 700 2 29 2 333 2 860 2 398 4 562 2 402 2 1147 2 567 2 197 2 1086 2 866 4 342 2 1012 2 1152 2 1159 6 798 2 728 2 418 2 665 2 277 4 666 2 808 2 893 2 288 2 599 10 82 4 365 2 520 2 168 2 973 4 1047 2 
1123 2 530 2 12 4 834 4 617 4 377 2 175 2 178 2 180 2 694 4 254 2 700 2 29 2 333 2 860 2 398 4 562 2 402 2 1147 2 567 2 197 2 1086 2 866 4 342 2 1012 2 1152 2 1159 6 798 2 728 2 418 2 665 2 277 4 666 2 808 2 893 2 288 2 599 10 82 4 365 2 520 2 168 2 973 4 1047 2 
1123 2 530 2 12 4 834 4 617 4 377 2 175 2 178 2 180 2 694 4 254 2 700 2 29 2 333 2 860 2 398 4 562 4 402 2 1147 2 567 2 197 2 1086 2 866 4 342 2 1012 2 1152 2 1159 6 798 2 728 2 418 2 665 2 277 4 666 2 808 4 893 2 288 2 599 10 82 4 365 2 520 4 168 2 973 4 1047 2 
579 2 1173 2 52 2 754 2 978 2 1046 2 
52 2 303 2 679 2 1169 2 273 2 1196 2 707 2 
1013 1 1156 2 314 2 410 2 658 2 494 2 840 2 581 2 1172 2 539 2 810 2 1106 2 852 1 817 2 431 2 146 2 1113 2 599 10 78 1 901 2 788 2 196 2 757 1 482 2 869 1 973 8 
1123 6 272 2 834 16 12 12 728 6 1065 2 180 6 1180 2 808 2 737 2 254 2 1105 2 68 2 704 4 1040 4 599 6 42 2 441 2 751 2 562 2 1043 2 753 2 567 6 824 2 1086 6 365 6 866 4 520 4 973 6 1152 6 
959 2 632 2 1036 2 512 2 1078 2 150 2 770 2 617 2 92 2 95 3 82 2 277 2 649 2 
0 2 959 2 632 2 1036 2 512 2 1078 2 599 1 150 4 770 2 617 2 92 2 95 6 262 2 82 2 277 2 649 2 184 1 973 1 
0 2 959 2 632 2 1036 4 512 2 1078 2 150 4 770 2 617 2 92 4 95 6 262 2 82 2 277 2 649 4 
0 8 959 2 632 2 1036 8 512 2 1078 2 599 1 150 4 770 2 617 2 92 8 95 10 262 6 82 2 277 2 649 8 184 1 973 1 
171 8 313 2 2 18 1048 4 912 4 4 2 616 6 6 2 918 2 1061 2 774 2 1062 4 458 12 20 4 323 12 24 2 934 16 330 10 31 8 35 4 334 8 643 2 335 6 1084 4 195 34 477 2 198 2 1090 2 794 20 206 4 659 6 493 2 799 6 495 4 62 6 354 2 956 2 957 6 357 4 358 2 219 4 672 1 71 4 961 70 222 20 518 11 678 4 1118 4 681 4 235 6 973 62 974 4 976 2 374 4 375 4 692 4 537 4 250 4 389 4 101 4 555 2 109 14 1003 14 1004 4 112 2 1144 6 268 16 570 18 119 2 1158 4 408 4 409 20 574 4 123 10 575 10 411 6 128 4 420 10 734 2 1179 28 280 2 135 4 429 6 143 4 595 16 743 4 145 2 598 2 599 70 1041 6 900 4 156 2 903 2 445 4 309 4 310 4 1045 4 
171 4 794 2 406 2 313 2 119 2 409 6 616 2 574 2 799 2 411 2 918 2 692 2 1061 2 1062 2 537 2 420 2 1179 6 280 2 956 2 670 2 429 2 358 2 595 12 961 18 31 4 555 2 598 2 599 18 109 4 334 4 1003 4 156 2 518 2 903 2 195 6 477 2 445 2 235 2 1119 2 1090 2 973 16 
171 4 2 4 1048 2 4 2 616 6 374 2 375 2 918 2 692 2 774 2 1061 2 1062 2 537 2 185 2 323 2 24 2 31 4 555 2 35 2 109 6 334 4 1003 6 642 1 1084 2 195 12 647 2 403 2 198 2 1090 2 202 1 794 2 406 2 570 4 119 2 409 10 574 2 122 2 799 2 411 6 62 2 582 2 420 2 1179 10 280 2 135 2 956 2 957 4 429 2 358 2 595 4 961 24 599 32 598 4 1041 2 518 2 678 2 1118 2 445 2 681 2 235 1 1045 2 310 2 973 28 
171 2 313 2 119 2 409 2 616 2 450 2 411 2 918 2 1061 2 926 2 1179 4 501 2 280 2 956 2 386 2 358 2 595 4 961 10 31 2 555 2 598 2 599 12 109 4 334 2 1003 4 156 2 195 4 1090 2 973 12 
745 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (72,318) (72,318) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 253 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 141 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 141 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 141 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 141 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 141 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 107 398 360 387 31 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 49 187 259 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 49 187 259 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 49 187 259 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 49 187 259 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:memberOf(I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:noDups([I)Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.ValueTuple:size()I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ModBitTracker:split(I)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_56()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3R_134()Z
daikon.ModBitTracker:num_samples()I
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:eltsGT([II)Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:lexGTE([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:eltsLT([II)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern:intern([D)[D
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaCharStream:BeginToken()C
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([I)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:jj_3R_49()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaCharStream:FillBuff()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:lte(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_3R_50()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltsEqual([II)Z
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3R_85()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:internSubsequence([JII)[J | STATEMENT | 23714 | stmt -> ;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:indexOf([II)I | CONDITION | 13875 | if (x) -> if (!x)
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:concat([I[I)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:gt(II)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaCharStream:getEndColumn()I
jtb.JavaCharStream:backup(I)V
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([J)[J
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:memberOf(S[S)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_ntk()I
daikon.Quant:eltwiseGT([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_133()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_52()Z
daikon.ModBitTracker:num_sets()I
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap:size()I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3_16()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:memberOf(F[F)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:subsetOf([F[F)Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:memberOf(D[F)Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:union([I[I)[I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaCharStream:readChar()C
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:negate(I)I
daikon.Quant:setEqual([I[I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:lt(II)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:lexLTE([I[I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_163()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:eq(II)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_2_1(I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_58()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3R_51()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eq(DD)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:gte(II)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 37686 | 64 -> 0
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3R_162()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
154 2 39 2 71 2 72 2 279 2 105 4 251 2 318 2 210 2 
130 6 140 2 302 2 325 2 242 6 184 2 112 2 226 6 273 2 120 2 7 2 
297 6 345 2 267 6 312 4 16 6 72 2 397 6 230 2 188 2 220 4 96 2 318 2 203 2 
221 4 18 8 388 10 278 27 101 6 359 14 48 10 23 4 24 8 131 4 392 2 185 2 132 10 318 6 235 10 192 10 211 2 291 6 158 2 65 4 347 10 90 2 243 6 354 24 41 14 72 6 202 2 245 14 330 2 246 4 
102 6 367 4 
138 2 
175 2 332 2 356 2 349 4 205 2 306 2 393 2 93 2 165 2 170 2 383 2 341 2 
221 4 388 22 177 2 334 2 278 54 101 4 335 2 48 16 359 32 79 4 111 4 208 4 132 16 51 4 283 6 365 4 156 4 318 4 192 16 235 16 262 2 319 2 290 2 321 4 370 2 291 6 347 6 14 6 354 48 243 18 166 6 328 8 40 6 41 32 72 4 74 6 43 6 245 32 246 2 
129 2 356 2 110 2 
9 2 86 22 195 2 35 2 303 2 280 2 80 10 309 2 70 2 256 2 229 2 366 2 287 2 84 2 
128 2 388 2 278 6 101 2 48 2 359 2 109 2 282 2 132 2 255 2 192 2 235 2 237 2 8 2 347 4 38 2 326 2 196 2 243 2 354 4 41 2 245 2 246 2 
388 4 278 16 23 2 48 4 359 8 91 2 308 2 208 4 132 4 166 6 354 12 40 6 41 8 156 4 245 8 192 4 235 4 
322 2 315 2 201 2 236 2 2 2 
60 2 265 2 138 2 66 2 160 2 164 2 153 2 125 2 316 2 317 2 
342 2 1 2 293 2 253 2 
99 2 72 2 
155 2 72 4 390 2 
399 2 
97 2 296 4 98 20 100 2 104 4 300 20 106 2 305 2 207 2 311 2 114 2 314 56 117 2 119 2 121 56 122 2 10 8 123 12 217 20 218 20 127 2 329 2 331 20 223 16 337 2 26 2 339 16 133 16 227 2 134 4 135 2 232 2 30 2 239 6 238 2 344 4 33 2 348 2 241 10 351 2 37 2 144 2 353 2 148 20 150 8 358 2 249 4 248 4 250 6 252 20 361 2 364 20 53 2 52 2 55 2 59 2 263 10 61 2 266 2 371 2 374 2 161 2 162 2 67 20 375 16 270 4 69 2 167 2 272 4 168 2 274 2 379 2 169 2 384 2 75 6 385 2 173 2 277 32 179 2 180 6 182 2 389 2 394 2 285 4 81 2 286 20 189 2 289 20 403 4 194 2 405 2 89 4 294 10 407 18 295 2 200 4 409 56 95 2 410 2 
213 2 395 1 357 2 0 2 
357 2 276 2 
176 2 186 2 356 2 139 2 357 2 65 2 12 2 
357 2 12 2 323 2 
357 2 381 2 12 2 
213 2 219 2 340 2 
357 2 12 2 
340 2 171 2 
357 2 372 2 
213 2 340 2 94 2 
213 2 404 2 64 2 
213 2 244 2 215 2 
213 2 142 2 57 2 
213 2 327 2 355 2 
340 2 108 2 
78 2 357 2 
404 2 271 2 
113 2 215 2 
264 2 142 2 
363 2 327 2 
137 2 340 2 
327 2 116 2 
142 2 231 2 
215 2 350 2 
404 2 152 2 
213 2 340 2 292 2 94 2 
213 2 340 2 292 2 94 2 29 2 
225 2 213 2 340 2 
213 2 340 2 73 2 
44 2 11 2 47 2 17 2 
176 2 333 2 356 2 209 2 
176 2 333 2 310 2 356 2 139 2 209 2 
176 2 356 2 357 2 65 2 12 2 174 2 
20 2 214 2 
176 2 149 2 356 2 65 2 
62 2 142 2 
45 2 327 2 
76 2 404 2 
382 2 215 2 
25 2 327 2 215 2 
338 2 327 2 215 2 
327 2 215 2 281 2 
68 2 327 2 215 2 
77 2 176 2 356 2 151 2 118 2 320 6 36 6 197 2 
340 2 406 2 
212 2 204 4 368 2 86 6 369 2 63 2 21 2 299 2 22 2 34 2 301 2 304 2 269 2 254 2 376 2 396 4 172 2 234 2 
213 2 145 2 
222 2 
342 2 1 2 141 2 293 2 
342 2 1 2 141 2 293 2 
378 2 284 2 206 2 
378 2 284 2 206 2 
342 2 1 2 141 2 293 2 
342 2 1 2 141 2 293 2 
342 2 1 2 141 2 293 2 
181 2 360 2 107 2 228 2 257 2 398 2 317 1 260 2 233 2 193 2 31 2 324 2 92 2 125 1 146 2 72 4 387 2 
307 2 19 2 402 2 136 2 143 2 261 2 
163 2 268 2 247 2 3 2 313 2 391 2 136 2 
298 2 46 2 178 2 183 2 224 2 50 2 4 2 315 1 56 2 28 2 58 2 190 1 318 8 191 2 85 2 32 2 159 2 216 1 352 2 408 2 380 1 72 10 201 1 275 2 147 2 386 2 
221 2 278 17 359 6 48 6 362 2 132 6 5 2 365 2 156 2 400 2 82 2 288 2 318 6 235 6 192 6 291 4 87 2 124 2 14 4 166 4 354 12 199 2 328 2 126 2 72 6 41 6 245 6 
401 2 343 2 240 2 346 2 13 2 336 2 377 2 198 2 54 3 258 2 6 2 157 2 83 2 
401 2 343 2 103 1 240 2 346 2 373 2 13 2 336 2 377 2 198 2 54 6 72 1 258 2 42 2 6 2 157 2 83 4 318 1 
401 2 343 2 240 4 373 2 346 2 13 4 336 2 377 4 198 2 54 6 258 2 42 2 6 2 157 2 83 4 
401 2 343 2 103 1 240 8 373 8 346 2 13 8 336 2 377 8 198 2 54 10 72 1 258 2 42 6 6 2 157 2 83 4 318 1 
49 2 115 2 259 2 318 2 72 2 187 2 27 1 88 1 
187 2 115 2 72 2 259 2 318 2 49 2 
187 2 115 2 72 2 259 2 318 2 49 2 
187 2 115 2 72 2 259 2 318 2 49 2 
15 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 419 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 81 869 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 580 (442,898) 277 (127,365) (442,898) 329 (127,365) 706 904 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 580 (442,898) 277 (127,365) (442,898) 329 (127,365) 706 904 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 580 (442,898) 277 (127,365) (442,898) 329 (127,365) 706 904 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 580 (442,898) 277 (127,365) (442,898) 329 (127,365) 706 904 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V ERROR java.lang.reflect.InvocationTargetException 
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 841 120 341 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 886 603 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (139,593) (139,593) 88 491 306 237 400 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice2:arity()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaCharStream:BeginToken()C
daikon.ModBitTracker:num_samples()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:eltsGtIndex([I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:union([I[I)[I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(II)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice1:num_samples()I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:subsetOf([F[F)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGTE([II)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:setEqual([I[I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ModBitTracker:split(I)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.Quant:memberOf(F[D)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaCharStream:FillBuff()V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:sum([[D)D | STATEMENT | 9149 | stmt -> ;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Debug:logOn()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:Node()V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.InvMap:InvMap()V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:lexGT([I[I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(J[J)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE:pow(II)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfo:relate_var()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:lte(II)Z
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J | OPERATOR | 13933 | > -> <=
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Invariant:logOn()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5656 | = null
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:intern([D)[D
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern:intern([I)[I
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:gt(II)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.ProglangType:isScalar()Z
daikon.Quant:eltsLT([II)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:min([I)I
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE:pow_fast(II)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 5636 | = null
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration; | RETURN | 7701 | return null
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:ne(II)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:gte(II)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Invariant:justified()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1924 | return null
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf([J[J)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Debug:logDetail()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice1:arity()I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.PptSlice0:arity()I
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.Invariants:Invariants()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | ASSIGN | 35390 | = null
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:hashCode()I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
292 2 593 2 518 2 559 2 720 2 21 2 641 2 860 4 139 2 
0 2 538 2 45 2 2 2 828 6 817 6 135 6 332 2 793 2 574 2 170 2 
840 6 349 6 675 4 139 2 287 2 755 2 667 2 858 4 593 2 883 2 474 6 238 2 722 6 
398 2 810 2 109 10 284 2 59 16 60 2 589 4 139 6 731 8 145 2 593 6 317 10 176 2 93 16 511 6 122 10 409 10 327 10 572 8 266 4 41 26 417 29 218 6 660 2 824 16 739 4 367 8 745 8 426 12 22 4 
648 4 335 6 
32 2 
520 2 533 2 216 2 203 2 672 2 387 2 842 2 376 2 
134 4 463 6 462 6 109 16 810 2 59 32 700 2 728 8 560 6 139 4 563 6 506 6 593 4 317 16 34 4 93 32 178 4 122 16 511 4 409 6 327 16 798 4 657 2 572 6 266 2 600 2 41 48 417 54 128 6 218 4 661 4 544 2 824 32 609 2 367 18 426 22 495 4 86 2 523 4 
412 2 113 2 376 2 
382 2 482 2 285 2 215 22 385 2 169 10 487 2 140 2 733 2 436 2 207 2 262 2 764 2 359 2 
109 2 59 2 30 2 624 2 317 2 93 2 122 2 511 2 409 4 185 2 327 2 266 2 269 2 41 4 417 6 486 2 607 2 824 2 244 2 367 2 426 2 748 2 131 2 
327 4 109 4 59 8 90 2 41 12 560 6 417 16 589 2 824 8 650 2 506 6 426 4 317 4 93 8 178 4 122 4 523 4 
396 2 619 4 618 2 434 4 701 2 202 10 203 4 703 4 896 4 113 2 171 4 376 8 753 2 565 2 440 2 713 2 630 2 412 6 851 2 413 4 850 4 540 4 880 14 383 10 384 2 418 2 854 2 446 4 129 2 421 2 451 2 241 2 80 4 548 2 856 2 697 4 914 2 779 4 301 62 837 2 
726 2 529 2 77 2 419 2 422 2 307 2 32 2 507 2 454 2 694 2 197 2 
465 1 347 4 3 2 112 6 704 2 590 2 233 2 232 4 354 2 708 2 593 34 818 2 7 16 123 2 236 2 235 2 479 2 9 2 714 3 602 1 126 1 361 4 11 2 362 4 12 2 13 2 240 2 14 8 491 2 243 2 493 2 17 1 18 2 832 32 833 2 720 2 614 2 370 1 723 32 246 2 617 2 839 2 250 1 620 16 504 2 139 32 508 2 847 2 146 16 629 24 151 2 38 2 849 1 264 16 631 6 513 1 515 2 265 2 154 2 853 2 519 3 270 2 158 2 388 3 521 2 742 2 274 1 744 5 639 3 857 4 390 2 54 3 526 2 281 3 863 2 397 3 750 2 283 2 168 8 286 2 752 2 173 2 64 2 65 2 757 2 761 6 762 12 175 2 290 2 653 2 67 2 765 1 70 2 72 2 876 8 410 2 411 2 183 3 877 2 881 2 293 2 662 4 664 24 773 2 295 2 425 2 774 2 196 2 884 2 199 2 557 1 558 2 783 1 892 3 784 2 435 2 787 2 92 3 679 2 316 2 94 2 794 2 683 1 320 4 97 3 797 2 325 6 101 2 687 2 688 2 443 2 328 2 801 2 906 4 217 3 690 2 907 2 447 1 452 2 453 2 106 2 338 1 224 1 582 2 343 2 227 2 808 2 
585 2 593 2 
174 2 772 2 593 4 
710 2 
460 8 345 12 57 12 166 12 868 38 62 12 228 2 815 38 114 14 869 2 357 12 404 2 68 2 182 8 480 6 75 6 483 2 766 4 822 2 769 2 608 2 547 2 81 6 194 2 296 4 16 4 551 4 427 2 494 12 20 4 498 12 836 8 247 2 788 10 562 4 897 6 256 8 310 2 505 16 623 2 33 4 510 2 209 8 737 6 848 2 686 2 632 12 102 12 268 4 573 8 803 2 575 12 577 4 275 2 859 38 640 2 50 2 49 6 48 12 391 2 581 4 393 8 459 8 
100 2 82 2 809 1 138 2 
100 2 315 2 
739 2 282 2 100 2 642 2 819 2 376 2 861 2 
100 2 155 2 861 2 
100 2 226 2 861 2 
655 2 53 2 138 2 
100 2 861 2 
655 2 699 2 
100 2 821 2 
261 2 655 2 138 2 
676 2 439 2 138 2 
162 2 522 2 138 2 
424 2 438 2 138 2 
350 2 137 2 138 2 
655 2 279 2 
100 2 204 2 
676 2 408 2 
522 2 36 2 
424 2 455 2 
302 2 137 2 
655 2 918 2 
729 2 137 2 
424 2 69 2 
522 2 786 2 
676 2 251 2 
717 2 261 2 655 2 138 2 
334 2 717 2 261 2 655 2 138 2 
827 2 655 2 138 2 
634 2 655 2 138 2 
796 2 164 2 355 2 37 2 
98 2 299 2 819 2 376 2 
98 2 299 2 83 2 642 2 819 2 376 2 
739 2 100 2 819 2 376 2 861 2 161 2 
554 2 556 2 
739 2 819 2 376 2 512 2 
424 2 517 2 
147 2 137 2 
676 2 527 2 
522 2 771 2 
522 2 875 2 137 2 
472 2 522 2 137 2 
522 2 331 2 137 2 
522 2 711 2 137 2 
110 6 252 2 376 2 819 2 148 2 882 2 225 2 615 6 
655 2 569 2 
571 2 528 2 215 6 303 2 825 4 190 2 366 2 192 2 378 2 118 2 509 4 763 2 206 2 456 2 776 2 777 2 671 2 477 2 
363 2 138 2 
9 2 
586 2 347 2 112 4 588 2 704 2 233 2 593 26 818 2 123 2 235 2 596 2 479 2 361 4 362 2 12 2 240 2 14 2 491 2 832 6 720 2 723 4 246 2 617 2 620 6 139 26 844 2 508 2 849 2 631 6 853 2 154 4 158 2 521 2 742 2 857 4 390 2 526 6 58 2 751 2 286 2 752 2 761 2 760 2 762 8 653 2 177 2 70 2 539 2 658 2 662 4 295 2 425 2 195 2 196 2 884 2 782 2 558 2 89 4 784 2 674 2 787 2 792 4 794 2 901 2 320 2 325 2 101 2 688 2 799 2 905 2 906 4 453 2 224 2 343 2 
586 2 347 2 112 6 588 2 704 2 233 2 593 26 818 2 123 2 235 2 596 2 479 2 361 4 362 2 12 2 240 2 14 2 491 2 493 2 832 6 720 2 613 2 723 4 246 2 617 2 620 6 139 26 844 2 508 2 847 2 849 2 631 6 853 2 154 4 158 2 521 2 742 2 857 4 390 2 526 6 58 2 751 2 286 2 752 2 761 2 760 2 762 8 653 2 177 2 70 2 539 2 658 2 662 4 295 2 425 2 195 2 196 2 884 2 558 2 89 4 784 2 787 2 792 4 794 2 901 2 320 2 326 2 325 2 101 2 443 2 688 2 799 2 906 4 453 2 224 2 915 2 343 2 
0 2 111 4 756 4 117 2 706 2 817 6 653 2 593 12 405 8 709 2 121 2 123 2 656 2 181 2 538 4 291 4 184 2 76 2 361 2 127 2 823 8 423 2 365 2 490 4 828 6 716 2 295 2 297 2 884 2 135 6 502 2 139 6 791 2 143 2 379 10 144 2 626 2 35 2 793 4 631 4 101 2 442 2 904 2 329 2 853 2 633 2 332 2 635 4 158 2 908 4 450 2 637 2 638 2 693 2 336 2 46 2 857 2 746 2 342 2 643 2 
0 2 111 4 170 2 756 4 117 2 706 2 817 8 653 2 593 12 405 8 121 2 123 2 656 2 181 2 538 4 184 2 291 4 597 2 76 2 361 2 127 2 823 8 423 2 365 2 490 4 828 6 716 2 15 4 295 2 297 2 721 2 884 2 135 8 502 2 139 6 791 2 379 10 144 2 626 2 35 2 793 4 631 4 101 2 442 2 904 2 329 2 853 2 633 2 332 2 635 4 158 2 450 2 908 4 637 2 638 2 693 2 46 2 336 2 857 2 746 2 342 2 643 2 
538 2 291 4 135 2 904 2 633 2 502 2 365 2 450 2 908 4 638 2 756 2 117 2 828 2 706 2 336 2 297 2 793 2 643 2 
111 4 170 2 756 4 117 2 706 2 817 6 653 2 593 12 405 4 709 2 121 2 123 2 656 2 181 2 538 4 291 4 184 2 76 2 361 2 127 2 823 4 423 2 365 2 490 4 828 4 716 2 295 2 297 2 884 2 135 6 502 2 139 6 791 2 143 2 379 6 144 2 626 2 35 2 793 4 631 4 101 2 442 2 904 2 329 2 853 2 633 2 332 2 635 4 158 2 908 4 450 2 637 2 638 2 693 2 336 2 46 2 857 2 746 2 342 2 643 2 
111 4 756 4 117 2 706 2 817 6 653 2 593 12 405 4 709 2 121 2 123 2 656 2 181 2 538 4 291 4 184 2 76 2 361 2 127 2 823 4 423 2 365 2 490 4 828 6 716 2 295 2 297 2 884 2 135 4 502 2 139 6 791 2 143 2 379 6 144 2 626 2 35 2 793 4 631 4 101 2 442 2 904 2 329 2 853 2 633 2 332 2 635 4 158 2 908 4 450 2 637 2 45 2 638 2 693 2 336 2 46 2 857 2 746 2 342 2 643 2 
0 2 111 4 756 4 117 2 706 2 817 6 653 2 593 12 405 8 709 2 121 2 123 2 656 2 181 2 538 4 291 4 184 2 76 2 361 2 127 2 823 4 423 2 365 2 490 4 828 6 716 2 295 2 297 2 884 2 135 6 502 2 139 6 791 2 143 2 379 6 144 2 626 2 35 2 793 4 631 4 101 2 442 2 904 2 329 2 853 2 633 2 332 2 635 4 158 2 908 4 450 2 637 2 638 2 693 2 336 2 46 2 857 2 746 2 342 2 643 2 
0 2 111 4 756 4 117 2 706 2 817 8 653 2 593 12 405 8 709 2 121 2 123 2 656 2 181 2 538 4 291 4 184 2 76 2 361 2 127 2 823 8 423 2 365 2 490 4 828 8 716 2 295 2 297 2 884 2 135 6 502 2 139 6 791 2 143 2 379 10 144 2 626 2 35 2 793 4 631 4 101 2 442 2 904 2 329 2 853 2 633 2 332 2 635 4 158 2 908 4 450 2 637 2 45 2 638 2 693 2 336 2 46 2 857 2 746 2 342 2 643 2 
0 2 111 4 756 4 117 2 706 2 817 6 653 2 593 12 405 8 709 2 121 2 123 2 656 2 181 2 538 4 291 4 184 2 76 2 361 2 127 2 823 8 423 2 365 2 490 4 828 6 716 2 295 2 297 2 884 2 135 6 502 2 139 6 791 2 143 2 379 10 144 2 626 2 35 2 793 4 631 4 101 2 442 2 904 2 329 2 853 2 633 2 332 2 635 4 158 2 908 4 450 2 637 2 638 2 693 2 336 2 46 2 857 2 746 2 342 2 643 2 
585 4 586 2 347 2 111 8 112 6 116 4 468 8 117 2 706 2 817 12 233 2 593 40 818 2 709 2 710 4 121 2 123 2 479 2 360 2 239 4 361 4 127 2 362 2 12 2 605 2 240 2 365 2 490 6 14 2 491 2 828 8 716 2 492 2 718 2 832 8 720 2 835 2 25 2 132 2 723 2 249 2 135 4 620 6 28 4 502 2 139 22 843 4 255 2 844 2 845 2 622 2 508 2 847 2 144 2 380 4 626 2 631 6 39 2 853 2 633 2 635 4 43 4 158 2 637 2 45 4 521 2 638 2 742 2 276 2 46 2 857 4 277 2 746 2 390 2 278 4 643 2 525 2 526 6 751 2 867 2 646 2 286 10 752 2 647 2 174 4 756 4 532 4 761 2 759 2 762 4 653 2 405 2 656 2 71 2 181 2 538 4 184 2 291 4 879 1 76 2 767 2 420 2 423 2 662 4 546 2 294 2 193 4 425 2 295 2 196 2 297 2 298 1 887 1 778 4 884 2 431 1 893 2 894 2 787 2 309 7 898 2 677 4 792 4 793 4 901 2 320 2 95 2 684 4 570 4 99 2 325 2 101 2 442 2 904 2 329 2 443 2 906 4 332 4 804 1 805 8 450 2 908 4 453 2 693 2 578 1 336 2 221 1 910 1 912 7 698 2 580 2 342 2 917 1 108 4 
0 4 585 4 586 2 347 4 111 8 112 6 116 4 468 8 117 2 706 2 817 12 233 2 593 40 818 2 709 2 710 4 121 2 123 2 479 2 360 2 239 4 361 4 127 2 362 4 12 2 605 2 240 2 365 2 490 6 14 2 491 2 828 8 716 2 492 2 718 2 832 8 720 2 835 2 25 2 132 2 723 2 249 2 135 8 620 6 28 4 502 2 139 22 843 4 255 2 844 2 845 2 622 2 508 2 847 2 144 2 380 4 626 2 631 6 39 2 853 2 633 2 635 4 43 4 158 2 637 2 521 2 638 2 742 2 276 2 46 2 857 4 277 2 746 2 390 2 278 4 643 2 525 2 526 6 751 2 867 2 646 2 286 10 752 2 647 2 174 4 756 4 532 4 761 2 759 2 762 6 653 2 405 6 656 2 71 2 181 2 538 4 184 2 291 4 76 2 767 2 420 2 423 2 662 4 546 2 294 2 193 4 425 2 295 2 196 2 297 2 778 4 884 2 893 2 894 2 787 2 898 2 677 4 792 4 793 4 901 2 320 4 95 2 684 4 570 4 99 2 325 2 101 2 442 2 904 2 329 2 443 2 906 4 332 4 805 8 450 2 908 4 453 2 693 2 336 2 698 2 580 2 342 2 108 4 
0 4 585 4 586 2 347 4 111 8 112 6 116 4 468 8 117 2 706 2 233 2 817 12 593 40 818 2 709 2 710 4 121 2 123 2 479 2 360 2 239 4 361 4 127 2 362 4 12 2 823 4 605 2 240 2 365 2 490 6 14 2 491 2 828 8 716 2 492 2 718 2 832 8 720 2 835 2 25 2 132 2 723 2 249 2 135 8 620 6 28 4 502 2 139 22 843 4 255 2 844 2 845 2 622 2 508 2 847 2 379 4 144 2 380 4 626 2 631 6 39 2 853 2 633 2 635 4 43 4 158 2 637 2 521 2 638 2 742 2 276 2 46 2 857 4 277 2 746 2 390 2 278 4 643 2 525 2 526 6 751 2 867 2 646 2 286 10 752 2 647 2 174 4 756 4 532 4 761 2 759 2 762 6 653 2 405 6 656 2 71 2 181 2 538 4 184 2 291 4 76 2 767 2 420 2 423 2 662 4 546 2 294 2 193 4 425 2 295 2 196 2 297 2 778 4 884 2 893 2 894 2 787 2 898 2 677 4 792 4 793 4 901 2 320 4 95 2 684 4 570 4 99 2 325 2 101 2 442 2 904 2 329 2 443 2 906 4 332 4 805 8 450 2 908 4 453 2 693 2 336 2 698 2 580 2 342 2 108 4 
0 4 585 4 586 2 347 4 111 8 112 6 468 6 116 4 117 2 706 2 233 2 817 16 593 38 818 2 709 2 710 4 6 2 121 2 123 2 479 2 239 4 361 4 127 2 362 4 12 2 823 4 605 2 240 2 365 2 490 6 14 2 491 2 828 10 716 2 492 2 718 2 832 12 720 2 835 2 25 2 132 2 723 4 249 2 135 10 620 8 28 4 502 2 139 20 843 4 255 2 844 2 141 2 845 2 622 2 508 2 847 2 379 4 144 2 380 4 626 2 631 6 39 2 853 2 40 2 633 2 635 4 43 4 158 2 637 2 45 2 521 2 638 2 742 2 276 2 46 2 857 4 277 2 746 2 390 2 278 4 643 2 525 2 526 8 751 2 867 2 646 2 286 8 752 2 170 2 647 2 174 4 756 4 532 4 761 4 759 2 762 6 653 2 405 6 656 2 71 2 181 2 538 4 184 2 291 4 76 2 767 2 420 2 423 2 662 4 546 2 294 2 193 4 668 2 425 2 295 2 297 2 196 2 778 4 884 2 781 2 893 2 894 2 787 2 898 2 677 4 792 6 793 4 901 2 320 4 95 2 684 4 570 4 99 2 325 4 101 2 442 2 904 2 329 2 443 2 906 4 332 4 805 8 450 2 908 4 453 2 693 2 220 2 336 2 698 2 580 2 342 2 108 4 
0 2 135 6 111 2 502 2 117 2 817 4 379 4 593 4 709 2 626 2 405 6 793 4 121 2 181 2 538 4 184 2 291 2 76 2 633 2 332 2 635 2 823 4 423 2 490 2 637 2 450 2 908 2 693 2 828 6 46 2 336 2 746 2 297 2 342 2 643 2 
0 2 466 3 111 2 112 6 468 2 117 2 817 4 233 2 593 28 709 2 818 2 121 2 123 2 479 2 9 2 360 2 361 4 12 2 240 2 490 2 491 2 828 6 832 8 720 2 723 3 135 6 620 6 621 2 502 2 139 24 844 2 508 2 847 2 144 2 379 2 626 2 153 2 631 6 853 2 633 2 635 2 158 2 637 2 742 2 46 2 857 4 746 2 390 2 643 2 526 6 864 2 751 2 286 4 752 2 173 2 761 3 653 2 405 6 181 2 538 4 291 2 184 2 76 2 188 2 423 2 662 4 295 2 425 2 196 2 297 2 884 2 199 2 787 2 205 2 792 4 793 4 901 2 325 3 101 2 443 2 906 4 332 2 690 2 908 2 450 2 453 2 693 2 336 2 342 2 
601 2 746 2 121 2 
601 2 746 2 121 2 
1 2 0 4 347 4 111 4 112 6 230 2 469 2 468 2 706 2 233 2 817 16 593 24 121 6 123 2 125 4 479 2 601 2 361 4 127 2 362 4 12 2 484 2 823 4 240 2 365 2 490 4 491 2 828 12 716 4 718 2 832 2 720 2 723 2 135 12 372 2 620 2 139 16 844 6 622 2 508 2 847 2 734 2 379 6 263 2 631 6 853 2 633 2 635 2 158 2 44 2 637 2 45 4 521 4 742 2 857 4 277 2 746 4 390 2 55 2 526 2 751 2 646 2 286 4 752 2 170 4 871 2 872 2 756 4 762 4 653 2 405 6 179 2 656 2 538 4 291 2 423 2 662 4 295 2 425 2 195 4 196 2 297 4 198 2 778 2 884 2 787 2 677 2 791 2 437 2 793 4 319 4 901 2 320 4 101 2 329 2 443 2 906 4 332 4 448 2 908 2 105 2 453 2 336 2 579 2 
638 2 267 2 580 2 681 2 659 2 
1 2 0 4 347 4 111 4 112 6 469 2 234 2 706 2 233 2 817 16 593 24 121 6 123 2 125 4 479 2 601 2 361 4 127 2 362 4 12 2 484 2 823 4 240 2 365 2 490 4 491 2 828 12 716 4 832 2 720 2 723 4 135 12 620 2 139 16 844 6 622 2 508 2 847 2 734 2 379 6 35 2 263 2 631 6 853 2 633 2 635 2 158 2 44 2 637 2 45 4 521 4 742 2 857 4 277 2 746 4 390 2 55 2 526 2 751 2 646 2 286 2 752 2 170 4 871 2 756 4 762 4 653 2 405 6 179 2 656 4 538 4 291 2 423 2 662 4 549 2 295 2 425 2 195 4 196 2 297 4 198 4 778 2 884 2 553 2 787 2 677 2 791 2 437 2 793 4 319 4 901 2 320 4 101 2 329 2 443 2 906 4 332 4 908 2 104 2 105 2 453 2 336 2 579 2 340 2 
1 2 0 4 347 4 111 4 112 6 115 2 469 2 468 2 706 2 233 2 817 16 593 24 121 6 123 2 125 4 479 2 601 2 361 4 127 2 362 4 12 2 484 2 823 4 240 2 489 2 365 2 490 4 491 2 828 12 716 4 718 2 832 2 720 2 496 2 723 2 135 12 620 2 139 16 844 6 622 2 508 2 847 2 734 2 379 6 35 2 263 2 631 6 853 2 633 2 635 2 158 2 44 2 637 2 45 4 521 4 742 2 857 4 277 2 746 4 390 2 394 2 55 2 526 2 751 2 646 2 286 4 752 2 170 4 871 2 756 4 762 4 653 2 405 6 179 2 656 4 538 4 291 2 423 2 662 4 666 2 295 2 425 2 195 4 196 2 297 4 198 2 778 2 884 2 787 2 677 2 791 2 437 2 793 4 319 4 901 2 320 4 101 2 329 2 443 2 906 4 332 4 908 2 105 2 453 2 336 2 579 2 
526 6 645 2 751 2 867 2 348 2 812 2 286 2 112 2 752 2 530 2 233 2 66 2 761 2 759 2 119 2 653 2 593 24 818 2 120 2 123 2 180 2 537 2 124 1 361 4 488 2 364 2 240 2 662 2 546 2 491 2 425 2 295 2 832 8 720 2 84 2 884 2 723 2 249 2 727 2 501 2 620 6 374 2 841 2 787 2 139 18 255 2 31 2 844 2 732 4 313 2 846 2 625 1 792 4 736 2 322 2 99 2 325 2 631 6 101 2 853 2 906 2 802 2 158 2 740 2 453 2 742 2 857 4 390 2 341 2 
890 2 526 2 586 6 620 2 813 2 702 2 814 2 139 2 231 2 288 4 761 3 356 3 564 2 593 2 818 2 792 2 325 3 441 2 481 2 604 2 770 2 552 1 832 2 222 2 723 3 
526 2 890 2 441 2 325 2 586 6 481 2 620 2 813 2 814 2 702 2 604 2 770 2 139 2 288 4 231 2 564 2 356 2 761 2 593 2 222 2 818 2 832 2 792 2 723 2 
526 2 890 2 441 2 325 2 586 6 481 2 620 2 813 2 814 2 702 2 604 2 770 2 139 2 288 4 231 2 564 2 356 2 761 2 593 2 222 2 818 2 832 2 792 2 723 2 
109 2 866 2 59 2 289 3 758 4 761 3 593 10 818 2 7 2 122 2 8 2 543 6 417 6 824 2 832 2 19 2 85 2 300 2 723 3 890 2 139 4 790 2 311 4 317 2 93 2 900 3 321 2 902 2 264 2 327 2 903 4 572 4 156 4 41 4 218 2 692 2 741 4 223 2 807 3 583 2 
810 2 109 2 866 2 59 2 289 2 758 4 761 2 593 10 818 2 7 2 122 2 8 2 543 6 417 4 824 2 367 2 426 2 832 2 19 2 85 2 300 2 723 2 890 2 139 4 790 2 311 4 317 2 93 2 900 2 321 2 902 2 264 2 327 2 903 4 572 4 156 4 41 4 218 2 692 2 741 4 223 2 807 2 583 2 
810 2 109 2 866 2 59 2 289 2 758 4 761 2 593 10 818 2 7 2 122 2 8 2 543 6 417 4 824 2 367 2 426 2 832 2 19 2 85 2 300 2 723 2 890 2 139 4 790 2 311 4 317 2 93 2 900 2 321 2 902 2 264 2 327 2 903 4 572 4 156 4 41 4 218 2 692 2 741 4 223 2 807 2 583 2 
810 2 109 2 866 2 59 2 289 2 758 4 761 2 593 10 818 2 7 2 122 2 8 2 543 6 417 4 824 2 367 2 426 2 832 2 19 2 85 2 300 2 723 2 890 2 139 4 790 2 311 4 317 2 93 2 900 2 321 2 902 2 264 2 327 2 903 4 572 4 156 4 41 4 218 2 692 2 741 4 223 2 807 2 583 2 
810 4 109 2 866 2 59 2 289 2 758 4 761 2 593 10 818 2 7 2 122 2 8 2 543 6 417 4 824 2 367 4 426 4 832 2 19 2 85 2 300 2 723 2 890 2 139 4 790 2 311 4 317 2 93 2 900 2 321 2 902 2 264 2 327 2 903 4 572 4 156 4 41 4 218 2 692 2 741 4 223 2 807 2 583 2 
152 2 253 2 603 2 886 2 536 2 
539 2 816 2 407 2 24 2 536 2 919 2 381 2 
865 2 165 1 201 2 28 2 139 8 63 2 705 1 531 2 565 1 534 2 593 10 707 2 682 2 149 2 150 2 101 2 685 2 157 2 384 1 576 1 189 2 191 2 242 2 51 2 23 2 133 2 
462 4 584 2 464 2 109 6 810 2 59 6 728 2 560 4 139 6 870 2 649 2 258 2 593 6 317 6 93 6 122 6 212 2 327 6 572 4 41 12 417 16 768 2 218 2 661 2 636 2 824 6 367 2 426 3 719 2 523 2 
323 2 903 2 542 2 444 2 103 7 139 1 730 2 741 2 826 2 311 2 401 2 743 2 899 2 593 1 550 2 834 1 885 2 916 4 
323 2 903 2 542 4 444 2 103 6 730 4 741 2 826 2 311 2 401 2 743 2 899 2 550 4 885 2 916 4 
323 2 903 2 542 8 444 8 103 10 139 1 730 8 741 2 826 6 311 2 401 2 743 2 899 2 593 1 550 8 834 1 885 2 916 4 
323 2 903 2 542 2 103 2 730 2 741 2 311 2 401 2 743 2 899 2 550 2 885 2 916 2 
461 26 587 6 811 4 112 248 467 16 351 8 5 4 352 12 470 6 471 6 593 150 594 2 473 2 595 4 712 92 237 2 478 4 598 4 599 2 715 16 491 8 130 16 610 4 829 4 612 4 369 10 497 2 499 10 371 6 245 2 616 4 248 42 725 6 838 2 27 36 29 8 375 6 503 6 136 6 139 134 257 18 142 42 847 58 260 4 627 6 628 4 514 4 516 24 855 4 42 2 738 10 271 2 742 14 389 6 47 2 392 17 280 4 749 4 862 84 163 16 56 10 167 26 61 6 400 2 754 4 651 6 403 4 874 2 406 2 654 6 535 4 73 34 878 18 186 24 541 11 414 8 415 6 416 10 187 6 78 24 79 2 545 24 662 88 663 4 665 6 670 8 428 6 889 1 200 6 555 8 87 2 891 4 430 6 88 24 673 4 433 124 895 6 785 10 787 14 561 8 789 6 305 2 306 2 312 10 314 6 680 50 318 90 567 4 795 10 96 5 211 8 213 12 324 8 214 4 443 58 689 4 330 6 906 112 445 8 333 8 806 22 909 4 911 2 696 90 339 28 457 2 913 2 458 24 
395 2 644 2 163 4 344 4 56 2 346 2 4 2 61 2 399 2 400 2 112 44 229 2 351 2 873 2 652 4 591 2 470 2 592 2 593 46 358 2 476 2 237 2 186 2 599 2 820 2 415 2 416 2 715 4 485 2 606 2 662 20 491 2 130 4 669 2 368 2 611 2 612 2 369 2 775 4 888 4 26 2 499 2 780 2 500 2 200 2 429 2 725 4 27 2 88 2 432 2 433 6 29 2 785 2 136 2 787 2 561 2 139 44 377 2 304 2 306 2 308 2 257 2 312 2 259 2 678 2 847 2 566 2 735 2 795 2 208 6 96 2 568 2 211 6 514 2 443 2 906 20 445 2 738 2 691 2 449 2 742 2 389 2 695 2 747 2 339 38 160 2 392 2 913 2 458 2 52 2 107 2 524 2 
587 4 811 4 4 10 112 104 467 8 351 2 352 14 353 8 470 4 593 78 471 4 595 4 475 2 712 24 476 2 237 2 478 4 10 32 599 2 715 10 491 2 610 4 130 10 831 8 830 4 371 4 499 4 245 2 724 4 616 4 248 8 725 2 838 2 27 6 373 2 29 2 375 4 136 4 254 2 139 70 257 10 259 2 142 16 847 30 260 4 628 4 852 4 386 8 738 6 742 6 272 2 273 16 389 4 47 2 159 8 392 10 395 2 862 24 163 10 61 4 400 2 172 4 651 4 403 2 402 2 654 4 73 30 74 4 415 4 416 4 187 4 545 8 662 36 665 4 428 4 200 4 555 4 429 10 87 2 430 4 673 4 433 24 895 4 785 4 91 16 787 6 561 2 789 4 304 2 306 2 314 4 680 8 567 4 795 4 210 2 211 6 324 4 214 4 689 4 443 28 330 4 800 4 906 44 691 10 219 4 909 4 339 14 
395 2 163 6 61 4 400 2 112 40 467 6 754 2 351 2 403 2 470 4 593 28 594 2 237 2 73 6 541 2 414 2 599 2 415 4 416 2 715 6 485 2 79 2 662 14 491 2 610 2 130 6 497 2 499 2 200 4 725 2 891 2 27 2 433 8 29 2 785 2 787 2 136 4 561 2 139 26 306 2 257 2 259 2 847 12 795 2 96 2 211 4 324 4 443 12 689 2 906 14 738 2 42 2 806 10 742 2 389 4 911 2 339 14 392 2 913 2 
337 2 

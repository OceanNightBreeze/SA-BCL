#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 738 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 171 142 652 456 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 197 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.Error 201 136 745 468 96 639 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V FAILED junit.framework.AssertionFailedError 
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 273 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 508 339 414 784 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 339 414 784 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 508 412 339 414 784 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 508 508 508 508 339 414 784 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3_16()Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22110 | stmt -> ;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptSlice1:num_samples()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap:size()I
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaCharStream:ReadByte()C
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:sameLength([I[I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus; | RETURN | 17563 | return null
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaCharStream:backup(I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 21839 | = null
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_ntk()I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:setDiff([I[I)[I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ValueTuple:size()I
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(I[I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.Token:newToken(I)Ljtb.Token;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:memberOf(F[F)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsGT([II)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.Invariant:logOn()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eltsGTE([II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:sum([I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6323 | = null
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_sets()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_2(J)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.Ppt:Ppt()V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.RootNode:RootNode()V
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:intersection([I[I)[I
daikon.PptSlice0:arity()I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLT([I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:eltwiseEqual([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakHasherMap:processQueue()V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName:hashCode()I
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:lt(II)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ModBitTracker:num_samples()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.Invariant:getConfidence()D
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.ProglangType:format()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan; | RETURN | 1528 | return null
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.Invariants:Invariants()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.InvMap:InvMap()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:size()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7917 | 3 -> 1
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.Quant:eq(DD)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:GetSuffix(I)[C
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:dimensions()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 64304 | return null
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:slice([III)[I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:isScalar()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.Debug:logOn()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:negate(I)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.PptSlice2:arity()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:concat([I[I)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:gt(II)Z
daikon.Quant:eltsEqual([II)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:element_range([I)I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String; | RETURN | 23802 | return null
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:eq(FF)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:gte(II)Z
daikon.inv.Invariant:logDetail()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:lte(II)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.JavaCharStream:getEndLine()I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:memberOf(S[S)Z
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_2()I
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:ne(II)Z
daikon.Quant:memberOf(D[F)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
692 2 268 2 685 2 454 2 228 2 176 2 464 4 187 2 78 2 
360 2 402 2 442 6 271 2 293 2 58 2 594 6 328 2 33 6 215 2 312 2 
685 2 445 4 40 4 405 2 737 2 748 2 268 2 54 6 606 6 322 6 537 2 444 2 420 6 
219 2 654 8 482 16 761 6 70 4 72 2 793 30 410 8 616 12 617 16 195 2 104 2 514 6 279 10 620 2 231 10 685 6 366 8 112 10 282 8 346 16 802 4 425 26 116 2 372 4 268 6 350 10 244 10 809 4 20 2 
757 6 159 4 
407 2 
401 2 562 2 482 2 315 2 761 2 52 2 793 6 410 2 616 2 617 2 227 2 279 2 231 2 112 2 346 2 802 2 425 4 306 2 350 2 42 2 610 2 244 4 247 2 
79 2 112 4 346 8 482 8 99 2 425 12 793 14 350 4 616 5 617 8 31 4 353 4 809 2 279 4 466 6 231 4 323 6 
598 2 775 2 706 2 579 2 16 2 738 2 564 2 145 6 739 2 396 2 490 2 150 2 539 2 595 2 232 4 384 2 
433 2 314 2 407 2 276 2 5 2 659 2 173 2 750 2 242 2 733 2 
756 2 157 2 613 2 224 2 710 2 225 2 228 2 618 4 7 2 362 2 769 2 620 2 232 2 280 2 666 2 371 2 18 2 782 2 378 2 183 2 589 2 28 4 440 4 138 2 683 2 492 2 345 2 685 4 687 2 38 2 746 2 602 2 603 2 556 2 691 2 268 4 206 2 269 2 607 2 751 2 649 2 395 2 651 4 399 2 
630 4 334 6 482 32 761 4 132 2 97 2 380 6 793 54 275 6 616 22 410 18 617 32 31 4 75 2 514 4 415 4 279 16 466 6 231 16 323 6 685 4 366 6 112 16 346 32 802 2 114 2 721 2 238 8 425 48 518 2 268 4 350 16 778 6 63 4 353 4 244 6 20 2 180 4 49 4 
396 2 738 2 232 2 
67 2 335 10 38 2 484 2 634 2 267 2 74 2 6 2 9 2 361 2 611 2 287 22 398 2 125 2 
699 2 313 2 703 6 223 4 317 2 95 2 614 3 320 2 511 1 321 2 712 1 230 2 11 2 418 2 623 2 719 2 113 2 15 2 624 1 521 1 243 2 524 2 330 2 730 1 430 2 735 2 135 4 635 1 636 2 253 2 258 3 260 2 261 3 541 6 543 2 545 2 264 6 447 4 642 2 554 2 555 2 266 2 268 30 351 2 647 2 352 2 752 2 47 2 354 4 155 1 452 4 758 2 457 2 458 1 459 11 461 1 768 6 166 12 661 2 662 1 572 1 573 6 368 2 575 2 776 2 172 2 374 11 286 3 584 2 477 2 785 1 478 2 181 2 291 1 481 1 790 2 295 1 297 2 189 17 381 1 681 6 795 1 76 2 196 2 383 2 797 1 78 2 685 32 600 2 599 2 688 2 83 2 601 2 392 3 497 5 307 6 89 1 500 2 210 6 
646 2 
581 2 685 2 
685 4 674 2 160 2 
504 2 759 6 456 2 356 2 220 36 51 8 762 8 567 2 359 2 101 4 658 2 413 2 8 2 467 2 110 2 421 2 422 2 111 2 324 2 364 4 233 2 367 2 423 6 665 2 578 2 370 2 14 2 60 6 326 36 171 8 327 10 667 2 471 8 117 14 520 2 427 6 118 2 780 2 583 2 529 4 288 6 178 2 379 4 337 6 292 2 24 2 294 4 486 4 638 2 299 2 341 2 137 8 443 6 257 6 302 2 200 6 141 6 387 2 641 2 37 6 142 4 389 4 347 2 495 4 144 2 803 8 148 2 45 36 652 2 697 4 
55 2 336 2 134 2 186 1 
718 2 134 2 
789 2 705 2 708 2 204 2 690 4 709 2 146 2 30 2 513 2 285 2 43 2 255 2 766 2 287 6 767 2 781 2 501 4 344 2 
55 2 203 2 
700 2 653 2 391 2 232 2 
700 2 487 2 229 2 653 2 391 2 232 2 
700 2 192 2 174 2 232 2 134 2 372 2 
603 2 450 2 
700 2 530 2 232 2 372 2 
218 2 740 2 
248 2 358 2 
716 2 19 2 
656 2 48 2 
332 2 358 2 656 2 
455 2 358 2 656 2 
622 2 656 2 358 2 
25 2 656 2 358 2 
700 2 403 2 27 2 679 2 568 6 232 2 605 6 44 2 
788 2 526 2 
329 2 700 2 487 2 192 2 232 2 134 2 372 2 
355 2 192 2 134 2 
192 2 134 2 419 2 
55 2 788 2 680 2 
192 2 134 2 
788 2 657 2 
550 2 134 2 
55 2 788 2 707 2 
197 2 
55 2 551 2 656 2 
55 2 740 2 580 2 
55 2 296 2 358 2 
788 2 338 2 
211 2 134 2 
716 2 794 2 
426 2 656 2 
740 2 363 2 
358 2 153 2 
788 2 316 2 
517 2 358 2 
494 2 740 2 
656 2 596 2 
716 2 397 2 
55 2 788 2 787 2 707 2 
55 2 788 2 787 2 105 2 707 2 
55 2 788 2 509 2 
55 2 788 2 439 2 
184 2 806 2 582 2 441 2 
599 2 
0 2 502 2 703 4 2 2 223 4 317 2 321 2 230 2 619 2 418 2 515 2 719 2 113 2 234 2 15 2 624 2 236 2 240 2 524 2 330 2 730 2 731 2 253 2 741 2 259 2 545 2 264 2 447 4 348 2 552 2 554 6 266 2 268 26 351 2 647 2 451 2 354 4 452 4 457 2 763 2 161 2 569 2 166 6 663 2 661 2 573 2 368 2 62 4 672 2 584 2 478 2 586 2 675 2 590 2 189 4 681 6 382 2 76 8 196 2 383 2 799 2 78 2 80 2 685 26 688 2 83 2 601 2 689 2 307 6 609 2 500 2 209 2 214 4 216 4 
0 2 502 2 703 5 2 2 223 4 317 2 320 1 512 2 321 2 230 2 619 2 418 2 515 2 719 2 113 2 234 2 15 2 624 2 236 2 240 2 428 2 524 2 121 2 330 2 730 2 731 2 253 2 741 2 34 2 259 2 545 2 264 2 447 4 348 2 552 2 554 6 266 2 268 26 351 2 647 2 47 1 451 2 354 4 452 4 457 2 763 2 569 2 166 6 661 2 573 2 368 2 62 4 672 2 584 2 478 2 586 2 675 2 590 2 189 4 681 6 382 2 76 8 196 2 383 2 799 2 78 2 80 2 685 26 688 2 83 2 601 2 307 6 609 2 500 2 209 2 214 4 216 4 
59 2 
742 2 470 2 
560 2 92 2 452 2 760 8 223 2 317 2 357 4 457 2 460 2 277 2 463 2 278 2 418 2 12 2 325 4 58 4 15 2 17 2 473 2 668 2 175 2 727 4 330 2 627 2 626 2 476 2 783 2 531 2 127 2 179 2 182 2 23 10 293 2 587 2 437 2 133 2 792 4 193 2 442 6 594 6 199 2 33 6 81 2 685 12 546 4 83 2 265 2 205 8 393 2 268 6 351 2 307 4 310 2 650 2 46 2 808 4 213 2 154 2 312 4 215 2 
92 2 452 2 223 2 760 8 317 2 357 4 457 2 460 2 277 2 360 2 463 2 278 2 418 2 12 2 325 4 58 4 15 2 17 2 473 2 668 2 175 2 727 4 330 2 627 2 626 2 476 2 783 2 531 2 127 2 179 2 182 2 23 10 293 2 587 2 437 2 133 2 792 4 190 4 193 2 442 6 594 8 199 2 33 8 81 2 685 12 304 2 546 4 83 2 265 2 205 8 268 6 393 2 351 2 307 4 207 2 650 2 46 2 808 4 213 2 154 2 312 4 215 2 
325 4 546 4 58 2 265 2 133 2 792 2 460 2 473 2 393 2 175 2 442 2 46 2 783 2 594 2 154 2 199 2 312 2 12 2 
560 2 92 2 452 2 760 4 223 2 317 2 357 4 457 2 460 2 277 2 360 2 463 2 278 2 418 2 12 2 325 4 58 4 15 2 17 2 473 2 668 2 175 2 727 4 330 2 627 2 626 2 476 2 783 2 531 2 127 2 179 2 182 2 23 6 293 2 587 2 437 2 133 2 792 4 193 2 442 4 594 6 199 2 33 6 81 2 685 12 546 4 83 2 265 2 205 4 393 2 268 6 351 2 307 4 310 2 650 2 46 2 808 4 213 2 154 2 312 4 
560 2 92 2 452 2 760 4 223 2 317 2 357 4 457 2 460 2 277 2 463 2 278 2 418 2 12 2 325 4 58 4 15 2 17 2 473 2 668 2 175 2 727 4 330 2 627 2 626 2 476 2 783 2 531 2 127 2 179 2 182 2 23 6 293 2 587 2 437 2 133 2 792 4 193 2 442 6 594 4 199 2 33 6 81 2 685 12 546 4 83 2 265 2 205 4 393 2 268 6 351 2 307 4 271 2 310 2 650 2 46 2 808 4 213 2 154 2 312 4 
560 2 92 2 452 2 760 4 223 2 317 2 357 4 457 2 460 2 277 2 463 2 278 2 418 2 12 2 325 4 58 4 15 2 17 2 473 2 668 2 175 2 727 4 330 2 627 2 626 2 476 2 783 2 531 2 127 2 179 2 182 2 23 6 293 2 587 2 437 2 133 2 792 4 193 2 442 6 594 6 199 2 33 6 81 2 685 12 546 4 83 2 265 2 205 8 393 2 268 6 351 2 307 4 310 2 650 2 46 2 808 4 213 2 154 2 312 4 215 2 
560 2 92 2 452 2 760 8 223 2 317 2 357 4 457 2 460 2 277 2 463 2 278 2 418 2 12 2 325 4 58 4 15 2 17 2 473 2 668 2 175 2 727 4 330 2 627 2 626 2 476 2 783 2 531 2 127 2 179 2 182 2 23 10 293 2 587 2 437 2 133 2 792 4 193 2 442 8 594 6 199 2 33 8 81 2 685 12 546 4 83 2 265 2 205 8 393 2 268 6 351 2 307 4 271 2 310 2 650 2 46 2 808 4 213 2 154 2 312 4 215 2 
560 2 92 2 452 2 760 8 223 2 317 2 357 4 457 2 460 2 277 2 463 2 278 2 418 2 12 2 325 4 58 4 15 2 17 2 473 2 668 2 175 2 727 4 330 2 627 2 626 2 476 2 783 2 531 2 127 2 179 2 182 2 23 10 293 2 587 2 437 2 133 2 792 4 193 2 442 6 594 6 199 2 33 6 81 2 685 12 546 4 83 2 265 2 205 8 393 2 268 6 351 2 307 4 310 2 650 2 46 2 808 4 213 2 154 2 312 4 215 2 
0 2 223 4 404 1 615 2 406 6 411 2 230 2 10 6 416 2 418 2 12 2 13 6 15 2 240 4 17 2 241 10 626 2 627 2 432 6 431 1 246 1 23 2 249 2 437 2 250 2 253 2 442 8 33 12 264 2 39 6 447 4 265 2 448 2 266 2 268 24 646 6 647 2 648 2 271 4 650 2 46 2 47 2 452 4 457 2 460 2 277 2 278 2 463 4 661 2 58 4 473 2 668 2 474 8 672 2 476 2 478 2 674 6 293 4 678 6 681 6 491 4 76 4 301 2 78 2 81 2 685 46 688 2 83 2 498 7 307 6 500 2 694 7 312 4 91 2 502 2 92 2 505 1 703 6 506 2 317 2 94 2 320 2 321 2 713 2 515 2 109 2 717 2 325 4 719 2 113 2 723 2 727 8 524 2 728 4 330 2 123 2 331 2 127 2 531 4 333 2 532 1 533 6 534 6 129 1 736 2 133 2 340 2 343 2 139 2 545 2 546 4 548 1 348 2 554 6 351 2 559 6 354 4 154 2 560 2 158 6 357 4 162 1 166 8 571 2 573 2 167 2 574 6 368 2 373 2 581 6 175 2 584 12 783 2 179 2 182 2 587 2 588 2 792 4 189 2 592 2 193 2 196 2 383 2 594 4 198 2 199 2 386 2 597 6 800 2 801 2 601 2 205 2 393 2 807 6 808 6 212 2 810 1 213 2 214 4 
91 2 0 2 92 2 502 2 703 6 506 2 223 4 94 2 317 2 406 6 615 2 320 2 321 4 411 2 230 2 713 2 10 6 416 2 515 2 418 2 109 2 12 2 717 2 325 4 13 6 719 2 113 2 15 2 17 2 240 4 723 2 241 10 727 8 524 2 728 4 330 2 627 2 626 2 123 2 432 6 331 2 531 4 127 2 333 2 533 6 534 6 23 2 736 2 437 2 249 2 133 2 250 2 340 2 343 2 253 2 442 8 139 2 33 12 545 4 264 2 39 6 546 4 447 4 265 2 348 2 448 2 554 6 266 2 268 26 351 2 646 6 648 2 647 2 650 2 46 2 47 2 559 6 154 2 354 4 560 2 452 4 158 6 357 4 457 2 460 2 277 2 463 4 278 2 166 8 571 2 661 2 574 6 167 2 573 2 368 2 577 2 58 4 373 2 581 6 473 2 668 2 474 8 175 2 64 2 672 2 584 12 476 2 783 2 478 2 179 2 674 6 182 2 587 2 293 4 588 2 792 4 678 6 592 2 189 2 193 2 681 6 491 4 76 8 383 2 196 2 301 2 198 2 594 8 199 2 78 2 597 6 386 2 685 48 81 2 688 4 801 2 800 2 83 2 601 2 205 6 393 2 307 6 807 6 500 2 808 6 212 2 213 2 216 2 214 4 215 4 312 4 
91 2 0 2 92 2 502 2 703 6 506 2 223 4 94 2 317 2 406 6 615 2 320 2 321 4 411 2 230 2 713 2 10 6 416 2 515 2 418 2 109 2 12 2 717 2 325 4 13 6 719 2 113 2 15 2 17 2 240 4 723 2 241 10 727 8 524 2 728 4 330 2 627 2 626 2 123 2 432 6 331 2 531 4 127 2 333 2 533 6 534 6 23 6 736 2 437 2 249 2 133 2 250 2 340 2 343 2 253 2 442 8 139 2 33 12 545 4 264 2 39 6 546 4 447 4 265 2 348 2 448 2 554 6 266 2 268 26 351 2 646 6 648 2 647 2 650 2 46 2 47 2 559 6 154 2 354 4 560 2 452 4 158 6 760 4 357 4 457 2 460 2 277 2 463 4 278 2 166 8 571 2 661 2 574 6 167 2 573 2 368 2 577 2 58 4 373 2 581 6 473 2 668 2 474 8 175 2 64 2 672 2 584 12 476 2 783 2 478 2 179 2 674 6 182 2 587 2 293 4 588 2 792 4 678 6 592 2 189 2 193 2 681 6 491 4 76 8 383 2 196 2 301 2 198 2 594 8 199 2 78 2 597 6 386 2 685 48 81 2 688 4 801 2 800 2 601 2 83 2 205 6 393 2 307 6 807 6 500 2 808 6 212 2 213 2 216 2 214 4 215 4 312 4 
0 2 223 4 615 2 406 6 411 2 230 2 10 6 416 2 418 2 12 2 13 6 15 2 240 4 17 2 241 8 627 2 626 2 432 6 23 6 437 2 26 2 250 2 253 2 442 10 33 16 264 4 39 12 447 4 265 2 448 2 643 6 266 2 268 24 646 12 647 2 648 2 271 2 650 2 46 2 47 2 452 4 274 2 457 2 460 2 277 2 278 2 463 4 661 2 57 2 58 4 473 2 668 2 474 8 64 2 672 4 476 2 478 2 674 12 293 4 69 6 678 6 681 8 491 4 76 10 301 2 684 6 78 2 81 2 685 52 688 4 83 2 307 6 500 2 312 4 91 2 502 2 92 2 703 6 506 2 317 2 94 2 320 2 321 4 713 2 515 2 108 2 109 2 715 6 717 2 325 4 719 2 113 2 723 2 727 8 524 2 728 4 330 2 123 2 331 2 127 2 531 4 333 2 533 6 534 6 736 2 133 2 340 2 535 6 343 2 139 2 545 4 546 4 348 4 554 8 351 2 753 6 559 12 354 4 154 2 560 2 156 2 158 6 760 4 357 4 360 2 570 2 166 12 571 2 573 4 167 2 574 12 771 6 368 2 577 2 773 6 373 2 581 12 175 2 584 10 783 2 179 2 786 2 182 2 587 2 588 2 792 4 791 6 189 4 592 2 193 2 196 2 383 2 594 10 198 2 199 2 386 2 597 6 800 2 801 2 601 2 205 6 393 2 805 2 807 6 808 6 212 2 213 2 216 2 215 4 214 6 
560 2 182 2 587 2 760 4 23 4 293 2 357 2 460 2 277 2 278 2 442 6 594 6 199 2 33 4 12 2 685 4 81 2 325 2 546 2 58 4 205 6 393 2 727 2 650 2 808 2 46 2 626 2 476 2 213 2 783 2 154 2 215 2 127 2 179 2 312 4 
0 2 502 2 703 6 223 4 317 2 320 2 230 2 418 2 12 2 325 2 719 2 113 2 15 2 240 2 241 2 727 2 524 2 330 2 626 2 127 2 434 2 23 2 249 2 636 2 251 2 253 2 442 6 33 4 264 3 546 2 447 4 554 6 266 2 268 24 749 2 351 2 647 2 650 2 46 2 47 2 354 4 154 2 560 2 452 4 561 3 357 2 457 2 460 2 277 2 278 2 166 8 661 2 573 3 368 2 575 2 58 4 668 2 584 4 476 2 783 2 478 2 179 2 181 2 182 2 587 2 293 2 189 3 681 6 196 2 383 2 594 6 199 2 78 2 685 28 388 2 81 2 599 2 202 2 83 2 601 2 205 6 393 2 307 6 500 2 808 2 213 2 215 2 312 4 214 4 
277 2 549 2 626 2 
277 2 549 2 626 2 
698 2 0 2 502 2 703 6 93 2 223 4 317 2 406 2 320 2 321 4 411 2 230 2 515 4 418 2 714 2 12 2 325 2 719 2 113 2 15 2 17 2 240 6 241 2 727 4 625 2 728 2 330 2 626 6 531 2 436 2 23 6 736 2 437 2 254 2 253 2 442 12 33 16 544 4 545 4 546 2 547 4 549 2 447 4 265 2 554 2 266 2 349 2 268 16 351 2 449 2 647 2 271 4 47 2 354 4 452 4 760 4 357 2 457 2 53 2 460 4 277 4 360 4 463 4 166 2 661 2 368 2 56 2 369 2 58 4 175 2 779 2 584 4 478 2 293 4 587 2 676 2 590 4 792 4 188 2 189 2 193 2 681 2 488 2 491 2 76 4 196 2 383 2 594 12 78 2 685 24 688 4 801 2 83 2 601 2 205 6 86 2 393 2 307 6 500 2 693 2 808 4 213 2 312 4 215 4 
685 4 333 2 436 2 406 2 349 2 473 2 268 2 241 2 119 2 491 2 742 2 584 2 330 2 376 2 755 2 714 2 109 2 
0 2 502 2 703 6 93 4 223 4 317 2 406 2 320 2 321 4 411 2 230 2 417 2 515 4 418 2 714 2 12 2 325 2 719 2 113 2 15 2 17 2 240 6 727 4 625 2 728 2 330 2 627 2 626 6 531 4 436 2 23 6 736 2 437 2 254 2 253 2 442 12 33 16 544 4 545 4 546 2 547 4 549 2 447 4 446 2 265 2 554 2 266 2 349 2 268 16 351 2 449 2 647 2 271 4 47 2 354 4 452 4 760 4 357 2 457 2 460 4 277 4 360 4 463 4 166 2 661 2 770 2 368 2 56 2 369 2 58 4 284 2 175 2 779 2 584 2 478 2 293 4 587 2 590 4 792 4 188 2 189 4 193 2 681 2 488 2 76 4 196 2 383 2 594 12 78 2 685 24 688 4 801 2 83 2 601 2 390 2 205 6 86 2 393 2 307 6 500 2 808 4 213 2 312 4 215 4 
0 2 502 2 703 6 93 2 223 4 317 2 406 2 320 2 321 4 411 2 230 2 515 4 418 2 714 2 12 2 325 2 719 2 113 2 15 2 519 2 17 2 240 6 241 2 727 4 625 2 728 2 527 2 330 2 627 2 626 6 531 4 436 2 23 6 736 2 437 2 254 2 253 2 442 12 33 16 544 4 545 4 546 2 547 4 549 2 447 4 265 2 554 2 41 2 266 2 349 2 268 16 351 2 449 2 647 2 271 4 47 2 354 4 452 4 760 4 357 2 457 2 460 4 277 4 360 4 463 4 166 2 661 2 368 2 56 2 369 2 58 4 175 2 779 2 584 4 478 2 479 2 293 4 587 2 590 4 792 4 188 2 189 2 193 2 681 2 488 2 491 2 76 4 196 2 383 2 594 12 78 2 685 24 688 4 801 2 83 2 601 2 205 6 86 2 393 2 307 6 309 2 500 2 808 4 213 2 312 4 215 4 
468 2 685 4 201 2 435 2 745 2 96 2 424 2 61 2 136 2 270 2 729 2 673 2 177 2 639 2 377 2 
629 2 128 2 222 2 633 2 4 3 409 4 73 2 189 3 100 2 252 2 681 2 489 2 166 2 538 2 640 2 262 2 685 2 573 3 264 3 720 1 348 6 554 2 268 2 524 2 214 2 
629 2 128 2 222 2 633 2 4 2 409 4 73 2 189 2 100 2 252 2 681 2 489 2 166 2 538 2 640 2 262 2 685 2 573 2 264 2 348 6 554 2 268 2 524 2 214 2 
629 2 128 2 222 2 633 2 4 2 409 4 73 2 189 2 100 2 252 2 681 2 489 2 166 2 538 2 640 2 262 2 685 2 573 2 264 2 348 6 554 2 268 2 524 2 214 2 
482 2 438 3 633 2 71 2 793 5 29 2 189 3 164 2 617 2 711 2 514 2 796 2 768 2 32 2 279 2 166 2 231 2 541 2 685 4 573 3 366 4 112 2 346 2 84 2 425 4 85 2 268 2 350 2 499 3 524 2 217 3 
482 2 438 2 633 2 71 2 793 4 29 2 189 2 164 2 410 2 616 2 617 2 711 2 514 2 796 2 768 2 32 2 279 2 166 2 231 2 541 2 685 4 573 2 366 4 112 2 346 2 84 2 425 4 85 2 268 2 350 2 499 2 524 2 20 2 217 2 
482 2 438 2 633 2 71 2 793 4 29 2 189 2 164 2 410 2 616 2 617 2 711 2 514 2 796 2 768 2 32 2 279 2 166 2 231 2 541 2 685 4 573 2 366 4 112 2 346 2 84 2 425 4 85 2 268 2 350 2 499 2 524 2 20 2 217 2 
482 2 438 2 633 2 71 2 793 4 29 2 189 2 164 2 410 2 616 2 617 2 711 2 514 2 796 2 768 2 32 2 279 2 166 2 231 2 541 2 685 4 573 2 366 4 112 2 346 2 84 2 425 4 85 2 268 2 350 2 499 2 524 2 20 2 217 2 
482 2 438 2 633 2 71 2 793 4 29 2 189 2 164 2 410 4 616 4 617 2 711 2 514 2 796 2 768 2 32 2 279 2 166 2 231 2 541 2 685 4 573 2 366 4 112 2 346 2 84 2 425 4 85 2 268 2 350 2 499 2 524 2 20 4 217 2 
80 2 290 2 472 2 191 2 593 2 765 2 273 2 
400 2 36 2 191 2 475 2 465 2 604 2 
612 2 453 1 22 2 185 2 565 2 408 2 637 2 298 2 103 2 493 2 798 2 35 2 516 2 685 10 621 2 365 2 775 1 15 2 170 2 268 8 724 2 208 1 150 1 754 2 559 2 21 1 
631 2 482 6 224 2 793 15 616 4 410 3 617 6 31 2 514 2 279 6 231 6 323 4 685 6 366 4 112 6 346 6 238 2 721 1 425 12 557 2 206 2 268 6 350 6 778 4 63 2 88 2 522 2 695 2 272 2 152 2 20 2 
685 1 1 4 772 2 632 2 510 2 777 2 319 2 268 1 645 2 722 2 163 2 669 2 725 2 165 2 670 1 608 2 525 2 106 7 
1 4 772 4 632 2 510 4 777 2 319 2 645 4 722 2 669 2 163 2 725 2 165 2 608 2 525 2 106 6 
685 1 1 4 772 8 632 2 510 8 777 6 319 2 268 1 645 8 722 2 669 8 163 2 725 2 165 2 670 1 608 2 525 2 106 10 
1 2 772 2 632 2 510 2 319 2 645 2 722 2 163 2 725 2 165 2 608 2 525 2 106 2 
701 2 703 6 508 2 507 2 320 2 414 2 661 2 281 1 719 2 784 2 478 2 339 2 300 1 140 1 685 6 686 2 447 2 143 2 268 6 47 2 354 2 
585 2 503 2 703 6 701 2 507 6 485 2 339 2 102 2 414 2 661 2 107 2 140 2 685 12 263 2 82 2 719 2 447 4 496 2 268 12 628 2 289 2 784 2 354 4 478 2 
50 2 702 2 701 2 703 40 221 2 704 2 563 2 3 10 655 2 508 2 507 14 98 2 566 2 320 4 764 2 226 6 412 2 414 2 660 8 661 2 168 8 169 2 281 6 719 4 283 2 576 4 115 2 237 6 239 6 726 2 429 2 375 6 120 8 671 2 122 2 124 4 784 2 732 2 478 4 126 2 66 2 734 4 585 2 480 2 483 2 130 6 131 2 485 2 591 2 339 2 536 2 194 4 342 2 682 2 256 2 77 2 540 6 743 2 303 2 744 4 542 2 685 44 263 2 686 2 82 2 747 2 447 18 305 2 553 2 496 2 804 2 644 2 394 4 268 40 87 2 147 2 308 2 311 2 696 2 558 2 47 4 151 2 354 20 
701 2 703 32 221 2 3 6 507 12 508 8 318 2 320 4 462 2 414 2 661 2 664 2 469 2 281 2 719 2 576 4 235 2 774 2 523 2 671 2 528 2 245 2 65 2 124 4 784 2 478 2 734 2 585 2 677 2 485 2 339 2 194 4 540 2 385 2 140 2 744 2 685 22 542 2 263 2 686 2 82 2 447 10 496 2 143 2 268 20 87 2 147 2 149 2 90 2 47 4 354 10 
68 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (22,158,480,842,1061) (22,158,480,842,1061) (22,158,480,842,1061) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 600 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 214 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 144 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 263 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 400 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 889 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 416 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 341 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 1104 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 1096 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 281 538 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 380 538 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 36 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 847 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 1117 538 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 714 538 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 227 538 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 329 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 847 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 428 206 538 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 227 538 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 368 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 847 (28,72,78,152,175,176,184,334,393,432,467,525,574,576,595,602,605,677,706,725,779,794,797,821,868,880,893,918,930,946,998,1020,1075,1114,1121) 1024 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 780 204 523 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 780 204 523 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 554 190 896 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 927 349 167 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 927 349 167 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_19()Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:lexLT([I[I)Z | STATEMENT | 170908 | stmt -> ;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_104()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:noDuplicates([I)Z | CONDITION | 57307 | if (x) -> if (!x)
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_68()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.ValueTuple:size()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_125()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_3_3()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_119()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.diff.Node:Node()V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:isScalar()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_56()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eltsLTE([II)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3_1()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1858 | return null
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ProglangType:isArray()Z
daikon.Quant:setEqual([I[I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_85()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3479 | = null
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_25()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3R_210()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ModBitTracker:num_samples()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_13()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:memberOf(F[D)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3_18()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_149()Z
daikon.Debug:logDetail()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_2_36(I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_101()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:noDups([I)Z
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3R_169()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_63()Z
daikon.PptSlice2:arity()I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13092 | = null
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_3_10()Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqual([II)Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:sameLength([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression; | RETURN | 68476 | return null
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V | STATEMENT | 2624 | stmt -> ;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3_5()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.Quant:memberOf(S[S)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3R_118()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_3R_72()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3_27()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.Quant:subsetOf([B[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3_20()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.JavaParser:jj_3R_102()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ValueTuple:isMissing(I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127003 | = null
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_114()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLT([II)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice1:num_samples()I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:lexGTE([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_180()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_14()Z
daikon.Quant:eq(FF)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.PptSlice0:arity()I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:ne(II)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_107()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_3R_69()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3R_106()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3_35()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3_4()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:logDetail()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([D)[D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptSlice1:arity()I
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_28()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:dimensions()I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3_12()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(DD)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_97()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Ppt:Ppt()V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_116()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariants:Invariants()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptName:isEnterPoint()Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_110()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3R_50()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_17()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3_15()Z
daikon.VarInfo:new_ppt()V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_47()Z
daikon.inv.Invariant:logOn()Z
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 2 254 4 895 2 1047 2 631 2 492 2 715 2 1118 2 843 2 
81 2 632 6 84 2 974 6 148 2 727 2 906 2 1012 6 598 2 659 2 407 2 
864 2 647 2 631 2 346 2 949 4 1083 6 914 2 6 4 735 6 715 2 1031 6 12 6 448 2 
378 2 345 4 439 4 33 4 2 10 757 2 759 8 123 8 442 10 521 6 694 10 195 30 801 16 481 16 170 2 276 2 531 6 133 26 53 8 729 8 139 12 631 6 366 2 805 16 494 10 293 4 336 2 715 6 892 2 437 10 
915 6 150 4 
589 2 
439 2 2 2 219 2 759 2 442 4 694 2 655 2 195 6 801 2 481 2 531 2 133 4 1081 2 491 2 59 2 139 2 494 2 805 2 425 2 342 2 720 2 211 2 437 2 
33 2 878 6 139 5 2 4 494 4 805 8 1023 4 66 2 637 6 694 4 195 14 801 8 481 8 698 2 1017 4 133 12 437 4 
305 2 775 2 1107 2 39 2 1078 2 
589 2 88 2 482 2 360 2 171 2 774 2 1116 2 328 2 539 2 464 2 
378 2 511 2 440 2 866 2 895 2 722 2 970 2 410 2 122 2 383 2 476 2 767 2 9 2 44 2 317 4 1048 2 13 2 104 2 289 2 855 2 112 2 213 2 
963 2 439 2 2 16 929 4 972 2 412 4 40 2 759 18 473 6 442 6 694 16 521 4 1071 4 195 54 801 32 481 32 531 4 1017 4 702 4 133 48 987 6 53 6 878 6 631 4 139 22 62 6 494 16 366 2 805 32 1023 4 25 8 637 6 296 2 149 4 681 6 715 4 75 2 437 16 438 2 
511 2 395 2 376 2 
80 2 509 2 238 2 823 2 1094 2 899 10 761 2 458 2 499 22 95 2 1013 2 803 2 985 2 373 2 
158 2 1003 2 591 1 724 2 1010 2 875 2 11 2 445 2 17 2 455 6 181 1 737 2 182 6 1034 4 746 1 1037 2 471 4 42 2 1044 5 478 2 199 1 625 1 51 2 631 22 205 2 638 4 500 1 1060 1 1061 2 790 2 210 2 73 1 74 1 216 5 513 1 926 1 220 2 932 4 660 2 804 2 534 1 101 2 240 1 1085 2 398 2 249 2 401 2 402 2 548 2 1091 2 551 2 819 2 822 3 261 1 264 1 825 1 121 2 832 4 566 2 842 2 986 2 571 2 141 2 1118 2 710 2 715 24 302 1 1001 6 
338 2 
202 2 715 2 
934 2 682 2 715 4 
587 2 585 4 1 2 5 2 595 2 596 90 7 4 10 2 600 2 16 56 601 12 602 2 603 2 19 2 20 2 605 2 24 12 26 2 28 2 29 94 31 4 30 2 34 2 613 94 35 2 36 2 617 6 41 2 620 2 619 4 45 2 47 2 624 2 626 2 52 2 630 18 55 2 56 2 635 2 636 2 67 2 68 2 69 8 639 4 641 2 643 358 71 44 644 2 72 2 77 14 78 2 79 50 83 2 90 2 653 2 658 94 657 30 661 2 100 2 103 4 664 2 668 2 106 2 673 2 674 94 675 2 676 2 677 2 109 2 679 2 680 2 113 18 115 4 684 2 116 2 686 2 119 2 690 2 695 2 126 2 704 2 135 2 138 4 705 2 706 2 143 6 709 2 707 2 144 2 147 4 712 2 714 2 717 2 716 18 718 246 152 2 154 2 155 2 156 2 159 2 160 2 163 2 723 8 166 44 725 4 168 4 726 2 174 8 175 2 176 2 731 16 732 42 179 2 180 2 183 2 741 2 184 2 185 2 187 2 747 4 748 2 749 2 754 2 756 26 189 2 762 2 192 2 768 4 198 46 200 4 771 42 776 4 778 2 206 2 779 2 781 2 208 2 784 22 787 4 793 2 795 2 794 48 796 2 214 2 217 2 224 4 225 4 226 2 797 2 800 2 227 18 232 94 234 4 242 2 806 30 245 4 808 28 810 2 248 4 251 4 250 4 255 2 816 246 818 2 817 2 259 2 821 2 263 2 824 2 272 2 830 2 834 2 273 2 838 2 840 18 841 2 279 2 845 2 846 18 847 26 848 2 280 18 281 2 282 4 283 2 286 2 853 2 290 30 294 246 295 2 858 2 298 36 300 12 301 62 862 4 861 2 863 2 307 2 309 2 310 2 313 18 868 4 314 4 869 2 870 2 315 2 318 4 319 4 320 2 880 2 325 8 327 4 329 2 334 4 337 2 885 2 341 2 886 10 889 2 343 2 893 2 897 48 898 2 900 4 353 2 902 48 904 2 355 94 356 2 357 4 908 2 364 4 910 94 365 2 911 2 368 2 918 2 372 4 922 2 374 4 375 2 377 2 925 8 379 74 380 2 930 22 939 2 388 18 389 16 942 2 944 6 390 4 945 2 392 22 946 2 393 2 951 12 950 2 399 2 400 2 956 4 404 2 408 42 964 4 965 12 966 2 969 16 968 94 413 2 975 2 976 18 977 2 978 2 416 2 417 2 980 2 981 4 983 4 988 72 989 2 422 2 423 2 426 62 427 2 992 18 993 14 428 2 430 6 997 2 999 4 998 26 432 2 443 2 447 2 1015 18 451 4 1018 2 452 4 1019 2 1020 2 1022 44 1024 2 1028 48 459 94 1029 4 460 2 461 2 463 2 466 4 1039 94 467 2 1041 2 1042 2 1045 4 477 2 479 2 1050 2 485 8 486 2 1052 2 1054 4 488 2 1056 2 489 4 490 2 1057 2 497 4 498 4 1059 2 504 4 507 2 1063 4 514 4 1066 2 1065 4 518 4 520 4 1068 2 1069 20 525 2 529 2 1075 2 532 14 1076 2 1077 2 533 2 1079 4 1080 2 537 2 538 26 1084 6 1087 22 544 94 545 4 546 2 547 2 1089 22 1092 4 555 2 556 2 1096 22 557 8 1098 2 1103 2 1101 4 1102 2 561 2 1104 2 1105 4 1109 62 564 52 1108 2 1110 2 1111 4 1112 12 1114 2 574 4 1117 2 575 104 576 18 1121 2 1124 2 579 2 1126 8 582 2 584 2 583 2 
573 2 8 2 952 2 424 1 
8 2 888 2 
663 2 15 2 54 2 852 2 558 2 540 2 606 2 669 2 499 6 785 2 640 2 642 2 387 4 369 2 982 4 229 2 230 2 420 2 
573 2 501 2 
511 2 651 2 607 2 652 2 
1113 2 511 2 651 2 1006 2 607 2 652 2 
345 2 511 2 8 2 46 2 228 2 607 2 
44 2 530 2 
345 2 511 2 316 2 607 2 
371 2 854 2 
454 2 1036 2 
672 2 760 2 
196 2 912 2 
454 2 32 2 912 2 
454 2 857 2 912 2 
454 2 912 2 829 2 
454 2 912 2 772 2 
511 2 128 2 874 2 483 6 728 2 604 2 607 2 578 6 
792 2 692 2 
1113 2 345 2 511 2 542 2 8 2 46 2 607 2 
8 2 46 2 268 2 
8 2 46 2 151 2 
573 2 186 2 792 2 
8 2 46 2 
562 2 792 2 
8 2 633 2 
573 2 1074 2 792 2 
573 2 418 2 672 2 
573 2 586 2 912 2 
573 2 691 2 854 2 
573 2 454 2 65 2 
792 2 287 2 
236 2 8 2 
275 2 672 2 
696 2 912 2 
744 2 854 2 
454 2 883 2 
1002 2 792 2 
629 2 454 2 
740 2 854 2 
903 2 912 2 
221 2 672 2 
573 2 1074 2 792 2 23 2 
573 2 193 2 1074 2 792 2 23 2 
573 2 792 2 462 2 
573 2 792 2 689 2 
535 2 947 2 577 2 565 2 
724 2 
91 2 932 4 523 2 1010 2 938 2 875 6 804 6 17 2 455 4 177 2 1085 2 249 2 398 2 401 2 402 2 737 2 1034 4 1091 2 551 2 819 2 261 2 121 2 471 4 828 2 42 2 478 2 566 2 986 2 571 2 204 2 631 14 205 2 780 2 141 6 495 4 1118 2 710 2 638 4 790 2 210 2 715 14 1001 6 
1003 2 91 2 932 4 523 2 1010 2 938 2 875 6 804 6 17 2 455 6 177 2 1085 2 249 2 398 2 401 2 402 2 737 2 1034 4 551 2 1091 2 819 2 261 2 1037 2 121 2 471 4 828 2 42 2 478 2 566 2 986 2 571 2 204 2 205 2 631 14 780 2 141 6 495 4 1118 2 710 2 638 4 790 2 210 2 715 14 1001 6 
516 2 
1008 2 623 2 
0 2 512 4 381 2 84 2 311 10 164 2 932 2 594 4 727 4 1012 6 321 2 659 4 446 4 172 2 323 2 332 2 333 2 954 2 398 2 401 2 252 2 739 2 1032 2 114 2 1034 2 1035 2 256 2 551 2 890 4 891 4 120 4 468 2 560 2 974 6 764 2 901 2 42 2 1046 2 478 2 129 2 839 2 906 2 697 2 359 2 49 2 1053 8 850 2 205 2 631 6 632 6 209 8 292 2 788 2 790 2 502 2 299 2 645 2 715 12 303 2 1001 4 
0 2 512 4 381 2 84 2 311 10 164 2 932 2 594 4 727 4 1012 8 321 2 659 4 446 4 172 2 323 2 244 2 332 2 333 2 954 2 398 2 401 2 252 2 739 2 1032 2 1034 2 114 2 1035 2 551 2 890 4 891 4 120 4 468 2 560 2 974 6 764 2 901 2 42 2 127 2 478 2 129 2 839 2 906 2 697 2 359 2 49 2 773 4 1053 8 850 2 205 2 631 6 632 8 209 8 790 2 292 2 788 2 148 2 502 2 299 2 645 2 715 12 303 2 1001 4 
850 2 381 2 632 2 120 4 974 2 594 4 292 2 252 2 727 2 697 2 502 2 299 2 659 2 359 2 1035 2 303 2 890 2 172 2 
0 2 512 4 381 2 84 2 311 6 164 2 932 2 594 4 727 4 1012 6 321 2 659 4 446 4 172 2 323 2 332 2 333 2 954 2 398 2 401 2 252 2 739 2 1032 2 114 2 1034 2 1035 2 256 2 551 2 890 4 891 4 120 4 468 2 560 2 974 4 764 2 901 2 42 2 1046 2 478 2 129 2 839 2 697 2 359 2 49 2 1053 4 850 2 205 2 631 6 632 6 209 4 292 2 788 2 790 2 148 2 502 2 299 2 645 2 715 12 303 2 1001 4 
0 2 512 4 381 2 84 2 311 6 164 2 932 2 594 4 727 4 598 2 1012 6 321 2 659 4 446 4 172 2 323 2 332 2 333 2 954 2 398 2 401 2 252 2 739 2 1032 2 114 2 1034 2 1035 2 256 2 551 2 890 4 891 4 120 4 468 2 560 2 974 6 764 2 901 2 42 2 1046 2 478 2 129 2 839 2 697 2 359 2 49 2 1053 4 850 2 205 2 631 6 632 4 209 4 292 2 788 2 790 2 502 2 299 2 645 2 715 12 303 2 1001 4 
0 2 512 4 381 2 84 2 311 6 164 2 932 2 594 4 727 4 1012 6 321 2 659 4 446 4 172 2 323 2 332 2 333 2 954 2 398 2 401 2 252 2 739 2 1032 2 114 2 1034 2 1035 2 256 2 551 2 890 4 891 4 120 4 468 2 560 2 974 6 764 2 901 2 42 2 1046 2 478 2 129 2 839 2 906 2 697 2 359 2 49 2 1053 8 850 2 205 2 631 6 632 6 209 4 292 2 788 2 790 2 502 2 299 2 645 2 715 12 303 2 1001 4 
0 2 512 4 381 2 84 2 311 10 164 2 932 2 594 4 727 4 1012 8 598 2 321 2 659 4 446 4 172 2 323 2 332 2 333 2 954 2 398 2 401 2 252 2 739 2 1032 2 1034 2 114 2 1035 2 256 2 551 2 890 4 891 4 120 4 468 2 560 2 974 8 764 2 901 2 42 2 1046 2 478 2 129 2 839 2 906 2 697 2 359 2 49 2 1053 8 850 2 205 2 631 6 632 6 209 8 292 2 788 2 790 2 502 2 299 2 645 2 715 12 303 2 1001 4 
0 2 512 4 381 2 84 2 311 10 164 2 932 2 594 4 727 4 1012 6 321 2 659 4 446 4 172 2 323 2 332 2 333 2 954 2 398 2 401 2 252 2 739 2 1032 2 114 2 1034 2 1035 2 256 2 551 2 890 4 891 4 120 4 468 2 560 2 974 6 764 2 901 2 42 2 1046 2 478 2 129 2 839 2 906 2 697 2 359 2 49 2 1053 8 850 2 205 2 631 6 632 6 209 8 292 2 788 2 790 2 502 2 299 2 645 2 715 12 303 2 1001 4 
0 4 308 2 311 2 592 2 594 4 597 6 598 4 321 2 875 6 876 2 17 2 323 2 324 2 879 2 21 2 332 2 333 2 882 6 338 6 339 2 890 4 891 8 42 2 901 2 358 2 359 2 361 6 49 2 631 24 60 2 632 4 64 2 634 1 638 4 916 1 919 1 645 2 924 7 381 2 84 4 928 2 91 2 931 6 385 2 932 4 654 4 934 6 935 4 938 4 659 4 954 2 398 2 401 2 402 2 108 6 959 2 678 2 110 2 114 2 683 2 961 6 118 2 120 4 121 2 974 8 129 2 697 2 986 2 141 6 142 2 710 2 991 2 996 7 715 46 719 1 431 2 1001 6 1003 2 164 2 1010 2 727 4 1012 12 446 6 1014 2 449 1 172 2 455 6 456 2 457 2 737 2 739 2 182 2 1032 2 1034 4 1033 2 1035 2 1037 2 750 8 751 6 752 2 468 4 470 2 471 4 763 6 1044 2 764 2 765 6 1046 2 478 2 197 1 1053 2 202 6 203 2 205 2 495 4 783 2 790 2 788 2 502 2 210 12 215 1 216 2 508 6 512 4 222 2 523 2 1073 2 804 8 233 4 541 2 1085 2 1086 4 249 2 252 2 1088 1 813 2 814 2 551 2 1091 2 552 6 258 2 819 2 1093 6 260 2 559 1 560 2 828 2 270 2 1106 10 839 2 566 2 567 2 844 2 571 2 850 2 1118 2 292 2 1122 6 1125 1 299 2 303 2 
0 4 1003 2 308 2 311 2 164 2 592 2 594 4 1010 2 597 6 1012 12 727 4 875 6 321 2 876 2 1014 2 446 6 172 2 17 2 456 2 323 2 455 6 879 2 324 2 21 2 457 2 333 2 332 2 882 6 338 6 739 2 737 2 339 2 182 2 1032 2 1033 2 1034 4 1035 2 890 4 891 8 1037 2 751 6 750 8 468 4 752 2 470 2 471 4 763 6 764 2 1044 2 901 2 42 2 765 6 1046 2 478 2 906 4 358 2 359 2 361 6 201 2 49 2 1053 6 202 6 203 2 60 2 631 26 205 2 632 8 495 4 64 2 783 2 638 4 788 2 790 2 502 2 210 12 645 2 508 6 216 2 512 4 84 4 381 2 928 4 222 2 931 6 91 2 385 4 932 4 934 6 654 8 523 2 935 4 1073 2 938 4 659 4 804 8 233 4 541 2 1085 2 954 2 1086 8 249 2 398 2 401 2 108 6 252 2 402 2 110 2 678 2 959 4 813 2 814 2 683 2 114 2 552 6 1091 2 551 2 117 2 961 6 258 2 118 2 819 2 1093 6 260 2 120 4 121 2 560 2 974 8 270 2 828 2 1106 10 129 2 839 2 697 2 566 2 567 2 986 2 844 2 571 2 850 2 141 6 142 2 1118 2 710 2 991 2 292 2 1122 6 995 2 299 2 715 48 431 2 303 2 1001 6 
0 4 1003 2 308 2 311 6 164 2 592 2 594 4 1010 2 597 6 1012 12 727 4 875 6 321 2 876 2 1014 2 446 6 172 2 17 2 456 2 323 2 455 6 879 2 324 2 21 2 457 2 333 2 332 2 882 6 338 6 739 2 737 2 339 2 182 2 1032 2 1033 2 1034 4 1035 2 890 4 891 8 1037 2 751 6 750 8 468 4 752 2 470 2 471 4 763 6 764 2 1044 2 901 2 42 2 765 6 1046 2 478 2 906 4 358 2 359 2 361 6 201 2 49 2 1053 6 202 6 203 2 60 2 631 26 205 2 632 8 495 4 64 2 783 2 638 4 209 4 788 2 790 2 502 2 210 12 645 2 508 6 216 2 512 4 84 4 381 2 928 4 222 2 931 6 91 2 385 4 932 4 934 6 654 8 523 2 935 4 1073 2 938 4 659 4 804 8 233 4 541 2 1085 2 954 2 1086 8 249 2 398 2 401 2 108 6 252 2 402 2 110 2 678 2 959 4 813 2 814 2 683 2 114 2 552 6 551 2 1091 2 117 2 961 6 258 2 118 2 819 2 1093 6 260 2 120 4 121 2 560 2 974 8 270 2 828 2 1106 10 129 2 839 2 697 2 566 2 567 2 986 2 844 2 571 2 850 2 141 6 142 2 1118 2 710 2 991 2 292 2 1122 6 995 2 299 2 715 48 431 2 303 2 1001 6 
0 4 308 2 311 6 592 2 594 4 597 6 598 2 321 2 875 8 876 2 17 2 323 2 324 2 879 2 21 2 332 2 333 2 882 6 338 12 339 2 890 4 891 8 42 2 901 2 906 4 358 2 359 2 361 6 49 2 60 2 631 24 632 10 64 2 638 4 645 2 381 2 84 4 928 4 86 6 91 2 89 2 931 6 385 4 932 4 654 8 934 12 935 4 938 4 659 4 954 2 398 2 401 2 402 2 108 6 959 4 678 2 958 2 110 2 114 2 683 2 117 2 961 12 118 2 120 4 121 2 974 10 129 2 697 2 984 6 131 2 986 2 134 2 141 8 142 2 710 2 991 2 148 2 995 2 715 52 431 2 1001 6 1003 2 164 2 1010 2 727 4 1012 16 1014 2 446 6 172 2 455 6 456 2 457 2 737 2 739 2 182 4 1032 2 1034 4 1033 2 1035 2 1037 2 750 8 751 6 752 2 468 4 470 2 471 4 763 12 191 6 764 2 1044 4 765 6 1046 2 478 2 201 2 1053 6 202 12 203 2 205 2 495 6 496 6 783 2 209 4 790 2 788 2 502 2 210 10 212 6 216 4 508 6 512 4 510 2 222 2 523 2 527 2 1073 2 804 12 233 4 541 2 1085 2 1086 8 249 2 252 2 813 2 815 6 814 2 1091 2 551 2 552 12 258 2 819 2 1093 6 260 2 262 2 560 2 828 2 271 6 1106 8 839 2 566 2 567 2 844 2 571 2 572 6 850 2 284 2 1118 2 1120 6 292 2 1122 6 299 2 303 2 
512 2 84 2 381 2 120 2 311 4 164 2 974 6 594 2 901 2 1046 2 1012 4 906 2 839 2 727 4 321 2 659 4 446 2 1053 6 172 2 850 2 632 6 333 2 332 2 954 2 209 4 292 2 252 2 739 2 502 2 645 2 715 4 1032 2 114 2 303 2 891 2 
1003 2 721 2 311 2 164 2 594 2 724 2 1010 2 1012 4 727 4 875 6 321 2 446 2 172 2 17 2 455 6 22 2 332 2 333 2 737 2 739 2 182 3 1032 2 1034 4 891 2 1037 2 755 2 471 4 901 2 42 2 1044 3 1046 2 478 2 906 2 480 2 1053 6 631 24 205 2 632 6 495 4 638 4 790 2 788 2 502 2 645 2 210 4 216 3 512 2 84 2 381 2 91 2 932 4 523 2 938 2 659 4 804 8 239 2 665 2 953 3 954 2 1085 2 398 2 249 2 401 2 252 2 402 2 114 2 1091 2 551 2 819 2 120 2 121 2 974 6 828 2 270 2 1106 2 839 2 566 2 986 2 703 2 571 2 850 2 141 6 1118 2 710 2 292 2 1123 2 715 28 303 2 1001 6 
901 2 164 2 1128 2 
901 2 164 2 1128 2 
0 4 157 2 1003 2 590 2 311 6 164 6 594 2 1010 2 727 4 1012 16 598 4 875 2 446 4 14 2 172 4 17 2 323 2 455 6 730 4 737 2 182 2 1034 4 1035 2 890 4 891 4 1037 2 468 2 752 2 471 4 42 2 901 4 478 2 906 4 49 2 1053 6 203 2 631 16 205 2 493 2 632 12 634 2 638 4 209 4 790 2 210 4 645 2 512 2 84 4 928 4 85 2 91 2 385 4 932 4 654 4 524 4 1070 2 935 2 1073 4 938 6 940 2 659 4 802 2 804 2 233 2 99 2 394 2 1085 2 1086 4 398 2 249 2 401 2 402 2 252 2 959 4 111 2 683 2 114 2 1091 2 551 2 257 2 819 2 962 2 120 2 121 2 560 2 974 12 828 2 693 2 1106 2 697 2 566 2 277 2 986 2 571 2 850 2 141 2 1118 2 288 4 710 2 1122 2 148 4 715 24 581 2 1128 2 435 2 1001 6 
102 2 631 2 222 2 783 2 253 2 790 2 935 2 1122 2 1106 2 940 2 210 2 299 2 715 4 277 2 623 2 99 2 877 2 
0 4 157 4 1003 2 590 2 311 6 164 6 594 2 1010 2 727 4 1012 16 598 4 875 2 169 2 446 4 14 2 172 4 17 2 323 2 455 6 730 4 608 2 737 2 182 4 1034 4 1035 2 890 4 891 4 1037 2 752 2 468 4 471 4 764 2 42 2 901 4 478 2 906 4 49 2 1053 6 203 2 631 16 205 2 632 12 634 1 638 4 209 4 790 2 210 2 645 2 512 2 84 4 928 4 85 2 91 2 385 4 932 4 654 4 524 4 1073 4 938 6 940 2 659 4 802 2 804 2 233 2 99 2 394 2 105 2 1085 2 1086 4 398 2 249 2 401 2 402 2 252 2 959 4 111 2 683 2 114 2 1091 2 551 2 257 2 819 2 120 2 121 2 560 2 974 12 828 2 693 2 697 2 566 2 277 2 986 2 571 2 850 2 140 2 141 2 1118 2 288 4 710 2 1122 2 148 4 715 24 581 2 1128 2 436 2 1001 6 
0 4 157 2 1003 2 590 2 311 6 164 6 594 2 1010 2 727 4 1012 16 598 4 875 2 446 4 14 2 172 4 17 2 323 2 455 6 730 4 737 2 182 2 1034 4 1035 2 890 4 891 4 1037 2 752 2 468 4 351 2 471 4 764 2 42 2 901 4 478 2 906 4 49 2 1053 6 1055 2 203 2 631 16 205 2 632 12 634 1 638 4 209 4 790 2 210 4 645 2 512 2 84 4 928 4 85 2 91 2 385 4 932 4 654 4 524 4 935 2 1073 4 938 6 528 2 940 2 659 4 802 2 804 2 233 2 99 2 394 2 1085 2 1086 4 398 2 249 2 401 2 402 2 252 2 959 4 111 2 683 2 114 2 1091 2 551 2 257 2 819 2 120 2 121 2 560 2 974 12 828 2 693 2 1106 2 697 2 566 2 277 2 278 2 986 2 571 2 421 2 850 2 141 2 1118 2 288 4 710 2 1122 2 148 4 715 24 581 2 1128 2 1001 6 
216 2 649 2 312 2 91 2 932 4 523 2 1010 2 526 2 938 2 875 6 804 8 17 2 536 2 455 4 21 2 666 2 541 2 1085 2 734 2 881 2 249 2 1027 2 398 2 401 2 402 2 737 2 609 2 182 2 678 2 1034 4 610 2 551 2 1091 2 611 2 258 2 118 2 819 2 554 2 265 2 896 2 266 2 121 2 753 2 470 2 471 4 190 2 1044 2 42 2 478 2 566 2 986 2 570 2 571 2 205 2 631 18 141 6 495 4 1118 2 367 4 710 2 638 4 790 2 210 2 715 24 1001 6 
216 3 37 1 82 2 614 2 414 3 1044 3 522 2 523 2 799 4 1011 2 875 2 322 2 804 2 631 2 141 2 495 2 807 2 339 6 182 3 429 2 503 2 505 2 887 2 715 2 553 2 
216 2 82 2 614 2 414 2 1044 2 522 2 523 2 799 4 1011 2 875 2 322 2 804 2 631 2 141 2 495 2 807 2 339 6 182 2 429 2 503 2 505 2 887 2 715 2 553 2 
216 2 82 2 614 2 414 2 1044 2 522 2 523 2 799 4 1011 2 875 2 322 2 804 2 631 2 141 2 495 2 807 2 339 6 182 2 429 2 503 2 505 2 887 2 715 2 553 2 
216 3 2 2 1004 2 267 2 469 2 350 3 223 4 616 4 827 2 933 2 694 2 521 2 523 2 354 3 195 5 444 3 801 2 599 2 481 2 804 2 133 4 487 6 391 2 53 4 136 2 18 2 631 4 241 2 494 2 805 2 1058 4 708 4 182 3 920 2 887 2 715 10 550 2 960 4 745 2 437 2 
216 2 2 2 1004 2 267 2 469 2 350 2 223 4 616 4 759 2 827 2 933 2 694 2 521 2 523 2 354 2 195 4 444 2 801 2 599 2 481 2 804 2 133 4 487 6 391 2 53 4 136 2 18 2 139 2 631 4 241 2 494 2 366 2 805 2 1058 4 708 4 182 2 920 2 887 2 715 10 550 2 960 4 745 2 437 2 
216 2 2 2 1004 2 267 2 469 2 350 2 223 4 616 4 759 2 827 2 933 2 694 2 521 2 523 2 354 2 195 4 444 2 801 2 599 2 481 2 804 2 133 4 487 6 391 2 53 4 136 2 18 2 139 2 631 4 241 2 494 2 366 2 805 2 1058 4 708 4 182 2 920 2 887 2 715 10 550 2 960 4 745 2 437 2 
216 2 2 2 1004 2 267 2 469 2 350 2 223 4 616 4 759 2 827 2 933 2 694 2 521 2 523 2 354 2 195 4 444 2 801 2 599 2 481 2 804 2 133 4 487 6 391 2 53 4 136 2 18 2 139 2 631 4 241 2 494 2 366 2 805 2 1058 4 708 4 182 2 920 2 887 2 715 10 550 2 960 4 745 2 437 2 
216 2 2 2 1004 2 267 2 469 2 350 2 223 4 616 4 759 4 827 2 933 2 694 2 521 2 523 2 354 2 195 4 444 2 801 2 599 2 481 2 804 2 133 4 487 6 391 2 53 4 136 2 18 2 139 4 631 4 241 2 494 2 366 4 805 2 1058 4 708 4 182 2 920 2 887 2 715 10 550 2 960 4 745 2 437 2 
811 2 306 2 1082 2 405 2 941 2 1067 2 1016 2 
1119 2 306 2 348 2 97 2 670 2 943 2 
894 2 865 2 218 2 409 1 39 1 382 2 87 2 384 2 1009 2 563 2 1107 1 130 2 622 1 700 2 701 1 631 8 178 2 27 2 711 2 291 2 738 2 715 10 506 2 434 2 551 2 552 2 
612 2 2 6 269 2 40 1 759 3 694 6 521 2 195 15 837 2 801 6 481 6 419 2 702 2 133 12 53 4 631 6 139 4 63 2 805 6 494 6 366 2 1023 2 330 2 25 2 809 2 637 4 145 2 715 6 681 4 153 2 437 6 
631 1 515 2 162 2 616 2 1099 2 247 2 352 7 1026 2 708 2 207 2 872 2 937 1 994 2 715 1 1090 2 960 2 1127 4 362 2 
515 2 162 2 616 2 1099 2 247 4 352 6 207 2 1026 2 708 2 872 2 994 4 1090 2 960 2 1127 4 362 4 
631 1 515 2 162 2 616 2 1099 2 247 8 352 10 207 8 1026 2 708 2 872 2 937 1 994 8 715 1 1090 6 960 2 1127 4 362 8 
515 2 162 2 616 2 1099 2 247 2 352 2 1026 2 708 2 872 2 994 2 960 2 1127 2 362 2 
1003 4 161 2 867 2 441 4 1005 1 4 4 167 2 873 2 450 2 453 2 455 32 326 2 733 4 335 10 736 4 340 2 742 2 743 2 1037 4 38 2 349 2 615 4 188 2 471 18 472 2 194 2 905 2 1049 2 769 2 484 4 1051 5 48 2 627 2 50 1 777 14 57 2 61 2 631 34 638 16 70 4 917 4 370 2 1062 2 646 2 648 2 927 2 650 2 654 4 93 2 798 2 656 2 1072 2 936 2 98 2 662 2 237 2 243 2 667 2 396 2 671 2 955 2 543 2 403 4 406 2 1091 4 685 2 1097 2 971 2 411 2 121 6 125 4 831 2 274 4 979 2 835 2 569 2 849 2 285 2 710 6 713 2 297 1 859 2 715 38 580 2 433 1 
304 2 648 2 588 2 927 2 517 2 3 2 519 2 92 2 871 2 1007 2 165 2 593 2 386 6 93 2 654 38 167 2 798 2 656 2 873 2 231 2 235 2 237 2 173 2 948 2 455 42 396 2 331 2 397 2 1025 2 246 2 671 2 955 2 403 4 1030 2 957 2 340 2 1091 2 465 2 344 2 820 2 687 2 1097 2 1038 2 967 2 411 2 826 2 1040 4 349 2 121 2 188 4 471 20 973 2 1100 2 1043 2 125 4 475 2 833 2 274 2 766 4 979 2 836 2 621 2 699 2 770 2 484 4 1051 2 132 2 907 2 48 2 627 2 777 6 137 2 1115 4 58 2 631 44 782 2 634 2 710 2 990 2 638 20 146 2 786 2 70 6 789 2 917 2 791 2 715 46 860 2 370 2 921 4 
1003 6 161 2 441 6 4 2 167 2 873 2 450 2 455 40 1021 2 326 2 331 2 335 6 736 4 1030 6 884 2 743 2 742 2 465 6 1037 6 38 2 349 2 188 2 615 6 471 20 758 2 472 2 474 2 618 8 194 2 905 2 1049 2 769 2 484 4 1051 6 48 2 363 2 628 2 777 10 57 2 61 2 631 40 913 2 638 18 786 2 789 6 917 4 370 2 1062 2 923 2 648 2 1064 2 927 2 650 2 654 14 94 8 93 2 798 2 96 2 237 2 243 2 667 2 671 2 543 2 403 4 406 2 1091 2 1095 2 688 2 1097 4 971 2 826 2 121 4 124 2 415 2 125 4 831 2 274 6 849 2 285 2 710 4 856 2 713 4 715 44 433 2 1000 8 
646 10 648 2 1003 10 867 4 927 2 1005 2 165 2 654 14 93 2 798 2 167 2 656 4 873 2 237 2 455 38 396 4 331 2 733 2 671 2 107 2 335 10 955 4 812 2 403 6 340 4 549 2 1091 2 685 2 1037 10 1097 2 347 2 411 4 349 2 121 2 188 2 471 14 125 6 835 2 274 2 979 4 699 2 568 2 770 2 484 6 1051 2 569 2 48 2 777 8 851 2 909 4 631 26 634 2 710 2 638 14 70 6 917 2 297 2 859 2 370 2 715 28 580 2 433 6 
76 2 

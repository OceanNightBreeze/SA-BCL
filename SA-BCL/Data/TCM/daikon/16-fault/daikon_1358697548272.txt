#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 584 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (193,328) (193,328) 349 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (193,328) 425 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 497 353 529 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 584 688 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 13 (384,691) 478 (33,644) (384,691) 237 (33,644) 90 736 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (193,328) 425 668 63 89 524 760 454 308 (384,691) 478 (33,644) (384,691) 237 (33,644) 90 736 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (193,328) 425 668 63 89 524 760 454 308 (384,691) 478 (33,644) (384,691) 237 (33,644) 90 736 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (193,328) 425 668 63 89 524 760 454 308 (384,691) 478 (33,644) (384,691) 237 (33,644) 90 736 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 212 184 712 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 553 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 553 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 553 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 553 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltsLteIndex([I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gte(II)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaCharStream:BeginToken()C
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.Quantify.Term:esc_name()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.Quant:eq(JJ)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt:Ppt()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern:intern([I)[I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:isArray()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:slice([III)[I
daikon.Quant:eltsEqual([II)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quantify.Length:esc_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isIntegral()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.FormatTestCase:passes()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:eltwiseLT([I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(D[F)Z
daikon.Quant:sameLength([I[I)Z
daikon.PptSlice1:num_samples()I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice2:arity()I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:isFloat()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:gcd(JJ)J
daikon.ModBitTracker:num_sets()I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ModBitTracker:num_vars()I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:max([I)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:lexLT([I[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptName:isEnterPoint()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:gcd([I)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Invariant:prob_and(DD)D | CONSTANT | 8716 | 1 -> -1
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaCharStream:ReadByte()C
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern:intern([J)[J
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfo:new_ppt()V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.Invariant:logOn()Z
jtb.JavaCharStream:backup(I)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ProglangType:dimensions()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:sum([I)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariants:Invariants()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:lt(II)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:memberOf(S[S)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptSlice1:arity()I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 1551 | = null
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
utilMDE.MathMDE:gcd(II)I
jtb.JavaCharStream:getEndLine()I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexLTE([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfo:isDerived()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.Quantify.Constant:Constant(I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:eltsLT([II)Z
daikon.VarInfo:isPrestate()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.Quant:setEqual([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String; | CONSTANT | 6145 | 2 -> 3
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:noDups([I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 2084 | = null
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltsGTE([II)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2087 | return null
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:baseIsFloat()Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:setDiff([I[I)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:isPointer()Z
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:lexGTE([I[I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.Invariant:getConfidence()D

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
383 4 255 2 727 2 328 2 578 2 104 2 702 2 193 2 265 2 
581 6 230 2 41 2 660 2 392 2 461 2 452 2 740 2 716 6 202 6 496 2 
1 6 275 2 328 2 745 6 38 4 56 6 340 4 515 2 357 2 713 2 268 6 522 2 193 2 
346 8 306 2 547 16 97 6 722 8 328 6 121 8 424 16 523 10 470 2 124 26 555 12 127 4 243 2 608 2 537 4 539 4 612 8 751 10 683 16 636 10 685 4 564 2 366 10 190 10 320 28 446 6 399 2 570 2 193 6 
75 6 600 4 
418 2 
632 2 401 2 194 2 293 2 498 2 695 2 317 2 584 2 750 2 658 2 232 2 725 2 506 2 445 4 302 2 335 2 756 2 269 2 104 2 570 2 532 2 116 2 
0 4 547 29 97 4 328 4 722 18 5 2 287 5 263 4 167 4 121 6 424 29 523 13 124 42 73 6 555 19 604 8 134 3 509 6 360 2 51 3 205 4 539 2 708 2 751 6 88 2 488 2 489 4 683 29 417 4 636 13 562 6 366 13 190 13 320 44 757 3 446 4 399 2 462 1 193 4 
401 2 285 2 549 2 
338 2 326 2 259 2 144 2 721 2 670 2 513 10 560 2 390 22 72 2 411 2 565 2 525 2 628 2 
97 2 547 2 722 2 424 2 523 2 124 4 555 2 239 2 128 2 731 2 292 2 539 2 316 2 751 4 683 2 636 2 366 2 190 2 737 2 92 2 320 6 62 2 568 2 
0 4 547 8 167 4 683 8 424 8 523 4 636 4 124 12 73 6 366 4 555 4 190 4 320 16 528 2 690 2 127 2 509 6 
401 8 194 4 348 2 143 2 218 2 96 4 352 2 285 6 145 10 120 2 549 2 22 2 697 2 505 4 149 2 556 10 76 4 453 4 129 4 314 2 178 2 180 2 154 4 456 14 204 2 653 4 136 2 363 62 561 2 58 4 563 2 210 4 659 4 301 4 445 4 191 2 213 2 493 2 116 2 642 2 
701 2 469 2 671 2 267 2 152 2 203 2 605 2 380 2 418 2 367 2 
8 2 288 1 199 1 289 8 471 2 376 2 379 2 378 1 475 2 674 11 476 2 676 6 382 2 107 2 582 2 484 2 385 1 487 2 14 2 15 6 109 2 490 2 110 2 587 2 391 3 492 2 18 1 692 2 216 2 115 16 694 2 595 3 403 2 500 1 405 2 502 2 123 8 226 11 126 1 131 4 26 2 228 2 510 4 28 2 609 1 705 2 710 2 416 1 235 2 519 2 715 2 520 2 35 2 521 2 619 5 327 17 622 4 328 30 724 4 148 2 331 2 330 1 426 2 48 1 430 2 241 1 730 2 433 2 630 2 434 1 339 2 438 2 249 2 441 2 734 1 64 3 347 2 349 2 166 1 264 2 265 2 746 2 172 1 355 2 71 2 74 6 173 4 174 2 270 1 176 3 455 8 558 2 182 2 83 2 362 2 84 2 86 1 365 2 189 8 93 6 663 1 569 3 193 32 
717 2 193 2 
587 2 193 2 425 2 
312 2 
37 2 497 2 353 2 410 2 45 2 672 2 336 2 49 2 529 2 557 2 483 2 439 2 31 2 87 2 57 2 187 2 735 2 638 2 396 4 284 2 304 2 495 4 665 2 620 2 
223 2 567 2 69 2 753 1 
185 2 69 2 
401 2 91 2 537 2 611 2 240 2 431 2 69 2 
611 2 656 2 69 2 
566 2 611 2 69 2 
350 2 39 2 223 2 
611 2 69 2 
151 2 39 2 
80 2 69 2 
39 2 223 2 101 2 
27 2 223 2 592 2 
536 2 223 2 447 2 
60 2 223 2 473 2 
518 2 223 2 533 2 
53 2 39 2 
406 2 69 2 
27 2 215 2 
447 2 613 2 
473 2 677 2 
200 2 518 2 
95 2 39 2 
286 2 518 2 
589 2 473 2 
2 2 447 2 
27 2 754 2 
603 2 39 2 223 2 101 2 
603 2 39 2 223 2 101 2 444 2 
274 2 39 2 223 2 
686 2 39 2 223 2 
404 2 709 2 602 2 590 2 
401 2 170 2 431 2 169 2 
401 2 91 2 170 2 655 2 431 2 169 2 
401 2 719 2 537 2 611 2 431 2 69 2 
688 2 584 2 
401 2 537 2 150 2 431 2 
361 2 473 2 
696 2 518 2 
27 2 640 2 
447 2 503 2 
518 2 447 2 341 2 
518 2 559 2 447 2 
518 2 447 2 423 2 
738 2 518 2 447 2 
401 2 572 2 402 2 575 6 431 2 652 2 229 6 233 2 
548 2 39 2 
594 2 52 2 67 4 222 2 583 2 55 2 209 2 390 6 588 2 543 2 420 2 282 2 160 2 530 2 78 2 693 2 369 4 257 2 
309 2 223 2 
476 2 
373 2 100 4 471 2 290 2 379 2 676 4 484 8 15 2 490 2 492 2 113 2 18 2 398 2 692 2 115 6 593 2 403 2 407 2 700 2 310 2 24 2 25 2 703 2 26 2 228 2 510 4 28 2 511 2 706 2 322 2 35 2 521 2 618 2 327 4 621 2 622 4 328 26 724 4 148 2 426 2 430 2 730 2 433 2 630 2 534 2 436 4 339 2 441 2 542 2 734 2 61 2 258 2 347 2 349 2 552 2 265 2 647 2 355 2 451 2 74 6 173 4 359 2 651 4 558 2 362 2 84 2 457 2 278 2 279 2 365 6 189 6 93 2 463 2 193 26 
100 4 471 2 290 2 379 2 676 5 484 8 15 2 109 1 490 2 492 2 113 2 18 2 398 2 692 2 115 6 593 2 119 2 403 2 700 2 24 2 25 2 507 2 703 2 26 2 228 2 510 4 28 2 511 2 706 2 322 2 519 1 35 2 521 2 618 2 327 4 621 2 622 4 328 26 146 2 724 4 148 2 426 2 430 2 730 2 433 2 630 2 534 2 436 4 339 2 540 2 441 2 542 2 734 2 61 2 258 2 347 2 349 2 552 2 265 2 647 2 355 2 451 2 74 6 173 4 359 2 651 4 558 2 362 2 84 2 457 2 278 2 279 2 365 6 189 6 93 2 463 2 193 26 
122 2 
375 2 236 2 
315 2 246 2 538 2 165 2 681 2 99 4 644 2 551 2 41 2 586 2 90 2 624 2 374 4 736 2 214 2 716 2 202 2 496 2 
622 2 98 2 328 6 237 2 99 4 41 4 466 2 148 2 624 2 374 4 47 4 202 6 531 2 730 2 433 2 581 6 246 2 384 2 538 2 681 2 294 4 682 4 251 2 586 2 342 2 157 2 736 2 392 2 739 2 214 4 345 2 305 2 496 4 347 2 164 2 450 2 165 2 644 2 551 2 409 2 356 2 74 4 125 4 175 2 132 2 177 6 228 2 181 2 510 2 315 2 362 2 230 2 90 2 517 2 33 2 419 4 716 4 325 2 521 2 193 12 
622 2 98 2 328 6 237 2 99 4 41 4 466 2 148 2 624 2 374 4 47 4 202 4 531 2 730 2 433 2 581 6 246 2 384 2 538 2 681 2 294 4 682 4 251 2 586 2 342 2 157 2 736 2 739 2 214 4 740 2 345 2 305 2 496 4 347 2 164 2 450 2 165 2 644 2 551 2 409 2 356 2 74 4 125 4 175 2 132 2 177 6 228 2 181 2 510 2 315 2 362 2 230 2 90 2 517 2 33 2 419 4 716 6 325 2 521 2 193 12 
622 2 98 2 328 6 237 2 99 4 41 4 466 2 148 2 624 2 374 4 47 4 202 6 531 2 730 2 433 2 581 6 246 2 384 2 538 2 681 2 294 4 682 4 251 2 586 2 342 2 157 2 736 2 739 2 214 4 345 2 305 2 496 4 347 2 164 2 450 2 165 2 644 2 551 2 409 2 356 2 74 4 125 4 175 2 132 2 177 6 228 2 181 2 510 2 315 2 362 2 230 2 90 2 517 2 660 2 33 2 419 8 716 6 325 2 521 2 193 12 
622 2 98 2 328 6 237 2 99 4 41 4 466 2 148 2 624 2 374 4 47 4 202 6 531 2 730 2 433 2 581 8 246 2 384 2 538 2 681 2 294 4 682 4 251 2 586 2 342 2 157 2 736 2 739 2 214 4 740 2 345 2 305 2 496 4 347 2 164 2 450 2 165 2 644 2 551 2 409 2 356 2 74 4 125 8 175 2 132 2 177 10 228 2 510 2 181 2 315 2 362 2 230 2 90 2 517 2 660 2 33 2 419 8 716 8 325 2 521 2 193 12 
622 2 98 2 328 6 237 2 99 4 41 4 466 2 148 2 624 2 374 4 47 4 202 6 531 2 730 2 433 2 581 6 246 2 384 2 538 2 681 2 294 4 682 4 251 2 586 2 342 2 157 2 736 2 739 2 214 4 345 2 305 2 496 4 347 2 164 2 450 2 165 2 644 2 551 2 409 2 356 2 74 4 125 8 175 2 132 2 177 10 228 2 181 2 510 2 315 2 362 2 230 2 90 2 517 2 660 2 33 2 419 8 716 6 325 2 521 2 193 12 
98 2 99 4 374 4 471 2 202 4 379 4 478 2 676 6 581 12 384 2 484 2 13 2 294 4 681 2 682 6 15 2 586 2 109 2 490 2 492 2 691 2 214 4 494 2 398 2 692 2 115 8 496 4 305 2 403 2 409 2 225 2 26 2 228 2 510 4 315 2 28 2 511 2 137 2 230 4 517 2 33 2 139 2 419 2 519 2 716 8 35 2 36 2 325 2 521 2 327 2 622 4 328 18 237 2 40 2 724 4 41 4 148 2 624 2 426 2 47 8 430 2 531 2 730 2 433 2 630 2 246 2 538 2 339 2 441 2 251 2 342 2 59 2 157 2 736 2 740 4 159 2 345 2 742 2 161 2 449 2 347 2 349 2 743 4 164 2 450 2 165 2 644 2 551 2 552 2 265 2 356 2 355 2 74 6 173 4 651 4 181 2 558 2 362 2 84 2 90 2 365 6 189 6 93 2 193 28 
98 2 668 2 99 4 374 4 471 2 673 2 202 8 379 4 478 2 676 6 581 12 384 2 484 6 108 2 294 4 681 2 682 6 15 2 586 2 109 2 490 2 587 2 492 2 689 2 691 2 214 4 494 2 17 2 398 2 692 2 115 8 496 4 305 2 308 2 403 2 224 2 409 2 225 2 25 2 312 2 607 2 26 4 228 2 510 4 315 2 28 2 511 2 137 2 230 4 517 2 33 2 140 2 139 2 419 6 519 2 716 8 35 2 36 2 325 2 521 2 717 2 327 2 622 4 328 20 237 2 40 2 724 4 41 4 329 2 425 2 148 2 624 2 426 2 524 2 47 8 430 2 531 2 730 2 433 2 630 2 246 2 538 2 339 4 250 2 441 2 251 2 342 2 59 2 157 2 736 2 63 2 159 2 345 2 742 4 161 2 449 2 347 2 349 2 743 4 164 2 450 2 165 2 644 2 551 2 552 2 265 2 356 2 355 2 74 6 173 4 359 2 651 4 454 2 181 2 558 4 362 2 84 2 89 2 278 2 90 2 660 4 365 6 189 6 93 2 760 2 193 32 
98 2 668 2 99 4 374 4 471 2 673 2 202 8 379 4 478 2 676 6 581 12 384 2 484 6 108 2 294 4 681 2 682 6 15 2 586 2 109 2 490 2 587 2 492 2 689 2 691 2 214 4 494 2 17 2 398 2 692 2 115 8 496 4 305 2 308 2 403 2 224 2 409 2 225 2 125 4 25 2 312 2 607 2 26 4 228 2 510 4 315 2 28 2 511 2 137 2 230 4 517 2 33 2 140 2 139 2 419 6 519 2 716 8 35 2 36 2 325 2 521 2 717 2 327 2 622 4 328 20 237 2 40 2 724 4 41 4 329 2 425 2 148 2 624 2 426 2 524 2 47 8 430 2 531 2 730 2 433 2 630 2 246 2 538 2 339 4 250 2 441 2 251 2 342 2 59 2 157 2 736 2 63 2 159 2 345 2 742 4 161 2 449 2 347 2 349 2 743 4 164 2 450 2 165 2 644 2 551 2 552 2 265 2 356 2 355 2 74 6 173 4 359 2 651 4 454 2 177 4 181 2 558 4 362 2 84 2 89 2 278 2 90 2 365 6 660 4 189 6 93 2 760 2 193 32 
98 2 668 2 99 4 374 4 577 2 471 2 673 2 202 10 379 2 478 2 676 6 581 16 384 2 484 6 108 2 294 4 681 2 682 6 15 4 208 2 586 2 109 2 298 2 490 2 587 2 392 2 492 2 689 2 691 2 214 4 17 2 398 2 692 2 115 12 496 4 305 2 217 2 117 2 308 2 403 2 599 2 224 2 409 2 225 2 125 4 25 2 312 2 607 2 26 4 228 2 510 4 315 2 28 2 511 2 137 2 230 4 517 2 33 2 140 2 139 2 419 6 519 2 716 10 35 2 36 2 325 2 521 2 717 2 327 4 622 4 328 18 237 2 40 2 724 4 41 4 329 2 425 2 148 2 624 2 426 2 524 2 47 8 430 2 531 2 730 2 433 2 630 2 246 2 538 2 339 4 250 2 441 2 251 2 342 2 59 2 157 2 736 2 740 2 63 2 345 2 742 4 161 2 449 2 347 2 349 2 743 4 164 2 450 2 165 2 644 2 551 2 552 2 265 2 356 2 355 2 74 6 173 4 359 2 651 6 454 2 177 4 181 2 558 4 362 2 84 2 89 2 278 2 90 2 365 8 660 4 189 8 93 4 760 2 193 30 
164 2 98 2 165 2 99 2 551 2 41 4 409 2 624 2 356 2 374 2 47 2 125 4 202 6 531 2 177 4 181 2 581 4 315 2 246 2 230 2 294 2 681 2 682 2 251 2 586 2 517 2 157 2 660 2 419 6 345 2 716 6 325 2 305 2 496 4 193 4 
98 2 99 2 374 2 471 2 202 6 379 4 476 2 676 6 581 4 382 2 107 2 294 2 681 2 682 2 15 3 586 2 109 2 490 2 492 2 494 2 398 2 692 2 496 4 216 2 115 8 305 2 403 2 409 2 228 2 510 4 28 2 315 2 511 2 230 2 512 2 517 2 142 2 419 6 519 2 716 6 35 2 325 2 521 2 327 3 622 4 328 24 724 4 41 4 148 2 624 2 426 2 627 2 47 2 430 2 531 2 730 2 433 2 630 2 246 2 441 2 251 2 157 2 345 2 159 2 347 2 349 2 164 2 450 2 165 2 551 2 550 2 68 3 262 2 552 2 265 2 355 2 356 2 74 6 173 4 651 4 177 2 181 2 362 2 84 2 660 2 365 6 189 6 93 3 193 28 
622 2 98 2 328 6 237 2 99 4 41 4 466 2 148 2 624 2 374 4 47 4 202 6 531 2 730 2 433 2 581 6 246 2 384 2 538 2 681 2 294 4 682 4 251 2 586 2 342 2 157 2 736 2 739 2 214 4 345 2 305 2 496 4 347 2 164 2 450 2 165 2 644 2 551 2 409 2 356 2 74 4 125 8 175 2 132 2 177 10 228 2 181 2 510 2 315 2 362 2 230 2 90 2 517 2 660 2 33 2 419 8 716 6 325 2 521 2 193 12 
622 2 328 6 98 2 237 2 99 4 7 2 41 4 148 2 624 2 374 4 47 4 202 8 531 2 730 2 433 2 581 8 246 2 384 2 538 2 681 2 294 4 682 4 251 2 586 2 342 2 157 2 736 2 392 2 739 2 214 4 305 2 496 4 347 2 164 2 450 2 165 2 644 2 551 2 409 2 646 2 356 2 74 4 125 8 175 2 132 2 177 10 606 4 228 2 510 2 181 2 315 2 362 2 230 2 90 2 517 2 660 2 33 2 419 8 716 6 325 2 521 2 193 12 
181 2 580 2 409 2 
181 2 580 2 409 2 
4 2 99 2 465 2 467 2 374 2 471 2 580 2 202 12 379 4 478 2 676 6 581 16 12 2 484 4 681 2 294 2 682 4 388 2 109 2 297 2 490 2 392 4 492 2 214 4 494 2 113 4 591 2 398 2 692 2 115 2 496 4 403 2 598 2 408 2 409 4 225 2 125 4 25 4 26 4 228 2 510 4 28 2 29 2 511 2 230 4 33 2 321 2 419 6 323 2 519 2 716 12 35 2 521 2 325 2 327 2 622 4 328 16 237 2 724 4 41 4 148 2 426 2 333 2 47 4 430 2 730 2 433 2 630 2 339 4 441 2 732 2 342 2 733 2 158 2 739 4 740 4 65 2 347 2 743 2 164 2 165 4 644 2 551 2 552 6 265 2 355 2 74 6 173 4 747 4 175 2 177 6 181 6 558 4 81 2 183 2 362 2 277 4 84 2 90 2 365 2 660 4 189 2 760 2 193 24 
538 2 261 2 328 2 12 2 13 2 147 2 70 2 733 2 158 2 188 2 494 2 591 2 760 2 379 2 236 2 433 2 193 4 
4 2 99 2 465 2 467 2 576 2 374 2 471 2 580 2 202 12 474 2 379 2 478 2 676 6 581 16 12 2 484 4 294 2 681 2 682 4 109 2 297 2 490 2 303 2 392 4 492 2 214 4 113 4 591 2 398 2 692 2 115 2 496 4 403 2 598 2 408 2 409 4 225 2 125 4 25 4 132 2 26 4 228 2 510 4 28 2 511 2 230 4 615 2 33 2 419 6 323 2 519 2 716 12 35 2 521 2 325 2 327 4 622 4 328 16 237 2 724 4 41 4 148 2 426 2 333 2 47 4 430 2 730 2 433 2 630 2 339 4 441 2 732 2 342 4 158 2 739 4 344 2 740 4 347 2 743 2 164 2 165 4 644 2 551 2 552 6 265 2 355 2 74 6 173 4 747 4 175 2 177 6 181 6 558 4 81 4 183 2 362 2 277 4 84 2 90 2 365 2 660 4 189 2 760 2 193 24 
4 2 99 2 465 2 467 2 374 2 471 2 580 2 377 2 202 12 379 4 478 2 676 6 581 16 12 2 484 4 681 2 294 2 682 4 109 2 297 2 490 2 392 4 492 2 214 4 494 2 113 4 591 2 398 2 692 2 115 2 496 4 403 2 598 2 408 2 409 4 225 2 125 4 25 4 132 2 26 4 228 2 510 4 28 2 511 2 610 2 230 4 516 2 33 2 419 6 323 2 519 2 716 12 35 2 521 2 325 2 327 2 622 4 328 16 237 2 724 4 41 4 148 2 426 2 333 2 47 4 430 2 730 2 433 2 630 2 153 2 339 4 441 2 732 2 342 4 733 2 158 2 739 4 740 4 347 2 743 2 164 2 165 4 644 2 551 2 552 6 265 2 355 2 74 6 173 4 747 4 175 2 177 6 181 6 558 4 81 2 183 2 362 2 277 4 84 2 90 2 365 2 660 4 189 2 755 2 760 2 193 24 
371 2 3 2 372 4 195 2 196 2 574 2 197 2 9 2 577 2 579 2 10 2 201 2 379 2 206 6 207 16 386 6 15 16 208 2 389 4 211 10 16 10 394 38 393 2 212 2 397 2 17 2 18 2 398 2 19 2 400 3 217 2 21 2 403 4 221 4 599 2 23 4 227 1 25 4 412 2 414 2 228 2 28 4 30 3 415 2 614 10 234 2 34 2 421 2 35 2 36 4 618 2 622 4 623 2 40 2 42 2 44 4 424 8 238 4 427 2 429 2 428 2 430 2 50 2 629 2 432 2 433 2 435 2 633 14 244 2 437 4 247 3 248 10 54 3 634 2 441 2 443 2 252 2 253 14 635 6 58 2 636 4 637 2 639 2 446 4 641 2 256 2 66 2 449 2 68 2 262 2 645 2 265 4 647 14 451 2 74 6 73 6 266 2 76 2 453 2 651 12 271 2 272 2 455 4 79 2 82 12 654 4 276 3 84 4 657 2 85 2 278 20 457 2 93 19 281 2 661 2 662 2 283 2 664 2 463 2 666 2 94 2 667 4 669 2 468 2 102 2 103 2 471 4 472 2 290 2 291 2 675 2 105 2 106 18 676 12 479 2 678 2 481 2 480 4 679 2 482 2 680 2 485 2 484 42 295 4 683 8 684 2 109 4 298 2 300 6 490 2 687 10 111 2 491 2 112 4 492 2 114 2 115 28 117 2 307 2 118 2 499 2 501 2 698 40 121 6 699 2 123 4 504 2 505 2 124 12 311 2 703 2 704 2 133 14 510 4 137 2 318 2 512 2 708 4 711 4 319 2 712 2 138 2 139 2 714 2 141 2 320 16 142 2 519 4 324 2 521 2 718 2 720 2 327 19 328 30 722 4 723 4 724 6 148 2 523 4 332 2 334 2 728 2 729 2 337 2 730 2 534 2 154 2 155 2 541 2 156 2 734 2 343 2 544 2 741 4 545 24 161 2 546 4 347 2 349 2 163 2 351 2 547 8 744 2 550 2 167 4 168 2 552 2 554 16 358 6 555 6 173 6 359 46 360 2 179 2 362 2 749 2 184 2 752 2 364 2 365 14 366 4 189 14 190 4 758 2 759 2 368 2 192 2 571 2 193 40 
327 2 349 2 328 2 699 2 171 2 332 2 412 2 359 6 651 2 704 2 79 2 481 2 15 2 614 2 687 2 365 2 189 2 93 2 16 4 283 2 114 2 400 2 115 2 193 2 
327 2 349 2 328 2 699 2 171 2 332 2 412 2 359 6 651 2 704 2 79 2 481 2 15 2 614 2 687 2 365 2 189 2 93 2 16 4 283 2 114 2 400 2 115 2 193 2 
327 2 349 2 328 2 699 2 171 2 332 2 412 2 359 6 651 2 704 2 79 2 481 2 15 2 614 2 687 2 365 2 189 2 93 2 16 4 283 2 114 2 400 2 115 2 193 2 
327 3 349 2 547 2 221 2 596 2 328 4 573 4 501 4 422 2 121 4 123 2 424 2 354 2 523 2 46 2 124 4 649 2 527 2 650 2 242 3 271 4 455 2 79 2 247 3 206 6 30 3 231 2 683 2 458 2 636 2 234 4 366 2 190 2 93 3 714 4 320 6 446 2 448 2 115 2 193 10 
327 2 328 4 722 2 573 4 422 2 424 2 523 2 46 2 527 2 242 2 206 6 247 2 683 2 636 2 446 2 399 2 448 2 115 2 349 2 547 2 221 2 596 2 501 4 121 4 123 2 354 2 124 4 555 2 649 2 650 2 271 4 455 2 79 2 30 2 231 2 458 2 234 4 366 2 190 2 93 2 320 4 714 4 193 10 
327 2 328 4 722 2 573 4 422 2 424 2 523 2 46 2 527 2 242 2 206 6 247 2 683 2 636 2 446 2 399 2 448 2 115 2 349 2 547 2 221 2 596 2 501 4 121 4 123 2 354 2 124 4 555 2 649 2 650 2 271 4 455 2 79 2 30 2 231 2 458 2 234 4 366 2 190 2 93 2 320 4 714 4 193 10 
327 2 328 4 722 2 573 4 422 2 424 2 523 2 46 2 527 2 242 2 206 6 247 2 683 2 636 2 446 2 399 2 448 2 115 2 349 2 547 2 221 2 596 2 501 4 121 4 123 2 354 2 124 4 555 2 649 2 650 2 271 4 455 2 79 2 30 2 231 2 458 2 234 4 366 2 190 2 93 2 320 4 714 4 193 10 
327 2 328 4 722 4 573 4 422 2 424 2 523 2 46 2 527 2 242 2 206 6 247 2 683 2 636 2 446 2 399 4 448 2 115 2 349 2 547 2 221 2 596 2 501 4 121 4 123 2 354 2 124 4 555 4 649 2 650 2 271 4 455 2 79 2 30 2 231 2 458 2 234 4 366 2 190 2 93 2 320 4 714 4 193 10 
220 2 707 2 186 2 130 2 601 2 272 2 
647 2 535 2 254 2 597 2 6 2 585 2 601 2 
643 2 162 2 328 8 464 2 43 2 526 1 648 2 673 2 11 1 508 2 314 1 477 2 381 1 228 2 631 2 135 2 273 2 204 1 245 2 748 2 387 2 514 2 299 2 460 2 193 10 20 2 
219 2 547 6 3 2 328 6 722 5 287 4 167 2 121 4 198 2 424 6 523 6 124 12 73 4 266 2 555 5 604 2 134 1 480 2 486 2 708 1 683 6 417 2 296 2 636 6 366 6 190 6 320 16 395 2 617 2 446 2 399 3 193 6 
370 4 260 2 328 1 501 2 440 7 32 2 442 2 726 2 280 1 459 2 625 2 234 2 626 2 616 2 77 2 271 2 413 2 193 1 
370 4 260 4 501 2 440 6 32 4 442 2 726 4 459 2 625 2 234 2 626 2 616 2 77 2 271 2 413 2 
370 4 260 8 328 1 501 2 440 10 32 8 442 2 726 8 280 1 459 2 625 6 234 2 626 8 616 2 77 2 271 2 413 2 193 1 
370 2 260 2 501 2 440 2 32 2 442 2 726 2 459 2 234 2 616 2 77 2 271 2 413 2 
553 2 
553 2 
553 2 
553 2 
313 2 

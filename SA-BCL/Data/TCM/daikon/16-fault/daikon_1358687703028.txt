#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (728,1042) (728,1042) 906 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.NullPointerException 1133 792 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 1133 792 281 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (728,1042) (728,1042) 906 16 90 524 329 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 268 806 796 104 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (728,1042) (728,1042) 472 1223 902 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (728,1042) (728,1042) 472 1223 902 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Debug:logDetail()Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Node:Node()V
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:eq(II)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:subsetOf([F[D)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Debug:logOn()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_134()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_52()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Quant:eq(FF)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I | CONSTANT | 69931 | 1 -> 0
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfo:has_typeof()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([B[I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.Quant:lexGTE([I[I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptName:isCombinedExitPoint()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0:arity()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.Quant:intersection([I[I)[I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice2:arity()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.Quant:lexLTE([I[I)Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String; | RETURN | 99869 | return null
daikon.ValueTuple:size()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:union([I[I)[I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfo:isDerived()Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2124 | return null
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quantify.Constant:Constant(I)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 100680 | = null
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:passes()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:isPointer()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:sum([[D)D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:noDups([I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:eltsLTE([II)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eltsLT([II)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfo:is_typeof()Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:setEqual([I[I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_161()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptSlice1:arity()I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isString()Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:gt(II)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaCharStream:ReadByte()C
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaCharStream:backup(I)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:jj_3R_48()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3_16()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_163()Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfo:relate_var()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1057 | = null
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:isPrestate()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaCharStream:getEndLine()I
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.Quant:subsetOf([I[I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | CONDITION | 48015 | if (x) -> if (!x)
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:lt(II)Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptSlice1:num_samples()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsString()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:ne(II)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:isIOASet()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gte(II)Z
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern([J)[J
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ProglangType:isIntegral()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.ProglangType:isFloat()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:concat([I[I)[I | ASSIGN | 37483 | = null
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.Intern:numIntArrays()I
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | OPERATOR | 4206 | > -> ==
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quantify.Constant:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1042 2 761 2 27 2 155 2 860 2 193 4 728 2 458 2 864 2 
343 2 1074 2 304 6 620 2 0 2 449 2 523 6 1114 2 1180 2 93 2 546 6 
522 6 711 2 1042 2 983 4 252 2 647 6 583 6 1221 2 1122 4 498 2 728 2 383 2 1126 6 
363 26 1042 6 437 16 269 16 663 4 788 8 917 6 479 10 210 29 257 8 585 2 212 4 454 2 728 6 412 2 345 16 136 8 981 2 101 2 1096 6 290 12 941 10 609 10 313 4 1063 10 397 2 948 10 1106 4 235 8 615 2 
1104 4 1117 6 
2 2 
433 2 824 2 321 2 82 2 476 2 580 2 7 2 837 4 724 2 127 2 801 2 726 2 804 2 458 2 216 2 133 2 180 2 936 2 602 2 980 2 763 2 286 2 982 4 1177 2 939 2 851 2 355 2 942 2 1103 2 397 2 236 2 952 2 358 2 430 2 573 4 
360 4 363 48 1042 4 437 32 269 32 1080 2 788 6 578 4 917 4 479 16 210 54 585 2 588 6 882 2 728 4 976 6 592 2 840 4 345 32 685 6 136 18 61 6 1130 2 288 4 226 6 1096 4 290 22 737 6 941 6 609 16 770 4 313 2 1063 16 113 4 948 16 470 2 951 8 1035 2 617 4 
942 2 1153 2 706 2 
362 2 324 2 912 2 123 10 507 2 985 2 794 2 395 2 1103 2 780 2 1067 2 1037 2 957 22 1072 2 
363 4 437 2 269 2 1155 2 917 2 479 2 210 6 482 2 1017 2 345 2 136 2 1092 2 1060 2 290 2 736 2 941 4 609 2 313 2 24 2 1063 2 948 2 742 2 998 2 
360 4 345 8 363 12 61 6 437 8 269 8 578 4 290 4 479 4 737 6 609 4 210 16 1063 4 1206 2 948 4 1106 2 802 2 
574 2 1153 2 367 2 916 4 333 10 800 2 1013 62 485 2 342 14 382 4 884 4 977 4 598 4 461 4 416 2 184 2 218 2 1058 2 220 4 845 2 847 10 688 2 1177 2 389 4 565 2 942 8 699 2 357 4 566 2 702 2 200 4 950 2 743 2 704 4 236 4 745 2 706 6 1146 2 709 2 573 4 
203 2 2 2 1167 2 219 2 224 2 898 2 944 2 741 2 1143 2 822 2 
906 2 1079 2 914 2 439 2 913 2 441 2 748 3 919 2 581 2 8 2 174 19 175 2 584 2 305 6 12 2 929 2 759 2 1090 2 308 1 595 2 182 2 460 2 187 2 938 6 610 2 945 2 322 2 474 3 624 1 35 2 625 2 206 2 478 2 328 2 1118 14 793 2 795 2 45 1 803 2 488 1 636 1 640 4 64 2 643 1 992 2 494 2 230 5 649 2 993 4 237 2 1145 2 997 3 244 2 73 19 364 2 248 3 1156 2 369 2 1001 2 832 2 1161 2 1007 1 255 2 512 2 378 2 515 2 1018 2 94 2 683 2 687 2 1175 2 391 1 693 2 1025 2 530 3 697 2 698 14 854 1 109 2 533 3 1188 2 1033 14 707 2 864 2 538 1 1038 2 1194 1 1195 2 541 4 1042 30 544 1 716 14 878 1 879 3 721 1 1046 4 725 28 728 32 132 2 1212 4 888 25 558 1 889 1 892 2 422 2 141 2 561 2 142 6 563 3 1217 1 739 6 568 2 156 3 569 2 1069 2 904 2 
504 2 728 2 
276 2 996 2 728 4 
614 2 
299 2 435 10 160 24 162 82 442 2 166 26 3 2 171 4 176 36 451 6 306 2 927 2 589 20 1088 2 594 2 596 4 1093 2 764 2 311 6 1100 2 202 4 955 2 1109 10 962 20 1113 14 1115 2 628 26 207 26 40 2 631 26 336 2 797 2 481 2 973 2 338 8 339 6 213 2 807 2 344 2 56 2 635 4 810 10 221 2 222 26 984 4 986 10 228 2 1137 8 68 2 817 2 816 4 652 82 654 20 655 10 500 2 243 26 72 2 501 2 247 2 79 82 1157 2 828 4 505 2 668 2 667 14 670 2 254 2 510 14 680 26 91 2 682 2 521 2 842 2 388 6 103 2 701 4 107 2 396 12 705 26 1032 16 861 2 863 4 119 26 710 4 1039 2 868 26 1199 2 870 2 272 2 875 2 125 2 881 2 1051 2 554 28 729 2 410 2 280 2 556 2 887 2 417 26 559 2 732 2 1061 2 735 2 894 10 901 2 297 12 
99 2 77 2 38 2 833 1 
38 2 607 2 
942 2 70 2 663 2 233 2 38 2 1005 2 402 2 
513 2 38 2 1005 2 
891 2 38 2 1005 2 
77 2 112 2 1026 2 
38 2 1005 2 
42 2 1026 2 
325 2 38 2 
77 2 1187 2 1026 2 
77 2 1049 2 424 2 
77 2 587 2 520 2 
300 2 77 2 571 2 
77 2 933 2 708 2 
1186 2 1026 2 
38 2 278 2 
191 2 1049 2 
245 2 587 2 
496 2 571 2 
933 2 758 2 
1026 2 354 2 
638 2 933 2 
63 2 571 2 
587 2 988 2 
772 2 1049 2 
77 2 1215 2 1187 2 1026 2 
77 2 1215 2 1187 2 1026 2 282 2 
77 2 225 2 1026 2 
77 2 1026 2 71 2 
514 2 178 2 1170 2 431 2 
1133 2 792 2 
1133 2 792 2 281 2 
942 2 663 2 38 2 1005 2 262 2 402 2 
438 2 286 2 
942 2 959 2 663 2 402 2 
1050 2 571 2 
284 2 933 2 
1049 2 484 2 
465 2 587 2 
217 2 587 2 933 2 
265 2 587 2 933 2 
937 2 587 2 933 2 
587 2 153 2 933 2 
251 2 85 2 1163 2 379 6 518 2 185 6 942 2 402 2 
140 2 1026 2 
320 2 1200 2 492 2 350 2 1132 4 426 2 671 2 700 2 43 2 1185 2 149 2 798 4 111 2 552 2 11 2 307 2 381 2 957 6 
77 2 1169 2 
904 2 
906 2 1079 2 913 2 577 2 175 6 305 4 929 2 455 2 930 2 759 2 181 2 938 2 945 2 779 2 958 2 624 2 623 2 961 4 625 2 206 2 1116 2 328 2 1118 6 795 2 214 2 488 2 640 4 64 2 227 2 992 2 494 2 497 2 818 2 993 4 237 2 499 4 242 2 244 2 246 2 1156 2 1001 2 253 2 1162 2 1018 2 94 2 386 2 1021 2 849 2 390 2 690 2 697 8 534 2 707 2 864 2 1038 2 1195 2 541 4 1042 26 1046 4 725 6 555 2 728 26 730 2 132 2 131 2 413 2 888 4 561 2 142 2 287 4 896 2 739 6 568 2 1222 2 
906 2 1079 2 913 2 577 2 581 2 175 6 305 6 929 2 455 2 930 2 759 2 181 2 938 2 773 2 945 2 779 2 958 2 624 2 623 2 961 4 625 2 206 2 1116 2 328 2 1118 6 795 2 1123 2 214 2 488 2 640 4 64 2 227 2 992 2 494 2 497 2 818 2 993 4 237 2 499 4 242 2 244 2 246 2 1156 2 1001 2 1162 2 1018 2 94 2 1021 2 849 2 390 2 690 2 1025 2 697 8 534 2 707 2 864 2 1038 2 1195 2 541 4 1042 26 717 2 1046 4 725 6 555 2 728 26 730 2 132 2 131 2 413 2 888 4 561 2 142 2 287 4 739 6 568 2 1222 2 159 2 
908 2 
600 2 108 2 
1074 2 999 2 1001 2 1002 2 169 2 303 2 304 6 582 2 87 8 449 4 452 4 89 2 1015 2 1018 2 935 2 95 2 841 2 18 2 523 6 260 4 1180 2 1027 2 1184 2 25 4 857 2 953 4 707 2 619 2 1038 2 1195 2 204 10 622 2 541 2 323 2 1042 6 205 2 968 2 1114 4 206 2 714 2 328 2 546 6 548 2 44 2 722 2 728 12 1056 2 53 2 1128 8 893 2 640 2 895 2 353 2 739 4 234 2 429 2 900 4 154 4 1147 2 823 2 
1074 2 1001 2 1002 2 303 2 304 6 923 2 582 2 87 8 449 4 675 2 452 4 89 2 1015 2 1018 2 935 2 95 2 841 2 18 2 523 8 260 4 1180 2 1027 2 1184 2 857 2 25 4 953 4 707 2 619 2 1038 2 1195 2 204 10 622 2 541 2 1042 6 323 2 205 2 968 2 206 2 1114 4 714 2 328 2 546 8 548 2 44 2 722 2 728 12 1056 2 343 2 53 2 60 4 1128 8 893 2 640 2 895 2 353 2 739 4 234 2 429 2 900 4 154 4 1147 2 823 2 
841 2 523 2 968 2 1114 2 1002 2 303 2 548 2 304 2 1027 2 449 2 25 4 452 4 89 2 953 2 1147 2 619 2 823 2 95 2 
1074 2 999 2 1001 2 1002 2 169 2 303 2 304 4 582 2 87 4 449 4 452 4 89 2 1015 2 1018 2 935 2 95 2 841 2 18 2 523 6 260 4 1027 2 1184 2 25 4 857 2 953 4 707 2 619 2 1038 2 1195 2 204 6 622 2 541 2 323 2 1042 6 205 2 968 2 1114 4 206 2 714 2 328 2 546 6 548 2 44 2 722 2 728 12 1056 2 343 2 53 2 1128 4 893 2 640 2 895 2 353 2 739 4 234 2 429 2 900 4 154 4 1147 2 823 2 
1074 2 999 2 0 2 1001 2 1002 2 169 2 303 2 304 6 582 2 87 4 449 4 452 4 89 2 1015 2 1018 2 935 2 95 2 841 2 18 2 523 4 260 4 1027 2 1184 2 25 4 857 2 953 4 707 2 619 2 1038 2 1195 2 204 6 622 2 541 2 323 2 1042 6 205 2 968 2 1114 4 206 2 714 2 328 2 546 6 548 2 44 2 722 2 728 12 1056 2 53 2 1128 4 893 2 640 2 895 2 353 2 739 4 234 2 429 2 900 4 154 4 1147 2 823 2 
1074 2 999 2 1001 2 1002 2 169 2 303 2 304 6 582 2 87 4 449 4 452 4 89 2 1015 2 1018 2 935 2 95 2 841 2 18 2 523 6 260 4 1180 2 1027 2 1184 2 25 4 857 2 953 4 707 2 619 2 1038 2 1195 2 204 6 622 2 541 2 323 2 1042 6 205 2 968 2 1114 4 206 2 714 2 328 2 546 6 548 2 44 2 722 2 728 12 1056 2 53 2 1128 8 893 2 640 2 895 2 353 2 739 4 234 2 429 2 900 4 154 4 1147 2 823 2 
1074 2 999 2 0 2 1001 2 1002 2 169 2 303 2 304 8 582 2 87 8 449 4 452 4 89 2 1015 2 1018 2 935 2 95 2 841 2 18 2 523 6 260 4 1180 2 1027 2 1184 2 25 4 857 2 953 4 707 2 619 2 1038 2 1195 2 204 10 622 2 541 2 323 2 1042 6 205 2 968 2 1114 4 206 2 714 2 328 2 546 8 548 2 44 2 722 2 728 12 1056 2 53 2 1128 8 893 2 640 2 895 2 353 2 739 4 234 2 429 2 900 4 154 4 1147 2 823 2 
1074 2 999 2 1001 2 1002 2 169 2 303 2 304 6 582 2 87 8 449 4 452 4 89 2 1015 2 1018 2 935 2 95 2 841 2 18 2 523 6 260 4 1180 2 1027 2 1184 2 25 4 857 2 953 4 707 2 619 2 1038 2 1195 2 204 10 622 2 541 2 323 2 1042 6 205 2 968 2 1114 4 206 2 714 2 328 2 546 6 548 2 44 2 722 2 728 12 1056 2 53 2 1128 8 893 2 640 2 895 2 353 2 739 4 234 2 429 2 900 4 154 4 1147 2 823 2 
0 4 906 2 907 1 913 2 4 2 303 2 920 2 581 2 304 8 582 2 305 6 10 2 586 2 928 2 929 2 932 2 935 2 18 4 19 2 938 2 25 4 945 2 614 6 953 4 619 2 958 2 622 2 323 2 965 6 625 2 968 2 328 2 332 6 335 2 44 2 971 6 46 2 53 2 979 1 640 4 64 12 353 2 992 2 993 4 999 2 666 2 1001 2 1002 2 1004 2 84 6 673 2 89 2 1015 4 1016 2 1018 2 94 2 95 2 96 2 387 6 1024 4 102 6 390 2 1025 2 697 4 1027 2 707 2 1038 2 1042 24 122 1 714 2 126 2 720 2 722 2 1046 4 725 8 728 46 411 2 132 2 413 2 1056 2 142 2 739 6 1064 10 1065 6 429 2 154 6 1074 4 1079 2 168 6 1083 2 175 6 449 4 753 2 452 4 755 2 759 2 1091 1 463 2 464 6 466 1 195 2 1105 1 471 2 204 2 205 2 206 2 1114 4 1118 6 1120 2 795 2 211 2 487 6 1128 2 494 2 495 2 1139 2 234 2 818 2 237 2 499 4 238 2 1147 2 244 2 823 2 1156 2 504 6 249 2 1159 1 1164 4 517 1 841 2 523 4 260 8 263 7 1184 2 857 2 534 4 864 2 1195 2 541 4 1196 2 867 6 871 1 874 7 877 6 546 12 548 2 1205 2 550 6 276 6 555 2 888 2 893 2 561 2 895 2 899 8 292 2 900 4 568 2 
1074 4 906 2 1079 2 913 2 4 2 168 6 1083 2 920 2 303 2 304 8 581 2 582 2 449 4 175 6 305 6 10 2 753 2 586 2 452 4 755 2 928 2 929 4 932 2 935 2 759 4 463 2 464 6 18 4 19 2 938 2 195 2 945 2 25 4 614 6 953 4 471 2 619 2 958 2 204 2 622 2 323 2 965 6 205 2 625 2 968 2 1114 4 206 2 328 2 1118 6 1120 2 332 6 335 2 795 2 211 2 46 2 971 6 44 2 487 6 53 2 55 2 1128 6 64 12 640 4 992 2 353 2 495 2 494 2 1139 2 818 2 234 2 993 4 499 4 237 2 238 2 1147 2 1149 2 244 2 823 2 999 2 249 2 504 6 1156 2 666 2 1001 2 1002 2 84 6 1004 2 673 2 89 2 1164 4 1016 2 1015 4 1018 2 94 2 95 2 96 2 387 6 841 2 1024 4 523 8 102 6 390 2 260 8 1025 2 1180 4 697 8 1027 2 1184 2 857 2 534 4 707 2 864 2 1038 2 1195 2 867 6 1196 2 541 4 1042 26 714 2 877 6 546 12 548 2 550 6 1205 2 126 2 276 6 720 2 722 2 1046 4 725 8 555 2 411 2 728 48 132 4 413 2 1056 2 888 2 893 2 561 2 287 2 142 2 895 2 739 6 899 8 1064 10 292 2 1065 6 429 2 900 4 568 2 154 6 
1074 4 906 2 1079 2 913 2 4 2 168 6 1083 2 920 2 303 2 304 8 581 2 582 2 175 6 449 4 305 6 10 2 753 2 586 2 452 4 755 2 928 2 929 4 932 2 935 2 759 4 463 2 464 6 18 4 19 2 938 2 195 2 25 4 945 2 614 6 953 4 471 2 619 2 958 2 622 2 204 6 323 2 965 6 205 2 625 2 968 2 1114 4 206 2 328 2 1118 6 1120 2 332 6 335 2 795 2 211 2 46 2 971 6 44 2 487 6 53 2 55 2 1128 6 64 12 640 4 992 2 353 2 495 2 494 2 1139 2 818 2 234 2 993 4 499 4 237 2 238 2 1147 2 1149 2 244 2 823 2 999 2 249 2 504 6 1156 2 666 2 1001 2 1002 2 84 6 1004 2 673 2 87 4 89 2 1164 4 1016 2 1015 4 1018 2 94 2 95 2 96 2 387 6 841 2 1024 4 523 8 102 6 390 2 260 8 1025 2 1180 4 697 8 1027 2 1184 2 857 2 534 4 707 2 864 2 1038 2 1195 2 867 6 1196 2 541 4 1042 26 714 2 877 6 546 12 548 2 550 6 1205 2 126 2 276 6 720 2 722 2 1046 4 725 8 555 2 411 2 728 48 132 4 413 2 1056 2 888 2 893 2 561 2 287 2 142 2 895 2 739 6 899 8 1064 10 292 2 1065 6 429 2 900 4 154 6 568 2 
0 2 906 2 913 2 4 2 303 2 920 2 581 2 304 10 582 2 305 6 10 2 586 2 928 2 929 4 932 2 935 2 599 2 18 4 19 2 938 4 945 2 25 4 614 12 953 4 619 2 958 2 622 2 323 2 965 12 625 2 968 2 328 2 332 6 335 2 44 2 971 6 46 2 343 2 53 2 55 2 640 4 64 10 353 2 992 2 993 4 999 2 75 6 366 2 666 2 1001 2 1002 2 1004 2 84 6 673 2 87 4 89 2 1015 4 1016 2 1018 2 94 2 95 2 96 2 387 6 1024 4 1022 6 102 6 390 2 689 2 1025 2 697 10 1027 2 1036 2 707 2 1038 2 1042 24 714 2 126 2 720 2 722 2 1046 4 725 12 727 2 728 52 411 2 132 4 413 2 1056 2 134 6 142 4 739 6 427 2 1064 8 1065 6 429 2 154 6 1074 4 1079 2 161 6 167 6 168 6 1083 2 444 2 449 4 175 8 753 2 452 4 759 4 1089 2 463 2 464 12 1095 6 195 2 471 2 784 6 204 6 205 2 206 2 1114 4 1118 8 1120 2 795 2 211 2 483 6 487 6 1128 6 494 2 495 2 1139 2 234 2 818 4 237 2 499 6 238 2 1147 2 1149 2 244 2 823 2 249 2 1156 2 504 12 834 6 1164 4 841 2 523 10 260 8 1180 4 1184 2 857 2 534 4 864 2 1195 2 541 4 1196 2 867 12 877 6 546 16 548 2 1205 2 550 6 276 12 555 4 888 4 893 2 561 2 287 2 895 2 899 8 292 2 900 4 568 2 
999 2 1074 2 622 2 204 4 323 2 968 2 1114 4 714 2 1002 2 546 4 304 6 87 4 449 4 452 2 89 2 728 4 935 2 95 2 1056 2 841 2 53 2 1128 6 523 6 260 2 1180 2 895 2 353 2 1184 2 857 2 25 2 234 2 900 2 154 2 1147 2 619 2 
1074 2 906 2 1078 2 1079 2 913 2 439 2 304 6 581 2 449 4 175 6 305 6 452 2 755 2 935 2 603 2 938 3 608 2 25 2 945 2 619 2 622 2 204 2 323 2 625 2 968 2 1114 4 206 2 328 2 1118 6 795 2 44 2 53 2 1128 6 62 3 640 4 64 4 353 2 992 2 494 2 234 2 993 4 237 2 499 4 1145 2 1147 2 244 2 999 2 1156 2 1001 2 372 2 1002 2 89 2 1018 2 94 2 95 2 841 2 523 6 390 2 260 2 1025 2 1180 2 1184 2 857 2 534 2 707 2 864 2 1038 2 1195 2 541 4 1042 24 714 2 546 4 409 2 1046 4 725 8 728 28 413 2 1056 2 888 3 561 2 142 3 895 2 739 6 1064 2 900 2 154 2 568 2 569 2 904 2 
857 2 653 2 353 2 
857 2 653 2 353 2 
1074 4 0 4 1079 2 913 2 4 2 446 2 920 2 303 2 581 2 304 12 582 2 175 2 449 4 305 6 452 2 756 2 929 4 935 2 759 4 18 2 22 2 940 2 945 2 25 2 953 4 619 2 958 4 204 6 622 2 960 4 326 4 625 2 206 2 1114 4 328 2 1118 2 795 2 486 2 343 4 1128 6 811 2 640 4 64 4 352 2 227 4 353 6 992 2 494 2 1138 2 993 4 237 2 653 2 239 2 244 2 823 2 660 2 1156 2 1001 2 1002 4 87 4 836 2 1164 2 1015 4 1018 2 94 2 1020 2 95 2 1024 2 523 12 390 2 260 4 1025 2 1180 4 696 2 697 4 856 2 857 4 534 6 707 2 864 2 1038 2 1195 2 1196 2 541 4 1042 16 877 2 546 16 718 2 722 2 1046 4 725 2 728 24 132 4 413 2 888 2 893 2 561 2 425 2 739 6 1064 2 150 2 900 2 154 4 568 2 
1042 2 206 2 64 2 940 2 352 2 877 2 1097 2 1120 2 335 2 1138 2 1027 2 880 2 108 2 1064 2 1164 2 1210 2 728 4 
1074 4 0 4 1079 2 913 2 4 2 446 2 920 2 303 2 581 2 304 12 582 2 175 2 449 4 305 6 452 2 756 4 929 4 935 2 759 4 18 4 940 2 945 2 25 2 953 4 619 2 958 4 204 6 622 2 1112 2 960 4 326 4 625 2 206 2 1114 4 328 2 1118 2 795 2 343 4 1128 6 811 2 640 4 64 2 352 2 227 4 353 6 992 2 494 2 1138 2 993 4 237 2 653 2 239 2 244 2 823 2 1151 2 826 2 1156 2 1001 2 1002 4 87 4 836 2 1015 4 1018 2 94 2 1020 2 95 2 1024 2 523 12 390 2 260 4 1025 2 1180 4 696 2 697 4 856 2 857 4 534 6 707 2 864 2 1038 2 1195 2 1196 2 541 4 1042 16 877 2 547 2 546 16 718 2 408 2 722 2 1046 4 725 2 728 24 132 4 413 2 888 4 893 2 561 2 739 6 150 2 429 2 900 2 154 4 568 2 
1074 4 0 4 1079 2 913 2 4 2 446 2 920 2 303 2 581 2 304 12 582 2 175 2 449 4 305 6 452 2 756 2 929 4 935 2 759 4 18 4 940 2 945 2 25 2 953 4 619 2 958 4 204 6 622 2 960 4 326 4 625 2 206 2 1114 4 328 2 1118 2 795 2 974 2 343 4 1128 6 811 2 640 4 64 4 352 2 227 4 353 6 992 2 494 2 1138 2 993 4 237 2 653 2 239 2 244 2 823 2 1156 2 1001 2 1002 4 87 4 838 2 836 2 1164 2 1015 4 1018 2 94 2 1020 2 95 2 1024 2 523 12 526 2 390 2 260 4 1025 2 1180 4 696 2 697 4 856 2 857 4 534 6 707 2 536 2 864 2 1038 2 1195 2 1196 2 541 4 1042 16 877 2 546 16 718 2 722 2 1046 4 725 2 130 2 728 24 132 4 413 2 888 2 893 2 561 2 739 6 1064 2 150 2 429 2 900 2 154 4 568 2 
1 2 575 2 6 2 5 18 581 6 8 2 585 1 590 2 13 2 593 2 14 4 597 2 598 2 15 2 16 2 601 2 603 2 19 4 20 16 605 2 609 6 23 2 611 2 26 18 612 3 29 8 28 18 31 2 30 10 616 2 33 2 618 2 34 4 624 2 36 2 626 2 39 2 627 24 629 10 41 10 48 50 49 2 634 2 50 3 54 2 57 18 58 2 59 4 637 2 62 2 639 2 641 2 640 6 64 4 644 2 66 14 645 1 646 102 67 2 648 2 650 8 657 16 658 4 73 2 659 2 662 2 76 2 74 8 78 2 664 2 80 2 666 2 665 16 83 6 669 2 88 2 676 2 677 22 678 2 90 2 92 14 681 2 94 2 97 2 684 18 685 6 686 2 98 2 689 2 691 2 693 2 692 6 695 2 698 6 697 140 106 2 109 2 110 8 113 4 114 2 707 2 712 2 124 2 715 2 716 62 719 22 720 2 723 2 725 60 727 2 129 3 730 2 728 96 135 18 731 2 136 5 138 2 733 14 141 2 734 18 142 46 144 20 737 6 145 2 738 4 739 8 147 2 151 74 152 12 744 2 157 3 158 10 746 14 747 2 163 2 164 2 749 10 750 2 751 2 174 2 175 14 753 4 757 2 183 2 760 2 188 2 762 2 192 2 765 2 766 2 194 3 196 2 197 16 769 102 768 2 198 2 771 2 774 22 778 18 783 10 785 32 787 2 206 2 788 6 789 2 791 2 208 2 210 23 795 2 799 2 805 2 215 2 808 34 812 2 223 24 231 2 232 32 818 42 819 2 821 4 238 4 241 2 244 4 246 2 825 2 827 86 250 2 830 2 255 2 256 2 835 2 839 16 843 2 848 3 849 2 259 2 850 28 853 2 855 2 858 2 264 3 266 14 267 36 862 2 864 8 865 14 866 2 869 14 269 12 271 3 872 2 274 2 273 3 876 2 275 4 277 2 882 2 279 60 883 2 885 2 884 2 888 48 283 132 890 1 285 2 290 10 291 2 294 4 293 32 295 2 906 2 909 16 910 2 913 4 914 2 915 2 916 2 918 4 302 2 919 2 921 18 922 2 924 2 305 14 926 2 930 2 934 4 309 2 938 16 943 2 946 2 947 18 314 2 948 6 315 4 951 8 316 2 317 18 318 90 956 2 958 10 322 2 966 2 967 4 328 2 329 2 970 8 330 2 331 32 334 32 340 2 975 2 341 4 345 12 347 2 348 28 349 22 351 2 991 2 992 2 356 2 994 2 993 6 361 18 360 4 363 18 366 4 365 2 368 32 1001 2 371 2 372 2 1006 2 375 2 376 2 377 2 1010 2 1011 4 1012 4 380 2 1018 2 384 4 1021 2 1023 10 390 2 389 2 1025 6 1028 12 1031 2 1029 2 398 4 1033 18 1034 2 1035 4 1036 2 400 2 1038 2 403 2 1041 2 1042 56 404 62 405 2 1043 2 406 2 1045 4 409 2 1046 6 1047 2 1048 2 1052 14 1054 2 414 10 419 4 420 3 421 2 423 8 1062 2 427 2 1063 6 428 4 1066 4 432 24 1076 1 434 14 1077 2 1078 2 1079 4 437 12 440 2 1081 2 443 2 1083 2 444 2 445 2 1084 2 448 2 1085 4 450 2 453 2 1086 156 456 2 457 2 459 18 1089 2 462 2 461 2 463 2 468 2 1096 4 1099 14 1101 2 469 2 1107 2 1108 3 473 2 475 2 1110 36 1111 12 477 2 1116 38 1118 16 479 6 480 2 1121 56 1124 2 1125 4 1127 22 488 2 489 2 490 18 491 2 1131 34 493 14 1134 2 494 2 1136 4 1139 2 497 2 499 12 1144 32 1148 2 1150 2 1152 24 1154 6 503 2 1156 8 506 2 508 2 509 36 1162 2 511 4 512 2 516 32 1166 2 1168 2 1171 36 1173 2 1174 2 524 2 525 14 1176 2 1175 2 528 2 1179 4 530 2 1182 2 1181 2 531 2 534 2 1190 2 1191 2 1192 3 1195 2 539 2 541 6 540 2 1198 3 542 2 543 18 1202 2 1203 18 549 4 1205 2 1208 2 1209 14 555 46 1211 2 1213 4 1214 4 557 2 1216 2 561 2 560 2 563 2 1218 2 564 2 1219 2 1220 32 570 8 
906 2 1042 2 250 2 749 2 1118 2 1160 2 448 2 175 2 725 2 975 2 555 6 728 2 883 2 888 2 938 2 142 2 67 2 231 2 30 2 994 2 499 2 157 2 158 4 618 2 
906 2 1042 2 250 2 749 2 1118 2 1160 2 448 2 175 2 725 2 975 2 555 6 728 2 883 2 888 2 938 2 142 2 67 2 231 2 30 2 994 2 499 2 157 2 158 4 618 2 
906 2 1042 2 250 2 749 2 1118 2 1160 2 448 2 175 2 725 2 975 2 555 6 728 2 883 2 888 2 938 2 142 2 67 2 231 2 30 2 994 2 499 2 157 2 158 4 618 2 
298 2 906 2 363 4 1042 4 1111 2 437 2 269 2 250 2 788 4 165 3 716 2 479 2 407 2 210 5 719 4 1085 2 677 4 1014 4 725 2 728 10 519 2 1127 4 888 3 345 2 186 2 223 3 392 2 142 3 1096 2 146 2 609 2 897 2 646 6 105 2 774 4 1063 2 859 2 948 2 1033 2 432 3 
298 2 906 2 363 4 1042 4 1111 2 437 2 269 2 250 2 788 4 165 2 716 2 479 2 407 2 210 4 719 4 1085 2 677 4 585 2 1014 4 725 2 728 10 519 2 1127 4 888 2 345 2 186 2 136 2 223 2 392 2 142 2 290 2 1096 2 146 2 609 2 897 2 646 6 105 2 774 4 1063 2 859 2 948 2 1033 2 432 2 
298 2 906 2 363 4 1042 4 1111 2 437 2 269 2 250 2 788 4 165 2 716 2 479 2 407 2 210 4 719 4 1085 2 677 4 585 2 1014 4 725 2 728 10 519 2 1127 4 888 2 345 2 186 2 136 2 223 2 392 2 142 2 290 2 1096 2 146 2 609 2 897 2 646 6 105 2 774 4 1063 2 859 2 948 2 1033 2 432 2 
298 2 906 2 363 4 1042 4 1111 2 437 2 269 2 250 2 788 4 165 2 716 2 479 2 407 2 210 4 719 4 1085 2 677 4 585 2 1014 4 725 2 728 10 519 2 1127 4 888 2 345 2 186 2 136 2 223 2 392 2 142 2 290 2 1096 2 146 2 609 2 897 2 646 6 105 2 774 4 1063 2 859 2 948 2 1033 2 432 2 
298 2 906 2 363 4 1042 4 1111 2 437 2 269 2 250 2 788 4 165 2 716 2 479 2 407 2 210 4 719 4 1085 2 677 4 585 4 1014 4 725 2 728 10 519 2 1127 4 888 2 345 2 186 2 136 4 223 2 392 2 142 2 290 4 1096 2 146 2 609 2 897 2 646 6 105 2 774 4 1063 2 859 2 948 2 1033 2 432 2 
121 2 551 2 632 2 32 2 545 2 1062 2 
1008 2 346 2 1009 2 551 2 815 2 1116 2 767 2 
1042 4 268 2 81 1 527 2 1082 1 143 2 1119 2 170 2 393 1 104 2 796 2 950 1 743 1 707 2 728 4 806 2 1055 2 
360 2 1042 6 363 12 963 2 437 6 269 6 440 2 788 4 479 6 549 2 210 14 585 4 634 2 728 6 345 6 685 4 136 4 138 2 987 2 1096 2 290 5 990 2 737 4 609 6 1063 6 113 2 948 6 951 2 241 2 905 2 
1127 2 978 2 1042 1 17 2 100 2 21 2 873 2 672 4 719 2 567 2 774 2 1140 2 294 2 679 1 728 1 1068 2 51 7 786 2 
1127 2 978 2 100 2 17 4 21 2 873 2 672 4 719 2 567 4 774 2 1140 2 294 4 1068 2 51 6 786 2 
1127 2 978 2 1042 1 100 8 17 8 21 2 873 6 672 4 719 2 567 8 774 2 1140 2 294 8 679 1 728 1 1068 2 51 10 786 2 
1127 2 978 2 17 2 21 2 672 2 719 2 567 2 774 2 1140 2 294 2 1068 2 51 2 786 2 
1079 6 911 2 913 4 579 2 447 2 581 4 172 2 8 2 305 30 925 2 1087 2 190 2 1094 2 467 4 312 2 776 2 777 2 201 2 472 2 319 4 621 2 964 3 37 2 969 2 337 2 47 2 49 2 52 1 813 2 989 2 1135 2 229 2 1141 2 993 16 1142 2 820 2 995 2 244 6 661 2 370 4 1003 1 669 2 374 2 86 2 1019 2 844 1 686 2 1025 4 852 4 261 2 1183 2 399 4 116 2 117 2 537 4 115 2 120 4 1193 2 1040 12 1042 34 1197 2 713 2 1044 2 1204 2 1207 2 1046 14 128 2 728 38 418 2 139 1 1059 2 740 2 296 1 902 2 1224 2 1223 2 1071 1 1073 2 
1075 2 502 2 1079 2 1000 2 913 2 1158 2 829 2 831 2 301 4 1003 2 669 2 581 3 173 2 752 2 305 45 9 2 754 2 925 2 177 2 591 2 179 4 931 2 385 2 686 2 189 2 310 2 846 6 604 2 1094 2 467 38 1178 2 606 2 1025 3 694 2 261 6 1183 2 532 2 1030 2 199 4 703 2 776 2 777 2 949 2 399 4 535 2 1189 2 401 2 954 2 115 2 781 2 537 4 118 4 472 2 319 4 621 2 1042 44 1040 6 964 2 37 2 270 2 1201 2 790 2 969 2 327 2 1204 2 630 2 337 4 47 2 1046 20 553 2 49 2 728 46 1053 2 415 2 809 2 1059 2 813 2 642 2 562 2 289 2 1135 2 65 2 69 2 993 20 240 2 656 2 902 2 903 2 1223 2 572 2 244 2 1073 2 
359 2 436 2 1079 4 913 2 911 2 576 6 370 2 579 2 374 2 669 2 581 6 447 2 172 2 8 2 305 34 1165 2 1087 2 931 4 1019 2 1172 2 686 2 190 2 1094 4 467 14 1025 6 852 6 1183 2 1098 2 394 2 1102 2 1030 2 949 2 399 4 535 4 115 2 117 2 537 4 782 2 116 2 472 2 319 4 120 6 1193 2 1042 38 1040 10 1197 2 964 4 37 2 713 2 1044 4 209 6 1204 4 337 2 972 2 47 2 1207 2 1046 14 128 2 553 2 49 2 728 42 1053 4 886 2 1057 6 1129 2 813 2 989 2 1135 4 814 2 1141 2 993 16 995 2 296 2 902 2 1223 2 244 4 
1079 2 913 2 1003 2 373 2 669 2 581 10 674 4 305 38 925 4 258 2 686 2 1094 2 467 14 529 2 1025 10 261 6 1183 2 312 2 775 2 776 4 777 4 613 2 399 6 201 10 401 2 537 6 115 2 472 2 319 6 621 4 1042 26 1040 8 964 2 37 2 270 2 969 4 1204 2 337 2 47 2 1046 14 553 2 49 2 633 2 52 2 728 28 415 2 137 2 139 2 1059 4 813 2 1135 2 229 10 148 4 993 14 820 2 902 2 296 6 1224 2 1070 2 1223 2 1071 2 244 2 
651 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 406 326 902 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (36,294) (584,751) 900 354 298 828 700 569 521 (493,524) 904 (303,665) (493,524) 43 (303,665) 760 467 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (36,294) (584,751) 900 354 298 828 700 569 521 (493,524) 904 (303,665) (493,524) 43 (303,665) 760 467 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (36,294) (584,751) 900 354 298 828 700 569 521 (493,524) 904 (303,665) (493,524) 43 (303,665) 760 467 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (36,294) (584,751) 900 354 298 828 700 569 521 (493,524) 904 (303,665) (493,524) 43 (303,665) 760 467 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (36,294) (36,294) 421 41 94 918 446 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 662 589 225 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 397 478 471 662 589 225 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 662 589 225 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.VarInfo:is_typeof()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:pow(II)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:base()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfo:isIOASet()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([II)I | CONDITION | 13875 | if (x) -> if (!x)
utilMDE.ArraysMDE:sum([[D)D
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.MathMDE:gcd([I)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfo:has_typeof()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String; | RETURN | 34154 | return null
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ProglangType:baseIsScalar()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:ne(II)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.test.FormatTestCase:passes()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:sign(I)I
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:lexGTE([I[I)Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:noDups([I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:isPointer()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_ntk()I
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:eltsLTE([II)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 127014 | + -> /
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gt(II)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ModBitTracker:num_vars()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName:hashCode()I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsFloat()Z
daikon.ProglangType:dimensions()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2752 | return null
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:eltsLT([II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.PptSlice1:arity()I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isArray()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.ModBitTracker:split(I)I
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.OrderedPairIterator:setnext2()V
daikon.ProglangType:baseIsString()Z
daikon.inv.Invariant:logDetail()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:modulus([I)[I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | RETURN | 21115 | return null
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ProglangType:isString()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3095 | - -> *
daikon.inv.Invariant:getConfidence()D
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:subsetOf([J[J)Z | CONDITION | 196771 | if (x) -> if (!x)
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 20179 | if (x) -> if (!x)
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quantify.Constant:Constant(I)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfo:relate_var()V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptSlice1:num_samples()I
daikon.Quant:gte(II)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:negate(I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaCharStream:backup(I)V
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eltwiseEqual([I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaCharStream:getEndLine()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:sum([I)I
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariants:Invariants()V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfo:isPrestate()Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 2 149 2 294 2 265 4 999 2 10 2 944 2 498 2 36 2 
706 2 690 2 320 2 211 6 919 2 314 2 784 6 617 2 322 2 704 2 585 6 
1023 2 796 2 964 2 668 6 590 4 966 2 711 2 981 6 920 6 527 6 294 2 678 4 36 2 
317 10 855 10 814 12 505 16 696 16 507 2 360 2 5 16 294 6 604 8 638 10 274 2 612 26 460 8 489 6 705 10 680 2 555 2 710 4 278 4 563 4 845 8 128 10 620 29 883 8 853 4 1040 6 36 6 807 2 136 2 
520 6 20 4 
46 2 
734 2 737 2 344 2 216 2 862 4 970 2 330 2 452 2 470 2 222 2 223 2 226 2 
1 2 636 2 
974 2 630 2 226 2 
230 10 588 2 538 2 92 2 591 2 713 2 1034 2 648 2 842 2 849 2 674 2 350 22 116 2 401 2 
855 2 317 2 814 2 696 2 505 2 477 2 5 2 323 2 242 2 638 2 612 4 204 2 547 2 489 2 705 4 276 2 278 2 128 2 845 2 620 6 415 2 190 2 34 2 
855 4 317 4 814 5 696 8 505 8 105 6 963 4 710 2 5 8 983 2 1035 6 128 4 620 14 638 4 761 2 333 4 612 12 
568 2 978 2 752 4 233 4 940 4 106 2 941 4 447 4 543 10 788 2 862 4 576 4 295 2 903 2 511 2 297 2 641 2 514 2 910 2 644 4 915 2 157 2 122 4 707 2 554 14 254 4 878 4 56 10 216 4 1036 2 58 2 280 62 348 4 718 2 974 6 389 2 630 2 631 2 227 2 226 8 
38 2 68 2 46 2 181 2 404 2 345 2 803 2 689 2 717 2 932 2 
896 3 0 2 504 2 142 3 269 2 6 2 397 4 510 3 637 2 512 2 151 2 642 2 764 2 522 16 523 2 645 1 17 3 525 6 158 2 772 2 277 4 922 2 773 2 23 2 25 2 651 2 530 2 532 2 656 12 166 2 36 32 167 2 168 2 781 2 40 2 939 2 664 2 537 2 171 2 42 2 539 2 289 2 944 2 421 2 666 2 542 1 946 2 670 5 174 2 294 34 45 2 545 2 430 2 431 3 48 1 49 1 960 2 435 1 52 2 186 2 962 2 681 2 53 2 188 6 798 16 306 2 682 2 683 3 54 2 307 16 801 2 968 1 313 2 315 24 691 4 975 2 192 1 806 4 811 1 570 24 694 2 979 2 444 1 695 32 818 2 699 2 820 2 321 1 574 1 824 2 70 1 987 2 577 2 329 2 451 1 579 3 202 2 830 2 81 2 832 2 86 6 87 2 90 2 840 2 215 2 93 2 1000 2 716 2 349 2 468 2 598 4 854 2 721 2 99 2 100 2 1005 4 358 2 478 4 602 2 364 2 863 2 1012 3 730 3 1015 3 114 8 371 2 1018 2 1020 2 377 4 615 2 875 2 491 32 380 1 876 8 383 3 255 2 1032 2 1031 1 742 2 129 2 130 2 497 3 132 8 133 6 263 16 748 1 135 2 
392 2 
294 4 751 2 584 2 
859 2 
503 2 39 2 822 2 268 2 296 2 902 2 326 2 948 2 909 4 956 2 455 2 488 2 459 4 187 2 917 2 84 2 304 2 406 2 879 2 413 2 217 2 261 2 59 2 35 2 
625 2 564 2 172 2 428 1 
172 2 183 2 
563 2 18 2 572 2 747 2 172 2 226 2 895 2 
172 2 479 2 895 2 
162 2 172 2 895 2 
550 2 625 2 284 2 
172 2 895 2 
284 2 13 2 
461 2 172 2 
625 2 284 2 500 2 
625 2 839 2 786 2 
378 2 625 2 652 2 
594 2 73 2 625 2 
51 2 625 2 709 2 
284 2 911 2 
200 2 172 2 
786 2 14 2 
378 2 219 2 
50 2 73 2 
51 2 375 2 
844 2 284 2 
51 2 907 2 
73 2 861 2 
378 2 869 2 
697 2 786 2 
698 2 625 2 284 2 500 2 
698 2 601 2 625 2 284 2 500 2 
412 2 625 2 284 2 
767 2 625 2 284 2 
121 2 212 2 155 2 118 2 
472 2 805 2 558 2 203 2 719 4 
625 2 146 2 
57 2 18 2 892 2 226 2 
57 2 1024 2 18 2 747 2 892 2 226 2 
563 2 18 2 172 2 561 2 226 2 895 2 
153 2 316 2 
563 2 926 2 18 2 226 2 
8 2 73 2 
51 2 578 2 
462 2 786 2 
378 2 351 2 
378 2 51 2 71 2 
378 2 51 2 890 2 
378 2 51 2 480 2 
378 2 51 2 308 2 
448 2 107 6 180 6 185 2 18 2 929 2 226 2 894 2 
284 2 891 2 
539 2 
0 2 898 2 504 2 269 2 397 4 6 2 270 2 152 2 642 2 764 2 516 2 519 2 525 6 772 4 277 2 922 2 773 2 25 2 927 4 530 2 651 2 656 8 166 2 36 26 664 2 944 2 666 2 421 2 174 6 294 26 177 2 53 2 188 2 307 6 566 2 806 2 694 2 695 4 699 2 820 2 321 2 824 2 70 2 77 2 331 2 202 2 335 2 86 2 90 2 87 2 840 2 715 2 1000 2 716 2 852 2 598 4 1005 4 478 4 863 2 244 2 245 2 371 2 1018 2 247 2 377 2 615 2 491 6 876 2 255 2 742 2 129 2 496 4 622 2 133 4 
0 2 504 2 143 2 269 2 397 4 6 2 270 2 642 2 764 2 516 2 519 2 525 6 772 4 277 2 922 2 773 2 25 2 927 4 530 2 651 2 656 8 166 2 36 26 939 2 664 2 944 2 666 2 421 2 174 6 294 26 177 2 53 2 188 2 307 6 566 2 806 2 694 2 695 4 699 2 820 2 321 2 824 2 70 2 77 2 202 2 335 2 86 2 90 2 87 2 840 2 715 2 1000 2 716 2 349 2 852 2 598 4 1005 4 857 2 478 4 863 2 244 2 245 2 371 2 1018 2 247 2 870 2 377 2 615 2 491 6 876 2 255 2 742 2 129 2 130 2 496 4 622 2 133 6 
32 2 
632 2 517 2 
66 2 693 2 139 4 391 2 820 2 756 2 980 2 4 10 760 2 399 2 454 2 334 4 585 6 704 2 524 2 525 4 211 6 90 2 919 2 840 2 410 2 213 2 714 2 774 2 851 4 467 2 469 2 598 2 534 2 36 6 420 2 231 2 664 2 1005 2 104 2 665 2 288 2 1007 4 43 2 784 6 241 2 294 12 605 2 1011 2 111 2 1017 8 957 2 300 2 615 2 379 8 303 2 877 2 617 4 255 2 559 4 742 2 802 2 310 2 262 4 314 4 
66 2 693 2 391 2 139 4 320 2 820 2 756 2 980 2 4 10 760 2 399 2 454 2 334 4 585 8 704 2 524 2 525 4 211 8 90 2 919 2 840 2 410 2 714 2 848 4 851 4 467 2 469 2 598 2 36 6 534 2 420 2 231 2 1005 2 664 2 104 2 665 2 288 2 1007 4 43 2 784 6 241 2 541 2 294 12 605 2 1011 2 111 2 1017 8 957 2 300 2 248 2 615 2 379 8 303 2 877 2 617 4 255 2 559 4 742 2 802 2 310 2 262 4 314 4 
66 2 139 4 303 2 617 2 784 2 980 2 410 2 760 2 802 2 605 2 111 2 454 2 851 4 467 2 314 2 334 2 957 2 585 2 
66 2 693 2 139 4 391 2 320 2 820 2 756 2 980 2 4 6 760 2 399 2 454 2 334 4 585 6 524 2 525 4 211 6 90 2 919 2 840 2 410 2 213 2 714 2 774 2 851 4 467 2 469 2 598 2 534 2 36 6 420 2 231 2 664 2 1005 2 104 2 665 2 288 2 1007 4 43 2 784 4 241 2 294 12 605 2 1011 2 111 2 1017 4 957 2 300 2 615 2 379 4 303 2 877 2 617 4 255 2 559 4 742 2 802 2 310 2 262 4 314 4 
66 2 693 2 139 4 391 2 820 2 756 2 980 2 4 6 760 2 399 2 454 2 334 4 585 4 524 2 525 4 211 6 90 2 919 2 840 2 410 2 213 2 714 2 774 2 851 4 467 2 469 2 598 2 534 2 36 6 420 2 231 2 664 2 1005 2 104 2 665 2 288 2 1007 4 43 2 784 6 241 2 294 12 605 2 1011 2 111 2 1017 4 957 2 300 2 615 2 379 4 303 2 877 2 617 4 255 2 559 4 742 2 802 2 310 2 690 2 262 4 314 4 
66 2 693 2 139 4 391 2 820 2 756 2 980 2 4 6 760 2 399 2 454 2 334 4 585 6 704 2 524 2 525 4 211 6 90 2 919 2 840 2 410 2 213 2 714 2 774 2 851 4 467 2 469 2 598 2 534 2 36 6 420 2 231 2 664 2 1005 2 104 2 665 2 288 2 1007 4 43 2 784 6 241 2 294 12 605 2 1011 2 111 2 1017 4 957 2 300 2 615 2 379 8 303 2 877 2 617 4 255 2 559 4 742 2 802 2 310 2 262 4 314 4 
66 2 693 2 139 4 391 2 820 2 756 2 980 2 4 10 760 2 399 2 454 2 334 4 585 6 704 2 524 2 525 4 211 8 90 2 919 2 840 2 410 2 213 2 714 2 774 2 851 4 467 2 469 2 598 2 534 2 36 6 420 2 231 2 1005 2 664 2 104 2 665 2 288 2 1007 4 43 2 784 8 241 2 294 12 605 2 1011 2 111 2 1017 8 957 2 300 2 615 2 379 8 303 2 877 2 617 4 255 2 559 4 742 2 802 2 310 2 690 2 262 4 314 4 
66 2 693 2 139 4 391 2 820 2 756 2 980 2 4 10 760 2 399 2 454 2 334 4 585 6 704 2 524 2 525 4 211 6 90 2 919 2 840 2 410 2 213 2 714 2 774 2 851 4 467 2 469 2 598 2 534 2 36 6 420 2 231 2 664 2 1005 2 104 2 665 2 288 2 1007 4 43 2 784 6 241 2 294 12 605 2 1011 2 111 2 1017 8 957 2 300 2 615 2 379 8 303 2 877 2 617 4 255 2 559 4 742 2 802 2 310 2 262 4 314 4 
0 2 391 2 139 4 392 2 504 4 633 2 756 2 900 2 760 2 397 4 904 2 513 2 399 2 764 2 642 2 519 2 521 2 524 2 525 6 919 4 277 2 410 2 773 2 922 2 774 2 924 2 776 2 416 2 653 2 656 4 166 2 534 2 36 20 420 2 780 2 939 2 664 2 665 2 288 2 43 2 944 2 667 2 421 2 666 2 784 8 945 2 785 2 174 6 294 32 298 2 957 2 300 2 303 2 188 2 53 2 307 6 559 8 802 2 440 2 804 4 690 4 314 4 806 2 66 2 693 2 569 2 694 2 695 2 699 2 820 2 700 2 980 2 825 2 824 2 828 2 453 2 77 2 454 2 334 4 335 2 584 2 585 4 340 2 86 2 342 2 463 2 211 12 90 2 840 2 714 2 1000 2 852 2 851 4 467 2 469 2 598 4 354 2 231 2 102 2 103 2 1005 4 104 2 1007 4 859 2 241 2 478 4 605 2 1011 2 863 2 864 2 111 2 371 2 374 4 377 2 615 2 379 2 491 8 876 2 493 2 617 4 255 2 742 2 881 2 130 2 496 4 746 2 133 6 262 6 
0 2 391 2 139 4 392 2 504 4 633 2 756 2 900 2 760 2 397 4 904 2 513 2 399 2 764 2 642 2 519 2 521 2 524 2 525 6 919 4 277 4 410 2 773 2 922 2 774 2 924 2 776 2 416 2 653 2 656 6 166 2 534 2 36 20 420 2 780 2 939 2 664 2 665 2 288 2 43 2 944 2 667 2 421 2 666 2 784 8 945 2 785 2 174 6 294 32 298 2 957 2 300 2 303 2 188 2 53 2 307 6 559 8 802 2 440 2 804 4 314 4 806 4 66 2 693 2 569 2 694 2 695 2 699 2 820 2 700 2 980 2 825 2 824 2 828 2 453 2 77 2 454 2 334 4 335 2 584 2 704 4 585 8 340 2 86 2 342 2 463 2 211 12 90 2 840 2 714 2 1000 2 852 2 851 4 467 2 469 2 598 4 354 2 231 2 102 2 103 2 1005 4 104 2 1007 4 859 2 241 2 478 4 605 2 1011 2 863 2 864 2 111 2 371 2 374 4 377 4 615 2 379 6 491 8 876 2 493 2 617 4 255 2 742 2 881 2 130 2 496 4 746 2 133 6 262 6 
0 2 391 2 139 4 392 2 504 4 633 2 756 2 900 2 4 4 760 2 397 4 904 2 513 2 399 2 764 2 642 2 519 2 521 2 524 2 525 6 919 4 277 4 410 2 773 2 922 2 774 2 924 2 776 2 416 2 653 2 656 6 166 2 534 2 36 20 420 2 780 2 939 2 664 2 665 2 288 2 43 2 944 2 667 2 421 2 666 2 784 8 945 2 785 2 174 6 294 32 298 2 957 2 300 2 303 2 188 2 53 2 307 6 559 8 802 2 440 2 804 4 314 4 806 4 66 2 693 2 569 2 694 2 695 2 699 2 820 2 700 2 980 2 825 2 824 2 828 2 453 2 77 2 454 2 334 4 335 2 584 2 704 4 585 8 340 2 86 2 342 2 463 2 211 12 90 2 840 2 714 2 1000 2 852 2 851 4 467 2 469 2 598 4 354 2 231 2 102 2 103 2 1005 4 104 2 1007 4 859 2 241 2 478 4 605 2 1011 2 863 2 864 2 111 2 371 2 374 4 1017 4 377 4 615 2 379 6 491 8 876 2 493 2 617 4 255 2 742 2 881 2 130 2 496 4 746 2 133 6 262 6 
0 2 391 2 139 4 392 2 504 2 633 2 394 2 756 2 900 2 4 4 901 2 760 2 397 4 904 2 513 2 399 2 764 2 642 2 519 2 521 2 524 2 525 6 919 4 277 4 410 2 773 2 922 2 774 2 924 2 776 2 416 2 653 2 656 6 166 2 534 2 36 18 420 2 939 2 664 2 665 2 288 2 43 2 944 2 667 2 421 2 666 2 784 10 945 2 785 2 174 8 294 30 298 2 957 2 300 2 303 2 188 4 53 2 307 8 559 8 802 2 440 2 804 4 690 2 314 4 806 4 66 2 693 2 569 2 694 2 695 4 320 2 699 2 820 2 700 2 980 2 825 2 824 2 989 2 828 2 453 2 454 2 77 2 334 4 335 2 584 2 704 4 585 10 340 2 996 2 86 4 342 2 211 16 90 2 840 2 714 2 1000 2 852 2 851 4 467 2 469 2 598 4 354 2 231 2 102 2 103 2 1005 4 104 2 1007 4 859 2 241 2 478 4 605 2 1011 2 863 2 864 2 111 2 371 2 374 4 1017 4 377 4 615 2 379 6 491 12 381 2 876 2 492 2 493 2 617 4 255 2 742 2 881 2 130 2 496 6 746 2 133 6 262 6 
66 2 693 2 391 2 231 2 139 2 104 2 1007 2 784 6 756 2 4 4 980 2 294 4 605 2 399 2 111 2 454 2 1017 4 957 2 300 2 704 2 585 6 379 6 211 4 919 2 617 4 559 2 714 2 774 2 802 2 262 2 851 2 314 4 469 2 534 2 420 2 
0 2 139 2 391 2 504 4 756 2 508 2 4 2 397 4 512 2 399 2 642 2 764 2 519 2 523 2 525 6 919 2 773 2 922 2 774 2 166 2 36 24 534 2 420 2 780 2 664 2 939 2 288 2 539 2 944 2 784 6 666 2 421 2 174 6 294 28 792 2 957 2 300 2 53 2 188 3 306 2 307 6 559 2 802 2 314 4 66 2 693 2 694 2 695 3 699 2 820 2 980 2 824 2 72 2 988 2 454 2 77 2 335 2 704 2 585 6 86 3 463 2 211 4 90 2 840 2 714 2 1000 2 851 2 469 2 598 4 231 2 1005 4 104 2 1007 2 478 4 605 2 863 2 111 2 615 2 379 6 491 8 617 4 255 2 742 2 130 2 744 3 496 4 133 6 262 2 1043 2 
693 2 908 2 756 2 
693 2 908 2 756 2 
0 2 138 2 139 2 504 4 756 6 4 6 760 2 147 2 397 4 904 2 399 2 908 2 642 2 764 2 912 4 519 6 16 2 525 6 919 4 277 4 922 2 773 2 24 2 416 2 649 2 928 2 931 2 656 4 166 2 36 16 780 2 939 2 664 2 665 2 43 2 944 2 666 2 784 12 669 2 174 2 294 24 789 2 957 2 795 2 303 2 53 2 307 2 559 4 310 2 189 4 804 2 690 4 314 4 972 2 806 4 66 4 693 4 694 2 695 2 320 4 699 2 820 2 700 2 824 2 823 2 826 2 77 2 454 2 334 4 79 2 335 2 585 12 704 4 341 2 342 2 90 2 211 16 840 2 715 4 1000 2 851 2 469 2 598 4 1005 4 1007 2 241 2 478 4 361 2 1011 4 863 2 371 4 1017 4 377 4 615 2 379 6 491 2 252 2 617 4 255 2 742 2 130 2 133 6 262 4 1042 2 
749 2 615 2 780 2 504 2 16 2 361 2 700 2 410 2 24 2 1010 2 294 4 850 2 75 2 829 2 79 2 517 2 36 2 
0 2 138 2 139 2 504 2 756 6 4 6 760 2 147 2 397 4 904 2 399 2 908 2 642 2 764 2 912 4 519 6 16 2 525 6 919 4 277 4 922 2 773 2 416 2 928 4 31 2 931 2 656 4 934 2 166 2 36 16 939 2 664 2 665 2 43 2 944 2 666 2 784 12 669 2 174 2 294 24 789 2 957 2 795 2 303 2 53 2 307 2 559 4 310 2 969 2 189 4 804 2 690 4 314 4 806 4 66 4 693 4 694 2 695 4 320 4 699 2 820 2 700 2 824 2 823 2 826 2 77 2 454 2 334 4 79 2 335 2 82 2 585 12 704 4 342 2 90 2 211 16 840 2 715 4 1000 2 851 2 469 2 598 4 1005 4 1007 2 241 4 478 4 361 2 1011 4 863 2 1013 2 371 4 1017 4 377 4 615 2 379 6 491 2 252 2 877 2 617 4 255 2 742 2 130 2 133 6 262 4 
0 2 138 2 139 2 504 4 756 6 4 6 760 2 147 2 397 4 904 2 399 2 908 2 642 2 764 2 912 4 519 6 16 2 525 6 919 4 277 4 922 2 773 2 24 2 416 2 928 2 778 2 931 2 656 4 166 2 36 16 780 2 939 2 664 2 665 2 43 2 944 2 666 2 784 12 669 2 174 2 294 24 789 2 957 2 793 2 795 2 303 2 53 2 307 2 559 4 310 2 189 4 804 2 690 4 314 4 806 4 66 4 693 4 694 2 695 2 320 4 699 2 820 2 700 2 824 2 823 2 826 2 77 2 454 2 334 4 79 2 335 2 585 12 704 4 342 2 90 2 211 16 840 2 715 4 1000 2 851 2 469 2 598 4 1005 4 1006 2 1007 2 241 4 478 4 361 2 1011 4 863 2 371 4 1017 4 377 4 615 2 379 6 491 2 252 2 1026 2 877 2 617 4 255 2 384 2 742 2 130 2 133 6 262 4 
0 2 504 2 505 8 508 2 3 12 5 8 509 2 7 2 9 2 11 2 518 4 516 2 519 2 522 52 15 2 525 6 19 2 526 2 21 2 22 6 26 2 28 2 29 12 528 2 529 3 531 2 533 2 36 42 535 12 536 2 37 4 41 2 540 2 44 2 47 2 544 2 548 2 552 10 557 2 55 2 560 4 562 2 60 14 566 2 567 24 62 3 63 12 65 2 571 80 67 52 573 2 70 2 74 3 580 2 76 2 581 2 78 2 582 28 583 2 83 2 586 4 587 4 86 16 85 2 90 2 592 2 593 16 94 2 595 2 96 2 597 66 98 2 598 4 599 2 101 2 600 2 102 2 108 2 603 2 604 6 110 2 609 16 112 2 113 2 611 2 115 2 612 12 613 2 117 90 119 16 614 2 615 2 616 2 123 2 124 30 618 4 125 12 619 8 127 24 128 4 620 16 130 6 621 2 131 6 622 32 133 14 623 2 626 2 627 2 628 12 629 16 137 3 140 2 141 2 144 2 634 2 145 2 635 2 636 2 150 2 638 4 640 2 154 4 156 2 643 2 644 2 646 2 647 2 160 2 161 20 653 2 655 2 656 126 166 4 657 30 165 28 658 4 659 2 661 2 664 2 666 2 173 2 671 4 672 24 174 14 175 2 176 2 675 2 676 110 177 2 178 2 677 2 179 2 679 2 184 2 188 44 686 2 684 2 687 2 193 2 194 24 196 2 694 8 695 44 696 8 699 4 199 12 702 2 701 28 206 2 207 2 208 4 209 2 214 2 220 4 221 2 720 2 722 2 232 2 724 2 234 12 237 4 236 2 239 16 240 2 726 4 727 28 729 1 728 2 243 16 244 2 245 2 733 2 246 2 247 2 735 2 249 14 250 12 251 8 736 2 738 2 255 2 254 2 740 2 256 2 742 2 743 30 260 2 744 2 746 2 263 12 264 2 750 2 266 2 752 2 754 28 755 2 267 2 757 1 271 2 270 2 273 3 274 2 763 1 764 2 765 2 768 2 769 2 770 2 771 2 279 2 775 2 777 8 283 2 286 16 285 26 287 2 783 2 293 2 294 86 790 16 791 28 299 2 792 2 301 2 794 2 305 2 307 14 309 2 311 28 312 6 809 2 810 3 317 4 812 2 813 28 318 2 814 8 815 16 817 10 319 6 321 2 820 2 825 2 824 2 324 50 327 32 328 4 333 4 833 2 335 2 834 12 337 2 339 2 835 4 836 30 838 2 343 2 840 2 346 4 845 6 347 3 852 46 352 2 353 2 355 16 855 4 858 4 359 2 363 2 365 30 366 2 367 2 863 2 865 2 866 2 369 2 867 2 868 4 372 2 371 8 376 2 871 16 873 1 874 44 381 2 382 2 876 38 878 2 881 4 884 16 886 3 386 138 888 14 387 2 388 6 897 2 393 8 899 16 394 2 901 2 395 2 397 6 398 2 905 2 402 4 403 2 916 4 408 4 918 2 409 24 921 2 922 4 411 4 924 2 414 2 417 4 418 30 933 6 930 56 935 116 937 2 938 2 939 6 942 4 943 2 944 8 941 2 421 2 422 2 952 2 951 2 953 2 954 4 423 2 424 2 425 2 426 1 434 3 958 2 961 2 436 2 437 2 965 12 438 2 439 10 971 32 440 2 441 12 973 2 976 2 443 2 445 2 446 2 982 2 449 3 984 16 985 2 450 2 988 2 989 4 990 2 453 2 992 16 457 2 993 8 994 32 996 2 997 12 464 12 998 2 465 18 466 2 1001 2 1003 12 1005 4 1004 2 473 12 476 2 478 6 1009 2 482 28 483 2 484 10 1016 2 485 2 1019 10 1022 4 491 52 1025 3 492 2 1029 2 495 2 1033 32 1035 6 1037 4 496 12 1039 68 499 2 1040 4 1041 2 1043 2 
660 2 1004 2 695 2 421 2 271 2 174 2 294 2 484 2 113 2 372 2 677 2 552 2 491 2 188 2 1025 2 86 2 526 2 771 2 307 2 439 4 496 2 852 6 973 2 36 2 
660 2 1004 2 695 2 421 2 271 2 174 2 294 2 484 2 113 2 372 2 677 2 552 2 491 2 188 2 1025 2 86 2 526 2 771 2 307 2 439 4 496 2 852 6 973 2 36 2 
660 2 1004 2 695 2 421 2 271 2 174 2 294 2 484 2 113 2 372 2 677 2 552 2 491 2 188 2 1025 2 86 2 526 2 771 2 307 2 439 4 496 2 852 6 973 2 36 2 
855 2 317 2 977 2 816 3 695 3 696 2 505 2 421 2 5 2 575 2 672 3 294 10 604 4 638 2 676 6 731 2 332 2 373 2 612 4 302 2 522 2 491 2 836 4 188 3 124 4 1027 4 409 3 965 2 712 2 128 2 743 4 620 6 418 4 263 2 191 2 973 2 1040 2 936 2 36 4 937 2 
977 2 317 2 814 2 505 2 696 2 695 2 816 2 5 2 575 2 638 2 274 2 332 2 522 2 836 4 409 2 712 2 845 2 418 4 936 2 36 4 937 2 855 2 421 2 672 2 294 10 604 4 676 6 731 2 373 2 612 4 302 2 491 2 188 2 1027 4 124 4 965 2 128 2 620 4 743 4 263 2 191 2 973 2 1040 2 
977 2 317 2 814 2 505 2 696 2 695 2 816 2 5 2 575 2 638 2 274 2 332 2 522 2 836 4 409 2 712 2 845 2 418 4 936 2 36 4 937 2 855 2 421 2 672 2 294 10 604 4 676 6 731 2 373 2 612 4 302 2 491 2 188 2 1027 4 124 4 965 2 128 2 620 4 743 4 263 2 191 2 973 2 1040 2 
977 2 317 2 814 2 505 2 696 2 695 2 816 2 5 2 575 2 638 2 274 2 332 2 522 2 836 4 409 2 712 2 845 2 418 4 936 2 36 4 937 2 855 2 421 2 672 2 294 10 604 4 676 6 731 2 373 2 612 4 302 2 491 2 188 2 1027 4 124 4 965 2 128 2 620 4 743 4 263 2 191 2 973 2 1040 2 
977 2 317 2 814 4 505 2 696 2 695 2 816 2 5 2 575 2 638 2 274 4 332 2 522 2 836 4 409 2 712 2 845 4 418 4 936 2 36 4 937 2 855 2 421 2 672 2 294 10 604 4 676 6 731 2 373 2 612 4 302 2 491 2 188 2 1027 4 124 4 965 2 128 2 620 4 743 4 263 2 191 2 973 2 1040 2 
925 2 688 2 176 2 235 2 1030 2 224 2 
218 2 622 2 95 2 837 2 292 2 1030 2 501 2 
390 2 633 2 106 1 362 1 325 2 294 10 109 2 272 2 910 1 991 2 487 2 831 2 913 1 872 2 338 2 553 2 799 2 210 2 91 2 255 2 841 2 741 2 846 2 36 8 779 1 228 2 
317 4 855 4 814 4 505 4 696 4 5 4 604 4 639 2 638 4 274 3 868 2 425 2 333 2 612 8 613 2 736 2 259 2 1035 4 128 4 845 3 620 10 1040 2 
753 1 2 2 836 2 124 2 880 2 671 2 882 2 787 4 843 7 294 1 947 2 27 2 1038 2 418 2 33 2 442 2 36 1 766 2 
2 2 836 2 124 2 880 2 882 2 787 4 843 6 671 4 947 4 27 2 1038 2 418 2 33 2 442 4 766 2 
753 1 2 2 836 2 124 2 880 2 882 2 787 4 843 10 671 8 294 1 947 8 27 8 1038 2 418 2 33 6 442 8 36 1 766 2 
2 2 836 2 124 2 880 2 882 2 787 2 843 2 671 2 947 2 1038 2 418 2 442 2 766 2 
506 4 758 4 759 2 396 2 397 18 515 2 275 4 405 1 407 2 159 2 922 6 281 2 650 4 654 2 166 6 36 34 536 2 419 2 169 2 662 2 939 4 170 2 291 2 673 1 294 38 950 2 955 2 429 2 432 2 184 2 433 2 959 2 797 1 556 2 967 2 61 4 565 2 692 2 808 4 64 2 195 2 198 1 699 4 819 2 821 4 69 2 827 2 456 2 80 2 336 2 589 2 998 2 847 4 97 2 596 14 225 2 856 2 723 4 356 2 474 2 475 2 357 2 238 2 1008 4 478 16 860 2 481 4 607 2 608 1 368 10 1014 2 732 2 486 2 120 2 490 2 739 2 1028 2 126 2 385 4 130 4 885 2 745 5 133 32 624 2 889 2 502 2 
195 2 662 2 939 2 699 2 821 2 860 2 478 8 69 2 397 8 294 18 148 2 610 2 732 2 703 2 400 2 184 2 275 2 405 2 253 2 589 2 967 2 257 2 922 2 998 2 130 2 163 2 847 2 887 2 650 10 133 14 134 2 596 2 166 2 1002 2 36 18 419 2 225 2 536 2 893 2 471 2 
506 6 396 2 397 20 906 8 12 2 914 2 275 4 407 2 159 2 922 4 164 6 281 2 650 14 30 8 282 2 654 2 166 4 36 40 536 2 663 2 662 2 939 5 782 2 290 2 294 44 673 2 955 2 546 2 184 2 433 2 551 2 959 2 556 2 685 2 61 6 565 2 692 2 808 4 197 2 699 2 821 4 819 2 986 2 201 8 456 2 80 2 336 2 995 6 88 2 589 2 89 2 998 2 847 4 596 10 225 2 723 1 856 2 356 2 474 2 475 2 238 2 1008 6 860 2 478 18 481 4 606 2 368 6 732 2 370 2 486 2 1021 2 120 2 490 2 253 2 739 4 494 6 1028 2 258 2 130 5 385 2 885 2 745 6 133 39 624 2 889 4 502 2 
195 4 198 2 699 2 821 6 758 6 69 4 759 2 397 14 827 10 762 2 515 4 456 2 80 2 458 4 336 2 275 6 405 2 589 2 708 2 159 2 922 2 923 2 998 2 847 6 650 14 97 2 596 8 166 2 36 26 169 2 536 2 225 2 419 4 229 2 723 2 662 2 170 4 939 10 725 2 291 4 1008 2 478 14 860 2 294 28 673 6 949 2 950 2 607 4 608 2 368 10 732 2 182 2 549 2 432 2 184 2 253 2 800 2 130 10 745 2 133 38 889 2 808 2 
427 2 

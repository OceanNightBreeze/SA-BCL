#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 834 (289,1116) 885 (97,290,402,612,736,972,1032) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 366 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.NullPointerException 834 (289,1116) 885 (97,290,402,612,736,972,1032) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 834 (289,1116) 885 (97,290,402,612,736,972,1032) 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 1093 684 713 989 896 579 208 519 278 521 110 309 88 726 469 502 824 226 406 889 41 200 451 1216 820 597 448 1181 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (125,234) (125,234) (125,234) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (91,789) 991 (891,1006) (91,789) 880 (891,1006) 888 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (2,710) (2,710) 204 1033 1009 237 814 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 740 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:split(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_ntk()I
daikon.Quant:subsetOf([S[S)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptName:isEnterPoint()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:eltsGtIndex([I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:union([I[I)[I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:eltwiseLTE([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_56()Z
daikon.ProglangType:dimensions()I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.NodeList:NodeList()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_87()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_85()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3_35()Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_1()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_148()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_97()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 3291 | = null
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_163()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282204 | = null
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaCharStream:FillBuff()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptSlice1:arity()I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_63()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression; | STATEMENT | 68469 | stmt -> ;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal; | RETURN | 91149 | return null
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_118()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:Node()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_96()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_88()Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Debug:logOn()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Debug:logDetail()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:gte(II)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99061 | return null
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_15()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:memberOf(J[J)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z | OPERATOR | 161601 | < -> >
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:subsetOf([D[F)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | CONDITION | 37236 | if (x) -> if (!x)
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:numIntArrays()I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfo:isPointer()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.ArraysMDE:min([I)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfo:new_ppt()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:noDups([I)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Intern:intern([J)[J
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:subsetOf([J[J)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ValueTuple:size()I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:isReverse([I[I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_68()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 972 | if (x) -> if (!x)
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_123()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd([I)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:gt(II)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_57()Z
daikon.Ppt:Ppt()V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_16()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_117()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_60()Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_3R_69()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_5()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_14()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern:intern([I)[I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.PptSlice2:arity()I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:lt(II)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfo:isDerived()Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3R_62()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissing(I)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3_21()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_133()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isIOAArray()Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:relate_var()V
daikon.test.FormatTestCase:passes()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 3104 | return null
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_2_35(I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
642 2 556 2 114 2 462 2 2 2 140 4 965 2 710 2 374 2 
212 6 1051 2 566 6 246 6 1214 2 428 2 362 2 1166 2 984 2 152 2 386 2 
38 4 653 6 164 2 622 6 2 2 542 6 128 6 694 2 33 2 613 2 479 4 911 2 710 2 
224 2 885 2 1032 2 834 2 253 2 1116 2 
366 2 
966 2 
0 2 166 2 2 4 676 2 923 2 609 2 11 2 258 2 547 2 395 4 399 2 184 2 556 2 337 2 408 2 31 2 115 4 705 2 118 2 1037 2 1104 2 494 2 710 4 37 2 282 2 1180 2 127 2 129 2 1048 2 580 2 803 2 883 2 515 2 517 2 884 2 53 2 139 2 143 2 898 4 445 2 56 2 1132 4 458 2 995 2 
793 6 2 4 1004 6 834 20 289 6 252 6 716 8 677 21 253 14 1116 14 290 8 885 14 612 4 972 4 181 6 97 4 224 2 402 2 559 6 1095 2 1210 6 992 6 160 2 1032 2 280 2 710 4 
45 2 609 2 641 2 
813 2 1128 2 80 10 192 2 470 2 772 2 1208 2 1028 22 461 2 488 2 760 2 399 2 1057 2 553 2 
538 2 224 2 834 2 253 2 1116 2 411 2 885 2 1032 2 823 2 759 2 1054 2 863 2 1176 2 
793 6 832 2 834 12 559 4 716 4 289 4 677 16 1116 8 253 8 1210 4 992 4 885 8 972 4 612 4 570 2 181 6 495 2 
206 4 1106 2 76 2 573 4 792 2 915 2 1045 4 748 4 922 2 676 4 674 62 717 2 641 2 388 4 45 6 609 8 1188 2 326 4 647 2 397 2 142 2 811 2 1088 14 978 4 593 10 898 4 848 4 58 2 558 2 627 2 818 4 155 2 562 2 946 4 1212 2 159 2 738 4 705 2 241 2 342 10 
966 2 172 2 9 2 926 2 942 2 526 2 1205 2 310 2 564 2 664 2 
744 2 2 34 168 2 324 2 169 2 170 4 603 3 752 4 754 2 325 2 478 2 757 2 173 2 175 2 929 2 179 2 1086 2 614 2 934 6 763 2 766 2 329 2 22 2 768 2 623 2 1091 2 944 2 339 2 631 2 781 24 204 2 493 1 36 2 343 12 958 2 345 2 40 2 962 2 638 2 799 2 800 2 1115 1 507 6 43 2 509 1 214 2 351 2 512 2 970 2 217 32 648 2 219 2 1126 2 359 2 817 24 656 2 525 2 658 2 659 2 60 3 528 3 364 3 529 1 62 2 235 3 64 12 993 8 238 2 1136 3 71 2 374 2 1145 2 827 1 381 2 1002 16 831 5 248 6 1148 2 671 1 543 1 385 2 389 2 682 2 90 2 1154 2 259 2 1012 1 261 2 841 2 552 1 1017 2 265 2 106 4 405 2 853 2 695 4 855 3 112 2 699 2 409 2 116 32 414 2 707 2 120 1 710 32 1040 2 421 2 1043 2 868 16 1044 1 714 1 577 3 576 2 1046 2 430 8 434 4 433 3 877 3 878 2 581 1 436 2 1186 2 879 2 1190 1 1053 4 587 2 591 1 141 2 443 2 1195 6 444 16 300 1 446 2 1059 8 1058 2 899 16 304 3 149 2 307 4 150 1 902 3 454 2 311 2 1064 4 737 2 739 2 1217 2 1070 2 1219 2 
703 2 2 2 
606 2 2 4 298 2 
496 2 
599 4 598 46 4 2 924 2 6 2 604 4 7 2 10 146 607 48 610 16 930 46 932 2 933 4 616 2 330 8 620 4 621 10 624 6 625 2 943 4 629 4 948 4 949 46 630 2 951 4 953 8 341 36 633 2 635 2 344 2 41 2 968 28 643 8 47 24 644 4 975 2 651 2 355 6 977 46 54 2 357 20 979 10 985 2 63 20 989 2 368 2 373 4 376 4 377 4 77 14 996 8 79 22 998 22 379 2 668 2 81 4 669 46 82 8 672 2 387 4 1010 12 88 2 684 2 102 4 688 4 1020 2 1021 4 406 2 110 2 697 2 696 2 698 8 410 2 413 16 1035 46 417 24 708 8 1038 8 124 16 713 2 718 2 435 2 720 2 722 4 439 46 144 2 726 2 728 176 146 36 147 2 448 2 449 8 732 2 453 20 451 2 151 2 457 26 161 4 742 20 165 2 469 2 472 4 1073 2 750 2 1072 8 1077 2 753 2 171 4 477 8 755 46 1080 2 180 14 182 6 483 2 190 46 1090 2 195 2 1093 2 1094 2 1100 46 1101 2 200 2 788 6 790 42 794 2 1110 2 1111 2 501 2 209 2 208 2 502 2 798 2 802 8 215 2 514 4 518 2 220 6 1123 2 225 4 226 2 519 2 521 2 230 4 819 2 231 2 820 2 821 2 1133 4 1135 2 240 14 824 2 1140 4 1142 4 244 2 1153 2 836 2 843 2 271 2 856 4 1174 2 275 2 278 2 861 2 865 10 866 4 1181 2 285 2 579 2 291 2 882 2 295 8 1189 6 1191 4 296 48 583 146 584 2 886 2 586 4 889 2 890 36 896 2 1198 4 1200 4 1203 2 901 2 305 2 1204 46 309 2 1206 4 1209 4 1213 2 315 14 317 4 318 4 1215 2 1216 2 596 146 597 2 
390 2 563 1 497 2 592 2 
390 2 870 2 
390 2 609 2 133 2 314 2 207 2 646 2 1127 2 
407 2 390 2 646 2 
390 2 646 2 306 2 
497 2 785 2 1061 2 
390 2 646 2 
487 2 
390 2 850 2 
497 2 229 2 1061 2 
497 2 334 2 429 2 
497 2 909 2 572 2 
497 2 645 2 783 2 
497 2 701 2 1055 2 
123 2 1061 2 
390 2 550 2 
1092 2 429 2 
909 2 86 2 
645 2 482 2 
249 2 1055 2 
578 2 1061 2 
98 2 1055 2 
645 2 69 2 
545 2 909 2 
921 2 429 2 
497 2 229 2 1061 2 936 2 
497 2 473 2 229 2 1061 2 936 2 
497 2 1175 2 1061 2 
497 2 954 2 1061 2 
347 2 690 2 675 2 910 2 
609 2 133 2 24 2 277 2 
78 2 609 2 133 2 314 2 24 2 277 2 
390 2 609 2 133 2 646 2 1025 2 1127 2 
683 2 1048 2 
1171 2 609 2 133 2 1127 2 
645 2 1147 2 
322 2 1055 2 
429 2 1117 2 
909 2 432 2 
909 2 416 2 1055 2 
909 2 1055 2 935 2 
806 2 909 2 1055 2 
909 2 1055 2 1049 2 
125 2 1150 6 1008 2 609 2 133 2 96 2 846 2 234 4 
569 2 1061 2 
468 2 959 2 816 4 773 2 986 2 505 2 751 4 660 2 28 2 365 2 1028 6 455 2 700 2 48 2 782 2 1193 2 372 2 16 2 
497 2 838 2 
763 2 
744 2 2 26 168 2 170 2 752 4 175 2 178 2 179 2 1086 2 934 6 766 2 329 2 768 2 626 2 339 2 631 2 784 2 204 2 36 2 343 8 345 2 960 2 962 2 507 2 512 6 970 4 1120 2 217 4 648 2 354 2 1126 2 359 2 815 2 659 2 62 2 988 2 64 8 531 2 238 2 533 4 532 2 374 2 248 4 1148 2 841 2 261 2 262 2 552 2 106 4 105 2 405 2 852 2 695 2 409 2 116 6 414 2 120 4 1039 4 710 26 1040 2 714 2 576 2 430 2 434 2 436 2 724 2 1195 2 899 6 307 4 311 2 1064 4 737 2 739 2 162 2 1070 2 912 2 
744 2 2 26 168 2 169 2 170 2 752 4 175 2 178 2 179 2 1086 2 934 6 766 2 329 2 768 2 626 2 339 2 631 2 204 2 36 2 343 8 345 2 960 2 348 2 962 2 507 2 512 6 970 4 1120 2 217 4 648 2 354 2 1126 2 359 2 982 2 659 2 62 2 988 2 64 8 531 2 238 2 533 4 532 2 374 2 248 6 1148 2 385 2 682 2 841 2 261 2 262 2 552 2 106 4 105 2 405 2 852 2 695 2 409 2 116 6 414 2 120 2 1039 4 710 26 1040 2 714 2 576 2 430 2 434 2 436 2 724 2 1195 2 899 6 307 4 311 2 1064 4 459 2 737 2 739 2 1070 2 912 2 
481 2 
897 2 1085 2 
539 2 466 4 1001 2 246 6 2 12 250 4 1006 2 602 2 752 2 8 2 681 8 175 2 328 2 841 2 934 4 765 2 329 2 17 2 264 2 400 8 555 2 268 2 941 2 1166 4 106 2 851 2 561 2 1024 2 1099 4 566 6 491 2 956 2 36 2 710 6 346 4 126 2 637 2 576 2 506 2 212 6 213 2 880 2 1051 2 352 4 888 2 891 2 812 2 55 2 57 2 522 2 657 2 984 4 233 2 311 2 661 2 456 2 1214 2 908 4 1070 2 371 10 
466 4 1001 2 246 8 2 12 1075 2 250 4 1006 2 602 2 752 2 835 4 8 2 681 8 175 2 328 2 841 2 934 4 765 2 329 2 17 2 264 2 400 8 555 2 268 2 941 2 1166 4 106 2 851 2 561 2 1024 2 1099 4 566 8 415 2 491 2 956 2 36 2 710 6 346 4 126 2 637 2 576 2 428 2 506 2 212 6 213 2 880 2 1051 2 352 4 888 2 891 2 812 2 55 2 522 2 657 2 984 4 233 2 311 2 661 2 456 2 1214 2 908 4 1070 2 371 10 
466 2 55 2 637 2 268 2 1166 2 941 2 984 2 851 2 602 2 1024 2 212 2 8 2 1099 4 566 2 352 4 888 2 328 2 891 2 
539 2 466 4 1001 2 246 6 2 12 250 4 1006 2 602 2 752 2 8 2 681 4 175 2 328 2 841 2 934 4 765 2 329 2 17 2 264 2 400 4 555 2 268 2 941 2 1166 4 106 2 851 2 561 2 1024 2 1099 4 566 6 491 2 956 2 36 2 710 6 346 4 126 2 637 2 428 2 576 2 506 2 212 4 213 2 880 2 1051 2 352 4 888 2 891 2 812 2 55 2 57 2 522 2 657 2 984 4 233 2 311 2 661 2 456 2 908 4 1070 2 371 6 
539 2 466 4 1001 2 246 6 2 12 250 4 1006 2 602 2 752 2 8 2 681 4 175 2 328 2 841 2 934 4 765 2 329 2 17 2 264 2 400 4 555 2 268 2 941 2 1166 4 106 2 851 2 561 2 1024 2 1099 4 566 4 491 2 956 2 36 2 710 6 346 4 126 2 637 2 576 2 506 2 212 6 213 2 880 2 1051 2 352 4 888 2 891 2 812 2 55 2 57 2 522 2 657 2 362 2 984 4 233 2 311 2 661 2 456 2 908 4 1070 2 371 6 
539 2 466 4 1001 2 246 6 2 12 250 4 1006 2 602 2 752 2 8 2 681 8 175 2 328 2 841 2 934 4 765 2 329 2 17 2 264 2 400 4 555 2 268 2 941 2 1166 4 106 2 851 2 561 2 1024 2 1099 4 566 6 491 2 956 2 36 2 710 6 346 4 126 2 637 2 576 2 506 2 212 6 213 2 880 2 1051 2 352 4 888 2 891 2 812 2 55 2 57 2 522 2 657 2 984 4 233 2 311 2 661 2 456 2 1214 2 908 4 1070 2 371 6 
539 2 466 4 1001 2 246 8 2 12 250 4 1006 2 602 2 752 2 8 2 681 8 175 2 328 2 841 2 934 4 765 2 329 2 17 2 264 2 400 8 555 2 268 2 941 2 1166 4 106 2 851 2 561 2 1024 2 1099 4 566 6 491 2 956 2 36 2 710 6 346 4 126 2 637 2 576 2 506 2 212 8 213 2 880 2 1051 2 352 4 888 2 891 2 812 2 55 2 57 2 522 2 657 2 362 2 984 4 233 2 311 2 661 2 456 2 1214 2 908 4 1070 2 371 10 
539 2 466 4 1001 2 246 6 2 12 250 4 1006 2 602 2 752 2 8 2 681 8 175 2 328 2 841 2 934 4 765 2 329 2 17 2 264 2 400 8 555 2 268 2 941 2 1166 4 106 2 851 2 561 2 1024 2 1099 4 566 6 491 2 956 2 36 2 710 6 346 4 126 2 637 2 576 2 506 2 212 6 213 2 880 2 1051 2 352 4 888 2 891 2 812 2 55 2 57 2 522 2 657 2 984 4 233 2 311 2 661 2 456 2 1214 2 908 4 1070 2 371 10 
916 2 918 2 2 46 602 2 8 2 606 6 608 1 927 1 327 1 328 2 934 6 615 6 329 2 17 2 940 6 941 2 26 2 339 2 952 6 955 2 35 4 36 2 956 2 343 4 345 2 346 8 960 2 962 2 637 2 352 4 648 2 55 2 359 2 57 2 657 2 362 4 984 4 661 2 64 4 991 2 67 6 371 2 72 4 374 2 1001 4 1006 2 85 7 385 2 680 6 682 2 681 2 95 2 687 2 1015 2 106 4 405 12 695 2 1024 2 409 2 703 6 116 8 414 2 1034 2 121 7 122 1 710 24 1040 2 1041 6 126 2 427 2 430 2 434 2 719 6 1051 4 450 6 1064 4 735 1 456 2 1067 2 737 2 739 2 1070 2 466 4 744 2 752 4 170 2 1081 2 756 2 175 2 176 10 178 2 1084 2 764 6 765 2 1087 2 770 2 776 2 1097 2 1099 4 491 2 786 2 204 2 496 6 504 1 506 2 507 2 212 8 213 2 512 6 217 2 808 1 1122 1 810 2 1126 2 812 2 522 4 233 2 533 4 242 2 246 12 248 6 1148 2 250 4 841 2 261 2 262 4 264 2 844 6 555 2 847 1 1163 8 268 2 267 2 1166 4 851 2 561 2 854 6 566 4 571 2 1178 2 576 2 875 2 288 2 880 2 297 2 888 2 891 2 1195 2 893 6 894 2 895 2 1197 6 1199 2 899 6 307 4 311 2 316 2 908 6 320 2 912 2 
466 4 744 2 916 2 918 2 2 48 602 2 170 4 752 4 606 6 8 2 756 2 1081 2 176 10 175 2 1084 2 178 2 328 2 764 6 934 6 615 6 765 2 329 2 1087 2 17 2 770 2 940 6 26 2 941 2 776 2 1097 2 339 2 1099 4 952 6 955 2 786 2 491 2 35 4 204 2 956 2 36 2 343 8 496 6 345 2 346 8 960 2 637 2 962 2 506 2 507 2 213 2 212 8 512 6 970 2 352 4 217 2 648 2 810 2 1126 2 812 2 359 2 55 2 57 2 522 4 657 2 984 4 233 2 661 2 991 2 64 8 67 6 533 4 371 2 72 4 242 2 374 2 1144 2 1001 4 246 12 1148 2 248 6 250 4 1006 2 385 2 680 6 681 6 682 2 1157 2 95 2 687 2 261 2 841 2 262 4 1015 2 844 6 264 2 555 2 1163 8 267 2 268 2 1166 4 106 4 405 12 851 2 561 2 1024 2 695 4 854 6 409 2 703 6 566 8 116 8 414 2 1034 2 571 2 710 26 1040 2 1041 6 1178 2 126 2 427 2 576 2 875 2 288 2 430 2 434 4 719 6 880 2 1051 4 297 2 888 2 891 2 1195 2 893 6 895 2 894 2 1197 6 1199 2 899 6 450 6 307 4 311 2 1064 4 456 2 1067 2 316 2 737 2 1214 4 739 2 908 6 320 2 1070 2 912 2 
466 4 744 2 916 2 918 2 2 48 602 2 170 4 752 4 606 6 8 2 756 2 1081 2 176 10 175 2 1084 2 178 2 328 2 764 6 934 6 615 6 765 2 329 2 1087 2 17 2 770 2 940 6 26 2 941 2 776 2 1097 2 339 2 1099 4 952 6 955 2 786 2 491 2 35 4 204 2 956 2 36 2 343 8 496 6 345 2 346 8 960 2 637 2 962 2 506 2 507 2 213 2 212 8 512 6 970 2 352 4 217 2 648 2 810 2 1126 2 812 2 55 2 359 2 57 2 522 4 657 2 984 4 233 2 661 2 991 2 64 8 67 6 533 4 371 6 72 4 242 2 374 2 1144 2 1001 4 246 12 1148 2 248 6 250 4 1006 2 385 2 680 6 681 6 682 2 1157 2 95 2 687 2 261 2 841 2 262 4 1015 2 844 6 264 2 555 2 400 4 1163 8 267 2 268 2 1166 4 106 4 405 12 851 2 561 2 1024 2 695 4 854 6 409 2 703 6 566 8 116 8 414 2 1034 2 571 2 710 26 1040 2 1041 6 1178 2 126 2 427 2 576 2 875 2 288 2 430 2 434 4 719 6 880 2 1051 4 297 2 888 2 891 2 1195 2 893 6 895 2 894 2 1197 6 1199 2 899 6 450 6 307 4 311 2 1064 4 456 2 1067 2 316 2 737 2 1214 4 739 2 908 6 320 2 1070 2 912 2 
916 2 918 2 2 52 602 2 8 2 606 12 328 2 934 6 615 6 329 2 17 2 940 6 941 2 26 2 339 2 952 12 955 2 35 4 36 2 956 2 343 10 345 2 346 8 960 2 962 2 637 2 967 2 970 2 352 4 971 6 648 2 359 2 55 2 57 2 657 2 362 2 984 4 661 2 64 10 991 2 67 6 370 2 371 6 72 4 374 2 999 6 1001 4 1006 2 385 2 679 6 680 6 682 2 681 6 687 2 1015 2 400 4 691 2 106 4 405 10 693 2 695 4 1024 2 409 2 703 12 116 12 414 2 1034 2 710 24 1040 2 1041 6 126 2 428 2 427 2 430 4 434 4 719 6 1051 4 450 6 1064 4 456 2 1067 2 737 2 739 2 1070 2 466 4 744 2 752 4 170 4 1081 2 756 2 175 2 176 8 178 2 1084 2 764 6 765 2 1087 2 186 2 770 2 776 2 1096 6 1097 2 1099 4 491 2 786 2 204 2 492 2 496 12 506 2 507 4 212 10 213 2 1119 6 512 8 217 4 218 6 810 2 223 2 1126 2 812 2 522 4 233 2 533 6 242 2 1144 2 246 16 248 6 1148 2 250 4 1157 2 261 2 841 2 262 4 264 2 844 12 555 2 1163 8 268 2 267 2 1166 4 851 2 270 6 561 2 854 12 1172 6 857 6 566 10 571 2 1178 2 576 2 875 2 288 2 880 2 297 2 888 2 891 2 1195 4 893 6 894 2 895 2 1197 6 1199 2 595 2 899 8 307 4 311 2 316 2 1214 4 908 6 320 2 912 4 
346 2 126 2 637 2 2 4 246 4 250 2 602 2 506 2 213 2 212 6 1051 2 681 6 352 2 328 2 765 2 17 2 264 2 555 2 400 4 55 2 57 2 268 2 941 2 657 2 1166 4 984 4 851 2 233 2 661 2 1099 2 566 6 1214 2 908 2 371 4 956 2 
2 28 919 2 602 2 752 4 175 2 176 2 178 2 328 2 934 6 763 2 765 2 329 2 17 2 1091 2 941 2 339 2 1099 2 489 2 204 2 36 2 956 2 345 2 346 2 960 2 637 2 962 2 506 2 507 3 213 2 212 6 351 2 512 6 352 2 217 3 648 2 650 2 1126 2 359 2 55 2 57 2 654 2 657 2 984 4 233 2 661 2 533 4 371 2 374 2 828 2 246 4 248 6 1148 2 250 2 385 2 682 2 681 6 95 2 261 2 841 2 262 2 264 2 555 2 845 3 268 2 1166 4 106 4 405 4 851 2 409 2 566 6 116 8 414 2 710 24 1040 2 126 2 576 2 1051 2 1195 3 1058 2 899 6 307 4 311 2 1064 4 456 2 737 2 1214 2 739 2 908 2 1070 2 
765 2 649 2 506 2 
765 2 649 2 506 2 
466 4 744 4 2 24 602 2 170 4 752 4 176 2 175 2 178 2 934 6 765 6 617 2 329 2 26 2 27 2 29 2 339 2 779 2 1099 2 202 2 786 2 35 2 36 2 343 4 345 2 346 4 960 2 962 2 637 2 506 4 508 2 212 12 213 2 512 2 352 2 353 2 217 2 648 2 649 2 1126 2 652 2 359 2 980 4 522 2 362 4 984 4 991 2 64 4 70 2 371 6 72 2 374 2 378 4 245 2 829 2 1001 4 246 16 248 6 1148 2 250 2 1006 2 385 2 682 2 681 6 841 2 261 2 262 6 101 2 400 4 555 2 1166 4 106 4 405 4 851 4 561 2 695 4 565 2 409 2 566 12 116 2 414 2 120 2 710 16 1040 2 576 2 428 4 434 4 1050 2 880 2 1051 4 723 2 888 2 724 4 891 2 727 2 145 2 1197 2 899 2 307 4 311 2 1064 4 737 2 739 2 1214 4 908 4 1070 2 
791 2 867 2 1197 2 2 4 267 2 576 2 875 2 405 2 1024 2 1050 2 779 2 662 2 176 2 1085 2 70 2 72 2 710 2 
466 4 744 2 2 20 602 2 170 4 752 4 175 2 178 2 934 6 765 4 617 2 329 2 26 2 29 2 339 2 1099 2 34 2 786 2 35 2 789 2 36 2 343 4 345 2 346 4 960 2 962 2 637 2 506 4 508 2 212 12 213 2 512 2 352 2 353 2 217 4 648 2 1126 2 812 2 359 2 980 2 522 4 362 4 984 4 991 2 64 4 70 2 371 4 374 2 378 2 245 2 829 2 1001 4 246 16 248 6 1148 2 250 2 1006 2 385 2 682 2 681 6 91 2 841 2 261 2 262 4 101 2 400 4 555 2 1166 4 106 4 405 2 851 4 561 2 695 4 565 4 409 2 566 12 116 2 414 2 120 1 710 14 1040 2 576 2 428 4 434 4 1050 2 880 2 1051 4 888 2 724 4 891 2 727 2 899 2 307 4 311 2 1064 4 1069 2 737 2 739 2 1214 4 908 4 1070 2 
466 4 744 4 2 24 602 2 170 4 752 4 176 2 175 2 178 2 934 6 765 6 617 2 329 2 26 2 29 2 339 2 779 2 1099 2 202 2 786 2 35 2 36 2 343 4 345 2 346 4 960 2 962 2 637 2 506 4 508 2 212 12 213 2 512 2 352 2 353 2 217 2 648 2 649 2 1126 2 812 2 359 2 980 4 522 4 362 4 984 4 1131 2 991 2 64 4 537 2 70 2 371 6 72 2 374 2 378 4 245 2 829 2 1001 4 246 16 248 6 1148 2 250 2 1006 2 385 2 682 2 681 6 841 2 261 2 262 6 101 2 400 4 555 2 1166 4 106 4 405 4 851 4 561 2 695 4 565 2 858 2 409 2 566 12 116 2 414 2 120 1 710 16 1040 2 576 2 428 4 434 4 1050 2 880 2 1051 4 888 2 590 2 724 4 891 2 727 2 1197 2 899 2 307 4 734 2 311 2 1064 4 737 2 739 2 1214 4 908 4 1070 2 
1 4 2 192 600 2 3 4 601 22 5 2 605 2 12 2 618 2 619 2 19 48 21 2 20 8 23 4 25 4 626 2 30 2 36 2 634 10 636 8 640 2 44 12 49 2 648 2 650 2 654 2 655 10 59 2 64 45 65 16 66 6 663 6 665 2 75 2 666 2 670 2 83 2 84 24 677 16 678 2 87 2 682 38 93 2 685 20 94 2 686 2 100 20 103 16 104 10 691 2 692 20 106 4 105 2 109 2 108 32 107 4 693 2 111 6 113 4 702 2 117 1 116 40 119 5 120 1 710 144 711 10 712 2 714 2 716 6 130 2 132 6 135 2 138 4 725 4 730 3 153 4 154 10 157 2 158 4 156 4 736 4 737 2 739 2 741 2 743 10 163 2 744 4 745 4 747 2 167 10 749 10 752 4 174 3 175 2 177 3 178 2 758 2 761 2 767 2 183 2 188 2 187 18 186 2 191 2 769 10 770 2 193 2 771 10 196 2 197 10 774 2 775 2 776 2 777 4 198 2 199 2 203 2 201 2 204 2 205 4 206 2 793 6 795 10 797 2 210 10 211 2 801 10 804 10 805 2 216 10 217 26 807 2 809 2 222 10 814 2 228 4 818 2 232 2 822 4 237 2 242 2 826 2 243 4 830 2 248 148 247 10 834 12 833 2 253 8 254 10 256 2 260 2 840 2 261 4 841 2 262 2 263 10 845 2 266 10 848 2 849 4 269 2 852 2 273 2 272 3 859 10 864 12 280 4 281 2 869 1 868 6 871 4 284 4 287 2 289 4 292 4 293 2 881 2 885 8 887 2 299 2 301 10 302 20 899 14 303 2 900 2 308 2 307 58 903 4 311 2 313 18 905 10 906 2 907 14 319 12 320 2 912 46 321 2 913 6 916 2 917 2 323 2 919 2 920 2 928 2 931 6 934 6 329 2 937 4 332 2 939 1 336 2 339 2 955 2 343 42 345 2 962 14 961 4 964 2 350 2 967 2 972 4 974 2 973 22 354 2 976 4 359 2 361 2 983 10 987 6 988 2 992 4 367 10 370 2 994 2 374 4 1002 14 1000 10 382 6 1004 4 1005 2 384 6 385 38 1009 2 1011 2 391 20 393 2 392 2 396 1 398 5 1016 6 401 2 1019 2 402 2 403 6 405 2 1023 2 1027 2 1029 2 409 2 412 3 1030 8 1031 20 414 2 1033 2 1036 6 418 2 419 2 1040 14 1042 2 423 3 424 10 1045 2 426 2 430 24 1047 4 431 10 437 16 1052 4 438 30 440 10 441 8 442 4 1056 4 447 2 452 2 1063 4 1062 2 1064 68 1066 2 460 2 1070 2 464 10 1071 6 467 2 475 2 474 72 1076 2 1079 10 1083 4 484 16 1098 3 1102 2 489 2 1103 2 1105 2 492 2 1107 22 498 2 1109 2 500 6 503 6 1113 2 1114 2 1116 8 507 26 1118 10 510 2 512 14 516 6 1120 2 1121 2 1126 4 520 20 1129 20 524 2 527 6 1134 6 531 2 533 12 532 18 1138 10 1143 4 1146 6 540 2 1148 2 1149 2 541 2 1151 18 1152 14 544 20 546 4 548 2 1158 16 1159 10 549 22 551 18 552 2 554 6 557 2 1161 4 1165 2 559 4 1167 2 560 10 1170 2 1173 10 567 4 1177 2 573 2 1179 6 574 1 1182 2 575 2 576 2 1184 16 1192 2 589 2 1195 16 594 22 595 2 1199 4 1202 2 1210 4 1218 10 
2 2 383 2 323 2 507 2 881 2 512 2 177 2 217 2 1195 2 769 2 899 2 655 2 1165 2 196 2 524 2 269 2 197 4 1027 2 702 2 116 2 533 2 204 2 912 6 710 2 
2 2 383 2 323 2 507 2 881 2 512 2 177 2 217 2 1195 2 769 2 899 2 655 2 1165 2 196 2 524 2 269 2 197 4 1027 2 702 2 116 2 533 2 204 2 912 6 710 2 
2 2 383 2 323 2 507 2 881 2 512 2 177 2 217 2 1195 2 769 2 899 2 655 2 1165 2 196 2 524 2 269 2 197 4 1027 2 702 2 116 2 533 2 204 2 912 6 710 2 
1108 2 868 2 467 2 746 2 1002 2 2 10 349 2 834 4 289 2 677 5 1184 4 1116 2 253 2 507 3 437 4 134 2 881 2 516 2 885 2 394 2 1158 4 1156 2 217 3 189 2 19 6 301 3 103 4 983 3 559 2 1210 2 61 2 1134 4 992 2 736 2 116 2 1137 4 279 2 463 3 204 2 710 4 
467 2 1002 2 746 2 2 10 1004 2 834 4 677 4 253 2 394 2 1156 2 1158 4 19 6 189 2 103 4 559 2 116 2 279 2 204 2 710 4 868 2 1108 2 349 2 716 2 289 2 1116 2 1184 4 507 2 1185 2 437 4 881 2 134 2 516 2 885 2 217 2 301 2 983 2 1210 2 61 2 1134 4 736 2 992 2 1137 4 463 2 
467 2 1002 2 746 2 2 10 1004 2 834 4 677 4 253 2 394 2 1156 2 1158 4 19 6 189 2 103 4 559 2 116 2 279 2 204 2 710 4 868 2 1108 2 349 2 716 2 289 2 1116 2 1184 4 507 2 1185 2 437 4 881 2 134 2 516 2 885 2 217 2 301 2 983 2 1210 2 61 2 1134 4 736 2 992 2 1137 4 463 2 
467 2 1002 2 746 2 2 10 1004 2 834 4 677 4 253 2 394 2 1156 2 1158 4 19 6 189 2 103 4 559 2 116 2 279 2 204 2 710 4 868 2 1108 2 349 2 716 2 289 2 1116 2 1184 4 507 2 1185 2 437 4 881 2 134 2 516 2 885 2 217 2 301 2 983 2 1210 2 61 2 1134 4 736 2 992 2 1137 4 463 2 
467 2 1002 2 746 2 2 10 1004 4 834 4 677 4 253 2 394 2 1156 2 1158 4 19 6 189 2 103 4 559 2 116 2 279 2 204 2 710 4 868 2 1108 2 349 2 716 4 289 2 1116 2 1184 4 507 2 1185 4 437 4 881 2 134 2 516 2 885 2 217 2 301 2 983 2 1210 2 61 2 1134 4 736 2 992 2 1137 4 463 2 
227 2 605 2 535 2 740 2 1124 2 14 2 
981 2 568 2 136 2 239 2 532 2 1141 2 1124 2 
997 1 283 1 1196 2 1183 2 425 2 2 10 404 2 1168 2 639 2 1078 2 854 2 255 2 721 1 1212 1 780 2 632 2 1082 2 369 2 397 1 536 2 13 2 1070 2 221 2 375 2 1014 2 710 8 
793 4 2 6 1004 2 796 2 834 12 715 2 252 4 289 6 716 4 677 16 253 6 1116 6 290 2 1185 2 11 2 885 6 972 2 548 2 97 2 331 2 523 2 559 6 59 2 1063 2 1210 6 1134 4 992 6 736 2 1037 2 710 6 
422 2 333 2 103 2 2 1 628 7 1211 2 925 4 1068 1 437 2 530 2 276 2 257 2 904 2 68 2 1158 2 762 2 710 1 465 2 
333 2 422 2 103 2 628 6 1211 2 925 4 437 2 530 4 276 2 257 4 904 2 68 2 1158 2 762 2 465 4 
333 8 422 2 103 2 2 1 628 10 1211 2 925 4 1068 1 437 2 530 8 276 2 257 8 904 2 68 2 1158 2 762 6 710 1 465 8 
422 2 103 2 628 2 1211 2 925 2 437 2 530 2 276 2 257 2 904 2 68 2 1158 2 465 2 
743 6 914 4 1 4 471 10 749 6 2 150 167 6 474 124 3 4 1074 90 601 50 1079 6 185 8 15 4 18 2 485 4 939 6 1089 26 25 4 335 4 771 6 486 10 338 2 945 2 32 2 1103 8 957 2 1107 84 634 42 962 14 795 6 210 10 801 6 1118 6 804 10 216 6 1121 8 222 6 361 4 520 36 1129 16 363 24 1130 10 822 4 236 26 64 28 367 10 534 24 1138 6 74 2 1143 7 75 4 830 2 1000 24 248 248 247 6 544 17 254 6 385 58 546 4 682 58 396 4 1159 10 398 7 839 90 261 8 549 4 1013 24 842 4 263 10 99 2 100 18 1018 2 266 24 1164 12 849 4 104 6 560 24 108 34 1026 4 273 2 272 4 1173 6 113 4 274 2 704 2 1031 16 706 2 119 8 864 12 120 4 419 8 710 134 420 2 1040 14 711 15 869 2 1179 2 424 6 284 4 431 6 876 4 131 8 292 4 1187 4 294 1 438 22 137 4 887 2 440 6 138 4 588 18 442 11 1194 8 594 92 302 16 730 2 731 2 307 88 1207 6 1064 112 153 4 154 42 905 6 319 8 1218 6 464 6 741 2 
667 2 380 2 471 2 749 2 2 46 248 45 474 6 673 2 251 2 544 2 254 2 385 3 682 3 92 2 611 2 837 2 1155 2 1159 2 480 2 396 1 261 2 1013 2 263 2 99 2 100 2 938 2 689 2 939 3 194 4 486 2 1022 2 778 2 950 4 274 2 340 2 704 2 1031 4 706 2 860 2 1103 2 787 2 862 2 120 2 709 2 419 2 420 2 710 44 1040 2 872 2 962 2 873 2 499 2 963 2 1112 2 210 2 801 2 42 4 804 2 511 4 969 2 513 2 50 2 137 2 585 2 440 2 52 2 1121 2 1194 2 356 2 1125 2 892 2 358 6 360 2 302 4 731 2 520 2 1060 2 1129 4 363 2 1130 2 307 20 733 2 1064 20 1065 2 312 2 990 2 64 37 367 2 905 2 534 2 319 6 464 2 
743 4 1 4 2 78 167 4 749 4 474 24 3 4 601 8 476 4 1079 4 939 2 25 4 771 4 947 4 32 2 340 10 1103 2 787 2 490 16 957 2 1107 24 634 16 39 2 962 6 795 4 963 2 210 4 801 4 1118 4 804 6 46 2 969 2 51 4 216 4 1121 2 222 4 361 4 520 6 1129 10 822 4 64 14 367 4 1139 2 1138 4 825 2 1143 3 73 2 75 4 830 2 380 10 1003 4 248 104 544 10 254 4 385 30 546 4 89 4 682 28 1159 4 261 2 1160 32 263 4 99 2 100 10 266 8 1162 4 849 4 104 4 108 30 1169 16 1173 4 113 4 274 2 1031 10 706 2 119 4 864 14 419 2 710 70 420 2 1040 6 711 8 424 4 284 2 286 8 874 4 431 4 292 4 582 8 440 4 138 4 729 2 594 24 302 10 731 2 1201 8 148 8 307 36 733 10 153 4 1064 44 154 8 905 4 319 6 1218 4 464 4 741 2 
667 2 749 4 2 28 248 40 474 8 544 2 254 4 385 12 682 12 398 1 1159 2 549 2 261 2 263 2 99 2 18 2 100 2 1018 2 939 2 108 6 273 2 272 2 274 2 1031 6 704 2 706 2 1103 2 119 4 120 2 419 2 420 2 710 26 1040 2 711 5 869 1 962 2 284 2 963 2 210 2 801 4 804 2 438 9 887 2 440 4 442 1 1121 2 302 6 361 2 731 2 520 2 1129 6 307 14 1064 14 64 14 367 2 905 4 319 4 464 4 75 2 
1007 2 

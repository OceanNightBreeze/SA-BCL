#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (32,725) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (32,725) 313 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 396 578 1043 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 632 17 762 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:memberOf(D[F)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.Quant:intersection([I[I)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Invariant:logOn()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_50()Z
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:setDiff([I[I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 956 | = null
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:slice([III)[I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_compose([I[I)[I | RETURN | 62242 | return null
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptName:isEnterPoint()Z
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.FormatTestCase:passes()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String; | RETURN | 119133 | return null
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | RETURN | 184235 | return null
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsScalar()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_53()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String; | ASSIGN | 5063 | = null
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24039 | return null
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:memberOf(F[F)Z
daikon.VarInfo:isIOASet()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName:hashCode()I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Constant:Constant(I)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE:gcd([I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissing(I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Debug:logOn()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaParser:jj_3_1()Z | CONDITION | 171435 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:memberOf(F[D)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoAux:hashCode()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfo:jml_name()Ljava.lang.String; | RETURN | 102411 | return null
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ValueTuple:size()I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:ne(II)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE:negate(I)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:min([I)I
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONSTANT | 17989 | 115 -> 1
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Debug:logDetail()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfo:new_ppt()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lt(II)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:concat([I[I)[I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_3_16()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:size()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.RootNode:RootNode()V
daikon.Quant:noDups([I)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:eltsLTE([II)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:gt(II)Z
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:FillBuff()V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:arity()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:subsetOf([B[I)Z
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfo:isIOAArray()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:isDerived()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(J[J)Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:eq(II)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
955 2 1157 2 445 2 685 4 449 2 331 2 203 2 736 2 820 2 
1050 6 888 2 80 2 488 6 1034 6 249 2 406 2 648 2 894 2 223 2 542 2 
955 2 129 6 16 2 349 6 53 6 511 2 921 4 77 2 1157 2 574 2 695 4 911 2 666 6 
1026 2 1093 16 608 4 865 26 428 10 262 4 657 12 190 2 198 4 85 8 1109 16 365 6 623 2 15 10 812 2 955 6 629 4 1003 16 413 10 1046 10 510 2 337 6 247 2 678 8 1157 6 490 10 645 2 646 8 1089 8 521 30 
739 6 686 4 
745 2 
1093 2 865 4 352 2 428 2 113 2 657 2 1109 2 15 2 207 2 629 2 1003 2 413 4 375 2 1046 2 484 2 816 2 169 2 735 2 337 2 920 2 490 2 1089 2 521 6 
1093 8 1003 8 865 12 428 4 1046 4 262 2 657 5 1154 4 858 4 309 6 490 4 404 2 202 2 1109 8 15 4 51 6 521 14 
752 2 499 2 833 4 69 2 1064 4 571 2 192 6 196 4 764 4 618 14 694 2 1106 4 906 2 238 10 725 8 579 4 580 4 767 2 996 4 277 2 880 2 918 2 773 2 1149 2 210 4 588 2 1010 4 589 2 282 4 640 2 94 4 643 10 741 62 458 2 388 2 744 2 517 2 1131 4 562 2 219 2 
153 2 79 2 43 2 1038 2 447 2 23 2 245 2 745 2 1166 2 976 2 
2 2 256 2 831 2 148 2 901 2 191 2 76 2 331 4 620 4 696 4 807 2 725 2 624 2 996 4 305 2 545 2 166 2 958 2 633 2 675 2 247 2 94 2 822 2 862 2 892 2 786 2 681 2 514 2 517 2 251 2 218 2 
466 4 1093 32 865 48 428 16 798 4 324 8 657 22 151 6 805 2 477 6 1109 32 365 4 15 16 954 4 51 6 628 2 812 2 955 4 629 2 1003 32 413 6 376 4 1046 16 377 2 855 2 337 4 1154 4 887 2 858 4 678 6 1157 4 248 4 490 16 309 6 345 6 1089 18 104 2 317 6 521 54 
880 2 725 2 192 2 
604 2 568 22 543 2 32 2 131 2 185 2 350 2 243 2 867 2 595 10 234 2 387 2 178 2 970 2 
285 3 718 6 720 2 719 3 427 3 4 2 866 2 721 2 289 1 150 1 570 2 433 16 155 1 432 1 722 2 8 6 435 2 437 1 871 2 1036 1 873 2 724 3 577 16 159 6 301 2 729 24 730 2 445 2 731 2 733 2 24 8 453 2 746 2 180 2 462 2 748 2 182 4 463 16 603 4 897 2 607 1 36 2 758 2 37 2 757 6 1072 3 474 2 1076 2 47 2 625 2 627 2 209 2 336 1 634 2 638 2 781 3 212 2 342 2 644 1 1088 2 492 2 216 12 791 1 926 2 494 2 932 2 65 4 933 2 655 2 934 8 354 2 1094 2 1095 2 799 5 801 3 660 2 81 2 82 3 84 2 237 1 505 1 948 2 946 2 949 4 239 2 368 2 90 2 955 34 374 2 92 2 815 2 512 2 963 2 246 4 819 2 1124 2 823 2 383 2 829 4 524 4 258 32 393 2 110 4 978 2 261 2 260 32 979 24 530 2 266 2 838 2 269 2 984 2 690 2 841 2 120 2 273 1 1147 2 1145 2 122 2 844 2 985 2 986 2 987 2 988 2 699 1 128 2 275 2 994 2 999 8 410 1 1000 2 411 2 279 2 1004 2 852 2 548 16 1008 2 132 3 417 2 134 3 1157 32 552 3 1162 2 1164 2 559 2 1168 3 563 1 
783 2 
955 2 215 2 
955 4 164 2 283 2 
566 2 1024 2 146 6 228 18 74 2 938 4 72 10 800 4 939 14 231 2 723 2 661 2 294 6 872 2 1107 2 439 2 1040 14 947 4 665 2 1041 10 369 4 444 14 959 2 167 10 587 14 378 14 590 2 97 2 1057 48 181 12 105 10 596 4 597 2 975 2 525 14 1138 2 834 2 836 2 688 2 33 2 188 2 899 6 981 2 982 14 1067 2 267 18 39 14 116 8 1069 14 839 6 119 2 328 18 195 8 471 2 536 10 907 2 908 4 765 2 476 2 1148 2 848 2 701 48 208 2 631 10 1079 2 778 4 637 2 857 8 635 10 1160 10 137 2 784 2 58 4 346 4 1163 14 347 4 864 48 1022 2 649 2 61 2 496 2 224 14 
1158 2 186 2 1110 1 651 2 
1158 2 1150 2 
734 2 668 2 
902 2 489 2 313 2 725 2 
902 2 56 2 489 2 313 2 882 2 725 2 
1158 2 608 2 313 2 725 2 125 2 60 2 
923 2 218 2 
608 2 313 2 725 2 141 2 
117 2 460 2 
1082 2 847 2 
45 2 252 2 
941 2 935 2 
673 2 
941 2 538 2 847 2 
533 2 941 2 847 2 
941 2 500 2 847 2 
412 6 732 2 418 2 331 2 313 2 725 2 683 2 
0 2 319 2 653 2 409 4 568 6 392 2 544 2 937 2 818 2 1052 2 93 4 763 2 692 2 384 2 967 2 575 2 518 2 1113 2 
651 2 1155 2 
1158 2 19 2 608 2 313 2 882 2 725 2 125 2 
1158 2 68 2 125 2 
1158 2 998 2 125 2 
772 2 734 2 651 2 
1158 2 125 2 
1048 2 734 2 
163 2 1158 2 
924 2 734 2 651 2 
1144 2 45 2 651 2 
941 2 306 2 651 2 
407 2 117 2 651 2 
1105 2 847 2 651 2 
787 2 734 2 
1158 2 810 2 
448 2 45 2 
941 2 479 2 
117 2 1114 2 
416 2 847 2 
508 2 734 2 
824 2 847 2 
117 2 658 2 
1115 2 941 2 
45 2 126 2 
693 2 924 2 734 2 651 2 
693 2 924 2 529 2 734 2 651 2 
144 2 734 2 651 2 
734 2 1167 2 651 2 
1005 2 706 2 420 2 1161 2 
37 2 
718 6 4 2 721 2 570 2 432 2 7 2 8 2 873 2 159 4 582 2 445 2 585 2 883 4 452 2 308 2 1053 2 182 4 463 6 603 4 897 2 612 2 757 2 474 2 1076 2 625 2 49 2 627 2 209 2 774 2 634 2 1084 2 57 2 216 8 494 2 792 2 932 6 354 2 501 2 946 2 948 2 949 2 955 26 374 2 92 2 512 2 1117 4 963 2 246 4 819 2 1122 2 823 2 829 2 524 4 258 6 110 2 260 4 261 2 266 2 838 2 269 4 690 2 120 2 1145 2 986 2 987 2 988 2 845 2 275 2 410 2 999 2 1000 2 133 2 1157 26 1164 2 
718 6 4 2 721 2 570 2 432 2 8 2 873 2 159 6 445 2 883 4 452 2 308 2 1053 2 182 4 463 6 603 4 897 2 612 2 757 2 474 2 1076 2 625 2 49 2 627 2 209 2 774 2 919 2 634 2 1084 2 57 2 1088 2 216 8 494 2 792 2 932 6 354 2 501 2 356 2 660 2 946 2 948 2 949 2 955 26 374 2 92 2 512 2 1117 4 963 2 246 4 819 2 1122 2 823 2 103 2 829 2 524 4 258 6 110 2 260 4 261 2 266 2 838 2 269 4 690 2 120 2 1145 2 986 2 987 2 988 2 845 2 275 2 994 2 410 2 999 2 1000 2 133 2 1157 26 1164 2 
1126 2 457 2 
742 2 
718 4 656 2 569 2 1096 2 721 2 434 8 1032 4 361 2 10 2 1034 6 873 2 809 2 955 12 813 2 450 2 817 2 1050 6 246 2 1055 2 743 8 249 2 516 2 29 2 314 2 182 2 750 2 107 4 830 4 523 2 391 2 753 2 835 2 325 2 264 2 1068 2 838 2 760 2 1070 2 329 2 474 2 909 2 986 2 912 4 988 2 540 2 542 4 997 2 209 2 782 10 922 4 1157 6 488 6 708 2 1087 2 214 4 422 2 1019 2 863 2 648 4 223 2 
718 4 656 2 1096 2 936 4 721 2 434 8 1032 4 361 2 10 2 1034 8 873 2 809 2 955 12 813 2 450 2 817 2 1050 8 246 2 886 2 1055 2 743 8 249 2 516 2 29 2 314 2 182 2 894 2 750 2 107 4 830 4 523 2 753 2 835 2 325 2 264 2 1068 2 838 2 760 2 1070 2 329 2 474 2 909 2 986 2 912 4 988 2 540 2 542 4 997 2 209 2 482 2 782 10 922 4 1157 6 708 2 488 6 1087 2 214 4 422 2 1019 2 863 2 648 4 223 2 
997 2 107 4 523 2 656 2 817 2 922 4 1070 2 708 2 488 2 329 2 1055 2 214 2 1034 2 648 2 809 2 540 2 750 2 542 2 
718 4 656 2 569 2 1096 2 721 2 434 4 1032 4 361 2 10 2 1034 6 873 2 809 2 955 12 813 2 450 2 817 2 1050 6 246 2 1055 2 743 4 516 2 29 2 314 2 894 2 182 2 750 2 107 4 830 4 523 2 391 2 753 2 835 2 325 2 264 2 1068 2 838 2 760 2 1070 2 329 2 474 2 909 2 986 2 912 4 988 2 540 2 542 4 997 2 209 2 782 6 922 4 1157 6 488 4 708 2 1087 2 214 4 422 2 1019 2 863 2 648 4 223 2 
718 4 656 2 569 2 1096 2 721 2 434 4 1032 4 361 2 10 2 1034 4 873 2 809 2 955 12 813 2 450 2 817 2 1050 6 246 2 1055 2 743 4 516 2 29 2 314 2 182 2 750 2 107 4 830 4 523 2 391 2 753 2 835 2 325 2 264 2 1068 2 838 2 760 2 1070 2 329 2 474 2 909 2 986 2 406 2 912 4 988 2 540 2 542 4 997 2 209 2 782 6 922 4 1157 6 488 6 708 2 1087 2 214 4 422 2 1019 2 863 2 648 4 223 2 
718 4 656 2 569 2 1096 2 721 2 434 8 1032 4 361 2 10 2 1034 6 873 2 809 2 955 12 813 2 450 2 817 2 1050 6 246 2 1055 2 743 4 249 2 516 2 29 2 314 2 182 2 750 2 107 4 830 4 523 2 391 2 753 2 835 2 325 2 264 2 1068 2 838 2 760 2 1070 2 329 2 474 2 909 2 986 2 912 4 988 2 540 2 542 4 997 2 209 2 782 6 922 4 1157 6 488 6 708 2 1087 2 214 4 422 2 1019 2 863 2 648 4 223 2 
718 4 656 2 569 2 1096 2 721 2 434 8 1032 4 361 2 10 2 1034 6 873 2 809 2 955 12 813 2 450 2 817 2 1050 8 246 2 1055 2 743 8 249 2 516 2 29 2 314 2 182 2 750 2 107 4 830 4 523 2 391 2 753 2 835 2 325 2 264 2 1068 2 838 2 760 2 1070 2 329 2 474 2 909 2 986 2 406 2 912 4 988 2 540 2 542 4 997 2 209 2 782 10 922 4 1157 6 488 8 708 2 1087 2 214 4 422 2 1019 2 863 2 648 4 223 2 
718 4 656 2 569 2 1096 2 721 2 434 8 1032 4 361 2 10 2 1034 6 873 2 809 2 955 12 813 2 450 2 817 2 1050 6 246 2 1055 2 743 8 249 2 516 2 29 2 314 2 182 2 750 2 107 4 830 4 523 2 391 2 753 2 835 2 325 2 264 2 1068 2 838 2 760 2 1070 2 329 2 474 2 909 2 986 2 912 4 988 2 540 2 542 4 997 2 209 2 782 10 922 4 1157 6 488 6 708 2 1087 2 214 4 422 2 1019 2 863 2 648 4 223 2 
4 2 6 2 8 2 870 2 10 2 873 2 877 1 21 6 22 2 883 4 586 6 29 2 314 2 598 2 603 4 31 10 897 2 609 6 325 2 903 7 904 1 329 2 330 2 909 2 44 2 912 6 625 12 627 2 630 2 634 2 54 6 922 4 648 4 348 8 59 2 62 4 932 6 656 2 353 2 360 6 361 2 949 2 950 2 951 1 955 46 374 2 92 2 960 2 381 1 107 4 391 2 110 2 111 6 690 2 400 2 120 2 986 2 406 4 987 2 988 2 994 2 997 2 999 2 703 7 708 2 710 2 422 2 1019 2 1018 2 718 6 1025 4 145 2 721 2 434 2 1032 8 156 2 1033 6 436 2 1034 4 440 6 159 6 442 2 728 1 445 2 450 2 1050 12 168 2 171 2 1053 4 1055 2 747 1 182 4 750 2 463 6 753 2 757 2 1068 2 760 2 1070 2 1071 2 474 2 769 6 480 2 209 2 774 2 1078 2 211 6 782 2 783 6 488 8 1087 2 1086 2 214 4 1088 2 215 6 216 4 790 1 494 2 221 6 223 4 1091 1 1096 2 1098 2 235 6 809 2 813 2 814 2 817 2 512 2 242 2 246 4 819 2 1122 2 516 4 255 2 829 2 830 4 524 4 523 2 258 8 260 2 835 4 264 2 265 1 266 2 1139 6 838 2 535 2 1145 2 845 2 275 2 540 2 542 4 856 2 1157 24 860 2 556 2 863 2 283 6 
718 6 1025 4 4 2 145 2 721 2 6 2 1032 8 434 6 1033 6 870 2 8 2 156 2 436 2 10 2 1034 8 873 2 440 6 159 6 442 2 445 2 22 2 21 6 450 2 883 4 168 2 1050 12 586 6 171 2 1053 4 1055 2 29 2 314 2 182 4 598 2 750 2 463 6 464 2 31 10 603 4 897 2 753 2 609 6 325 2 757 2 1068 2 760 2 1070 2 1071 2 329 2 330 2 474 2 909 2 44 2 912 6 625 12 769 6 627 2 630 2 480 2 1078 2 774 2 209 2 211 6 634 2 782 2 54 6 922 4 783 6 488 8 1086 2 1087 2 214 4 1088 2 215 6 216 8 348 8 648 4 221 6 59 2 494 2 223 4 62 4 932 6 656 2 353 2 1096 2 1098 2 360 6 361 2 235 6 950 2 949 4 809 2 955 48 813 2 814 2 374 2 92 2 960 2 817 2 242 2 512 2 819 2 246 4 1122 2 249 4 516 4 255 2 829 4 830 4 107 4 523 2 524 4 258 8 391 2 110 4 111 6 835 4 260 2 264 2 1139 6 266 2 838 2 269 2 400 2 690 2 535 2 120 2 1145 2 986 2 987 2 845 2 988 2 540 2 275 2 994 2 542 4 997 2 999 2 549 2 856 2 1157 26 710 2 708 2 860 2 556 2 422 2 1018 2 1019 2 863 2 283 6 
718 6 1025 4 4 2 145 2 721 2 6 2 1032 8 434 6 1033 6 870 2 8 2 156 2 436 2 10 2 1034 8 873 2 440 6 159 6 442 2 445 2 22 2 21 6 450 2 883 4 168 2 1050 12 586 6 171 2 1053 4 1055 2 743 4 29 2 314 2 182 4 598 2 750 2 463 6 464 2 31 10 603 4 897 2 753 2 609 6 325 2 757 2 1068 2 760 2 1070 2 1071 2 329 2 330 2 474 2 909 2 44 2 912 6 625 12 769 6 627 2 630 2 480 2 1078 2 774 2 209 2 211 6 634 2 54 6 782 6 922 4 783 6 488 8 1086 2 1087 2 214 4 1088 2 215 6 216 8 348 8 648 4 221 6 59 2 494 2 223 4 62 4 932 6 656 2 353 2 1096 2 1098 2 360 6 361 2 235 6 950 2 949 4 809 2 955 48 813 2 814 2 374 2 92 2 960 2 817 2 242 2 512 2 819 2 246 4 1122 2 249 4 516 4 255 2 829 4 830 4 107 4 523 2 524 4 258 8 391 2 110 4 111 6 835 4 260 2 264 2 1139 6 266 2 838 2 269 2 400 2 690 2 535 2 120 2 1145 2 986 2 987 2 845 2 988 2 540 2 275 2 994 2 542 4 997 2 999 2 549 2 856 2 1157 26 710 2 708 2 860 2 556 2 422 2 1018 2 1019 2 863 2 283 6 
4 2 6 2 869 2 8 4 870 2 10 2 873 2 21 6 22 2 883 6 586 6 885 2 29 2 314 2 894 2 598 2 603 4 31 8 897 2 609 12 325 2 614 6 329 2 330 2 909 2 912 6 625 10 627 2 630 2 634 2 54 6 922 4 648 4 348 8 59 2 62 4 932 8 656 2 353 2 360 6 361 2 949 4 950 2 955 52 374 2 92 2 960 2 107 4 391 2 110 4 111 6 983 6 690 2 400 2 120 2 691 6 986 2 406 2 987 2 988 2 992 6 994 2 997 2 999 4 708 2 710 2 422 2 1019 2 1018 2 138 2 425 6 718 6 1025 4 145 2 721 2 434 6 1032 8 156 2 1033 6 436 2 1034 10 440 6 159 6 442 2 445 2 450 2 1050 16 168 2 171 2 1053 4 1055 2 743 4 459 6 182 4 750 2 463 8 464 2 753 2 757 4 1068 2 760 2 1070 2 1071 2 474 2 478 2 769 6 480 2 209 2 774 4 1078 2 483 6 211 6 782 6 783 12 488 10 1087 2 1086 2 214 4 1088 2 215 12 216 10 494 2 221 12 223 4 1096 2 1098 2 235 12 809 2 813 2 241 6 814 2 817 2 512 2 242 2 246 4 819 2 1122 2 249 4 516 4 255 2 829 4 830 4 524 4 523 2 258 12 1137 2 260 4 835 4 264 2 266 2 1139 6 838 2 269 2 535 2 1141 2 272 2 1145 2 845 2 275 2 540 2 542 4 851 6 549 2 856 2 1157 24 860 2 556 2 863 2 283 12 284 2 
830 2 107 2 753 2 391 2 325 2 264 2 1068 2 760 2 1032 2 434 6 329 2 1034 6 912 2 809 2 540 2 542 4 955 4 817 2 1050 4 782 4 922 2 708 2 488 6 1055 2 1087 2 249 2 743 4 422 2 1019 2 29 2 863 2 314 2 648 4 223 2 750 2 
718 6 4 2 721 2 1032 2 434 6 8 3 157 2 1034 6 873 2 159 6 726 2 445 2 1044 2 883 4 1050 4 1053 2 1055 2 29 2 314 2 182 4 748 2 750 2 463 6 603 4 31 2 897 2 753 2 325 2 37 2 469 2 757 3 1068 2 760 2 329 2 474 2 44 2 912 2 625 4 627 2 209 2 634 2 1083 3 782 2 922 2 488 6 1087 2 1088 2 648 4 494 2 223 2 932 6 73 2 809 2 90 2 955 28 813 2 374 2 92 2 817 2 512 2 246 4 819 2 1122 2 249 2 830 2 107 2 524 4 391 2 258 8 260 3 264 2 266 2 838 2 120 2 1145 2 986 2 987 2 988 2 845 2 540 2 275 2 994 2 542 4 852 2 1157 24 708 2 422 2 1019 2 863 2 
753 2 325 2 1021 2 
753 2 325 2 1021 2 
718 6 1025 2 4 2 721 2 434 6 1032 4 10 2 1034 12 873 2 1039 2 299 2 159 6 879 2 445 2 1045 2 450 2 1050 16 1053 6 890 2 1055 4 743 4 177 2 29 2 182 4 894 4 895 4 600 2 463 2 31 2 603 4 897 2 753 6 325 4 1070 2 474 2 909 2 201 2 912 4 625 4 627 2 209 2 775 4 634 2 782 6 922 2 488 12 213 2 1087 2 214 4 1088 2 216 4 648 4 494 2 223 4 62 2 932 2 656 2 353 2 1104 2 88 2 949 4 955 24 374 2 92 2 512 2 246 4 819 2 1122 2 964 2 249 4 516 4 829 4 107 2 830 2 524 4 258 2 110 4 835 2 260 2 689 2 1139 2 266 2 838 2 690 4 535 2 120 2 1145 2 986 2 406 4 988 2 845 2 275 2 994 2 540 2 849 2 542 4 133 4 281 2 1156 2 1157 16 708 2 556 2 1021 2 140 2 
31 2 955 4 523 2 630 2 1025 2 960 2 1139 2 1156 2 1157 2 213 2 593 2 457 2 843 2 1039 2 986 2 698 2 625 2 
718 6 4 2 429 2 721 2 1032 4 434 6 10 2 1034 12 1035 2 873 2 1039 2 299 2 159 6 879 2 445 2 1045 2 450 2 1050 16 1053 6 890 2 1055 4 743 4 177 2 29 2 182 4 894 4 895 4 600 2 463 2 603 4 465 2 605 2 897 2 753 6 325 4 1070 2 474 2 909 2 201 2 912 4 625 2 627 2 209 2 775 4 634 2 782 6 922 2 488 12 213 2 1087 2 214 4 1088 2 216 4 648 4 494 2 223 4 62 2 932 2 656 2 353 2 361 2 1104 2 949 4 955 24 374 2 92 2 512 2 246 4 819 2 1122 2 964 2 249 4 516 4 829 4 830 2 107 2 524 4 258 2 110 4 835 4 260 4 1139 2 266 2 838 2 690 4 535 2 120 2 1145 2 986 2 406 4 988 2 845 2 275 2 994 2 540 2 849 4 542 4 133 4 1011 2 1156 2 1157 16 708 2 556 2 1021 2 
718 6 1025 2 4 2 721 2 434 6 1032 4 10 2 1034 12 873 2 1039 2 299 2 159 6 879 2 445 2 1045 2 450 2 1050 16 1053 6 890 2 1055 4 743 4 177 2 29 2 182 4 894 4 895 4 600 2 463 2 31 2 603 4 897 2 753 6 325 4 1070 2 474 2 909 2 201 2 912 4 625 4 627 2 209 2 775 4 634 2 782 6 922 2 488 12 213 2 1087 2 214 4 1088 2 216 4 648 4 494 2 223 4 62 2 932 2 656 2 353 2 230 2 361 2 83 2 1104 2 949 4 955 24 374 2 92 2 512 2 246 4 819 2 1122 2 964 2 95 2 382 2 249 4 516 2 829 4 107 2 830 2 524 4 258 2 110 4 835 4 260 2 1139 2 266 2 838 2 118 2 690 4 120 2 1145 2 986 2 406 4 988 2 845 2 275 2 994 2 540 2 849 2 542 4 133 4 1156 2 1157 16 708 2 556 2 1021 2 
1 4 567 2 3 2 4 2 572 12 8 37 573 2 578 2 13 2 580 2 15 4 18 2 25 10 26 10 601 2 603 6 606 4 34 2 612 2 613 28 35 2 38 2 616 2 40 2 42 4 621 2 46 2 622 2 48 2 625 2 49 2 627 4 628 4 50 2 52 2 636 24 639 2 55 3 641 20 642 2 57 2 647 2 59 2 650 4 64 2 66 2 67 2 657 6 73 2 75 6 659 12 662 36 663 2 86 10 664 2 87 2 667 68 91 2 669 2 670 3 92 4 672 78 677 2 678 6 99 2 101 2 100 14 102 12 682 2 108 2 112 2 690 6 120 2 121 14 697 2 702 10 705 21 136 4 138 2 712 4 715 2 717 8 716 2 718 6 142 2 721 2 149 2 152 2 154 2 157 2 159 14 161 3 162 2 168 2 738 3 175 2 176 2 179 2 182 4 754 2 756 2 757 16 761 2 193 2 194 22 196 2 764 2 199 2 200 2 204 2 206 16 771 2 209 2 774 46 776 2 210 2 216 108 788 10 217 2 220 1 222 2 792 2 225 10 794 2 795 44 796 4 803 2 802 2 232 22 805 2 233 2 236 2 806 2 811 2 240 2 814 2 242 4 246 4 819 2 821 8 250 16 827 2 253 4 254 2 258 48 257 2 832 4 259 2 260 37 263 4 837 3 266 4 838 2 840 8 272 2 274 120 845 2 275 4 278 2 853 2 854 2 280 2 858 4 282 2 861 2 284 2 286 2 865 12 287 12 288 2 290 2 869 2 873 2 874 2 875 2 297 2 304 2 884 20 883 12 307 26 308 2 885 2 889 2 891 2 309 6 311 26 312 20 316 2 896 2 320 2 318 2 897 2 321 2 898 22 326 2 900 4 327 24 330 2 913 2 914 4 915 2 335 3 917 2 339 14 341 2 343 2 344 12 925 2 929 2 932 14 930 2 351 2 359 2 940 2 942 12 944 2 943 20 945 2 365 4 366 2 367 2 952 2 955 68 372 10 956 14 957 2 961 40 380 2 966 20 965 22 968 4 971 16 972 36 977 10 389 2 390 2 394 26 396 2 397 4 980 2 398 2 401 2 405 2 986 2 987 2 988 2 991 10 990 26 993 2 994 6 995 2 410 2 999 32 1002 2 1003 8 414 21 415 2 1006 2 419 2 1013 2 421 4 1016 2 1017 2 423 22 1020 10 1023 2 428 4 1027 2 1029 10 433 10 432 2 1037 2 441 2 442 2 443 2 1043 2 445 4 446 2 1044 2 1046 4 1047 6 451 12 1049 88 452 26 1051 10 1053 2 454 14 1054 2 456 2 1058 2 1059 4 463 14 1060 2 1063 2 468 48 467 2 1065 2 469 2 1071 2 472 8 474 2 473 12 1073 12 1074 2 475 2 1075 6 480 2 1080 2 1083 2 486 2 1084 2 487 1 1085 12 491 2 490 4 1086 2 1088 6 1089 4 1090 2 493 2 494 2 495 2 497 22 1093 8 1092 14 501 2 1097 2 1100 10 502 2 503 10 504 2 1108 22 1109 8 1111 92 1116 2 1118 2 1120 2 1121 2 1125 10 1128 2 1129 4 1130 22 519 2 1133 2 521 16 520 2 1134 2 522 2 524 6 1136 2 526 8 1137 4 527 2 528 2 531 2 1140 3 532 22 1142 2 1141 2 539 2 1151 2 548 42 1153 3 550 3 1157 36 553 2 554 52 557 2 558 8 560 26 561 12 1169 2 
932 2 258 2 257 2 260 2 1065 2 757 2 8 2 1037 2 86 2 987 2 955 2 774 6 883 2 1118 2 550 2 1051 4 1157 2 891 2 827 2 788 2 1090 2 1058 2 973 2 463 2 
932 2 258 2 257 2 260 2 1065 2 757 2 8 2 1037 2 86 2 987 2 955 2 774 6 883 2 1118 2 550 2 1051 4 1157 2 891 2 827 2 788 2 1090 2 1058 2 973 2 463 2 
932 2 258 2 257 2 260 2 1065 2 757 2 8 2 1037 2 86 2 987 2 955 2 774 6 883 2 1118 2 550 2 1051 4 1157 2 891 2 827 2 788 2 1090 2 1058 2 973 2 463 2 
684 3 226 2 258 2 1093 2 865 4 428 2 797 2 260 3 610 2 433 2 8 3 905 2 270 4 403 2 987 2 1109 2 13 2 365 2 15 2 955 10 1003 2 414 3 1046 2 548 2 884 4 1049 6 705 3 678 4 1157 4 641 4 96 2 490 2 891 2 310 2 966 4 98 2 386 2 312 4 521 4 977 2 
684 2 226 2 258 2 1093 2 865 4 428 2 797 2 260 2 610 2 657 2 433 2 8 2 905 2 270 4 403 2 987 2 1109 2 13 2 365 2 15 2 812 2 955 10 1003 2 414 2 1046 2 548 2 884 4 1049 6 705 2 678 4 1157 4 641 4 96 2 490 2 891 2 310 2 966 4 98 2 386 2 312 4 1089 2 521 4 977 2 
684 2 226 2 258 2 1093 2 865 4 428 2 797 2 260 2 610 2 657 2 433 2 8 2 905 2 270 4 403 2 987 2 1109 2 13 2 365 2 15 2 812 2 955 10 1003 2 414 2 1046 2 548 2 884 4 1049 6 705 2 678 4 1157 4 641 4 96 2 490 2 891 2 310 2 966 4 98 2 386 2 312 4 1089 2 521 4 977 2 
684 2 226 2 258 2 1093 2 865 4 428 2 797 2 260 2 610 2 657 2 433 2 8 2 905 2 270 4 403 2 987 2 1109 2 13 2 365 2 15 2 812 2 955 10 1003 2 414 2 1046 2 548 2 884 4 1049 6 705 2 678 4 1157 4 641 4 96 2 490 2 891 2 310 2 966 4 98 2 386 2 312 4 1089 2 521 4 977 2 
684 2 226 2 258 2 1093 2 865 4 428 2 797 2 260 2 610 2 657 4 433 2 8 2 905 2 270 4 403 2 987 2 1109 2 13 2 365 2 15 2 812 4 955 10 1003 2 414 2 1046 2 548 2 884 4 1049 6 705 2 678 4 1157 4 641 4 96 2 490 2 891 2 310 2 966 4 98 2 386 2 312 4 1089 4 521 4 977 2 
679 2 481 2 323 2 452 2 927 2 704 2 1042 2 
1134 2 455 2 515 2 30 2 704 2 14 2 
63 2 184 2 1135 2 426 2 1062 2 609 2 611 2 431 2 759 1 838 2 1101 2 363 2 276 1 955 10 918 1 1001 2 20 2 172 1 173 2 640 1 1157 8 709 2 1159 2 592 2 713 2 315 2 
1 2 1093 6 865 12 428 6 527 2 324 2 657 5 357 2 268 2 1143 2 617 2 1109 6 846 2 365 2 15 6 955 6 812 2 669 2 1003 6 509 2 1046 6 858 2 1157 6 678 4 248 2 309 4 490 6 345 4 1089 3 104 1 521 15 
850 3 654 2 528 2 78 2 615 2 641 2 271 2 966 2 312 2 619 2 424 2 652 2 751 2 
955 1 850 6 654 2 528 2 755 2 229 1 737 2 78 2 1157 1 615 2 641 2 271 2 966 2 312 2 619 2 424 2 652 2 751 4 
850 6 654 4 528 4 755 2 737 2 78 2 615 2 641 2 271 4 966 2 312 2 619 2 424 2 652 2 751 4 
955 1 850 10 654 8 528 8 755 8 229 1 737 6 78 2 1157 1 615 2 641 2 271 8 966 2 312 2 619 2 424 2 652 2 751 4 
1028 8 143 2 147 4 5 4 868 4 292 2 9 4 158 22 293 4 438 4 296 8 295 4 878 4 159 60 12 2 302 4 17 2 165 8 27 4 740 4 1056 4 599 4 749 4 603 26 602 8 1061 4 187 4 1066 2 762 2 470 4 197 4 41 4 332 4 199 2 910 2 205 4 915 2 916 2 627 8 334 2 1077 4 632 2 1081 2 779 2 338 2 1088 12 931 2 498 1 227 2 355 4 1099 4 804 4 362 2 506 1 89 4 370 2 955 64 373 4 507 4 671 4 1119 1 244 4 962 4 676 4 385 1 1127 4 1132 2 106 4 974 8 524 30 109 2 395 4 114 8 266 4 402 2 842 4 1146 9 123 6 124 4 989 4 275 8 994 12 541 28 547 8 1006 2 551 12 135 4 1012 8 859 4 1157 56 1014 3 555 4 1165 4 139 4 
928 2 793 2 227 4 70 2 355 2 5 2 1030 2 71 2 1031 2 358 2 291 2 293 2 1103 2 298 2 506 2 876 2 11 2 159 44 364 2 300 2 1112 2 727 2 303 2 953 2 583 2 371 4 955 46 584 2 165 2 17 2 674 2 170 4 962 2 27 2 1123 2 379 2 591 2 825 2 826 2 680 2 893 2 461 2 828 2 749 2 599 2 974 4 603 20 602 4 524 20 322 2 109 2 1061 2 687 2 114 2 115 4 399 2 266 2 534 2 762 2 197 2 1146 2 333 2 199 2 123 6 989 2 768 2 915 2 994 2 127 2 275 2 541 6 627 2 130 2 1077 2 632 2 1152 2 777 2 546 2 547 4 1006 2 1007 2 485 2 1009 2 780 6 779 2 707 2 1157 44 711 4 555 38 1088 2 714 2 789 2 
565 2 1028 8 430 2 5 4 1030 10 1031 10 868 4 292 2 9 4 158 30 293 4 295 4 296 24 438 8 576 8 878 4 159 104 302 4 727 2 581 8 584 2 165 10 17 2 174 32 27 4 28 16 740 8 594 4 1056 4 599 4 749 4 183 2 602 10 603 36 1061 4 187 4 1066 4 189 8 762 2 470 16 41 4 197 4 332 4 910 2 199 2 766 8 205 4 915 2 916 4 626 4 334 2 627 6 770 2 1077 4 632 2 779 2 340 4 1088 30 931 2 227 2 355 4 1099 4 804 4 362 2 1102 2 1112 2 89 4 955 78 373 4 507 4 244 4 962 6 1123 2 676 4 513 16 969 2 1132 4 106 4 974 10 524 44 395 4 114 6 266 2 842 4 1146 10 124 4 123 6 989 4 275 6 994 28 541 24 700 4 408 4 547 10 1006 2 1009 10 551 14 135 4 1012 24 859 4 1157 70 1014 8 1015 4 555 14 1165 4 139 4 564 4 
498 2 143 2 227 2 355 4 5 4 158 6 293 4 808 2 506 2 160 2 159 40 12 2 1112 2 727 2 955 28 583 2 881 2 17 2 165 2 962 2 27 2 385 2 1132 4 599 2 749 2 974 6 603 14 602 6 524 14 322 2 1061 4 114 2 1066 2 266 2 762 2 537 2 197 4 1146 2 910 2 199 2 123 4 989 2 915 2 916 2 994 12 275 2 541 8 627 2 1077 4 632 2 547 6 1006 2 1081 10 779 2 338 2 1157 26 1014 6 555 14 1088 12 
785 2 

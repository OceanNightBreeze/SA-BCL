#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 318 755 428 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (191,809) 319 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (263,581,693,737,775) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 745 343 732 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 731 649 455 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 731 649 455 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166942 | stmt -> ;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE:negate(I)I
daikon.PptName:isEnterPoint()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:sum([D)D
daikon.Ppt:Ppt()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaCharStream:readChar()C
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ProglangType:isArray()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.JavaCharStream:FillBuff()V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariants:Invariants()V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:num_samples()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:arity()I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.PptSlice1:num_samples()I
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.ProglangType:isPseudoArray()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice; | RETURN | 38994 | return null
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONDITION | 65850 | if (x) -> if (!x)
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap:size()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ModBitTracker:num_vars()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([D)[D
daikon.Quant:eltwiseLT([I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoAux:hashCode()I
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfo:relate_var()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptSlice0:arity()I
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:BeginToken()C
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:setDiff([I[I)[I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ValueTuple:size()I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ModBitTracker:split(I)I
daikon.Debug:logOn()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Intern:numIntArrays()I
daikon.Quant:concat([I[I)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Debug:logDetail()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:slice([III)[I | RETURN | 160908 | return null
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:lexGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:subsetOf([I[I)Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String; | RETURN | 109561 | return null
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:sign(I)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:gt(II)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.PptSlice2:arity()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.RootNode:RootNode()V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >=
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:lexGTE([I[I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.ModBitTracker:num_sets()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:sameLength([I[I)Z
daikon.ProglangType:isScalar()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_ntk()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String; | RETURN | 10951 | return null
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.Node:Node()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eq(II)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
203 4 797 2 571 2 115 2 144 2 548 2 254 2 546 2 714 2 
559 2 280 6 312 2 397 2 423 2 296 2 447 2 264 2 340 2 240 6 558 6 
677 2 153 2 221 6 358 4 457 4 797 2 513 6 337 2 196 2 515 6 254 2 518 6 786 2 
564 10 632 10 177 12 710 2 790 6 484 2 333 8 283 8 829 29 310 4 235 2 160 16 511 2 797 6 314 4 658 8 413 2 339 2 388 10 610 2 132 8 729 26 295 10 465 4 618 16 112 6 561 4 785 16 254 6 201 10 
576 6 585 4 
80 2 
229 2 629 4 231 2 587 2 431 2 792 4 286 2 797 4 435 4 339 2 437 2 550 2 553 4 185 2 20 2 187 2 297 2 692 2 85 2 443 2 809 2 191 2 23 2 401 2 144 2 254 4 706 2 307 2 826 2 509 2 456 2 570 2 460 2 51 2 524 2 58 2 371 2 108 2 279 2 668 2 110 2 671 2 735 2 625 2 
564 16 822 4 204 2 148 6 632 6 788 6 177 22 790 4 6 6 333 6 829 54 72 4 42 6 793 8 160 32 797 4 314 2 604 2 658 18 413 2 213 2 388 16 83 4 52 2 320 4 729 48 295 16 170 4 618 32 733 2 112 4 373 4 29 4 816 2 785 32 254 4 766 6 478 6 201 16 
191 2 664 2 57 2 
54 22 742 2 37 2 86 10 809 2 265 2 623 2 400 2 722 2 16 2 580 2 183 2 354 2 241 2 
564 2 632 4 177 2 96 2 508 2 829 6 491 2 160 2 314 2 658 2 801 2 388 2 609 2 365 2 729 4 295 2 667 2 618 2 498 2 112 2 328 2 785 2 201 2 
564 4 242 2 729 12 177 4 295 4 465 2 170 4 829 16 72 4 618 8 246 2 160 8 785 8 766 6 478 6 388 4 201 4 
116 2 629 4 480 2 174 4 308 4 505 2 599 2 773 2 488 2 155 2 74 4 9 2 747 4 458 2 315 2 603 2 210 4 639 2 269 4 164 10 50 4 165 2 294 2 524 4 592 62 663 2 526 4 664 2 57 6 138 4 443 2 349 14 191 8 672 4 351 2 63 2 622 10 763 2 537 2 479 4 
69 2 167 2 359 2 530 2 560 2 815 2 80 2 212 2 475 2 414 2 
627 1 0 2 118 2 119 2 540 2 120 3 429 2 4 2 741 2 744 2 432 3 124 2 748 2 336 2 637 2 12 2 127 1 750 2 15 4 436 1 129 2 131 4 441 3 244 24 21 6 642 2 347 2 643 2 444 2 445 2 25 2 28 2 761 6 142 1 249 1 252 2 254 34 32 4 34 2 257 2 768 32 565 5 451 2 262 2 654 2 357 16 771 2 772 2 154 2 40 2 774 2 161 4 571 2 572 1 45 2 659 2 162 16 575 2 48 2 459 2 273 2 275 3 464 2 56 2 60 1 370 1 778 2 171 2 670 4 471 2 782 2 64 1 472 2 473 2 783 2 66 3 476 3 282 1 485 3 76 16 590 2 797 32 798 2 685 2 686 2 387 2 182 2 689 1 591 3 389 2 805 2 690 4 495 2 390 2 810 2 192 2 300 1 594 2 697 2 814 3 700 2 198 8 303 8 705 8 402 2 818 2 90 6 406 2 205 3 827 2 711 2 600 2 98 32 601 1 830 2 409 2 712 2 832 2 718 2 101 2 605 2 834 2 720 1 606 2 608 24 517 3 317 2 837 2 521 16 416 2 105 1 220 2 613 2 417 12 106 3 222 6 419 2 734 2 324 4 114 2 326 2 327 2 535 4 226 1 841 2 626 2 329 2 
254 2 836 2 
146 2 199 2 254 4 
527 2 
356 6 149 2 121 2 486 2 487 2 123 2 73 6 510 2 588 2 433 2 181 2 799 2 318 2 755 2 107 2 557 2 421 6 113 2 621 2 702 2 31 2 738 2 304 2 428 2 67 2 377 2 
740 2 197 2 207 1 820 2 
708 2 820 2 
191 2 319 2 561 2 168 2 382 2 109 2 820 2 
382 2 285 2 820 2 
382 2 581 2 820 2 
740 2 624 2 703 2 
382 2 820 2 
79 2 624 2 
820 2 87 2 
236 2 740 2 624 2 
1 2 740 2 368 2 
740 2 638 2 538 2 
260 2 740 2 14 2 
398 2 258 2 740 2 
624 2 13 2 
224 2 820 2 
374 2 368 2 
638 2 227 2 
260 2 399 2 
258 2 641 2 
624 2 502 2 
258 2 769 2 
260 2 344 2 
717 2 638 2 
368 2 780 2 
236 2 740 2 754 2 624 2 
236 2 646 2 740 2 754 2 624 2 
740 2 624 2 93 2 
740 2 136 2 624 2 
151 2 208 2 353 2 104 2 
191 2 319 2 499 2 424 2 
191 2 319 2 499 2 168 2 424 2 784 2 
191 2 319 2 561 2 382 2 448 2 820 2 
194 2 570 2 
191 2 319 2 555 2 144 2 
260 2 408 2 
330 2 258 2 
368 2 425 2 
638 2 238 2 
258 2 638 2 81 2 
266 2 258 2 638 2 
258 2 573 2 638 2 
258 2 638 2 725 2 
237 2 268 6 319 2 439 2 554 2 395 2 191 2 817 6 
624 2 38 2 
775 2 461 2 18 2 737 2 245 2 693 2 263 4 
740 2 556 2 
686 2 
628 2 630 4 741 6 748 2 126 2 12 2 750 2 15 2 129 2 131 4 342 2 756 2 21 6 643 2 444 2 28 2 761 2 252 2 254 26 32 2 33 2 34 2 768 4 161 4 571 2 572 2 43 2 45 2 659 2 575 2 48 2 662 2 464 2 56 2 369 2 670 2 471 2 472 2 378 2 680 2 797 26 493 2 805 2 495 2 390 2 190 2 300 2 192 4 193 2 303 2 818 2 90 4 305 4 202 2 406 2 711 2 98 6 718 2 101 2 834 2 606 2 214 2 521 6 416 2 613 2 321 2 417 8 222 2 734 2 324 4 114 2 327 2 535 4 329 2 
628 2 630 4 741 6 334 2 748 2 126 2 12 2 750 2 15 2 129 2 131 4 342 2 756 2 21 6 643 2 444 2 28 2 761 2 252 2 254 26 32 2 33 2 34 2 768 4 161 4 571 2 572 2 43 2 45 2 659 2 575 2 48 2 272 2 662 2 464 2 56 2 670 2 471 2 472 2 783 2 680 2 797 26 493 2 805 2 495 2 390 2 190 2 300 2 192 4 812 2 193 2 303 2 818 2 90 6 305 4 406 2 711 2 98 6 712 2 718 2 101 2 834 2 606 2 214 2 521 6 416 2 613 2 321 2 417 8 222 2 419 2 734 2 324 4 114 2 327 2 535 4 329 2 
794 2 
634 2 688 2 
2 2 430 2 633 2 789 4 232 4 332 2 681 2 11 2 683 2 10 2 797 6 338 2 340 2 240 6 802 4 552 2 691 8 19 2 21 4 558 6 559 4 396 2 28 2 645 2 562 2 254 12 566 2 453 2 711 2 97 2 264 4 311 2 713 2 831 2 312 2 159 8 161 2 101 2 45 2 362 2 103 2 519 2 415 2 416 2 612 2 613 2 169 2 665 4 466 2 781 4 280 6 324 2 61 2 620 2 172 10 225 2 842 4 536 2 582 2 329 2 
2 2 430 2 633 2 789 4 232 4 332 2 681 2 11 2 683 2 797 6 338 2 340 2 240 8 802 4 552 2 691 8 296 2 19 2 593 2 21 4 558 6 559 4 396 2 28 2 645 2 251 2 562 2 254 12 566 2 453 2 711 2 97 2 264 4 311 2 713 2 831 2 312 2 159 8 161 2 101 2 45 2 362 2 103 2 519 2 520 4 415 2 416 2 612 2 613 2 169 2 665 4 781 4 324 2 280 8 61 2 620 2 172 10 225 2 842 4 536 2 582 2 329 2 
612 2 169 2 332 2 665 4 264 2 311 2 558 2 781 4 559 2 396 2 620 2 11 2 645 2 338 2 103 2 582 2 240 2 802 2 
2 2 430 2 633 2 789 4 232 4 332 2 681 2 11 2 683 2 10 2 797 6 338 2 240 6 802 4 552 2 691 4 296 2 19 2 21 4 558 4 559 4 396 2 28 2 645 2 562 2 254 12 566 2 453 2 711 2 97 2 264 4 311 2 713 2 831 2 312 2 159 4 161 2 101 2 45 2 362 2 103 2 519 2 415 2 416 2 612 2 613 2 169 2 665 4 466 2 781 4 280 6 324 2 61 2 620 2 172 6 225 2 842 4 536 2 582 2 329 2 
2 2 430 2 633 2 789 4 232 4 332 2 681 2 11 2 683 2 10 2 797 6 338 2 240 4 802 4 552 2 691 4 19 2 21 4 558 6 559 4 396 2 28 2 645 2 447 2 562 2 254 12 566 2 453 2 711 2 97 2 264 4 311 2 713 2 831 2 312 2 159 4 161 2 101 2 45 2 362 2 103 2 519 2 415 2 416 2 612 2 613 2 169 2 665 4 466 2 781 4 280 6 324 2 61 2 620 2 172 6 225 2 842 4 536 2 582 2 329 2 
2 2 430 2 633 2 789 4 232 4 332 2 681 2 11 2 683 2 10 2 797 6 338 2 340 2 240 6 802 4 552 2 691 8 19 2 21 4 558 6 559 4 396 2 28 2 645 2 562 2 254 12 566 2 453 2 711 2 97 2 264 4 311 2 713 2 831 2 312 2 159 4 161 2 101 2 45 2 362 2 103 2 519 2 415 2 416 2 612 2 613 2 169 2 665 4 466 2 781 4 280 6 324 2 61 2 620 2 172 6 225 2 842 4 536 2 582 2 329 2 
2 2 430 2 633 2 789 4 232 4 332 2 681 2 11 2 683 2 10 2 797 6 338 2 340 2 240 6 802 4 552 2 691 8 19 2 21 4 558 8 559 4 396 2 28 2 645 2 447 2 562 2 254 12 566 2 453 2 711 2 97 2 264 4 311 2 713 2 831 2 312 2 159 8 161 2 101 2 45 2 362 2 103 2 519 2 415 2 416 2 612 2 613 2 169 2 665 4 466 2 781 4 280 8 324 2 61 2 620 2 172 10 225 2 842 4 536 2 582 2 329 2 
2 2 430 2 633 2 789 4 232 4 332 2 681 2 11 2 683 2 10 2 797 6 338 2 340 2 240 6 802 4 552 2 691 8 19 2 21 4 558 6 559 4 396 2 28 2 645 2 562 2 254 12 566 2 453 2 711 2 97 2 264 4 311 2 713 2 831 2 312 2 159 8 161 2 101 2 45 2 362 2 103 2 519 2 415 2 416 2 612 2 613 2 169 2 665 4 466 2 781 4 280 6 324 2 61 2 620 2 172 10 225 2 842 4 536 2 582 2 329 2 
430 2 631 2 2 4 633 2 232 8 3 2 7 6 8 2 11 2 10 2 434 2 15 2 239 6 240 4 438 1 19 2 21 6 643 2 444 2 28 2 27 2 645 2 447 4 252 2 254 46 32 2 34 2 261 2 453 4 264 4 45 2 659 2 49 2 274 7 55 1 56 2 665 4 670 2 280 12 61 2 471 12 676 1 680 2 681 2 288 1 683 2 492 1 494 6 691 2 84 2 88 6 301 2 302 1 699 2 701 2 501 1 303 2 90 6 305 4 306 6 95 2 506 2 507 2 711 2 97 2 98 8 311 2 713 2 312 4 512 6 718 2 101 2 721 2 516 6 519 2 103 2 724 2 726 4 521 6 523 7 527 6 734 2 324 4 325 2 327 2 535 4 536 2 329 2 541 2 741 6 332 2 544 2 750 2 338 2 751 2 128 2 131 4 133 1 552 2 342 2 756 2 558 8 559 4 761 2 562 2 355 6 768 2 150 6 566 2 567 2 161 4 571 2 362 2 575 2 364 4 366 10 776 2 169 2 781 4 172 2 783 2 582 2 379 6 789 4 797 24 386 2 180 2 802 4 805 2 390 2 391 2 188 2 396 2 195 2 199 6 821 1 406 2 407 6 206 6 828 2 831 2 833 2 410 2 834 2 214 4 415 2 836 6 416 2 838 2 613 2 612 2 417 4 222 2 615 8 419 2 620 2 225 2 842 6 427 6 
2 4 631 2 430 2 541 2 633 2 3 2 232 8 122 2 741 6 332 2 544 2 7 6 8 2 10 2 11 2 434 2 750 2 751 2 338 2 15 4 239 6 340 4 128 2 240 8 131 4 552 2 342 2 19 2 756 2 21 6 643 2 558 8 444 2 559 4 27 2 28 2 761 2 645 2 252 2 254 48 562 2 32 4 34 2 355 6 768 2 150 6 566 2 567 2 261 2 453 4 264 4 571 2 161 4 45 2 659 2 362 2 575 2 364 4 49 2 366 10 776 2 56 2 169 2 665 4 781 4 670 4 280 12 471 12 61 2 172 2 783 2 582 2 379 6 789 4 680 2 681 2 683 2 797 26 386 2 180 2 494 6 802 4 691 6 805 2 84 2 391 2 390 2 188 2 88 6 192 2 396 2 301 2 699 2 195 2 701 2 199 6 303 2 90 6 305 4 306 6 95 2 406 2 407 6 506 2 206 6 507 2 97 2 711 2 98 8 828 2 311 2 713 2 831 2 312 4 410 2 512 6 833 2 718 2 101 2 834 2 721 2 516 6 214 4 103 2 519 2 724 2 836 6 415 2 521 6 726 4 416 2 838 2 612 2 613 2 417 8 527 6 222 2 615 8 419 2 734 2 325 2 324 4 620 2 327 2 225 2 535 4 842 6 536 2 228 2 329 2 427 6 
2 4 631 2 430 2 541 2 633 2 3 2 232 8 122 2 741 6 332 2 544 2 7 6 8 2 10 2 11 2 434 2 750 2 751 2 338 2 15 4 239 6 340 4 128 2 240 8 131 4 552 2 342 2 19 2 756 2 21 6 558 8 643 2 444 2 559 4 27 2 28 2 761 2 645 2 252 2 254 48 562 2 32 4 34 2 355 6 768 2 150 6 566 2 567 2 261 2 453 4 264 4 159 4 571 2 161 4 45 2 659 2 362 2 575 2 364 4 49 2 366 10 776 2 56 2 169 2 665 4 781 4 670 4 280 12 471 12 61 2 172 6 783 2 582 2 379 6 789 4 680 2 681 2 683 2 797 26 386 2 180 2 494 6 802 4 691 6 805 2 84 2 391 2 390 2 188 2 88 6 192 2 396 2 301 2 699 2 195 2 701 2 199 6 303 2 90 6 305 4 306 6 95 2 406 2 407 6 506 2 206 6 507 2 97 2 711 2 98 8 828 2 311 2 713 2 831 2 312 4 410 2 512 6 833 2 718 2 101 2 834 2 721 2 516 6 214 4 103 2 519 2 724 2 836 6 415 2 521 6 726 4 416 2 838 2 612 2 613 2 417 8 527 6 222 2 615 8 419 2 734 2 325 2 324 4 620 2 327 2 225 2 535 4 842 6 536 2 228 2 329 2 427 6 
430 2 631 2 2 4 633 2 232 8 3 2 234 2 7 6 8 2 11 2 10 2 434 2 15 4 239 12 240 10 19 2 21 6 643 2 444 2 28 2 27 2 645 2 447 2 252 2 254 52 32 4 34 2 450 6 261 2 453 4 264 4 657 6 45 2 659 2 660 6 49 2 56 2 665 4 670 4 280 16 61 2 471 10 680 4 681 2 683 2 494 6 691 6 84 2 296 2 497 2 88 6 301 2 698 2 699 2 701 2 303 4 704 6 90 6 305 6 306 6 95 2 506 2 507 2 97 2 711 2 98 12 311 2 713 2 312 4 716 6 512 6 313 6 718 2 101 2 721 2 516 12 519 2 103 2 724 2 726 4 521 8 527 12 529 6 734 2 324 4 325 2 531 2 327 2 535 4 536 2 329 2 541 2 122 2 741 8 332 2 750 2 338 2 751 2 340 4 128 2 131 4 552 2 342 2 756 2 558 10 559 4 761 4 562 2 355 6 768 4 150 6 566 2 567 2 159 4 161 4 571 2 362 2 575 2 364 4 366 8 776 2 169 2 777 6 781 4 578 2 172 6 783 2 582 2 379 6 789 4 797 24 386 2 180 2 802 4 805 2 390 2 391 2 188 2 192 2 396 2 195 2 596 2 199 12 406 2 824 2 407 12 206 6 828 2 831 2 833 2 410 2 834 2 214 4 835 6 415 2 836 12 416 2 838 2 613 2 612 2 417 10 222 4 615 8 419 2 620 2 225 2 842 6 843 2 228 2 427 6 
430 2 633 2 789 2 232 2 97 2 332 2 264 4 713 2 681 2 831 2 312 2 10 2 159 4 683 2 11 2 103 2 340 2 415 2 240 6 691 6 169 2 665 2 558 6 781 2 559 4 280 4 620 2 61 2 645 2 225 2 172 4 842 2 254 4 562 2 582 2 
119 2 430 2 633 2 232 2 741 6 332 2 544 2 10 2 11 2 750 2 340 2 240 6 131 4 342 2 756 2 21 6 558 6 643 2 444 2 559 4 247 2 28 2 761 3 645 2 252 2 562 2 254 28 34 2 768 3 264 4 161 4 571 2 45 2 659 2 575 2 366 2 169 2 665 2 781 2 280 4 61 2 471 4 782 2 172 2 674 2 783 2 579 2 376 3 582 2 789 2 681 2 683 2 797 24 686 2 805 2 691 6 390 2 90 6 305 4 405 2 406 2 711 2 97 2 600 2 98 8 713 2 831 2 312 2 718 2 101 2 834 2 723 2 103 2 519 2 214 2 415 2 521 6 416 2 613 2 222 3 419 2 734 2 324 4 620 2 225 2 327 2 535 4 842 2 329 2 
61 2 770 2 681 2 
61 2 770 2 681 2 
2 4 430 2 232 4 741 2 545 2 750 2 15 4 340 4 240 12 753 2 131 4 552 2 17 4 342 2 756 2 21 6 643 2 558 12 444 2 559 4 27 2 28 2 645 2 447 4 252 2 254 24 652 2 765 2 32 4 33 4 34 2 768 2 147 2 566 2 770 2 452 2 453 2 264 4 360 2 159 4 161 4 571 2 574 4 45 2 659 2 362 2 575 2 364 2 366 2 776 2 56 4 467 2 665 2 666 2 781 2 670 4 280 16 471 4 61 4 172 6 783 2 582 4 789 2 679 2 284 2 681 6 75 2 797 16 802 4 803 2 805 2 691 6 296 4 391 2 390 2 189 2 396 2 90 6 306 2 406 2 711 2 98 2 311 2 602 2 312 4 101 2 834 2 214 6 103 2 726 2 521 2 416 2 525 2 219 2 613 2 417 4 419 2 734 2 324 4 327 2 225 2 535 4 842 4 329 2 
753 2 539 2 306 2 366 2 95 2 416 2 175 2 219 2 612 2 506 2 679 2 471 2 26 2 797 2 254 4 688 2 364 2 
2 4 430 2 232 4 741 2 750 2 15 4 340 4 240 12 753 2 131 4 552 2 17 4 342 2 19 2 756 2 21 6 643 2 558 12 140 2 444 2 559 4 27 2 28 2 645 2 447 4 252 2 254 24 652 4 765 2 32 4 33 4 34 2 768 4 147 2 566 2 770 2 453 4 264 4 656 2 360 2 159 4 161 4 571 2 574 4 45 2 659 2 362 2 575 2 776 2 56 4 467 2 665 2 666 2 781 2 670 4 280 16 471 2 61 4 172 6 783 2 582 4 789 2 679 2 284 2 681 6 75 2 797 16 802 4 805 2 691 6 296 4 391 2 390 2 189 2 396 2 500 2 90 6 306 2 406 2 711 2 98 2 311 2 312 4 101 2 514 2 834 2 214 6 103 2 726 2 521 2 416 2 219 2 525 2 613 2 417 4 419 2 420 2 734 2 324 4 327 2 225 2 535 4 842 4 329 2 
2 4 430 2 232 4 741 2 750 2 15 4 340 4 240 12 753 2 131 4 552 2 17 4 134 2 342 2 640 2 19 2 756 2 21 6 643 2 558 12 444 2 559 4 27 2 28 2 645 2 447 4 252 2 254 24 652 2 765 2 32 4 33 4 34 2 768 2 147 2 566 2 770 2 453 4 264 4 360 2 159 4 161 4 571 2 574 4 45 2 659 2 362 2 575 2 364 2 366 2 776 2 56 4 467 2 665 2 666 2 781 2 669 2 670 4 280 16 471 4 61 4 172 6 783 2 582 4 789 2 679 2 284 2 287 2 681 6 75 2 797 16 802 4 805 2 691 6 296 4 391 2 390 2 189 2 396 2 90 6 306 2 406 2 711 2 98 2 311 2 312 4 101 2 834 2 214 6 103 2 726 2 521 2 416 2 525 2 219 2 613 2 417 4 616 2 419 2 734 2 324 4 327 2 225 2 535 4 842 4 329 2 
631 2 381 2 741 6 745 2 384 2 797 18 386 2 82 1 291 2 551 2 131 2 805 2 342 2 293 2 343 2 390 2 137 2 21 6 444 2 28 2 761 2 248 2 647 2 143 2 764 2 252 2 254 24 90 2 305 4 34 2 449 2 768 2 406 2 707 1 598 2 261 2 568 2 711 2 98 8 828 2 833 2 571 2 161 4 718 2 101 2 45 2 316 2 102 2 214 2 575 2 49 2 521 6 416 2 166 2 613 2 276 2 222 2 839 2 732 2 734 2 324 4 471 2 327 2 535 2 534 2 840 2 329 2 
768 3 259 2 825 2 741 2 383 4 98 2 680 6 797 2 718 2 684 2 363 2 521 2 222 3 440 3 808 2 617 2 468 2 644 2 673 1 760 2 811 2 761 3 254 2 256 2 305 2 
768 2 259 2 825 2 741 2 383 4 98 2 680 6 797 2 718 2 684 2 363 2 521 2 222 2 440 2 808 2 617 2 468 2 644 2 760 2 811 2 761 2 254 2 256 2 305 2 
768 2 259 2 825 2 741 2 383 4 98 2 680 6 797 2 718 2 684 2 363 2 521 2 222 2 440 2 808 2 617 2 468 2 644 2 760 2 811 2 761 2 254 2 256 2 305 2 
117 4 564 2 768 3 35 2 790 2 70 2 542 2 98 2 333 4 829 6 635 2 489 3 267 3 100 6 385 2 76 2 160 2 797 4 718 2 162 2 388 2 729 4 295 2 418 2 222 3 346 4 577 2 348 2 618 2 469 4 24 2 760 2 446 3 352 4 253 2 145 4 254 10 785 2 503 2 201 2 
117 4 177 2 790 2 70 2 542 2 333 4 489 2 635 2 76 2 385 2 797 4 388 2 295 2 346 4 348 2 24 2 760 2 446 2 352 4 253 2 254 10 145 4 503 2 201 2 564 2 768 2 35 2 98 2 829 4 100 6 267 2 160 2 718 2 658 2 413 2 162 2 729 4 418 2 222 2 577 2 618 2 469 4 785 2 
117 4 177 2 790 2 70 2 542 2 333 4 489 2 635 2 76 2 385 2 797 4 388 2 295 2 346 4 348 2 24 2 760 2 446 2 352 4 253 2 254 10 145 4 503 2 201 2 564 2 768 2 35 2 98 2 829 4 100 6 267 2 160 2 718 2 658 2 413 2 162 2 729 4 418 2 222 2 577 2 618 2 469 4 785 2 
117 4 177 2 790 2 70 2 542 2 333 4 489 2 635 2 76 2 385 2 797 4 388 2 295 2 346 4 348 2 24 2 760 2 446 2 352 4 253 2 254 10 145 4 503 2 201 2 564 2 768 2 35 2 98 2 829 4 100 6 267 2 160 2 718 2 658 2 413 2 162 2 729 4 418 2 222 2 577 2 618 2 469 4 785 2 
117 4 177 4 790 2 70 2 542 2 333 4 489 2 635 2 76 2 385 2 797 4 388 2 295 2 346 4 348 2 24 2 760 2 446 2 352 4 253 2 254 10 145 4 503 2 201 2 564 2 768 2 35 2 98 2 829 4 100 6 267 2 160 2 718 2 658 4 413 4 162 2 729 4 418 2 222 2 577 2 618 2 469 4 785 2 
89 2 687 2 650 2 179 2 223 2 157 2 
661 2 682 2 126 2 648 2 78 2 179 2 779 2 
116 1 739 2 176 2 483 2 743 2 41 2 361 2 589 2 797 8 516 2 215 1 47 2 217 2 728 2 462 2 611 2 613 2 807 1 758 2 757 2 278 1 470 2 351 1 254 10 255 2 404 2 
564 6 148 4 230 2 380 2 177 3 790 2 333 4 829 16 72 2 793 2 160 6 797 6 658 2 413 2 341 2 388 6 83 2 463 2 292 2 729 12 295 6 187 2 297 2 345 2 22 2 618 6 254 6 785 6 478 4 201 6 
481 2 806 2 678 2 346 2 543 2 39 2 394 2 636 2 469 2 62 4 797 1 375 1 254 1 145 2 819 7 200 2 46 2 584 2 
481 2 806 2 678 2 346 2 543 4 39 2 394 4 636 2 469 2 62 4 145 2 200 2 819 6 46 4 584 2 
481 2 806 2 678 2 346 2 543 8 39 6 394 8 636 2 469 2 62 4 797 1 375 1 254 1 145 2 200 8 819 10 46 8 584 2 
481 2 806 2 678 2 346 2 543 2 394 2 636 2 469 2 62 2 145 2 819 2 46 2 584 2 
5 1 797 12 749 1 752 2 130 1 131 6 805 4 186 2 243 2 250 1 595 4 649 2 762 2 597 1 254 12 90 12 91 2 653 2 655 1 455 2 44 2 575 4 277 2 419 4 731 2 372 2 734 4 422 2 533 2 535 6 736 1 65 4 783 4 474 2 173 2 
68 2 787 2 178 2 586 4 71 2 791 2 233 2 746 4 335 2 125 6 795 2 796 2 797 44 77 2 547 2 289 4 800 2 549 2 290 2 130 2 804 2 131 20 805 2 135 2 184 4 186 2 496 2 392 2 759 2 694 2 393 2 442 2 298 6 695 2 139 2 299 4 350 2 141 2 30 2 649 2 597 2 254 46 563 2 403 2 90 42 94 2 504 2 823 2 653 2 36 2 152 2 709 2 309 2 569 4 455 2 156 6 715 2 158 2 411 2 719 2 209 4 271 2 216 2 270 2 575 2 727 2 522 2 218 2 367 2 53 2 322 2 59 2 277 2 730 2 323 2 528 2 731 2 372 2 619 2 111 2 734 2 281 2 422 2 532 2 533 4 535 20 65 38 675 2 426 2 583 2 
653 2 482 2 99 2 71 2 746 2 455 2 715 2 797 18 209 2 211 2 163 2 575 2 752 2 290 2 727 2 130 2 131 8 805 2 184 2 186 2 496 2 277 2 730 2 528 2 731 2 419 4 298 4 372 2 734 2 595 4 533 2 532 2 813 2 535 8 649 2 65 14 783 4 254 18 403 2 90 18 91 2 
331 2 178 4 5 2 746 6 490 4 797 26 800 4 549 2 130 2 131 14 805 2 184 6 186 2 243 2 496 2 298 8 696 2 250 2 762 10 649 2 651 2 597 2 254 28 563 2 90 38 92 2 767 2 653 2 504 2 655 6 454 2 309 4 156 6 455 2 715 2 411 4 44 10 412 2 719 4 209 6 575 2 727 2 218 4 367 2 53 2 277 2 614 2 323 2 419 10 731 2 372 2 734 2 281 2 532 2 533 2 535 14 736 2 65 14 783 10 474 2 477 4 173 2 
607 2 

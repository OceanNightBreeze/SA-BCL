#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 536 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 909 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 725 411 575 12 786 323 360 120 762 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 65 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 828 828 287 287 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 177 (74,275) (16,309) (16,309) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 577 363 872 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 703 155 356 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 703 155 356 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 703 155 356 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 703 155 356 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:relate_var()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_163()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 283084 | = null
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I | CONDITION | 910 | if (x) -> if (!x)
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_56()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Debug:logDetail()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaCharStream:readChar()C
daikon.Quant:subsetOf([F[D)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53531 | = null
jtb.JavaParser:jj_3R_134()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:sum([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.MathMDE:pow(II)I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_63()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLT([I)Z
daikon.Quantify.Constant:Constant(I)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
utilMDE.Intern:numIntArrays()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.PptSlice1:arity()I
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:memberOf(S[S)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:gt(II)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:sign(I)I
daikon.Quant:isReverse([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:intersection([I[I)[I
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isFloat()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_53()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.Quant:eltsLT([II)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:memberOf(F[D)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3_13()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:intern([I)[I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String; | CONSTANT | 8912 | 0 -> -1
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.diff.RootNode:RootNode()V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.JavaCharStream:FillBuff()V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ModBitTracker:num_vars()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfo:isDerived()Z
daikon.Quant:lt(II)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.MathMDE:negate(I)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern:intern([D)[D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:setEqual([I[I)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfo:isPointer()Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.ProglangType:isPseudoArray()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:slice([III)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:union([I[I)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_15()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:noDups([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3_3()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.FormatTestCase:passes()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ModBitTracker:split(I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariants:Invariants()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaParser:jj_3R_57()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:sameLength([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:ne(II)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_14()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaCharStream:getEndColumn()I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(FF)Z
daikon.Quant:eq(DD)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:baseIsScalar()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ProglangType:dimensions()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:subsetOf([J[J)Z
daikon.Quantify.Constant:name()Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaCharStream:ReadByte()C
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltwiseEqual([I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eq(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.PptName:isCombinedExitPoint()Z
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
daikon.ModBitTracker:num_sets()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3_1()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3R_50()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:size()I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoAux:hashCode()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:lte(II)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_48()Z
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18332 | 0 -> -1
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ModBitTracker:num_samples()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.Node:Node()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
778 2 295 2 52 2 443 2 386 2 98 2 885 4 482 2 132 2 
390 2 707 2 678 2 2 2 913 6 683 2 92 2 331 6 643 2 915 2 94 6 
52 2 629 2 802 6 308 2 482 2 649 4 5 2 805 2 836 6 724 6 296 6 655 2 220 4 
730 8 506 12 754 10 788 16 758 4 671 2 897 16 482 6 650 10 6 2 844 4 623 4 902 10 47 16 215 2 451 2 48 8 573 2 82 8 493 10 52 6 630 10 715 6 374 2 743 8 60 4 143 2 262 26 866 29 357 6 
536 2 
21 2 
730 2 506 2 754 2 36 2 126 2 788 2 897 2 648 2 568 2 650 4 902 2 47 2 493 2 853 2 630 2 497 2 173 2 60 2 834 2 18 2 262 4 866 6 357 2 
506 5 493 4 754 4 630 4 788 8 897 8 844 2 652 6 902 4 409 2 47 8 412 4 428 6 391 2 353 4 262 12 866 14 
909 2 458 2 699 2 169 2 718 6 127 2 464 2 210 2 674 2 139 2 
209 2 216 2 218 2 81 2 574 2 164 2 134 2 253 2 118 2 21 2 
122 2 1 2 869 2 755 2 3 2 482 4 6 2 597 2 765 2 423 2 881 2 243 2 132 2 8 2 248 2 547 2 713 2 714 2 884 4 373 2 548 2 137 2 666 2 152 2 39 2 904 2 454 2 793 2 851 4 576 2 52 4 112 2 460 4 398 2 688 2 634 2 467 2 856 2 174 2 858 2 471 2 582 4 119 2 350 2 
506 22 730 18 183 6 754 16 788 32 208 4 897 32 482 4 567 2 650 6 902 16 652 6 485 4 43 6 790 6 47 32 706 4 102 6 540 2 428 6 660 8 273 2 493 16 741 2 52 4 630 16 715 4 135 2 374 2 743 6 60 2 412 4 474 4 262 48 353 4 894 4 668 2 866 54 357 4 
373 2 41 2 728 2 
50 2 698 2 561 2 306 10 761 2 496 2 664 2 174 2 439 2 792 2 217 2 414 2 750 2 396 22 
237 2 812 2 588 2 239 2 482 30 814 2 483 2 815 3 704 2 7 3 486 27 130 2 818 21 244 1 605 2 11 1 830 2 13 2 719 2 15 2 138 2 258 3 832 3 140 1 260 2 837 6 144 2 614 4 615 2 146 6 25 14 265 1 153 2 384 2 35 2 154 2 840 4 733 1 510 2 622 2 734 6 627 2 517 4 165 1 397 2 854 1 52 32 55 2 399 2 522 3 633 2 408 2 527 1 61 3 529 2 859 2 638 2 282 1 642 1 181 14 863 2 288 2 289 1 870 2 290 2 71 2 651 2 874 2 879 2 192 2 78 1 768 2 303 6 305 1 199 3 88 2 883 1 663 2 549 2 550 2 890 2 441 2 784 2 556 2 559 2 95 2 443 2 787 2 670 2 563 2 564 2 447 2 673 2 566 1 448 28 213 2 452 2 453 2 797 2 801 14 911 2 336 2 337 2 463 3 342 2 344 1 690 2 469 3 580 4 472 21 351 2 583 4 808 5 694 14 919 3 
723 2 
442 2 52 2 
526 2 52 4 592 2 
360 2 361 2 362 4 591 2 365 36 366 2 484 24 594 4 705 36 708 118 487 2 242 4 245 24 246 2 604 2 711 2 12 2 251 8 716 2 717 24 254 2 720 118 136 36 256 2 17 2 375 2 721 2 378 2 379 2 835 4 502 2 261 24 725 36 381 10 147 34 148 4 263 4 151 2 618 4 731 4 34 4 385 2 37 16 38 4 841 2 508 44 842 2 620 2 40 2 158 2 45 34 624 2 625 2 161 2 737 2 395 4 51 20 628 2 58 4 171 10 406 2 635 14 637 2 857 6 178 14 410 22 531 2 283 34 411 74 285 4 533 14 752 4 867 4 419 4 762 2 873 2 875 4 189 2 190 4 425 4 79 4 426 2 80 10 543 4 83 36 661 4 771 4 86 118 433 4 662 2 775 34 774 2 436 4 551 2 313 2 782 2 315 4 317 18 786 2 93 10 322 2 96 4 896 8 323 2 99 2 901 8 569 14 675 36 101 4 326 2 450 20 679 4 905 20 105 2 794 20 908 4 575 2 685 4 223 2 114 34 229 4 807 6 230 34 916 2 470 14 120 2 355 2 586 4 
799 2 593 2 284 2 610 1 
799 2 330 2 
799 2 680 2 238 2 758 2 267 2 373 2 388 2 
799 2 680 2 490 2 
799 2 680 2 207 2 
607 2 593 2 211 2 
799 2 680 2 
607 2 492 2 
799 2 455 2 
607 2 327 2 593 2 
65 2 
206 2 878 2 593 2 
14 2 898 2 593 2 
438 2 578 2 593 2 
607 2 756 2 
799 2 557 2 
562 2 166 2 
206 2 770 2 
736 2 898 2 
438 2 281 2 
607 2 906 2 
438 2 200 2 
387 2 898 2 
206 2 477 2 
562 2 702 2 
607 2 327 2 593 2 4 2 
607 2 327 2 593 2 4 2 197 2 
607 2 593 2 641 2 
767 2 607 2 593 2 
44 2 903 2 892 2 
535 2 669 2 87 2 339 2 418 2 201 2 116 2 389 2 691 2 541 2 692 4 709 4 603 2 131 2 195 2 823 2 318 2 396 6 
700 2 593 2 
62 2 512 2 238 2 373 2 
62 2 512 2 238 2 373 2 388 2 524 2 
799 2 680 2 238 2 758 2 373 2 187 2 
904 2 544 2 
238 2 521 2 758 2 373 2 
185 2 898 2 
438 2 747 2 
562 2 299 2 
206 2 268 2 
206 2 438 2 304 2 
206 2 438 2 826 2 
206 2 438 2 855 2 
206 2 877 2 438 2 
31 6 238 2 157 6 816 2 846 2 159 2 373 2 407 2 
607 2 156 2 
237 2 
812 2 239 2 590 2 482 26 814 2 704 2 486 4 819 2 605 2 828 2 252 4 830 2 255 2 138 2 260 2 837 4 614 4 146 6 25 6 150 2 265 2 153 2 839 2 35 2 840 4 510 2 621 2 622 2 734 2 160 4 272 2 162 2 738 4 854 2 52 26 400 2 529 2 528 2 638 2 287 2 865 2 753 2 757 2 292 2 186 2 874 2 879 2 766 2 654 2 424 2 194 2 768 6 431 2 303 2 88 2 549 2 890 2 441 2 556 2 893 2 559 2 95 2 443 2 564 8 324 2 448 6 681 2 328 2 332 2 911 2 687 2 580 4 351 2 583 4 
812 2 239 2 590 2 482 26 814 2 704 2 486 4 819 2 605 2 252 4 830 2 255 2 138 2 260 2 837 6 614 4 146 6 25 6 150 2 265 2 153 2 839 2 35 2 840 4 510 2 621 2 622 2 734 2 160 4 272 2 738 4 854 2 52 26 400 2 529 2 528 2 530 2 638 2 644 2 865 2 753 2 870 2 757 2 417 2 292 2 186 2 874 2 879 2 766 2 654 2 424 2 194 2 768 6 431 2 303 2 88 2 549 2 890 2 441 2 556 2 893 2 559 2 320 2 95 2 443 2 564 8 324 2 448 6 681 2 328 2 332 2 911 2 687 2 337 2 580 4 351 2 583 4 
449 2 
542 2 785 2 
0 2 236 2 587 2 309 2 631 2 16 2 914 4 74 2 376 4 707 2 780 2 19 2 106 2 850 2 643 2 331 2 430 2 94 2 
0 4 236 2 359 2 645 4 587 2 293 4 482 6 704 2 874 2 74 2 707 4 488 2 368 2 489 2 600 4 657 2 658 2 9 2 430 2 712 2 827 4 89 2 309 2 435 2 16 2 138 2 376 4 780 2 19 2 890 2 92 2 146 4 556 2 94 4 558 2 510 2 212 2 678 2 106 2 393 4 850 2 331 6 798 2 686 2 52 12 168 6 338 2 913 6 631 2 803 2 914 4 580 2 746 2 529 2 177 2 280 2 583 2 861 2 643 4 286 2 
0 4 236 2 359 2 645 4 587 2 2 2 293 4 482 6 704 2 874 2 74 2 707 4 488 2 368 2 489 2 600 4 657 2 658 2 9 2 430 2 712 2 827 4 89 2 309 2 435 2 16 2 138 2 376 4 780 2 19 2 890 2 92 2 146 4 556 2 94 6 558 2 510 2 212 2 106 2 393 4 850 2 331 4 798 2 686 2 52 12 168 6 338 2 913 6 631 2 803 2 914 4 580 2 746 2 529 2 177 2 280 2 583 2 861 2 643 4 286 2 
0 4 236 2 359 2 645 4 587 2 293 8 482 6 704 2 874 2 74 2 707 4 488 2 368 2 489 2 600 4 657 2 658 2 9 2 430 2 712 2 827 4 89 2 309 2 435 2 16 2 138 2 376 4 780 2 19 2 890 2 92 2 146 4 556 2 94 6 558 2 510 2 212 2 106 2 683 2 393 4 850 2 331 6 798 2 686 2 52 12 168 6 338 2 913 6 631 2 803 2 914 4 580 2 746 2 529 2 177 2 280 2 583 2 861 2 643 4 286 2 
0 4 236 2 359 2 645 8 587 2 2 2 293 8 482 6 704 2 874 2 74 2 707 4 488 2 368 2 489 2 600 4 657 2 658 2 9 2 430 2 712 2 827 4 89 2 309 2 435 2 16 2 138 2 376 4 780 2 19 2 890 2 92 2 146 4 556 2 94 8 558 2 510 2 212 2 106 2 683 2 393 4 850 2 331 6 798 2 686 2 52 12 168 10 338 2 913 8 631 2 803 2 914 4 580 2 746 2 529 2 177 2 280 2 583 2 861 2 643 4 286 2 
0 4 236 2 359 2 645 8 587 2 293 8 482 6 704 2 874 2 74 2 707 4 488 2 368 2 489 2 600 4 657 2 658 2 9 2 430 2 712 2 827 4 89 2 309 2 435 2 16 2 138 2 376 4 780 2 19 2 890 2 92 2 146 4 556 2 94 6 558 2 510 2 212 2 106 2 683 2 393 4 850 2 331 6 798 2 686 2 52 12 168 10 338 2 913 6 631 2 803 2 914 4 580 2 746 2 529 2 177 2 280 2 583 2 861 2 643 4 286 2 
236 2 0 4 2 4 239 2 482 24 701 2 704 2 486 2 707 4 488 2 489 2 247 2 9 4 712 2 250 6 252 4 495 2 255 2 16 2 498 2 260 2 501 2 723 6 19 2 25 6 28 1 729 6 35 2 510 2 734 2 515 2 516 2 520 1 52 46 54 6 744 6 278 8 529 2 746 2 280 4 67 2 286 2 69 2 759 7 292 2 293 2 74 2 764 2 768 6 303 2 88 2 773 2 89 2 309 2 549 2 776 2 780 2 779 2 314 2 92 4 556 2 319 1 94 8 558 2 559 2 95 2 564 4 325 1 100 2 570 6 106 2 329 2 331 4 798 2 337 2 338 2 806 2 580 4 351 12 583 4 359 2 587 2 812 2 589 2 592 6 813 4 814 2 598 1 599 1 368 2 600 6 601 1 820 2 605 2 827 4 370 6 371 6 830 2 138 2 376 4 833 2 142 6 837 6 614 4 146 6 382 2 383 2 150 2 153 2 840 4 621 2 622 2 848 6 393 8 850 2 852 1 168 2 631 2 403 6 404 2 175 2 636 2 177 2 638 2 861 2 643 4 862 2 865 2 416 6 868 2 870 2 647 6 186 4 874 2 422 2 879 2 657 2 658 2 429 2 430 2 435 2 890 2 441 2 205 6 204 7 442 6 443 2 212 2 448 8 907 2 456 1 686 2 911 2 461 2 913 12 226 10 228 4 914 4 921 2 
0 4 236 2 359 2 587 2 812 2 589 2 239 2 592 6 813 4 701 2 814 2 482 26 704 2 486 2 707 4 488 2 368 2 489 2 600 6 820 2 247 2 605 2 9 4 712 2 250 6 827 4 371 6 370 6 252 4 495 2 830 2 255 2 16 2 138 2 498 2 376 4 833 2 722 2 260 2 142 6 501 2 723 6 19 2 837 6 614 4 25 6 146 6 382 2 383 2 729 6 150 2 153 2 35 2 840 4 621 2 510 2 622 2 734 2 515 2 848 6 516 2 160 2 393 8 850 2 52 48 168 2 54 6 631 2 403 6 404 2 744 6 278 8 175 2 636 2 746 2 529 2 177 2 280 4 638 2 861 2 67 2 862 2 286 2 643 4 865 2 416 6 534 2 69 2 868 2 870 2 647 6 186 4 292 2 293 6 74 2 874 2 422 2 764 2 879 4 768 6 657 2 658 2 429 2 430 2 303 2 773 2 88 2 89 2 309 2 435 2 776 2 549 4 779 2 780 2 314 2 890 2 92 4 441 2 556 2 205 6 558 2 94 8 559 2 442 6 95 4 443 2 564 8 100 2 448 8 212 2 570 6 907 2 106 2 683 4 329 2 331 8 798 2 686 2 911 2 461 2 338 2 337 2 913 12 226 10 228 4 914 4 806 2 580 4 351 12 583 4 921 2 
0 4 236 2 359 2 587 2 812 2 589 2 239 2 592 6 813 4 701 2 814 2 482 26 704 2 486 2 707 4 488 2 368 2 489 2 600 6 820 2 247 2 605 2 9 4 712 2 250 6 827 4 371 6 370 6 252 4 495 2 830 2 255 2 16 2 138 2 498 2 376 4 833 2 722 2 260 2 142 6 501 2 723 6 19 2 837 6 614 4 25 6 146 6 382 2 383 2 729 6 150 2 153 2 35 2 840 4 621 2 510 2 622 2 734 2 515 2 848 6 516 2 160 2 393 8 850 2 52 48 168 6 54 6 631 2 403 6 404 2 744 6 278 8 175 2 636 2 746 2 529 2 177 2 280 4 638 2 861 2 67 2 862 2 286 2 643 4 865 2 416 6 534 2 69 2 868 2 645 4 870 2 647 6 186 4 292 2 293 6 74 2 874 2 422 2 764 2 879 4 768 6 657 2 658 2 429 2 430 2 303 2 773 2 88 2 89 2 309 2 435 2 776 2 549 4 779 2 780 2 314 2 890 2 92 4 441 2 556 2 205 6 558 2 94 8 559 2 442 6 95 4 443 2 564 8 100 2 448 8 212 2 570 6 907 2 106 2 683 4 329 2 331 8 798 2 686 2 911 2 461 2 338 2 337 2 913 12 226 10 228 4 914 4 806 2 580 4 351 12 583 4 921 2 
236 2 95 2 645 4 564 2 293 6 212 2 74 2 879 2 707 2 368 2 657 2 683 2 393 2 331 4 658 2 850 2 430 2 712 2 52 4 168 4 827 2 338 2 89 2 913 4 309 2 435 2 16 2 914 2 376 2 549 2 501 2 746 2 177 2 19 2 92 2 286 2 643 2 558 2 94 4 
236 2 645 4 293 6 212 2 74 2 707 4 368 2 600 2 657 2 683 2 393 2 658 2 850 2 331 6 430 2 712 2 52 4 168 4 827 2 338 2 89 2 913 4 309 2 435 2 16 2 914 2 376 2 746 2 177 2 19 2 92 2 286 2 643 4 558 2 94 6 
236 2 237 2 812 2 239 2 482 24 814 2 704 2 129 2 486 3 707 4 368 2 489 2 600 2 821 3 605 2 712 2 827 2 252 4 830 2 255 2 16 2 138 2 376 2 260 2 837 6 19 2 614 4 146 6 25 6 727 2 153 2 35 2 840 4 510 2 622 2 734 3 393 2 850 2 52 28 168 2 746 2 529 2 177 2 638 2 643 4 286 2 870 2 292 2 186 2 293 6 74 2 874 2 876 2 764 2 768 6 657 2 658 2 430 2 303 3 88 2 89 2 309 2 435 2 663 2 554 2 890 2 92 2 441 2 556 2 94 6 558 2 559 2 443 2 448 8 212 2 452 2 683 2 331 6 911 2 336 2 337 2 338 2 913 4 226 2 914 2 580 4 351 4 583 4 920 2 
0 4 236 2 359 2 645 8 587 2 293 8 482 6 704 2 874 2 74 2 707 4 488 2 368 2 489 2 600 4 657 2 658 2 9 2 430 2 712 2 827 4 89 2 309 2 435 2 16 2 138 2 376 4 780 2 19 2 890 2 92 2 146 4 556 2 94 6 558 2 510 2 212 2 106 2 683 2 393 4 850 2 331 6 798 2 686 2 52 12 168 10 338 2 913 6 631 2 803 2 914 4 580 2 746 2 529 2 177 2 280 2 583 2 861 2 643 4 286 2 
0 4 236 2 359 2 645 8 587 2 482 6 293 8 704 2 874 2 74 2 707 4 488 2 368 2 489 2 600 4 658 2 9 2 430 2 712 2 827 4 89 2 309 2 435 2 16 2 138 2 376 4 780 2 19 2 890 2 92 2 146 4 556 2 558 2 94 6 510 2 900 2 212 2 678 2 106 2 683 2 393 4 850 2 331 8 798 2 686 2 52 12 168 10 338 2 913 8 631 2 632 2 914 4 580 2 746 2 529 2 177 2 280 2 583 2 861 2 475 4 286 2 643 4 
746 2 435 2 763 2 
746 2 435 2 763 2 
358 2 0 4 236 4 359 2 812 2 2 4 239 2 813 2 482 16 814 2 704 2 486 2 707 4 600 4 247 2 605 2 491 2 9 4 712 2 827 2 830 2 255 2 138 2 376 2 260 2 837 6 22 2 614 4 146 6 25 2 30 2 35 2 840 4 510 2 622 2 42 4 516 2 393 4 850 2 739 2 52 24 168 6 631 2 403 2 523 2 529 2 746 4 177 2 280 2 638 2 66 2 643 4 865 4 645 4 870 2 292 2 186 6 293 6 763 2 874 2 74 2 538 2 879 4 766 4 768 2 300 2 546 4 88 2 435 6 549 4 889 2 890 2 441 2 92 4 556 2 94 12 559 2 95 4 321 2 443 2 564 4 899 2 448 2 678 4 107 2 106 2 683 4 331 12 798 2 686 2 911 2 113 2 337 2 462 2 913 16 226 2 228 2 914 2 806 2 580 4 351 4 583 4 695 2 696 2 
739 2 52 4 587 2 226 2 403 2 482 2 228 2 776 2 538 2 513 2 889 2 351 2 542 2 890 2 415 2 659 2 383 2 
358 2 0 4 236 4 359 2 123 2 812 2 2 4 239 2 813 2 482 16 814 2 704 2 486 4 707 4 817 2 600 4 247 2 605 2 491 2 9 4 712 2 827 2 830 2 255 2 138 2 376 2 260 2 837 6 22 2 614 4 146 6 25 2 35 2 840 4 732 2 510 2 622 2 42 4 516 2 393 4 850 2 739 2 52 24 168 6 275 2 631 2 403 2 523 2 529 2 746 4 177 2 280 4 638 2 861 2 66 2 643 4 865 4 645 4 870 2 73 2 292 2 186 6 293 6 763 2 874 2 74 2 538 2 879 4 766 4 768 2 546 4 88 2 435 6 549 4 889 2 890 2 441 2 92 4 556 2 94 12 559 2 95 4 321 2 443 2 564 4 899 2 448 2 678 4 106 2 683 4 331 12 798 2 686 2 911 2 337 2 462 2 913 16 914 2 806 2 580 4 351 2 583 4 695 2 696 4 
358 2 0 4 236 4 359 2 125 2 812 2 2 4 239 2 813 2 482 16 814 2 704 2 486 2 707 4 600 4 247 2 605 2 491 2 9 4 712 2 249 2 827 2 830 2 255 2 138 2 376 2 260 2 837 6 22 2 614 4 146 6 25 2 35 2 840 4 510 2 622 2 42 4 516 2 393 4 850 2 739 2 52 24 168 6 631 2 403 2 523 2 529 2 746 4 177 2 280 4 638 2 749 2 861 2 66 2 643 4 865 4 645 4 870 2 292 2 186 6 293 6 763 2 874 2 74 2 538 2 879 4 766 4 768 2 546 4 85 2 88 2 435 6 549 4 889 2 890 2 441 2 92 4 556 2 94 12 559 2 95 4 321 2 443 2 564 4 899 2 448 2 678 4 106 2 683 4 331 12 798 2 686 2 911 2 337 2 462 2 913 16 226 2 228 2 914 2 806 2 580 4 348 2 351 4 583 4 695 2 696 2 
478 2 479 2 239 2 481 2 240 3 482 30 241 2 704 2 486 19 710 2 493 4 252 12 715 4 257 2 498 2 499 2 259 2 260 2 20 2 24 2 503 4 23 2 504 2 25 14 726 2 262 12 26 2 27 2 727 2 29 2 506 6 730 4 265 2 33 2 35 2 507 2 266 2 510 2 734 16 269 2 735 2 47 8 511 10 514 2 49 6 518 2 273 2 53 2 740 4 52 40 742 2 274 4 56 2 57 3 743 6 277 2 279 2 745 2 529 2 528 2 748 10 64 2 532 2 751 2 68 2 754 4 760 2 72 4 292 2 294 2 75 2 537 2 76 2 768 14 298 4 545 2 769 14 301 2 303 19 84 2 302 2 772 2 307 2 88 2 773 4 310 10 90 2 311 2 312 2 552 2 781 2 553 8 554 2 783 2 555 4 316 18 556 2 788 8 789 2 564 46 565 2 103 2 328 2 571 2 572 2 108 2 109 2 332 14 796 2 110 16 577 2 111 4 334 2 335 2 337 4 804 2 115 2 341 2 343 38 580 4 581 2 345 4 346 2 349 2 351 2 583 4 809 3 352 2 353 4 121 2 354 2 585 2 810 2 124 2 363 2 589 2 590 2 128 2 364 6 814 4 595 2 367 2 129 2 369 2 602 2 821 2 822 2 605 4 133 4 606 2 372 2 829 2 830 2 135 4 608 24 609 4 611 2 138 2 377 2 141 4 837 12 612 4 145 2 613 2 614 6 146 6 616 4 617 4 149 2 838 2 150 46 153 2 619 2 840 6 843 10 621 20 845 2 849 2 163 2 394 2 167 2 854 2 630 4 400 2 401 2 402 2 170 2 172 2 404 2 175 2 176 2 638 4 639 2 860 2 179 10 640 2 181 6 865 4 182 8 866 16 184 2 870 4 186 2 420 16 421 3 871 2 874 2 872 2 876 2 188 2 191 4 654 2 656 2 427 2 428 6 882 2 431 2 434 2 202 2 437 8 887 2 886 2 440 2 888 2 890 2 891 2 441 4 203 1 667 16 443 4 895 2 444 2 445 2 897 8 672 2 448 28 902 4 214 4 677 2 676 2 681 2 219 2 682 3 221 2 222 40 457 2 461 2 689 2 225 2 465 6 466 12 227 4 468 2 232 2 693 2 917 2 694 4 918 2 473 2 476 4 697 2 234 2 235 14 921 2 
150 6 153 2 479 2 843 4 672 2 482 2 845 2 734 2 448 2 486 2 511 2 768 2 303 2 52 2 772 2 252 2 402 2 57 2 311 2 886 2 347 2 783 2 748 2 25 2 
150 6 153 2 479 2 843 4 672 2 482 2 845 2 734 2 448 2 486 2 511 2 768 2 303 2 52 2 772 2 252 2 402 2 57 2 311 2 886 2 347 2 783 2 748 2 25 2 
150 6 153 2 479 2 843 4 672 2 482 2 845 2 734 2 448 2 486 2 511 2 768 2 303 2 52 2 772 2 252 2 402 2 57 2 311 2 886 2 347 2 783 2 748 2 25 2 
264 2 153 2 754 2 479 2 788 2 240 3 509 2 897 2 446 2 482 4 448 2 902 2 486 3 47 2 847 2 539 2 271 3 682 3 494 2 493 2 303 3 52 10 630 2 715 2 340 2 743 4 777 4 141 2 91 2 117 2 693 4 694 2 262 4 532 4 181 2 505 2 697 4 810 4 866 4 182 6 
730 2 506 2 264 2 153 2 754 2 479 2 788 2 240 2 509 2 897 2 446 2 482 4 448 2 902 2 486 2 47 2 847 2 539 2 271 2 682 2 494 2 493 2 303 2 52 10 630 2 715 2 340 2 374 2 743 4 777 4 141 2 91 2 117 2 693 4 694 2 262 4 532 4 181 2 505 2 697 4 810 4 866 4 182 6 
730 2 506 2 264 2 153 2 754 2 479 2 788 2 240 2 509 2 897 2 446 2 482 4 448 2 902 2 486 2 47 2 847 2 539 2 271 2 682 2 494 2 493 2 303 2 52 10 630 2 715 2 340 2 374 2 743 4 777 4 141 2 91 2 117 2 693 4 694 2 262 4 532 4 181 2 505 2 697 4 810 4 866 4 182 6 
730 2 506 2 264 2 153 2 754 2 479 2 788 2 240 2 509 2 897 2 446 2 482 4 448 2 902 2 486 2 47 2 847 2 539 2 271 2 682 2 494 2 493 2 303 2 52 10 630 2 715 2 340 2 374 2 743 4 777 4 141 2 91 2 117 2 693 4 694 2 262 4 532 4 181 2 505 2 697 4 810 4 866 4 182 6 
730 4 506 4 264 2 153 2 754 2 479 2 788 2 240 2 509 2 897 2 446 2 482 4 448 2 902 2 486 2 47 2 847 2 539 2 271 2 682 2 494 2 493 2 303 2 52 10 630 2 715 2 340 2 374 4 743 4 777 4 141 2 91 2 117 2 693 4 694 2 262 4 532 4 181 2 505 2 697 4 810 4 866 4 182 6 
838 2 811 2 800 2 405 2 584 2 525 2 
825 2 32 2 480 2 297 2 196 2 332 2 584 2 
646 1 127 1 291 2 482 8 674 1 874 2 653 2 880 2 270 1 626 2 193 2 392 2 519 2 824 2 10 2 52 10 910 2 333 2 912 2 371 2 579 2 231 2 665 2 500 2 380 1 413 2 
506 5 730 3 754 6 788 6 897 6 482 6 902 6 790 4 47 6 791 2 706 2 881 2 428 4 432 2 660 2 493 6 52 6 741 1 459 2 630 6 715 2 374 2 276 2 743 4 137 2 609 2 745 2 860 2 262 12 353 2 866 15 
52 1 198 2 560 7 70 1 97 2 482 1 831 2 59 2 596 2 46 2 693 2 63 4 180 2 795 2 684 2 697 2 864 2 810 2 
198 2 560 6 97 2 831 2 59 2 596 2 46 4 693 2 63 4 180 4 795 4 684 2 697 2 864 2 810 2 
52 1 198 2 560 10 70 1 97 8 482 1 831 2 59 2 596 2 46 8 693 2 63 4 180 8 795 8 684 2 697 2 864 6 810 2 
198 2 560 2 831 2 59 2 596 2 46 2 693 2 63 2 180 2 795 2 684 2 697 2 810 2 
482 4 703 2 77 2 605 2 837 2 614 2 441 2 155 2 840 2 104 1 52 4 224 1 638 2 356 2 
52 4 870 2 155 2 840 2 337 2 482 4 703 2 77 2 638 2 837 4 614 2 441 2 605 2 356 2 
52 4 870 2 155 2 840 2 337 2 482 4 703 2 77 2 638 2 837 4 614 2 441 2 605 2 356 2 
52 4 638 2 77 2 840 2 155 2 837 2 614 2 441 2 482 4 605 2 703 2 356 2 
233 2 

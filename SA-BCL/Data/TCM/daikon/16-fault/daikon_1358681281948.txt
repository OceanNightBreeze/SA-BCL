#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 130 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArithmeticException (165,334) (163,601) 734 654 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 371 371 261 261 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 831 831 257 257 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.ArrayIndexOutOfBoundsException 647 (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (56,845) (326,817) (326,817) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (56,845) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (56,845) (56,845) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (56,845) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 173 788 365 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR utilMDE.Assert$AssertionException (539,870) (539,870) 623 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR utilMDE.Assert$AssertionException (539,870) (539,870) 623 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR utilMDE.Assert$AssertionException (539,870) (539,870) 623 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR utilMDE.Assert$AssertionException (539,870) (539,870) 623 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR utilMDE.Assert$AssertionException (539,870) (539,870) 623 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 285 384 53 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 285 384 53 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 285 384 53 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.NullPointerException (8,576) (8,576) (481,574) (481,574) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z | ASSIGN | 16256 | = null
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParserTokenManager:jjCheckNAddStates(II)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_14()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 99550 | = null
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127505 | = null
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:intern([J)[J
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptSlice1:arity()I
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_2_12(I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_89()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 3656 | return null
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:arity()I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_2_3(I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z | CONSTANT | 23955 | 1 -> 0
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:passes()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:min([I)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:subsetOf([J[J)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Debug:logOn()Z
daikon.Quant:eq(II)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3R_117()Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.Ppt:Ppt()V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_96()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaCharStream:getEndLine()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_13()Z
daikon.inv.Invariant:getConfidence()D
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_116()Z
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:gcd(JJ)J
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:eltwiseEqual([I)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.MathMDE:gcd([I)I
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 43181 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair; | ASSIGN | 2099 | = null
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsGTE([II)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:lte(II)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.ProglangType:baseIsIntegral()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexLTE([I[I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | CONSTANT | 54150 | 0 -> -1
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_135()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.MathMDE:negate(I)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:jjCheckNAddTwoStates(II)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_69()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_53()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:eq(DD)Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_1()Z
daikon.ModBitTracker:split(I)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_123()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:jj_3_5()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:eq(FF)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3R_52()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_3R_62()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_119()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:union([I[I)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6369 | = null
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:ne(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22726 | = null
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:slice([III)[I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.MathMDE:pow(II)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:lexLT([I[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_ntk()I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_162()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_2_5(I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 3087 | return null
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_118()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:max([I)I
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3R_60()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 20179 | if (x) -> if (!x)
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:memberOf(I[I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
528 2 870 2 373 2 227 4 321 2 591 2 377 2 48 2 539 2 
174 2 130 2 889 4 113 4 379 2 4 2 278 2 412 2 
870 2 805 4 110 2 761 4 710 2 539 2 835 6 743 2 179 6 195 6 579 6 890 2 721 2 
870 5 330 5 605 1 39 2 461 1 746 2 345 9 881 2 304 6 306 2 522 11 350 8 232 6 52 3 353 4 617 3 648 5 500 2 207 3 539 5 125 6 815 11 82 1 777 3 362 14 323 15 31 6 684 1 
234 6 75 4 
103 2 
330 2 691 2 345 2 304 2 881 2 522 2 524 2 350 4 592 2 232 2 466 2 648 2 268 2 207 2 125 2 815 2 362 4 323 6 31 2 816 2 477 2 511 2 551 2 
232 4 617 2 648 4 292 6 808 4 731 6 125 4 25 2 815 8 61 2 27 4 345 8 362 12 323 15 304 4 31 5 522 8 
155 2 482 4 450 4 787 2 513 8 69 2 763 2 163 2 165 8 849 2 799 2 880 4 432 2 73 4 76 2 100 2 233 2 494 2 354 6 724 2 312 4 467 10 726 10 727 4 674 2 810 2 575 2 81 2 546 2 734 4 735 60 242 2 364 2 627 2 654 2 510 2 478 2 
250 2 533 2 103 2 223 2 712 2 272 2 389 2 363 2 65 2 569 2 
686 2 513 2 638 2 789 2 517 2 226 2 164 2 799 2 800 4 802 2 413 2 10 2 529 2 13 2 539 4 177 2 358 2 239 2 544 2 866 2 244 4 478 4 818 2 820 2 870 4 367 2 603 2 375 2 306 2 377 2 670 2 200 2 615 2 571 2 676 2 776 2 779 2 888 2 390 2 581 2 325 2 839 2 109 2 393 4 
183 4 870 4 330 4 424 2 372 8 404 6 284 4 488 2 461 2 96 2 228 2 345 32 304 16 881 2 522 32 350 6 232 16 804 6 52 4 353 6 142 4 648 16 144 6 292 6 80 2 808 4 207 18 539 4 731 6 125 16 815 32 27 4 507 6 362 48 323 54 758 2 31 22 276 4 327 4 
513 2 354 2 724 2 
493 2 220 2 51 10 282 2 418 2 385 2 193 2 653 2 562 2 766 2 855 2 818 2 231 22 552 2 
2 2 687 3 111 2 584 5 332 4 452 2 587 2 790 2 115 1 791 2 116 1 341 1 344 1 798 2 347 2 121 2 700 1 123 2 703 1 15 11 20 1 127 1 715 5 129 2 243 4 476 1 245 4 716 2 484 4 370 2 252 6 486 2 373 2 720 2 260 1 830 2 614 2 381 2 382 1 622 2 623 2 732 6 62 6 629 2 842 2 398 2 515 2 744 2 850 2 641 2 167 4 853 2 169 2 748 2 750 1 532 2 77 4 858 6 752 1 416 2 650 2 539 30 540 1 181 1 652 5 295 3 870 32 297 2 88 2 422 2 423 2 190 1 560 2 765 1 665 2 666 1 310 2 566 2 438 6 105 2 211 2 679 1 213 2 214 2 682 1 781 2 324 2 783 2 
526 2 
870 2 876 2 
870 4 212 2 828 2 
222 4 335 2 453 2 456 2 337 38 5 2 457 4 339 38 340 2 792 2 795 2 693 4 7 38 348 14 119 2 230 4 697 2 803 16 594 4 355 4 14 2 704 2 17 38 709 2 596 4 23 8 357 2 811 4 814 2 238 4 472 10 361 2 26 16 240 20 475 2 30 4 819 16 480 2 600 2 247 4 368 46 369 2 823 4 718 4 36 38 37 2 254 28 607 10 135 2 825 2 255 2 487 2 43 2 609 4 490 10 827 2 265 4 492 36 50 20 495 26 725 2 496 4 501 4 145 24 146 4 621 2 148 6 834 38 149 8 150 16 733 2 837 14 506 14 508 2 152 2 509 2 277 4 841 2 631 28 634 2 635 4 156 2 514 30 516 2 738 4 640 6 639 118 158 4 70 2 283 118 403 132 518 2 405 2 166 2 851 38 852 4 407 4 287 38 409 2 523 10 411 24 644 2 74 2 171 4 645 4 172 2 857 2 291 2 859 2 651 38 419 4 861 4 538 4 541 4 862 120 543 4 421 2 549 4 868 2 655 4 89 4 872 24 91 2 553 2 186 4 658 4 875 2 189 4 426 2 427 4 660 2 301 4 194 2 94 2 428 20 767 2 565 2 430 4 97 4 98 2 431 38 308 2 669 12 567 4 99 38 433 2 883 2 314 8 203 4 774 4 775 18 104 4 884 2 440 4 885 4 320 4 443 2 216 4 582 2 449 10 329 4 328 8 
764 2 215 2 675 2 309 1 
882 2 215 2 
219 2 513 2 777 2 762 2 874 2 215 2 759 2 
874 2 215 2 351 2 
755 2 874 2 215 2 
764 2 739 2 736 2 
874 2 215 2 
739 2 807 2 
60 2 215 2 
764 2 739 2 521 2 
764 2 657 2 711 2 
764 2 778 2 289 2 
764 2 636 2 415 2 
764 2 187 2 159 2 
342 2 739 2 
215 2 114 2 
657 2 90 2 
778 2 806 2 
879 2 415 2 
159 2 87 2 
678 2 739 2 
159 2 586 2 
714 2 415 2 
199 2 778 2 
657 2 545 2 
764 2 739 2 557 2 521 2 
764 2 322 2 739 2 557 2 521 2 
764 2 739 2 785 2 
764 2 756 2 739 2 
737 2 18 2 459 2 394 2 
0 2 197 2 185 2 531 2 616 2 12 2 555 4 414 2 251 2 93 2 559 2 204 4 813 2 692 2 577 2 305 2 854 2 231 6 
764 2 153 2 
513 2 78 2 290 2 759 2 
722 2 513 2 78 2 290 2 762 2 759 2 
513 2 777 2 874 2 548 2 215 2 759 2 
239 2 637 2 
760 2 513 2 777 2 759 2 
794 2 415 2 
397 2 159 2 
657 2 770 2 
778 2 556 2 
778 2 796 2 159 2 
778 2 159 2 446 2 
366 2 778 2 159 2 
778 2 128 2 159 2 
513 2 769 6 772 2 497 6 728 2 713 2 597 2 759 2 
739 2 317 2 
398 2 
2 2 332 4 452 2 587 2 588 2 790 2 589 2 791 2 793 2 344 2 121 2 123 2 15 4 22 2 473 2 129 2 243 4 716 2 479 2 131 2 249 2 484 4 821 2 371 2 252 6 35 2 486 2 373 2 720 2 610 2 611 2 261 2 381 6 622 2 623 2 732 4 836 2 62 2 391 2 71 2 162 4 72 2 744 2 167 4 168 2 853 2 748 2 170 2 525 2 77 6 858 2 650 2 860 4 537 2 539 22 540 2 870 22 184 4 88 2 560 2 561 2 878 2 310 2 201 2 435 2 313 2 438 6 105 2 211 2 210 2 213 2 214 2 106 2 680 2 781 2 
2 2 332 4 452 2 587 2 790 2 589 2 791 2 793 2 344 2 121 2 123 2 15 4 22 2 473 2 129 2 243 4 716 2 479 2 131 2 249 2 484 4 821 2 252 6 35 2 486 2 373 2 720 2 610 2 257 2 611 2 831 2 381 6 622 2 623 2 732 6 836 2 62 2 391 2 71 2 162 4 72 2 744 2 167 4 168 2 520 2 853 2 748 2 170 2 525 2 77 6 858 2 650 2 860 4 537 1 539 22 540 2 870 22 184 4 88 2 560 2 561 2 878 2 665 2 310 2 566 2 201 2 435 2 313 2 438 6 105 2 211 2 210 2 213 2 214 2 106 2 680 2 781 2 
205 2 
619 2 296 2 
1 2 33 2 19 4 235 2 56 2 253 2 113 2 4 2 134 2 797 2 625 2 889 2 749 4 817 2 326 2 246 2 278 2 9 2 
1 2 786 2 396 2 512 2 3 2 741 4 332 2 113 6 4 4 462 2 797 2 853 2 349 2 749 4 696 4 9 2 121 2 174 2 123 2 79 6 124 2 647 2 19 4 235 2 539 6 178 2 812 2 360 2 126 4 84 2 817 2 716 2 246 2 870 12 871 2 33 2 484 2 252 4 253 4 134 2 720 2 95 2 491 2 667 2 829 2 436 2 56 2 832 4 622 2 439 2 209 4 387 6 213 2 625 2 445 2 889 4 447 2 840 2 326 2 278 4 
1 2 786 2 396 2 512 2 3 2 741 4 332 2 113 4 4 4 462 2 797 2 853 2 349 2 749 4 696 4 9 2 121 2 174 2 123 2 79 6 124 2 647 2 19 4 235 2 539 6 178 2 812 2 126 4 599 2 84 2 817 2 716 2 246 2 870 12 871 2 33 2 484 2 252 4 253 4 134 2 720 2 95 2 491 2 667 2 829 2 436 2 56 2 832 4 622 2 439 2 209 4 387 6 213 2 625 2 445 2 889 6 447 2 840 2 326 2 278 4 
512 2 3 2 113 4 4 2 134 2 95 2 667 2 696 6 749 2 379 2 9 2 174 2 436 2 79 4 19 2 56 2 439 2 812 2 209 4 625 2 889 4 817 2 840 2 326 2 246 2 278 2 
512 2 3 2 113 4 4 2 134 2 95 2 667 2 696 6 749 2 379 2 9 2 174 2 436 2 79 6 19 2 56 2 439 2 812 2 209 6 625 2 889 4 817 2 840 2 326 2 246 2 278 2 
512 2 3 2 113 4 4 2 134 2 95 2 667 2 696 6 749 2 379 2 9 2 174 2 436 2 79 6 19 2 56 2 439 2 812 2 209 6 625 2 889 4 817 2 840 2 326 2 246 2 278 2 
870 4 786 2 512 2 741 2 3 2 452 2 587 2 113 2 4 2 134 2 95 2 491 2 667 2 696 2 749 2 9 2 174 2 436 2 647 2 19 2 56 2 439 2 812 2 105 2 387 4 126 2 625 2 84 2 599 2 580 2 889 4 840 2 817 2 326 2 246 2 278 2 
512 2 3 2 113 4 4 2 134 2 95 2 667 2 696 4 749 2 379 2 9 2 174 2 436 2 19 2 56 2 439 2 812 2 625 2 580 2 889 4 840 2 817 2 326 2 246 2 278 2 
512 2 3 2 113 4 4 2 134 2 95 2 667 2 696 4 749 2 379 2 9 2 174 2 436 2 79 2 19 2 56 2 439 2 812 2 209 2 625 2 580 2 889 4 840 2 817 2 326 2 246 2 278 2 
512 2 3 2 113 4 4 2 134 2 95 2 667 2 696 4 749 2 379 2 9 2 174 2 436 2 79 2 19 2 56 2 439 2 812 2 209 2 625 2 580 2 889 4 840 2 817 2 326 2 246 2 278 2 
512 2 3 2 113 4 4 2 134 2 95 2 667 2 696 4 749 2 379 2 9 2 174 2 436 2 79 2 19 2 56 2 439 2 812 2 209 2 625 2 889 4 840 2 817 2 326 2 246 2 278 2 
2 2 332 4 3 2 113 4 4 2 790 2 791 2 793 2 696 4 9 2 121 2 123 2 15 3 19 2 470 3 356 2 812 2 129 2 243 4 817 2 716 2 246 2 484 4 252 6 486 2 373 2 134 2 720 2 42 2 379 2 829 2 381 6 56 2 622 2 623 2 732 6 273 2 62 3 625 2 840 2 278 2 512 2 398 2 847 2 72 2 744 2 641 2 167 4 853 2 748 2 749 2 77 6 858 3 174 2 79 2 416 2 650 2 860 4 539 24 294 2 870 24 88 2 422 2 560 2 95 2 665 2 667 2 310 2 566 2 435 2 436 2 438 8 439 2 211 2 213 2 214 4 578 2 889 4 781 2 448 2 326 2 
512 2 3 2 113 4 4 2 134 2 95 2 667 2 696 6 749 2 379 2 9 2 174 2 436 2 79 6 19 2 56 2 439 2 812 2 209 6 625 2 889 4 817 2 840 2 326 2 246 2 278 2 
512 2 483 2 3 2 113 4 4 2 134 2 95 2 667 2 749 2 696 6 379 2 9 2 856 2 174 2 436 2 79 6 19 2 56 2 439 2 812 2 209 6 625 2 889 4 867 4 817 2 840 2 326 2 278 2 246 2 
593 2 491 2 667 2 
593 2 491 2 667 2 
2 2 332 4 113 4 455 2 4 2 790 2 791 2 72 2 793 2 744 2 406 2 167 4 853 2 747 2 748 2 696 4 749 2 9 2 77 2 121 2 174 2 123 2 79 2 650 2 15 2 19 2 471 2 539 14 129 2 243 4 716 2 246 2 870 14 88 2 484 4 661 2 252 6 560 2 373 2 486 2 720 2 665 2 259 2 667 2 566 2 310 2 379 2 435 2 381 2 438 2 56 2 622 2 732 6 209 2 211 2 214 2 213 2 889 4 781 2 108 2 278 2 
570 2 1 2 870 4 123 2 451 2 705 2 706 2 502 2 315 2 356 2 539 2 236 2 318 2 214 2 376 2 138 2 296 2 
2 2 844 2 845 2 332 4 113 4 455 2 4 2 790 2 791 2 72 2 793 2 744 2 406 2 167 4 853 2 747 2 748 2 696 4 749 2 9 2 77 2 121 2 174 2 123 2 79 2 650 2 15 4 19 2 471 4 539 14 129 2 243 4 716 2 246 2 870 14 88 2 484 4 661 2 252 6 560 2 373 2 486 2 720 2 665 2 259 2 667 2 566 2 310 2 379 2 435 2 381 2 438 2 56 2 622 2 732 6 209 2 211 2 214 2 213 2 889 4 781 2 108 2 278 2 
2 2 332 4 113 4 455 2 4 2 790 2 791 2 72 2 793 2 744 2 406 2 167 4 853 2 747 2 748 2 696 4 749 2 9 2 77 2 121 2 174 2 123 2 79 2 650 2 15 2 19 2 471 2 539 14 129 2 243 4 716 2 246 2 870 14 88 2 484 4 661 2 252 6 560 2 373 2 486 2 720 2 665 2 259 2 667 2 566 2 310 2 379 2 435 2 381 2 438 2 56 2 622 2 732 6 209 2 211 2 214 2 213 2 889 4 781 2 108 2 278 2 
2 2 450 2 112 2 331 2 788 2 332 4 334 6 790 2 791 2 6 4 793 2 345 4 694 2 590 2 118 4 232 2 120 6 121 2 465 2 123 2 16 2 15 6 808 4 470 2 595 2 125 2 24 2 815 4 362 6 28 4 129 2 243 4 31 4 716 2 365 2 601 2 482 2 132 6 484 4 821 4 822 6 824 2 252 6 486 2 373 2 720 2 826 4 488 4 489 6 42 2 137 2 46 4 613 4 47 2 140 4 380 6 381 10 498 2 143 2 55 4 383 2 622 2 271 2 731 6 623 2 732 6 386 4 836 10 505 2 273 2 62 6 838 2 151 2 63 2 64 1 66 4 392 2 628 2 633 2 68 24 280 2 281 2 157 2 160 2 71 6 402 2 846 6 847 2 162 14 72 2 744 2 286 2 167 4 853 2 408 2 748 2 522 4 527 6 530 2 173 2 77 10 858 6 649 2 648 2 650 2 860 8 754 4 539 22 542 2 81 2 864 2 83 6 869 2 184 14 870 28 88 2 656 1 299 2 188 4 425 2 877 8 560 2 663 2 191 2 664 6 302 2 564 4 665 2 304 2 429 1 668 2 566 2 310 2 196 2 100 2 198 2 673 1 672 2 311 8 312 2 437 2 438 16 102 2 207 4 316 2 886 1 210 10 211 2 213 2 214 2 780 2 578 2 444 4 323 7 683 4 781 2 782 2 218 4 784 2 
870 2 67 2 221 2 688 2 604 3 563 2 101 2 77 2 858 3 381 2 15 3 438 2 860 2 270 2 269 2 58 2 539 2 59 4 623 2 809 2 210 6 62 3 241 2 85 2 
870 2 67 2 221 2 688 2 604 2 563 2 101 2 77 2 858 2 381 2 15 2 438 2 860 2 270 2 269 2 58 2 539 2 59 4 623 2 809 2 210 6 62 2 241 2 85 2 
870 2 67 2 221 2 688 2 604 2 563 2 101 2 77 2 858 2 381 2 15 2 438 2 860 2 270 2 269 2 58 2 539 2 59 4 623 2 809 2 210 6 62 2 241 2 85 2 
870 2 267 1 554 2 15 1 438 2 503 2 133 2 58 2 753 1 539 2 623 2 62 1 798 2 347 2 107 2 626 1 463 2 
870 2 554 2 798 2 107 2 347 2 438 2 503 2 133 2 58 2 539 2 463 2 623 2 
870 2 554 2 798 2 107 2 347 2 438 2 503 2 133 2 58 2 539 2 463 2 623 2 
870 2 554 2 798 2 107 2 347 2 438 2 503 2 133 2 58 2 539 2 463 2 623 2 
870 2 554 2 798 2 107 2 347 2 438 2 503 2 133 2 58 2 539 2 463 2 623 2 
266 2 202 2 740 2 618 2 331 2 730 2 
298 2 740 2 399 2 689 2 71 2 217 2 630 2 
870 10 787 1 602 2 92 2 742 2 719 1 458 2 192 2 343 2 139 2 768 2 378 2 568 2 773 2 54 2 469 2 620 2 57 1 536 1 622 2 21 2 539 8 180 2 546 1 474 2 275 2 
873 2 461 2 345 4 286 2 136 2 304 4 613 2 522 4 232 4 52 2 353 4 648 4 808 2 207 2 731 4 125 4 815 4 362 8 323 10 31 3 839 2 869 2 
870 1 685 6 464 1 723 2 702 2 534 2 401 2 717 2 707 2 539 1 519 2 677 2 303 2 288 2 45 4 293 2 263 2 279 2 
685 6 723 2 702 2 534 4 401 2 717 2 707 2 677 2 519 4 303 2 288 2 45 4 293 4 263 2 279 2 
870 1 685 10 464 1 723 2 702 6 534 8 401 2 717 2 707 8 539 1 677 2 519 8 303 2 288 2 45 4 293 8 263 2 279 2 
685 2 723 2 534 2 401 2 717 2 677 2 519 2 303 2 288 2 45 2 293 2 263 2 279 2 
333 2 336 6 338 2 225 2 460 2 346 2 117 2 229 2 695 6 698 6 352 2 701 4 708 2 237 2 359 2 29 2 243 18 248 4 34 2 485 2 38 2 486 2 40 2 606 2 41 4 608 2 256 2 612 2 258 2 44 6 262 4 264 4 49 2 141 2 53 2 499 2 732 36 384 2 388 2 624 4 274 2 395 1 400 2 161 2 162 16 285 2 167 20 642 2 410 6 751 8 646 2 650 4 535 2 537 2 420 4 176 2 539 40 863 2 865 2 757 2 547 2 86 2 870 44 182 2 300 10 659 2 558 2 662 2 665 2 307 2 566 2 671 2 434 2 572 6 573 2 206 8 208 8 441 7 319 2 211 4 886 2 442 2 887 2 
154 2 583 4 585 2 454 4 224 2 846 10 690 6 162 14 745 2 285 2 167 14 117 2 801 2 643 2 11 4 120 2 699 4 122 2 701 2 650 2 468 4 417 4 537 2 539 26 598 4 757 2 243 14 86 2 32 2 870 28 248 2 300 8 662 2 486 2 606 2 41 6 256 2 258 2 665 8 44 2 429 2 262 2 264 6 566 8 771 2 673 2 380 10 53 2 833 2 573 2 147 2 504 2 384 2 732 36 441 2 211 2 886 6 442 2 624 6 681 4 64 2 632 2 
154 2 843 2 333 2 336 4 224 2 338 2 846 2 162 4 285 2 167 10 229 2 117 2 642 2 410 4 120 2 352 2 650 6 708 2 420 2 539 24 237 4 865 2 29 2 547 2 243 8 870 26 182 2 248 2 300 4 486 4 40 2 256 2 612 2 258 2 665 6 429 1 566 6 671 2 673 1 380 2 499 2 53 2 573 2 384 2 732 18 886 1 211 6 887 2 64 1 
870 12 53 2 650 2 729 2 573 2 537 2 539 12 162 4 384 2 486 2 732 10 374 2 256 2 211 2 285 2 258 2 167 4 151 2 564 2 665 4 117 2 243 4 86 2 566 4 
175 2 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 
576 1 8 1 550 1 848 1 481 1 574 1 

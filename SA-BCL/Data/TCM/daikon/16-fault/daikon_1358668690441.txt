#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 114 246 658 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 1095 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 1037 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 38 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 677 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 366 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 648 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 704 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 621 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 157 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 546 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 263 1009 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 131 1009 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 741 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 250 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 942 1009 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 461 1009 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 495 1009 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 766 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 250 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 323 916 1009 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 495 1009 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 127 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 250 (28,52,56,152,181,183,215,220,242,249,251,279,310,415,416,419,431,443,486,507,573,590,676,750,778,805,819,867,872,886,904,918,921,922,1061) 565 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.ClassCastException (21,596) (21,596) (21,596) (21,596) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.ArrayIndexOutOfBoundsException 630 600 834 742 845 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.ArrayIndexOutOfBoundsException 1027 644 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 952 (70,237,307,327,483,535,641,1019,1070,1094) 239 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 768 1055 424 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 768 1055 424 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 694 768 1055 424 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | CONDITION | 280460 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lte(II)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_3R_117()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3_18()Z
jtb.JavaCharStream:backup(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(JJ)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3_17()Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_21(I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_121()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_3R_99()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_76()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:arity()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.Debug:logOn()Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_136()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_169()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_80()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:eq(FF)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndLine()I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isIntegral()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_61()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3_25()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3_30()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:hashCode()I
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_35()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[F)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_122()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression; | RETURN | 68476 | return null
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_75()Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_3R_98()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19813 | = null
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | CONDITION | 32424 | if (x) -> if (!x)
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eq(DD)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvMap:InvMap()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_163()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3_5()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:noDups([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:eltsLT([II)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_126()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3_12()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_97()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3R_103()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3_1()Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:lexLT([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_73()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:slice([III)[I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:lexGT([I[I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_67()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_3(I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_125()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfo:relate_var()V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_85()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 38491 | return null
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_108()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_148()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_10()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:isReverse([I[I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE:sum([[D)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3R_105()Z
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:jj_3R_137()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:sign(I)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_106()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127540 | = null
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.diff.RootNode:RootNode()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([F[F)Z
daikon.PptSlice0:arity()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_2_5(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ProglangType:isArray()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_2_18(I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V | CONSTANT | 2417 | 0 -> 1
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_100()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.Node:Node()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseGT([I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3_29()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:lt(II)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_149()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:subsetOf([B[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3R_62()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:concat([I[I)[I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
696 2 1088 2 637 2 825 2 230 2 150 2 588 4 401 2 256 2 
387 2 876 2 268 2 199 6 42 2 909 6 113 6 714 2 668 2 195 2 769 2 
647 6 329 2 865 2 1093 6 577 6 744 2 31 4 696 2 1001 4 48 2 418 6 83 2 256 2 
604 16 837 8 781 30 237 6 1043 4 696 6 214 10 844 10 895 8 1047 2 899 12 994 2 952 16 618 16 907 10 1062 4 521 8 1094 6 597 2 226 4 720 2 283 10 125 2 680 2 928 2 682 8 63 10 256 6 642 4 685 26 
88 4 299 6 
117 2 
604 2 176 2 1078 2 545 2 781 6 74 2 1043 2 214 2 474 2 844 2 843 2 759 2 899 2 952 2 618 2 907 4 1094 2 1002 2 283 2 357 2 682 2 63 2 685 4 
618 8 604 8 70 4 628 2 781 14 800 6 226 2 214 4 307 4 47 2 283 4 844 4 63 4 899 5 49 6 685 12 952 8 
293 2 208 2 2 2 885 2 262 2 985 10 471 2 377 2 812 2 658 2 114 2 76 2 732 4 791 6 992 2 244 2 246 2 862 2 154 2 425 4 961 2 458 2 919 6 59 2 721 2 679 2 869 2 129 2 491 2 66 30 1035 2 463 2 539 4 
1080 2 937 2 302 2 853 2 1026 2 516 2 117 2 348 2 801 2 285 2 
544 2 611 2 262 2 696 4 813 2 336 2 421 2 818 2 423 2 913 2 914 2 559 2 999 2 427 2 917 4 919 2 825 2 167 2 645 4 933 2 104 2 368 2 833 2 44 2 653 2 1081 2 112 2 796 2 190 2 739 2 798 2 670 2 314 2 961 4 391 2 392 2 970 2 61 2 680 2 400 2 128 2 254 4 256 4 603 2 
604 32 70 4 326 2 327 4 499 2 837 6 781 51 237 4 1043 2 501 4 696 4 214 18 1019 4 307 4 844 14 1047 2 899 18 49 6 760 6 952 32 618 32 483 4 451 2 594 2 907 6 665 4 25 6 1094 4 800 6 1070 4 283 18 682 16 63 18 641 2 1105 6 256 4 535 8 685 46 
919 2 463 2 539 2 
405 2 258 2 259 2 453 2 779 10 1040 2 983 22 887 2 1081 2 672 2 892 2 1100 2 62 2 977 2 
540 2 687 2 137 2 809 2 5 4 140 2 549 2 411 2 548 2 144 2 696 32 697 2 147 2 11 1 148 2 703 2 554 2 417 2 15 2 706 2 420 2 708 2 20 2 422 3 820 1 558 4 281 2 160 6 162 2 566 2 567 2 722 3 1008 8 287 4 1007 2 168 2 289 3 438 2 571 32 570 6 829 1 177 3 572 2 298 2 1016 3 841 2 840 1 449 2 847 2 848 4 185 2 586 2 309 16 733 2 855 6 857 3 858 2 592 32 738 1 193 2 866 2 196 3 316 2 1029 5 1030 1 460 1 600 2 320 2 602 1 324 8 879 12 1038 2 883 2 331 2 753 4 1042 2 889 2 334 1 890 4 212 2 476 2 894 2 1048 2 338 24 82 2 898 2 900 2 340 2 616 3 1050 2 482 8 902 2 619 2 222 3 485 16 625 2 911 2 350 2 767 2 630 2 351 1 488 2 93 2 923 12 926 2 229 2 95 2 359 2 930 16 98 2 932 2 363 16 362 4 101 1 109 3 938 1 939 2 651 1 372 1 236 3 941 1 656 1 508 2 240 2 786 2 509 2 1084 2 947 3 949 1 951 2 792 2 243 2 513 2 954 2 390 2 669 24 960 2 523 2 963 2 524 2 1096 2 971 4 397 2 398 2 533 2 681 6 972 2 401 2 256 34 134 1 538 1 
124 2 
297 2 256 2 
823 2 256 4 186 2 
543 2 1 2 546 22 547 2 6 2 550 2 551 2 8 8 9 2 552 28 13 2 556 16 555 2 16 4 17 2 22 44 23 2 26 2 28 2 560 14 32 26 562 2 565 2 33 18 35 2 36 2 568 4 37 2 38 2 573 26 576 2 584 2 591 4 50 2 590 2 593 4 52 4 53 2 54 2 595 2 55 94 56 2 58 42 601 2 65 2 67 4 68 2 605 2 71 4 608 2 609 2 72 2 73 4 75 94 613 12 77 2 80 2 81 2 84 94 620 20 621 2 86 2 622 2 87 2 90 4 633 4 632 2 635 4 639 18 640 4 99 48 100 94 102 2 103 8 105 18 106 2 108 2 649 2 648 2 110 2 111 2 660 2 662 2 116 2 664 2 667 2 119 2 118 2 120 14 121 4 671 2 122 4 675 2 676 2 677 2 126 2 127 2 683 4 131 2 133 4 686 2 136 18 690 22 691 2 138 2 139 4 692 4 695 8 693 2 142 4 698 6 146 2 699 2 701 18 704 2 705 4 151 2 711 2 152 2 716 2 717 104 157 2 158 2 159 2 164 2 723 2 165 6 166 2 724 4 169 4 171 2 173 2 725 2 727 16 179 2 180 2 181 4 183 2 187 2 735 4 736 8 188 4 189 2 191 2 741 2 200 2 746 2 747 2 203 2 207 16 750 2 210 18 752 2 755 4 215 2 216 2 218 2 219 4 220 2 763 94 766 2 224 2 225 2 770 12 772 12 774 18 775 8 231 4 232 4 776 2 778 2 784 2 238 2 787 2 788 2 789 4 242 48 793 4 794 2 795 12 797 74 247 4 249 4 250 26 251 2 253 246 252 2 802 30 805 4 806 4 257 2 808 42 261 4 263 2 267 2 269 2 815 2 271 12 816 4 272 358 819 2 274 2 821 2 275 22 822 2 276 2 277 4 824 2 279 18 284 2 826 2 288 4 830 2 291 22 292 246 832 2 831 2 296 2 836 4 303 90 304 94 308 2 846 2 852 56 854 2 856 2 311 2 310 2 859 46 860 2 861 2 864 2 313 4 315 4 317 2 318 2 868 62 319 2 867 2 321 2 872 2 323 2 874 2 875 2 325 2 880 4 328 2 886 2 893 18 341 6 343 4 344 2 345 2 903 2 904 2 346 2 349 2 916 2 354 94 918 2 356 2 922 2 921 2 924 2 925 2 364 4 934 4 367 2 935 2 366 2 369 4 370 94 371 4 940 4 374 8 373 4 942 2 943 2 376 30 944 2 381 4 382 2 388 4 953 2 389 18 959 2 964 36 965 12 969 2 396 4 973 246 399 2 974 62 404 30 406 2 407 4 979 2 409 4 984 2 986 2 415 2 989 2 416 2 419 2 993 4 995 62 998 2 1000 2 428 2 1003 2 430 4 431 2 1005 2 435 18 436 4 1009 26 437 50 439 2 1012 2 1013 2 441 48 1015 2 442 8 443 22 446 2 1017 2 447 14 1018 2 1020 2 448 4 1021 2 1022 72 454 2 1028 52 457 2 459 6 1031 18 461 2 1034 2 462 2 464 2 1037 2 1039 2 469 2 472 2 475 2 477 22 1044 2 478 44 479 2 480 2 1052 2 1056 2 484 2 486 2 1061 2 1065 2 1067 4 1066 2 492 94 495 18 1074 10 1075 2 496 2 497 4 1079 6 498 42 505 48 502 2 506 2 507 2 510 4 1086 2 512 2 1087 2 1089 4 518 8 1091 2 520 2 1095 2 527 94 526 2 1097 94 529 44 531 2 1102 2 537 4 
39 2 468 2 884 2 1036 1 
227 2 468 2 
919 2 525 2 1004 2 583 2 468 2 642 2 394 2 
636 2 583 2 468 2 
60 2 583 2 468 2 
178 2 884 2 761 2 
583 2 468 2 
178 2 29 2 
468 2 402 2 
178 2 884 2 810 2 
135 2 884 2 976 2 
123 2 1033 2 884 2 
905 2 24 2 884 2 
503 2 1049 2 884 2 
46 2 178 2 
468 2 638 2 
135 2 410 2 
1033 2 617 2 
24 2 1010 2 
557 2 1049 2 
514 2 178 2 
615 2 1049 2 
908 2 24 2 
1033 2 814 2 
135 2 975 2 
175 2 178 2 884 2 810 2 
175 2 624 2 178 2 884 2 810 2 
178 2 884 2 1006 2 
607 2 178 2 884 2 
156 2 378 2 948 2 481 2 
919 2 525 2 659 2 1101 2 
919 2 891 2 525 2 1004 2 659 2 1101 2 
919 2 525 2 583 2 468 2 689 2 642 2 
515 2 544 2 
919 2 525 2 634 2 642 2 
24 2 426 2 
1049 2 569 2 
135 2 532 2 
1033 2 91 2 
606 2 1033 2 1049 2 
1033 2 1049 2 445 2 
1033 2 1049 2 643 2 
1033 2 702 2 1049 2 
45 2 143 6 1024 2 21 6 596 2 919 2 525 2 96 2 
646 2 178 2 
465 2 983 6 835 4 301 2 966 2 580 2 1082 2 598 2 530 2 78 2 897 2 1103 2 286 2 385 2 1104 2 493 4 69 2 901 2 
623 2 884 2 
954 2 
809 2 5 4 548 2 696 26 697 2 413 2 703 2 417 2 706 2 708 2 20 2 27 4 997 2 558 2 429 2 160 2 566 2 287 4 438 2 571 6 570 2 294 2 729 2 840 2 731 2 449 2 848 4 309 6 733 2 855 6 592 4 866 2 600 2 324 2 879 8 753 2 889 2 890 2 212 2 894 2 898 2 340 2 342 4 619 2 1057 2 1059 2 1064 2 765 2 350 2 630 2 488 2 923 8 1071 2 359 2 98 6 362 4 1076 2 234 2 941 2 240 4 508 2 509 2 241 2 1084 2 115 2 951 2 243 2 513 2 963 2 393 2 533 2 681 4 398 2 401 2 256 26 134 4 
809 2 5 4 548 2 696 26 697 2 413 2 703 2 417 2 706 2 708 2 20 2 27 4 997 2 558 2 160 2 566 2 287 4 438 2 571 6 570 2 294 2 729 2 840 2 731 2 449 2 848 4 309 6 733 2 855 6 592 4 866 2 600 2 324 2 879 8 753 2 754 2 889 2 890 2 212 2 894 2 898 2 900 2 340 2 1050 2 342 4 619 2 1059 2 1064 2 223 2 350 2 630 2 488 2 923 8 1071 2 359 2 98 6 362 4 1076 2 234 2 941 2 380 2 240 4 508 2 509 2 241 2 1084 2 115 2 951 2 243 2 513 2 963 2 393 2 533 2 681 6 398 2 972 2 401 2 256 26 
958 2 
661 2 494 2 
817 2 962 2 710 2 
817 2 962 2 710 2 
3 2 5 4 141 2 548 2 266 2 696 16 697 2 268 4 414 2 988 2 703 2 14 2 817 4 706 4 708 2 18 2 710 2 20 2 712 2 715 4 714 4 558 4 564 2 566 2 287 4 438 2 571 2 42 4 444 4 184 4 300 4 581 2 839 6 305 2 449 2 849 2 848 4 309 2 855 6 734 4 592 2 863 2 195 4 456 2 57 4 199 12 600 2 206 2 466 2 876 4 879 4 610 2 751 2 881 2 882 2 753 4 211 2 889 2 890 4 212 2 894 2 1045 2 337 6 898 2 900 2 1050 2 909 16 1059 2 764 2 89 2 630 2 488 2 769 4 94 2 1069 2 923 4 359 2 97 2 98 2 362 4 1076 2 504 4 375 2 509 2 241 6 113 12 383 2 115 4 951 2 386 2 243 4 513 2 956 2 955 2 522 4 799 2 962 6 963 2 1098 2 681 6 255 2 401 2 403 2 536 2 256 24 134 1 
221 2 312 2 751 2 3 2 561 2 355 2 696 2 306 2 564 2 414 2 804 2 849 2 898 2 243 2 386 2 256 4 494 2 
3 2 5 4 141 2 548 2 987 2 696 16 697 2 268 4 414 2 988 2 703 2 14 2 817 4 706 4 708 2 18 2 710 2 20 2 712 2 715 4 714 4 558 4 566 2 287 4 438 2 290 2 571 2 42 4 440 2 728 2 444 4 184 4 300 4 581 2 839 6 305 2 449 2 849 2 848 4 309 2 855 6 734 4 592 4 863 4 195 4 745 2 456 2 57 4 199 12 600 2 466 2 876 4 879 4 610 2 881 2 882 2 753 4 211 2 889 2 890 4 212 2 894 2 337 6 898 2 900 2 1050 2 909 16 1059 2 764 2 89 2 630 2 488 2 769 4 94 2 1069 4 923 4 490 2 359 2 97 2 98 2 362 4 1076 2 504 4 375 2 509 2 241 6 113 12 383 2 115 4 951 2 386 2 243 2 513 2 955 2 522 4 799 2 962 6 963 2 1098 2 681 6 255 2 401 2 403 2 536 2 256 24 
541 2 3 2 5 4 141 2 548 2 696 16 697 2 268 4 414 2 988 2 703 2 14 2 817 4 706 4 708 2 18 2 710 2 20 2 712 2 715 4 714 4 558 4 564 2 566 2 287 4 438 2 571 2 42 4 440 2 295 2 444 4 184 4 300 4 581 2 839 6 305 2 449 2 849 2 848 4 309 2 855 6 734 4 737 2 592 2 863 4 195 4 456 2 197 2 57 4 199 12 600 2 466 2 876 4 879 4 610 2 751 2 881 2 882 2 753 4 211 2 889 2 890 4 212 2 894 2 337 6 898 2 900 2 1050 2 909 16 1059 2 764 2 89 2 630 2 352 2 488 2 769 4 94 2 1069 2 923 4 359 2 97 2 98 2 362 4 1076 2 504 4 375 2 509 2 241 6 113 12 383 2 115 4 951 2 386 2 243 4 513 2 955 2 522 4 799 2 962 6 963 2 1098 2 681 6 255 2 401 2 403 2 536 2 256 24 134 1 
889 2 5 2 696 8 412 2 894 2 898 2 900 2 708 2 1050 2 20 2 626 2 912 2 630 2 488 2 915 2 566 2 163 2 359 2 287 4 362 4 1011 2 1077 2 834 2 509 2 845 2 449 2 1085 2 511 2 848 2 951 2 855 4 513 2 963 2 742 2 600 2 681 6 256 12 
749 2 777 3 570 3 571 2 234 6 574 2 782 4 612 2 696 2 379 2 730 1 790 2 896 2 384 2 309 2 851 2 342 2 619 2 592 3 519 2 160 3 674 2 98 2 256 2 684 2 
749 2 619 2 592 2 777 2 571 2 570 2 519 2 234 6 574 2 782 4 612 2 696 2 674 2 160 2 379 2 790 2 896 2 384 2 851 2 98 2 309 2 256 2 684 2 342 2 
749 2 619 2 592 2 777 2 571 2 570 2 519 2 234 6 574 2 782 4 612 2 696 2 674 2 160 2 379 2 790 2 896 2 384 2 851 2 98 2 309 2 256 2 684 2 342 2 
604 2 877 2 688 2 335 3 696 4 214 2 217 3 12 4 614 6 758 2 85 2 1051 4 19 2 618 2 619 2 1054 4 283 2 930 2 363 2 174 4 570 3 571 2 41 2 1014 4 837 4 781 5 579 2 237 2 655 2 946 2 844 2 950 2 850 3 952 2 592 3 517 2 63 2 256 10 684 2 685 4 
604 2 877 2 688 2 335 2 696 4 214 2 217 2 12 4 614 6 758 2 1047 1 899 2 85 2 1051 4 19 2 618 2 619 2 1054 4 283 2 930 2 363 2 174 4 570 2 571 2 41 2 1014 4 837 4 781 5 579 2 237 2 655 2 946 2 844 2 950 2 850 2 952 2 592 2 517 2 682 1 63 2 256 10 684 2 685 4 
604 2 877 2 688 2 335 2 696 4 214 2 217 2 12 4 614 6 758 2 1047 1 899 1 85 2 1051 4 19 2 618 2 619 2 1054 4 283 2 930 2 363 2 174 4 570 2 571 2 41 2 1014 4 837 4 781 4 579 2 237 2 655 2 946 2 844 2 950 2 850 2 952 2 592 2 517 2 682 1 63 2 256 10 684 2 685 4 
604 2 877 2 688 2 335 2 696 4 214 2 217 2 12 4 614 6 758 2 1047 2 899 2 85 2 1051 4 19 2 618 2 619 2 1054 4 283 2 930 2 363 2 174 4 570 2 571 2 41 2 1014 4 837 4 781 4 579 2 237 2 655 2 946 2 844 2 950 2 850 2 952 2 592 2 517 2 682 2 63 2 256 10 684 2 685 4 
604 2 877 2 688 2 335 2 696 4 214 2 217 2 12 4 614 6 758 2 1047 4 899 4 85 2 1051 4 19 2 618 2 619 2 1054 4 283 2 930 2 363 2 174 4 570 2 571 2 41 2 1014 4 837 4 781 4 579 2 237 2 655 2 946 2 844 2 950 2 850 2 952 2 592 2 517 2 682 4 63 2 256 10 684 2 685 4 
811 2 270 2 663 2 627 2 652 2 170 2 
828 2 365 2 663 2 997 2 322 2 1106 2 489 2 
696 2 1027 2 936 2 951 2 1023 2 256 2 644 2 
604 6 70 2 978 2 878 2 332 2 781 11 837 4 501 2 237 2 214 4 239 2 844 4 582 2 1047 4 899 6 49 4 952 6 483 2 618 6 914 2 283 4 682 4 64 2 63 4 685 10 
762 1 1054 2 452 2 1014 2 696 1 563 2 673 2 198 2 700 2 1046 2 34 7 1072 2 870 2 929 2 256 1 1051 2 361 4 807 2 
1054 2 452 2 1014 2 563 2 673 2 198 2 700 2 1046 2 34 6 1072 2 870 4 929 4 1051 2 361 4 807 4 
762 1 1054 2 452 2 1014 2 696 1 563 6 673 2 198 2 700 8 1046 2 34 10 1072 2 870 8 929 8 256 1 1051 2 361 4 807 8 
1054 2 452 2 1014 2 673 2 198 2 1046 2 34 2 1072 2 870 2 929 2 1051 2 361 2 807 2 
408 2 980 2 0 2 981 2 264 2 265 2 696 40 10 2 553 2 149 2 990 6 991 2 709 2 20 4 996 2 153 2 273 2 424 2 718 2 719 2 30 1 280 2 161 4 282 2 287 18 827 2 40 2 726 6 575 2 182 2 838 2 585 2 589 4 192 3 194 2 599 2 201 2 204 4 873 2 205 4 748 8 467 6 209 2 333 10 470 2 213 2 473 2 756 2 757 2 339 7 79 8 900 2 1050 2 1055 2 906 8 347 6 768 2 353 6 1068 2 631 2 923 16 920 2 927 6 358 4 359 4 360 2 931 2 1073 4 362 20 233 2 780 2 783 4 945 2 1083 2 785 2 509 2 245 2 957 4 1090 4 1092 2 967 2 968 2 1099 2 681 36 534 2 256 44 134 1 
542 4 981 2 982 2 333 8 4 2 888 4 696 26 756 2 339 2 900 8 1050 8 20 2 713 4 996 2 1055 2 1058 2 910 2 155 2 1063 2 424 2 768 2 631 2 923 14 773 4 927 2 359 2 358 2 434 6 287 14 931 2 362 14 1073 6 40 2 107 2 650 4 575 2 182 2 783 10 842 2 509 2 657 10 587 4 589 2 51 2 1025 2 957 6 1090 6 666 2 192 2 248 2 455 2 1032 2 395 2 599 6 201 2 202 2 678 4 681 36 130 4 256 28 134 2 205 2 
980 2 0 2 542 2 981 2 209 2 333 14 264 4 265 2 696 34 473 2 10 2 756 2 757 2 553 2 149 2 339 4 990 4 991 2 900 6 1050 6 20 6 713 2 996 2 1055 2 910 1 153 2 424 2 768 2 719 2 353 4 1068 2 631 2 161 2 432 2 923 4 773 2 927 4 358 4 359 6 434 2 931 2 287 16 827 2 1073 4 362 18 107 2 233 2 650 2 182 2 575 2 235 2 783 6 838 2 945 2 1083 2 509 4 657 2 450 2 587 2 589 2 51 1 245 2 957 4 1090 4 192 1 666 2 194 2 1092 2 743 2 967 2 1032 2 599 1 803 2 201 2 681 34 204 4 873 2 130 2 256 38 205 2 
981 2 330 2 1041 2 333 2 694 2 7 2 145 2 696 22 900 6 1050 6 707 2 20 2 1053 2 713 2 996 2 1055 2 1060 2 629 2 424 2 487 2 92 4 768 2 278 2 631 2 923 14 771 2 228 4 433 2 359 2 287 10 362 10 1073 2 172 2 40 2 43 2 650 2 575 2 654 2 578 2 500 2 509 2 587 2 957 2 1090 2 740 2 528 2 681 28 871 4 256 22 132 2 134 2 
260 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (8,161) (8,161) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 782 748 612 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (8,161) (8,161) 63 739 459 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 588 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 588 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 588 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 588 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 588 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 560 409 566 543 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 397 543 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 409 566 543 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 560 560 560 560 409 566 543 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(Z)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | RETURN | 100880 | return null
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:concat([I[I)[I
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7862 | if (x) -> if (!x)
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(DD)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:sign(I)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:dimensions()I
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:subsetOf([I[I)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(I[I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eq(FF)Z
daikon.PptSlice2:arity()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:relate_var()V
daikon.Quant:ne(II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eltsGTE([II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoAux:hashCode()I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([D[F)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eltsGT([II)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern:numIntArrays()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Field:java_field(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Debug:logOn()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.PptSlice1:arity()I
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.ProglangType:isArray()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptSlice1:num_samples()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long; | RETURN | 14632 | return null
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:noDups([I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaCharStream:backup(I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Ppt:Ppt()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eq(II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ModBitTracker:num_vars()I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice; | RETURN | 38854 | return null
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Intern:intern([J)[J
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 20464 | = null
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | STATEMENT | 43923 | stmt -> ;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Debug:logDetail()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:memberOf(S[S)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:lte(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE:gcd([I)I
daikon.Quant:lt(II)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[D)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltsLTE([II)Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.ModBitTracker:num_sets()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String; | RETURN | 23802 | return null
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Invariant:logDetail()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0:arity()I
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(JJ)J
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ProglangType:baseIsIntegral()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
8 2 161 2 485 4 92 2 769 2 228 2 163 2 396 2 833 2 
65 2 18 6 813 2 452 2 702 2 171 2 123 6 138 2 750 6 525 2 240 2 
8 2 176 2 490 2 161 2 467 2 142 6 493 2 535 6 97 6 443 2 710 6 820 4 843 4 
8 4 161 4 267 8 823 2 790 2 320 8 479 2 227 8 153 17 418 8 793 2 234 8 338 12 784 2 741 4 402 6 121 17 314 4 404 8 551 16 48 8 
269 6 39 4 
839 2 
107 2 161 4 450 2 661 2 507 2 395 4 214 2 165 2 119 2 762 2 339 2 458 2 277 2 220 2 7 4 344 2 8 4 279 2 416 2 71 2 685 2 288 2 687 2 353 2 298 2 242 2 692 2 190 2 191 2 80 2 590 2 376 2 87 4 439 2 788 2 542 2 386 2 833 2 602 2 547 4 446 2 210 2 46 2 553 2 
8 4 267 4 161 4 127 8 320 4 799 8 227 4 153 9 681 4 564 2 418 4 234 4 121 9 404 4 551 8 48 4 
714 2 446 2 170 2 
299 2 111 2 520 2 791 22 719 2 286 2 692 2 369 2 837 2 106 10 807 2 476 2 809 2 251 2 
267 2 688 2 77 2 367 2 338 4 722 2 121 5 402 2 404 2 597 2 676 2 408 2 383 2 320 2 227 2 153 6 418 2 234 2 528 2 551 4 48 2 
465 2 267 6 823 2 379 8 320 6 227 6 633 2 153 15 275 4 418 6 234 6 121 6 352 4 387 2 404 6 551 12 48 6 
25 2 556 2 714 2 453 2 112 2 781 2 245 2 563 2 164 4 565 4 191 4 623 2 120 4 669 2 170 6 696 2 436 2 672 4 374 2 85 4 592 4 406 62 652 2 198 2 655 4 468 2 204 4 727 14 98 4 601 10 728 4 233 2 547 4 445 2 446 8 687 2 105 4 841 10 159 2 775 2 
824 2 591 2 629 2 492 2 679 2 280 2 44 2 327 2 839 2 330 2 
660 4 110 1 756 2 113 2 559 8 114 2 454 3 561 2 757 2 759 2 337 1 666 2 457 2 219 2 6 2 124 3 767 4 347 2 8 32 126 2 128 2 568 1 10 2 131 1 680 2 223 2 771 2 230 2 572 2 15 2 772 16 686 2 577 2 239 2 355 1 362 3 691 6 364 4 583 2 146 6 246 2 368 2 694 2 151 2 486 2 248 2 250 2 33 2 35 1 37 2 381 2 704 2 41 8 42 2 706 2 262 2 709 2 711 24 502 2 390 2 796 2 161 34 503 6 391 1 392 2 613 2 54 2 273 2 396 2 166 2 167 4 615 2 274 4 168 1 621 2 398 2 512 2 59 2 805 2 405 2 806 3 518 2 632 2 411 1 178 3 66 2 413 2 281 3 67 12 68 1 725 2 634 8 635 2 816 2 181 16 285 2 419 6 290 2 420 2 291 2 821 2 641 2 292 1 294 16 186 2 531 3 75 2 822 32 423 2 424 2 189 2 426 1 825 2 429 4 738 2 192 2 433 1 649 2 650 2 742 4 194 2 83 2 317 5 86 2 651 1 743 2 197 2 319 2 654 1 744 2 199 2 93 24 442 16 96 3 321 2 831 2 545 3 658 2 836 3 444 3 548 2 747 2 103 3 842 4 844 32 752 2 211 1 
161 2 765 2 
161 4 209 2 474 2 
117 2 
754 2 612 2 779 2 116 2 244 2 782 2 307 2 309 2 456 2 276 2 174 2 249 2 593 2 88 2 787 2 255 2 834 4 324 2 235 2 748 2 102 2 73 2 185 2 501 4 
253 2 526 2 718 1 700 2 
526 2 264 2 
526 2 212 2 412 2 446 2 479 2 14 2 562 2 
526 2 212 2 359 2 
526 2 212 2 208 2 
253 2 263 2 152 2 
526 2 212 2 
263 2 202 2 
526 2 798 2 
253 2 263 2 62 2 
253 2 770 2 522 2 
253 2 653 2 394 2 
350 2 253 2 659 2 
253 2 670 2 766 2 
263 2 642 2 
526 2 774 2 
26 2 522 2 
254 2 394 2 
811 2 659 2 
99 2 670 2 
713 2 263 2 
497 2 670 2 
187 2 659 2 
115 2 394 2 
134 2 522 2 
253 2 263 2 62 2 698 2 
253 2 755 2 263 2 62 2 698 2 
253 2 499 2 263 2 
253 2 263 2 508 2 
631 2 504 2 773 2 265 2 
72 2 567 2 446 2 562 2 
72 2 567 2 412 2 446 2 53 2 562 2 
818 2 526 2 212 2 446 2 479 2 562 2 
494 2 416 2 
446 2 479 2 562 2 322 2 
334 2 659 2 
289 2 670 2 
361 2 522 2 
394 2 697 2 
670 2 394 2 699 2 
670 2 581 2 394 2 
670 2 505 2 394 2 
670 2 394 2 614 2 
306 2 562 2 341 6 316 6 515 2 708 2 446 2 550 2 
221 2 753 2 517 2 678 2 132 4 791 6 470 2 664 2 471 2 546 2 311 2 668 4 589 2 624 2 695 2 238 2 157 2 627 2 
253 2 571 2 
188 2 263 2 
223 2 
110 2 557 4 559 2 757 2 561 2 217 2 457 2 767 4 8 26 128 2 10 2 349 2 680 2 771 2 572 2 573 2 237 2 355 2 357 2 691 2 364 2 583 2 146 2 482 2 368 2 693 2 33 2 250 2 262 2 500 2 502 2 158 4 390 2 796 2 161 26 503 6 613 2 54 2 393 2 396 2 273 2 167 2 615 2 166 2 274 4 398 6 625 2 67 8 725 2 419 4 420 2 821 4 294 6 186 2 75 2 822 4 423 2 732 2 428 2 429 2 826 2 313 2 650 2 82 2 742 4 194 2 86 2 197 2 91 2 744 2 831 2 842 4 844 6 752 2 
110 2 557 4 559 2 757 2 561 2 666 2 457 2 767 4 8 26 128 2 10 2 349 2 680 2 771 2 572 2 573 2 20 2 237 2 355 2 357 2 691 2 364 2 583 2 146 2 482 2 368 2 693 2 33 2 250 2 262 2 500 2 502 2 158 4 390 2 796 2 161 26 503 6 613 2 54 2 393 2 396 2 273 2 167 2 615 2 166 2 274 4 398 6 67 8 725 2 815 2 419 6 420 2 821 4 294 6 186 2 75 2 822 4 423 2 732 2 189 2 428 2 429 2 78 2 826 2 313 2 650 2 82 2 742 4 194 2 86 2 197 2 744 2 831 2 658 2 842 4 844 6 752 2 
663 2 
247 2 530 2 
449 2 160 2 796 2 161 12 503 4 452 2 213 2 506 4 54 2 335 2 55 10 801 4 802 2 761 2 763 2 622 2 457 2 401 2 171 2 123 6 674 2 767 2 125 8 8 6 348 2 9 2 810 2 407 2 414 2 415 2 179 2 523 2 525 4 637 2 18 6 138 4 184 2 475 2 186 2 140 2 423 2 303 2 144 4 646 8 31 2 586 2 432 2 370 2 435 2 33 2 437 2 318 4 382 2 703 4 705 4 101 2 389 2 842 2 750 6 752 2 
449 2 160 2 796 2 161 12 503 4 452 2 213 2 272 4 506 4 54 2 55 10 801 4 802 2 761 2 763 2 622 2 457 2 401 2 171 2 123 8 673 2 674 2 767 2 8 6 125 8 348 2 9 2 810 2 407 2 813 2 414 2 415 2 179 2 523 2 525 4 637 2 18 8 138 4 184 2 475 2 186 2 140 2 423 2 303 2 144 4 646 8 31 2 586 2 370 2 435 2 33 2 437 2 318 4 94 2 382 2 703 4 705 4 101 2 842 2 389 2 750 6 752 2 
160 2 348 2 303 2 506 4 703 2 179 2 525 2 801 4 802 2 637 2 761 2 18 2 622 2 401 2 138 2 389 2 750 2 674 2 
449 2 160 2 796 2 161 12 503 4 213 2 506 4 54 2 335 2 55 6 801 4 802 2 761 2 763 2 622 2 457 2 401 2 171 2 123 6 674 2 767 2 125 4 8 6 348 2 9 2 810 2 407 2 813 2 414 2 415 2 179 2 523 2 525 4 637 2 18 6 138 4 184 2 475 2 186 2 140 2 423 2 303 2 144 4 646 4 31 2 586 2 432 2 370 2 435 2 33 2 437 2 318 4 382 2 703 4 705 4 101 2 389 2 842 2 750 4 752 2 
449 2 160 2 796 2 161 12 503 4 213 2 506 4 54 2 335 2 55 6 801 4 802 2 761 2 763 2 622 2 457 2 401 2 171 2 123 6 674 2 767 2 125 4 65 2 8 6 348 2 9 2 810 2 407 2 414 2 415 2 179 2 523 2 525 4 637 2 18 4 138 4 184 2 475 2 186 2 140 2 423 2 303 2 144 4 646 4 31 2 586 2 432 2 370 2 435 2 33 2 437 2 318 4 382 2 703 4 705 4 101 2 389 2 842 2 750 6 752 2 
449 2 160 2 796 2 161 12 503 4 452 2 213 2 506 4 54 2 335 2 55 6 801 4 802 2 761 2 763 2 622 2 457 2 401 2 171 2 123 6 674 2 767 2 125 4 8 6 348 2 9 2 810 2 407 2 414 2 415 2 179 2 523 2 525 4 637 2 18 6 138 4 184 2 475 2 186 2 140 2 423 2 303 2 144 4 646 8 31 2 586 2 432 2 370 2 435 2 33 2 437 2 318 4 382 2 703 4 705 4 101 2 389 2 842 2 750 6 752 2 
449 2 160 2 796 2 161 12 503 4 452 2 213 2 506 4 54 2 335 2 55 10 801 4 802 2 761 2 763 2 622 2 457 2 401 2 171 2 123 8 674 2 767 2 125 8 65 2 8 6 348 2 9 2 810 2 407 2 414 2 415 2 179 2 523 2 525 4 637 2 18 6 138 4 184 2 475 2 186 2 140 2 423 2 303 2 144 4 646 8 31 2 586 2 432 2 370 2 435 2 33 2 437 2 318 4 382 2 703 4 705 4 101 2 389 2 842 2 750 8 752 2 
449 2 160 2 796 2 161 12 503 4 452 2 213 2 506 4 54 2 335 2 55 10 801 4 802 2 761 2 763 2 622 2 457 2 401 2 171 2 123 6 674 2 767 2 125 8 8 6 348 2 9 2 810 2 407 2 414 2 415 2 179 2 523 2 525 4 637 2 18 6 138 4 184 2 475 2 186 2 140 2 423 2 303 2 144 4 646 8 31 2 586 2 432 2 370 2 435 2 33 2 437 2 318 4 382 2 703 4 705 4 101 2 389 2 842 2 750 6 752 2 
449 2 213 2 457 2 674 2 222 1 8 24 463 6 9 4 466 2 10 2 11 2 680 2 226 2 682 6 18 4 237 2 475 2 689 1 691 2 478 2 690 6 31 2 481 2 483 2 693 2 32 1 33 2 250 2 488 6 489 2 36 1 703 4 256 2 705 6 259 2 262 2 47 2 50 8 503 6 51 2 506 4 54 2 55 2 274 4 57 2 511 2 65 4 67 4 725 2 283 6 523 2 524 1 525 4 527 2 729 4 294 6 730 6 733 6 303 2 538 6 312 2 742 4 540 1 318 4 744 2 95 10 325 2 101 4 329 1 749 1 104 4 750 8 752 2 554 7 557 4 559 2 757 2 561 2 758 2 117 6 761 2 763 2 765 6 123 12 767 4 348 2 128 2 129 2 349 2 771 2 136 6 138 4 139 2 140 2 776 2 144 8 583 2 364 2 146 2 586 2 368 2 370 2 375 2 377 6 378 6 382 2 600 2 156 6 794 7 389 2 390 12 160 2 796 2 161 46 609 2 393 4 396 2 615 2 616 2 167 2 618 2 617 2 801 4 620 2 802 2 398 6 169 1 622 2 401 2 171 4 173 2 810 2 407 2 414 2 179 2 415 2 419 6 637 2 420 2 184 2 186 2 822 2 423 2 189 2 646 2 429 2 432 2 435 2 437 2 438 2 440 2 831 2 656 2 206 2 658 2 207 6 209 6 842 4 844 8 
449 2 451 2 557 4 452 4 213 2 559 2 758 2 561 2 757 2 117 6 761 2 763 2 457 2 765 6 123 12 674 2 767 4 463 6 8 26 348 2 466 2 9 4 128 2 129 2 10 2 11 2 349 2 680 2 226 2 771 2 682 6 18 8 136 6 237 2 138 4 475 2 139 2 140 2 776 2 690 6 478 2 691 2 144 8 364 4 583 2 146 2 31 2 481 2 586 2 483 2 368 2 693 2 370 2 375 2 488 6 250 2 33 2 377 6 489 2 378 6 382 2 256 2 703 4 600 2 705 6 259 2 156 6 262 2 389 2 47 2 160 2 390 12 796 2 609 2 50 8 161 48 503 6 51 2 506 4 393 4 54 2 55 2 396 2 167 4 616 2 615 2 617 2 618 2 801 4 274 4 57 2 802 2 620 2 398 6 511 2 622 2 171 4 401 2 173 2 723 2 810 2 407 2 67 8 414 2 415 2 725 2 179 2 283 6 523 2 525 4 419 6 637 2 527 2 420 2 821 2 184 2 730 6 294 6 729 4 186 2 822 2 423 2 733 6 303 2 646 6 189 2 429 4 432 2 312 2 538 6 435 2 742 4 437 2 438 2 318 4 440 2 744 2 95 10 831 2 656 2 206 2 658 2 207 6 325 2 101 4 209 6 104 4 842 4 844 8 750 8 752 2 
449 2 451 2 557 4 452 4 213 2 559 2 758 2 561 2 757 2 117 6 761 2 763 2 457 2 765 6 123 12 674 2 767 4 463 6 125 4 8 26 348 2 466 2 9 4 128 2 129 2 10 2 11 2 349 2 680 2 226 2 771 2 682 6 18 8 136 6 237 2 138 4 475 2 139 2 140 2 776 2 690 6 478 2 691 2 144 8 364 4 583 2 146 2 31 2 481 2 586 2 483 2 368 2 693 2 370 2 375 2 488 6 250 2 33 2 377 6 489 2 378 6 382 2 256 2 703 4 600 2 705 6 259 2 156 6 262 2 389 2 47 2 160 2 390 12 796 2 609 2 50 8 161 48 503 6 51 2 506 4 393 4 54 2 55 6 396 2 615 2 167 4 616 2 617 2 618 2 801 4 274 4 57 2 802 2 620 2 398 6 511 2 622 2 171 4 401 2 173 2 723 2 810 2 407 2 67 8 414 2 415 2 725 2 179 2 283 6 523 2 525 4 419 6 637 2 527 2 420 2 821 2 184 2 730 6 294 6 729 4 186 2 822 2 423 2 733 6 303 2 646 6 189 2 429 4 432 2 312 2 538 6 435 2 742 4 437 2 438 2 318 4 440 2 744 2 95 10 831 2 656 2 206 2 658 2 207 6 325 2 101 4 209 6 104 4 842 4 844 8 750 8 752 2 
449 2 451 2 452 4 213 2 2 6 457 2 674 2 8 24 463 12 9 4 675 6 466 2 10 2 11 2 680 2 226 2 231 6 682 6 18 10 237 2 475 2 691 4 478 2 690 6 31 2 481 2 483 2 693 4 33 2 250 2 488 6 489 2 703 4 256 2 40 2 705 6 259 2 262 2 47 2 266 6 50 8 503 6 51 2 506 4 54 2 509 6 55 6 274 4 58 2 57 2 511 2 723 2 65 2 67 10 725 2 283 6 523 2 525 4 729 4 294 8 74 2 730 6 295 6 733 12 303 2 312 2 538 6 742 4 318 4 744 2 745 6 95 8 100 2 325 2 101 4 104 4 750 10 752 2 557 6 559 4 757 2 561 2 758 2 117 12 761 2 763 2 765 12 123 16 767 4 125 4 348 2 128 2 129 2 349 2 130 2 771 2 574 2 136 6 138 4 576 2 139 2 140 2 776 2 144 8 583 2 364 4 146 4 586 2 368 2 370 2 371 6 375 2 377 12 378 6 382 2 600 2 156 6 389 2 390 10 160 2 796 2 161 52 609 2 393 4 396 2 616 2 167 4 615 2 617 2 618 2 801 4 620 2 802 2 398 8 622 2 401 2 171 4 173 2 810 2 407 2 813 2 414 2 415 2 179 2 419 6 637 2 639 2 640 6 420 2 821 2 184 2 186 2 822 4 423 2 189 2 646 6 429 4 432 2 435 2 437 2 438 2 440 2 831 2 656 2 206 2 658 2 207 6 209 12 842 4 844 12 
140 2 161 4 452 2 303 2 506 2 144 2 646 6 55 4 31 2 801 2 761 2 432 2 622 2 763 2 370 2 171 2 401 2 123 4 435 2 437 2 125 4 348 2 810 2 318 2 407 2 382 2 414 2 179 2 705 2 523 2 525 4 18 6 138 4 389 2 750 6 
557 4 452 2 757 2 761 2 763 2 457 2 123 4 767 4 8 24 348 2 128 2 10 2 349 2 680 2 223 2 771 2 18 6 237 2 138 4 577 2 578 2 140 2 144 2 691 3 583 2 31 2 146 3 368 2 370 2 372 2 250 2 33 2 382 2 42 2 705 2 792 2 262 2 389 2 390 4 796 2 161 28 503 6 506 2 54 2 393 2 55 2 396 2 615 2 801 2 274 4 398 6 622 2 171 2 401 2 60 3 278 2 810 2 407 2 414 2 179 2 725 2 523 2 525 4 419 6 817 2 527 2 420 2 184 2 294 6 186 2 822 3 423 2 303 2 189 2 646 6 432 2 742 4 435 2 437 2 318 2 319 2 744 2 95 2 831 2 658 2 842 4 750 6 844 8 752 2 
516 2 810 2 437 2 
516 2 810 2 437 2 
449 2 452 4 213 2 561 4 757 2 761 2 457 2 123 16 342 2 674 2 767 4 8 16 125 4 9 2 677 2 128 2 10 2 349 2 680 2 12 2 13 2 225 2 771 2 684 2 18 12 237 2 138 4 475 2 144 4 364 4 583 2 145 2 31 2 481 2 368 2 375 2 33 2 250 2 34 2 598 4 703 4 705 4 258 2 795 2 262 2 160 2 390 4 796 2 161 24 503 6 271 2 506 2 54 2 393 6 55 6 396 2 167 4 615 2 274 4 801 2 398 2 721 2 171 4 65 4 516 2 810 6 813 4 67 4 414 2 69 2 725 2 179 2 525 4 419 6 420 2 729 2 294 2 186 2 822 2 423 2 303 4 304 2 189 2 646 6 429 4 310 2 538 2 313 4 434 2 742 4 84 2 437 4 89 4 318 2 95 2 831 2 206 2 658 2 101 4 104 2 842 4 844 2 750 12 752 2 
390 2 8 2 796 2 161 4 644 2 95 2 225 2 69 2 483 2 802 2 587 2 312 2 538 2 804 2 84 2 104 2 530 2 
449 2 452 4 213 2 561 4 757 2 761 2 457 2 123 16 342 2 674 2 767 4 8 16 125 4 9 4 677 2 128 2 10 2 349 2 680 2 12 2 225 2 771 2 684 2 18 12 237 2 138 4 475 2 144 4 364 4 583 2 31 2 481 2 484 2 368 2 373 2 375 2 33 2 250 2 34 2 598 4 380 2 703 4 705 4 258 2 262 2 160 2 390 2 796 2 161 24 503 6 271 2 506 2 54 2 393 6 55 6 396 2 167 4 615 2 274 4 801 2 398 2 721 2 171 4 65 4 516 2 810 6 724 2 813 4 67 4 414 2 415 2 69 2 725 2 179 2 525 4 419 6 420 2 729 2 294 2 186 2 822 4 423 2 303 4 189 2 646 6 429 4 79 2 310 2 538 2 313 4 434 4 742 4 84 2 437 4 89 4 318 2 831 2 206 2 658 2 101 4 842 4 844 2 750 12 752 2 
449 2 452 4 213 2 336 2 561 4 757 2 3 2 761 2 457 2 123 16 342 2 674 2 767 4 8 16 125 4 9 4 677 2 128 2 10 2 349 2 680 2 12 2 225 2 771 2 684 2 18 12 137 2 237 2 138 4 475 2 144 4 364 4 583 2 31 2 481 2 368 2 375 2 33 2 250 2 34 2 598 4 599 2 703 4 705 4 258 2 262 2 160 2 390 4 796 2 161 24 503 6 271 2 506 2 54 2 393 6 55 6 396 2 167 4 615 2 274 4 801 2 398 2 721 2 171 4 175 2 65 4 516 2 810 6 813 4 67 4 414 2 415 2 69 2 725 2 179 2 525 4 419 6 420 2 729 2 294 2 186 2 822 2 423 2 303 4 189 2 646 6 429 4 310 2 538 2 313 4 434 2 742 4 84 2 437 4 89 4 318 2 95 2 831 2 206 2 658 2 101 4 104 2 842 4 844 2 750 12 752 2 
49 2 796 2 161 16 503 4 54 2 757 2 396 2 615 2 667 1 274 2 398 2 457 2 459 2 172 1 514 2 63 2 767 2 8 12 128 2 725 2 419 2 472 2 420 2 294 2 186 2 422 2 423 2 645 2 305 2 583 2 536 2 647 2 739 2 368 2 648 2 742 2 539 2 33 2 594 2 201 2 257 2 831 2 707 2 43 2 793 2 326 2 262 2 842 2 844 2 752 2 
822 3 161 2 557 2 301 2 778 2 691 3 1 2 146 3 665 2 398 2 693 6 460 2 785 2 786 2 345 2 346 1 8 2 519 3 410 2 177 2 744 2 17 2 294 2 354 4 844 2 
822 2 161 2 557 2 301 2 778 2 691 2 1 2 146 2 665 2 398 2 693 6 460 2 785 2 786 2 345 2 8 2 519 2 410 2 177 2 744 2 17 2 294 2 354 4 844 2 
822 2 161 2 557 2 301 2 778 2 691 2 1 2 146 2 665 2 398 2 693 6 460 2 785 2 786 2 345 2 8 2 519 2 410 2 177 2 744 2 17 2 294 2 354 4 844 2 
712 2 532 2 555 2 267 2 300 4 822 3 161 6 143 3 715 2 580 2 691 3 363 2 29 3 148 4 588 2 121 1 122 2 404 2 8 2 630 2 812 2 410 2 744 2 200 2 320 2 442 2 180 2 229 2 227 2 153 5 181 2 418 2 135 3 234 2 819 2 388 2 332 2 551 4 844 2 48 2 
712 2 532 2 555 2 267 2 300 4 822 2 161 6 143 2 715 2 580 2 691 2 363 2 29 2 148 4 588 2 121 4 122 2 404 2 8 2 630 2 812 2 410 2 744 2 200 2 320 2 442 2 180 2 229 2 227 2 153 4 181 2 418 2 135 2 234 2 819 2 388 2 332 2 551 4 844 2 48 2 
712 2 532 2 555 2 267 2 300 4 822 2 161 6 143 2 715 2 580 2 691 2 363 2 29 2 148 4 588 2 121 4 122 2 404 2 8 2 630 2 812 2 410 2 744 2 200 2 320 2 442 2 180 2 229 2 227 2 153 4 181 2 418 2 135 2 234 2 819 2 388 2 332 2 551 4 844 2 48 2 
712 2 532 2 555 2 267 2 300 4 822 2 161 6 143 2 715 2 580 2 691 2 363 2 29 2 148 4 588 2 121 4 122 2 404 2 8 2 630 2 812 2 410 2 744 2 200 2 320 2 442 2 180 2 229 2 227 2 153 4 181 2 418 2 135 2 234 2 819 2 388 2 332 2 551 4 844 2 48 2 
712 2 532 2 555 2 267 2 300 4 822 2 161 6 143 2 715 2 580 2 691 2 363 2 29 2 148 4 588 2 121 4 122 2 404 2 8 2 630 2 812 2 410 2 744 2 200 2 320 2 442 2 180 2 229 2 227 2 153 4 181 2 418 2 135 2 234 2 819 2 388 2 332 2 551 4 844 2 48 2 
828 2 464 2 549 2 421 2 384 2 16 2 
5 2 464 2 826 2 575 2 537 2 64 2 155 2 
533 1 161 10 141 2 731 2 797 2 453 1 735 2 193 2 457 2 377 2 595 2 8 8 252 2 652 1 133 2 282 2 829 2 232 1 287 1 835 2 236 2 604 2 447 2 529 2 606 2 751 2 
840 2 
8 1 161 1 630 2 558 2 570 2 425 2 180 2 480 1 284 2 147 2 498 7 218 2 261 2 388 2 343 2 195 2 196 2 462 4 
630 2 558 2 570 2 425 2 180 2 284 4 147 2 498 6 218 2 261 2 388 2 343 4 195 2 196 4 462 4 
8 1 161 1 630 2 558 6 570 2 425 2 180 2 480 1 284 8 147 2 498 10 218 2 261 8 388 2 343 8 195 2 196 8 462 4 
630 2 570 2 425 2 180 2 284 2 147 2 498 2 218 2 388 2 343 2 195 2 196 2 462 2 
161 6 560 2 757 2 760 2 274 2 566 2 8 6 409 2 128 2 469 2 419 6 296 1 76 1 579 2 780 1 189 2 740 2 742 2 543 2 831 2 658 2 
108 2 607 2 608 2 161 46 611 2 270 2 333 4 52 2 716 2 662 2 757 2 397 2 118 2 56 2 4 4 455 2 800 2 510 2 274 20 619 2 215 2 720 6 400 2 216 2 340 2 566 2 61 2 626 2 461 2 808 2 8 44 409 2 128 2 768 2 814 2 521 2 224 2 469 40 726 2 417 2 183 2 70 2 683 4 419 42 473 2 638 2 241 2 296 2 297 2 477 2 24 2 534 8 76 2 302 2 358 2 777 2 579 2 360 4 243 2 584 2 30 2 585 2 308 2 783 2 737 2 431 2 487 2 315 2 742 20 596 2 701 2 491 2 543 2 90 2 789 2 38 2 441 2 495 4 203 4 830 2 831 2 832 4 385 2 657 6 746 2 45 2 260 2 328 2 605 4 448 2 552 2 
108 2 109 2 268 2 161 44 611 2 333 4 0 2 716 2 717 2 162 2 757 2 274 18 215 2 720 10 399 4 216 6 764 6 566 2 513 2 803 2 403 2 461 2 628 2 8 40 409 2 128 4 569 2 469 14 182 2 419 38 183 2 351 8 19 2 21 2 293 2 22 2 296 6 241 4 356 2 643 2 23 2 27 6 28 2 579 2 360 4 734 2 243 4 189 4 365 2 366 2 427 2 736 2 430 2 308 2 149 8 150 2 827 2 742 20 487 6 701 2 541 2 491 6 543 2 544 8 441 2 203 2 205 2 831 4 496 2 154 2 603 2 658 4 746 6 838 2 605 4 331 2 448 2 
108 2 608 2 610 2 161 22 611 2 333 4 716 2 560 8 757 2 56 2 760 2 510 2 274 10 215 2 720 6 566 2 671 2 61 2 8 20 409 2 128 2 814 2 469 12 636 2 419 34 296 2 241 2 477 2 76 2 579 2 360 4 582 2 243 2 189 6 366 2 30 2 308 2 740 2 742 10 701 2 491 2 543 2 441 2 203 2 830 2 831 2 323 2 657 2 658 6 605 4 448 2 
81 2 

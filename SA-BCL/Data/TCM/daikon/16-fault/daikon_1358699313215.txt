#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (553,792) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V FAILED junit.framework.AssertionFailedError (553,792) 35 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 285 231 538 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 707 678 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 949 949 949 540 810 249 318 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 949 949 949 810 249 318 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 949 949 540 810 249 318 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (382,907) (382,907) (796,897) (796,897) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:lexLT([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(II)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22083 | stmt -> ;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariant:logDetail()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Assert:assertTrue(Z)V
daikon.Ppt:Ppt()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:eq(II)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:subsetOf([S[S)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.PptSlice1:num_samples()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:justified()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:intersection([I[I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName; | RETURN | 30246 | return null
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(JJ)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:lte(II)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:concat([I[I)[I | RETURN | 37630 | return null
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptSlice1:arity()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:subsetOf([D[D)Z
daikon.PptName:isEnterPoint()Z
daikon.ProglangType:dimensions()I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern:intern([I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:ne(II)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:memberOf(F[D)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:sameLength([I[I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseLTE([I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:gt(II)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE:negate(I)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.Invariant:getConfidence()D
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:max([I)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:slice([III)[I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfo:isPointer()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_ntk()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.Node:Node()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName:hashCode()I
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_2_16(I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet; | ASSIGN | 2825 | = null
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:readChar()C
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.Quant:noDups([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:baseIsFloat()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptSlice2:arity()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | STATEMENT | 5655 | stmt -> ;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Debug:logDetail()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:gte(II)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eq(DD)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([D)D
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.InvMap:InvMap()V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
503 2 101 2 33 2 334 2 106 2 269 2 187 4 376 2 308 2 
223 2 393 6 248 2 876 2 361 6 27 2 646 6 890 2 978 2 271 2 474 2 
315 6 588 2 968 6 794 4 631 4 101 2 33 2 498 6 324 2 752 2 742 2 842 6 637 2 
79 2 136 8 445 16 834 10 356 26 201 12 928 16 417 10 607 2 385 2 843 2 964 6 273 2 583 8 142 4 649 10 942 8 284 4 101 6 152 8 709 16 33 6 496 2 598 4 107 10 398 6 399 10 683 29 377 2 110 4 
961 6 551 4 
326 2 
79 2 191 2 135 2 688 2 137 2 261 2 5 2 199 2 630 2 513 2 269 2 808 2 16 2 647 2 28 2 214 2 101 4 33 4 885 2 763 2 105 2 220 2 543 2 952 2 662 4 958 2 235 2 775 2 52 4 664 4 906 2 841 2 424 2 613 2 780 2 482 2 553 2 730 4 782 2 846 2 792 2 368 2 306 2 909 2 
542 2 920 6 136 6 197 4 718 6 445 32 834 16 770 2 356 48 201 22 836 6 417 16 928 32 171 4 777 4 964 4 583 18 123 6 462 6 338 8 789 2 561 4 649 16 882 4 65 4 216 4 284 2 101 4 709 32 33 4 499 2 107 6 399 16 71 2 398 4 683 54 290 6 766 2 377 2 
392 2 47 2 553 2 
745 2 832 2 792 2 162 2 278 2 100 2 31 10 597 2 451 2 67 2 567 2 41 22 14 2 938 2 
193 2 954 2 445 2 834 2 90 2 356 4 201 2 417 2 928 2 902 2 51 2 583 2 98 2 463 2 649 2 760 2 284 2 709 2 822 2 107 4 399 2 398 2 683 6 
615 2 462 6 561 4 718 6 445 8 649 4 834 4 356 12 201 4 882 4 417 4 928 8 709 8 598 2 268 2 399 4 683 16 
865 2 328 2 0 2 475 2 47 2 25 6 410 2 392 2 470 2 36 6 932 2 269 2 363 2 874 2 553 4 582 2 241 2 75 2 
826 2 546 2 408 2 326 2 908 2 558 2 283 2 943 2 182 2 541 2 
503 2 867 2 508 2 629 2 266 2 750 2 516 32 520 4 10 2 388 1 755 2 275 2 642 2 20 2 644 2 277 2 532 3 650 2 282 4 148 1 651 2 761 2 881 2 33 34 286 2 652 2 653 2 397 2 157 4 401 2 895 2 402 2 896 1 656 2 44 1 46 2 658 2 291 2 769 2 49 2 292 6 663 2 420 2 905 2 173 2 56 2 665 2 57 16 556 2 785 5 786 1 673 16 177 2 560 6 437 1 793 2 911 2 679 4 913 3 184 3 312 2 684 2 441 4 440 24 76 2 190 2 798 3 313 2 195 2 84 1 568 1 85 2 801 2 689 4 89 3 925 8 575 3 320 4 930 2 92 2 579 8 933 2 696 1 457 2 935 2 937 2 210 2 586 12 706 2 97 2 337 2 708 2 465 2 940 1 596 1 101 32 102 6 217 2 218 2 945 2 824 2 946 2 221 2 948 2 348 2 224 12 600 6 112 32 113 1 352 16 951 2 831 1 477 2 955 2 354 2 721 2 119 2 234 2 480 3 121 2 838 2 481 2 840 2 610 2 240 2 729 3 483 24 845 2 485 8 365 3 242 3 243 1 851 1 852 2 854 2 618 2 246 2 370 2 493 3 856 1 371 2 736 4 252 2 494 2 739 16 373 2 501 3 743 2 375 1 
33 2 654 2 
33 4 215 2 535 2 
593 2 
505 2 918 2 134 2 192 2 2 4 198 6 748 2 926 6 514 6 322 2 694 2 698 2 635 4 9 2 524 2 811 2 700 28 11 2 754 2 585 6 276 2 639 6 21 2 467 2 468 4 762 6 537 2 153 2 821 2 711 2 823 6 219 6 400 2 345 6 45 2 353 6 229 2 48 4 722 28 168 2 418 28 298 4 55 2 484 6 427 2 555 2 783 2 847 2 787 6 303 2 431 2 790 8 675 2 305 6 129 2 491 6 857 6 795 2 973 2 70 6 626 6 
160 2 550 2 228 2 609 1 
160 2 589 2 
160 2 35 2 899 2 553 2 62 2 110 2 230 2 
160 2 186 2 899 2 
160 2 899 2 6 2 
202 2 550 2 458 2 
160 2 899 2 
314 2 458 2 
160 2 411 2 
550 2 405 2 458 2 
703 2 550 2 871 2 
550 2 727 2 573 2 
550 2 300 2 534 2 
550 2 873 2 819 2 
670 2 458 2 
160 2 572 2 
384 2 871 2 
554 2 573 2 
300 2 870 2 
819 2 364 2 
390 2 458 2 
7 2 819 2 
300 2 800 2 
573 2 667 2 
941 2 871 2 
550 2 405 2 196 2 458 2 
550 2 405 2 196 2 458 2 510 2 
559 2 550 2 458 2 
550 2 889 2 458 2 
32 2 
327 2 159 4 627 2 331 2 176 2 569 2 690 2 734 2 146 2 880 2 267 2 776 2 806 2 904 4 422 2 522 2 525 2 41 6 
550 2 281 2 
35 2 269 2 311 2 533 2 553 2 
311 2 533 2 413 2 
160 2 35 2 659 2 899 2 553 2 110 2 
5 2 735 2 
35 2 616 2 553 2 110 2 
300 2 860 2 
425 2 819 2 
125 2 871 2 
209 2 573 2 
19 2 819 2 573 2 
819 2 573 2 844 2 
693 2 819 2 573 2 
204 2 819 2 573 2 
545 2 323 2 553 2 645 2 35 2 256 6 346 6 947 2 
581 2 458 2 
708 2 
503 2 509 4 3 2 629 2 750 2 516 6 520 4 755 2 275 2 881 2 33 26 652 2 653 2 397 2 157 4 895 2 894 2 656 2 769 2 291 2 49 2 292 2 905 2 57 6 60 2 61 2 791 2 560 4 435 2 437 2 793 2 679 2 181 2 441 2 190 2 84 2 568 4 922 2 801 2 689 4 802 2 691 2 320 4 576 2 930 2 452 2 92 2 457 2 935 2 325 2 206 4 586 8 706 2 97 2 337 2 465 2 101 26 102 6 218 4 348 2 600 2 112 4 224 8 477 2 119 2 723 2 481 2 840 6 240 2 485 2 366 2 852 2 853 2 736 2 371 2 373 2 
503 2 509 4 3 2 629 2 750 2 516 6 520 4 755 2 275 2 642 2 881 2 33 26 652 2 653 2 397 2 157 4 401 2 895 2 894 2 656 2 291 2 769 2 49 2 292 2 905 2 665 2 57 6 61 2 791 2 560 6 435 2 437 2 793 2 679 2 181 2 441 2 190 2 84 2 921 2 568 2 801 2 689 4 802 2 691 2 320 4 576 2 930 2 452 2 92 2 457 2 935 2 325 2 206 4 586 8 212 2 706 2 97 2 337 2 465 2 101 26 102 6 218 4 348 2 600 2 112 4 224 8 829 2 477 2 119 2 723 2 481 2 840 6 240 2 485 2 366 2 852 2 736 2 371 2 373 2 
726 2 
316 2 287 2 
848 2 223 2 208 2 406 2 335 2 833 2 279 2 490 2 957 2 319 2 677 4 248 2 393 2 914 2 454 2 361 2 183 4 565 2 
259 2 379 2 629 2 319 2 265 2 750 2 320 2 511 2 8 2 454 2 12 4 93 2 756 2 15 2 755 2 275 2 208 2 332 2 757 2 939 2 335 2 26 2 279 2 646 6 595 2 149 4 30 2 393 6 102 4 101 6 33 12 653 2 156 2 157 2 474 2 768 4 223 4 713 2 715 2 656 2 406 2 603 4 769 2 833 4 957 2 164 2 837 2 361 4 848 2 849 2 127 4 676 2 490 2 677 4 248 4 914 2 254 6 183 4 565 2 978 2 
259 2 379 2 629 2 319 2 265 2 750 2 320 2 511 2 8 2 454 2 12 4 93 2 271 2 756 2 15 2 755 2 275 2 208 2 332 2 757 2 939 2 335 2 26 2 279 2 646 6 595 2 149 4 30 2 393 4 102 4 101 6 33 12 653 2 156 2 157 2 474 2 768 4 223 4 713 2 715 2 656 2 406 2 603 4 769 2 833 4 957 2 164 2 837 2 361 6 848 2 849 2 127 4 676 2 490 2 677 4 248 4 914 2 254 6 183 4 565 2 
259 2 379 2 629 2 319 2 265 2 750 2 320 2 511 2 8 2 454 2 12 4 93 2 756 2 15 2 755 2 275 2 208 2 332 2 757 2 939 2 335 2 26 2 27 2 279 2 646 6 595 2 149 8 30 2 393 6 102 4 101 6 33 12 653 2 156 2 157 2 474 2 768 4 223 4 713 2 715 2 656 2 406 2 603 4 769 2 833 4 957 2 164 2 837 2 361 6 848 2 849 2 127 4 676 2 490 2 677 4 248 4 914 2 254 6 183 4 565 2 
259 2 379 2 629 2 319 2 265 2 750 2 320 2 511 2 8 2 454 2 12 4 93 2 271 2 756 2 15 2 755 2 275 2 208 2 332 2 757 2 939 2 335 2 26 2 27 2 279 2 646 8 595 2 149 8 30 2 393 6 102 4 101 6 33 12 653 2 156 2 157 2 474 2 768 8 223 4 713 2 715 2 656 2 406 2 603 4 769 2 833 4 957 2 164 2 837 2 361 8 848 2 849 2 127 4 676 2 490 2 677 4 248 4 914 2 254 10 183 4 565 2 
259 2 379 2 629 2 319 2 265 2 750 2 320 2 511 2 8 2 454 2 12 4 93 2 756 2 15 2 755 2 275 2 208 2 332 2 757 2 939 2 335 2 26 2 27 2 279 2 646 6 595 2 149 8 30 2 393 6 102 4 101 6 33 12 653 2 156 2 157 2 474 2 768 8 223 4 713 2 715 2 656 2 406 2 603 4 769 2 833 4 957 2 164 2 837 2 361 6 848 2 849 2 127 4 676 2 490 2 677 4 248 4 914 2 254 10 183 4 565 2 
503 2 259 2 507 1 1 1 509 4 747 6 750 2 8 2 511 2 516 8 517 2 520 4 523 6 12 6 753 1 271 4 755 2 15 2 756 4 275 2 757 2 23 6 26 2 279 2 535 6 30 2 33 46 769 2 291 2 49 2 292 2 772 1 50 2 548 2 301 2 57 6 784 7 560 6 793 2 565 2 83 2 799 2 802 2 319 2 320 4 576 2 580 1 809 2 325 4 93 2 95 2 812 8 329 2 586 4 332 2 814 1 97 2 590 6 815 6 337 2 335 2 593 6 99 2 595 2 341 2 102 6 101 24 109 2 600 2 112 2 603 8 833 4 605 7 606 2 119 2 837 2 361 8 360 2 840 6 362 2 122 6 614 2 848 2 849 2 127 4 373 2 623 2 625 2 379 2 629 2 138 2 636 2 646 12 149 2 881 2 393 4 652 2 653 2 887 6 156 2 654 6 157 4 891 2 401 2 656 2 161 4 657 1 406 2 164 2 167 2 665 2 671 2 178 2 676 2 677 4 679 2 914 2 915 2 183 4 438 6 188 6 441 2 917 2 190 2 194 6 689 4 200 6 930 2 454 2 935 2 459 2 207 4 208 2 704 6 706 2 939 4 465 2 474 4 223 4 224 4 713 2 715 2 226 2 476 6 716 10 957 2 956 2 723 2 236 1 481 12 240 2 485 2 731 2 245 2 967 1 490 2 736 2 248 4 254 2 740 2 
503 2 259 2 379 2 747 6 509 4 629 2 750 2 511 2 8 2 517 2 516 8 138 2 520 4 636 2 523 6 12 6 756 4 15 2 755 2 275 2 757 2 23 6 27 4 26 2 646 12 279 2 149 6 535 6 30 2 881 2 393 8 33 48 652 2 887 6 653 2 654 6 156 2 157 4 891 2 401 2 161 4 656 2 406 2 291 2 769 2 292 2 49 2 164 2 167 2 548 2 50 2 301 2 665 2 57 6 671 2 178 2 560 6 676 2 793 2 677 4 679 4 914 2 915 2 183 4 438 6 565 2 188 6 441 4 917 2 190 2 194 6 83 2 799 2 802 2 689 4 319 2 200 6 576 2 320 4 930 2 454 2 809 2 325 4 935 2 459 2 93 2 701 2 207 4 95 2 812 8 329 2 208 2 586 8 704 6 332 2 97 2 706 2 815 6 590 6 939 4 335 2 337 2 593 6 465 2 99 2 595 2 341 2 101 26 102 6 218 2 473 2 474 4 109 2 112 2 600 2 224 8 223 4 713 2 715 2 226 2 476 6 603 8 716 10 833 4 956 2 957 2 606 2 119 2 723 2 837 2 481 12 360 2 361 8 362 2 840 6 122 6 240 2 614 2 485 2 848 2 731 2 849 2 127 4 245 2 490 2 736 4 248 4 254 2 373 2 623 2 740 2 625 2 
503 2 259 2 379 2 747 6 509 4 629 2 750 2 511 2 8 2 517 2 516 8 138 2 520 4 636 2 523 6 12 6 756 4 15 2 755 2 275 2 757 2 23 6 27 4 26 2 646 12 279 2 149 6 535 6 30 2 881 2 393 8 33 48 652 2 887 6 653 2 654 6 156 2 157 4 891 2 768 4 401 2 161 4 656 2 406 2 769 2 291 2 292 2 49 2 164 2 167 2 548 2 50 2 301 2 665 2 57 6 671 2 178 2 560 6 676 2 793 2 677 4 679 4 914 2 915 2 183 4 438 6 565 2 188 6 441 4 917 2 190 2 194 6 83 2 799 2 802 2 689 4 319 2 200 6 576 2 320 4 930 2 454 2 809 2 325 4 935 2 459 2 93 2 701 2 207 4 95 2 812 8 329 2 208 2 586 8 704 6 332 2 97 2 706 2 815 6 590 6 939 4 335 2 337 2 593 6 465 2 99 2 595 2 341 2 101 26 102 6 218 2 473 2 474 4 109 2 112 2 600 2 224 8 223 4 713 2 715 2 226 2 476 6 603 8 716 10 833 4 956 2 957 2 606 2 119 2 723 2 837 2 481 12 360 2 361 8 362 2 840 6 122 6 240 2 614 2 485 2 848 2 731 2 849 2 127 4 245 2 490 2 736 4 248 4 254 6 373 2 623 2 740 2 625 2 
503 2 259 2 509 6 747 12 750 2 8 2 511 2 516 12 517 2 519 2 520 4 523 12 12 6 271 2 755 2 15 2 756 4 275 2 757 2 531 6 23 6 26 2 27 4 279 2 535 12 30 2 33 52 34 6 768 4 291 2 769 2 49 2 292 4 293 6 50 2 548 2 53 2 301 2 57 8 59 2 560 6 793 2 565 2 83 2 799 2 802 2 319 2 320 4 576 4 809 2 325 4 93 2 95 2 812 8 329 2 586 10 332 2 97 2 590 6 815 6 337 2 335 2 593 12 99 2 595 2 341 2 102 6 101 24 109 2 600 4 112 4 603 8 833 4 606 2 119 2 837 2 361 10 360 2 840 8 362 2 122 6 614 2 848 2 124 2 849 2 127 4 372 6 373 2 625 2 628 2 379 2 629 2 138 2 636 2 145 2 646 16 149 6 881 2 393 10 652 2 653 2 887 6 156 2 654 12 157 4 891 2 401 2 656 2 161 4 406 2 164 2 409 6 167 2 903 6 665 2 671 2 669 6 178 2 676 2 677 4 679 4 914 2 915 2 183 4 438 6 188 6 441 4 917 2 190 2 194 6 689 4 200 12 930 2 454 2 935 2 459 2 701 2 207 4 208 2 704 6 706 2 939 4 465 2 466 6 218 2 473 2 474 4 223 4 224 10 713 2 225 2 715 2 226 2 476 6 716 8 957 2 956 2 723 2 481 10 240 2 485 4 487 6 731 2 245 2 490 2 736 4 248 4 254 6 740 2 257 2 978 2 
223 4 259 2 713 2 603 2 379 2 957 2 8 2 837 2 454 2 361 6 12 2 93 2 208 2 332 2 849 2 335 2 127 2 27 2 26 2 646 4 676 2 279 2 149 6 677 2 30 2 248 4 393 6 254 4 914 2 33 4 183 2 156 2 565 2 474 2 768 4 
503 2 259 2 379 2 509 4 262 2 629 2 750 2 8 2 516 8 520 4 12 2 755 2 275 2 27 2 26 2 646 4 279 2 29 2 149 6 30 2 881 2 393 6 33 28 652 2 653 2 156 2 157 4 401 2 656 2 291 2 769 2 49 2 292 3 164 2 169 2 665 2 57 6 560 6 676 2 677 2 914 2 183 2 565 2 190 2 802 2 689 4 320 4 930 2 454 2 935 2 325 2 93 2 937 2 208 2 332 2 706 2 97 2 337 2 591 2 335 2 708 2 465 2 102 6 101 24 474 2 948 2 223 4 600 3 112 3 713 2 714 3 951 2 603 2 716 2 117 2 957 2 119 2 723 2 837 2 481 4 361 6 840 6 240 2 849 2 127 2 248 4 254 2 373 2 623 2 
259 2 379 2 629 2 319 2 265 2 750 2 320 2 511 2 8 2 454 2 12 4 93 2 756 2 15 2 755 2 275 2 208 2 332 2 757 2 939 2 335 2 26 2 27 2 279 2 646 6 595 2 149 8 30 2 393 6 102 4 101 6 33 12 653 2 156 2 157 2 474 2 768 8 223 4 713 2 715 2 656 2 406 2 603 4 769 2 833 4 957 2 164 2 837 2 361 6 848 2 849 2 127 4 676 2 490 2 677 4 248 4 914 2 254 10 183 4 565 2 
259 2 379 2 629 2 319 2 320 2 750 2 511 2 8 2 454 2 699 2 12 4 93 2 756 2 15 2 755 2 275 2 208 2 813 4 757 2 939 2 335 2 26 2 27 2 279 2 646 8 595 2 149 8 30 2 393 8 101 6 102 4 33 12 653 2 156 2 157 2 474 2 768 8 223 4 713 2 715 2 656 2 406 2 603 4 769 2 833 4 957 2 164 2 837 2 361 6 848 2 849 2 127 4 676 2 490 2 677 4 248 4 914 2 254 10 497 2 183 4 565 2 978 2 
8 2 587 2 379 2 
8 2 587 2 379 2 
503 2 746 2 379 4 629 2 383 2 750 2 511 2 8 6 516 2 520 4 526 2 12 4 271 4 756 2 755 2 275 2 757 2 143 2 879 2 27 4 646 16 149 6 150 2 881 2 393 12 33 24 652 2 653 2 156 2 157 4 888 4 892 2 401 2 768 4 161 2 656 2 406 2 291 2 769 2 660 2 49 2 297 2 665 2 57 2 175 2 560 6 793 4 677 2 679 4 914 4 181 4 183 2 565 2 441 4 917 2 83 2 568 1 689 4 802 2 692 2 88 2 320 4 930 2 454 2 935 2 325 6 207 2 586 4 587 2 706 2 97 2 590 2 939 4 337 2 465 2 595 2 101 16 102 6 474 4 222 2 111 4 224 4 112 2 223 4 827 2 603 4 716 2 833 4 835 2 119 2 723 2 837 2 481 4 361 12 362 2 840 2 240 2 127 2 490 2 969 2 736 4 251 2 248 4 254 6 373 2 978 4 
211 2 226 2 590 2 746 2 716 2 316 2 629 2 319 2 383 2 101 2 960 2 33 4 297 2 517 2 481 2 207 2 40 2 
503 2 746 2 379 4 380 2 629 2 383 2 750 2 511 2 8 6 516 2 520 4 12 4 528 2 271 4 756 4 755 2 275 2 757 2 143 2 879 2 27 4 646 16 149 6 150 2 881 2 393 12 33 24 652 2 653 2 156 2 157 4 888 4 892 2 401 2 768 4 161 2 656 2 406 2 291 2 769 2 49 2 297 2 665 2 57 2 781 2 560 6 793 4 677 2 679 4 914 4 181 4 183 2 565 2 441 4 917 2 83 2 568 1 689 4 802 2 692 2 88 2 320 4 930 2 454 2 935 2 325 6 584 2 586 4 587 2 706 2 97 2 590 2 939 4 337 2 465 2 595 2 101 16 102 6 474 4 222 4 111 4 224 4 112 4 223 4 715 2 827 2 603 4 833 4 835 2 478 2 119 2 723 2 837 2 481 2 361 12 362 2 840 2 240 2 127 2 490 2 736 4 251 2 248 4 254 6 373 2 978 4 
503 2 746 2 379 4 629 2 383 2 750 2 511 2 8 6 516 2 520 4 270 2 12 4 271 4 756 4 755 2 275 2 757 2 143 2 879 2 27 4 646 16 149 6 150 2 881 2 393 12 33 24 652 2 653 2 156 2 157 4 888 4 892 2 401 2 768 4 161 2 656 2 406 2 291 2 769 2 49 2 771 2 297 2 665 2 57 2 560 6 910 2 793 4 677 2 679 4 914 4 181 4 183 2 565 2 441 4 917 2 83 2 568 1 689 4 802 2 692 2 88 2 320 4 930 2 454 2 935 2 325 6 207 2 586 4 587 2 706 2 97 2 590 2 939 4 337 2 465 2 595 2 101 16 102 6 712 2 474 4 222 2 111 4 224 4 112 2 223 4 715 2 827 2 603 4 716 2 833 4 835 2 119 2 723 2 837 2 724 2 481 4 361 12 362 2 840 2 240 2 127 2 490 2 736 4 251 2 248 4 254 6 373 2 978 4 
504 12 503 4 744 2 506 14 509 12 262 2 3 2 264 2 749 2 751 4 750 2 512 2 515 2 516 28 518 4 519 2 520 18 521 2 527 2 529 2 272 2 274 2 755 2 275 2 17 2 18 2 530 2 22 4 759 2 29 2 536 4 33 64 538 2 285 2 539 4 37 12 288 2 540 4 39 2 767 2 766 2 544 2 769 2 291 2 292 19 49 6 295 2 770 4 773 2 774 16 549 2 53 2 779 2 778 4 54 10 57 14 58 2 557 2 302 14 61 2 791 2 560 38 304 2 307 6 793 4 563 2 66 4 68 4 72 2 566 2 74 2 73 4 797 2 77 4 80 2 82 2 84 2 568 2 86 2 570 2 571 2 803 2 320 4 576 46 577 2 804 24 91 16 578 2 807 2 809 2 325 2 583 4 329 2 330 2 586 26 97 2 337 2 816 2 339 2 594 2 820 2 341 4 101 52 102 6 103 2 343 2 344 2 599 2 108 6 112 19 600 16 351 2 828 2 601 2 352 4 602 2 115 4 116 2 117 2 118 10 355 2 834 4 356 12 357 2 606 2 119 2 608 2 358 2 359 2 120 2 840 14 839 2 612 4 124 2 366 2 126 2 130 2 621 2 622 2 373 2 132 2 374 2 624 2 861 2 863 2 864 2 866 2 628 2 136 6 629 2 869 4 386 2 387 4 389 2 638 12 875 4 877 2 643 3 878 3 144 4 145 2 649 4 881 4 391 2 883 2 882 4 884 4 395 2 155 5 652 2 653 2 399 4 157 4 891 2 655 2 893 4 401 4 894 14 404 2 656 2 898 2 661 4 407 2 165 2 412 2 167 2 901 2 169 2 417 4 170 2 421 2 423 16 172 2 665 4 668 4 174 2 430 2 672 16 673 4 674 2 434 2 179 2 435 2 436 2 437 2 912 2 680 2 682 2 185 2 439 2 916 12 683 16 189 2 190 2 686 4 687 2 919 2 689 20 691 2 445 8 446 2 924 2 201 6 927 4 448 2 450 2 928 8 203 2 452 2 930 2 453 2 455 6 456 2 205 4 935 2 936 14 460 2 702 2 461 2 462 6 705 2 706 6 464 14 465 2 213 2 469 10 709 8 944 2 710 12 471 6 472 2 949 18 224 24 225 2 714 2 227 2 717 2 719 2 720 2 231 2 233 2 232 2 723 2 959 1 481 2 237 10 963 2 725 2 962 3 239 2 240 4 728 10 486 3 964 4 485 20 244 3 965 2 733 2 492 2 253 2 738 2 974 2 740 2 741 2 975 2 257 2 976 2 977 16 502 2 
600 2 112 2 292 2 509 2 118 4 446 2 576 6 358 2 516 2 805 2 237 2 839 2 840 2 57 2 486 2 461 2 330 2 965 2 339 2 563 2 101 2 33 2 469 2 190 2 
600 2 112 2 292 2 509 2 118 4 446 2 576 6 358 2 516 2 805 2 237 2 839 2 840 2 57 2 486 2 461 2 330 2 965 2 339 2 563 2 101 2 33 2 469 2 190 2 
600 2 112 2 292 2 509 2 118 4 446 2 576 6 358 2 516 2 805 2 237 2 839 2 840 2 57 2 486 2 461 2 330 2 965 2 339 2 563 2 101 2 33 2 469 2 190 2 
112 3 42 2 43 4 352 2 260 2 136 4 292 3 443 2 445 2 834 2 381 2 446 2 356 4 296 4 414 2 417 2 928 2 516 2 299 2 962 3 964 2 428 2 489 2 333 4 244 3 673 2 732 2 280 3 180 2 649 2 101 4 620 4 68 2 33 10 709 2 342 4 471 6 399 2 683 6 190 2 
136 4 260 2 443 2 445 2 446 2 381 2 201 2 928 2 516 2 583 2 333 4 280 2 649 2 101 4 709 2 33 10 342 4 471 6 399 2 112 2 42 2 43 4 352 2 292 2 834 2 356 4 296 4 414 2 417 2 299 2 962 2 964 2 428 2 489 2 244 2 673 2 732 2 180 2 68 2 620 4 683 4 190 2 377 2 
136 4 260 2 443 2 445 2 446 2 381 2 201 2 928 2 516 2 583 2 333 4 280 2 649 2 101 4 709 2 33 10 342 4 471 6 399 2 112 2 42 2 43 4 352 2 292 2 834 2 356 4 296 4 414 2 417 2 299 2 962 2 964 2 428 2 489 2 244 2 673 2 732 2 180 2 68 2 620 4 683 4 190 2 377 2 
136 4 260 2 443 2 445 2 446 2 381 2 201 2 928 2 516 2 583 2 333 4 280 2 649 2 101 4 709 2 33 10 342 4 471 6 399 2 112 2 42 2 43 4 352 2 292 2 834 2 356 4 296 4 414 2 417 2 299 2 962 2 964 2 428 2 489 2 244 2 673 2 732 2 180 2 68 2 620 4 683 4 190 2 377 2 
136 4 260 2 443 2 445 2 446 2 381 2 201 4 928 2 516 2 583 4 333 4 280 2 649 2 101 4 709 2 33 10 342 4 471 6 399 2 112 2 42 2 43 4 352 2 292 2 834 2 356 4 296 4 414 2 417 2 299 2 962 2 964 2 428 2 489 2 244 2 673 2 732 2 180 2 68 2 620 4 683 4 190 2 377 4 
577 2 929 2 641 2 500 2 166 2 552 2 
442 2 894 2 859 2 367 2 500 2 818 2 855 2 
564 2 707 2 678 2 
136 4 868 2 445 6 834 6 356 12 201 5 928 6 417 6 875 2 964 2 583 4 16 2 462 4 338 2 759 2 28 2 649 6 882 2 216 2 101 6 310 2 33 6 709 6 103 2 69 2 399 6 683 15 38 2 290 4 377 4 
78 2 488 2 81 2 333 2 953 4 604 2 147 2 447 2 415 6 449 2 101 1 416 1 33 1 971 2 620 2 342 2 931 2 697 2 
78 2 81 2 488 2 333 2 953 4 604 2 147 2 447 2 415 6 449 4 971 4 620 2 342 2 931 4 697 2 
78 2 81 8 488 2 333 2 953 4 604 2 147 2 447 6 415 10 449 8 101 1 416 1 33 1 971 8 620 2 342 2 931 8 697 2 
78 2 488 2 333 2 953 2 604 2 147 2 415 2 449 2 971 2 620 2 342 2 931 2 697 2 
264 4 515 4 386 2 520 32 389 6 529 4 274 4 141 2 640 6 877 4 22 10 758 2 881 2 151 6 883 4 394 4 884 6 33 74 155 5 154 2 764 2 396 6 288 2 540 12 401 22 893 18 661 11 49 6 407 4 547 16 901 4 419 2 549 12 665 22 666 4 426 2 174 4 58 2 429 6 788 2 560 92 433 4 304 2 562 4 63 10 912 2 309 2 682 4 72 4 686 18 80 2 82 4 568 1 689 38 923 2 803 2 318 2 927 8 321 4 203 4 695 1 810 2 205 6 702 6 96 2 586 16 706 6 705 4 336 2 464 20 340 2 592 24 817 10 594 2 213 4 820 4 101 66 104 10 344 4 472 4 825 4 949 22 349 4 350 2 828 6 601 4 227 2 114 2 115 8 717 2 233 2 608 6 359 4 239 4 612 8 850 2 126 2 733 2 128 4 619 4 130 2 249 2 250 16 970 4 621 2 622 2 864 4 502 4 
80 2 82 2 568 2 689 10 803 2 318 2 927 4 203 2 386 2 520 10 389 2 810 2 94 2 96 2 586 12 706 2 22 2 464 6 758 2 213 2 881 2 101 20 884 2 33 22 344 2 288 2 347 2 401 8 949 6 828 2 227 2 115 4 717 2 49 2 661 2 900 2 233 2 612 4 665 8 788 2 560 34 733 2 304 2 912 2 130 2 309 2 249 2 621 2 622 2 502 2 
686 4 80 2 82 2 689 18 803 2 264 2 318 2 924 1 927 4 450 2 515 2 203 2 386 2 91 2 520 16 389 1 810 2 205 4 94 2 529 2 274 2 702 2 586 4 705 2 706 6 877 2 22 4 336 2 464 14 758 2 594 2 213 2 881 4 820 2 883 2 884 4 101 34 33 38 765 2 344 2 472 2 288 2 540 4 949 8 401 6 893 4 828 2 601 2 227 2 115 4 717 2 661 4 49 6 407 2 357 1 233 2 901 2 608 2 359 2 549 2 963 2 423 2 612 4 239 2 665 6 174 2 58 2 126 2 850 2 560 38 733 2 304 2 912 2 130 2 249 2 621 2 622 2 682 2 185 2 72 2 502 2 864 2 
378 2 504 6 80 2 82 2 568 2 87 2 4 2 689 20 444 2 803 2 317 2 318 2 574 2 927 4 203 2 632 2 386 2 633 2 634 2 872 2 520 20 139 4 934 2 521 4 810 2 140 2 13 2 586 36 141 2 706 2 22 2 464 6 24 2 817 2 758 2 648 2 213 2 881 2 884 2 101 44 33 46 104 2 886 4 344 2 158 2 288 2 289 2 347 2 401 6 350 2 950 2 828 2 830 2 115 4 661 2 717 2 49 2 163 2 294 2 900 2 479 2 238 2 611 2 612 4 665 6 788 2 432 2 966 2 560 48 617 2 733 6 304 2 369 2 63 2 64 2 247 2 912 2 130 2 249 2 858 2 131 2 737 2 495 4 255 2 621 2 681 2 972 2 862 2 133 2 685 2 502 2 
403 2 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 
907 1 382 1 897 1 263 1 796 1 258 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (359,431) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 430 181 476 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 136 396 254 619 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 144 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 144 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 144 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 144 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfo:new_ppt()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Ppt:Ppt()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min([I)I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.MathMDE:negate(I)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:setDiff([I[I)[I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfo:relate_var()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd(II)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:noDups([I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Debug:logDetail()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.Intern:numIntArrays()I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.PptName:isCombinedExitPoint()Z
daikon.PptName:isEnterPoint()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:size()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3479 | = null
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 1551 | = null
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(S[S)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:subsetOf([F[D)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Debug:logOn()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan; | RETURN | 1528 | return null
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:intern([J)[J
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | ASSIGN | 17372 | = null
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexEqual([I[I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ModBitTracker:num_vars()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
daikon.ValueTuple:size()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:ne(II)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([I[I)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | CONDITION | 21420 | if (x) -> if (!x)
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:justified()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14490 | = null
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ModBitTracker:split(I)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eq(DD)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE:sign(I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONDITION | 65850 | if (x) -> if (!x)
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:subsetOf([D[F)Z
daikon.ProglangType:isPseudoArray()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Invariant:logDetail()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eq(FF)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsGT([II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:subsetOf([J[J)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ModBitTracker:num_samples()I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName:hashCode()I
daikon.Quant:lt(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:FillBuff()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:sameLength([I[I)Z
daikon.ModBitTracker:num_sets()I
daikon.diff.RootNode:RootNode()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaCharStream:ReadByte()C
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:isReverse([I[I)Z
daikon.PptSlice1:arity()I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissing(I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptSlice1:num_samples()I
daikon.PptSlice0:arity()I
daikon.Quant:slice([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant:logOn()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:gte(II)Z
daikon.Quant:subsetOf([S[S)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:max([I)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
31 2 139 4 341 2 95 2 62 2 244 2 10 2 297 2 506 2 
23 2 622 2 433 6 147 6 66 6 364 2 284 2 463 2 651 2 48 2 293 2 
426 4 341 2 95 2 75 6 304 6 634 2 614 2 417 4 295 2 64 2 79 6 640 6 44 2 
162 8 120 12 341 6 95 6 272 2 405 10 320 16 578 10 239 8 275 2 163 2 407 2 385 10 151 10 624 4 388 10 498 16 344 28 324 16 127 2 454 26 502 2 242 6 629 8 390 6 442 4 554 2 158 4 178 8 620 4 
21 4 560 6 
389 2 
271 2 540 2 276 2 359 2 451 2 452 2 362 2 582 4 127 2 126 4 587 2 128 2 49 2 132 2 85 2 281 2 642 2 212 2 341 4 16 2 95 4 96 2 562 2 380 2 99 2 648 2 598 2 518 2 431 2 223 2 292 2 22 2 62 2 434 4 228 2 522 2 525 2 106 2 528 2 191 2 482 2 113 2 447 2 400 4 
0 6 15 5 341 4 120 16 1 4 95 4 289 2 320 20 405 6 578 13 385 13 360 4 151 13 39 4 388 13 498 20 324 20 344 37 454 33 242 4 130 8 629 15 390 4 366 2 246 4 371 4 442 2 337 2 554 2 374 3 55 6 339 4 178 6 
145 2 3 2 359 2 
68 2 561 2 459 22 579 2 415 2 369 2 431 2 294 2 572 2 296 2 533 2 129 2 207 10 50 2 
120 2 320 2 405 4 578 2 148 2 149 2 358 2 383 2 385 2 151 2 388 2 498 2 500 2 344 6 324 2 454 4 629 2 107 2 390 2 509 2 442 2 485 2 91 2 
0 6 120 4 1 4 320 8 243 2 578 4 360 4 385 4 307 2 151 4 158 2 388 4 498 8 324 8 55 6 344 16 454 12 
145 2 57 6 379 2 237 2 3 2 18 2 335 2 359 4 71 2 62 2 446 2 177 2 196 2 409 2 153 2 349 2 424 2 
119 2 100 2 601 2 389 2 607 2 205 2 43 2 391 2 11 2 267 2 
487 2 235 17 404 2 319 1 408 1 166 2 240 2 497 2 8 2 83 2 506 2 333 6 171 2 590 2 248 1 511 2 13 6 89 2 593 2 93 3 425 1 341 30 515 2 95 32 428 2 596 1 343 2 180 6 20 2 602 2 519 2 101 1 184 5 25 2 102 2 348 6 26 1 523 2 609 2 259 1 260 2 263 2 262 4 531 2 354 2 112 6 197 3 535 2 617 1 269 2 448 2 449 1 35 3 538 1 273 3 36 4 450 2 37 2 543 4 623 2 202 6 455 2 278 2 206 1 208 2 210 1 631 2 552 2 54 2 140 2 637 12 211 6 141 1 556 11 286 3 285 2 143 2 469 4 646 1 225 2 61 6 472 2 65 1 566 2 154 2 301 1 477 2 231 2 305 1 662 2 395 1 157 2 483 2 575 2 399 4 401 2 159 2 234 2 668 11 
95 2 650 2 
95 4 331 2 268 2 
288 2 
517 2 181 2 430 2 201 2 583 6 229 2 584 6 586 2 547 2 658 2 330 2 135 2 392 2 476 2 247 2 464 2 310 2 338 2 32 2 484 2 402 2 90 2 117 2 316 6 214 2 118 2 
630 1 567 2 215 2 291 2 
45 2 215 2 
361 2 624 2 645 2 359 2 628 2 537 2 215 2 
361 2 600 2 215 2 
361 2 347 2 215 2 
591 2 567 2 327 2 
361 2 215 2 
370 2 327 2 
287 2 215 2 
352 2 567 2 327 2 
635 2 156 2 567 2 
190 2 460 2 567 2 
342 2 439 2 567 2 
544 2 606 2 567 2 
77 2 327 2 
70 2 215 2 
635 2 365 2 
190 2 318 2 
439 2 105 2 
544 2 581 2 
152 2 327 2 
544 2 328 2 
439 2 189 2 
190 2 250 2 
635 2 33 2 
352 2 253 2 567 2 327 2 
265 2 352 2 253 2 567 2 327 2 
72 2 567 2 327 2 
187 2 567 2 327 2 
182 2 123 2 12 2 363 2 
302 2 585 2 359 2 537 2 
87 2 302 2 585 2 359 2 628 2 537 2 
361 2 624 2 52 2 359 2 537 2 215 2 
76 2 522 2 
624 2 610 2 359 2 537 2 
439 2 530 2 
544 2 603 2 
635 2 574 2 
190 2 573 2 
190 2 544 2 639 2 
190 2 6 2 544 2 
190 2 544 2 384 2 
190 2 544 2 419 2 
470 6 222 2 359 2 494 6 227 2 170 2 29 2 537 2 
327 2 432 2 
526 2 577 2 459 6 508 2 632 2 150 2 306 2 336 2 373 2 636 2 473 2 168 2 465 2 536 4 204 2 667 2 422 4 557 2 
345 2 567 2 
535 2 
487 2 235 4 319 2 491 2 322 2 240 2 497 2 8 2 82 2 329 4 9 2 506 2 171 2 334 4 414 2 418 2 511 2 13 6 592 2 512 4 340 2 341 26 515 2 95 26 180 4 343 2 179 2 20 2 519 2 605 2 102 2 346 2 609 2 104 2 524 2 260 2 109 2 441 2 112 6 443 2 448 2 36 4 543 4 202 2 203 2 455 2 208 2 549 2 631 8 552 2 367 2 54 2 633 2 140 6 637 6 142 2 285 2 644 2 469 4 563 2 653 2 225 2 226 2 61 2 472 2 655 2 154 2 393 2 305 2 662 2 157 2 314 2 399 4 159 2 
487 2 235 4 319 2 491 2 322 2 240 2 497 2 326 2 503 2 8 2 82 2 329 4 9 2 506 2 171 2 334 4 414 2 418 2 511 2 13 6 592 2 512 4 593 1 92 2 340 2 341 26 515 2 95 26 180 5 343 2 179 2 20 2 519 2 605 2 102 2 609 2 104 2 524 2 260 2 109 2 441 2 112 6 443 2 448 2 36 4 37 1 543 4 202 2 203 2 455 2 46 2 208 2 549 2 631 8 552 2 367 2 54 2 633 2 140 6 637 6 142 2 285 2 644 2 469 4 563 2 653 2 225 2 226 2 61 2 472 2 655 2 154 2 305 2 662 2 157 2 399 4 159 2 
111 2 
588 2 160 2 
487 2 406 2 490 2 621 2 493 2 495 4 41 2 323 2 364 4 124 4 48 4 551 4 461 2 332 2 462 2 463 2 511 2 13 4 14 2 421 2 467 2 468 4 378 2 469 2 341 6 95 12 217 2 97 2 98 2 597 2 147 6 381 2 221 2 649 2 290 2 293 2 519 2 654 2 433 6 66 6 103 2 258 2 609 2 569 4 475 2 299 8 351 4 527 10 155 2 110 2 613 2 394 2 662 2 663 2 157 2 445 2 444 2 399 2 618 8 448 2 
487 2 199 2 406 2 490 2 621 2 493 2 495 4 41 2 323 2 364 4 124 4 48 4 504 2 551 4 461 2 332 2 462 2 463 2 511 2 13 4 14 2 421 2 467 2 468 4 341 6 469 2 378 2 95 12 217 2 597 2 147 8 381 2 221 2 649 2 651 2 290 2 59 4 293 2 519 2 654 2 433 8 66 6 103 2 258 2 609 2 569 4 475 2 299 8 351 4 527 10 155 2 110 2 613 2 394 2 662 2 663 2 157 2 445 2 444 2 399 2 618 8 448 2 
569 4 475 2 490 2 461 2 332 2 110 2 394 2 495 4 663 2 433 2 445 2 444 2 66 2 364 2 103 2 258 2 48 2 468 2 
487 2 406 2 490 2 621 2 493 2 495 4 41 2 323 2 364 4 124 4 48 4 551 4 461 2 332 2 462 2 511 2 13 4 14 2 421 2 467 2 468 4 378 2 469 2 341 6 95 12 217 2 97 2 98 2 597 2 147 6 381 2 221 2 649 2 651 2 290 2 293 2 519 2 654 2 433 6 66 4 103 2 258 2 609 2 569 4 475 2 299 4 351 4 527 6 155 2 110 2 613 2 394 2 662 2 663 2 157 2 445 2 444 2 399 2 618 4 448 2 
487 2 406 2 490 2 621 2 493 2 495 4 41 2 323 2 364 4 124 4 48 4 551 4 461 2 332 2 462 2 511 2 13 4 14 2 421 2 467 2 468 4 378 2 469 2 341 6 95 12 217 2 97 2 98 2 597 2 147 6 381 2 221 2 649 2 290 2 293 2 519 2 23 2 654 2 433 4 66 6 103 2 258 2 609 2 569 4 475 2 299 4 351 4 527 6 155 2 110 2 613 2 394 2 662 2 663 2 157 2 445 2 444 2 399 2 618 4 448 2 
487 2 406 2 490 2 621 2 493 2 495 4 41 2 323 2 364 4 124 4 48 4 551 4 461 2 332 2 462 2 463 2 511 2 13 4 14 2 421 2 467 2 468 4 378 2 469 2 341 6 95 12 217 2 97 2 98 2 597 2 147 6 381 2 221 2 649 2 290 2 293 2 519 2 654 2 433 6 66 6 103 2 258 2 609 2 569 4 475 2 299 4 351 4 527 6 155 2 110 2 613 2 394 2 662 2 663 2 157 2 445 2 444 2 399 2 618 8 448 2 
487 2 406 2 490 2 621 2 493 2 495 4 41 2 323 2 364 4 124 4 48 4 551 4 461 2 332 2 462 2 463 2 511 2 13 4 14 2 421 2 467 2 468 4 378 2 469 2 341 6 95 12 217 2 97 2 98 2 597 2 147 8 381 2 221 2 649 2 290 2 293 2 519 2 23 2 654 2 433 6 66 8 103 2 258 2 609 2 569 4 475 2 299 8 351 4 527 10 155 2 110 2 613 2 394 2 662 2 663 2 157 2 445 2 444 2 399 2 618 8 448 2 
487 2 406 2 490 2 621 2 493 2 495 4 41 2 323 2 364 4 124 4 48 4 551 4 461 2 332 2 462 2 463 2 511 2 13 4 14 2 421 2 467 2 468 4 378 2 469 2 341 6 95 12 217 2 97 2 98 2 597 2 147 6 381 2 221 2 649 2 290 2 293 2 519 2 654 2 433 6 66 6 103 2 258 2 609 2 569 4 475 2 299 8 351 4 527 10 155 2 110 2 613 2 394 2 662 2 663 2 157 2 445 2 444 2 399 2 618 8 448 2 
487 2 161 2 490 2 164 1 493 2 495 4 167 2 497 2 7 7 323 4 8 2 9 2 506 2 332 2 331 6 171 2 334 4 173 2 511 2 13 6 176 6 14 2 340 2 515 2 341 24 516 6 180 6 179 2 343 2 17 1 20 2 519 2 23 4 24 2 188 1 27 2 351 8 527 2 355 2 200 1 36 4 357 4 37 2 542 6 543 4 38 2 202 2 40 6 546 2 41 2 364 4 203 2 48 4 47 4 208 12 551 6 552 2 54 2 553 2 213 2 377 2 56 2 558 6 378 2 217 2 559 1 221 2 381 2 224 2 225 2 386 6 61 2 63 6 66 8 569 4 394 2 397 1 399 4 73 2 403 6 235 2 406 2 236 2 240 2 410 2 80 2 81 2 82 2 86 2 416 8 592 4 593 2 421 2 94 2 95 46 98 2 597 2 599 1 433 4 604 2 102 2 103 2 608 6 258 2 609 2 437 2 260 2 612 6 110 2 613 2 112 6 615 2 266 1 444 2 445 2 618 2 270 2 448 2 621 2 122 1 625 10 124 4 455 2 627 6 279 2 631 4 461 2 462 2 138 2 282 6 140 6 637 8 643 2 285 2 468 4 467 2 288 6 469 4 147 12 649 4 650 6 293 4 290 2 654 2 472 2 656 7 475 2 154 2 155 2 478 2 662 2 663 2 157 2 313 2 665 6 315 2 486 2 666 2 159 2 
161 2 487 2 235 2 236 2 406 2 490 2 4 2 493 2 167 2 495 4 240 2 497 2 323 4 410 2 80 2 81 2 8 2 82 2 9 2 331 6 332 2 506 2 86 2 171 2 334 4 173 2 416 8 511 2 13 6 176 6 592 4 512 2 14 2 593 2 594 2 421 2 94 2 340 2 341 26 515 2 95 48 516 6 98 2 343 2 179 2 597 2 180 6 20 2 519 2 433 8 604 2 24 2 102 4 103 2 608 6 258 2 609 2 27 2 437 2 351 8 527 2 260 2 612 6 613 2 110 2 615 2 112 6 445 2 444 2 355 2 618 6 270 2 448 2 36 4 357 4 621 2 37 2 542 6 543 4 38 2 202 2 546 2 40 6 41 2 625 10 203 2 124 4 364 4 455 2 627 6 279 2 208 12 47 4 48 4 631 8 551 6 552 2 461 2 54 2 553 2 462 2 463 4 282 6 138 2 140 6 637 8 643 2 377 2 213 2 285 2 56 2 467 2 558 6 468 4 288 6 378 2 469 4 217 2 147 12 381 2 221 2 649 4 650 6 224 2 290 2 293 4 386 6 225 4 61 2 654 2 472 2 63 6 66 8 569 4 475 2 154 2 155 2 478 2 394 2 662 2 663 2 157 2 313 2 315 2 665 6 399 4 666 2 486 2 73 2 159 4 403 6 
161 2 487 2 235 2 236 2 406 2 490 2 4 2 493 2 167 2 495 4 497 2 240 2 323 4 410 2 80 2 81 2 8 2 82 2 9 2 331 6 332 2 506 2 86 2 171 2 334 4 173 2 416 8 511 2 13 6 176 6 592 4 512 2 14 2 593 2 594 2 421 2 94 2 340 2 341 26 515 2 95 48 516 6 98 2 179 2 597 2 343 2 180 6 20 2 519 2 433 8 604 2 24 2 102 4 103 2 608 6 258 2 609 2 27 2 437 2 351 8 527 6 260 2 612 6 613 2 110 2 615 2 112 6 445 2 444 2 355 2 618 6 270 2 448 2 36 4 357 4 621 2 37 2 542 6 543 4 38 2 202 2 546 2 40 6 41 2 625 10 203 2 124 4 364 4 455 2 627 6 279 2 208 12 47 4 48 4 631 8 551 6 552 2 461 2 54 2 553 2 462 2 463 4 282 6 138 2 140 6 637 8 643 2 377 2 213 2 285 2 56 2 467 2 558 6 468 4 288 6 378 2 469 4 217 2 147 12 381 2 221 2 649 4 650 6 224 2 290 2 293 4 386 6 225 4 61 2 654 2 472 2 63 6 66 8 569 4 299 4 475 2 154 2 155 2 478 2 394 2 662 2 663 2 157 2 313 2 315 2 665 6 399 4 666 2 486 2 73 2 159 4 403 6 
487 2 161 2 490 2 4 2 493 2 495 4 167 2 497 2 323 4 8 2 9 2 507 2 506 2 332 2 331 12 171 2 334 6 173 2 511 2 13 6 176 6 512 2 14 2 340 2 515 2 341 24 516 6 180 6 343 2 179 2 20 2 519 2 23 2 185 6 186 6 24 2 27 2 28 6 351 8 527 6 532 2 353 6 30 6 534 2 355 2 198 6 36 4 357 4 37 2 542 12 543 4 38 2 202 4 40 6 546 2 41 2 364 4 203 2 48 4 47 4 208 10 550 2 551 6 552 2 54 2 553 2 213 2 377 2 558 6 378 2 217 2 221 2 381 2 224 2 225 4 386 6 61 4 63 6 66 10 569 4 394 2 399 4 73 2 403 12 576 2 235 4 236 2 406 2 238 6 240 2 410 2 80 2 81 2 82 2 84 2 86 2 416 8 592 4 593 2 594 2 421 2 94 2 95 52 98 2 597 2 433 10 256 2 604 2 102 4 103 2 608 12 258 2 609 2 437 2 260 2 612 6 110 2 613 2 264 6 112 8 615 2 444 2 445 2 618 6 270 2 448 2 621 2 121 6 625 8 124 4 455 2 627 6 279 2 631 8 461 2 462 2 463 4 137 2 138 2 282 6 140 8 637 12 643 2 285 2 467 2 468 4 288 12 469 4 147 16 649 4 650 12 651 2 293 4 290 2 654 2 472 2 475 2 299 4 154 2 155 2 478 2 662 2 663 2 157 2 313 2 315 2 665 6 486 2 666 2 159 4 
378 2 95 4 406 2 98 2 621 2 147 4 597 2 381 2 493 2 293 2 495 2 654 2 433 6 66 6 124 2 364 4 103 2 258 2 48 4 569 2 299 4 475 2 351 2 551 2 527 4 155 2 462 2 463 2 613 2 110 2 394 2 663 2 444 2 618 6 14 2 
487 2 235 3 404 2 406 2 493 2 495 2 496 2 240 2 497 2 8 2 82 2 83 2 506 2 171 2 334 4 511 2 13 6 592 2 14 2 593 2 341 24 515 2 95 28 98 2 343 2 179 2 180 6 597 2 20 2 519 2 433 6 435 2 103 2 258 2 609 2 351 2 527 2 260 2 110 2 613 2 354 2 112 6 444 2 535 2 618 6 448 2 36 4 621 2 37 2 543 4 202 3 625 2 124 2 364 4 455 2 48 4 208 4 551 2 552 2 54 2 462 2 463 2 140 6 637 8 285 2 56 2 469 4 378 2 218 2 147 4 220 2 381 2 221 2 647 2 382 3 293 2 654 2 61 3 472 2 66 6 569 2 475 2 154 2 155 2 662 2 394 2 663 2 157 2 399 4 
155 2 232 2 381 2 
155 2 232 2 381 2 
487 2 235 2 74 2 2 4 490 2 495 2 240 2 497 2 323 4 241 2 8 2 82 2 506 2 86 2 171 2 172 2 511 2 13 6 592 6 593 2 14 2 421 2 94 2 340 4 514 2 341 16 515 2 427 2 95 24 180 6 343 2 179 2 20 2 519 2 23 4 433 12 521 2 102 4 258 2 609 2 351 4 527 6 260 2 529 2 112 2 443 4 444 2 356 2 618 6 448 2 36 4 357 2 621 2 37 2 543 4 453 2 40 2 625 2 125 2 364 4 124 2 455 2 47 2 208 4 48 4 280 4 631 4 551 4 53 2 461 2 54 2 368 2 463 4 140 2 637 2 285 2 467 2 468 4 469 4 58 2 147 16 381 4 649 2 651 4 290 2 293 4 225 4 472 2 387 2 66 12 660 2 569 2 299 4 154 2 300 2 155 6 478 2 662 2 394 4 157 2 398 2 399 4 232 2 159 4 
660 2 514 2 341 2 95 4 300 2 357 2 308 2 312 2 311 2 40 2 625 2 445 2 604 2 315 2 609 2 160 2 208 2 
487 2 235 4 74 2 2 4 492 2 490 2 495 2 240 2 497 2 323 4 411 2 169 2 8 2 82 2 506 2 86 2 171 2 172 4 511 2 13 6 592 6 420 2 593 2 14 2 421 2 94 2 340 4 514 2 341 16 515 2 427 2 95 24 180 6 343 2 179 2 20 2 519 2 23 4 433 12 102 4 258 2 609 2 351 4 527 6 260 2 112 2 443 4 444 2 618 6 448 2 36 4 621 2 37 2 543 4 453 2 40 2 41 2 124 2 125 2 364 4 455 2 47 2 208 2 48 4 280 4 631 4 551 4 53 2 461 2 134 2 54 2 368 2 463 4 140 2 637 2 285 2 467 2 468 4 469 4 58 2 147 16 381 4 649 4 651 4 290 2 293 4 225 4 472 2 387 2 66 12 660 2 569 2 299 4 154 2 300 2 155 6 478 2 662 2 394 4 157 2 398 2 399 4 232 2 159 4 
487 2 235 2 74 2 488 2 2 4 490 2 495 2 240 2 497 2 323 4 325 2 8 2 82 2 506 2 86 2 171 2 172 2 88 2 511 2 13 6 592 6 593 2 14 2 421 2 94 2 340 4 514 2 341 16 515 2 427 2 95 24 180 6 343 2 179 2 20 2 519 2 23 4 433 12 102 4 258 2 609 2 351 4 527 6 260 2 112 2 443 4 444 2 618 6 448 2 36 4 357 2 621 2 37 2 543 4 453 2 40 2 41 2 625 2 626 2 125 2 364 4 124 2 455 2 47 2 208 4 48 4 280 4 631 4 551 4 53 2 461 2 54 2 368 2 463 4 140 2 637 2 285 2 467 2 468 4 469 4 58 2 147 16 381 4 649 4 651 4 290 2 293 4 225 4 472 2 387 2 66 12 660 2 569 2 299 4 154 2 300 2 155 6 478 2 662 2 394 4 157 2 664 2 398 2 399 4 232 2 159 4 
396 2 456 2 589 2 616 2 78 2 375 2 251 2 136 2 619 2 254 2 
235 3 341 2 95 2 429 2 274 3 202 3 61 3 203 6 298 2 458 2 133 2 552 2 440 2 193 2 334 2 481 2 112 2 140 2 195 2 638 1 637 2 249 2 114 2 116 4 317 2 
235 2 341 2 95 2 429 2 274 2 202 2 61 2 203 6 298 2 458 2 133 2 552 2 440 2 193 2 334 2 481 2 112 2 140 2 195 2 637 2 249 2 114 2 116 4 317 2 
235 2 341 2 95 2 429 2 274 2 202 2 61 2 203 6 298 2 458 2 133 2 552 2 440 2 193 2 334 2 481 2 112 2 140 2 195 2 637 2 249 2 114 2 116 4 317 2 
235 3 341 4 216 2 95 10 320 2 578 2 321 2 385 2 151 2 60 2 471 4 277 2 61 3 388 2 498 2 344 6 324 2 454 4 348 2 42 4 67 6 436 3 659 2 242 2 51 4 350 2 69 2 552 2 479 4 480 2 372 3 510 2 571 3 637 2 211 2 249 2 466 2 252 2 513 4 178 4 
120 2 235 2 341 4 216 2 95 10 320 2 578 2 321 2 385 2 151 2 60 2 471 4 277 2 61 2 388 2 498 2 344 4 324 2 454 4 348 2 42 4 67 6 436 2 659 2 242 2 629 2 51 4 350 2 69 2 552 2 479 4 480 2 554 2 372 2 510 2 571 2 637 2 211 2 249 2 466 2 252 2 513 4 178 4 
120 2 235 2 341 4 216 2 95 10 320 2 578 2 321 2 385 2 151 2 60 2 471 4 277 2 61 2 388 2 498 2 344 4 324 2 454 4 348 2 42 4 67 6 436 2 659 2 242 2 629 2 51 4 350 2 69 2 552 2 479 4 480 2 554 2 372 2 510 2 571 2 637 2 211 2 249 2 466 2 252 2 513 4 178 4 
120 2 235 2 341 4 216 2 95 10 320 2 578 2 321 2 385 2 151 2 60 2 471 4 277 2 61 2 388 2 498 2 344 4 324 2 454 4 348 2 42 4 67 6 436 2 659 2 242 2 629 2 51 4 350 2 69 2 552 2 479 4 480 2 554 2 372 2 510 2 571 2 637 2 211 2 249 2 466 2 252 2 513 4 178 4 
120 4 235 2 341 4 216 2 95 10 320 2 578 2 321 2 385 2 151 2 60 2 471 4 277 2 61 2 388 2 498 2 344 4 324 2 454 4 348 2 42 4 67 6 436 2 659 2 242 2 629 4 51 4 350 2 69 2 552 2 479 4 480 2 554 4 372 2 510 2 571 2 637 2 211 2 249 2 466 2 252 2 513 4 178 4 
555 2 661 2 641 2 261 2 611 2 309 2 
174 2 545 2 367 2 501 2 261 2 423 2 255 2 
341 8 95 10 595 2 541 2 5 2 565 2 519 2 183 2 257 2 499 2 409 1 412 2 568 2 209 2 108 1 245 1 303 2 192 2 570 2 194 1 175 2 283 2 177 1 376 2 115 2 403 2 
0 4 341 6 15 4 120 4 95 6 320 6 562 2 540 2 578 6 564 2 652 2 360 2 385 6 151 6 39 2 388 6 498 6 344 16 324 6 454 12 474 2 242 2 130 2 629 2 230 2 131 2 457 2 413 2 554 2 178 4 
341 1 95 1 489 1 438 7 505 2 539 2 146 2 219 2 19 2 479 2 165 4 471 2 520 2 580 2 548 2 513 2 657 2 34 2 
438 6 505 2 539 2 146 4 219 2 19 2 479 2 165 4 471 2 520 2 580 2 513 2 548 4 657 2 34 4 
341 1 95 1 489 1 438 10 505 2 539 2 146 8 219 8 19 2 479 2 165 4 471 2 520 6 580 2 513 2 548 8 657 2 34 8 
438 2 505 2 539 2 146 2 19 2 479 2 165 2 471 2 580 2 513 2 548 2 657 2 34 2 
144 2 
144 2 
144 2 
144 2 
233 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 333 376 345 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 663 663 73 (84,265) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 663 663 73 (84,265) (84,265) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 663 663 73 (84,265) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 576 572 305 790 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 315 716 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 144 821 716 
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 315 716 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 315 716 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:negate(I)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ProglangType:baseIsScalar()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String; | RETURN | 2498 | return null
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.RootNode:RootNode()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([B[I)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:concat([I[I)[I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:union([I[I)[I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Ppt:Ppt()V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
daikon.ProglangType:isPseudoArray()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:logDetail()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE:gcd([I)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:pow(II)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:setEqual([I[I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7264 | = null
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:subsetOf([D[F)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 3675 | if (x) -> if (!x)
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Debug:logDetail()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:numIntArrays()I
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | STATEMENT | 65291 | stmt -> ;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.Node:Node()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_ntk()I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.MathMDE:pow_fast(II)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ProglangType:isArray()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:eq(JJ)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.Invariant:getConfidence()D
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptSlice1:num_samples()I
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.Invariant:justified()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:intersection([I[I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Debug:logOn()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.InvMap:InvMap()V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long; | RETURN | 14632 | return null
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaCharStream:readChar()C
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:sameLength([I[I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.PptSlice0:arity()I
daikon.Quant:noDups([I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eltsNotEqualIndex([I)Z | CONSTANT | 177979 | 0 -> 1
daikon.inv.Invariant:logOn()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexGT([I[I)Z
daikon.ModBitTracker:split(I)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.ProglangType:isIntegral()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:lt(II)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:lte(II)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:eltwiseLT([I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLteIndex([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
831 2 22 4 329 2 14 2 788 2 557 2 547 2 326 2 846 2 
37 2 12 6 663 2 562 2 474 2 473 6 589 6 218 2 57 2 775 2 559 2 
749 6 0 2 773 2 788 2 789 2 707 6 557 2 832 6 424 2 27 2 10 4 783 4 550 6 
495 2 674 4 403 4 788 6 358 6 316 10 557 6 253 8 848 8 5 29 257 2 535 4 475 2 364 26 881 2 296 16 799 2 261 2 627 12 262 16 644 8 51 10 422 4 889 10 633 6 401 8 58 10 489 10 490 2 583 16 
13 6 567 4 
492 2 
466 2 465 2 588 2 788 4 1 2 405 2 681 2 174 2 738 2 408 2 124 2 742 2 410 2 475 2 851 4 640 2 597 4 859 2 862 2 802 4 547 2 417 2 608 2 25 2 28 2 310 2 147 2 757 2 432 2 314 2 198 2 557 4 767 2 319 2 507 2 619 2 823 2 774 2 515 2 270 4 215 2 52 2 343 2 779 2 
529 2 553 2 612 4 788 4 316 6 557 4 4 6 5 22 364 18 388 6 296 12 78 2 262 12 627 8 726 6 51 6 834 4 889 6 807 4 462 8 489 6 401 4 583 12 
41 2 507 2 245 2 
93 2 622 2 432 2 159 2 844 2 682 2 736 22 407 10 849 2 739 2 179 2 6 2 291 2 478 2 
733 2 499 2 280 2 403 2 316 2 381 2 5 6 256 2 364 4 322 2 296 2 627 2 262 2 51 2 342 2 889 2 780 2 217 2 633 2 489 2 401 2 58 4 583 2 
296 6 278 2 612 2 627 2 262 6 316 4 4 6 51 4 5 14 807 4 889 4 535 2 596 2 364 10 489 4 583 6 388 4 
172 4 785 2 786 4 380 2 250 14 737 2 122 2 436 10 814 4 613 62 154 4 468 2 230 4 255 4 155 2 7 2 507 8 566 4 9 4 823 2 234 4 41 2 133 2 185 2 826 2 481 2 111 2 802 4 776 2 237 2 577 2 373 10 238 2 578 4 86 2 310 4 582 2 609 4 610 2 245 6 
194 2 528 2 176 2 564 2 796 2 689 2 83 2 648 2 243 2 492 2 
221 2 585 1 675 2 676 3 787 2 678 1 224 2 788 32 226 8 121 1 2 2 684 2 227 2 467 2 793 2 469 2 688 2 470 1 11 16 797 2 800 2 16 4 695 2 482 1 803 2 483 2 20 2 606 3 484 3 137 2 24 2 138 2 488 2 141 6 244 2 29 4 378 2 705 2 706 2 710 2 616 4 38 6 505 2 40 2 386 8 387 2 715 1 719 6 390 2 824 4 509 2 158 1 392 16 626 3 722 2 828 2 829 1 160 2 629 12 394 2 521 2 266 3 522 2 523 2 632 2 400 2 839 2 169 32 732 6 841 2 61 2 843 2 62 2 64 2 173 2 65 2 845 2 530 2 846 2 636 2 531 2 175 2 68 1 847 1 70 2 638 2 177 1 178 4 287 2 289 24 290 3 293 2 643 2 77 3 855 2 183 2 856 1 542 2 858 16 413 2 79 1 300 2 82 2 649 2 865 16 419 4 754 4 867 2 308 2 309 2 88 2 91 2 758 3 195 2 313 3 761 2 434 2 557 34 96 1 560 3 442 8 320 3 563 2 321 4 878 5 98 2 99 2 445 2 569 2 100 1 446 3 662 2 104 2 332 32 106 2 574 2 335 24 453 1 455 2 211 2 113 2 777 2 340 2 459 2 581 2 782 2 347 2 
42 2 557 2 
367 2 259 2 557 4 
692 2 
429 2 171 2 402 2 279 2 811 2 149 2 94 2 63 2 251 6 637 2 362 2 471 2 617 2 202 2 717 2 571 2 333 2 297 2 204 6 573 2 112 2 167 2 671 6 870 2 55 2 345 2 277 2 376 2 
570 2 693 2 298 1 152 2 
702 2 
570 2 561 2 422 2 126 2 8 2 507 2 558 2 
570 2 126 2 258 2 
570 2 126 2 537 2 
119 2 693 2 501 2 
570 2 126 2 
119 2 755 2 
570 2 411 2 
119 2 693 2 306 2 
693 2 282 2 546 2 
165 2 693 2 628 2 
693 2 729 2 874 2 
693 2 868 2 679 2 
119 2 730 2 
570 2 873 2 
886 2 546 2 
165 2 60 2 
874 2 382 2 
868 2 242 2 
119 2 334 2 
383 2 868 2 
599 2 874 2 
165 2 894 2 
352 2 546 2 
119 2 693 2 306 2 416 2 
119 2 693 2 306 2 416 2 267 2 
119 2 693 2 207 2 
119 2 693 2 877 2 
480 2 209 2 661 2 102 2 
463 2 430 2 222 2 348 2 602 4 510 2 108 2 863 2 736 6 437 2 458 4 164 2 114 2 85 2 795 2 292 2 323 2 748 2 
693 2 272 2 
561 2 107 2 884 2 507 2 
561 2 107 2 884 2 8 2 507 2 134 2 
570 2 561 2 422 2 631 2 126 2 507 2 
742 2 696 2 
561 2 422 2 624 2 507 2 
441 2 874 2 
868 2 247 2 
103 2 546 2 
165 2 556 2 
165 2 868 2 555 2 
165 2 868 2 454 2 
727 2 165 2 868 2 
165 2 868 2 864 2 
734 2 497 6 561 2 71 2 659 6 507 2 853 2 49 2 
119 2 866 2 
390 2 
675 2 224 2 788 26 354 2 227 2 591 2 469 2 797 4 16 4 695 2 803 6 20 2 137 2 488 2 241 4 141 6 29 4 151 2 36 2 38 2 386 2 387 2 719 4 824 2 158 2 623 2 625 2 828 2 629 8 394 2 522 2 274 2 169 6 732 2 840 2 841 2 735 2 530 2 846 2 845 2 283 2 175 2 178 4 287 2 293 2 643 2 855 2 183 2 184 2 413 2 79 2 300 2 865 6 649 2 303 2 419 2 304 2 754 4 867 2 431 2 761 2 434 2 557 26 443 4 321 2 99 2 98 2 662 2 332 4 574 2 887 2 777 2 892 2 581 2 
675 2 224 2 788 26 227 2 687 2 469 2 797 4 130 2 16 4 695 2 803 6 20 2 137 2 239 2 488 2 241 4 141 6 29 4 151 2 36 2 38 2 386 2 387 2 719 6 824 2 158 2 623 2 625 2 828 2 629 8 394 2 522 2 274 2 169 6 732 2 840 2 841 2 735 2 61 2 62 2 530 2 846 2 845 2 175 2 178 4 287 2 293 2 643 2 855 2 183 2 184 2 413 2 79 2 300 2 865 6 649 2 303 2 419 2 304 2 754 4 867 2 431 2 761 2 434 2 557 26 443 4 321 2 99 2 445 2 98 2 662 2 332 4 574 2 887 2 777 2 892 2 581 2 
568 2 
385 2 233 2 
527 2 842 2 589 6 788 6 355 8 406 2 357 2 123 2 227 2 67 4 590 2 363 4 534 2 178 2 473 6 73 2 643 2 12 6 132 2 236 2 413 2 16 2 695 2 414 2 188 2 652 2 139 2 192 2 425 2 488 2 141 4 491 2 551 8 552 2 704 2 810 2 812 2 504 4 557 12 559 4 37 4 562 2 506 2 618 4 818 2 444 2 769 4 662 2 663 2 43 2 208 10 265 2 394 2 212 2 115 2 54 2 344 2 837 2 273 2 584 4 
527 2 842 2 788 6 589 8 355 8 406 2 357 2 123 2 227 2 590 2 67 4 363 4 178 2 473 8 474 2 73 2 643 2 12 6 132 2 186 2 236 2 413 2 16 2 695 2 414 2 188 2 652 2 192 2 425 2 139 2 488 2 141 4 491 2 551 8 552 2 704 2 810 2 654 2 504 4 557 12 559 4 37 4 562 2 714 4 506 2 618 4 818 2 444 2 769 4 662 2 663 2 43 2 208 10 265 2 394 2 212 2 115 2 54 2 344 2 837 2 273 2 584 4 
769 2 527 2 12 2 842 2 552 2 704 2 810 2 265 2 414 2 188 2 559 2 37 2 590 2 67 4 363 4 473 2 344 2 139 2 
527 2 842 2 589 6 788 6 355 4 406 2 357 2 123 2 227 2 67 4 590 2 363 4 534 2 178 2 473 6 474 2 73 2 643 2 12 4 132 2 236 2 413 2 16 2 695 2 414 2 188 2 652 2 139 2 192 2 425 2 488 2 141 4 491 2 551 4 552 2 704 2 810 2 812 2 504 4 557 12 559 4 37 4 506 2 618 4 818 2 444 2 769 4 662 2 663 2 43 2 208 6 265 2 394 2 212 2 115 2 54 2 344 2 837 2 273 2 584 4 
527 2 842 2 589 6 788 6 355 4 406 2 357 2 123 2 227 2 67 4 590 2 363 4 534 2 178 2 473 4 73 2 643 2 12 6 132 2 236 2 413 2 16 2 695 2 414 2 188 2 652 2 139 2 192 2 425 2 488 2 141 4 491 2 551 4 552 2 704 2 810 2 812 2 504 4 557 12 559 4 37 4 506 2 618 4 818 2 444 2 769 4 662 2 663 2 43 2 208 6 265 2 394 2 212 2 115 2 54 2 344 2 837 2 273 2 57 2 584 4 
527 2 842 2 589 6 788 6 355 8 406 2 357 2 123 2 227 2 67 4 590 2 363 4 534 2 178 2 473 6 73 2 643 2 12 6 132 2 236 2 413 2 16 2 695 2 414 2 188 2 652 2 139 2 192 2 425 2 488 2 141 4 491 2 551 4 552 2 704 2 810 2 812 2 504 4 557 12 559 4 37 4 562 2 506 2 618 4 818 2 444 2 769 4 662 2 663 2 43 2 208 6 265 2 394 2 212 2 115 2 54 2 344 2 837 2 273 2 584 4 
527 2 842 2 589 8 788 6 355 8 406 2 357 2 123 2 227 2 67 4 590 2 363 4 178 2 534 2 473 6 73 2 643 2 12 8 132 2 236 2 413 2 16 2 695 2 414 2 188 2 652 2 139 2 192 2 425 2 488 2 141 4 491 2 551 8 552 2 704 2 810 2 812 2 504 4 557 12 559 4 37 4 562 2 506 2 618 4 818 2 444 2 769 4 662 2 663 2 43 2 208 10 265 2 394 2 212 2 115 2 54 2 344 2 837 2 273 2 57 2 584 4 
527 2 842 2 589 6 788 6 355 8 406 2 357 2 123 2 227 2 67 4 590 2 363 4 534 2 178 2 473 6 73 2 643 2 12 6 132 2 236 2 413 2 16 2 695 2 414 2 188 2 652 2 139 2 192 2 425 2 488 2 141 4 491 2 551 8 552 2 704 2 810 2 812 2 504 4 557 12 559 4 37 4 562 2 506 2 618 4 818 2 444 2 769 4 662 2 663 2 43 2 208 10 265 2 394 2 212 2 115 2 54 2 344 2 837 2 273 2 584 4 
675 2 224 2 680 7 227 2 683 6 469 2 473 4 477 2 479 2 12 8 235 8 692 6 694 6 236 2 16 4 695 2 20 2 23 6 700 2 488 2 491 2 29 4 703 10 704 2 504 6 37 4 38 2 506 2 719 6 508 2 259 6 721 7 43 2 512 2 42 6 265 2 517 2 522 2 271 2 54 4 273 2 57 4 275 2 732 2 527 2 735 2 62 2 530 2 66 2 67 4 284 2 285 1 287 2 73 2 544 4 549 1 303 2 754 4 552 2 760 2 761 2 763 1 557 46 559 4 317 2 768 2 321 2 99 2 769 4 332 2 772 2 574 2 777 2 115 4 344 2 581 12 346 1 584 4 118 2 349 6 788 24 589 12 353 2 355 2 357 2 123 2 590 2 791 6 363 4 594 2 128 6 601 2 132 2 603 6 803 6 605 2 139 2 141 6 146 1 809 2 810 2 150 2 812 2 386 2 387 2 618 8 818 2 822 1 389 6 620 4 824 2 625 4 629 4 394 2 830 1 837 2 169 8 841 2 842 2 635 2 406 2 846 2 178 4 409 2 412 6 643 2 182 2 855 2 183 2 413 2 646 2 414 2 188 2 865 6 415 1 419 2 651 2 652 2 192 2 425 2 876 2 440 6 201 2 443 4 444 2 445 2 662 2 663 4 664 6 450 6 208 2 885 2 887 2 457 6 212 2 670 1 893 2 891 2 673 2 
118 2 675 2 349 6 224 2 353 2 589 12 788 26 355 6 357 2 123 2 683 6 227 2 791 6 590 2 363 4 469 2 594 2 473 8 477 2 479 2 797 2 128 6 12 8 692 6 235 8 601 2 132 2 694 6 236 2 16 4 603 6 695 2 803 6 605 2 20 2 23 6 700 2 139 2 488 2 141 6 491 2 29 4 703 10 809 2 704 2 810 2 150 2 812 2 504 6 37 4 38 2 386 2 387 2 506 2 618 8 818 2 719 6 508 2 389 6 620 4 824 4 259 6 42 6 512 2 43 2 625 4 265 2 517 2 629 8 394 2 522 2 271 2 54 4 837 2 273 2 275 2 732 2 169 8 841 2 527 2 842 2 735 2 635 2 62 2 406 2 846 2 530 2 66 2 284 2 67 4 409 2 178 4 287 2 412 6 73 2 182 2 643 2 855 2 183 2 544 4 413 2 646 2 187 2 414 2 188 2 865 6 303 2 419 4 754 4 651 2 652 2 425 2 192 2 428 2 552 2 760 2 761 2 557 48 559 4 876 2 317 2 768 2 440 6 562 4 201 2 443 4 321 4 444 2 99 2 445 2 769 4 662 2 663 4 664 6 332 2 772 2 450 6 574 2 208 2 885 2 457 6 887 2 212 2 777 2 115 4 891 2 893 2 344 2 673 2 581 12 584 4 
118 2 675 2 349 6 224 2 353 2 589 12 788 26 355 6 357 2 123 2 683 6 227 2 791 6 590 2 363 4 469 2 594 2 473 8 477 2 479 2 797 2 128 6 12 8 692 6 235 8 601 2 132 2 694 6 236 2 16 4 603 6 695 2 803 6 605 2 20 2 23 6 700 2 139 2 488 2 141 6 491 2 29 4 703 10 809 2 704 2 810 2 150 2 812 2 504 6 37 4 38 2 386 2 387 2 506 2 618 8 818 2 719 6 508 2 389 6 620 4 824 4 259 6 42 6 512 2 43 2 625 4 265 2 517 2 629 8 394 2 522 2 271 2 54 4 837 2 273 2 275 2 732 2 169 8 841 2 527 2 842 2 735 2 635 2 62 2 406 2 846 2 530 2 66 2 284 2 67 4 409 2 178 4 287 2 412 6 73 2 182 2 643 2 855 2 183 2 544 4 413 2 646 2 187 2 414 2 188 2 865 6 303 2 419 4 754 4 651 2 652 2 425 2 192 2 428 2 551 4 552 2 760 2 761 2 557 48 559 4 876 2 317 2 768 2 440 6 562 4 201 2 443 4 321 4 444 2 99 2 445 2 769 4 662 2 663 4 664 6 332 2 772 2 450 6 574 2 208 6 885 2 457 6 887 2 212 2 777 2 115 4 891 2 893 2 344 2 673 2 581 12 584 4 
675 2 224 2 227 2 683 6 685 6 686 6 469 2 473 10 474 2 477 2 479 2 12 10 235 8 692 12 694 12 236 2 16 4 695 2 17 2 20 2 23 6 700 2 488 2 491 2 29 4 703 8 704 2 34 6 504 6 503 6 37 4 38 4 506 2 719 6 508 2 259 12 43 2 512 2 42 12 265 2 516 2 517 2 522 2 271 2 54 4 273 2 57 2 275 2 732 4 527 2 735 2 62 2 530 2 66 2 67 4 284 2 287 2 73 2 746 6 544 4 303 4 754 4 551 4 552 2 760 2 761 2 557 52 559 4 317 2 768 2 562 4 321 4 565 6 99 2 769 4 332 4 772 2 574 2 777 2 115 4 344 2 581 10 584 4 118 2 349 6 788 24 589 16 353 2 355 6 357 2 123 2 590 2 791 6 792 6 363 4 594 2 797 2 128 6 601 2 600 2 132 2 603 6 803 8 605 2 139 2 141 6 809 2 810 2 150 2 812 2 815 2 386 4 387 2 618 8 818 2 389 12 620 4 824 4 625 4 629 10 394 2 397 6 166 2 837 2 169 12 841 2 842 2 635 2 406 2 846 2 178 4 409 2 412 6 643 2 182 2 855 2 183 2 413 2 646 2 187 2 414 2 188 2 865 8 419 4 651 2 652 2 192 2 425 2 191 6 428 2 199 2 876 2 440 6 201 2 443 6 444 2 445 2 662 2 663 4 664 6 450 6 208 6 885 2 887 2 457 12 212 2 213 2 216 2 891 2 673 2 
527 2 551 4 842 2 552 2 589 4 355 6 812 2 504 2 357 2 557 4 559 4 590 2 67 2 37 4 363 2 562 2 473 6 618 2 818 2 444 2 73 2 12 6 663 2 132 2 43 2 208 4 265 2 212 2 652 2 425 2 192 2 344 2 139 2 491 2 584 2 
221 2 675 2 224 2 589 4 788 24 355 6 357 2 227 2 467 2 590 2 363 2 469 2 473 6 12 6 132 2 236 2 16 4 695 2 803 6 19 2 20 2 485 3 699 2 139 2 488 2 141 6 491 2 29 4 703 2 812 2 504 2 709 2 37 4 38 3 387 2 618 2 818 2 719 6 390 2 825 2 43 2 625 2 265 2 394 2 521 2 50 2 522 2 169 8 732 3 841 2 527 2 842 2 735 2 62 2 530 2 846 2 67 2 178 4 287 2 73 2 643 2 855 2 183 2 413 2 865 6 754 4 652 2 192 2 425 2 552 2 761 2 557 28 559 4 562 2 443 4 444 2 99 2 445 2 662 2 663 2 332 3 574 2 208 2 887 2 212 2 893 2 344 2 581 4 584 2 
132 2 444 2 375 2 
132 2 444 2 375 2 
675 2 224 2 788 16 589 8 355 6 227 2 590 2 363 2 469 2 473 8 12 8 598 2 132 2 16 4 695 2 803 2 20 2 135 2 139 2 488 2 141 6 29 4 703 2 504 2 37 4 713 2 387 2 618 4 719 6 620 2 824 4 625 2 45 2 265 2 629 4 394 2 522 2 524 2 169 2 735 2 62 2 530 2 846 2 67 2 178 4 287 2 73 2 643 2 855 2 183 2 544 2 413 2 80 2 865 2 419 4 304 4 754 4 426 2 551 2 761 2 435 2 557 24 559 4 440 2 562 4 658 2 321 4 444 2 99 2 445 2 447 2 662 2 663 4 332 2 574 2 208 2 887 2 212 2 777 2 219 2 581 4 220 2 584 2 
544 2 249 2 225 2 788 2 695 2 188 2 557 4 135 2 713 2 440 2 594 2 486 2 581 2 479 2 220 2 233 2 703 2 
675 2 224 2 788 14 589 8 355 6 227 2 590 2 363 2 469 2 593 2 473 8 12 8 598 2 132 2 16 4 695 2 803 2 20 2 135 2 139 2 488 2 141 6 29 4 504 2 37 4 713 2 387 2 618 4 719 6 620 2 824 4 625 2 45 2 265 2 629 4 394 2 522 2 524 2 169 2 735 2 62 2 530 2 846 2 67 2 178 4 287 2 73 2 643 2 855 2 183 2 413 2 80 2 865 2 419 4 304 4 754 4 84 2 426 2 551 2 761 2 435 2 557 20 559 4 562 4 658 2 321 4 444 2 99 2 445 2 447 2 662 2 663 4 332 4 574 2 208 2 887 2 212 2 777 2 219 4 581 2 584 2 
675 2 224 2 788 16 589 8 355 6 227 2 590 2 363 2 469 2 473 8 12 8 598 2 132 2 16 4 695 2 803 2 20 2 135 2 139 2 488 2 141 6 29 4 703 2 504 2 37 4 713 2 387 2 618 4 719 6 620 2 824 4 625 2 45 2 265 2 629 4 394 2 522 2 524 2 169 2 735 2 62 2 530 2 846 2 67 2 178 4 287 2 73 2 643 2 855 2 183 2 544 2 413 2 80 2 865 2 419 4 304 4 754 4 426 2 551 2 761 2 435 2 557 24 559 4 440 2 562 4 658 2 321 4 444 2 99 2 445 2 447 2 662 2 663 4 332 2 574 2 208 2 887 2 212 2 777 2 219 2 581 4 220 2 584 2 
118 2 351 2 224 2 788 20 353 2 227 2 790 2 5 6 469 2 231 2 364 4 129 2 601 2 16 4 695 2 803 6 20 2 697 2 487 2 700 2 240 6 488 2 489 2 141 6 29 2 809 2 612 2 708 2 614 2 38 2 384 2 387 2 719 3 819 2 388 4 511 2 625 2 262 2 394 2 396 2 51 2 398 2 169 8 732 2 841 2 276 2 735 2 635 2 62 1 530 2 846 2 178 4 743 2 287 2 643 2 855 2 296 2 183 2 860 2 543 2 413 2 81 1 189 2 865 6 754 2 305 2 869 2 311 2 200 2 316 2 557 26 657 2 443 4 445 1 99 2 662 2 332 2 572 2 576 2 667 2 210 2 888 4 889 2 461 2 781 1 672 2 581 2 583 2 
328 1 771 2 332 3 857 2 433 2 109 4 788 2 557 2 803 2 604 2 668 2 338 2 865 2 35 2 439 2 303 6 38 3 97 2 443 2 145 2 871 2 169 2 732 3 841 2 691 3 
771 2 332 2 857 2 433 2 109 4 788 2 557 2 803 2 604 2 668 2 338 2 865 2 35 2 439 2 303 6 38 2 97 2 443 2 145 2 871 2 169 2 732 2 841 2 691 2 
771 2 332 2 857 2 433 2 109 4 788 2 557 2 803 2 604 2 668 2 338 2 865 2 35 2 439 2 303 6 38 2 97 2 443 2 145 2 871 2 169 2 732 2 841 2 691 2 
788 4 358 2 5 6 532 2 592 4 850 3 639 2 364 4 181 2 11 2 127 2 296 2 644 4 645 2 369 3 87 2 193 2 489 2 756 2 316 2 557 10 35 2 712 3 157 6 332 3 392 2 262 2 451 2 161 4 723 2 456 4 724 4 725 4 51 2 889 2 168 2 583 2 732 3 169 2 841 2 
788 4 358 2 5 4 532 2 592 4 850 2 639 2 364 4 181 2 11 2 127 2 296 2 644 4 645 2 369 2 87 2 193 2 489 2 495 2 756 2 316 2 557 10 35 2 712 2 157 6 332 2 392 2 262 2 451 2 627 2 161 4 723 2 456 4 724 4 725 4 51 2 889 2 168 2 401 2 583 2 732 2 169 2 841 2 
788 4 358 2 5 4 532 2 592 4 850 2 639 2 364 4 181 2 11 2 127 2 296 2 644 4 645 2 369 2 87 2 193 2 489 2 495 2 756 2 316 2 557 10 35 2 712 2 157 6 332 2 392 2 262 2 451 2 627 2 161 4 723 2 456 4 724 4 725 4 51 2 889 2 168 2 401 2 583 2 732 2 169 2 841 2 
788 4 358 2 5 4 532 2 592 4 850 2 639 2 364 4 181 2 11 2 127 2 296 2 644 4 645 2 369 2 87 2 193 2 489 2 495 2 756 2 316 2 557 10 35 2 712 2 157 6 332 2 392 2 262 2 451 2 627 2 161 4 723 2 456 4 724 4 725 4 51 2 889 2 168 2 401 2 583 2 732 2 169 2 841 2 
788 4 358 2 5 4 532 2 592 4 850 2 639 2 364 4 181 2 11 2 127 2 296 2 644 4 645 2 369 2 87 2 193 2 489 2 495 4 756 2 316 2 557 10 35 2 712 2 157 6 332 2 392 2 262 2 451 2 627 4 161 4 723 2 456 4 724 4 725 4 51 2 889 2 168 2 401 4 583 2 732 2 169 2 841 2 
882 2 541 2 341 2 379 2 89 2 711 2 
438 2 184 2 541 2 223 2 880 2 337 2 607 2 
494 1 170 1 377 1 380 1 788 8 762 2 656 2 557 10 227 2 615 2 180 2 854 2 105 2 368 2 391 2 694 2 110 2 545 2 669 2 237 1 136 2 420 2 728 2 731 2 140 2 143 2 
200 2 
246 4 750 2 514 2 205 2 788 1 264 2 161 2 393 1 751 2 47 2 557 1 724 2 592 2 307 2 808 2 74 2 295 2 325 7 
246 4 750 2 514 2 205 2 264 2 161 2 751 4 47 2 724 2 592 2 307 4 808 2 74 4 295 2 325 6 
246 4 750 6 514 8 205 2 788 1 264 2 161 2 393 1 751 8 47 2 557 1 724 2 592 2 307 8 808 2 74 8 295 2 325 10 
246 2 205 2 264 2 161 2 751 2 47 2 724 2 592 2 307 2 808 2 74 2 295 2 325 2 
464 2 784 6 677 2 586 10 120 6 350 4 587 4 788 134 359 2 356 26 361 4 3 4 228 18 595 4 472 24 232 22 366 4 690 6 798 10 15 24 18 6 370 2 805 4 372 12 806 24 374 16 26 8 142 6 29 112 144 2 496 1 498 16 148 8 500 4 31 4 502 24 32 2 611 8 33 5 153 6 813 6 252 4 39 4 254 2 156 2 387 14 817 6 716 2 718 6 719 248 820 6 821 2 513 2 827 8 44 24 519 10 395 8 48 16 520 4 269 6 268 6 630 8 835 8 53 6 525 2 59 34 526 90 404 6 62 58 69 4 286 10 533 2 740 4 288 2 744 8 538 10 745 2 642 8 747 50 76 84 75 90 855 14 540 92 539 6 861 2 647 4 753 6 301 6 548 42 418 42 190 4 754 88 421 16 423 6 90 4 653 4 872 24 92 6 312 2 759 124 196 4 197 6 655 6 554 4 315 2 557 150 95 36 875 26 765 10 99 8 445 58 324 4 879 4 101 2 327 18 448 11 449 4 330 10 770 6 203 10 883 4 575 17 214 28 778 4 890 6 579 12 117 8 580 2 
281 4 587 2 788 28 62 2 741 2 794 2 536 2 852 4 641 2 294 2 690 2 855 2 299 2 752 2 301 2 650 2 302 2 21 2 698 2 806 2 754 12 374 2 144 2 29 12 872 2 92 2 30 2 498 2 148 2 759 2 248 2 33 2 557 28 766 2 318 2 387 2 716 2 817 2 660 2 719 26 445 2 99 2 821 2 621 2 260 2 665 2 513 2 827 2 44 2 263 2 46 2 666 2 163 2 395 2 48 2 630 2 399 2 214 20 339 4 836 2 838 2 
784 4 677 2 586 4 120 4 788 70 359 2 361 4 360 4 228 10 125 4 229 16 595 2 476 4 365 2 366 4 690 4 131 10 801 2 18 4 804 2 371 10 374 10 142 4 29 44 144 2 493 4 498 10 500 4 148 2 31 4 502 8 153 4 813 4 39 4 816 8 387 6 817 2 716 2 718 4 719 104 820 4 821 2 720 2 513 2 827 2 162 4 518 4 519 4 48 10 630 2 268 4 833 2 53 4 56 2 59 30 634 32 404 4 62 28 740 4 288 2 72 16 744 4 538 4 642 4 294 2 747 8 76 24 855 6 540 24 647 4 753 4 548 8 301 4 418 16 754 36 421 8 423 4 90 4 653 4 92 4 759 24 196 4 655 4 197 4 315 2 557 78 95 6 765 6 764 8 99 2 445 30 101 2 449 4 770 4 331 4 203 4 575 10 206 8 452 8 336 10 214 14 778 4 116 2 460 2 890 4 579 14 117 6 
586 2 120 4 587 1 788 26 62 8 359 1 361 2 228 2 69 2 533 2 595 3 288 1 232 10 744 4 538 2 642 1 294 2 690 4 855 2 861 2 370 2 753 4 301 4 754 14 421 6 26 2 374 6 427 2 144 2 29 14 92 4 312 2 498 6 148 2 759 8 500 2 33 2 315 2 557 28 95 2 765 2 387 2 817 3 716 2 718 4 719 36 445 8 99 2 821 2 448 2 203 2 827 2 513 2 575 2 519 2 520 2 48 6 630 2 214 15 580 2 117 5 525 2 59 8 
701 2 

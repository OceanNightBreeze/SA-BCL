#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (93,215,683,695,944) (93,215,683,695,944) (93,215,683,695,944) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (307,319) 949 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (128,377,580,686,1016) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 210 216 317 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.NullPointerException (852,993) (852,993) (408,498) (408,498) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:isPrestate()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z | STATEMENT | 149930 | stmt -> ;
daikon.Quant:eltsEqual([II)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_13()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Debug:logDetail()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.Invariant:logDetail()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Debug:logOn()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isDerived()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.FormatTestCase:passes()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:lt(II)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V | STATEMENT | 2624 | stmt -> ;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_vars()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptSlice1:num_samples()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.Quant:eltsGtIndex([I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >=
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I | ASSIGN | 181361 | = null
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern([J)[J
daikon.Quant:gte(II)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:indexOf([I[I)I | CONSTANT | 22394 | 0 -> 1
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:jj_3R_57()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:lexGTE([I[I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.PptSlice2:arity()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_48()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 3667 | return null
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:min([I)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.RootNode:RootNode()V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:concat([I[I)[I
daikon.inv.Invariant:logOn()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:relate_var()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptSlice1:arity()I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:memberOf(J[J)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | STATEMENT | 47994 | stmt -> ;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.Node:Node()V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3R_163()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z | ASSIGN | 16186 | = null
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.Quant:eq(II)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.ProglangType:isArray()Z
daikon.ValueTuple:size()I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_134()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ProglangType:base()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:arity()I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_135()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:hashCode()I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:ne(II)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3_1()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:eltsLTE([II)Z
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaCharStream:getEndColumn()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
357 2 593 2 252 2 230 4 394 2 84 2 483 2 341 2 995 2 
536 2 754 6 1054 6 490 6 142 2 193 2 731 2 940 2 873 2 67 2 452 2 
891 6 481 6 496 6 483 2 282 2 893 2 995 2 1032 6 110 2 291 2 770 2 517 4 571 4 
781 16 518 2 74 2 750 26 861 2 75 8 955 2 374 16 348 12 347 4 81 2 989 4 188 2 797 10 477 10 904 8 690 16 221 10 483 6 726 8 420 6 995 6 1033 8 587 29 842 2 769 4 58 4 879 10 359 6 598 10 
608 6 997 4 
706 2 
781 2 206 2 750 4 374 2 348 2 757 2 477 2 797 2 904 2 690 2 832 2 221 2 656 2 628 2 587 6 769 2 879 2 946 2 805 2 1066 2 359 2 776 2 598 4 
781 8 690 8 890 2 120 2 221 4 553 6 610 4 750 12 587 15 374 8 348 5 879 4 393 4 441 6 989 2 477 4 797 4 
854 2 918 2 3 2 175 2 367 2 679 4 1045 2 1009 4 242 2 712 4 561 2 894 2 433 4 402 2 289 2 1049 2 293 4 296 2 322 14 1020 10 11 4 570 2 301 4 446 4 932 2 191 4 307 8 544 10 999 2 229 62 198 2 170 2 808 4 423 2 667 2 492 2 235 4 464 4 851 4 638 6 
706 2 467 2 209 2 796 2 187 2 798 2 192 2 844 2 977 2 66 2 
1045 2 747 2 872 2 307 2 147 2 860 2 484 2 612 2 1012 2 955 2 613 2 877 2 663 2 549 2 313 2 43 2 235 4 236 2 446 2 
674 2 781 32 553 6 610 4 750 48 521 2 374 32 790 8 348 22 405 6 682 4 10 4 441 6 967 2 899 2 477 16 797 16 188 2 690 32 904 18 221 16 483 4 994 4 726 6 420 4 265 6 995 4 587 54 804 6 769 2 879 16 809 6 774 4 393 4 234 2 62 4 359 4 598 6 952 2 
307 2 894 2 638 2 
399 2 582 2 831 2 139 2 223 2 304 10 449 2 319 2 512 2 957 22 197 2 254 2 976 2 13 2 
4 4 5 1 146 4 145 6 956 4 292 1 960 2 964 2 14 2 415 1 829 2 693 2 169 2 695 2 25 2 23 2 978 1 172 2 556 4 432 1 558 2 179 2 435 5 436 2 866 4 867 2 46 2 447 1 995 24 448 2 59 2 463 6 336 1 1005 3 749 2 751 2 215 2 617 2 762 6 621 2 350 2 1025 1 483 22 90 1 93 2 95 1 911 2 916 1 1042 2 919 2 369 2 503 2 111 1 505 2 792 1 252 2 258 2 1058 1 931 2 1060 1 263 2 510 2 269 2 945 5 271 2 812 2 275 1 670 1 
457 2 
497 2 995 2 
294 2 995 4 716 2 
280 4 140 2 401 8 286 4 680 4 825 2 155 2 410 2 157 2 302 26 412 12 535 4 303 2 830 2 838 34 309 84 21 2 22 2 843 2 975 30 28 10 425 2 849 20 550 2 34 2 174 2 431 26 177 2 711 26 38 2 715 2 434 2 321 2 438 2 722 14 568 2 185 16 574 84 445 10 583 2 194 10 51 2 52 2 727 10 996 2 878 2 880 2 200 2 1001 2 884 26 202 26 604 2 71 6 344 26 211 2 895 2 753 2 1013 28 1014 4 615 2 616 2 1017 2 214 26 760 2 619 4 87 2 479 2 907 6 767 84 1031 14 627 2 768 2 94 26 1034 2 488 2 96 20 489 2 912 2 772 2 636 26 360 2 103 2 363 2 784 2 243 2 921 6 373 2 112 20 249 2 376 2 378 6 113 2 379 10 651 2 933 4 384 14 934 2 126 16 127 26 388 10 941 2 943 2 513 2 391 4 392 2 665 12 950 2 814 8 1071 12 1073 26 
311 2 857 2 756 2 520 1 
857 2 310 2 
9 2 58 2 857 2 307 2 949 2 440 2 487 2 
1065 2 9 2 857 2 
1016 2 9 2 857 2 
311 2 992 2 264 2 
9 2 857 2 
992 2 8 2 
857 2 1000 2 
311 2 992 2 345 2 
311 2 421 2 935 2 
311 2 909 2 875 2 
311 2 648 2 581 2 
311 2 240 2 625 2 
121 2 992 2 
1 2 857 2 
421 2 905 2 
720 2 875 2 
648 2 312 2 
240 2 606 2 
799 2 992 2 
509 2 240 2 
648 2 355 2 
800 2 875 2 
421 2 560 2 
311 2 106 2 992 2 345 2 
311 2 106 2 992 2 694 2 345 2 
311 2 992 2 68 2 
311 2 734 2 992 2 
822 2 858 2 27 2 1039 2 
307 2 949 2 609 2 645 2 
307 2 949 2 609 2 487 2 645 2 151 2 
9 2 58 2 857 2 307 2 949 2 915 2 
176 2 661 2 
58 2 307 2 949 2 702 2 
648 2 794 2 
240 2 273 2 
421 2 596 2 
1046 2 875 2 
240 2 1019 2 875 2 
853 2 240 2 875 2 
240 2 714 2 875 2 
240 2 538 2 875 2 
84 2 307 2 949 2 396 2 788 2 
992 2 7 2 
580 4 782 2 897 2 377 2 207 2 128 2 686 2 
311 2 650 2 
960 2 
145 4 146 4 956 4 407 2 964 2 12 2 969 2 688 2 159 2 829 2 693 2 541 2 542 2 972 2 25 2 23 6 978 2 172 2 173 8 556 4 179 2 37 2 181 2 564 2 435 2 985 2 867 2 866 4 46 2 995 26 448 2 455 2 736 2 463 4 64 4 340 2 749 2 751 2 752 2 617 2 1021 2 217 2 759 2 475 2 762 6 1029 2 483 26 228 2 911 2 493 2 102 8 104 2 919 2 107 2 643 2 503 2 111 2 505 2 252 2 508 4 258 6 380 2 931 2 1059 2 386 2 263 2 387 2 510 2 269 2 131 4 945 2 271 6 514 2 812 2 397 4 278 2 
145 6 146 4 956 4 964 2 12 2 969 2 159 2 829 2 693 2 541 2 542 2 308 2 972 2 25 2 23 6 978 2 426 2 172 2 173 8 556 4 179 2 37 2 181 2 564 2 435 2 436 2 985 2 867 2 866 4 46 2 995 26 448 2 54 2 455 2 736 2 463 4 64 4 340 2 749 2 751 2 752 2 617 2 1021 2 217 2 759 2 475 2 762 6 1024 2 621 2 1029 2 483 26 228 2 911 2 493 2 102 8 919 2 107 2 643 2 503 2 111 2 505 2 252 2 508 4 258 6 380 2 931 2 1059 2 386 2 263 2 387 2 510 2 269 2 131 4 945 2 271 6 514 2 812 2 397 2 278 2 
450 2 
984 2 288 2 
327 2 833 4 352 2 624 4 143 2 766 2 585 2 1010 2 168 2 940 2 403 2 452 2 356 2 490 2 1054 2 755 2 600 2 777 2 
0 2 673 2 676 2 678 2 143 2 284 2 1010 4 403 2 469 2 614 4 681 4 754 6 962 4 755 2 17 6 218 2 762 4 829 2 833 4 352 2 624 4 483 6 766 2 168 2 20 4 911 2 356 2 25 2 490 4 700 2 777 2 783 2 556 2 559 2 505 2 1054 6 323 2 255 2 866 2 442 2 572 2 327 2 931 2 124 2 585 2 802 2 510 2 728 2 995 12 730 2 940 4 731 2 873 2 451 2 452 4 590 2 331 4 807 2 812 2 600 2 
0 2 673 2 676 2 678 2 143 2 284 2 1010 4 403 2 469 2 614 4 681 4 754 6 962 4 755 2 17 6 218 2 762 4 829 2 833 4 352 2 624 4 483 6 766 2 168 2 20 4 911 2 356 2 25 2 490 6 700 2 777 2 783 2 556 2 559 2 505 2 1054 4 323 2 255 2 866 2 442 2 572 2 327 2 931 2 124 2 585 2 802 2 510 2 728 2 995 12 730 2 940 4 873 2 451 2 452 4 590 2 331 4 807 2 812 2 600 2 67 2 
0 2 673 2 676 2 678 2 143 2 284 2 1010 4 403 2 469 2 614 4 681 4 754 6 962 4 755 2 17 6 218 2 762 4 536 2 829 2 833 4 352 2 624 4 483 6 766 2 168 2 20 8 911 2 356 2 25 2 490 6 700 2 777 2 783 2 556 2 559 2 505 2 1054 6 323 2 255 2 866 2 442 2 572 2 327 2 931 2 124 2 585 2 802 2 510 2 728 2 995 12 730 2 940 4 873 2 451 2 452 4 590 2 331 4 807 2 812 2 600 2 
0 2 673 2 676 2 678 2 143 2 284 2 1010 4 403 2 469 2 614 8 681 4 754 8 962 4 755 2 17 10 218 2 762 4 536 2 829 2 833 4 352 2 624 4 483 6 766 2 168 2 20 8 911 2 356 2 25 2 490 8 700 2 777 2 783 2 556 2 559 2 505 2 1054 6 323 2 255 2 866 2 442 2 572 2 327 2 931 2 124 2 585 2 802 2 510 2 728 2 995 12 730 2 940 4 873 2 451 2 452 4 590 2 331 4 807 2 812 2 600 2 67 2 
0 2 673 2 676 2 678 2 143 2 284 2 1010 4 403 2 469 2 614 8 681 4 754 6 962 4 755 2 17 10 218 2 762 4 536 2 829 2 833 4 352 2 624 4 483 6 766 2 168 2 20 8 911 2 356 2 25 2 490 6 700 2 777 2 783 2 556 2 559 2 505 2 1054 6 323 2 255 2 866 2 442 2 572 2 327 2 931 2 124 2 585 2 802 2 510 2 728 2 995 12 730 2 940 4 873 2 451 2 452 4 590 2 331 4 807 2 812 2 600 2 
0 2 284 2 523 2 827 2 526 2 828 6 17 2 829 2 833 4 306 2 543 2 20 2 25 2 23 8 556 4 559 2 564 2 864 2 41 2 323 2 866 4 867 2 572 2 46 2 575 2 576 2 327 2 585 2 53 1 873 4 590 2 331 8 600 2 67 4 888 2 72 1 892 2 343 2 76 6 346 6 82 6 349 2 617 2 85 2 620 2 621 2 352 2 624 4 908 6 911 2 356 2 635 2 100 6 102 4 919 2 642 2 109 2 372 4 646 10 924 6 380 2 928 1 931 2 124 2 386 2 387 2 940 4 945 2 397 1 673 2 137 2 676 2 678 2 141 2 143 2 145 6 146 4 148 2 954 1 403 2 956 4 404 2 152 2 681 6 962 4 685 4 963 2 964 2 966 8 413 6 693 2 168 2 971 2 700 4 701 2 172 2 173 4 430 1 179 12 716 6 435 2 436 2 985 2 442 2 448 2 728 2 995 46 730 2 451 2 452 4 453 6 457 6 459 1 461 2 463 2 741 7 748 6 1010 4 749 2 751 2 752 4 208 2 213 1 754 12 755 2 758 6 759 2 218 2 762 6 764 2 480 7 483 24 766 2 228 2 490 8 493 2 777 2 1041 2 239 1 783 2 495 2 497 6 503 2 505 2 252 2 1054 4 508 4 255 2 258 6 261 6 263 2 801 6 510 2 802 4 269 2 271 6 807 2 514 2 812 2 276 2 816 1 
0 2 673 2 137 2 676 2 141 2 678 2 143 2 284 2 148 2 146 4 145 6 403 2 956 4 152 2 404 2 523 2 681 6 963 2 827 2 685 4 962 4 964 2 526 2 17 2 828 6 966 8 413 6 536 4 829 2 833 4 693 2 306 2 543 2 168 2 971 2 20 6 23 8 25 2 700 4 701 2 172 2 173 8 556 4 179 12 559 2 716 6 564 2 864 2 435 2 41 2 436 2 985 4 323 2 867 2 866 4 442 2 572 2 575 2 46 2 576 2 579 2 327 2 585 2 995 48 728 2 448 2 730 2 873 4 451 2 590 2 452 4 453 6 331 8 457 6 461 2 64 2 600 2 463 2 888 2 892 2 748 6 1010 4 749 2 343 2 208 2 752 4 751 2 76 6 346 6 754 12 349 2 82 6 755 2 617 2 758 6 759 2 218 2 762 6 620 2 85 2 621 2 764 2 352 2 908 6 624 4 483 26 766 2 228 2 911 2 356 2 490 8 100 6 635 2 102 8 493 4 777 2 1041 2 919 2 495 2 783 2 497 6 642 2 372 4 109 2 503 2 924 6 646 10 505 2 252 2 1054 8 508 4 255 2 258 6 380 2 931 2 261 6 124 2 386 2 801 6 387 2 263 2 802 4 510 2 940 4 269 2 945 2 271 6 807 2 514 4 812 2 134 2 276 2 
0 2 673 2 137 2 676 2 141 2 678 2 143 2 284 2 148 2 146 4 145 6 403 2 956 4 152 2 404 2 523 2 681 6 963 2 827 2 685 4 962 4 964 2 526 2 828 6 966 8 17 6 413 6 536 4 829 2 833 4 693 2 306 2 543 2 168 2 971 2 20 6 23 8 25 2 700 4 701 2 172 2 173 8 556 4 179 12 559 2 716 6 564 2 864 2 435 2 41 2 436 2 985 4 323 2 867 2 866 4 442 2 572 2 575 2 46 2 576 2 579 2 327 2 585 2 448 2 995 48 728 2 730 2 873 4 451 2 590 2 452 4 453 6 331 8 457 6 461 2 64 2 600 2 463 2 888 2 892 2 748 6 1010 4 749 2 343 2 208 2 752 4 751 2 76 6 614 4 346 6 754 12 349 2 82 6 755 2 617 2 758 6 759 2 218 2 762 6 620 2 85 2 621 2 764 2 352 2 908 6 624 4 483 26 766 2 228 2 911 2 356 2 490 8 100 6 635 2 102 8 493 4 777 2 1041 2 919 2 495 2 783 2 497 6 642 2 372 4 109 2 503 2 924 6 646 10 505 2 252 2 1054 8 508 4 255 2 258 6 380 2 931 2 261 6 124 2 386 2 801 6 387 2 263 2 802 4 510 2 940 4 269 2 945 2 271 6 807 2 514 4 812 2 134 2 276 2 
0 2 281 6 820 6 284 2 523 2 827 2 526 2 17 6 828 6 829 2 536 4 833 4 306 2 543 2 20 6 25 2 23 12 551 2 552 2 556 4 557 6 559 2 564 2 565 2 40 6 864 2 41 2 323 2 866 4 867 2 572 2 46 2 575 2 576 2 579 2 327 2 585 2 873 4 590 2 331 8 881 6 333 2 64 2 335 2 600 2 67 2 888 2 892 2 343 2 76 6 614 4 346 12 82 6 349 2 617 2 85 2 620 2 621 2 352 2 624 4 908 6 911 2 356 2 635 2 100 6 102 10 361 6 919 2 109 2 372 4 924 6 646 8 375 6 380 2 115 2 931 2 124 2 386 4 387 2 940 4 130 6 945 4 134 2 673 2 137 2 676 2 678 2 141 2 143 2 148 2 145 6 146 4 403 2 956 4 404 2 152 2 681 6 962 4 685 4 963 2 964 2 966 8 413 12 693 2 168 2 971 2 700 4 701 2 172 2 173 10 179 10 716 12 435 4 436 2 985 4 442 2 189 2 728 2 995 52 448 2 730 2 731 2 451 2 452 4 453 12 457 12 461 2 463 4 748 6 1010 4 749 2 751 2 752 4 208 2 754 16 755 2 758 6 759 4 218 2 762 6 764 2 483 24 766 2 228 2 490 10 493 4 777 2 1041 2 783 2 495 2 497 12 499 6 503 2 505 2 252 2 1054 10 508 6 255 2 258 8 1057 2 261 6 263 2 801 6 510 2 802 4 269 2 271 8 807 2 514 4 812 2 276 2 
673 2 676 2 678 2 143 2 559 2 403 2 614 4 681 2 754 4 962 2 1054 6 255 2 323 2 442 2 218 2 17 4 572 2 536 2 327 2 833 2 352 2 624 2 585 2 995 4 728 2 168 2 940 4 873 2 20 6 590 2 452 4 331 2 807 2 490 6 777 2 
673 2 676 2 678 2 143 2 146 4 145 6 403 2 956 4 681 2 960 2 683 2 962 2 964 2 17 2 536 2 829 2 160 3 833 2 539 2 693 2 168 2 20 6 25 2 23 8 172 2 556 4 555 2 179 4 559 2 859 2 564 2 435 3 436 2 323 2 866 4 867 2 442 2 572 2 46 2 327 2 585 2 728 2 995 28 448 2 873 2 590 2 452 4 331 2 463 3 65 2 749 2 751 2 752 2 754 4 617 2 218 2 762 6 621 2 1026 2 352 2 624 2 483 24 911 2 490 6 777 2 919 2 642 2 503 2 646 2 505 2 252 2 1054 6 508 4 255 2 258 6 380 2 931 2 124 2 263 2 387 2 510 2 940 4 269 2 944 2 945 3 271 6 807 2 812 2 135 2 
0 2 673 2 676 2 678 2 143 2 284 2 1010 4 403 2 469 2 614 8 681 4 754 6 962 4 755 2 17 10 218 2 762 4 536 2 829 2 833 4 352 2 624 4 483 6 766 2 168 2 20 8 911 2 356 2 25 2 490 6 700 2 777 2 783 2 556 2 559 2 505 2 1054 6 323 2 255 2 866 2 442 2 572 2 327 2 931 2 124 2 585 2 802 2 510 2 728 2 995 12 730 2 940 4 873 2 451 2 452 4 590 2 331 4 807 2 812 2 600 2 
0 2 673 2 676 2 678 2 143 2 284 2 1010 4 403 2 614 8 681 4 754 8 962 4 755 2 17 10 218 2 762 4 536 2 829 2 833 4 352 2 624 4 483 6 766 2 168 2 20 8 911 2 356 2 25 2 490 6 700 2 424 4 777 2 783 2 556 2 559 2 505 2 1054 8 323 2 255 2 866 2 442 2 653 2 572 2 931 2 327 2 124 2 585 2 802 2 510 2 728 2 995 12 730 2 940 4 731 2 873 2 451 2 452 4 590 2 331 4 201 2 812 2 600 2 
673 2 220 2 323 2 
673 2 220 2 323 2 
0 2 673 6 677 2 145 6 146 4 956 4 681 4 406 2 685 2 962 2 964 2 526 2 12 4 17 6 829 2 536 4 691 2 833 2 693 2 168 2 20 6 24 2 25 2 23 2 974 2 700 2 848 2 172 2 173 4 556 4 179 4 436 2 985 4 323 4 867 2 866 4 987 2 46 2 327 4 995 24 448 2 730 2 731 4 873 4 452 4 590 2 331 4 600 2 463 2 886 2 67 4 465 2 605 4 742 2 466 4 1010 4 749 2 751 2 752 6 614 4 754 16 617 2 618 2 218 2 762 6 85 2 621 2 220 2 623 2 624 2 483 16 766 2 228 4 911 2 98 2 490 12 100 2 102 4 493 4 777 2 919 2 783 2 644 2 372 2 503 2 646 2 505 2 252 2 1054 12 258 2 380 2 931 2 1064 2 263 2 387 2 802 4 510 2 938 2 940 4 269 2 271 2 947 2 514 4 812 2 276 2 397 2 
931 2 742 2 623 2 483 2 179 2 995 4 372 2 646 2 984 2 24 2 864 2 755 2 811 2 100 2 42 2 701 2 414 2 
0 2 673 6 677 4 519 2 284 2 145 6 146 4 956 4 681 4 406 2 685 2 962 2 964 2 526 2 12 4 17 6 829 2 536 4 691 2 833 2 693 2 168 2 20 6 24 2 25 2 23 2 974 2 700 4 428 2 172 2 173 4 556 4 179 2 436 2 985 4 323 4 867 2 866 4 46 2 327 4 995 24 448 2 730 2 731 4 873 4 452 4 590 2 331 4 600 2 463 4 886 2 67 4 605 4 742 2 466 4 1010 4 749 2 751 2 752 6 614 4 754 16 617 2 618 2 219 2 218 2 762 6 85 2 621 2 220 2 623 2 624 2 483 16 766 2 228 4 911 2 98 2 490 12 100 2 102 4 493 4 777 2 919 2 640 2 783 2 503 2 505 2 252 2 1054 12 258 2 380 2 381 2 931 2 1064 2 263 2 387 2 802 4 510 2 938 2 940 4 269 2 271 2 947 2 514 4 812 2 276 2 
0 2 673 6 677 2 284 2 145 6 146 4 956 4 681 4 406 2 685 2 962 2 964 2 526 2 12 4 17 6 829 2 536 4 691 2 833 2 693 2 168 2 20 6 24 2 25 2 23 2 974 2 700 4 172 2 173 4 35 2 556 4 179 4 436 2 985 4 323 4 867 2 866 4 46 2 327 4 995 24 448 2 730 2 731 4 873 4 452 4 590 2 331 4 600 2 463 2 886 2 67 4 605 4 742 2 466 4 1010 4 749 2 751 2 752 6 614 4 754 16 617 2 618 2 218 2 762 6 85 2 621 2 478 2 220 2 623 2 624 2 483 16 766 2 631 2 228 4 911 2 98 2 490 12 100 2 102 4 493 4 777 2 917 2 919 2 783 2 372 2 503 2 646 2 505 2 649 2 252 2 1054 12 258 2 380 2 931 2 1064 2 263 2 387 2 802 4 510 2 938 2 940 4 269 2 271 2 947 2 514 4 812 2 276 2 397 1 
2 6 521 4 523 2 528 2 527 2 530 2 531 3 533 2 532 10 537 2 18 2 546 2 547 2 25 2 23 40 26 6 30 3 31 2 32 1 33 2 552 2 553 6 554 10 555 2 556 4 37 2 563 1 564 2 39 2 565 2 566 4 569 2 44 10 45 2 47 2 46 2 573 4 578 2 577 2 48 10 49 10 50 2 55 28 586 24 587 14 57 10 60 2 61 20 597 4 63 2 599 10 602 20 603 2 69 2 607 10 610 4 611 2 77 16 78 10 79 14 617 4 83 2 621 42 88 2 89 2 626 2 91 2 630 4 634 2 97 6 101 2 102 42 637 2 639 2 107 20 108 6 111 2 647 12 114 1 116 2 115 2 117 2 118 16 123 11 125 6 660 3 129 2 662 22 666 2 135 2 669 10 136 4 671 2 675 2 674 2 672 6 138 2 679 2 144 1 146 58 145 152 149 4 150 4 153 2 154 4 684 20 158 2 687 20 689 6 159 2 690 8 160 2 693 2 164 4 165 2 696 10 697 10 698 22 699 2 171 10 172 14 703 2 173 45 704 2 707 2 178 10 179 2 713 4 180 16 181 2 717 3 719 4 182 2 183 18 721 10 723 10 186 2 724 2 189 2 190 6 191 2 725 20 726 6 195 12 732 2 733 2 196 2 735 8 737 4 738 2 203 10 740 2 204 12 743 4 745 2 205 2 746 2 750 12 749 2 751 2 752 2 208 2 210 2 212 2 216 2 759 46 761 3 762 6 763 10 221 4 227 20 228 4 232 4 779 2 237 1 238 6 781 8 241 27 244 2 245 3 247 2 791 6 252 4 793 4 795 18 257 3 258 14 259 2 797 4 260 10 263 2 266 2 269 14 803 22 271 14 806 22 808 2 810 4 812 2 813 20 274 4 277 2 815 8 818 2 819 2 287 10 295 4 827 2 301 2 829 2 834 2 835 2 305 6 306 2 836 4 837 1 839 4 840 10 845 4 314 2 846 2 847 2 851 2 315 4 855 4 317 2 316 2 856 6 318 1 859 2 862 6 320 2 863 2 865 4 866 4 867 4 324 10 868 10 326 2 328 2 870 2 329 2 876 16 879 4 882 14 333 2 885 6 335 4 887 4 338 4 889 10 892 2 348 6 896 2 898 2 901 2 902 10 904 4 903 2 351 2 906 2 354 6 910 2 911 2 913 10 358 12 914 4 362 2 364 10 919 2 365 8 366 2 920 6 368 10 370 2 371 10 923 6 925 3 374 8 380 2 382 2 383 2 929 2 931 2 386 24 936 6 937 2 939 10 942 2 390 2 389 10 945 28 948 4 951 2 398 6 953 4 956 68 959 18 958 8 961 10 964 2 409 10 965 2 411 2 969 2 970 2 418 2 420 4 419 72 971 2 422 1 978 2 979 20 981 1 982 16 983 2 435 16 436 42 437 4 986 2 988 20 990 14 995 192 448 2 998 2 455 2 456 16 458 4 1003 4 463 28 1004 2 1006 2 1007 6 1008 2 1015 22 471 10 473 6 475 2 1023 2 477 4 1027 2 1026 2 1028 2 1029 2 483 144 1030 2 485 2 1037 1 1036 2 491 2 1040 1 1041 4 1044 4 500 2 501 2 1047 18 503 2 504 2 502 2 1051 48 505 2 506 3 1053 2 507 2 508 12 1055 2 1057 2 1062 2 1063 18 510 2 511 2 1067 2 1069 2 516 2 515 2 1070 10 1072 6 
33 2 785 2 500 2 78 2 564 2 435 2 182 2 508 2 409 4 258 2 759 6 1023 2 761 2 902 2 1062 2 483 2 995 2 511 2 546 2 390 2 945 2 23 2 271 2 463 2 
33 2 785 2 500 2 78 2 564 2 435 2 182 2 508 2 409 4 258 2 759 6 1023 2 761 2 902 2 1062 2 483 2 995 2 511 2 546 2 390 2 945 2 23 2 271 2 463 2 
33 2 785 2 500 2 78 2 564 2 435 2 182 2 508 2 409 4 258 2 759 6 1023 2 761 2 902 2 1062 2 483 2 995 2 511 2 546 2 390 2 945 2 23 2 271 2 463 2 
204 3 781 2 1007 2 980 2 823 2 500 2 787 2 750 4 562 2 982 4 923 2 564 2 1051 6 374 2 826 2 439 4 118 4 477 2 797 2 690 2 221 2 834 2 871 2 483 4 726 4 995 10 420 2 587 4 876 4 945 3 548 2 879 2 23 2 882 2 456 4 332 2 358 3 462 3 463 3 778 2 
204 2 1007 2 823 2 750 4 348 2 826 2 477 2 690 2 904 2 834 2 221 2 483 4 420 2 23 2 548 2 358 2 778 2 781 2 980 2 500 2 787 2 562 2 923 2 982 4 374 2 1051 6 564 2 439 4 118 4 188 2 797 2 871 2 726 4 995 10 587 4 876 4 945 2 879 2 882 2 332 2 456 4 462 2 463 2 
204 2 1007 2 823 2 750 4 348 2 826 2 477 2 690 2 904 2 834 2 221 2 483 4 420 2 23 2 548 2 358 2 778 2 781 2 980 2 500 2 787 2 562 2 923 2 982 4 374 2 1051 6 564 2 439 4 118 4 188 2 797 2 871 2 726 4 995 10 587 4 876 4 945 2 879 2 882 2 332 2 456 4 462 2 463 2 
204 2 1007 2 823 2 750 4 348 2 826 2 477 2 690 2 904 2 834 2 221 2 483 4 420 2 23 2 548 2 358 2 778 2 781 2 980 2 500 2 787 2 562 2 923 2 982 4 374 2 1051 6 564 2 439 4 118 4 188 2 797 2 871 2 726 4 995 10 587 4 876 4 945 2 879 2 882 2 332 2 456 4 462 2 463 2 
204 2 1007 2 823 2 750 4 348 4 826 2 477 2 690 2 904 4 834 2 221 2 483 4 420 2 23 2 548 2 358 2 778 2 781 2 980 2 500 2 787 2 562 2 923 2 982 4 374 2 1051 6 564 2 439 4 118 4 188 4 797 2 871 2 726 4 995 10 587 4 876 4 945 2 879 2 882 2 332 2 456 4 462 2 463 2 
250 2 298 2 746 2 900 2 444 2 486 2 
107 2 250 2 705 2 1052 2 474 2 29 2 1011 2 
817 2 70 2 744 2 709 2 73 2 821 2 561 1 922 2 1049 1 1050 2 1018 2 16 2 476 1 483 8 995 10 510 2 589 1 330 2 841 1 453 2 454 2 1035 2 771 2 883 2 132 2 133 2 
781 6 1043 2 553 4 610 2 750 12 790 2 374 6 348 5 967 1 186 2 797 6 477 6 188 2 690 6 904 3 221 6 537 2 483 6 726 4 995 6 265 4 420 2 225 2 167 2 587 15 664 2 879 6 774 2 948 2 668 2 279 2 
417 2 162 2 483 1 995 1 588 2 982 2 1048 2 470 2 876 2 633 4 524 2 595 2 456 2 773 1 253 2 334 2 15 2 443 6 
417 4 162 2 588 4 982 2 1048 2 470 2 876 2 633 4 524 2 595 2 456 2 253 2 334 2 15 4 443 6 
417 8 162 2 483 1 995 1 588 8 982 2 1048 2 470 2 876 2 633 4 524 8 595 2 456 2 773 1 253 6 334 2 15 8 443 10 
417 2 162 2 588 2 982 2 1048 2 470 2 876 2 633 2 595 2 456 2 334 2 15 2 443 2 
283 2 144 2 145 102 146 36 6 2 287 4 956 44 295 4 961 4 297 2 684 10 299 2 532 4 687 11 416 2 692 2 540 10 837 2 419 24 19 2 840 6 696 4 422 2 698 24 171 4 30 5 172 6 173 16 315 4 855 4 554 4 710 4 178 4 981 4 563 4 566 4 436 28 184 2 721 4 867 2 44 4 723 4 988 6 324 4 869 10 48 4 49 4 195 14 995 78 729 2 55 30 591 4 61 10 458 4 1002 4 597 4 460 8 599 4 601 1 887 4 203 8 337 8 889 4 607 4 205 2 472 8 80 32 1015 24 471 8 1022 8 621 26 763 4 1028 2 483 70 630 4 227 10 632 16 97 8 913 4 231 16 914 4 775 2 237 4 105 10 780 4 364 4 494 2 368 4 641 2 501 2 371 4 248 2 246 2 251 4 793 4 257 4 655 2 123 6 657 4 939 4 267 2 662 8 268 4 269 6 389 4 813 10 397 2 277 2 1070 4 669 16 
205 2 1008 2 146 14 145 40 287 4 956 14 961 2 684 6 299 2 687 2 621 12 1028 2 483 26 419 8 226 2 227 6 840 2 696 2 97 6 1037 2 233 2 171 4 1040 2 172 2 237 2 173 14 32 2 241 10 641 2 178 2 501 2 371 2 981 2 246 2 563 2 436 12 184 2 867 2 257 4 723 4 988 2 48 4 123 4 584 2 729 2 995 28 660 2 55 6 267 2 269 2 389 4 806 2 61 2 813 6 599 4 277 2 397 2 1004 2 739 2 
144 2 824 6 145 248 146 88 6 2 287 6 956 112 290 4 295 4 961 10 525 24 684 16 300 10 299 2 532 6 687 16 968 4 161 2 166 24 837 2 419 124 840 10 696 10 697 24 973 10 422 4 698 84 171 6 427 2 30 5 172 14 173 28 315 4 32 2 855 4 708 4 554 6 318 2 178 10 36 90 981 4 563 6 718 12 566 4 436 58 184 2 721 6 867 8 44 6 723 6 988 36 324 6 325 4 868 24 48 6 49 6 584 2 195 12 995 150 729 2 55 34 57 6 592 4 61 18 458 4 597 4 599 6 1004 11 887 4 203 42 739 2 889 6 607 6 205 8 1008 4 468 2 342 26 1015 92 471 24 473 2 621 58 763 6 1028 4 482 26 224 4 483 134 353 4 92 4 630 4 227 16 97 15 1037 2 913 6 99 8 233 2 914 4 775 2 1040 2 237 4 364 6 368 6 241 22 641 2 786 10 501 8 371 10 246 2 793 4 256 24 257 8 652 8 1061 90 123 8 659 4 660 7 939 6 662 50 269 14 389 6 270 18 806 4 395 8 813 16 397 4 277 8 1070 6 669 42 
205 2 400 2 283 2 285 2 146 20 145 48 287 2 956 20 522 2 961 2 525 2 684 4 156 2 300 2 529 2 299 2 534 2 687 2 621 6 86 2 765 2 163 4 222 2 18 4 483 44 540 2 166 2 419 6 19 2 545 4 629 2 226 2 227 4 840 2 696 2 973 2 1038 2 171 2 172 2 105 2 173 36 429 2 708 2 641 2 178 2 786 2 501 2 371 2 789 2 563 2 246 2 926 2 436 6 567 2 927 4 184 2 256 2 867 2 723 2 1056 2 988 2 654 2 869 2 930 2 991 2 48 2 122 2 123 6 385 2 262 2 584 2 658 2 729 2 995 46 874 2 56 2 267 2 269 2 389 2 594 2 199 2 61 2 395 2 1068 2 272 2 813 4 599 2 397 2 277 2 602 6 339 2 
119 2 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 
852 1 622 1 993 1 498 1 408 1 850 1 

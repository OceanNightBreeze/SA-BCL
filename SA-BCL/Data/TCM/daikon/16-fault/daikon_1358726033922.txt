#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 330 398 930 1005 425 802 1033 731 253 195 817 1048 697 71 15 1057 528 413 1030 1012 24 37 646 60 179 729 1068 108 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 289 914 67 109 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 530 443 315 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 530 443 315 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 530 443 315 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:memberOf(J[J)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3_1()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.OrderedPairIterator:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant:logOn()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_50()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.Invariant:prob_and(DD)D
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:gt(II)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_120()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:gte(II)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:justified()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.RootNode:RootNode()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:concat([I[I)[I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:lt(II)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:eq(JJ)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_3R_97()Z
daikon.PptName:isEnterPoint()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:lte(II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 7162 | return null
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:jj_3R_122()Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfo:isPointer()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal; | RETURN | 91149 | return null
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_3R_119()Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3_5()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_148()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice1:num_samples()I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE:element_range([I)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3_35()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:Node()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ProglangType:baseIsScalar()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ProglangType:dimensions()I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ValueTuple:size()I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:setEqual([I[I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_121()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_115()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Debug:logDetail()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:memberOf(S[S)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLT([II)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([D)[D
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_96()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3_16()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_53()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:lexLTE([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | RETURN | 128825 | return null
jtb.JavaParser:jj_3R_161()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.Ppt:Ppt()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3_22()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isPointerFileRep()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfo:relate_var()V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator; | RETURN | 36787 | return null
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Debug:logOn()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_118()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptName:isCombinedExitPoint()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eq(II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaCharStream:ReadByte()C
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3R_116()Z
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:ne(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_48()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:pow(II)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 6337 | 1 -> 0
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_ntk()I
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3_36()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_47()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:memberOf(I[I)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:gcd([I)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3_10()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isFloat()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:sorted([I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:union([I[I)[I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGT([II)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.MathMDE:gcd(II)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfo:jml_name()Ljava.lang.String; | RETURN | 102411 | return null
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ProglangType:isIntegral()Z
daikon.test.FormatTestCase:passes()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3_14()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_88()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3_4()Z
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
750 2 365 2 815 4 918 2 660 2 385 2 129 2 643 2 554 2 
834 6 390 2 255 2 1026 2 176 2 481 2 499 6 372 2 56 2 360 2 991 6 
201 6 918 2 264 6 48 2 960 2 302 6 690 2 589 2 660 2 405 6 34 4 234 4 1022 2 
893 16 415 2 632 4 47 10 265 16 635 4 777 8 711 16 126 10 91 6 350 8 55 2 96 12 310 29 782 2 947 8 1021 2 918 6 320 6 881 2 504 8 844 10 847 4 791 2 962 10 660 6 822 2 855 26 599 10 539 4 
432 4 465 6 
1055 2 
338 2 81 2 143 2 262 2 415 2 945 2 424 2 270 2 94 2 872 2 275 2 1018 2 278 2 556 2 613 4 221 2 1029 2 286 2 625 2 510 4 297 2 964 2 369 2 44 2 971 2 518 2 706 2 830 2 188 2 982 2 129 2 781 2 719 2 388 2 918 4 647 2 651 4 725 2 70 2 997 2 256 2 660 4 410 2 336 4 
601 6 893 32 41 6 572 2 47 16 632 2 265 32 744 8 520 4 711 32 1011 4 126 16 304 6 808 6 91 4 350 18 489 6 96 22 310 54 947 6 1021 2 101 2 1024 4 918 4 616 4 320 4 844 16 134 6 883 2 361 4 962 16 228 4 732 2 660 4 929 2 855 48 599 6 696 2 965 4 
719 2 160 2 107 2 
859 2 437 2 188 2 49 2 441 2 399 10 193 22 639 2 475 2 796 2 229 2 271 2 158 2 236 2 
893 2 772 2 47 2 632 2 265 2 604 2 711 2 126 2 241 2 91 2 350 2 96 2 310 6 844 2 110 2 925 2 287 2 962 2 508 2 855 4 599 4 931 2 1037 2 
41 6 893 8 207 2 47 4 938 2 265 8 635 2 844 4 361 4 711 8 126 4 808 6 228 4 962 4 96 4 855 12 310 16 
40 4 339 2 700 4 895 4 184 2 123 14 551 2 749 2 377 2 270 2 641 2 1052 2 906 10 467 2 613 4 719 8 281 4 160 2 879 4 785 2 987 2 106 10 533 4 107 6 111 2 1061 2 586 4 788 4 621 2 29 4 136 2 795 4 30 62 928 2 561 4 662 2 410 4 409 2 1035 2 448 2 
936 2 707 2 637 2 973 2 151 2 1055 2 959 2 166 2 819 2 76 2 
414 2 144 2 937 4 940 2 550 2 671 16 149 2 805 2 673 2 423 2 12 2 153 3 810 32 16 2 811 2 18 2 19 2 427 2 676 24 279 2 813 2 678 2 557 2 686 2 162 2 433 16 958 3 165 1 436 2 169 2 285 2 440 2 171 1 963 2 692 3 292 2 824 8 39 3 38 2 827 2 698 2 178 2 969 2 704 3 185 2 832 2 975 2 576 4 460 2 305 4 461 4 462 2 309 2 311 2 57 2 720 2 316 2 68 2 321 4 322 24 989 1 843 6 470 2 722 2 471 2 724 2 323 2 587 3 72 2 730 1 590 1 995 12 328 2 594 8 854 2 999 1 78 2 737 3 334 2 82 2 342 2 861 2 742 4 483 2 864 3 210 3 87 2 88 2 605 2 750 2 607 2 1015 2 611 1 1017 2 218 3 1020 2 356 5 496 2 617 2 225 2 760 2 885 1 763 2 624 1 887 1 891 2 370 2 119 2 775 2 631 6 634 2 636 4 519 2 1046 1 901 1 1049 2 902 2 1054 6 245 2 642 1 525 1 913 16 783 3 389 2 918 34 919 2 395 2 786 2 924 8 650 2 397 32 652 2 787 4 1063 2 536 1 658 16 792 2 403 1 1066 2 1067 2 660 32 259 2 1070 3 408 6 411 2 663 2 934 2 
918 2 1058 2 
180 2 918 4 120 2 
33 2 
261 2 547 2 802 2 548 6 7 4 6 176 9 16 13 36 14 2 15 2 272 2 24 2 26 2 817 2 818 2 559 36 293 8 562 6 295 2 294 2 296 8 37 2 298 2 571 26 570 2 299 2 828 2 829 48 303 2 51 2 833 2 308 2 579 4 312 16 835 2 59 14 60 2 584 4 69 2 324 4 71 2 327 2 850 2 330 2 337 8 83 2 341 2 343 2 862 4 863 146 346 46 86 14 92 2 870 40 874 2 97 46 612 46 355 2 876 4 100 22 358 4 105 4 108 2 882 8 620 4 362 2 363 6 623 4 626 4 627 2 628 4 630 4 371 6 374 4 373 14 125 2 127 2 638 2 900 4 899 2 383 4 384 8 130 4 644 4 645 146 132 4 912 20 646 2 917 2 922 4 398 2 653 2 656 46 401 2 927 4 930 2 407 48 413 2 935 8 939 4 668 4 670 2 148 4 418 8 419 2 155 2 425 2 949 2 951 2 953 10 685 8 687 2 431 2 168 4 167 22 439 2 689 10 442 46 697 2 179 2 966 2 453 4 970 4 703 24 186 28 708 8 189 8 710 46 974 2 459 10 980 2 715 146 983 4 196 4 195 2 718 2 468 46 469 8 990 4 723 8 727 12 472 2 726 2 473 2 729 2 731 2 996 36 206 2 734 20 1001 4 1003 2 1005 2 741 2 1008 4 746 4 1009 2 747 46 484 2 1012 2 487 8 492 2 217 2 753 2 754 24 1019 2 497 2 756 2 1028 4 762 2 1030 2 1033 2 764 2 1038 14 515 18 1039 16 774 4 1040 2 773 46 1042 46 517 4 1043 2 237 20 778 2 238 6 1048 2 1056 2 528 2 529 2 250 46 1057 2 531 2 789 6 253 2 1068 2 799 2 800 4 
713 2 314 2 544 1 629 2 
713 2 714 2 
719 2 713 2 213 2 853 2 779 2 847 2 142 2 
713 2 480 2 779 2 
222 2 713 2 779 2 
740 2 629 2 400 2 
713 2 779 2 
740 2 31 2 
713 2 875 2 
740 2 284 2 629 2 
978 2 194 2 629 2 
183 2 629 2 198 2 
868 2 629 2 266 2 
208 2 629 2 1062 2 
740 2 776 2 
713 2 36 2 
194 2 574 2 
608 2 183 2 
477 2 266 2 
679 2 208 2 
740 2 523 2 
208 2 112 2 
266 2 274 2 
392 2 183 2 
113 2 194 2 
740 2 284 2 629 2 564 2 
740 2 284 2 798 2 629 2 564 2 
740 2 629 2 836 2 
740 2 629 2 580 2 
884 2 790 2 364 2 77 2 
0 2 780 4 699 2 161 2 500 2 45 2 226 2 569 2 
583 2 629 2 
719 2 205 2 766 2 142 2 
719 2 205 2 213 2 839 2 766 2 142 2 
719 2 713 2 768 2 779 2 847 2 142 2 
256 2 147 2 
719 2 102 2 847 2 142 2 
266 2 856 2 
867 2 208 2 
194 2 512 2 
183 2 745 2 
691 2 183 2 208 2 
183 2 595 2 208 2 
979 2 183 2 208 2 
1013 2 183 2 208 2 
1 6 575 2 553 2 909 2 719 2 582 6 65 2 142 2 
740 2 445 2 
149 2 
414 2 144 2 937 4 940 2 416 2 550 2 549 2 673 2 12 2 810 6 16 6 811 2 18 2 813 2 678 2 950 2 557 2 285 2 963 2 290 2 291 4 35 2 38 2 827 2 187 2 832 2 975 2 576 4 305 4 460 2 306 2 461 4 311 2 317 2 321 2 68 2 843 2 722 2 470 4 471 2 328 2 995 8 82 2 861 2 742 2 87 2 750 2 610 2 611 2 873 2 615 2 617 2 763 2 114 4 366 2 516 2 631 6 636 2 898 2 1054 4 245 2 527 2 913 6 248 2 918 26 919 2 397 4 924 2 652 2 536 2 1066 2 660 26 408 2 934 2 
414 2 144 2 937 4 940 2 416 2 550 2 549 2 673 2 12 2 810 6 16 6 811 2 18 2 813 2 678 2 557 2 285 2 963 2 290 2 291 4 35 2 38 2 827 2 452 2 187 2 832 2 975 2 576 4 305 4 460 2 306 2 461 4 311 2 317 2 321 2 68 2 843 2 722 2 470 4 471 2 328 2 995 8 78 2 82 2 861 2 742 2 87 2 750 2 610 2 611 2 873 2 615 2 617 2 763 2 114 4 366 2 511 2 891 2 516 2 631 6 636 2 902 2 1054 6 245 2 913 6 248 2 784 2 918 26 919 2 397 4 924 2 652 2 536 2 1066 2 660 26 408 2 934 2 
797 2 
493 2 277 2 
99 2 428 4 664 2 357 2 429 2 499 2 344 2 348 2 991 2 203 4 192 2 255 2 232 2 231 2 56 2 736 2 494 2 117 2 
664 2 2 2 481 2 344 2 348 2 603 2 803 2 669 4 550 2 89 2 421 2 486 2 154 2 675 2 490 2 811 2 494 2 813 2 952 2 99 4 428 4 357 2 429 2 499 6 285 2 172 6 820 4 231 2 232 2 694 2 563 2 235 2 117 2 827 2 631 4 239 2 240 4 832 2 192 2 834 6 576 2 305 2 382 2 56 4 910 2 390 2 918 12 988 2 991 4 73 2 203 4 994 2 328 2 255 4 660 6 592 4 258 2 736 2 140 2 260 4 
664 2 2 2 344 2 348 2 603 2 803 2 669 4 550 2 89 2 421 2 486 2 154 2 675 2 490 2 811 2 494 2 813 2 952 2 99 4 428 4 357 2 429 2 499 4 285 2 172 6 820 4 176 2 231 2 232 2 694 2 563 2 235 2 117 2 827 2 631 4 239 2 240 4 832 2 192 2 834 6 576 2 305 2 382 2 56 4 910 2 390 2 918 12 988 2 991 6 73 2 203 4 994 2 328 2 255 4 660 6 592 4 258 2 736 2 140 2 260 4 
664 2 2 2 344 2 348 2 603 2 803 2 669 4 550 2 89 2 421 2 486 2 154 2 675 2 490 2 811 2 494 2 813 2 952 2 99 4 428 4 357 2 429 2 499 6 285 2 172 6 820 4 231 2 232 2 694 2 563 2 235 2 117 2 827 2 631 4 372 2 239 2 240 8 832 2 192 2 834 6 576 2 305 2 382 2 56 4 910 2 390 2 918 12 988 2 991 6 73 2 203 4 994 2 328 2 255 4 660 6 592 4 258 2 736 2 140 2 260 4 
664 2 2 2 344 2 348 2 603 2 803 2 669 4 550 2 89 2 421 2 486 2 154 2 675 2 490 2 811 2 494 2 813 2 952 2 99 4 428 4 357 2 429 2 499 6 285 2 172 10 820 8 176 2 231 2 232 2 694 2 563 2 235 2 117 2 827 2 631 4 372 2 239 2 240 8 832 2 192 2 576 2 834 8 305 2 382 2 56 4 910 2 390 2 918 12 988 2 991 8 73 2 203 4 994 2 328 2 255 4 660 6 592 4 258 2 736 2 140 2 260 4 
664 2 2 2 344 2 348 2 603 2 803 2 669 4 550 2 89 2 421 2 486 2 154 2 675 2 490 2 811 2 494 2 813 2 952 2 99 4 428 4 357 2 429 2 499 6 285 2 172 10 820 8 231 2 232 2 694 2 563 2 235 2 117 2 827 2 631 4 372 2 239 2 240 8 832 2 192 2 834 6 576 2 305 2 382 2 56 4 910 2 390 2 918 12 988 2 991 6 73 2 203 4 994 2 328 2 255 4 660 6 592 4 258 2 736 2 140 2 260 4 
2 2 550 2 803 2 12 2 810 8 16 6 811 2 813 2 557 2 285 2 28 6 290 2 821 2 291 4 33 6 823 8 563 2 38 2 827 2 567 2 46 2 573 1 52 6 832 2 576 4 834 12 305 4 578 2 56 4 58 10 581 2 317 2 318 2 321 2 585 2 843 2 842 6 845 7 73 2 328 2 592 6 598 1 335 6 857 2 82 2 344 2 348 2 603 2 87 2 89 2 351 2 99 4 357 2 618 1 886 2 367 2 368 6 891 2 117 2 631 6 121 2 636 2 379 4 382 2 902 2 386 2 910 2 913 6 390 4 133 7 919 2 918 46 397 2 924 2 652 2 660 24 139 1 406 2 408 2 140 2 933 1 934 2 414 2 664 2 937 4 940 2 669 8 673 12 421 4 154 2 675 4 674 2 426 6 678 2 952 2 428 4 682 2 429 2 163 6 170 6 172 2 173 1 176 4 693 6 177 6 180 6 182 2 455 2 187 2 192 2 976 2 461 4 717 2 200 4 988 2 991 8 722 2 203 4 994 2 995 4 733 2 1000 2 478 2 736 2 742 2 1010 1 750 2 486 2 212 2 488 2 490 2 491 2 494 2 220 2 223 2 498 2 499 4 502 2 758 6 763 2 509 2 231 2 232 2 235 2 769 6 516 4 239 2 240 2 522 6 1054 6 243 2 244 1 245 2 249 1 1058 6 1066 2 255 4 258 2 260 4 
664 2 414 2 2 2 937 4 940 2 803 2 669 8 550 2 673 12 421 4 12 2 154 2 674 2 675 4 810 8 16 6 426 6 811 2 813 2 678 2 952 2 428 4 682 2 557 2 429 2 163 6 285 2 170 6 28 6 172 2 290 2 693 6 821 2 291 4 33 6 823 8 563 2 177 6 38 2 567 2 827 2 180 6 182 2 46 2 455 2 187 2 52 6 832 2 192 2 976 2 834 12 576 4 305 4 461 4 578 2 717 2 56 4 58 10 200 4 581 2 317 2 318 2 585 2 321 4 988 2 842 6 843 2 470 2 722 2 991 8 73 2 203 4 994 2 995 8 328 2 733 2 592 6 1000 2 478 2 736 2 857 2 335 6 82 2 742 4 344 2 603 2 348 2 87 2 89 2 750 2 211 2 212 2 486 2 351 2 488 2 490 2 491 2 494 2 220 2 99 4 357 2 498 2 223 2 499 8 502 2 758 6 763 2 886 2 509 2 367 2 232 2 231 2 368 6 235 2 891 2 117 2 769 6 516 4 631 6 121 2 372 4 636 4 239 2 522 6 240 6 379 4 382 2 902 2 243 2 1054 6 386 2 245 2 910 2 913 6 390 4 918 48 919 2 1058 6 648 2 924 2 397 2 652 2 1066 2 255 4 660 26 406 2 408 2 258 2 140 2 260 4 934 2 
664 2 414 2 2 2 937 4 940 2 803 2 669 8 550 2 673 12 421 4 12 2 154 2 674 2 675 4 810 8 16 6 426 6 811 2 678 2 813 2 952 2 428 4 682 2 557 2 429 2 163 6 285 2 170 6 28 6 172 6 290 2 820 4 693 6 821 2 291 4 33 6 823 8 563 2 177 6 38 2 567 2 827 2 180 6 182 2 46 2 455 2 187 2 52 6 832 2 192 2 976 2 834 12 576 4 305 4 461 4 578 2 717 2 56 4 58 10 200 4 581 2 317 2 318 2 585 2 321 4 988 2 842 6 843 2 470 2 722 2 991 8 73 2 203 4 994 2 995 8 328 2 733 2 592 6 1000 2 478 2 736 2 857 2 335 6 82 2 742 4 344 2 603 2 348 2 87 2 89 2 750 2 211 2 212 2 486 2 351 2 488 2 490 2 491 2 494 2 220 2 99 4 357 2 498 2 223 2 499 8 502 2 758 6 763 2 886 2 509 2 367 2 232 2 231 2 368 6 235 2 891 2 117 2 769 6 516 4 631 6 121 2 372 4 636 4 239 2 522 6 240 6 379 4 382 2 902 2 243 2 1054 6 386 2 245 2 910 2 913 6 390 4 918 48 919 2 1058 6 648 2 924 2 397 2 652 2 1066 2 255 4 660 26 406 2 408 2 258 2 140 2 260 4 934 2 
2 2 263 6 550 2 803 2 12 2 810 12 16 8 811 2 813 2 557 2 285 2 28 6 290 4 820 4 560 2 821 2 291 6 33 12 823 8 563 2 38 2 566 2 827 2 567 2 46 2 52 6 832 2 576 4 834 16 305 4 578 2 56 4 58 8 581 2 63 6 317 2 318 2 585 2 321 4 843 4 842 6 73 2 328 2 592 6 335 6 857 2 858 6 82 2 344 2 348 2 603 2 87 2 89 2 90 6 351 2 93 2 354 2 99 4 878 6 357 2 886 2 367 2 368 12 891 2 117 2 631 6 372 4 636 4 124 2 897 2 379 4 382 2 902 2 905 6 386 2 910 2 913 8 390 4 919 2 918 52 648 2 397 4 924 4 652 2 660 24 406 2 408 4 140 2 934 2 414 2 664 2 937 4 940 2 669 8 673 10 421 4 154 2 675 4 674 2 426 12 678 2 952 2 428 4 682 2 429 2 163 6 170 12 172 6 174 6 176 2 693 6 177 6 180 12 182 2 455 2 187 2 192 2 977 2 976 2 461 4 717 2 200 4 988 2 470 2 991 10 722 2 993 2 203 4 994 2 995 10 733 2 1000 2 478 2 736 2 481 2 742 4 750 2 211 2 486 2 212 2 488 2 490 2 491 2 494 2 220 2 223 2 498 2 499 10 502 2 758 6 763 2 509 2 231 2 232 2 235 2 769 6 516 4 521 6 239 2 240 6 522 6 1054 6 243 2 245 2 1058 12 535 6 1066 2 255 4 258 2 260 4 
344 2 372 2 603 2 348 2 669 2 239 2 240 6 89 2 834 4 382 2 154 2 490 2 56 4 910 2 494 2 428 2 357 2 390 2 918 4 499 6 988 2 991 6 172 4 203 2 994 2 255 4 820 4 592 2 232 2 231 2 563 2 258 2 235 2 260 2 117 2 
414 2 937 4 940 2 669 2 550 2 149 2 673 4 12 2 154 2 810 8 16 6 811 2 677 2 813 2 678 2 428 2 285 2 172 2 291 4 563 2 38 2 827 2 187 2 832 2 834 4 576 4 305 4 461 4 56 4 309 2 197 2 58 2 317 2 202 2 988 2 843 3 991 6 722 2 203 2 994 2 328 2 592 2 82 2 344 2 348 2 603 2 87 2 89 2 750 2 486 2 1015 2 490 2 494 2 357 2 499 6 760 2 763 2 231 2 232 2 891 2 235 2 117 2 1036 2 516 2 631 6 372 2 121 2 239 2 240 6 378 3 382 2 902 2 1054 6 245 2 910 2 913 6 390 2 918 28 919 2 397 3 652 2 1066 2 255 4 660 24 408 3 258 2 260 2 934 2 141 2 
664 2 2 2 344 2 348 2 603 2 803 2 669 4 550 2 89 2 421 2 486 2 154 2 675 2 490 2 811 2 494 2 813 2 952 2 99 4 428 4 357 2 429 2 499 6 285 2 172 10 820 8 231 2 232 2 694 2 563 2 235 2 117 2 827 2 631 4 372 2 239 2 240 8 832 2 192 2 834 6 576 2 305 2 382 2 56 4 910 2 390 2 918 12 988 2 991 6 73 2 203 4 994 2 328 2 255 4 660 6 592 4 258 2 736 2 140 2 260 4 
664 2 2 2 481 2 344 2 603 2 348 2 803 2 669 4 550 2 417 2 89 2 421 2 486 2 154 2 675 2 490 2 811 2 494 2 813 2 952 2 99 4 1023 2 428 4 357 2 429 2 499 8 285 2 227 4 172 10 820 8 231 2 232 2 563 2 235 2 117 2 827 2 631 4 372 2 240 8 832 2 192 2 576 2 834 8 305 2 382 2 56 4 910 2 390 2 918 12 988 2 991 6 73 2 203 4 994 2 328 2 255 4 660 6 592 4 258 2 736 2 140 2 260 4 
848 2 154 2 910 2 
848 2 154 2 910 2 
414 2 2 2 3 2 4 2 937 4 940 2 550 2 669 4 268 2 673 4 421 4 12 2 154 4 675 2 810 2 16 2 811 2 813 2 678 2 159 2 428 2 557 4 429 2 688 2 435 2 285 2 172 6 820 4 176 4 563 2 38 2 827 2 449 2 187 2 832 2 192 2 576 4 834 16 305 4 461 4 56 4 58 2 200 2 317 2 837 2 321 4 840 2 988 2 722 2 991 12 73 2 203 2 848 2 995 4 328 2 592 4 75 4 1002 2 739 2 82 2 481 4 345 4 742 4 344 4 347 2 348 2 750 2 1014 2 99 4 615 4 499 12 502 2 758 2 761 2 763 2 367 2 231 2 891 2 118 2 516 6 631 6 372 4 636 4 240 6 379 2 902 2 1054 6 245 2 910 6 913 2 390 4 918 24 919 2 921 2 397 2 652 2 135 2 1066 2 255 4 660 16 406 2 140 2 260 2 934 2 
739 2 918 4 585 2 758 2 285 2 268 2 204 2 673 2 1014 2 660 2 596 2 491 2 493 2 58 2 736 2 524 2 200 2 
414 2 2 2 3 2 4 2 937 4 940 2 669 4 550 2 268 2 673 2 421 4 12 2 154 4 675 4 810 2 16 2 811 2 813 2 678 2 952 2 428 2 557 4 429 2 957 2 688 2 435 2 285 2 172 6 820 4 176 4 563 2 38 2 827 2 449 2 451 2 187 2 832 2 192 2 576 4 834 16 305 4 307 2 461 4 56 4 317 2 837 2 321 4 840 2 988 2 722 2 991 12 846 2 73 2 203 2 848 2 995 4 328 2 592 4 75 4 1002 2 739 2 82 2 481 4 345 4 742 4 344 4 348 2 750 2 1014 2 99 4 615 4 499 12 502 2 758 2 763 2 367 2 231 2 891 2 118 4 516 6 631 6 372 4 636 4 896 2 240 6 379 2 902 2 1054 6 245 2 910 6 913 2 390 4 918 24 919 2 397 4 652 2 135 2 1066 2 255 4 660 16 406 2 140 2 260 2 934 2 
414 2 2 2 3 2 4 2 937 4 940 2 550 2 669 4 268 2 673 4 269 2 421 4 12 2 154 4 675 4 810 2 16 2 811 2 813 2 678 2 952 2 428 2 557 4 429 2 816 2 688 2 435 2 285 2 172 6 820 4 176 4 563 2 38 2 827 2 449 2 187 2 832 2 192 2 457 2 576 4 834 16 305 4 461 4 56 4 58 2 200 2 317 2 837 2 321 4 840 2 988 2 722 2 991 12 73 2 203 2 848 2 995 4 328 2 592 4 75 4 738 2 1002 2 739 2 82 2 481 4 345 4 742 4 344 4 348 2 750 2 1014 2 99 4 615 4 499 12 502 2 758 2 763 2 367 2 231 2 891 2 118 2 771 2 516 6 631 6 372 4 636 4 240 6 379 2 902 2 1054 6 245 2 910 6 913 2 390 4 918 24 919 2 397 2 652 2 135 2 1066 2 255 4 660 16 406 2 140 2 260 2 934 2 
543 2 545 4 265 4 549 2 550 2 8 2 806 2 12 2 809 4 810 18 16 12 811 2 273 2 276 2 555 2 812 2 813 2 23 2 814 2 281 2 557 4 283 3 285 2 29 2 288 2 290 24 289 2 821 2 291 10 825 2 35 2 827 2 568 2 41 6 40 2 300 2 46 2 47 2 50 2 831 2 53 2 832 2 576 4 306 2 305 4 310 8 313 12 317 2 66 2 67 2 843 11 844 2 586 2 325 2 588 4 328 2 593 2 855 6 597 2 340 2 82 2 87 2 606 2 350 4 610 2 611 2 96 4 873 2 101 4 359 2 109 2 366 2 115 2 889 4 116 2 891 2 893 4 631 6 633 2 122 2 126 2 378 2 380 2 902 2 903 2 386 2 387 12 911 26 131 2 913 12 914 2 918 28 919 2 649 2 397 11 924 14 652 2 657 2 137 10 659 2 660 22 408 11 932 4 665 2 937 2 940 2 416 10 944 2 673 2 422 6 152 2 156 2 948 2 677 2 678 2 954 2 956 2 962 2 444 4 446 2 967 2 450 2 700 2 702 2 701 8 181 2 972 6 709 4 711 4 712 4 191 2 458 2 461 2 463 4 717 2 197 2 199 2 202 2 721 6 722 2 995 28 733 2 479 24 482 2 1007 1 209 26 750 2 752 2 216 2 219 4 1025 2 223 2 501 2 503 2 759 8 505 2 506 2 228 4 509 2 1034 4 765 2 1036 2 770 2 516 2 1054 4 245 2 526 2 248 2 536 2 254 2 1066 2 794 2 537 8 257 6 1071 10 801 4 1073 4 
967 2 665 2 300 2 545 4 50 2 87 2 944 2 810 2 16 2 463 2 871 2 913 2 814 2 918 2 66 2 283 2 397 2 359 2 843 2 290 6 660 2 291 2 408 2 889 2 
967 2 665 2 300 2 545 4 50 2 87 2 944 2 810 2 16 2 463 2 871 2 913 2 814 2 918 2 66 2 283 2 397 2 359 2 843 2 290 6 660 2 291 2 408 2 889 2 
967 2 665 2 300 2 545 4 50 2 87 2 944 2 810 2 16 2 463 2 871 2 913 2 814 2 918 2 66 2 283 2 397 2 359 2 843 2 290 6 660 2 291 2 408 2 889 2 
145 2 146 2 743 3 265 2 865 4 85 2 87 2 215 6 810 2 947 4 814 2 684 2 433 2 282 2 224 3 438 2 962 2 447 4 893 2 47 2 711 2 190 4 126 2 242 2 310 6 984 2 247 3 391 4 918 10 320 2 397 3 843 3 844 2 658 2 849 2 660 4 1069 2 855 4 661 2 540 4 
145 2 146 2 743 2 265 2 865 4 85 2 87 2 350 2 215 6 810 2 96 2 947 4 1021 2 814 2 684 2 433 2 282 2 224 2 438 2 962 2 447 4 893 2 47 2 711 2 190 4 126 2 242 2 310 4 984 2 247 2 391 4 918 10 320 2 397 2 843 2 844 2 658 2 849 2 660 4 1069 2 855 4 661 2 540 4 
145 2 146 2 743 2 265 2 865 4 85 2 87 2 350 2 215 6 810 2 96 2 947 4 1021 2 814 2 684 2 433 2 282 2 224 2 438 2 962 2 447 4 893 2 47 2 711 2 190 4 126 2 242 2 310 4 984 2 247 2 391 4 918 10 320 2 397 2 843 2 844 2 658 2 849 2 660 4 1069 2 855 4 661 2 540 4 
145 2 146 2 743 2 265 2 865 4 85 2 87 2 350 2 215 6 810 2 96 2 947 4 1021 2 814 2 684 2 433 2 282 2 224 2 438 2 962 2 447 4 893 2 47 2 711 2 190 4 126 2 242 2 310 4 984 2 247 2 391 4 918 10 320 2 397 2 843 2 844 2 658 2 849 2 660 4 1069 2 855 4 661 2 540 4 
145 2 146 2 743 2 265 2 865 4 85 2 87 2 350 4 215 6 810 2 96 4 947 4 1021 4 814 2 684 2 433 2 282 2 224 2 438 2 962 2 447 4 893 2 47 2 711 2 190 4 126 2 242 2 310 4 984 2 247 2 391 4 918 10 320 2 397 2 843 2 844 2 658 2 849 2 660 4 1069 2 855 4 661 2 540 4 
1031 2 1050 2 838 2 396 2 116 2 542 2 
74 2 622 2 352 2 838 2 923 2 454 2 416 2 
894 2 749 1 577 2 981 2 464 2 904 2 907 2 467 1 813 2 755 2 680 2 918 10 955 2 164 2 841 2 534 2 1059 1 27 2 170 2 1065 1 793 2 660 8 329 2 538 2 513 2 1072 1 
41 4 893 6 44 2 84 2 47 6 744 2 265 6 1045 2 711 6 304 4 126 6 350 2 96 4 310 16 947 4 466 2 1018 2 1021 2 1024 2 918 6 430 2 320 2 844 6 657 2 228 2 962 6 660 6 855 12 1073 2 568 2 
64 2 391 2 918 1 666 2 920 2 434 1 301 2 941 2 267 2 1047 2 326 2 1032 2 851 4 660 1 985 7 695 2 540 2 447 2 
64 2 391 2 920 2 666 2 301 4 941 2 267 4 1047 4 326 2 1032 2 851 4 985 6 695 2 540 2 447 2 
64 2 391 2 918 1 920 8 666 2 434 1 301 8 941 2 267 8 1047 8 326 2 1032 2 851 4 660 1 985 10 695 6 540 2 447 2 
64 2 391 2 666 2 301 2 941 2 267 2 1047 2 326 2 1032 2 851 2 985 2 540 2 447 2 
667 6 5 6 937 32 942 2 804 10 672 4 150 4 807 4 552 12 11 4 946 12 157 16 17 2 20 8 21 20 280 4 22 4 683 4 681 4 558 12 25 16 961 11 443 2 32 6 565 4 826 4 968 4 42 6 54 4 461 28 716 2 986 4 61 4 62 2 315 2 319 16 992 4 728 4 591 16 852 4 998 2 331 1 332 4 80 4 82 6 602 4 748 4 485 2 349 2 866 4 214 4 353 10 869 2 95 4 495 4 98 6 877 4 614 4 104 2 880 2 757 2 619 4 1027 4 507 4 230 2 888 2 233 16 890 4 767 4 891 10 514 2 892 10 1041 2 128 2 640 6 381 2 902 10 1051 4 1054 64 245 6 916 4 918 70 530 2 393 6 394 4 532 2 251 4 1060 10 252 4 655 4 1064 2 1066 2 660 62 541 4 412 4 
1004 4 82 2 860 2 546 4 1006 2 667 6 5 6 937 14 942 2 943 4 10 4 420 10 485 2 11 2 609 4 353 2 1016 2 157 14 495 2 98 6 877 2 21 10 103 2 880 2 25 8 757 2 961 2 443 2 175 2 230 4 32 2 888 2 890 2 891 8 42 2 43 4 705 2 375 2 376 4 54 2 640 6 381 2 461 14 1053 2 902 8 1054 36 245 2 246 2 62 2 915 2 315 2 918 28 530 2 532 2 654 2 926 2 1066 2 660 26 138 2 600 6 333 2 
546 4 667 8 5 3 937 30 942 2 943 4 672 4 10 4 150 4 552 8 420 2 11 4 946 12 157 4 17 2 20 4 280 4 21 22 681 4 558 8 25 28 961 8 443 2 32 8 565 8 826 4 968 4 42 4 43 4 705 1 54 4 461 26 986 4 62 2 315 2 992 4 474 4 476 4 852 4 735 4 600 6 332 4 333 2 79 4 80 4 1004 4 82 8 602 4 748 4 485 2 866 4 609 4 214 4 353 8 1016 1 869 2 95 4 495 4 98 8 877 4 103 2 757 2 619 4 1027 4 507 4 230 2 888 2 890 2 891 14 1041 2 375 2 376 2 640 8 381 2 902 14 1053 2 1054 62 245 8 915 2 916 4 918 64 530 2 394 4 252 4 1066 4 404 4 660 56 412 4 541 4 
62 2 315 2 918 12 82 2 880 2 530 2 532 2 937 4 942 2 1044 2 402 2 751 2 1066 2 443 2 381 2 660 12 461 4 902 4 888 2 1054 10 157 4 908 2 245 2 891 4 
456 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (265,361) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.util.NoSuchElementException 363 145 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 574 817 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.ClassCastException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 152 77 755 1081 1046 462 1055 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (265,361) 187 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 71 625 1098 373 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.Invariant:logDetail()Z
daikon.Quant:subsetOf([F[F)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfo:isPointer()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 9913 | if (x) -> if (!x)
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONSTANT | 3683 | 1 -> 0
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_samples()I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:InvMap()V
daikon.ModBitTracker:split(I)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.Constant:name()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern:numIntArrays()I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Ppt:Ppt()V
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:readChar()C
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:subsetOf([I[I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isScalar()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaCharStream:backup(I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ProglangType:isFloat()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.Invariants:Invariants()V
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.Debug:logOn()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I | CONDITION | 6730 | if (x) -> if (!x)
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:isPrestate()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:subsetOf([D[D)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ModBitTracker:num_vars()I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:setEqual([I[I)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
jtb.JavaParser:jj_3R_56()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | RETURN | 17435 | return null
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:base()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_162()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.Invariant:getConfidence()D
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:isIOAArray()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.Invariant:prob_and(DD)D
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15342 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:slice([III)[I | OPERATOR | 160615 | == -> !=
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLTE([II)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:subsetOf([J[J)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:lte(II)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfo:relate_var()V
daikon.PptSlice1:arity()I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.FormatTestCase:passes()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:noDups([I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaCharStream:BeginToken()C
daikon.Quant:union([I[I)[I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:ne(II)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:subsetOf([S[S)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quantify.Constant:Constant(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | STATEMENT | 46499 | stmt -> ;
daikon.inv.Invariant:justified()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_48()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.Debug:logDetail()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.ProglangType:dimensions()I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3_16()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:memberOf(D[F)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_58()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:subsetOf([D[F)Z
daikon.ValueTuple:size()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:gte(II)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.PptSlice0:arity()I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGT([II)Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String; | RETURN | 3487 | return null
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoAux:hashCode()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:hashCode()I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_52()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(J[J)Z
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_53()Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
653 2 464 2 859 2 141 2 330 4 911 2 75 2 686 2 47 2 
320 2 643 6 84 2 627 2 854 2 1066 2 26 2 221 6 1103 2 310 2 381 6 
0 2 924 6 464 2 388 6 931 4 239 4 734 2 651 2 151 2 776 6 859 2 532 2 252 6 
403 2 216 2 1097 16 144 2 573 4 830 10 531 26 575 8 859 6 580 2 1009 10 318 2 464 6 693 10 1016 4 730 4 280 12 589 8 132 10 170 2 103 16 1021 10 283 4 104 6 474 16 398 8 881 2 210 8 477 6 138 29 
849 6 878 4 
278 2 
265 2 141 2 115 2 856 2 295 2 
336 4 113 2 258 4 1097 24 606 6 146 6 829 6 830 6 531 36 859 4 498 4 351 4 580 2 1009 12 272 2 1041 2 464 4 693 12 359 6 729 2 730 2 280 15 132 12 1021 12 103 24 472 8 104 4 474 24 398 6 210 10 477 4 138 40 
265 2 224 2 230 2 
1060 2 622 2 851 22 623 2 467 10 504 2 696 2 121 2 875 2 361 2 1085 2 432 2 943 2 253 2 
369 2 1097 2 145 2 830 4 723 2 531 4 191 2 418 2 1009 2 902 2 693 2 127 2 132 2 1021 2 103 2 104 2 246 2 474 2 138 5 363 2 
584 2 258 4 1097 8 693 4 1016 2 359 6 568 2 280 4 146 6 132 4 103 8 1021 4 531 12 474 8 351 4 138 14 1009 4 
927 2 715 2 890 2 574 2 530 2 1070 4 265 6 224 4 898 2 90 2 44 2 46 2 764 2 230 2 980 14 1013 2 276 2 694 2 389 2 769 2 241 10 392 2 284 4 817 2 988 2 1025 2 295 2 
484 2 759 2 23 2 
256 2 262 2 717 2 4 2 119 2 9 16 721 2 724 2 858 3 266 1 269 1 859 34 13 1 271 2 425 4 1014 2 587 2 1015 2 868 2 870 2 277 2 732 2 874 8 876 32 738 2 290 2 291 2 435 2 134 1 437 32 1024 8 594 2 597 2 137 2 1027 1 883 2 600 2 442 3 748 1 749 6 143 2 889 2 609 8 610 2 148 6 895 2 614 2 615 2 458 2 459 2 763 3 47 2 766 2 767 2 160 2 50 2 464 32 465 24 466 2 468 2 630 2 771 3 913 3 169 2 56 6 1047 24 919 3 1051 2 174 2 331 2 175 2 480 1 335 2 65 1 66 2 179 2 1063 4 785 2 784 2 341 4 482 1 1064 2 932 1 652 2 487 2 792 2 1069 2 936 2 190 2 494 5 938 16 797 3 352 2 801 2 499 2 803 2 79 2 1077 2 80 4 949 2 505 3 952 2 810 2 201 2 200 2 202 2 811 4 360 2 957 3 510 2 821 2 963 2 213 12 673 2 368 16 1095 2 968 2 85 3 969 3 529 1 1101 2 1104 2 1102 2 225 4 379 2 834 3 1108 4 96 1 1116 2 1117 2 837 2 697 6 240 1 243 2 843 2 551 1 102 1 985 2 986 1 245 2 394 2 555 2 556 2 400 2 251 2 1128 16 255 4 
859 2 254 2 
859 4 130 2 408 2 
897 2 
110 2 565 18 998 8 10 2 12 2 417 20 585 4 275 2 274 2 1017 12 1019 20 27 2 287 2 29 4 884 4 886 8 35 4 149 20 893 2 306 2 150 62 755 2 307 18 152 20 758 2 155 2 462 2 312 2 1040 32 52 6 164 14 165 6 912 2 772 2 774 24 1046 2 635 2 1050 18 329 10 1052 2 637 2 921 2 1055 2 176 20 177 2 334 2 180 2 644 20 186 2 1065 4 188 2 70 2 344 2 789 2 794 4 660 2 496 12 192 2 799 6 77 16 1072 2 946 2 664 6 1081 2 804 2 197 2 806 2 198 20 199 14 955 4 813 2 1084 2 514 10 961 62 365 2 83 10 964 2 522 8 370 2 525 8 826 10 524 2 1099 2 832 2 685 18 227 2 534 2 95 2 691 14 1113 2 1115 2 1118 18 237 2 546 62 242 2 105 8 393 4 987 4 1127 2 707 2 
601 1 30 2 909 2 547 2 
396 2 909 2 
1028 2 745 2 283 2 265 2 187 2 909 2 661 2 
324 2 909 2 661 2 
156 2 909 2 661 2 
218 2 649 2 547 2 
909 2 661 2 
343 2 649 2 
55 2 909 2 
18 2 649 2 547 2 
972 2 547 2 452 2 
590 2 111 2 547 2 
603 2 428 2 547 2 
704 2 646 2 547 2 
649 2 461 2 
308 2 909 2 
972 2 45 2 
590 2 1080 2 
701 2 603 2 
599 2 704 2 
649 2 270 2 
704 2 620 2 
382 2 603 2 
590 2 543 2 
582 2 972 2 
18 2 649 2 547 2 706 2 
207 2 18 2 649 2 547 2 706 2 
649 2 976 2 547 2 
649 2 873 2 547 2 
561 2 1018 2 917 2 511 2 
265 2 948 2 1035 2 187 2 
745 2 265 2 948 2 1035 2 645 2 187 2 
283 2 265 2 965 2 187 2 909 2 661 2 
845 2 629 2 
265 2 141 2 187 2 515 2 
603 2 1034 2 
704 2 970 2 
972 2 97 2 
590 2 558 2 
590 2 704 2 61 2 
590 2 704 2 882 2 
590 2 58 2 704 2 
590 2 704 2 63 2 
930 6 187 2 791 2 265 2 950 6 807 2 877 2 332 2 
649 2 375 2 
422 2 995 4 313 2 851 6 538 2 907 2 215 2 951 2 716 2 167 2 612 2 6 2 1123 2 593 4 395 2 508 2 939 2 636 2 
547 2 1067 2 
594 2 
262 2 4 2 263 2 724 2 859 26 271 2 425 2 1011 2 125 2 1015 2 731 2 732 2 874 2 876 6 738 2 289 2 435 4 437 4 1027 2 743 2 749 2 40 2 148 6 615 2 616 2 42 2 1036 2 47 2 460 2 766 2 767 2 160 6 464 26 468 2 630 2 169 2 56 4 475 4 179 2 1063 2 785 2 341 2 1064 2 932 2 487 2 1069 2 801 2 356 2 803 2 80 4 949 2 805 2 952 2 200 2 202 2 811 4 821 2 213 8 968 2 523 4 1101 2 1100 2 1102 2 225 4 379 2 1108 4 1111 2 697 2 243 2 245 2 394 2 556 1 251 2 1128 6 708 2 
262 2 4 2 263 2 724 2 859 26 271 2 16 2 425 2 1012 2 1011 2 125 2 1015 2 277 2 731 2 732 2 874 2 876 6 738 2 289 2 435 4 437 4 1027 2 743 2 749 2 40 2 148 6 615 2 616 2 42 2 1036 2 47 2 460 2 766 2 767 2 160 6 464 26 468 2 630 2 169 2 56 6 475 4 179 2 1063 2 785 2 341 2 1064 2 932 2 487 2 1069 2 801 2 803 2 80 4 949 2 805 2 952 2 200 2 202 2 811 4 360 2 821 2 213 8 968 2 523 4 1101 2 1100 2 1102 2 225 4 379 2 1108 4 687 2 697 2 243 2 245 2 394 2 556 2 251 2 1128 6 
124 2 
440 2 223 2 
847 2 713 2 712 2 340 4 925 2 643 6 4 2 1066 4 407 2 572 4 999 2 410 2 264 4 720 2 576 2 859 12 941 2 802 2 803 2 424 2 949 2 1015 2 667 8 22 4 202 2 811 2 735 2 25 8 738 2 820 2 596 2 519 2 84 4 751 2 303 2 752 2 828 2 453 2 148 4 221 6 1103 2 225 2 1106 2 226 10 310 2 1039 4 381 6 383 2 317 2 464 6 468 2 982 2 632 2 107 2 1045 4 554 2 173 2 326 2 479 2 1056 2 
847 2 713 2 712 2 340 4 925 2 643 8 854 2 4 2 407 2 1066 4 572 4 999 2 410 2 264 4 576 2 859 12 941 2 802 2 803 2 424 2 949 2 1015 2 667 8 22 4 202 2 811 2 735 2 25 8 738 2 820 2 596 2 519 2 824 4 84 4 751 2 303 2 752 2 828 2 453 2 148 4 221 6 1103 2 225 2 1106 2 226 10 310 2 1039 4 381 8 688 2 383 2 317 2 464 6 468 2 982 2 1121 2 107 2 1045 4 554 2 173 2 326 2 479 2 1056 2 
424 2 712 2 925 2 84 2 752 2 407 2 1066 2 22 2 572 4 735 2 410 2 221 2 107 2 173 2 596 2 479 2 1039 4 381 2 
847 2 713 2 712 2 340 4 925 2 643 6 854 2 4 2 1066 4 407 2 572 4 999 2 410 2 264 4 720 2 576 2 859 12 941 2 802 2 803 2 424 2 949 2 1015 2 667 4 22 4 202 2 811 2 735 2 25 4 738 2 820 2 596 2 519 2 84 4 751 2 303 2 752 2 828 2 453 2 148 4 221 4 225 2 1106 2 226 6 310 2 1039 4 381 6 383 2 317 2 464 6 468 2 982 2 632 2 107 2 1045 4 554 2 173 2 326 2 479 2 1056 2 
847 2 713 2 712 2 340 4 925 2 643 6 4 2 1066 4 407 2 572 4 999 2 410 2 264 4 720 2 576 2 859 12 941 2 802 2 803 2 424 2 949 2 1015 2 667 4 22 4 202 2 811 2 735 2 25 4 738 2 820 2 596 2 519 2 84 4 751 2 303 2 752 2 828 2 453 2 148 4 221 6 225 2 1106 2 226 6 310 2 1039 4 381 4 383 2 317 2 464 6 627 2 468 2 982 2 632 2 107 2 1045 4 554 2 173 2 326 2 479 2 1056 2 
847 2 713 2 712 2 340 4 925 2 643 6 4 2 1066 4 407 2 572 4 999 2 410 2 264 4 720 2 576 2 859 12 941 2 802 2 803 2 424 2 949 2 1015 2 667 4 22 4 202 2 811 2 735 2 25 8 738 2 820 2 596 2 519 2 84 4 751 2 303 2 752 2 828 2 453 2 148 4 221 6 1103 2 225 2 1106 2 226 6 310 2 1039 4 381 6 383 2 317 2 464 6 468 2 982 2 632 2 107 2 1045 4 554 2 173 2 326 2 479 2 1056 2 
847 2 713 2 712 2 340 4 925 2 643 8 4 2 1066 4 407 2 572 4 999 2 410 2 264 4 720 2 576 2 859 12 941 2 802 2 803 2 424 2 949 2 1015 2 667 8 22 4 202 2 811 2 735 2 25 8 738 2 820 2 596 2 519 2 84 4 751 2 303 2 752 2 828 2 453 2 148 4 221 8 1103 2 225 2 1106 2 226 10 310 2 1039 4 381 6 383 2 317 2 464 6 627 2 468 2 982 2 632 2 107 2 1045 4 554 2 173 2 326 2 479 2 1056 2 
847 2 713 2 712 2 340 4 925 2 643 6 4 2 1066 4 407 2 572 4 999 2 410 2 264 4 720 2 576 2 859 12 941 2 802 2 803 2 424 2 949 2 1015 2 667 8 22 4 202 2 811 2 735 2 25 8 738 2 820 2 596 2 519 2 84 4 751 2 303 2 752 2 828 2 453 2 148 4 221 6 1103 2 225 2 1106 2 226 10 310 2 1039 4 381 6 383 2 317 2 464 6 468 2 982 2 632 2 107 2 1045 4 554 2 173 2 326 2 479 2 1056 2 
847 2 262 2 4 2 5 2 572 4 264 8 576 2 859 46 578 2 271 12 863 2 865 1 586 6 22 4 874 2 876 8 25 2 880 2 596 2 885 1 301 1 303 2 891 6 615 2 616 4 897 6 42 2 310 4 47 2 317 2 627 4 56 6 632 2 326 2 638 6 641 2 340 6 925 2 643 12 341 2 658 1 346 1 659 2 941 2 74 2 348 6 662 7 353 2 947 6 80 4 949 2 360 2 967 1 968 2 84 4 86 6 681 6 379 2 380 6 93 2 381 4 383 2 387 10 982 2 697 2 984 6 101 7 106 2 107 2 991 2 109 4 712 2 713 2 718 2 407 2 408 6 999 2 122 1 410 2 424 2 425 2 1015 2 427 2 128 2 731 2 735 2 738 2 437 2 140 2 749 2 751 4 752 2 448 2 449 6 450 2 148 6 453 4 1039 4 159 2 767 2 160 6 464 24 468 2 166 2 169 2 1045 4 473 2 173 2 775 4 479 2 1056 2 179 2 481 6 1063 2 785 2 185 6 1066 4 788 6 487 2 1069 2 493 2 492 2 193 1 802 2 1073 8 1075 1 803 2 805 2 200 2 202 2 811 4 820 2 822 2 513 2 519 2 213 4 520 2 825 2 523 4 1096 2 828 2 221 8 1101 2 1102 2 225 4 1105 2 1106 2 226 2 1108 4 228 2 1110 2 842 2 243 2 245 2 554 2 556 2 557 2 254 6 1128 6 
109 4 993 2 847 2 713 2 712 2 262 2 718 2 407 2 4 2 5 2 408 6 572 4 999 2 410 2 264 8 576 2 859 48 578 2 863 2 271 12 424 2 425 4 586 6 1015 2 128 2 427 2 731 2 22 4 874 2 876 8 735 2 25 6 738 2 880 2 435 2 437 2 596 2 140 2 751 4 749 2 303 2 752 2 448 2 891 6 449 6 450 2 453 4 148 6 615 2 897 6 616 4 42 2 310 4 159 2 1039 4 47 2 767 2 160 6 317 2 464 26 54 2 468 2 166 2 169 2 56 6 632 2 473 2 1045 4 775 4 326 2 173 2 479 2 1056 2 638 6 179 2 481 6 641 2 340 6 925 2 785 2 1063 4 341 4 643 12 185 6 788 6 1066 4 487 2 1069 2 492 2 493 2 659 2 74 2 941 2 348 6 353 2 947 6 1073 8 802 2 803 2 80 4 805 2 949 2 200 2 202 2 811 4 360 2 820 2 822 2 513 2 213 8 519 2 520 2 825 2 1096 2 523 4 968 2 84 4 86 6 828 2 681 6 1101 2 221 8 1102 2 1103 4 1105 2 225 4 226 2 1106 2 379 2 380 6 93 2 228 2 1108 4 381 8 1110 2 383 2 387 10 982 2 984 6 697 2 842 2 243 2 106 2 245 2 107 2 554 2 556 2 557 2 991 2 254 6 1128 6 
109 4 993 2 847 2 713 2 712 2 262 2 718 2 407 2 4 2 5 2 408 6 572 4 999 2 410 2 264 8 576 2 859 48 578 2 863 2 271 12 424 2 425 4 586 6 1015 2 128 2 427 2 731 2 22 4 874 2 876 8 735 2 25 6 738 2 880 2 435 2 437 2 596 2 140 2 751 4 749 2 303 2 752 2 448 2 891 6 449 6 450 2 453 4 148 6 615 2 897 6 616 4 42 2 310 4 159 2 1039 4 47 2 767 2 160 6 317 2 464 26 54 2 468 2 166 2 169 2 56 6 632 2 473 2 1045 4 775 4 326 2 173 2 479 2 1056 2 638 6 179 2 481 6 641 2 340 6 925 2 1063 4 785 2 341 4 643 12 185 6 788 6 1066 4 487 2 1069 2 492 2 493 2 659 2 74 2 941 2 348 6 353 2 947 6 1073 8 802 2 803 2 80 4 805 2 949 2 667 4 200 2 202 2 811 4 360 2 820 2 822 2 513 2 213 8 519 2 520 2 825 2 1096 2 523 4 968 2 84 4 86 6 828 2 681 6 1101 2 221 8 1103 4 1102 2 1105 2 225 4 226 6 1106 2 379 2 380 6 93 2 228 2 1108 4 381 8 1110 2 383 2 387 10 982 2 984 6 697 2 842 2 243 2 106 2 245 2 107 2 554 2 556 2 557 2 991 2 254 6 1128 6 
847 2 854 2 262 2 4 2 5 2 572 4 264 8 576 2 859 52 578 2 271 10 863 2 15 2 586 6 22 4 874 4 876 12 25 6 880 2 31 6 32 6 596 2 34 2 303 2 891 6 304 2 894 6 615 2 616 4 897 12 42 2 619 6 310 4 47 2 317 2 906 6 627 2 54 2 56 6 632 2 326 2 638 6 641 2 340 6 925 2 643 16 341 4 659 2 941 2 74 2 348 6 353 2 947 12 80 4 949 2 667 4 360 2 968 2 84 4 86 6 681 6 379 2 380 6 93 2 381 10 383 2 387 8 982 2 697 4 984 6 106 2 107 2 991 2 109 4 993 2 712 2 713 2 718 2 407 2 408 12 999 2 410 2 1003 2 424 2 425 4 1015 2 128 2 427 2 731 2 735 2 738 2 1022 6 435 2 436 2 437 4 140 2 749 4 751 4 752 2 448 2 449 12 450 2 148 6 453 4 153 6 1037 2 1039 4 767 2 160 8 464 24 468 2 166 2 169 2 773 2 1045 4 473 2 173 2 775 4 479 2 1056 2 179 2 481 12 785 2 1063 4 184 2 185 6 1066 4 788 6 487 2 1069 2 493 2 492 2 795 6 802 2 1073 8 803 2 196 6 805 4 200 2 202 2 811 4 820 2 822 2 513 2 519 2 213 10 520 2 825 2 523 6 1096 2 828 2 221 10 1101 2 1102 2 1103 4 225 4 1105 2 1106 2 226 6 1108 4 228 2 1110 2 842 2 243 2 245 2 554 2 556 2 557 2 254 12 1128 8 
519 2 847 2 340 2 713 2 712 2 643 4 84 4 752 2 407 2 1066 4 828 2 572 2 999 2 410 2 264 2 221 6 1103 2 226 4 1106 2 576 2 859 4 310 2 1039 2 381 6 802 2 667 4 982 2 735 2 25 6 632 2 1045 2 107 2 326 2 173 2 1056 2 
847 2 712 2 713 2 996 2 262 2 4 2 407 2 572 2 999 2 410 2 264 2 576 2 859 28 419 3 271 4 1015 2 587 2 731 2 735 2 876 8 25 6 738 2 437 3 594 2 749 3 752 2 148 6 615 2 616 2 42 2 310 2 1039 2 159 2 47 2 767 2 160 6 464 24 468 2 169 2 915 2 56 6 632 2 1045 2 173 2 326 2 1056 2 179 2 640 2 340 2 785 2 643 4 1066 4 487 2 1069 2 936 2 941 2 802 2 803 2 80 4 949 2 200 2 202 2 811 4 360 2 209 2 519 2 968 2 523 4 84 4 828 2 221 6 1103 2 1102 2 225 4 226 2 1106 2 379 2 1108 4 381 6 837 2 387 2 982 2 697 3 243 2 245 2 107 2 556 2 1126 2 1128 6 
999 2 315 2 828 2 
999 2 315 2 828 2 
109 2 994 4 714 2 854 4 262 2 4 2 572 2 999 6 264 4 576 2 268 2 859 24 421 2 271 4 424 2 425 4 1015 2 731 2 22 4 876 2 735 2 429 2 430 2 25 6 431 4 738 2 437 2 751 2 1032 2 752 2 453 4 40 4 148 6 615 2 616 6 42 2 157 2 310 4 1039 2 47 2 48 2 767 2 160 2 315 2 317 2 464 16 627 4 468 2 56 6 1045 2 775 2 780 2 479 2 781 2 1059 2 179 2 641 2 340 4 67 2 1063 4 785 2 182 2 341 4 643 16 68 2 1066 4 487 2 1069 2 493 2 350 2 802 2 803 2 80 4 949 2 667 4 200 2 202 2 811 4 360 2 507 2 820 2 213 4 968 2 84 4 828 4 1101 4 221 12 1102 2 1103 4 225 4 226 6 379 2 380 2 228 2 1108 4 381 12 387 2 243 2 245 2 107 4 554 2 556 2 559 2 1128 2 
440 2 1059 2 271 2 825 2 925 2 464 2 1015 2 387 2 391 2 775 2 682 2 292 2 268 2 859 4 557 2 559 2 380 2 
109 2 994 4 1 2 714 2 854 4 262 2 4 2 572 2 999 6 264 4 576 2 268 2 859 24 421 2 271 2 424 2 425 4 1015 2 731 2 22 4 876 2 735 2 24 2 430 2 25 6 431 4 738 2 437 4 33 2 751 4 1032 2 303 2 752 2 453 4 40 4 148 6 615 2 616 6 42 2 310 4 1039 2 47 2 48 2 767 2 160 2 315 2 317 2 464 16 627 4 468 2 56 6 1045 2 780 2 479 2 1059 2 179 2 641 2 340 4 67 2 338 2 1063 4 785 2 182 2 341 4 643 16 68 4 1066 4 487 2 1069 2 493 2 350 2 802 2 803 2 80 4 949 2 667 4 200 2 202 2 811 4 360 2 820 2 213 4 968 2 84 4 828 4 1101 4 221 12 1102 2 1103 4 225 4 226 6 379 2 380 2 228 2 1108 4 977 2 381 12 243 2 245 2 107 4 554 2 556 2 559 2 1128 2 
109 2 994 4 714 2 854 4 262 2 4 2 572 2 999 6 264 4 576 2 268 2 859 24 1007 2 421 2 271 4 424 2 425 4 1015 2 731 2 22 4 876 2 735 2 430 2 25 6 431 4 738 2 133 2 437 2 300 2 751 4 1032 2 303 2 752 2 453 4 40 4 148 6 615 2 616 6 42 2 310 4 1039 2 47 2 48 2 767 2 160 2 315 2 317 2 464 16 626 2 627 4 468 2 56 6 1045 2 775 2 780 2 479 2 1059 2 179 2 641 2 340 4 67 2 1063 4 785 2 182 2 341 4 643 16 68 2 1066 4 487 2 1069 2 493 2 350 2 802 2 803 2 80 4 949 2 667 4 200 2 202 2 811 4 360 2 820 2 213 4 968 2 84 4 828 4 1101 4 221 12 1102 2 1103 4 225 4 226 6 379 2 380 2 228 2 1108 4 381 12 387 2 243 2 245 2 107 4 554 2 556 2 559 2 1128 2 709 2 
562 2 566 2 4 2 571 2 569 2 7 2 9 30 14 8 581 2 15 2 17 2 588 2 19 4 591 2 34 4 37 6 604 2 615 2 616 2 42 2 621 2 47 4 49 22 625 2 51 2 56 14 57 2 633 2 60 38 640 2 639 8 647 2 648 4 71 2 654 2 655 8 656 8 657 2 74 2 76 2 663 4 78 2 80 6 665 4 666 3 670 2 675 22 678 2 680 2 88 2 89 24 683 8 94 2 689 20 693 4 98 2 695 10 697 31 698 2 699 2 103 8 702 2 703 8 705 2 710 2 112 4 113 2 114 40 718 2 117 3 116 2 719 10 120 16 125 2 729 4 129 2 131 2 132 4 736 2 738 2 737 32 135 2 739 2 138 16 139 2 741 40 742 2 743 22 747 16 749 16 750 16 754 16 148 6 756 2 757 8 154 2 760 2 158 2 767 2 160 14 768 8 166 2 770 2 169 2 773 2 777 4 782 8 181 2 184 2 183 2 786 2 787 2 189 2 796 2 798 6 800 2 803 2 805 46 200 4 202 2 811 4 203 4 205 8 815 2 816 2 818 6 210 4 209 2 211 8 823 8 213 80 222 2 220 2 831 2 225 4 232 10 836 3 235 2 838 2 839 8 841 2 243 4 244 16 245 2 247 8 844 2 846 2 850 6 852 88 853 2 261 6 262 4 855 8 263 2 859 64 267 4 271 2 273 4 867 8 869 16 872 18 871 8 874 28 279 2 280 6 281 2 876 44 879 2 286 4 285 2 289 2 880 2 296 2 297 3 299 22 887 2 888 8 304 2 896 2 309 24 904 64 905 4 314 1 319 2 321 16 910 2 323 2 914 2 325 8 918 2 327 2 920 2 333 8 337 8 926 2 929 2 932 2 345 2 937 4 938 8 347 24 351 4 944 2 354 64 355 3 357 2 949 2 359 6 360 6 958 4 362 2 962 2 960 18 364 8 366 2 968 4 373 2 374 2 376 2 377 2 378 2 384 8 385 6 978 2 979 2 386 2 397 2 398 6 399 2 401 4 992 2 402 2 404 2 996 2 997 2 409 8 411 2 1000 2 1003 2 1006 2 416 2 414 16 420 2 419 2 1009 4 1008 2 423 2 1011 2 1015 2 427 4 1021 4 433 62 436 2 437 31 439 2 1027 2 441 2 443 10 1029 4 445 3 1031 2 446 2 447 2 448 2 451 15 456 18 457 2 1036 2 460 2 1042 2 464 34 1043 8 468 2 471 16 474 8 1049 6 476 15 1053 2 477 4 478 8 1058 2 1061 2 1062 2 483 2 485 2 1068 2 487 2 488 2 1069 2 490 2 497 2 1076 16 501 16 502 2 1083 8 1087 2 1088 2 509 2 1089 2 1090 3 1091 10 517 2 518 8 1092 2 521 16 1097 8 523 12 528 3 527 24 1098 2 1101 4 1100 2 531 12 1108 6 1112 2 1110 2 1109 4 535 2 537 2 1114 2 539 2 541 2 542 16 544 16 549 2 550 2 1124 8 553 18 556 6 1125 2 1126 2 1128 14 
297 2 443 2 523 2 749 2 647 2 719 4 411 2 490 2 859 2 1004 2 497 2 581 2 160 2 357 2 464 2 805 6 695 2 697 2 169 2 876 2 1088 2 437 2 1128 2 1058 2 
297 2 443 2 523 2 749 2 647 2 719 4 411 2 490 2 859 2 1004 2 497 2 581 2 160 2 357 2 464 2 805 6 695 2 697 2 169 2 876 2 1088 2 437 2 1128 2 1058 2 
297 2 443 2 523 2 749 2 647 2 719 4 411 2 490 2 859 2 1004 2 497 2 581 2 160 2 357 2 464 2 805 6 695 2 697 2 169 2 876 2 1088 2 437 2 1128 2 1058 2 
960 4 823 2 676 2 1097 2 406 4 857 3 451 3 971 2 9 2 456 4 531 4 490 2 938 2 859 10 1009 2 726 2 904 6 463 2 464 4 358 2 693 2 53 2 872 4 169 2 697 3 132 2 876 2 1021 2 103 2 553 4 288 2 1023 2 59 2 474 2 398 4 476 3 437 3 135 2 477 2 138 5 
960 4 823 2 676 2 1097 2 406 4 857 2 451 2 971 2 9 2 456 4 531 4 490 2 938 2 859 10 580 2 1009 2 726 2 904 6 463 2 464 4 358 2 693 2 53 2 872 4 169 2 697 2 280 2 132 2 876 2 1021 2 103 2 553 4 288 2 1023 2 59 2 474 2 398 4 476 2 437 2 135 2 210 2 477 2 138 4 
960 4 823 2 676 2 1097 2 406 4 857 2 451 2 971 2 9 2 456 4 531 4 490 2 938 2 859 10 580 2 1009 2 726 2 904 6 463 2 464 4 358 2 693 2 53 2 872 4 169 2 697 2 280 2 132 2 876 2 1021 2 103 2 553 4 288 2 1023 2 59 2 474 2 398 4 476 2 437 2 135 2 210 2 477 2 138 4 
960 4 823 2 676 2 1097 2 406 4 857 2 451 2 971 2 9 2 456 4 531 4 490 2 938 2 859 10 580 2 1009 2 726 2 904 6 463 2 464 4 358 2 693 2 53 2 872 4 169 2 697 2 280 2 132 2 876 2 1021 2 103 2 553 4 288 2 1023 2 59 2 474 2 398 4 476 2 437 2 135 2 210 2 477 2 138 4 
960 4 823 2 676 2 1097 2 406 4 857 2 451 2 971 2 9 2 456 4 531 4 490 2 938 2 859 10 580 4 1009 2 726 2 904 6 463 2 464 4 358 2 693 2 53 2 872 4 169 2 697 2 280 4 132 2 876 2 1021 2 103 2 553 4 288 2 1023 2 59 2 474 2 398 4 476 2 437 2 135 2 210 4 477 2 138 4 
72 2 564 2 778 2 91 2 670 2 903 2 
743 2 722 2 248 2 11 2 567 2 598 2 903 2 
298 1 602 2 677 2 890 1 933 2 607 2 455 2 1107 2 859 10 860 2 940 2 684 2 92 2 764 1 947 2 316 2 464 8 540 1 100 2 983 2 202 2 733 2 108 2 512 1 249 2 922 2 
112 2 1061 2 1097 6 371 2 447 2 829 4 934 2 489 2 531 12 859 6 975 2 498 2 351 2 580 2 1009 6 161 2 464 6 693 6 81 2 359 4 280 6 132 6 472 2 103 6 1021 6 474 6 398 4 210 2 477 2 138 15 
500 2 233 7 1078 2 464 1 1030 2 563 2 872 2 812 2 631 2 814 2 553 2 456 2 491 1 859 1 1054 2 595 2 901 2 835 4 
500 2 233 6 1078 2 563 2 1030 4 872 2 812 4 631 2 814 4 553 2 456 2 1054 2 595 2 901 2 835 4 
500 2 233 10 1078 2 464 1 563 2 1030 8 872 2 812 8 631 6 814 8 553 2 456 2 491 1 859 1 1054 8 595 2 901 2 835 4 
500 2 233 2 1078 2 563 2 1030 2 872 2 812 2 814 2 553 2 456 2 595 2 901 2 835 2 
711 17 2 6 257 2 853 8 260 4 262 14 3 5 570 28 118 18 8 6 1002 6 725 2 123 24 1005 2 859 150 577 92 412 4 413 10 415 8 861 8 579 24 864 4 583 6 1010 90 866 10 126 10 728 4 727 2 21 24 20 6 1020 4 28 2 434 4 592 90 1026 4 740 4 136 2 444 8 36 4 302 6 38 6 1033 42 753 11 608 10 611 4 305 2 454 2 613 10 41 8 457 8 899 12 900 10 43 4 761 2 765 2 311 16 464 134 624 6 908 2 322 2 628 42 1044 6 168 4 469 6 470 4 916 22 56 248 171 34 634 18 1048 4 779 8 62 1 923 24 178 2 783 16 342 4 929 8 69 6 650 8 486 6 790 10 793 4 935 4 495 4 942 6 349 4 945 2 195 4 194 6 1079 6 80 88 503 4 808 84 809 4 954 36 200 14 506 4 360 58 206 6 208 10 959 6 82 8 672 2 674 4 214 2 367 16 372 12 827 26 679 6 219 6 87 2 973 6 974 2 833 6 1108 112 231 50 234 2 692 4 981 16 545 24 99 2 390 6 840 24 243 8 1122 6 556 58 989 124 990 26 
560 2 848 2 711 2 783 4 259 2 853 2 929 2 262 2 405 2 3 2 570 38 118 2 790 2 8 2 1001 2 123 2 73 2 859 46 413 2 579 2 862 2 194 2 1074 2 583 2 80 20 866 2 426 2 126 2 727 2 1082 2 809 2 954 2 953 2 200 2 20 2 282 2 506 2 204 2 360 2 206 2 668 2 208 2 956 4 819 2 1086 6 669 2 293 2 671 2 212 2 82 2 672 2 744 2 1094 2 367 4 966 4 302 4 142 2 217 2 526 2 39 4 608 2 892 2 147 2 613 2 457 2 974 2 833 2 900 2 1038 2 1108 20 229 2 765 2 533 4 690 2 464 44 908 2 322 2 238 2 163 2 981 4 548 2 1120 2 243 2 552 2 56 44 172 2 328 2 556 2 989 6 779 6 64 2 923 2 
711 10 2 4 257 2 853 2 262 6 405 2 570 14 118 10 8 4 1002 4 859 78 577 24 864 4 583 4 866 4 126 4 728 4 727 2 21 8 20 4 1020 4 28 2 434 4 294 32 438 8 744 2 444 4 746 2 36 4 302 2 1033 8 38 4 605 2 608 4 454 2 41 4 613 6 457 2 617 2 899 14 618 4 762 4 765 2 311 8 464 70 162 8 624 4 908 2 322 2 628 16 163 10 1044 4 168 4 469 4 56 104 171 30 1048 4 328 10 779 6 1057 4 178 2 783 10 642 4 339 2 928 4 342 4 929 2 69 4 486 4 790 4 495 4 942 4 349 4 1071 16 195 4 194 4 80 36 808 24 954 6 200 6 360 30 206 4 669 2 959 4 516 2 671 10 672 2 674 4 367 10 679 4 219 4 973 4 833 4 1108 44 231 8 536 8 692 2 236 4 1119 8 981 10 243 2 700 4 1122 4 556 28 989 24 250 16 1129 2 
783 6 711 2 260 2 853 2 929 2 262 2 3 2 570 14 650 2 118 2 790 2 8 4 793 2 725 2 859 28 194 4 583 4 80 14 866 2 426 2 126 2 727 2 200 2 954 2 20 4 360 12 206 4 434 2 136 2 672 2 744 2 674 2 444 4 367 6 302 2 753 2 608 2 305 2 613 2 457 2 974 2 833 4 761 2 1108 14 765 2 311 6 692 2 464 26 908 2 322 2 981 6 99 2 916 10 243 2 56 40 171 6 556 12 989 8 779 4 
1093 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (312,579) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (581,772) (581,772) (35,327,336,490,1119) (35,327,336,490,1119) (35,327,336,490,1119) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (142,328) (142,328) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 704 630 325 736 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (581,772) (581,772) 925 175 1034 151 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (581,772) (581,772) 616 175 1034 151 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (581,772) (581,772) 616 175 1034 151 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:gte(II)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:modulus([I)[I
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ProglangType:isFloat()Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLT([I[I)Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | RETURN | 1527 | return null
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltwiseLT([I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gt(II)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:justified()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsString()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | STATEMENT | 5655 | stmt -> ;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfo:relate_var()V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I | RETURN | 62242 | return null
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | ASSIGN | 4792 | = null
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaCharStream:backup(I)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.PptSlice0:arity()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183876 | = null
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Ppt:Ppt()V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:noDups([I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | ASSIGN | 10728 | = null
daikon.ModBitTracker:num_sets()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfo:isPrestate()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGTE([II)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:setEqual([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.string.OneOfString:enabled()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:jj_ntk()I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:union([I[I)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([B[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10199 | = null
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:sameLength([I[I)Z
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariant:logOn()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.PptSlice2:arity()I
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(I[I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Debug:logDetail()Z
daikon.Quant:eltsEqual([II)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndColumn()I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quantify.Constant:Constant(I)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName; | RETURN | 78413 | return null
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:isDerived()Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.ProglangType:isString()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isPointer()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([D)D
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:is_typeof()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 5919 | return null
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:has_typeof()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ProglangType:isArray()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.diff.InvMap:InvMap()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaCharStream:readChar()C
daikon.inv.Invariant:isWorthPrinting()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.Intern:intern([I)[I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.ModBitTracker:split(I)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptSlice1:num_samples()I
utilMDE.MathMDE:sign(I)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z | CONDITION | 171995 | if (x) -> if (!x)
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String; | RETURN | 94883 | return null
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:min([I)I
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 98882 | return null
jtb.JavaCharStream:BeginToken()C
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Node:Node()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ProglangType:isIntegral()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:eq(II)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.Invariant:prob_and(DD)D

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 2 821 2 685 4 26 2 1056 2 811 2 772 2 581 2 350 2 
168 6 1015 2 1116 2 321 6 805 2 937 2 946 2 587 6 874 2 6 2 751 2 
458 2 923 2 335 6 807 2 1103 6 461 2 772 2 590 6 116 6 573 4 402 4 488 2 581 2 
747 2 887 2 445 10 890 4 572 2 414 10 575 4 545 4 935 12 893 29 864 8 1043 6 795 8 796 8 693 10 18 10 581 6 837 2 89 2 1045 16 127 26 49 8 100 2 772 6 775 16 259 2 330 10 263 4 34 16 998 6 
1084 6 77 4 
294 2 
1100 2 267 2 268 2 479 2 74 2 379 2 718 2 1066 4 1067 2 791 2 831 2 967 2 580 2 285 2 579 2 454 2 48 4 803 2 392 2 806 2 765 4 96 2 872 2 908 2 26 4 100 2 212 2 465 2 851 2 565 2 566 2 
509 4 1102 2 3 2 445 16 748 6 651 6 790 4 1105 4 414 16 753 4 485 2 935 22 893 54 864 18 659 2 1043 4 246 6 796 6 18 16 693 16 581 4 800 4 1045 32 839 4 127 48 207 6 1047 6 497 2 631 6 528 8 557 2 772 4 29 4 775 32 259 2 330 6 263 2 34 32 998 4 
989 2 579 2 8 2 
602 2 883 22 525 2 1001 2 129 2 770 2 810 2 827 2 608 2 130 2 131 2 312 2 676 10 332 2 
445 2 414 2 235 2 515 2 935 2 893 6 864 2 865 2 18 2 693 2 286 2 1045 2 127 4 527 2 214 2 775 2 330 4 263 2 1095 2 599 2 34 2 997 2 998 2 
301 2 1045 8 127 12 1047 6 445 4 651 6 570 2 890 2 1105 4 29 4 414 4 775 8 935 4 893 16 693 4 18 4 34 8 
647 2 440 4 268 2 272 2 1066 4 749 4 152 10 8 2 234 4 197 2 233 2 720 2 1006 2 9 2 727 4 967 4 386 14 894 62 519 2 579 8 248 4 457 2 975 2 429 2 103 2 133 4 669 2 741 4 711 2 989 6 1028 2 365 4 1029 2 742 2 993 2 679 10 476 4 567 4 147 2 642 4 
926 2 412 2 678 2 
1 2 714 1 1002 4 157 2 15 1 162 2 866 1 581 22 583 2 320 1 21 4 459 2 591 1 30 1 593 2 743 2 35 2 475 1 38 2 39 1 336 2 339 4 756 2 757 4 200 2 490 2 352 2 625 2 901 2 495 3 909 2 356 2 772 24 773 1 634 2 366 6 916 4 780 2 64 1 222 1 373 2 929 1 653 2 232 2 240 5 802 1 94 2 944 1 665 1 256 2 812 6 813 6 536 2 108 2 817 2 1096 2 821 2 275 2 829 1 552 5 971 1 554 1 128 2 846 2 292 2 138 1 559 1 564 2 300 2 
915 2 772 2 
51 2 1122 2 772 4 
513 2 
922 6 1061 6 648 28 81 2 309 2 861 2 385 2 862 4 155 6 578 6 863 2 245 2 1071 6 869 2 250 6 1076 6 1016 4 1079 2 1081 2 174 6 27 2 105 28 399 2 814 2 469 2 405 2 264 2 406 2 958 2 1033 2 882 4 269 2 41 4 114 6 828 2 483 2 276 6 543 2 281 2 121 6 487 2 550 2 617 6 836 6 696 2 972 2 553 6 1117 6 982 2 211 2 52 8 849 2 1054 2 990 28 638 2 995 2 143 6 918 2 921 6 713 2 641 4 
511 2 902 1 1118 2 1099 2 
870 2 1118 2 
545 2 579 2 562 2 782 2 247 2 1118 2 439 2 
562 2 462 2 1118 2 
544 2 562 2 1118 2 
511 2 1017 2 744 2 
562 2 1118 2 
595 2 1017 2 
726 2 1118 2 
511 2 1017 2 249 2 
0 2 511 2 463 2 
278 2 511 2 80 2 
511 2 945 2 474 2 
511 2 1004 2 719 2 
1017 2 537 2 
1118 2 1032 2 
0 2 76 2 
913 2 80 2 
627 2 474 2 
161 2 1004 2 
1017 2 45 2 
1004 2 295 2 
229 2 474 2 
886 2 80 2 
0 2 1082 2 
511 2 1109 2 1017 2 249 2 
511 2 1109 2 1017 2 563 2 249 2 
511 2 1093 2 1017 2 
511 2 1017 2 680 2 
884 2 930 2 529 2 858 2 
876 2 443 2 579 2 247 2 
876 2 443 2 579 2 480 2 782 2 247 2 
545 2 579 2 562 2 247 2 1118 2 621 2 
379 2 372 2 
545 2 579 2 247 2 530 2 
244 2 474 2 
1004 2 421 2 
0 2 369 2 
65 2 80 2 
62 2 1004 2 80 2 
1049 2 
5 2 1004 2 80 2 
376 2 1004 2 80 2 
328 6 672 2 728 2 579 2 142 2 247 2 
988 2 1017 2 
1087 2 1063 2 873 2 192 2 489 2 752 2 257 4 724 2 
511 2 1110 2 
256 2 
1 2 715 2 717 2 1002 4 4 2 571 2 576 2 157 2 1014 2 162 2 581 26 19 2 583 6 1018 2 588 2 593 2 178 4 596 2 472 2 189 8 38 2 339 4 486 2 756 2 757 4 200 2 351 2 352 2 625 2 761 2 50 2 906 2 767 2 909 2 772 26 634 2 637 2 776 2 366 6 916 4 780 2 783 2 70 2 228 2 373 2 653 2 514 2 86 4 1070 2 240 2 658 2 1072 2 94 6 665 2 812 4 813 4 817 2 1096 6 1097 2 821 2 275 2 829 2 552 2 705 2 128 2 292 2 846 2 431 2 558 2 986 2 561 4 564 2 438 2 300 2 
1 2 715 2 717 2 1002 4 4 2 571 2 576 2 157 2 1014 2 162 2 581 26 19 2 583 6 1018 2 588 2 593 2 178 4 743 2 472 2 189 8 38 2 339 4 486 2 612 2 756 2 757 4 200 2 351 2 352 2 625 2 761 2 901 2 50 2 906 2 767 2 909 2 772 26 634 2 637 2 776 2 366 6 916 4 780 2 783 2 225 2 70 2 228 2 373 2 653 2 514 2 86 4 1070 2 240 2 658 2 94 6 665 2 812 4 813 6 817 2 1096 6 1097 2 539 2 821 2 275 2 829 2 965 2 552 2 705 2 128 2 846 2 292 2 431 2 986 2 561 4 564 2 438 2 300 2 
298 2 
538 2 342 2 
924 4 442 8 787 2 1002 2 75 2 931 2 236 2 449 2 10 4 730 2 581 6 166 2 321 6 942 2 1015 2 168 6 805 4 943 2 587 6 874 4 738 4 534 2 593 2 260 2 1091 4 38 2 266 8 604 2 684 2 277 2 119 2 964 2 43 2 755 2 547 2 549 2 618 2 124 2 698 4 422 2 625 2 1116 2 903 10 904 2 292 2 846 2 909 2 912 4 772 12 1052 2 56 2 58 2 635 2 137 2 215 2 992 2 366 4 916 2 994 2 300 2 
924 4 442 8 787 2 1002 2 75 2 931 2 236 2 449 2 10 4 937 2 730 2 581 6 166 2 942 2 321 6 1015 2 168 8 943 2 805 4 587 8 874 4 738 4 534 2 593 2 260 2 1091 4 597 4 1031 2 38 2 266 8 604 2 684 2 277 2 119 2 964 2 43 2 755 2 547 2 549 2 124 2 618 2 349 2 698 4 625 2 1116 2 903 10 904 2 292 2 846 2 909 2 912 4 772 12 1052 2 56 2 58 2 137 2 215 2 992 2 366 4 916 2 994 2 300 2 
321 2 805 2 684 2 604 2 587 2 874 2 931 2 534 2 58 2 449 2 964 2 10 4 43 2 1091 4 755 2 992 2 618 2 698 2 
924 4 442 4 787 2 1002 2 75 2 931 2 236 2 449 2 10 4 937 2 730 2 581 6 166 2 321 4 942 2 168 6 805 4 943 2 587 6 874 4 738 4 534 2 593 2 260 2 1091 4 38 2 266 4 604 2 684 2 277 2 119 2 964 2 43 2 755 2 547 2 549 2 618 2 124 2 698 4 422 2 625 2 1116 2 903 6 904 2 292 2 846 2 909 2 912 4 772 12 1052 2 56 2 58 2 635 2 137 2 215 2 992 2 366 4 916 2 994 2 300 2 
924 4 442 4 787 2 1002 2 75 2 931 2 236 2 449 2 10 4 730 2 581 6 166 2 321 6 942 2 168 6 805 4 943 2 587 4 874 4 738 4 534 2 593 2 260 2 1091 4 38 2 266 4 604 2 684 2 751 2 277 2 119 2 964 2 43 2 755 2 547 2 549 2 618 2 124 2 698 4 422 2 625 2 1116 2 903 6 904 2 292 2 846 2 909 2 912 4 772 12 1052 2 56 2 58 2 635 2 137 2 215 2 992 2 366 4 916 2 994 2 300 2 
924 4 442 8 787 2 1002 2 75 2 931 2 236 2 449 2 10 4 730 2 581 6 166 2 321 6 942 2 1015 2 168 6 805 4 943 2 587 6 874 4 738 4 534 2 593 2 260 2 1091 4 38 2 266 4 604 2 684 2 277 2 119 2 964 2 43 2 755 2 547 2 549 2 618 2 124 2 698 4 422 2 625 2 1116 2 903 6 904 2 292 2 846 2 909 2 912 4 772 12 1052 2 56 2 58 2 635 2 137 2 215 2 992 2 366 4 916 2 994 2 300 2 
924 4 442 8 787 2 1002 2 75 2 931 2 236 2 449 2 10 4 730 2 581 6 166 2 321 8 942 2 1015 2 168 8 805 4 943 2 587 6 874 4 738 4 534 2 593 2 260 2 1091 4 38 2 266 8 604 2 684 2 751 2 277 2 119 2 964 2 43 2 755 2 547 2 549 2 618 2 124 2 698 4 422 2 625 2 1116 2 903 10 904 2 292 2 846 2 909 2 912 4 772 12 1052 2 56 2 58 2 635 2 137 2 215 2 992 2 366 4 916 2 994 2 300 2 
924 4 442 8 787 2 1002 2 75 2 931 2 236 2 449 2 10 4 730 2 581 6 166 2 321 6 942 2 1015 2 168 6 805 4 943 2 587 6 874 4 738 4 534 2 593 2 260 2 1091 4 38 2 266 8 604 2 684 2 277 2 119 2 964 2 43 2 755 2 547 2 549 2 618 2 124 2 698 4 422 2 625 2 1116 2 903 10 904 2 292 2 846 2 909 2 912 4 772 12 1052 2 56 2 58 2 635 2 137 2 215 2 992 2 366 4 916 2 994 2 300 2 
1 2 305 2 571 2 10 4 576 2 581 24 583 8 584 1 321 8 587 4 874 4 324 6 593 2 594 2 329 2 37 2 38 2 333 6 604 2 339 4 343 6 346 2 44 1 43 2 618 2 351 2 625 2 352 2 901 2 903 2 904 2 909 2 53 2 912 8 56 2 58 2 634 2 635 2 637 2 362 2 915 6 366 6 916 4 368 7 69 2 640 2 924 6 373 2 75 4 931 2 653 2 79 2 85 4 654 2 656 1 940 1 94 6 942 2 943 2 664 6 953 2 403 2 954 6 677 8 109 7 407 2 684 2 119 2 964 2 417 2 689 2 124 2 697 2 698 4 128 2 431 2 986 2 137 2 991 2 992 2 994 2 999 2 442 2 1002 4 448 6 449 2 157 2 729 1 162 2 730 2 731 6 164 1 733 1 166 4 168 12 738 4 467 6 1027 6 743 2 189 4 481 2 750 6 751 4 756 2 755 2 200 2 757 4 761 4 204 2 767 2 1052 2 772 46 215 2 780 12 779 6 783 2 223 2 786 6 787 2 513 6 236 2 792 1 516 2 1070 2 240 2 517 2 797 2 1074 2 523 10 805 4 812 2 1086 2 813 6 534 2 1090 2 260 2 1091 4 817 2 262 2 1096 6 821 2 822 2 270 4 824 2 542 2 275 2 277 2 547 2 549 2 552 2 1116 4 844 6 292 2 846 2 561 4 1121 1 1122 6 564 2 300 2 
999 2 1 2 442 6 305 2 1002 4 571 4 448 6 449 2 10 4 576 2 157 2 731 6 730 2 162 2 581 26 583 8 166 4 168 12 1015 4 321 8 587 8 324 6 738 4 874 4 593 2 594 2 1027 6 467 6 329 2 743 2 189 8 37 2 333 6 38 2 604 2 481 2 339 4 750 6 343 6 346 2 43 2 755 2 756 2 757 4 200 2 618 2 351 2 761 4 352 2 625 2 204 2 901 2 903 2 904 2 767 2 53 2 909 2 912 8 772 48 1052 2 56 2 58 2 635 2 634 2 637 2 215 2 362 2 915 6 366 6 779 6 780 12 916 4 783 4 223 2 69 2 640 2 373 2 924 6 786 6 787 2 75 4 931 2 79 2 653 2 513 6 236 2 85 4 654 2 86 2 516 2 1070 2 240 2 517 2 797 2 522 2 1074 2 523 10 942 2 94 6 943 2 805 4 664 6 1086 2 812 2 534 2 813 6 953 2 1090 2 260 2 1091 4 403 2 817 2 954 6 677 8 262 2 1096 6 407 2 821 2 822 2 684 2 824 2 270 4 542 2 275 2 277 2 964 2 119 2 689 2 417 2 547 2 549 2 124 2 552 2 697 2 698 4 555 2 1116 4 844 6 128 2 846 2 292 2 431 2 986 4 137 2 991 2 992 2 561 4 1122 6 994 2 564 2 300 2 
999 2 1 2 442 6 305 2 1002 4 571 4 448 6 449 2 10 4 576 2 157 2 731 6 730 2 162 2 581 26 583 8 166 4 168 12 1015 4 321 8 587 8 324 6 738 4 874 4 593 2 594 2 1027 6 467 6 329 2 743 2 189 8 37 2 333 6 38 2 604 2 481 2 339 4 750 6 343 6 346 2 43 2 755 2 756 2 757 4 200 2 618 2 351 2 761 4 352 2 625 2 204 2 901 2 903 6 904 2 767 2 53 2 909 2 912 8 772 48 1052 2 56 2 58 2 635 2 634 2 637 2 215 2 362 2 915 6 366 6 779 6 780 12 916 4 783 4 223 2 69 2 640 2 924 6 373 2 786 6 787 2 75 4 931 2 79 2 653 2 513 6 236 2 85 4 654 2 86 2 516 2 1070 2 240 2 517 2 797 2 522 2 1074 2 523 10 94 6 942 2 943 2 805 4 664 6 1086 2 812 2 534 2 813 6 953 2 1090 2 260 2 1091 4 403 2 817 2 954 6 677 8 262 2 1096 6 407 2 821 2 266 4 822 2 684 2 824 2 270 4 542 2 275 2 277 2 964 2 119 2 689 2 417 2 547 2 549 2 124 2 552 2 697 2 698 4 555 2 1116 4 844 6 128 2 846 2 292 2 431 2 986 4 137 2 991 2 992 2 561 4 1122 6 994 2 564 2 300 2 
1 2 305 2 571 4 10 4 576 2 581 24 583 12 321 10 587 10 874 4 324 12 593 2 594 2 33 2 37 2 38 2 333 6 604 2 339 4 343 6 346 2 43 2 618 2 351 2 622 6 625 2 352 2 901 2 903 6 904 2 355 6 909 2 53 2 912 8 56 2 58 2 634 2 635 2 637 4 362 2 915 12 366 6 916 4 920 2 69 2 640 2 373 2 924 6 75 4 931 2 653 2 79 2 85 4 654 2 86 2 937 2 939 6 942 2 94 8 943 2 664 6 953 2 403 2 954 6 677 8 407 2 684 2 119 2 964 2 417 2 689 2 124 2 697 2 698 4 128 2 428 6 431 2 986 4 137 2 991 2 992 2 994 2 999 2 442 6 1002 4 448 12 449 2 157 2 162 2 730 2 731 6 166 4 1015 4 168 16 460 2 1019 2 738 4 467 6 1027 12 743 2 189 10 191 2 481 2 750 6 751 2 756 2 755 2 200 2 757 4 761 4 204 2 205 6 767 2 1052 2 772 52 213 2 215 2 780 10 779 6 783 4 223 2 230 2 786 6 787 2 513 12 236 2 516 2 1070 4 240 4 517 2 797 2 521 6 522 2 1074 2 523 8 805 4 526 6 812 4 1086 2 813 6 534 2 1089 6 1090 2 260 2 1091 4 817 2 262 2 1096 8 266 4 821 2 822 2 270 4 824 2 542 2 275 2 277 2 547 2 549 2 1113 2 552 4 555 2 1116 4 844 6 846 2 292 2 293 6 561 6 1122 12 564 2 300 2 
924 2 266 4 442 6 684 2 604 2 787 2 277 2 964 2 449 2 119 2 10 2 43 2 547 2 124 2 618 2 168 4 1015 2 1116 2 942 2 321 6 943 2 805 4 903 4 904 2 587 6 738 2 874 4 912 2 772 4 635 2 215 2 260 2 1091 2 992 2 994 2 
1 2 442 6 1002 4 449 2 10 2 576 2 157 2 162 2 581 24 583 8 168 4 1015 2 321 6 587 6 738 2 874 4 593 2 327 2 329 2 743 2 38 2 604 2 339 4 43 2 756 2 757 4 200 2 618 2 897 2 351 2 625 2 352 2 761 2 901 2 903 2 904 2 909 2 912 2 772 28 1052 2 635 2 634 2 636 2 215 2 60 2 366 6 916 4 780 4 924 2 373 2 787 2 653 2 383 3 240 3 523 2 94 6 942 2 805 4 943 2 256 2 812 3 813 6 260 2 1091 2 817 2 1096 6 821 2 684 2 275 2 277 2 1106 2 964 2 119 2 418 2 547 2 124 2 552 3 1116 2 427 2 128 2 846 2 292 2 431 2 1119 2 992 2 561 4 994 2 564 2 300 2 
215 2 98 2 277 2 
215 2 98 2 277 2 
1 2 442 6 1002 4 571 4 10 2 157 2 315 2 162 2 581 16 583 2 166 2 321 12 1015 4 168 16 587 12 874 4 738 2 326 2 593 2 467 2 186 2 743 2 189 4 600 2 38 2 604 2 339 4 751 4 346 2 756 2 757 4 200 2 618 2 351 2 352 2 625 2 761 6 204 2 899 2 901 2 903 6 904 2 767 4 769 2 909 2 912 4 772 24 54 2 56 2 634 2 215 6 364 2 366 6 218 2 916 4 780 4 783 4 919 2 924 4 373 2 75 4 931 2 653 2 85 2 934 2 937 4 797 2 92 2 523 2 94 2 805 4 98 2 812 2 534 2 813 6 951 4 1091 2 817 2 1096 2 821 2 266 4 270 2 826 2 275 2 277 4 964 4 548 2 547 2 549 2 125 2 838 2 698 4 425 2 1116 4 128 2 846 2 292 2 431 2 986 4 137 2 144 4 564 2 438 4 300 2 
37 2 899 2 523 2 510 2 481 2 274 2 772 4 342 2 85 2 58 2 467 2 892 2 218 2 780 2 186 2 581 2 300 2 
1 2 442 6 1002 4 571 4 10 2 157 2 315 2 162 2 581 16 583 2 166 4 321 12 1015 4 168 16 587 12 738 2 874 4 326 2 593 2 592 2 467 2 186 2 743 2 188 2 189 4 600 2 38 2 604 2 339 4 751 4 346 2 756 2 757 4 200 2 618 2 203 2 351 2 352 2 625 2 761 6 204 2 899 2 901 2 903 6 208 2 904 2 767 4 769 2 909 2 912 4 772 24 56 2 634 2 215 6 364 2 366 6 218 2 916 4 780 2 783 4 924 4 373 2 75 4 931 2 653 2 236 2 934 4 937 4 797 2 92 2 94 2 805 4 98 2 812 4 534 2 813 6 951 4 1091 2 817 2 1096 2 821 2 266 4 270 2 826 2 275 2 277 4 964 4 548 2 547 2 549 2 698 4 1114 2 425 2 1116 4 128 2 846 2 292 2 431 2 986 4 137 2 144 4 564 2 438 4 300 2 
1 2 442 6 1002 4 571 4 10 2 157 2 315 2 162 2 581 16 583 2 166 4 321 12 1015 4 168 16 587 12 874 4 738 2 326 2 593 2 467 2 186 2 743 2 189 4 600 2 38 2 604 2 339 4 196 2 751 4 346 2 756 2 757 4 200 2 618 2 202 2 898 2 351 2 352 2 625 2 761 6 204 2 899 2 901 2 903 6 904 2 767 4 769 2 909 2 912 4 772 24 56 2 634 2 215 6 364 2 366 6 218 2 916 4 780 4 783 4 1059 2 924 4 373 2 75 4 931 2 653 2 236 2 85 2 934 2 937 4 797 2 92 2 523 2 94 2 805 4 808 2 98 2 812 2 534 2 813 6 951 4 1091 2 817 2 1096 2 821 2 266 4 270 2 826 2 275 2 277 4 964 4 548 2 547 2 549 2 698 4 425 2 1116 4 128 2 846 2 292 2 431 2 986 4 137 2 144 4 564 2 438 4 300 2 
1 2 2 2 569 2 4 2 7 2 11 2 576 2 13 24 16 2 581 40 18 4 583 52 20 16 585 30 22 4 23 2 588 2 593 2 29 4 594 4 32 4 33 2 598 12 34 8 601 2 38 2 40 4 605 2 606 2 610 2 613 24 614 2 615 2 619 2 625 2 50 30 629 2 53 2 630 2 632 28 633 2 636 2 634 4 637 46 61 2 63 4 639 102 66 2 67 2 69 2 644 2 71 10 649 2 73 30 650 8 651 6 78 2 652 6 653 4 82 16 83 2 84 2 658 2 657 2 659 2 87 4 88 2 660 2 90 2 93 2 94 14 662 32 665 2 97 56 99 1 101 2 667 134 106 16 670 28 107 28 674 2 682 22 111 22 681 2 113 2 686 2 118 3 120 2 687 2 688 2 689 2 690 16 122 8 123 2 693 4 694 28 126 32 699 2 127 12 700 2 704 2 706 20 707 10 133 2 134 2 709 16 135 3 136 2 139 2 712 2 149 8 153 10 723 2 725 4 154 2 158 2 157 2 159 2 160 2 163 2 162 2 734 2 165 2 167 3 169 2 170 2 736 2 172 2 176 2 739 2 177 2 740 2 181 4 180 2 741 2 185 6 743 6 189 122 746 116 191 2 194 4 193 14 754 2 199 2 756 6 757 6 200 4 758 2 760 10 761 2 206 2 763 2 764 2 766 12 768 2 767 6 772 74 774 2 775 8 777 24 778 16 781 1 780 2 217 8 220 2 784 2 223 2 785 2 228 2 227 10 230 2 789 4 237 2 238 4 240 43 241 16 243 2 796 6 799 80 801 2 251 16 809 2 253 2 254 2 812 43 813 14 815 2 259 2 816 2 817 2 261 2 819 2 820 4 821 6 825 2 275 2 829 2 830 2 279 16 280 2 833 2 284 2 283 16 287 2 288 4 840 2 842 3 289 2 290 2 291 2 845 2 846 2 292 2 847 2 296 12 297 2 299 2 853 2 852 2 854 2 300 2 302 16 304 2 305 2 856 6 306 4 308 2 310 12 860 3 864 6 318 2 867 2 868 4 319 52 322 2 323 16 325 2 875 4 877 2 878 2 331 22 337 2 885 12 888 4 339 6 889 16 344 2 345 4 891 2 893 16 895 2 897 2 348 14 900 2 901 6 353 2 905 2 909 2 911 2 358 2 357 2 360 2 361 2 363 2 914 3 366 6 365 2 916 4 367 44 920 2 375 22 927 2 928 2 380 12 932 16 383 2 384 2 933 12 938 2 935 8 936 28 388 4 387 12 941 2 394 2 395 2 947 2 948 2 396 6 949 2 398 2 401 14 950 6 957 50 409 2 959 2 410 2 961 2 962 2 414 4 415 56 963 32 417 2 969 2 420 2 970 2 423 4 974 2 424 2 426 2 976 2 427 2 980 2 979 36 983 2 984 4 430 2 431 2 432 2 434 2 435 2 996 2 437 16 1000 2 1002 4 445 4 1003 2 1005 2 446 2 1008 2 1007 2 450 2 451 12 1009 4 1010 2 1011 28 1012 28 456 2 460 2 1018 2 1019 2 1020 28 1023 2 1022 12 464 2 1024 2 1025 2 1030 2 472 2 476 2 1035 2 478 2 1036 2 1037 50 482 2 484 2 1040 2 485 4 486 2 1042 2 1044 2 1043 4 1045 8 1046 2 494 3 1050 3 496 2 1051 4 499 4 1053 2 501 2 503 86 1055 2 504 10 505 2 1057 18 507 2 1058 4 508 26 1060 6 1064 3 1065 4 512 12 1068 12 1069 2 1070 36 518 3 520 2 1073 2 1074 4 1078 2 1080 2 1077 2 528 2 1085 2 531 2 1086 4 532 4 1088 2 535 1 1096 14 1098 26 1104 3 1106 2 1107 28 546 6 1112 4 1113 4 552 16 560 2 1120 2 561 12 567 2 568 24 
227 2 960 2 928 2 153 2 118 2 1007 2 576 2 240 2 581 2 552 2 583 2 801 2 94 2 426 2 983 2 1023 2 772 2 812 2 637 6 504 4 561 2 507 2 878 2 1096 2 
227 2 960 2 928 2 153 2 118 2 1007 2 576 2 240 2 581 2 552 2 583 2 801 2 94 2 426 2 983 2 1023 2 772 2 812 2 637 6 504 4 561 2 507 2 878 2 1096 2 
227 2 960 2 928 2 153 2 118 2 1007 2 576 2 240 2 581 2 552 2 583 2 801 2 94 2 426 2 983 2 1023 2 772 2 812 2 637 6 504 4 561 2 507 2 878 2 1096 2 
682 4 111 4 375 4 445 2 928 2 307 2 381 2 115 2 857 2 414 2 451 2 576 2 834 2 240 3 893 5 13 3 387 2 1043 2 796 4 163 2 18 2 693 2 581 4 583 2 624 2 1045 2 762 2 127 4 772 10 812 3 775 2 182 3 184 2 1094 4 957 2 639 6 331 4 68 2 34 2 568 3 
375 4 928 2 445 2 307 2 381 2 857 2 451 2 576 2 240 2 935 2 13 2 864 2 387 2 163 2 796 4 581 4 18 2 583 2 812 2 182 2 259 2 184 2 1094 4 957 2 331 4 34 2 111 4 682 4 115 2 414 2 834 2 893 4 1043 2 693 2 624 2 1045 2 762 2 127 4 772 10 775 2 639 6 68 2 568 2 
375 4 928 2 445 2 307 2 381 2 857 2 451 2 576 2 240 2 935 2 13 2 864 2 387 2 163 2 796 4 581 4 18 2 583 2 812 2 182 2 259 2 184 2 1094 4 957 2 331 4 34 2 111 4 682 4 115 2 414 2 834 2 893 4 1043 2 693 2 624 2 1045 2 762 2 127 4 772 10 775 2 639 6 68 2 568 2 
375 4 928 2 445 2 307 2 381 2 857 2 451 2 576 2 240 2 935 2 13 2 864 2 387 2 163 2 796 4 581 4 18 2 583 2 812 2 182 2 259 2 184 2 1094 4 957 2 331 4 34 2 111 4 682 4 115 2 414 2 834 2 893 4 1043 2 693 2 624 2 1045 2 762 2 127 4 772 10 775 2 639 6 68 2 568 2 
375 4 928 2 445 2 307 2 381 2 857 2 451 2 576 2 240 2 935 4 13 2 864 4 387 2 163 2 796 4 581 4 18 2 583 2 812 2 182 2 259 4 184 2 1094 4 957 2 331 4 34 2 111 4 682 4 115 2 414 2 834 2 893 4 1043 2 693 2 624 2 1045 2 762 2 127 4 772 10 775 2 639 6 68 2 568 2 
626 2 24 2 404 2 318 2 695 2 55 2 
794 2 50 2 666 2 25 2 273 2 848 2 55 2 
38 2 1062 2 607 2 413 2 447 1 448 2 832 2 282 2 1013 2 620 2 581 8 703 1 701 2 663 2 524 2 393 2 252 2 772 10 708 2 255 2 359 2 711 1 956 1 224 2 146 2 147 1 
231 2 445 6 748 4 651 4 414 6 687 2 688 2 935 4 893 16 864 2 1043 2 17 2 796 4 581 6 693 6 18 6 660 2 839 2 1045 6 127 12 288 2 1021 2 173 2 528 2 772 6 29 2 179 2 775 6 259 2 34 6 
682 2 1115 7 603 2 40 2 375 2 716 2 411 2 95 2 737 4 772 1 195 2 104 2 952 2 710 2 1092 1 581 1 46 2 331 2 
682 2 1115 6 603 2 375 2 40 4 716 2 411 2 95 4 737 4 195 2 104 4 952 2 710 2 46 2 331 2 
682 2 1115 10 603 2 375 2 40 8 716 8 411 2 95 8 737 4 772 1 195 2 104 8 952 2 710 2 1092 1 581 1 46 6 331 2 
682 2 1115 2 603 2 375 2 40 2 411 2 95 2 737 2 195 2 104 2 952 2 710 2 331 2 
855 2 148 6 151 2 721 16 722 8 574 2 859 2 311 2 577 4 12 6 316 2 581 84 732 2 28 8 589 46 175 2 176 4 1026 1 466 6 31 2 743 32 471 4 473 6 745 8 881 4 1034 2 39 2 190 2 338 6 341 8 339 42 340 12 1039 4 1038 2 42 6 1041 2 757 50 200 12 616 6 896 6 47 4 623 4 492 6 493 6 901 32 628 4 210 2 354 2 209 2 1048 2 910 4 498 4 772 96 502 2 634 12 59 6 219 6 506 24 226 1 643 6 646 6 925 6 374 6 378 4 377 2 72 2 788 8 653 6 382 2 239 2 793 2 389 6 242 2 390 16 91 6 391 12 804 3 1083 6 397 2 258 12 400 4 813 112 671 2 673 14 955 12 818 6 408 12 681 4 1101 4 683 13 823 8 271 4 541 4 966 4 968 16 691 6 692 2 835 4 973 6 841 6 977 12 981 6 556 6 433 6 987 2 850 2 1120 4 140 6 145 6 436 6 
643 2 303 4 855 2 444 2 150 2 151 2 653 2 722 6 859 2 453 2 313 2 156 2 12 2 314 2 732 2 317 6 581 42 582 2 1075 2 735 2 661 2 586 2 871 2 175 2 589 2 176 2 258 2 813 38 183 2 675 2 743 2 187 2 110 2 879 2 880 2 36 2 265 4 1034 2 681 2 334 4 39 2 190 2 540 2 339 18 340 2 117 2 198 2 611 2 416 2 1108 2 1111 2 200 2 757 18 691 2 419 2 616 2 201 2 896 2 347 2 759 2 491 2 901 2 843 2 702 2 977 2 978 2 981 2 1048 2 556 2 772 42 132 2 987 2 59 32 634 2 850 2 216 2 1120 2 141 2 917 4 370 2 371 2 226 2 
855 2 148 4 441 16 151 2 721 8 722 6 452 8 577 4 453 2 12 4 14 8 581 70 171 4 589 24 175 2 28 8 176 2 468 4 466 4 470 2 743 28 471 4 473 4 187 10 745 8 881 4 1034 2 477 8 340 10 339 36 1039 4 1038 2 609 16 42 4 757 44 200 6 616 4 896 4 47 4 623 4 492 4 493 4 901 30 628 4 209 4 1048 2 907 4 910 4 771 2 498 4 772 78 500 2 57 2 634 6 59 14 219 4 506 30 221 32 371 10 643 4 646 6 645 2 925 4 374 4 72 2 788 8 653 2 382 2 239 2 655 4 389 4 798 4 390 24 91 4 391 14 1075 2 1083 4 397 4 102 2 533 2 258 10 668 8 813 104 955 6 408 10 681 2 1101 4 683 10 823 16 271 4 541 2 1108 2 966 4 968 24 691 4 551 4 973 4 841 4 977 10 978 10 981 4 556 4 985 4 433 4 1120 2 140 4 145 4 
681 2 1075 2 1034 2 39 2 901 4 855 2 339 4 151 2 772 12 175 2 653 2 176 2 813 10 59 4 634 2 1120 2 200 2 757 4 616 2 743 4 581 12 491 2 226 2 
455 2 

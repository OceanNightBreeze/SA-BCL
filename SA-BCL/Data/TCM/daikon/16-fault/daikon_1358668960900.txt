#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 448 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V ERROR utilMDE.Assert$AssertionException (87,479) 390 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (147,402) (147,402) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 706 464 683 486 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 101 265 891 635 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 972 635 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 265 891 635 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 101 265 891 635 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:lte(II)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern:intern([I)[I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_117()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3R_81()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_52()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_57()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:concat([I[I)[I
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:dimensions()I
daikon.diff.Node:Node()V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_76()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_13()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_36()Z
daikon.Quant:eltwiseGT([I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:lexEqual([I[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:subsetOf([F[F)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long; | RETURN | 14834 | return null
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_22()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183341 | = null
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:subsetOf([F[D)Z
jtb.JavaCharStream:backup(I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_60()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_51()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:hashCode()I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String; | RETURN | 51597 | return null
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:isIntegral()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([D)[D
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:slice([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.Invariant:logDetail()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:memberOf(J[J)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_121()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:CastExpression()Ljtb.syntaxtree.CastExpression;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Debug:logDetail()Z
daikon.inv.Invariant:prob_is_ge(DD)D | STATEMENT | 6797 | stmt -> ;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern:numIntArrays()I
daikon.Quant:noDups([I)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_75()Z | CONDITION | 195384 | if (x) -> if (!x)
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_21(I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107780 | = null
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:isReverse([I[I)Z
daikon.ModBitTracker:num_samples()I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Debug:logOn()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z | ASSIGN | 63640 | = null
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoAux:hashCode()I
utilMDE.MathMDE:gcd_differences([I)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_2_3(I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3_4()Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14018 | 108 -> 109
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.RootNode:RootNode()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_123()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2146 | = null
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_96()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([I[I)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_120()Z
daikon.inv.Invariant:getConfidence()D
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:BeginToken()C | CONSTANT | 4375 | 0 -> 1
jtb.JavaParser:jj_3_24()Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:arity()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3_35()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:getEndLine()I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3529 | = null
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_3()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_53()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE:sign(I)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:union([I[I)[I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice1:arity()I
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_3_16()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_21()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_2_24(I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3_10()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_sets()I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern:intern([J)[J
daikon.VarInfo:new_ppt()V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Ppt:Ppt()V
daikon.Quant:gte(II)Z
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaCharStream:ReadByte()C
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:setDiff([I[I)[I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3_12()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_62()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_16(I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
646 2 898 2 771 4 3 2 232 2 804 2 585 2 87 2 479 2 
436 2 641 2 268 2 179 2 137 6 681 6 777 2 165 6 273 2 781 2 53 2 
755 4 609 2 790 6 757 6 1033 2 479 2 703 6 300 2 685 6 796 2 739 2 87 2 116 4 
0 10 401 4 470 16 135 10 938 4 788 12 628 4 554 10 845 16 555 2 479 6 522 10 1021 16 12 6 87 6 55 2 21 4 570 8 1029 2 310 8 255 2 280 10 928 6 368 8 190 8 1037 2 582 26 35 29 725 2 692 2 
1015 6 204 4 
795 2 
589 2 473 4 659 2 209 2 660 2 211 2 951 2 448 2 185 2 215 2 665 2 244 4 247 2 606 2 450 2 1024 2 55 2 830 2 98 2 425 2 612 2 578 2 646 2 64 2 498 2 776 2 194 2 34 2 724 2 319 2 69 2 784 4 
0 16 435 2 470 32 135 16 403 4 475 2 788 22 628 2 845 32 554 6 555 2 479 4 520 6 915 2 522 16 271 4 1021 32 12 4 87 4 956 4 418 6 421 6 19 4 251 4 252 2 829 4 253 6 310 6 156 2 280 16 803 4 928 4 368 18 582 48 35 54 460 2 617 6 70 6 783 8 
572 2 98 2 286 2 
673 2 588 2 754 2 872 10 220 22 614 2 761 2 318 2 112 2 85 2 347 2 277 2 976 2 586 2 
0 2 470 2 135 2 788 2 628 2 845 2 554 4 758 2 984 2 522 2 1021 2 485 2 12 2 122 2 280 2 368 2 996 2 582 4 35 6 971 2 398 2 654 2 348 2 
0 4 470 8 938 2 251 4 135 4 788 4 942 2 791 2 280 4 803 4 845 8 522 4 582 12 35 16 1021 8 70 6 418 6 
294 4 699 4 906 4 508 4 595 2 879 2 296 2 378 2 980 4 46 4 558 2 184 2 414 14 918 2 797 10 244 4 766 2 384 2 769 4 923 4 17 2 743 2 572 6 123 4 494 2 392 2 496 62 98 8 126 2 457 4 498 4 65 2 161 2 501 2 319 2 618 4 286 2 131 2 71 10 869 2 
235 2 925 2 841 2 221 2 155 2 84 2 795 2 821 2 287 2 248 2 
787 2 377 6 510 1 511 3 514 2 267 16 793 8 912 2 792 2 519 2 142 24 919 2 666 12 275 2 920 2 13 2 526 2 14 2 16 2 675 6 23 2 533 6 158 2 929 2 32 2 163 2 805 2 684 3 544 1 167 2 808 3 810 2 935 2 936 2 693 4 42 1 551 2 698 2 940 2 812 2 700 4 177 2 943 6 178 2 45 2 818 2 947 2 559 2 819 2 50 3 303 4 560 2 187 2 959 2 960 1 714 16 422 2 312 2 58 2 963 4 721 4 835 3 193 2 837 2 726 2 973 2 975 2 321 3 322 2 75 2 977 16 434 2 590 2 324 2 728 3 591 1 843 8 729 2 443 2 596 2 732 2 446 1 988 2 86 2 333 2 87 32 451 2 608 2 224 4 340 2 341 1 746 3 750 2 863 2 864 1 865 2 343 2 227 2 100 6 462 2 751 2 867 2 466 2 104 2 868 32 467 1 870 2 1005 3 1006 2 624 4 107 2 629 2 875 24 630 1 476 2 880 3 240 2 479 34 633 1 1013 2 356 5 481 1 480 32 886 2 887 2 113 2 1020 1 360 1 1023 16 765 2 768 2 893 2 643 2 1030 2 644 4 1034 2 257 3 371 2 648 2 898 2 899 1 261 2 502 2 651 2 262 1 505 2 782 3 
390 2 455 2 479 2 
846 2 744 2 479 4 
506 2 
266 2 5 2 4 8 518 2 517 2 6 4 11 4 529 2 799 2 532 24 22 8 534 4 25 2 27 4 538 4 540 4 30 4 31 2 547 2 548 2 37 2 289 2 288 2 291 8 550 8 290 2 292 8 44 2 47 2 51 2 563 4 565 2 826 4 306 28 569 2 828 46 308 46 574 2 575 2 60 4 832 2 579 4 63 2 581 2 66 12 836 144 838 4 68 2 320 46 74 144 840 4 77 22 83 2 848 46 601 2 326 24 604 4 335 4 336 36 96 2 97 8 860 2 613 8 99 2 102 2 346 8 866 2 622 2 105 2 352 2 877 2 353 2 878 2 355 2 632 4 110 2 636 12 358 8 115 176 888 2 890 2 117 8 364 2 119 2 894 14 642 6 124 8 369 2 649 22 650 4 372 2 374 6 655 6 376 46 910 12 909 6 658 2 661 2 662 4 663 34 381 2 140 2 143 2 670 4 674 2 676 16 154 46 391 2 397 2 678 4 682 12 686 8 934 4 933 4 689 2 691 4 170 2 690 2 694 46 695 2 697 2 939 8 701 2 405 2 406 4 407 2 181 2 182 2 948 2 408 2 952 2 953 46 709 4 415 2 417 2 419 2 420 2 716 48 964 2 719 2 722 2 969 144 426 24 428 2 198 24 432 20 202 4 442 46 207 10 978 2 979 6 731 2 444 2 983 2 985 2 217 2 218 46 989 2 740 6 991 2 995 2 745 2 454 14 222 2 748 46 226 2 459 40 998 4 228 4 465 4 1002 2 234 4 753 2 472 10 1008 2 1010 2 1011 4 760 4 482 4 483 10 1016 2 243 46 763 34 1017 4 1018 2 1019 16 764 2 487 2 1026 4 491 24 773 4 774 2 497 2 499 2 500 4 263 20 
772 2 1022 1 423 2 225 2 
307 2 423 2 
580 2 183 2 1 2 21 2 423 2 98 2 208 2 
1 2 423 2 276 2 
680 2 1 2 423 2 
15 2 437 2 772 2 
1 2 423 2 
15 2 1040 2 
43 2 423 2 
15 2 413 2 772 2 
150 2 772 2 944 2 
625 2 772 2 927 2 
8 2 568 2 772 2 
531 2 696 2 772 2 
15 2 52 2 
423 2 862 2 
657 2 944 2 
733 2 625 2 
8 2 120 2 
531 2 309 2 
15 2 82 2 
531 2 361 2 
8 2 338 2 
946 2 625 2 
944 2 747 2 
15 2 413 2 129 2 772 2 
15 2 413 2 129 2 772 2 145 2 
15 2 772 2 463 2 
15 2 772 2 216 2 
717 2 882 2 260 2 359 2 
183 2 932 2 98 2 73 2 
580 2 183 2 932 2 98 2 816 2 73 2 
183 2 1 2 21 2 423 2 98 2 974 2 
399 2 247 2 
183 2 21 2 293 2 98 2 
8 2 825 2 
531 2 201 2 
873 2 944 2 
625 2 516 2 
149 2 531 2 625 2 
531 2 411 2 625 2 
531 2 625 2 842 2 
531 2 625 2 515 2 
402 2 98 2 634 2 183 2 834 2 147 6 
15 2 503 2 
134 2 18 2 994 4 220 6 512 2 153 2 802 2 396 2 191 2 603 2 383 2 461 2 197 2 330 2 561 2 605 4 955 2 132 2 
772 2 576 2 
32 2 
787 2 514 2 267 6 912 2 792 2 523 2 382 2 666 8 13 2 800 2 675 2 533 4 929 2 163 2 805 2 167 2 693 2 295 2 700 4 177 2 943 6 818 2 559 2 303 2 560 2 187 2 824 2 960 2 963 4 721 2 193 2 726 2 975 4 843 2 443 2 213 2 988 2 333 2 87 26 224 4 859 2 340 2 865 2 343 2 344 2 100 2 751 2 104 2 868 4 870 2 351 2 629 2 630 2 476 2 239 2 479 26 480 6 1014 2 762 2 886 2 765 6 768 2 892 4 893 2 1027 2 643 2 644 4 367 2 898 2 1039 2 261 2 504 2 1041 4 505 2 
787 2 514 2 267 6 912 2 792 2 523 2 382 2 666 8 144 2 13 2 800 2 675 2 533 6 929 2 163 2 805 2 167 2 693 2 295 2 700 4 177 2 943 6 818 2 559 2 303 2 560 2 187 2 824 2 960 2 963 4 721 2 193 2 726 2 975 4 843 2 443 2 213 2 988 2 333 2 87 26 224 4 859 2 340 2 865 2 343 2 344 2 100 2 751 2 104 2 868 4 870 2 1003 2 351 2 629 2 630 2 476 2 239 2 240 2 479 26 480 6 1014 2 886 2 765 6 768 2 892 4 893 2 1027 2 643 2 644 4 648 2 898 2 502 2 261 2 504 2 1041 4 505 2 902 2 
607 2 
166 2 121 2 
436 2 553 4 730 2 127 2 759 2 81 4 61 2 833 2 395 2 409 2 380 2 137 2 681 2 738 2 777 2 671 2 619 2 385 2 
436 4 203 4 911 2 730 2 81 4 380 2 137 4 736 4 738 2 329 2 988 2 987 2 671 2 87 6 385 2 89 2 924 2 223 2 861 2 395 2 865 2 681 6 163 2 165 6 752 2 233 2 619 2 620 2 40 2 623 2 756 4 627 6 629 2 553 4 176 2 476 2 700 2 943 4 179 2 817 2 759 2 479 12 409 2 302 2 363 4 889 2 490 2 250 2 56 2 641 2 643 2 644 2 127 2 61 4 833 2 193 2 777 4 130 2 584 2 200 4 
436 4 203 4 911 2 730 2 81 4 380 2 137 6 736 4 738 2 329 2 988 2 987 2 671 2 87 6 385 2 89 2 924 2 223 2 861 2 395 2 865 2 681 4 163 2 165 6 752 2 233 2 619 2 620 2 40 2 623 2 756 4 627 6 629 2 553 4 176 2 476 2 700 2 943 4 817 2 759 2 479 12 409 2 302 2 363 4 889 2 53 2 490 2 250 2 56 2 641 2 643 2 644 2 127 2 61 4 833 2 193 2 777 4 130 2 584 2 200 4 
436 4 203 4 911 2 730 2 81 4 380 2 137 6 736 4 738 2 329 2 988 2 987 2 671 2 87 6 385 2 89 2 924 2 223 2 861 2 395 2 865 2 681 6 163 2 165 6 752 2 233 2 619 2 620 2 40 2 623 2 756 4 627 6 629 2 553 4 176 2 476 2 700 2 943 4 817 2 759 2 479 12 409 2 302 2 363 4 889 2 490 2 250 2 56 2 641 2 643 2 644 2 127 2 61 4 833 2 193 2 777 4 130 2 584 2 781 2 200 8 
436 4 203 4 911 2 730 2 81 4 380 2 137 8 736 4 738 2 329 2 988 2 987 2 671 2 87 6 385 2 89 2 924 2 223 2 861 2 395 2 865 2 681 6 163 2 165 8 752 2 233 2 619 2 620 2 40 2 623 2 756 4 627 10 629 2 553 4 700 2 176 2 476 2 943 4 817 2 759 2 479 12 409 2 302 2 363 8 889 2 53 2 490 2 250 2 56 2 641 2 643 2 644 2 127 2 61 4 833 2 193 2 777 4 130 2 584 2 781 2 200 8 
436 4 203 4 911 2 730 2 81 4 380 2 137 6 736 4 738 2 329 2 988 2 987 2 671 2 87 6 385 2 89 2 924 2 223 2 861 2 395 2 865 2 681 6 163 2 165 6 752 2 233 2 619 2 620 2 40 2 623 2 756 4 627 10 629 2 553 4 176 2 476 2 700 2 943 4 817 2 759 2 479 12 409 2 302 2 363 8 889 2 490 2 250 2 56 2 641 2 643 2 644 2 127 2 61 4 833 2 193 2 777 4 130 2 584 2 781 2 200 8 
507 1 787 2 506 6 514 2 267 6 792 2 269 6 270 2 524 7 272 6 798 6 533 6 282 6 807 2 38 1 40 2 553 4 817 2 818 2 820 2 302 2 303 2 560 2 305 2 53 4 824 4 823 6 566 6 56 2 573 6 577 2 833 2 61 4 584 2 587 1 843 2 844 2 325 2 598 6 81 4 849 2 851 2 329 2 332 2 87 24 88 1 89 4 94 6 861 2 340 2 342 1 343 2 865 2 344 2 100 2 104 2 868 2 870 2 619 2 620 2 623 2 629 2 627 2 885 7 357 2 889 2 641 4 643 2 644 4 127 2 647 2 648 2 898 2 900 2 130 2 904 2 911 4 912 2 137 8 380 2 666 4 668 4 671 2 385 2 924 2 387 1 675 2 390 6 389 2 393 2 159 2 929 2 395 2 681 4 679 2 163 2 165 12 687 6 931 2 167 2 168 2 693 2 700 4 177 2 943 6 409 2 707 2 962 2 963 4 720 1 721 2 193 2 968 6 970 2 430 1 200 2 436 4 203 4 439 2 730 2 443 12 982 10 734 6 736 6 738 2 988 2 987 2 990 2 744 6 223 2 224 4 458 2 233 2 752 2 1001 2 756 8 476 2 1009 4 239 2 759 2 479 46 1012 1 241 2 480 8 246 8 765 6 768 2 489 6 490 2 250 2 1027 2 770 2 1031 2 493 2 502 2 777 4 261 2 1041 4 786 2 
904 2 506 6 787 2 514 2 911 4 267 6 792 2 912 2 269 6 380 2 137 8 270 2 272 6 666 8 668 4 671 2 798 6 385 2 924 2 675 2 533 6 389 2 390 6 159 2 393 2 929 2 395 2 282 6 679 2 681 8 163 2 931 2 687 6 165 12 807 2 167 2 168 2 40 2 693 4 553 4 177 2 700 4 943 6 817 2 818 2 409 2 820 2 707 2 302 2 560 2 303 4 305 2 823 6 824 4 566 6 56 2 573 6 962 2 963 4 577 2 313 2 61 4 721 4 833 2 193 2 968 6 970 2 584 2 975 2 200 6 436 4 203 4 439 2 843 2 325 2 844 2 443 12 730 2 598 6 982 10 81 4 734 6 736 6 851 2 849 2 738 2 329 2 987 2 988 2 332 2 87 26 990 2 89 4 94 6 95 2 744 6 224 4 223 2 340 2 861 2 458 2 344 2 865 2 343 2 100 2 752 2 233 2 868 2 104 2 1001 2 620 2 619 2 870 2 623 2 756 8 627 2 629 2 1009 4 476 2 239 2 479 48 759 2 241 2 480 8 357 2 246 8 765 6 889 2 768 2 489 6 490 2 1027 2 250 2 770 2 641 4 643 2 644 4 493 2 1031 2 127 2 647 2 648 2 898 2 900 2 261 2 777 4 502 2 130 2 1041 4 781 4 786 2 
904 2 506 6 787 2 514 2 911 4 267 6 792 2 912 2 269 6 380 2 137 8 270 2 272 6 666 8 668 4 671 2 798 6 385 2 924 2 675 2 533 6 389 2 390 6 159 2 393 2 929 2 395 2 282 6 679 2 681 8 163 2 931 2 687 6 165 12 807 2 167 2 168 2 40 2 693 4 553 4 177 2 700 4 943 6 817 2 818 2 409 2 820 2 707 2 302 2 560 2 303 4 305 2 823 6 824 4 566 6 56 2 573 6 962 2 963 4 577 2 313 2 61 4 721 4 833 2 193 2 968 6 970 2 584 2 975 2 200 6 436 4 203 4 439 2 843 2 325 2 844 2 443 12 730 2 598 6 982 10 81 4 734 6 736 6 851 2 849 2 738 2 329 2 987 2 988 2 332 2 87 26 990 2 89 4 94 6 95 2 744 6 224 4 223 2 861 2 340 2 458 2 344 2 343 2 865 2 100 2 752 2 233 2 868 2 104 2 1001 2 620 2 619 2 870 2 623 2 756 8 627 6 629 2 1009 4 476 2 239 2 479 48 759 2 241 2 480 8 357 2 246 8 765 6 363 4 889 2 768 2 489 6 490 2 1027 2 250 2 770 2 641 4 643 2 644 4 493 2 1031 2 127 2 647 2 648 2 898 2 900 2 261 2 777 4 502 2 130 2 1041 4 781 4 786 2 
787 2 506 12 514 2 267 8 792 2 269 6 270 2 525 6 272 6 798 6 533 6 281 2 282 6 807 2 40 2 553 4 817 2 818 2 556 6 301 6 820 2 302 2 560 2 303 4 305 2 53 2 824 4 823 6 566 12 56 2 573 6 577 2 313 2 833 2 61 4 584 2 843 4 592 6 325 2 844 2 598 6 599 6 81 4 849 2 851 2 329 2 332 2 87 24 89 4 94 12 95 2 611 6 340 2 861 2 865 2 343 2 344 4 100 4 104 2 868 4 870 2 619 2 620 2 623 2 629 2 627 6 881 2 357 2 363 4 889 2 640 2 641 4 643 2 644 4 127 2 647 2 648 2 898 2 900 2 130 2 904 2 911 4 912 2 137 10 380 2 666 10 668 4 671 2 385 2 924 2 151 2 675 4 390 12 389 2 393 2 159 2 929 2 395 2 681 10 679 2 163 2 164 2 165 16 687 6 931 2 167 2 168 2 693 4 700 4 177 2 943 6 179 2 409 2 707 2 416 6 958 6 962 2 963 4 721 4 193 2 968 6 970 2 723 6 975 2 200 6 436 4 203 4 440 2 730 2 443 10 982 8 734 12 736 6 738 2 987 2 988 2 990 2 452 2 453 2 744 12 223 2 224 4 458 2 752 2 233 2 1001 2 756 8 476 2 1009 4 239 2 759 2 479 52 241 2 480 12 246 8 765 8 768 2 489 6 490 2 250 2 1027 2 770 2 1031 2 493 2 502 2 777 4 261 2 781 4 1041 6 786 2 
436 4 40 2 203 2 756 2 627 4 553 2 730 2 817 2 479 4 759 2 81 2 409 2 736 2 137 6 738 2 302 2 987 2 363 4 889 2 924 2 250 2 641 2 861 2 127 2 833 2 681 6 165 4 777 4 130 2 233 2 584 2 781 2 620 2 619 2 200 6 
787 2 514 2 267 6 912 2 792 2 137 6 924 2 675 3 533 6 158 2 929 2 32 2 681 6 163 2 165 4 167 2 40 2 553 2 700 4 177 2 943 6 178 2 817 2 818 2 409 2 302 2 560 2 824 2 963 4 833 2 193 2 967 2 584 2 200 6 436 4 203 2 439 2 594 2 443 4 730 2 982 2 81 2 736 2 738 2 987 2 988 2 87 24 451 2 224 4 223 2 340 2 861 2 749 2 865 2 343 2 100 3 233 2 104 2 868 3 620 2 870 2 469 3 619 2 756 2 629 2 627 2 476 2 239 2 479 28 759 2 480 8 765 6 889 2 768 2 1027 2 250 2 641 2 643 2 644 4 127 2 648 2 898 2 777 4 502 2 130 2 779 2 781 2 1041 4 785 2 
436 4 203 4 911 2 730 2 81 4 380 2 137 6 736 4 738 2 329 2 988 2 987 2 671 2 87 6 385 2 89 2 924 2 223 2 861 2 395 2 865 2 681 6 163 2 165 6 752 2 233 2 619 2 620 2 40 2 623 2 756 4 627 10 629 2 553 4 176 2 476 2 700 2 943 4 817 2 759 2 479 12 409 2 302 2 363 8 889 2 490 2 250 2 56 2 641 2 643 2 644 2 127 2 61 4 833 2 193 2 777 4 130 2 584 2 781 2 200 8 
436 4 203 4 911 2 730 2 81 4 379 2 380 2 137 6 736 4 738 2 329 2 988 2 987 2 671 2 87 6 385 2 89 2 924 2 223 2 861 2 395 2 865 2 681 8 163 2 165 8 752 2 233 2 619 2 620 2 40 2 623 2 756 4 627 10 629 2 553 4 815 2 700 2 476 2 943 4 179 2 817 2 759 2 479 12 409 2 302 2 363 8 490 2 250 2 56 2 641 2 643 2 644 2 127 2 61 4 833 2 193 2 777 4 130 2 431 4 584 2 781 2 200 8 
410 2 130 2 620 2 
410 2 130 2 620 2 
787 2 375 2 514 2 911 2 267 2 912 2 792 2 9 4 380 2 137 12 666 4 668 2 671 2 528 2 530 2 279 2 800 4 533 6 24 2 29 2 929 2 681 12 163 2 687 2 165 16 167 2 937 2 693 4 553 2 700 4 177 2 943 6 179 4 818 2 410 2 708 2 303 4 560 2 824 6 53 4 56 2 718 2 57 2 963 4 189 2 61 4 721 4 833 2 193 2 195 2 199 4 200 6 436 4 203 2 593 2 443 4 730 4 982 2 81 2 736 4 849 2 214 2 449 2 988 2 987 2 87 16 89 4 224 4 340 2 865 2 343 2 233 2 104 2 868 2 620 6 870 2 1004 2 623 2 756 4 629 2 627 6 354 2 1009 2 476 2 239 2 479 24 241 2 480 2 765 2 363 4 490 2 1027 2 641 4 643 2 644 4 127 2 648 2 898 2 900 2 261 4 502 2 777 4 130 4 781 4 
1004 2 990 2 571 2 715 2 121 2 354 2 1009 2 443 2 982 2 479 4 193 2 931 2 687 2 449 2 331 2 87 2 385 2 
787 2 514 2 911 4 267 2 912 2 792 2 9 4 380 2 137 12 666 4 668 2 671 2 530 2 279 2 800 4 533 6 24 2 28 2 29 2 929 2 681 12 163 2 687 2 165 16 167 2 693 4 814 2 553 2 700 4 177 2 943 6 179 4 704 2 818 2 410 2 708 2 303 4 560 2 824 6 53 4 56 2 718 2 963 4 189 4 61 4 721 4 833 2 193 2 195 2 199 4 200 6 436 4 203 2 593 2 443 2 730 4 81 2 736 4 849 2 214 2 449 2 988 2 987 2 87 16 89 4 610 2 224 4 339 2 340 2 865 2 343 2 752 2 233 2 104 2 868 4 620 6 870 2 1004 2 623 2 756 4 629 2 627 6 354 2 476 2 239 2 479 24 241 2 480 2 765 2 363 4 490 2 1027 2 641 4 643 2 644 4 127 2 648 2 898 2 900 2 261 4 502 2 777 4 130 4 781 4 
787 2 514 2 911 4 267 2 912 2 792 2 9 4 380 2 137 12 666 4 668 2 671 2 530 2 279 2 800 4 533 6 24 2 801 2 29 2 929 2 681 12 163 2 687 2 165 16 167 2 693 4 811 2 553 2 700 4 177 2 943 6 179 4 818 2 410 2 708 2 303 4 560 2 824 6 53 4 56 2 718 2 59 2 963 4 189 2 61 4 721 4 833 2 193 2 195 2 199 4 200 6 436 4 203 2 593 2 443 4 730 4 982 2 81 2 737 2 736 4 849 2 214 2 449 2 988 2 987 2 87 16 89 4 224 4 340 2 865 2 343 2 231 2 752 2 233 2 104 2 868 2 620 6 870 2 1004 2 623 2 756 4 629 2 627 6 354 2 1009 2 476 2 239 2 479 24 241 2 480 2 765 2 363 4 490 2 1027 2 641 4 643 2 644 4 127 2 648 2 898 2 900 2 261 4 502 2 777 4 130 4 781 4 
905 2 787 2 514 2 267 6 792 2 7 1 136 2 138 2 675 2 533 2 535 2 537 2 929 2 679 2 163 2 683 2 545 2 168 2 688 2 400 2 549 2 552 2 941 2 700 4 177 2 943 6 818 2 706 2 824 2 54 2 713 2 963 2 62 2 193 2 192 2 844 2 443 2 600 2 988 2 332 2 87 20 90 2 742 4 854 2 337 2 224 2 456 2 865 2 343 2 100 2 464 2 104 2 868 2 1001 2 870 2 629 2 108 1 476 2 631 2 479 26 480 8 245 6 486 2 765 6 767 2 768 2 1027 2 643 2 644 4 645 2 256 2 647 2 898 2 780 2 1041 4 
171 2 172 4 2 2 267 2 298 2 479 2 914 2 884 2 480 2 847 2 949 2 765 2 87 2 564 1 768 2 712 2 675 3 495 2 831 2 997 2 344 6 100 3 229 3 868 3 1041 2 
171 2 172 4 2 2 267 2 298 2 479 2 914 2 884 2 480 2 847 2 949 2 765 2 87 2 768 2 712 2 675 2 495 2 831 2 997 2 344 6 100 2 229 2 868 2 1041 2 
171 2 172 4 2 2 267 2 298 2 479 2 914 2 884 2 480 2 847 2 949 2 765 2 87 2 768 2 712 2 675 2 495 2 831 2 997 2 344 6 100 2 229 2 868 2 1041 2 
133 4 0 2 977 2 76 2 727 4 171 2 470 2 323 2 135 2 509 2 175 4 513 3 80 4 845 2 479 10 480 2 522 2 328 2 950 2 1021 2 667 2 921 2 87 4 768 2 672 4 567 3 675 3 714 2 857 6 310 4 280 2 928 2 315 2 582 4 542 2 35 6 1000 3 67 2 868 3 653 2 
133 4 0 2 977 2 76 2 727 4 171 2 470 2 323 2 135 2 509 2 175 4 788 2 513 2 80 4 845 2 555 2 479 10 480 2 522 2 328 2 950 2 1021 2 667 2 921 2 87 4 768 2 672 4 567 2 675 2 714 2 857 6 310 4 280 2 368 2 928 2 315 2 582 4 542 2 35 4 1000 2 67 2 868 2 653 2 
133 4 0 2 977 2 76 2 727 4 171 2 470 2 323 2 135 2 509 2 175 4 788 2 513 2 80 4 845 2 555 2 479 10 480 2 522 2 328 2 950 2 1021 2 667 2 921 2 87 4 768 2 672 4 567 2 675 2 714 2 857 6 310 4 280 2 368 2 928 2 315 2 582 4 542 2 35 4 1000 2 67 2 868 2 653 2 
133 4 0 2 977 2 76 2 727 4 171 2 470 2 323 2 135 2 509 2 175 4 788 2 513 2 80 4 845 2 555 2 479 10 480 2 522 2 328 2 950 2 1021 2 667 2 921 2 87 4 768 2 672 4 567 2 675 2 714 2 857 6 310 4 280 2 368 2 928 2 315 2 582 4 542 2 35 4 1000 2 67 2 868 2 653 2 
133 4 0 2 977 2 76 2 727 4 171 2 470 2 323 2 135 2 509 2 175 4 788 4 513 2 80 4 845 2 555 4 479 10 480 2 522 2 328 2 950 2 1021 2 667 2 921 2 87 4 768 2 672 4 567 2 675 2 714 2 857 6 310 4 280 2 368 4 928 2 315 2 582 4 542 2 35 4 1000 2 67 2 868 2 653 2 
152 2 626 2 174 2 908 2 677 2 362 2 
705 2 602 2 806 2 961 2 504 2 362 2 488 2 
236 2 78 2 438 2 879 1 477 2 210 2 479 10 945 2 299 1 212 2 850 2 664 2 114 2 988 2 87 8 922 2 566 2 855 2 856 2 366 2 161 1 128 2 162 2 259 2 778 1 103 1 
552 2 
133 2 727 2 118 2 492 2 26 2 441 1 80 2 479 1 883 7 427 2 447 2 999 2 484 2 274 2 334 2 87 1 278 2 39 4 
133 2 727 2 118 2 492 2 26 2 80 2 883 6 427 4 999 2 447 4 484 2 274 2 334 2 278 4 39 4 
133 2 727 2 118 2 492 2 26 8 441 1 80 2 479 1 883 10 427 8 999 2 447 8 484 2 274 2 334 6 87 1 278 8 39 4 
133 2 727 2 118 2 492 2 80 2 883 2 427 2 999 2 447 2 484 2 274 2 278 2 39 2 
656 2 264 2 265 2 907 2 514 2 916 4 327 4 986 2 669 2 87 18 926 2 992 2 533 18 224 8 394 2 345 2 101 14 283 2 870 2 41 1 106 2 876 3 702 2 479 18 818 2 635 2 638 2 186 2 891 2 1025 2 249 2 896 2 311 2 963 8 316 2 648 2 502 2 196 2 583 2 839 2 903 2 
433 6 265 2 907 6 205 4 206 6 514 2 597 2 794 2 445 4 916 8 327 2 139 2 986 6 87 26 148 2 92 4 20 2 533 36 224 14 157 2 536 4 33 2 101 14 283 2 285 2 870 2 471 4 237 4 474 2 350 2 876 2 404 4 297 2 702 2 479 28 818 2 557 2 412 2 635 2 637 10 638 2 186 2 562 2 891 2 711 10 896 2 895 2 311 2 125 2 963 14 1035 2 316 2 897 2 648 8 317 2 502 8 196 2 972 2 373 2 583 6 901 4 903 2 
265 2 907 4 514 4 794 2 913 2 521 2 916 14 139 1 148 2 533 32 157 2 536 2 539 2 33 1 543 2 283 2 546 2 284 2 169 2 173 2 813 4 297 2 180 2 818 6 557 2 49 4 186 4 562 2 710 2 957 2 711 2 311 2 963 16 965 2 966 2 196 4 429 2 583 4 839 2 72 2 433 1 205 2 206 4 79 2 445 2 735 2 327 2 986 4 87 34 853 4 92 2 93 2 741 2 219 2 224 18 101 4 230 2 870 6 471 2 237 2 474 2 350 2 874 2 876 4 238 4 478 2 479 38 635 2 637 10 111 2 638 2 639 2 891 2 1028 2 896 2 895 2 254 2 1032 2 775 2 1036 2 370 2 897 4 648 4 1038 2 502 4 901 2 903 2 
264 2 265 2 907 2 205 2 514 2 981 2 916 2 917 2 10 2 141 2 986 2 87 34 146 2 527 2 852 2 386 2 91 2 388 2 926 2 993 2 533 40 858 2 224 16 536 2 160 2 930 2 394 2 541 2 615 2 101 24 616 2 36 2 809 2 468 2 870 2 871 2 621 2 349 2 1007 2 471 2 109 2 702 2 479 34 242 2 818 2 48 4 635 2 638 2 954 2 822 2 304 4 1025 2 891 2 249 2 827 2 365 2 896 2 188 2 311 2 963 16 424 2 314 2 316 2 648 6 258 2 502 6 583 2 652 4 903 2 
789 2 

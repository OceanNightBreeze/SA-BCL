#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 507 186 519 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException (557,571,769,823,1097) (557,571,769,823,1097) (557,571,769,823,1097) (557,571,769,823,1097) (557,571,769,823,1097) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 881 881 243 243 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 658 658 269 269 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 672 (125,1114) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 672 (125,1114) (125,1114) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 672 (125,1114) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 6 928 213 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 546 585 1082 611 707 46 147 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 546 585 1082 707 46 147 
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 660 147 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | ASSIGN | 20429 | = null
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3_16()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.RootNode:RootNode()V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_56()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:isPointer()Z
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_77()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String; | ASSIGN | 5362 | = null
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:memberOf(F[D)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:sameLength([I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:eq(JJ)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:lexEqual([I[I)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ProglangType:isScalar()Z
daikon.ProglangType:baseIsFloat()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | STATEMENT | 27899 | stmt -> ;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_15()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_27()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant:getConfidence()D
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3R_60()Z
daikon.PptSlice1:arity()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfo:isDerived()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaParser:jj_3R_106()Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:min([I)I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_99()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 279916 | = null
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_87()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_72()Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.Constant:name()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:sign(I)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_25()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_133()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_101()Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_103()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:memberOf(S[S)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_105()Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3R_68()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:hashCode()I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V | ASSIGN | 10356 | = null
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfo:new_ppt()V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.Node:Node()V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:jj_3R_69()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_74()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_3R_148()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.Quant:eltwiseLT([I)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String; | ASSIGN | 111454 | = null
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V | ASSIGN | 3964 | = null
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:isIntegral()Z
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I | CONSTANT | 22394 | 0 -> 1
jtb.JavaParser:jj_3R_121()Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_80()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoAux:hashCode()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:lt(II)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_2_4(I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_104()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_86()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quantify.Constant:Constant(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_3R_70()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String; | RETURN | 48940 | return null
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice2:arity()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_20()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:arity()I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([I)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.Token:newToken(I)Ljtb.Token;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:dimensions()I
jtb.JavaCharStream:readChar()C
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3R_89()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.Quant:memberOf(I[I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 54234 | = null
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | CONDITION | 32424 | if (x) -> if (!x)
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([I)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ModBitTracker:num_sets()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3_22()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | CONDITION | 14085 | if (x) -> if (!x)
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3R_96()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_63()Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
606 2 516 2 166 2 895 2 708 2 1005 2 91 4 1102 2 872 2 
840 6 550 2 431 2 376 2 762 2 625 6 103 2 866 2 1010 2 644 6 999 2 
547 2 1095 4 114 6 652 2 624 2 974 6 397 6 719 2 895 2 1125 2 1067 4 872 2 452 6 
339 8 237 4 511 4 98 10 312 2 377 16 1059 10 830 2 994 26 591 30 137 10 898 4 895 6 998 6 23 16 872 6 219 4 500 16 388 8 113 10 115 6 438 8 843 2 296 2 297 12 1118 10 643 2 227 2 645 8 583 2 
445 4 922 6 
451 2 
1089 2 98 2 558 2 377 2 1059 4 994 4 591 6 137 2 898 2 998 2 23 2 778 2 807 2 500 2 388 2 113 2 676 2 531 2 259 2 1118 2 297 2 1012 2 724 2 
219 2 234 4 500 8 113 4 205 6 1111 4 204 6 98 4 224 2 377 8 994 12 591 14 297 5 1118 4 137 4 23 8 355 2 
1090 2 824 2 984 2 507 2 235 2 988 2 654 2 378 2 313 6 693 2 461 4 515 2 279 10 862 30 519 2 518 4 697 2 699 2 963 2 633 2 966 2 287 2 1004 2 739 2 580 2 184 2 186 2 845 2 327 6 442 2 681 2 505 4 450 2 
508 2 548 2 316 2 174 2 24 2 150 2 35 2 1112 2 1050 2 451 2 
602 2 233 2 755 2 288 2 473 2 313 2 627 2 396 2 845 2 133 2 535 2 733 2 158 2 927 2 227 2 818 2 364 2 368 2 966 4 
0 4 234 4 165 2 204 6 205 6 855 4 273 2 98 18 209 2 377 28 1059 6 994 46 347 8 591 52 137 18 1027 4 898 2 895 4 998 4 23 28 872 4 779 6 780 6 1036 4 500 28 388 18 113 18 1037 2 1111 4 115 4 438 6 84 6 40 4 296 2 1118 18 297 21 914 2 337 4 614 2 
313 2 450 2 461 2 
110 2 5 2 177 22 793 2 168 2 391 10 432 2 102 2 787 2 325 2 187 2 801 2 599 2 852 2 
455 2 585 4 310 2 8 4 19 2 872 26 318 2 26 2 321 8 33 1 178 2 324 6 477 2 748 2 333 2 611 2 481 2 336 1 483 2 489 4 207 1 769 2 1023 1 895 28 899 2 71 2 354 4 73 1 902 1 1038 1 1041 2 915 2 916 2 94 5 920 2 795 6 236 1 924 2 520 2 1063 2 108 2 247 2 671 1 253 1 813 1 816 2 538 1 541 2 823 2 546 4 954 1 1097 2 826 1 552 2 957 2 557 2 1103 2 413 1 960 1 417 2 567 2 1109 6 429 2 571 2 572 1 706 6 708 2 293 1 844 1 715 2 581 2 1121 2 725 1 306 2 
375 2 
895 2 268 2 
895 4 214 2 965 2 
587 4 857 2 13 2 315 2 861 2 16 24 592 2 864 2 863 2 595 2 596 4 867 2 600 2 870 2 601 2 320 2 31 16 32 4 604 2 36 2 37 4 605 2 608 2 876 4 43 4 44 4 609 10 610 8 334 2 48 6 613 2 616 6 617 2 52 2 618 2 620 4 885 2 341 2 887 2 889 2 890 2 626 2 346 2 348 2 630 2 897 2 631 10 350 2 70 2 634 2 356 2 901 2 77 2 907 2 637 50 636 38 638 2 83 4 85 2 640 2 912 2 89 2 90 2 367 4 649 2 95 216 919 2 96 4 371 2 372 16 374 2 653 2 100 2 101 50 661 2 925 50 664 2 107 2 666 2 668 2 933 2 111 2 673 2 112 44 674 2 675 48 938 2 116 2 939 50 942 160 943 2 395 2 119 2 944 4 121 16 945 2 123 2 682 4 404 2 683 4 684 2 946 2 407 2 409 2 691 2 410 26 412 2 132 4 961 2 414 20 962 2 419 2 420 2 698 6 424 50 423 2 702 2 143 8 704 2 145 2 144 50 969 2 705 2 971 4 972 8 973 2 710 2 433 16 712 2 711 2 152 2 976 4 153 4 155 2 716 2 718 2 441 2 443 4 446 12 447 4 160 8 723 4 726 2 985 26 167 2 987 30 729 4 991 2 989 2 731 2 993 2 463 2 995 4 735 36 996 4 464 2 466 2 468 14 175 2 469 8 1003 2 180 2 182 2 181 2 1006 2 475 16 183 2 1008 8 742 2 189 10 479 2 193 2 749 160 197 2 196 8 198 2 1016 8 485 2 201 2 756 8 1020 2 758 2 202 2 759 2 488 4 763 2 490 2 765 2 208 2 766 46 494 50 1022 50 770 20 1024 2 1025 2 495 2 773 2 1029 2 1030 2 216 2 1031 2 1032 50 1034 2 781 2 221 2 782 50 222 2 502 2 785 2 223 4 790 2 1045 2 1046 2 1047 24 231 2 1051 26 1052 2 1058 28 240 2 799 2 1061 2 244 4 246 2 517 2 1065 2 522 8 1068 2 806 4 249 2 809 2 1071 2 1073 2 811 4 532 6 815 2 536 160 262 2 263 4 820 2 265 4 821 2 264 2 266 8 267 2 1084 2 1087 4 271 2 825 2 1094 2 549 2 1098 4 553 4 827 50 554 4 276 2 1099 22 556 2 561 2 829 2 1104 24 562 4 1107 36 1108 2 833 2 835 2 283 2 568 6 286 2 838 2 1110 6 575 4 841 2 294 2 579 2 842 2 295 2 846 2 298 4 300 50 1119 2 302 2 1126 2 582 22 849 2 850 2 584 2 
1018 2 893 2 542 1 162 2 
893 2 149 2 
893 2 509 2 978 2 574 2 511 2 313 2 983 2 
893 2 978 2 690 2 
893 2 1106 2 978 2 
1028 2 958 2 162 2 
893 2 978 2 
958 2 990 2 
893 2 472 2 
245 2 958 2 162 2 
465 2 458 2 162 2 
226 2 498 2 162 2 
635 2 353 2 162 2 
210 2 819 2 162 2 
722 2 958 2 
893 2 151 2 
458 2 713 2 
498 2 436 2 
28 2 353 2 
819 2 612 2 
717 2 958 2 
819 2 930 2 
353 2 967 2 
498 2 303 2 
50 2 458 2 
245 2 173 2 958 2 162 2 
245 2 173 2 159 2 958 2 162 2 
854 2 958 2 162 2 
1057 2 958 2 162 2 
545 2 176 2 786 2 588 2 
487 2 1002 2 177 6 952 2 510 2 503 2 169 2 15 2 514 2 629 4 88 2 138 2 875 2 1048 2 832 2 565 2 822 4 917 2 
162 2 242 2 
291 2 392 2 313 2 983 2 
590 2 509 2 291 2 392 2 313 2 983 2 
893 2 978 2 511 2 721 2 313 2 983 2 
856 2 126 2 
74 2 511 2 313 2 983 2 
353 2 692 2 
819 2 1122 2 
421 2 458 2 
757 2 498 2 
819 2 498 2 1066 2 
819 2 498 2 225 2 
603 2 819 2 498 2 
819 2 498 2 656 2 
56 2 313 2 894 2 280 6 529 2 120 2 304 2 983 2 
21 2 958 2 
26 2 
727 6 585 4 310 2 171 2 316 1 19 2 20 2 872 22 318 2 321 4 178 6 474 2 324 2 477 2 748 6 333 2 611 2 45 2 481 2 336 2 751 2 483 2 881 2 55 2 489 4 207 2 59 2 895 22 66 2 71 2 354 4 1033 2 784 2 359 2 78 1 79 2 1041 2 1040 2 650 2 508 1 920 2 795 4 921 2 241 2 924 2 380 2 243 2 520 2 1063 2 929 2 810 2 678 2 541 2 1086 2 546 4 1091 2 687 2 1103 2 135 2 417 2 139 2 425 2 700 4 284 2 567 2 1109 6 430 1 706 2 573 2 708 2 709 2 715 6 299 2 581 2 1121 2 981 2 306 2 
455 2 727 6 585 4 310 2 171 2 19 2 20 2 872 22 318 2 321 4 178 6 474 2 324 2 477 2 748 6 333 2 611 2 45 2 481 2 336 2 751 2 483 2 55 2 489 4 207 2 59 2 895 22 71 2 354 4 1033 2 784 2 359 2 79 2 1041 2 1040 2 650 2 920 2 795 6 921 2 241 2 924 2 658 2 380 2 520 2 1063 2 929 2 247 2 810 2 678 2 541 2 269 2 1086 2 546 4 1091 2 687 2 1103 2 135 2 417 2 139 2 425 2 700 4 284 2 567 2 1109 6 706 2 573 2 708 2 709 2 437 2 715 6 299 2 581 2 1121 2 981 2 306 2 
195 2 
51 2 891 2 
1085 2 444 2 92 2 
1085 2 444 2 92 2 
455 2 727 2 585 4 310 2 10 2 462 2 19 2 20 2 872 14 318 2 321 2 178 2 477 2 1010 2 748 2 333 2 611 2 481 2 751 2 483 2 621 2 55 2 489 4 625 4 60 2 65 2 496 2 772 2 895 18 71 2 354 4 774 2 81 6 1041 2 644 4 92 2 920 2 795 6 376 2 241 2 924 2 103 2 803 2 520 2 1063 2 929 2 247 2 672 2 936 2 256 2 541 2 546 4 955 2 1103 2 417 2 425 2 834 2 567 2 968 2 1109 6 840 4 708 2 431 2 1114 2 715 2 440 2 444 2 581 2 1121 2 980 2 981 2 306 2 
51 2 970 2 30 2 203 2 238 2 239 2 434 2 492 2 924 2 261 2 895 4 520 2 746 2 720 2 47 2 775 2 872 2 
455 2 727 2 585 4 310 2 10 2 462 2 19 2 20 2 872 14 318 2 321 4 178 2 477 2 1010 2 748 2 333 2 611 2 481 2 751 2 483 2 621 2 55 2 489 4 625 4 60 2 65 2 496 4 772 2 895 18 71 2 354 4 774 2 81 6 1041 2 644 4 92 2 646 2 920 2 795 6 376 2 241 2 924 2 103 2 803 2 520 2 1063 2 929 2 247 2 672 2 936 2 256 2 125 2 541 2 546 4 955 2 1103 2 417 2 425 2 834 2 567 2 968 2 1109 6 840 4 708 2 431 2 1114 2 715 2 440 2 444 2 581 2 1121 2 980 2 981 2 306 2 
455 2 727 2 585 4 310 2 10 2 462 2 19 2 20 2 872 14 318 2 321 2 178 2 477 2 1010 2 748 2 333 2 611 2 481 2 751 2 483 2 621 2 55 2 489 4 625 4 60 2 65 2 496 2 772 2 895 18 71 2 354 4 774 2 81 6 1041 2 644 4 92 2 920 2 795 6 376 2 241 2 924 2 103 2 803 2 520 2 1063 2 929 2 247 2 672 2 936 2 256 2 541 2 546 4 955 2 1103 2 417 2 425 2 834 2 567 2 968 2 1109 6 840 4 708 2 431 2 1114 2 715 2 440 2 444 2 581 2 1121 2 980 2 981 2 306 2 
1 4 2 2 3 2 310 2 585 6 6 2 311 2 586 8 7 2 11 2 858 2 859 10 860 2 17 2 591 16 594 4 598 12 20 2 18 2 22 3 869 2 871 2 23 8 872 30 25 2 318 2 27 2 321 27 29 18 873 3 34 2 322 4 323 2 38 10 324 27 39 2 328 2 329 2 330 6 41 2 331 6 332 2 333 2 45 2 611 4 878 4 879 2 880 2 336 2 49 6 615 2 614 2 619 2 338 2 340 6 622 2 57 2 342 2 343 2 345 3 344 2 628 3 62 2 63 2 896 2 895 46 351 2 68 2 67 2 69 2 900 2 632 4 71 4 354 4 76 2 75 2 358 2 905 6 79 2 639 10 80 4 82 6 909 2 911 3 365 4 647 4 650 2 918 2 920 2 97 2 99 10 98 4 377 8 924 2 379 2 382 2 383 2 663 2 106 20 928 2 665 8 384 2 667 2 385 6 109 4 932 2 934 2 388 4 113 4 935 2 115 4 677 2 678 2 118 2 941 6 680 22 398 2 399 2 122 2 124 2 403 2 405 2 127 2 129 2 947 4 948 2 949 2 406 2 686 2 687 2 688 2 408 2 956 2 411 8 959 2 135 44 415 2 417 2 416 2 137 4 139 16 696 2 422 2 964 4 701 2 700 12 428 2 146 6 706 18 148 4 708 4 709 2 435 4 438 6 714 2 977 4 715 36 156 10 157 2 453 2 456 4 455 6 727 60 986 2 730 2 460 4 459 2 732 2 994 12 737 2 1001 4 471 2 179 2 178 14 185 2 188 2 477 2 745 2 743 2 478 2 191 4 748 14 747 9 1015 4 480 2 1017 2 483 2 752 2 486 2 753 26 754 2 200 16 1019 6 205 6 206 8 1021 10 489 4 207 2 764 48 491 28 209 4 767 2 212 2 771 2 1026 4 213 2 217 2 777 60 500 8 220 2 784 2 1039 2 1041 4 788 2 1044 2 789 2 232 2 506 10 792 4 795 14 794 2 796 4 1054 2 797 3 1056 2 798 2 241 2 512 4 1060 2 802 4 1062 3 520 2 804 2 1063 4 521 2 247 6 523 2 525 4 1069 16 250 9 1070 2 255 2 810 20 530 6 1075 2 812 2 1077 2 1078 2 260 2 817 4 1081 2 540 6 541 2 543 2 544 2 1088 2 270 2 546 6 1091 2 1093 4 1096 2 272 26 551 2 274 2 828 4 275 2 277 16 1101 2 1105 2 564 2 566 2 284 2 567 2 570 6 837 4 285 2 1109 6 289 4 839 2 290 4 1111 4 292 2 577 2 578 14 1113 16 1116 4 1117 1 847 6 297 6 1118 4 1120 2 581 2 1123 2 1124 2 851 2 306 2 
506 2 687 2 923 2 345 2 135 6 696 2 895 2 896 2 700 2 872 2 471 2 321 2 706 2 178 2 639 4 324 2 38 2 1078 2 715 2 39 2 157 2 748 2 405 2 1017 2 
506 2 687 2 923 2 345 2 135 6 696 2 895 2 896 2 700 2 872 2 471 2 321 2 706 2 178 2 639 4 324 2 38 2 1078 2 715 2 39 2 157 2 748 2 405 2 1017 2 
506 2 687 2 923 2 345 2 135 6 696 2 895 2 896 2 700 2 872 2 471 2 321 2 706 2 178 2 639 4 324 2 38 2 1078 2 715 2 39 2 157 2 748 2 405 2 1017 2 
687 2 98 2 460 2 491 6 377 2 314 2 694 2 994 4 134 2 591 4 104 2 137 2 895 10 385 4 23 2 872 4 931 3 250 3 500 2 146 4 251 2 321 3 113 2 115 2 740 4 578 2 941 4 82 4 438 4 324 3 154 2 326 2 715 2 1118 2 157 2 42 2 747 3 230 2 365 2 879 2 
460 2 98 2 377 2 314 2 994 4 591 4 104 2 385 4 23 2 872 4 931 2 250 2 321 2 388 2 251 2 113 2 115 2 740 4 941 4 324 2 326 2 42 2 747 2 879 2 687 2 491 6 694 2 134 2 137 2 895 10 500 2 146 4 578 2 438 4 82 4 154 2 715 2 296 2 157 2 297 2 1118 2 365 2 230 2 
460 2 98 2 377 2 314 2 994 4 591 4 104 2 385 4 23 2 872 4 931 2 250 2 321 2 388 2 251 2 113 2 115 2 740 4 941 4 324 2 326 2 42 2 747 2 879 2 687 2 491 6 694 2 134 2 137 2 895 10 500 2 146 4 578 2 438 4 82 4 154 2 715 2 296 2 157 2 297 2 1118 2 365 2 230 2 
460 2 98 2 377 2 314 2 994 4 591 4 104 2 385 4 23 2 872 4 931 2 250 2 321 2 388 2 251 2 113 2 115 2 740 4 941 4 324 2 326 2 42 2 747 2 879 2 687 2 491 6 694 2 134 2 137 2 895 10 500 2 146 4 578 2 438 4 82 4 154 2 715 2 296 2 157 2 297 2 1118 2 365 2 230 2 
460 2 98 2 377 2 314 2 994 4 591 4 104 2 385 4 23 2 872 4 931 2 250 2 321 2 388 4 251 2 113 2 115 2 740 4 941 4 324 2 326 2 42 2 747 2 879 2 687 2 491 6 694 2 134 2 137 2 895 10 500 2 146 4 578 2 438 4 82 4 154 2 715 2 296 4 157 2 297 4 1118 2 365 2 230 2 
317 2 685 2 566 2 848 2 1100 2 655 2 
170 2 139 2 140 2 215 2 360 2 467 2 655 2 
883 2 884 2 689 1 515 1 64 2 734 2 895 10 427 2 1064 2 776 2 72 1 1000 2 669 2 872 8 386 2 903 1 252 2 739 1 527 2 1007 2 362 2 874 2 190 2 504 2 333 2 335 2 
165 1 205 4 98 6 377 6 659 2 994 12 347 2 379 2 591 15 137 6 895 6 349 2 632 2 23 6 872 6 387 2 780 4 500 6 388 3 113 6 1111 2 115 2 1075 2 438 4 296 2 1118 6 297 5 913 2 979 2 128 2 337 2 
651 2 146 2 373 2 130 2 908 2 940 1 941 2 82 2 560 2 533 2 381 2 895 1 537 4 597 7 736 2 194 2 448 2 872 1 
651 2 146 2 373 2 130 4 908 4 941 2 82 2 560 4 533 2 381 2 537 4 597 6 736 2 194 2 448 2 
651 2 146 2 373 8 130 8 908 8 940 1 941 2 82 2 560 8 533 2 381 2 895 1 537 4 597 10 736 2 194 2 448 6 872 1 
651 2 146 2 130 2 908 2 941 2 82 2 560 2 533 2 381 2 537 2 597 2 736 2 194 2 
164 2 455 17 454 6 585 38 457 2 12 4 992 12 589 4 14 2 593 2 865 6 997 6 868 13 470 2 872 80 25 2 319 12 1009 6 192 6 1011 6 1013 12 611 4 46 2 484 8 882 2 53 6 54 2 886 2 760 4 761 6 623 2 57 2 768 2 61 6 211 6 895 92 352 2 218 6 499 4 501 2 904 6 783 6 361 6 1041 10 86 4 1042 6 910 12 1043 2 642 6 363 6 228 4 366 6 791 42 370 6 795 87 1055 1 800 2 657 2 513 4 662 4 105 6 1063 10 247 20 248 4 524 3 670 12 808 2 389 12 1072 6 526 1 254 6 528 12 393 6 257 2 258 6 1076 2 1079 6 1080 2 400 6 1082 2 546 44 1092 12 950 4 953 2 951 6 131 12 555 6 831 6 418 12 136 6 422 2 282 24 141 6 142 4 147 2 707 2 576 2 439 4 449 4 161 6 305 2 307 4 
455 2 728 2 4 2 585 14 795 28 457 2 9 4 14 2 926 2 172 2 865 2 1063 2 805 2 247 2 248 2 872 30 25 2 319 2 670 2 1074 2 254 2 528 2 741 2 117 2 679 2 534 2 400 2 750 2 1014 2 877 2 539 2 611 2 1082 2 46 2 1083 2 482 2 546 14 886 2 57 2 493 2 892 4 695 2 563 2 895 30 422 2 497 2 281 2 282 20 703 2 357 2 147 2 501 2 707 2 975 2 1041 2 439 2 1115 4 229 2 648 2 982 2 305 2 791 2 1127 2 163 2 
308 16 455 30 309 2 454 4 4 2 585 36 12 4 992 8 589 4 865 4 868 10 738 4 872 70 25 2 319 10 1009 4 476 2 744 8 607 4 192 8 1011 4 1013 24 611 2 46 2 484 6 882 4 53 4 760 4 54 2 761 4 888 2 58 2 57 2 61 6 211 4 895 78 352 2 499 4 501 2 904 4 906 2 783 4 361 4 1041 6 910 6 1042 4 642 4 363 4 228 4 366 4 1049 2 93 10 791 24 369 4 370 4 795 104 1053 2 660 2 513 4 662 4 105 4 1063 6 247 28 248 6 670 10 1072 4 254 4 528 10 937 10 393 4 258 8 394 8 814 4 1079 16 1080 2 400 4 401 4 402 10 546 44 1092 14 950 4 131 24 555 4 559 16 278 32 831 4 418 10 136 4 422 2 282 42 426 6 141 4 142 4 569 8 836 4 147 2 707 2 439 2 301 8 161 4 307 4 
164 2 455 12 4 2 585 14 795 40 1055 2 657 2 660 2 593 2 105 2 865 4 1063 2 247 12 868 2 248 2 524 2 470 2 319 6 25 2 872 26 670 6 389 10 254 4 528 6 393 4 257 4 1076 10 400 4 611 2 46 2 199 2 484 6 546 14 882 2 53 4 623 2 57 2 768 2 61 2 418 2 895 28 422 2 282 14 1035 2 147 2 501 2 783 4 707 2 1041 2 86 2 439 2 1042 2 910 2 1043 4 87 2 641 2 366 6 449 2 161 2 791 8 853 2 370 2 
390 2 

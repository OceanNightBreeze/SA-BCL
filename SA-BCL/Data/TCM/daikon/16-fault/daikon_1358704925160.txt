#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (684,755) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 6 28 428 727 51 780 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 102 298 778 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 693 (91,282) 423 (422,524) (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 693 (91,282) 423 (422,524) (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 693 (91,282) 423 (422,524) (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 693 (91,282) 423 (422,524) (91,282) 532 (422,524) 671 374 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V ERROR java.lang.reflect.InvocationTargetException 
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.Error 678 40 265 251 258 798 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 632 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 723 101 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NumberFormatException 819 283 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 347 648 268 353 651 559 414 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 347 648 268 651 559 414 
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 8 414 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41719 | return null
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 21839 | = null
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ProglangType:isArray()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:ne(II)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | OPERATOR | 4206 | > -> ==
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Intern:intern([J)[J
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.Invariant:logDetail()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:sameLength([I[I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:lexLT([I[I)Z | STATEMENT | 170908 | stmt -> ;
utilMDE.MathMDE:modulus([I)[I
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eltsEqual([II)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I | CONDITION | 9296 | while (x) -> while (!x)
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String; | RETURN | 48940 | return null
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isScalar()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | OPERATOR | 18331 | == -> !=
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:pow(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | CONDITION | 37236 | if (x) -> if (!x)
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:lexGT([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String; | ASSIGN | 18974 | = null
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:slice([III)[I
daikon.Quant:setDiff([I[I)[I
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsGT([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.Invariant:justified()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
daikon.ProglangType:format()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:BeginToken()C
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:getConfidence()D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min([I)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:gt(II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptName:isEnterPoint()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:logOn()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.Node:Node()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:gte(II)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:noDups([I)Z
daikon.PptSlice2:arity()I
jtb.JavaCharStream:backup(I)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.Invariants:Invariants()V
daikon.Quant:memberOf(S[S)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.PptSlice0:initInvariantsSeen()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:gcd(JJ)J
daikon.Debug:logDetail()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:intern([D)[D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 5636 | = null
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:eltsGteIndex([I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptSlice0:arity()I
daikon.ProglangType:dimensions()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:setEqual([I[I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
16 2 517 2 250 2 236 2 703 2 199 2 175 2 176 4 3 2 
595 2 393 2 558 2 148 6 512 6 784 2 317 2 241 6 563 2 465 2 306 2 
120 4 517 2 235 6 236 2 107 6 357 2 358 2 646 6 606 2 286 6 100 2 751 4 506 2 
459 4 696 8 805 2 226 8 7 10 56 29 588 4 702 10 491 2 624 2 119 16 309 4 597 10 517 6 236 6 64 8 496 2 657 4 125 8 98 6 192 2 432 16 633 10 336 6 289 10 607 12 502 16 579 2 753 2 46 26 
104 6 575 4 
732 2 
556 2 781 2 668 2 509 2 52 2 463 4 468 2 424 2 18 2 517 4 236 4 237 2 471 2 684 2 789 2 519 2 520 2 634 2 434 2 337 2 481 2 579 2 195 4 755 2 141 2 144 2 343 4 199 2 85 2 155 4 156 2 647 2 302 2 708 2 710 2 711 2 811 2 451 2 409 2 777 2 813 2 725 2 45 2 174 2 
293 4 366 6 557 6 418 8 530 4 260 2 226 18 7 16 203 2 443 2 206 6 702 16 588 2 56 54 12 4 491 2 119 32 597 6 517 4 788 4 236 4 64 6 576 6 98 4 432 32 633 16 523 4 336 4 479 2 193 4 130 2 289 16 502 32 607 22 217 6 46 48 661 2 692 4 244 6 
408 2 701 2 755 2 
311 2 667 2 396 2 122 2 96 22 684 2 670 2 497 2 316 2 776 10 287 2 214 2 207 2 308 2 
458 2 800 2 225 2 803 2 226 2 7 2 702 2 588 2 56 6 705 2 444 2 60 2 407 2 119 2 597 4 432 2 633 2 336 2 289 2 607 2 502 2 134 2 46 4 
309 2 293 4 119 8 352 2 788 4 432 8 7 4 633 4 289 4 607 4 502 8 217 6 702 4 56 16 46 12 365 2 244 6 
143 2 339 2 247 2 318 2 199 2 673 2 701 4 89 2 622 2 591 2 273 8 408 2 382 2 812 2 43 2 171 2 172 2 578 2 69 2 609 2 364 4 219 14 755 6 
417 2 183 2 1 2 33 2 732 2 733 2 59 2 768 2 541 2 655 2 
220 2 221 2 223 1 2 3 4 6 3 2 511 3 6 2 320 2 321 2 514 3 621 1 10 2 737 2 113 2 516 3 328 2 230 2 231 2 627 2 233 2 425 4 428 2 517 32 518 1 744 2 236 34 21 3 431 2 747 24 750 2 749 6 133 2 242 6 638 2 756 2 436 2 28 2 527 2 147 2 248 2 645 2 344 2 648 4 347 4 38 1 445 2 446 16 447 2 349 32 540 5 164 1 652 2 353 2 543 2 354 1 772 2 452 2 42 2 545 2 455 2 548 2 173 3 178 2 665 2 780 2 48 1 782 32 51 2 184 2 369 2 461 1 674 2 675 2 679 3 270 1 61 16 680 2 566 2 469 2 786 2 378 2 572 2 683 2 573 24 383 2 280 2 65 1 474 2 476 2 388 1 689 2 290 2 68 4 581 4 483 2 292 1 75 2 391 2 694 3 78 2 81 2 80 1 294 2 83 2 804 1 201 2 301 2 88 2 303 2 704 2 405 3 208 2 590 2 709 16 90 2 307 16 596 2 808 2 312 2 92 1 93 2 211 2 95 2 602 2 411 2 603 2 412 2 99 3 724 2 816 2 216 3 817 4 218 2 818 1 726 3 415 6 727 2 
127 2 236 2 
153 2 121 2 236 4 
796 2 
439 2 641 2 695 2 508 2 146 2 583 2 398 2 298 2 617 2 227 4 488 2 188 2 767 2 162 2 493 2 334 2 544 4 656 2 385 2 577 2 778 2 637 2 102 2 74 2 
139 2 748 2 759 1 297 2 
296 2 297 2 
426 2 376 2 459 2 755 2 271 2 297 2 23 2 
297 2 23 2 797 2 
644 2 297 2 23 2 
139 2 63 2 19 2 
297 2 23 2 
63 2 150 2 
599 2 297 2 
139 2 63 2 761 2 
139 2 531 2 785 2 
139 2 464 2 650 2 
139 2 304 2 177 2 
139 2 229 2 355 2 
63 2 329 2 
752 2 297 2 
531 2 118 2 
464 2 420 2 
238 2 177 2 
719 2 229 2 
63 2 255 2 
229 2 698 2 
568 2 177 2 
464 2 615 2 
266 2 531 2 
139 2 63 2 761 2 565 2 
139 2 549 2 63 2 761 2 565 2 
139 2 359 2 63 2 
139 2 76 2 63 2 
209 2 109 2 561 2 128 2 
376 2 466 2 755 2 555 2 
376 2 466 2 677 2 755 2 271 2 555 2 
376 2 459 2 380 2 755 2 297 2 23 2 
542 2 811 2 
376 2 459 2 379 2 755 2 
397 2 177 2 
30 2 229 2 
259 2 531 2 
464 2 194 2 
142 2 464 2 229 2 
734 2 464 2 229 2 
323 2 464 2 229 2 
464 2 229 2 381 2 
105 2 0 2 562 6 11 2 376 2 410 6 755 2 757 2 
810 2 63 2 
582 2 234 2 158 2 553 2 430 2 669 2 416 2 783 4 
139 2 212 2 
602 2 
221 2 4 6 3 2 321 2 10 2 231 2 627 2 425 4 427 2 428 2 517 26 236 26 431 2 750 2 749 2 242 4 527 2 147 2 248 2 37 2 648 4 347 4 38 2 447 2 349 4 652 2 353 2 42 2 545 2 550 2 551 2 665 4 780 2 782 6 51 2 186 2 53 2 675 2 676 2 467 2 566 2 469 2 786 2 275 2 378 2 687 2 280 6 476 2 284 2 689 2 71 2 581 4 483 2 292 2 391 2 295 2 806 2 706 2 590 2 208 2 709 6 596 2 808 2 718 2 603 2 411 2 412 2 604 4 722 4 817 8 218 2 415 2 727 2 821 2 
221 2 4 6 3 2 320 1 321 2 10 2 231 2 232 2 627 2 425 4 427 2 428 2 517 26 236 26 431 2 521 2 750 2 749 2 242 5 527 2 147 2 248 2 645 1 37 2 648 4 347 4 38 2 447 2 349 4 652 2 353 2 42 2 545 2 550 2 551 2 665 4 780 2 782 6 51 2 186 2 53 2 675 2 676 2 467 2 566 2 469 2 786 2 275 2 378 2 687 2 280 6 281 2 476 2 689 2 71 2 581 4 483 2 292 2 391 2 806 2 706 2 592 2 590 2 208 2 709 6 596 2 808 2 603 2 411 2 412 2 604 4 722 4 817 8 218 2 415 2 727 2 821 2 
507 4 368 2 185 2 110 4 4 4 671 2 512 6 616 4 321 2 371 2 422 2 564 2 675 2 465 4 626 2 14 2 740 2 374 2 332 2 786 2 425 2 628 8 517 6 236 12 574 2 685 2 790 2 433 2 241 6 389 2 524 2 795 2 581 2 640 2 393 2 529 4 198 2 148 6 532 2 533 8 86 2 442 2 699 2 36 2 157 2 590 2 306 4 447 2 91 2 714 2 808 2 715 4 717 2 97 4 42 2 317 2 360 2 215 2 505 2 47 8 
507 4 460 2 558 2 185 2 368 2 110 4 4 4 671 2 616 4 512 6 321 2 371 2 422 2 564 2 675 2 465 4 626 2 14 2 740 2 374 2 786 2 62 2 332 2 425 2 628 8 517 6 236 12 630 4 574 2 685 2 790 2 433 2 241 8 389 2 524 2 795 2 581 2 640 2 393 2 529 4 198 2 148 8 532 2 533 8 86 2 442 2 699 2 36 2 157 2 590 2 306 4 447 2 91 2 714 2 808 2 715 4 717 2 97 4 42 2 317 2 215 2 47 8 
717 2 529 4 198 2 97 2 368 2 671 2 616 4 512 2 433 2 442 2 241 2 422 2 389 2 465 2 306 2 795 2 14 2 374 2 
507 4 558 2 368 2 185 2 110 4 4 4 671 2 512 4 616 4 321 2 371 2 422 2 564 2 675 2 465 4 626 2 14 2 740 2 374 2 332 2 786 2 425 2 628 4 517 6 236 12 574 2 685 2 790 2 433 2 241 6 389 2 524 2 795 2 581 2 640 2 393 2 529 4 198 2 148 6 532 2 533 4 86 2 442 2 699 2 36 2 157 2 590 2 306 4 447 2 91 2 714 2 808 2 715 4 717 2 97 4 42 2 360 2 215 2 505 2 47 4 
507 4 368 2 185 2 110 4 4 4 671 2 512 6 616 4 784 2 321 2 371 2 422 2 564 2 675 2 465 4 626 2 14 2 740 2 374 2 332 2 786 2 425 2 628 4 517 6 236 12 574 2 685 2 790 2 433 2 241 4 389 2 524 2 795 2 581 2 640 2 393 2 529 4 198 2 148 6 532 2 533 4 86 2 442 2 699 2 36 2 157 2 590 2 306 4 447 2 91 2 714 2 808 2 715 4 717 2 97 4 42 2 360 2 215 2 505 2 47 4 
507 4 368 2 185 2 110 4 4 4 671 2 512 6 616 4 321 2 371 2 422 2 564 2 675 2 465 4 626 2 14 2 740 2 374 2 332 2 786 2 425 2 628 4 517 6 236 12 574 2 685 2 790 2 433 2 241 6 389 2 524 2 795 2 581 2 640 2 393 2 529 4 198 2 148 6 532 2 533 8 86 2 442 2 699 2 36 2 157 2 590 2 306 4 447 2 91 2 714 2 808 2 715 4 717 2 97 4 42 2 317 2 360 2 215 2 505 2 47 4 
507 4 368 2 185 2 110 4 4 4 671 2 512 8 616 4 784 2 321 2 371 2 422 2 564 2 675 2 465 4 626 2 14 2 740 2 374 2 332 2 786 2 425 2 628 8 517 6 236 12 574 2 685 2 790 2 433 2 241 6 389 2 524 2 795 2 581 2 640 2 393 2 529 4 198 2 148 8 532 2 533 8 86 2 442 2 699 2 36 2 157 2 590 2 306 4 447 2 91 2 714 2 808 2 715 4 717 2 97 4 42 2 317 2 360 2 215 2 505 2 47 8 
507 4 368 2 185 2 110 4 4 4 671 2 512 6 616 4 321 2 371 2 422 2 564 2 675 2 465 4 626 2 14 2 740 2 374 2 332 2 786 2 425 2 628 8 517 6 236 12 574 2 685 2 790 2 433 2 241 6 389 2 524 2 795 2 581 2 640 2 393 2 529 4 198 2 148 6 532 2 533 8 86 2 442 2 699 2 36 2 157 2 590 2 306 4 447 2 91 2 714 2 808 2 715 4 717 2 97 4 42 2 317 2 360 2 215 2 505 2 47 8 
507 4 221 2 729 2 108 2 614 2 110 8 3 2 4 6 616 4 512 8 320 2 321 2 619 4 422 2 228 2 623 4 423 2 231 2 739 4 626 2 14 2 332 2 425 4 121 4 517 22 236 40 431 10 631 1 127 4 433 2 522 8 435 4 241 4 131 4 749 2 750 2 524 2 242 6 243 2 27 8 137 2 437 2 438 2 640 2 140 2 29 4 527 2 528 4 529 4 341 2 342 1 148 12 248 2 34 2 532 2 533 2 645 2 442 2 36 2 157 2 649 2 648 4 160 7 764 2 347 4 766 2 539 1 449 4 447 2 349 2 652 2 166 4 450 2 167 2 654 2 353 2 168 1 42 2 545 2 775 2 547 2 363 2 659 2 782 8 185 2 368 2 186 2 671 2 784 4 53 2 371 2 564 2 675 2 465 4 469 2 566 2 374 2 786 2 275 2 574 2 790 2 190 1 280 6 792 4 476 2 282 2 689 2 389 2 390 1 691 1 70 2 580 1 796 4 795 2 581 4 483 2 391 2 693 2 393 4 197 2 79 2 395 4 799 4 198 2 299 2 86 2 699 2 587 4 806 2 490 2 208 2 590 2 406 2 709 6 306 4 712 7 713 4 596 2 91 2 714 2 808 2 715 6 717 2 495 1 97 4 603 2 722 4 215 2 817 4 218 2 415 2 727 2 505 2 103 2 
507 4 221 2 729 2 108 2 614 2 110 8 3 2 4 6 616 4 512 8 320 2 321 2 619 4 422 2 228 2 623 4 423 2 231 2 739 4 626 2 14 2 332 2 425 4 121 4 517 22 236 40 431 10 127 4 433 2 522 8 435 4 241 8 131 4 749 2 750 4 524 2 242 6 243 2 27 8 137 2 437 2 438 2 640 2 140 2 29 4 527 2 528 4 529 4 341 2 148 12 248 2 34 2 532 2 533 6 645 2 442 2 36 2 157 2 649 2 648 4 764 2 347 4 766 2 449 4 447 2 349 2 652 2 166 4 450 2 167 2 654 2 353 2 42 2 545 2 775 2 547 2 363 2 659 2 782 8 185 2 368 2 186 2 671 2 53 2 371 2 564 2 675 2 465 4 469 2 566 2 374 2 786 2 275 2 574 2 790 2 280 6 792 4 476 2 282 2 689 4 389 2 70 2 796 4 795 2 581 4 483 2 391 2 693 2 393 4 197 2 79 2 395 4 799 4 198 2 299 2 86 2 699 2 587 4 806 2 490 2 208 2 590 2 406 2 709 6 306 4 713 4 596 2 91 2 714 2 808 2 715 6 717 2 97 4 603 2 317 4 722 4 215 2 817 6 218 4 415 2 727 2 505 2 103 2 
507 4 221 2 729 2 108 2 614 2 110 8 3 2 4 6 616 4 512 8 320 2 321 2 619 4 422 2 228 2 623 4 423 2 231 2 739 4 626 2 14 2 332 2 425 4 628 4 121 4 517 22 236 40 431 10 127 4 433 2 522 8 435 4 241 8 131 4 749 2 750 4 524 2 242 6 243 2 27 8 137 2 437 2 438 2 640 2 140 2 29 4 527 2 528 4 529 4 341 2 148 12 248 2 34 2 532 2 533 6 645 2 442 2 36 2 157 2 649 2 648 4 764 2 347 4 766 2 449 4 447 2 349 2 652 2 166 4 450 2 167 2 654 2 353 2 42 2 545 2 775 2 547 2 363 2 659 2 47 4 782 8 185 2 368 2 186 2 671 2 53 2 371 2 564 2 675 2 465 4 469 2 566 2 374 2 786 2 275 2 574 2 790 2 280 6 792 4 476 2 282 2 689 4 389 2 70 2 796 4 795 2 581 4 483 2 391 2 693 2 393 4 197 2 79 2 395 4 799 4 198 2 299 2 86 2 699 2 587 4 806 2 490 2 208 2 590 2 406 2 709 6 306 4 713 4 596 2 91 2 714 2 808 2 715 6 717 2 97 4 603 2 317 4 722 4 215 2 817 6 218 4 415 2 727 2 505 2 103 2 
507 4 221 2 729 2 730 2 614 2 110 8 3 2 4 6 616 4 512 10 321 2 320 2 619 4 422 2 228 2 623 4 423 2 231 2 739 4 626 2 14 2 332 2 425 4 628 4 121 4 517 20 236 38 124 2 431 8 127 4 433 2 522 6 435 4 241 10 131 4 749 4 750 4 524 2 242 6 243 2 27 8 137 2 437 2 438 2 640 2 140 2 29 4 527 2 528 4 529 4 341 2 148 16 248 2 34 2 532 2 533 6 645 2 442 2 36 2 157 2 649 2 648 4 764 2 347 4 766 2 449 4 448 2 447 2 349 4 652 2 166 4 450 2 167 2 654 2 353 2 42 2 545 2 775 2 547 2 363 2 659 2 779 2 47 4 663 2 558 2 782 12 185 2 368 2 186 2 671 2 784 2 53 2 371 2 564 2 675 2 465 4 469 2 566 2 374 2 786 2 275 2 574 2 790 2 280 8 792 4 66 2 476 2 282 2 689 4 389 2 70 2 796 4 795 2 581 4 483 2 391 2 693 2 393 4 197 2 79 2 395 4 799 4 198 2 299 2 86 2 699 2 587 4 806 2 490 2 208 2 590 2 406 2 709 8 306 4 713 4 596 2 91 2 714 2 808 2 715 6 717 2 97 4 603 2 317 4 722 6 215 2 817 6 218 4 415 4 727 2 505 2 103 2 
640 2 507 2 393 2 529 2 148 4 198 2 185 2 368 2 110 2 533 6 616 2 512 6 699 2 442 2 157 2 564 2 465 4 306 4 626 2 14 2 332 2 714 2 628 4 715 2 717 2 236 4 574 2 790 2 317 2 241 6 389 2 215 2 505 2 795 2 47 4 
507 2 221 2 108 2 110 2 4 6 3 2 512 6 616 2 320 2 321 2 112 2 113 2 231 2 13 2 626 2 14 2 332 2 425 4 517 24 236 28 431 4 522 2 241 6 749 3 242 6 640 2 527 2 529 2 148 4 248 2 533 6 645 2 442 2 157 2 648 4 347 4 447 2 163 2 349 3 652 2 353 2 452 2 42 2 545 2 47 2 181 2 782 8 368 2 185 2 53 2 564 2 675 2 465 4 566 2 469 2 786 2 275 2 574 2 383 2 790 2 280 6 389 2 795 2 581 4 483 2 484 2 391 2 393 2 394 3 198 2 86 2 699 2 806 2 590 2 208 2 709 6 306 4 596 2 714 2 808 2 715 2 717 2 602 2 603 2 317 2 722 4 215 2 415 3 505 2 
714 2 151 2 215 2 
714 2 151 2 215 2 
507 2 221 2 110 4 4 6 3 2 616 2 512 12 320 2 321 2 324 2 422 2 327 2 114 2 423 2 231 2 332 2 425 4 628 4 742 4 743 2 517 16 236 24 746 2 431 4 522 2 241 12 750 4 524 2 242 6 636 2 338 2 245 2 140 2 527 2 529 2 148 16 248 2 532 2 533 6 645 2 151 2 442 4 36 4 157 2 648 4 347 4 449 2 447 2 349 2 652 2 353 2 41 2 42 2 545 2 775 2 44 2 361 4 550 4 457 2 47 6 558 4 49 2 782 2 368 2 671 2 784 4 53 2 371 2 675 2 465 4 566 2 469 2 786 2 275 6 685 2 280 2 384 2 480 2 689 4 795 2 73 2 581 4 483 2 391 2 393 4 395 2 585 2 806 2 707 2 590 2 406 2 709 2 306 4 596 2 714 6 808 2 715 4 97 4 603 2 317 4 215 4 817 4 218 4 727 4 
387 2 433 2 693 2 643 2 697 2 
507 2 221 2 224 2 110 4 4 6 3 2 616 2 512 12 320 2 321 2 324 2 422 2 327 2 114 2 423 2 231 2 740 2 332 2 425 4 628 4 742 4 743 4 517 16 236 24 746 2 431 2 241 12 750 4 524 2 242 6 636 2 338 2 245 2 140 2 527 2 529 2 148 16 248 2 532 2 533 6 645 2 151 2 442 4 154 2 36 4 157 2 648 4 347 4 449 2 447 2 349 4 652 2 353 2 42 2 545 2 775 2 361 4 550 4 457 2 47 6 558 4 782 2 368 2 671 2 784 4 53 2 371 4 675 2 465 4 566 2 469 2 786 2 275 6 685 2 280 2 384 2 480 2 689 4 795 2 581 4 483 2 391 2 393 4 395 2 585 2 806 2 707 2 590 2 709 2 306 4 596 2 714 6 808 2 715 4 600 2 97 4 498 2 603 2 317 4 605 2 215 4 817 4 218 4 727 4 
507 2 221 2 110 4 4 6 3 2 616 2 512 12 320 2 321 2 324 2 422 2 327 2 114 2 423 2 231 2 740 2 332 2 425 4 628 4 742 4 743 2 517 16 236 24 746 2 431 4 522 2 241 12 750 4 524 2 242 6 636 2 338 2 525 2 245 2 140 2 527 2 529 2 148 16 248 2 532 2 533 6 645 2 151 2 442 4 36 4 157 2 648 4 347 4 449 2 447 2 349 2 652 2 353 2 42 2 545 2 775 2 170 2 361 4 550 4 457 2 47 6 558 4 50 2 782 2 368 2 671 2 784 4 53 2 371 4 675 2 465 4 566 2 469 2 786 2 275 6 685 2 280 2 384 2 480 2 689 4 795 2 581 4 483 2 391 2 393 4 395 2 585 2 205 2 806 2 707 2 590 2 406 2 709 2 306 4 596 2 714 6 808 2 715 4 97 4 603 2 317 4 215 4 817 4 218 4 727 4 820 2 
258 2 798 2 40 2 254 2 276 2 236 4 335 2 440 2 421 2 265 2 129 2 482 2 251 2 678 2 639 2 
782 2 760 2 399 2 186 6 264 2 54 2 187 4 325 2 208 2 709 2 39 2 375 2 349 3 470 3 517 2 236 2 773 2 278 2 123 2 280 2 24 2 749 3 722 2 503 1 415 3 
349 2 470 2 517 2 236 2 760 2 782 2 278 2 773 2 399 2 123 2 186 6 280 2 264 2 54 2 24 2 187 4 749 2 722 2 325 2 208 2 415 2 709 2 39 2 375 2 
349 2 470 2 517 2 236 2 760 2 782 2 278 2 773 2 399 2 123 2 186 6 280 2 264 2 54 2 24 2 187 4 749 2 722 2 325 2 208 2 415 2 709 2 39 2 375 2 
222 4 782 2 7 2 618 2 672 2 56 6 678 4 61 2 119 2 741 2 787 4 517 4 236 10 123 2 64 4 126 2 432 2 477 2 633 2 289 2 635 2 793 3 754 2 794 3 441 4 84 4 401 2 402 2 762 6 702 2 208 2 307 2 349 3 771 2 98 2 721 2 257 3 502 2 46 4 415 3 
222 4 782 2 84 4 441 4 226 2 401 2 7 2 402 2 618 2 672 2 762 6 702 2 56 4 208 2 678 4 491 2 61 2 307 2 119 2 349 2 741 2 787 4 771 2 517 4 236 10 123 2 64 4 126 2 98 2 477 2 432 2 633 2 721 2 635 2 289 2 257 2 607 2 502 2 46 4 754 2 793 2 415 2 794 2 
222 4 782 2 84 4 441 4 226 2 401 2 7 2 402 2 618 2 672 2 762 6 702 2 56 4 208 2 678 4 491 2 61 2 307 2 119 2 349 2 741 2 787 4 771 2 517 4 236 10 123 2 64 4 126 2 98 2 477 2 432 2 633 2 721 2 635 2 289 2 257 2 607 2 502 2 46 4 754 2 793 2 415 2 794 2 
222 4 782 2 84 4 441 4 226 2 401 2 7 2 402 2 618 2 672 2 762 6 702 2 56 4 208 2 678 4 491 2 61 2 307 2 119 2 349 2 741 2 787 4 771 2 517 4 236 10 123 2 64 4 126 2 98 2 477 2 432 2 633 2 721 2 635 2 289 2 257 2 607 2 502 2 46 4 754 2 793 2 415 2 794 2 
222 4 782 2 84 4 441 4 226 4 401 2 7 2 402 2 618 2 672 2 762 6 702 2 56 4 208 2 678 4 491 4 61 2 307 2 119 2 349 2 741 2 787 4 771 2 517 4 236 10 123 2 64 4 126 2 98 2 477 2 432 2 633 2 721 2 635 2 289 2 257 2 607 4 502 2 46 4 754 2 793 2 415 2 794 2 
319 2 658 2 253 2 149 2 117 2 632 2 
202 2 210 2 551 2 716 2 32 2 117 2 263 2 
333 1 517 4 236 4 318 1 277 2 386 1 510 2 321 2 285 2 815 1 723 2 101 2 622 1 504 2 612 2 
119 2 788 2 584 2 432 2 7 2 633 2 283 2 289 2 502 2 702 2 217 4 56 5 819 2 46 4 138 2 
787 2 681 2 517 1 570 2 236 1 314 2 441 2 84 2 262 2 486 2 191 2 413 1 9 2 288 2 688 4 189 2 593 2 72 7 
787 2 681 2 570 2 314 2 441 2 84 2 262 4 486 4 191 2 9 2 288 4 688 4 189 2 593 2 72 6 
787 2 681 2 517 1 570 2 236 1 314 2 441 2 84 2 262 8 486 8 191 2 413 1 9 8 288 8 688 4 189 2 593 6 72 10 
787 2 681 2 570 2 314 2 441 2 84 2 262 2 486 2 191 2 288 2 688 2 189 2 72 2 
613 8 728 4 419 6 5 2 735 2 736 4 111 2 320 20 322 2 513 6 515 2 116 13 115 6 231 10 330 6 331 4 517 80 20 2 236 92 745 4 240 6 132 2 25 6 242 90 135 12 246 2 526 2 340 22 642 2 31 6 249 4 645 20 534 2 152 12 345 3 346 6 763 12 648 38 347 44 765 6 161 4 538 4 770 8 651 2 165 4 652 10 353 4 256 6 774 4 169 2 454 12 456 6 362 2 552 6 660 6 664 2 179 2 559 2 182 4 560 6 367 4 462 12 57 6 267 42 268 2 567 6 274 2 569 2 377 2 279 6 686 12 791 6 473 6 475 6 690 12 291 6 392 2 77 6 485 6 400 6 802 4 586 6 300 1 403 4 204 12 487 4 489 2 87 6 404 4 305 2 589 2 594 4 809 6 310 6 494 6 313 6 598 12 94 2 601 1 814 6 414 2 500 12 608 2 
179 2 180 2 559 2 106 2 322 2 320 1 55 2 620 2 372 2 57 2 268 2 267 2 58 4 115 2 231 2 274 2 17 2 15 2 377 2 429 2 682 4 571 2 517 30 629 2 236 30 22 2 745 20 239 2 240 2 478 2 67 2 242 27 196 2 135 2 246 2 642 2 145 2 758 2 801 2 645 1 763 2 648 14 252 2 589 2 347 14 348 2 492 2 350 2 651 2 652 2 353 2 315 2 601 2 720 4 453 2 499 2 454 2 414 2 501 2 610 2 611 2 662 2 554 2 664 2 
728 2 613 6 419 4 731 10 8 2 320 30 513 16 515 2 738 10 116 10 115 4 231 6 625 2 331 4 517 70 236 78 745 14 240 4 25 4 242 104 26 16 135 10 526 2 340 30 642 2 31 4 249 4 645 28 35 16 152 24 346 4 535 2 763 10 159 4 648 36 536 2 347 44 765 4 161 4 537 4 538 4 769 8 770 8 651 2 351 4 165 4 652 6 353 2 653 8 356 2 774 4 256 4 546 32 454 10 456 4 552 4 660 4 664 2 179 2 666 8 182 4 559 2 560 4 367 4 261 4 370 2 462 8 57 4 267 24 269 10 567 4 272 8 569 4 377 2 279 8 686 10 791 4 472 4 475 4 291 4 392 2 77 4 82 4 485 4 400 8 802 4 200 2 586 4 487 4 204 24 700 2 87 4 404 4 589 2 594 4 807 4 809 4 310 4 494 6 598 6 94 2 213 2 499 2 814 4 500 14 414 2 608 4 
728 2 613 4 179 2 559 2 419 4 367 4 735 2 736 2 111 2 8 2 320 12 326 2 57 4 267 8 116 2 115 4 231 2 373 2 377 2 569 2 517 26 20 2 236 28 745 14 791 4 686 2 240 4 690 10 242 40 135 6 77 2 642 2 340 6 645 12 534 2 586 2 345 2 403 2 346 4 763 6 648 14 305 2 589 2 347 14 770 6 651 2 494 2 652 2 353 2 598 2 601 2 454 6 499 2 456 2 362 2 552 2 414 2 608 2 664 2 
136 2 

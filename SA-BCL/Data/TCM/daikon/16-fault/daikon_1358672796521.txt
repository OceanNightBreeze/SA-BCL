#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 27 1070 818 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.ClassCastException 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.IllegalStateException 1028 81 (23,25,32,51,76,90,99,109,119,139,143,191,278,292,318,336,435,460,461,470,526,573,576,638,641,734,769,775,832,908,911,917,933,961,985,1004,1074,1100,1113,1115,1162,1165,1171,1199,1237,1240,1243,1284,1294,1297) 1102 569 462 429 1016 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (205,553) (205,553) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 465 560 757 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 1064 201 3 58 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 130 450 179 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 130 450 179 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1057 | = null
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_50()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_169()Z
jtb.JavaParser:jj_3_17()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_107()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.NodeOptional:present()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_101()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:Node()V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V | STATEMENT | 564 | stmt -> ;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_117()Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isIntegral()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:noDups([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_28()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | CONDITION | 32424 | if (x) -> if (!x)
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_3R_110()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:logDetail()Z
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_88()Z
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_60()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 184000 | = null
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:sameLength([I[I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eq(DD)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([J)[J
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.Debug:logOn()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3_16()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3R_76()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:ne(II)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3_35()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_47()Z
daikon.PptSlice2:arity()I
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_70()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_3_4()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3_12()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_81()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.RootNode:RootNode()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_109()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptName:isEnterPoint()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lte(II)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:passes()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_137()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:eltwiseLTE([I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:gte(II)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3R_163()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_125()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_49()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaCharStream:readChar()C
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexGT([I[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_53()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_86()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getEndLine()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:intersection([I[I)[I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_51()Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:slice([III)[I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoAux:hashCode()I
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParser:jj_3R_69()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3R_114()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3_22()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakHasherMap:size()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 9913 | if (x) -> if (!x)
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_106()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_104()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_2_36(I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:negate(I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([F[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:gt(II)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseLT([I)Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eltwiseGTE([I)Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3_20()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.ValueTuple:size()I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_3R_87()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_67()Z
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3_3()Z
daikon.Quant:eq(JJ)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice0:arity()I
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.ProglangType:dimensions()I
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3_19()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3_30()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:isReverse([I[I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_121()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:num_samples()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONDITION | 127882 | if (x) -> if (!x)
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_54()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(FF)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern:intern([D)[D
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3_27()Z
daikon.Quant:eltwiseGT([I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:jj_3R_100()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1105 2 1022 2 380 4 216 2 493 2 883 2 793 2 48 2 26 2 
1305 2 1256 6 237 2 434 2 585 2 586 2 364 6 612 6 1313 2 878 2 469 2 
841 6 863 2 78 2 506 6 505 2 444 6 1105 2 808 2 181 4 493 2 929 6 1005 2 1051 4 
1163 8 819 4 239 10 780 2 872 2 564 8 944 4 1000 12 512 10 10 2 751 10 523 30 572 16 955 4 528 6 59 2 176 2 263 6 1018 16 846 10 397 10 1191 26 1153 16 266 2 219 8 1105 6 405 2 493 6 596 8 453 4 
350 4 608 6 
140 2 
1276 2 239 2 564 2 7 2 944 2 1000 2 512 2 1133 2 751 2 523 6 572 2 528 2 844 2 846 2 1018 2 1153 2 1191 4 397 4 893 2 771 2 1023 2 680 2 151 2 
37 6 624 2 1239 4 239 4 1189 4 846 4 1018 8 1153 8 1191 12 1000 5 1210 2 891 6 512 4 751 4 523 14 572 8 955 2 
1235 2 818 2 75 6 687 2 689 4 1121 2 742 2 1288 2 1127 2 875 2 1290 30 349 2 1128 2 510 2 168 2 127 4 87 2 13 10 131 2 956 2 63 2 720 2 674 2 1309 4 888 2 763 6 544 2 27 2 146 2 147 2 1232 2 1070 2 861 2 
72 2 894 2 1026 2 
377 2 75 2 990 2 991 2 316 2 824 2 749 2 248 2 656 2 1006 2 912 4 758 2 259 2 1187 2 673 2 674 2 921 2 331 2 676 2 1105 4 1022 2 493 4 774 2 502 2 687 4 1280 2 1124 2 782 2 347 2 691 2 123 2 421 2 290 2 126 2 134 2 135 2 531 2 59 2 802 4 298 4 537 2 142 2 1065 2 312 2 
112 6 37 6 234 4 1239 4 239 16 1039 6 564 18 420 4 944 2 1000 22 512 16 467 6 657 4 660 4 751 16 1252 4 523 54 171 2 572 32 172 8 620 2 528 4 760 2 583 2 263 4 1189 4 846 16 1018 32 1191 48 1153 32 890 2 397 6 266 2 219 6 220 6 1105 4 891 6 493 4 1031 2 
75 2 689 2 888 2 
212 2 1034 22 1036 2 296 2 433 2 901 2 805 2 1207 2 488 2 290 2 204 2 1111 10 1321 2 1137 2 
1164 2 820 2 823 2 650 2 464 2 992 2 995 2 655 8 162 1 466 2 662 2 167 6 1003 1 1176 2 831 2 665 32 17 3 843 2 324 2 842 1 175 2 477 3 671 3 20 2 327 3 481 1 22 2 677 8 489 2 854 1 681 3 1025 2 493 32 1196 3 1029 2 496 2 498 2 869 2 40 1 44 2 690 2 43 2 48 2 1045 6 202 2 354 2 1048 2 1049 2 698 2 1213 2 522 3 206 2 210 2 886 1 711 2 533 3 62 2 541 2 1225 2 1058 2 1228 2 723 2 221 2 1063 2 548 2 226 3 228 2 70 2 557 3 379 2 378 2 1236 2 1075 16 740 8 240 2 561 6 562 4 900 2 1082 2 251 2 1247 2 906 2 1089 1 89 16 568 16 1250 2 94 4 93 2 95 1 574 2 97 2 913 1 1096 2 761 2 262 1 103 2 1104 2 1105 34 268 2 272 2 400 24 1107 2 928 2 927 4 597 2 276 2 600 6 411 1 414 5 1277 2 1117 4 1279 2 935 1 779 2 1125 2 122 2 613 2 125 2 786 4 948 2 427 2 293 4 129 2 953 2 791 4 954 3 295 2 1145 2 1306 16 438 2 141 2 968 2 967 4 1150 32 1154 1 631 3 634 2 635 2 1157 12 145 2 970 1 449 1 972 2 973 2 811 2 310 2 152 24 
177 2 
1105 2 408 2 
1105 4 250 2 715 2 
646 2 2 2 648 86 649 18 651 12 8 94 6 2 654 2 658 2 9 2 663 2 14 2 15 14 19 4 670 104 675 4 23 4 24 2 25 6 29 2 31 62 679 2 32 2 34 2 35 2 686 4 38 12 688 4 42 2 45 2 47 2 693 2 694 2 695 2 49 4 50 52 697 2 51 2 702 2 708 2 709 2 712 18 716 52 714 2 721 50 722 94 68 2 729 2 731 6 733 2 734 2 736 4 738 2 74 2 76 2 739 2 741 4 744 94 743 2 81 98 748 4 85 18 83 62 88 2 90 6 754 22 755 2 99 2 101 4 767 2 768 2 105 2 769 2 106 6 107 94 772 4 109 86 773 18 111 86 775 2 776 28 115 2 778 2 781 2 119 2 121 6 120 56 790 6 132 2 133 2 795 2 794 44 797 2 798 2 801 2 136 8 138 4 803 2 139 50 806 2 143 2 810 4 813 94 149 2 148 4 815 4 156 2 821 2 160 2 826 36 165 2 166 6 829 2 832 2 834 2 835 2 173 2 836 14 840 2 845 2 847 4 180 2 851 2 183 2 855 2 187 246 856 8 858 50 859 4 191 2 192 4 193 2 862 2 865 42 870 48 197 2 876 2 200 2 877 8 203 2 208 2 209 6 884 2 211 2 215 44 217 8 889 4 218 2 896 12 225 16 229 2 230 2 231 2 233 2 897 2 899 2 243 4 244 2 246 2 245 2 252 2 253 2 908 2 911 2 910 2 914 2 915 44 916 2 258 4 260 4 918 2 917 2 919 2 923 2 267 4 270 8 925 2 926 2 273 2 930 2 278 2 932 8 933 2 280 6 937 4 282 4 936 2 281 2 285 2 287 22 942 2 945 2 289 94 288 2 949 4 951 2 291 62 292 4 959 2 961 2 960 2 297 18 965 90 299 2 305 2 308 2 978 2 979 2 981 2 982 4 985 56 989 30 317 2 994 4 993 2 318 16 319 54 1004 2 323 4 1011 2 1012 2 1014 2 1016 2 326 2 1020 4 332 48 333 4 334 2 335 2 1028 2 1033 6 336 2 1037 2 340 2 343 4 1041 2 1043 2 1044 4 351 30 353 16 356 2 1053 56 359 2 358 2 1054 2 363 2 367 2 369 2 368 2 1062 8 370 4 1066 2 371 2 1069 2 373 2 1071 2 376 4 1073 4 1074 6 1077 4 1080 2 1081 2 1083 4 1085 2 387 246 1091 8 388 94 1093 2 390 2 393 2 1098 2 395 2 1100 2 1103 2 1102 6 399 2 402 46 401 16 403 2 407 2 1112 2 1113 4 409 2 1115 2 412 2 1116 2 417 2 418 2 1123 2 419 10 1131 2 1130 94 426 2 1134 4 1136 4 429 2 1138 4 1141 4 1140 56 1144 6 435 2 437 4 1148 2 439 2 1152 74 443 2 1156 2 446 16 448 4 447 2 1160 4 451 2 452 2 1161 42 456 42 455 2 1162 4 457 2 460 2 459 4 1165 96 461 2 462 2 1166 2 1171 2 1172 2 1174 12 468 2 471 2 470 2 472 2 474 358 1180 2 1181 2 1182 2 476 2 1183 74 479 4 1184 4 480 2 482 2 484 12 492 2 1193 2 1195 94 497 2 499 2 1199 2 1200 2 1201 2 1204 2 1205 20 511 4 513 2 1211 18 520 2 1215 4 526 12 1216 2 529 2 1217 30 1219 2 1221 2 1223 2 532 4 1224 2 534 2 543 2 545 4 547 2 1229 4 552 18 1234 2 1238 2 1237 2 1240 2 1242 4 563 2 1243 6 1245 2 566 2 567 2 569 2 570 94 573 2 576 2 575 4 577 2 579 4 582 2 1257 2 1258 4 1262 2 1263 2 591 2 1264 2 1267 4 1269 2 599 12 1270 2 1271 2 1273 2 605 94 1282 4 1285 18 1286 2 1284 2 610 22 611 246 1294 2 1295 2 1297 2 1298 14 1299 4 1302 2 1301 18 1304 4 623 2 626 2 625 12 1307 2 1308 2 628 2 1311 4 633 2 1320 2 638 4 1322 2 640 2 641 6 643 2 1323 34 644 2 
213 2 764 2 398 2 486 1 
494 2 398 2 
737 2 1034 6 530 2 1 2 984 2 238 4 41 2 80 2 887 4 1151 2 1084 2 124 2 1248 2 306 2 830 2 976 2 1094 2 555 2 
213 2 939 2 
75 2 416 2 1057 2 247 2 
75 2 416 2 284 2 881 2 1057 2 247 2 
73 2 75 2 416 2 1190 2 398 2 453 2 
656 2 98 2 
75 2 416 2 756 2 453 2 
672 2 441 2 
184 2 1272 2 
898 2 539 2 
809 2 988 2 
184 2 988 2 745 2 
184 2 988 2 1067 2 
184 2 988 2 621 2 
184 2 988 2 1076 2 
75 2 416 2 892 2 205 6 553 2 735 2 
309 2 485 2 
75 2 727 2 416 2 284 2 1190 2 398 2 453 2 
154 2 1190 2 398 2 
1194 2 1190 2 398 2 
213 2 309 2 1208 2 
1190 2 398 2 
309 2 311 2 
436 2 398 2 
213 2 86 2 309 2 
213 2 539 2 1227 2 
213 2 988 2 604 2 
213 2 441 2 391 2 
213 2 184 2 313 2 
309 2 1060 2 
1173 2 398 2 
1015 2 539 2 
516 2 988 2 
1274 2 441 2 
184 2 1027 2 
309 2 1059 2 
1013 2 184 2 
441 2 1244 2 
988 2 804 2 
1241 2 539 2 
213 2 86 2 309 2 1169 2 
213 2 86 2 309 2 1169 2 602 2 
998 2 213 2 309 2 
213 2 950 2 309 2 
232 2 
145 2 
1164 2 650 2 464 2 825 2 652 2 655 2 827 2 466 2 167 2 662 2 665 6 843 2 20 2 849 2 493 26 498 4 1038 2 869 2 342 4 43 2 1042 2 48 2 1045 4 352 2 515 2 1049 2 1048 2 206 2 717 2 62 2 541 2 1225 2 1058 2 723 2 70 2 379 2 561 2 562 4 1082 6 902 4 251 2 89 6 1250 2 95 2 574 2 97 2 1096 2 761 2 762 2 103 2 1105 26 268 2 1107 2 927 2 1114 2 600 6 1277 2 1117 4 122 2 786 4 948 2 427 2 293 2 791 2 430 2 294 2 967 4 1150 4 969 2 634 2 636 2 1157 8 449 2 642 2 
1164 2 650 2 464 2 825 2 652 2 655 2 827 2 466 2 167 2 662 2 665 6 843 2 20 2 849 2 493 26 498 4 869 2 342 4 43 2 1042 2 48 2 1045 5 352 2 515 2 1049 2 1048 2 206 2 717 2 62 2 541 2 1225 2 1058 2 723 2 221 1 70 2 379 2 1236 1 561 2 562 4 1082 6 382 2 902 4 251 2 89 6 1250 2 95 2 574 2 97 2 1096 2 761 2 762 2 103 2 1105 26 268 2 1107 2 927 2 600 6 1277 2 1117 4 122 2 786 4 948 2 427 2 293 2 953 2 791 2 294 2 1146 2 967 4 1150 4 969 2 634 2 636 2 1157 8 1159 2 449 2 642 2 
1212 2 
592 2 1261 2 
155 2 157 4 158 2 1164 2 381 4 463 2 562 2 464 2 82 4 1170 2 1086 2 466 2 904 2 1250 2 170 2 1092 2 1096 2 1256 6 102 2 586 4 265 10 104 8 269 4 1105 12 274 2 1110 2 594 2 493 6 410 2 600 4 603 2 685 2 867 4 346 2 873 2 507 2 612 6 785 2 422 2 878 2 518 2 427 2 957 2 707 2 1305 4 1056 2 62 2 364 6 967 2 64 2 365 2 442 2 1310 4 807 2 1313 2 725 2 895 2 1317 2 549 8 645 2 
155 2 157 4 158 2 1164 2 381 4 562 2 463 2 464 2 82 4 1170 2 1086 2 466 2 904 2 1250 2 469 2 170 2 1092 2 1096 2 759 2 1256 8 102 2 586 4 265 10 104 8 269 4 1105 12 274 2 1110 2 594 2 493 6 600 4 603 2 685 2 867 4 346 2 873 2 507 2 612 8 785 2 422 2 878 2 518 2 427 2 957 2 799 4 707 2 1305 4 62 2 967 2 364 6 64 2 365 2 442 2 1310 4 807 2 1313 2 725 2 728 2 895 2 1317 2 549 8 645 2 
685 2 1305 2 867 2 102 2 381 4 586 2 364 2 507 2 82 4 807 2 612 2 422 2 725 2 895 2 594 2 518 2 603 2 645 2 
155 2 157 4 158 2 1164 2 381 4 463 2 562 2 464 2 82 4 1170 2 1086 2 466 2 904 2 1250 2 469 2 170 2 1092 2 1096 2 1256 6 102 2 586 4 265 6 104 4 269 4 1105 12 274 2 1110 2 594 2 493 6 410 2 600 4 603 2 685 2 867 4 346 2 873 2 507 2 612 6 785 2 422 2 878 2 518 2 427 2 957 2 707 2 1305 4 1056 2 62 2 364 4 967 2 64 2 365 2 442 2 1310 4 807 2 725 2 895 2 1317 2 549 4 645 2 
155 2 237 2 157 4 158 2 1164 2 381 4 463 2 562 2 464 2 82 4 1170 2 1086 2 466 2 904 2 1250 2 170 2 1092 2 1096 2 1256 6 102 2 586 4 265 6 104 4 269 4 1105 12 274 2 1110 2 594 2 493 6 410 2 600 4 603 2 685 2 867 4 346 2 873 2 507 2 612 4 785 2 422 2 878 2 518 2 427 2 957 2 707 2 1305 4 1056 2 62 2 364 6 967 2 64 2 365 2 442 2 1310 4 807 2 725 2 895 2 1317 2 549 4 645 2 
155 2 157 4 158 2 1164 2 381 4 463 2 562 2 464 2 82 4 1170 2 1086 2 466 2 904 2 1250 2 170 2 1092 2 1096 2 1256 6 102 2 586 4 265 6 104 4 269 4 1105 12 274 2 1110 2 594 2 493 6 410 2 600 4 603 2 685 2 867 4 346 2 873 2 507 2 612 6 785 2 422 2 878 2 518 2 427 2 957 2 707 2 1305 4 1056 2 62 2 364 6 967 2 64 2 365 2 442 2 1310 4 807 2 1313 2 725 2 895 2 1317 2 549 8 645 2 
155 2 237 2 157 4 158 2 1164 2 381 4 463 2 562 2 464 2 82 4 1170 2 1086 2 466 2 904 2 1250 2 170 2 1092 2 1096 2 1256 8 102 2 586 4 265 10 104 8 269 4 1105 12 274 2 1110 2 594 2 493 6 410 2 600 4 603 2 685 2 867 4 346 2 873 2 507 2 612 6 785 2 422 2 878 2 518 2 427 2 957 2 707 2 1305 4 1056 2 62 2 967 2 364 8 64 2 365 2 442 2 1310 4 807 2 1313 2 725 2 895 2 1317 2 549 8 645 2 
155 2 157 4 158 2 1164 2 381 4 463 2 562 2 464 2 82 4 1170 2 1086 2 466 2 904 2 1250 2 170 2 1092 2 1096 2 1256 6 102 2 586 4 265 10 104 8 269 4 1105 12 274 2 1110 2 594 2 493 6 410 2 600 4 603 2 685 2 867 4 346 2 873 2 507 2 612 6 785 2 422 2 878 2 518 2 427 2 957 2 707 2 1305 4 1056 2 62 2 364 6 967 2 64 2 365 2 442 2 1310 4 807 2 1313 2 725 2 895 2 1317 2 549 8 645 2 
650 2 653 6 655 2 665 8 11 6 1008 2 322 2 325 4 1017 7 1021 6 678 1 337 2 685 2 341 2 346 2 43 2 46 6 48 2 1045 6 352 4 1047 2 55 2 707 2 1055 2 717 2 715 6 62 2 364 8 65 2 64 2 365 2 66 2 725 2 69 2 1068 2 375 1 379 2 381 4 1082 6 82 4 384 6 1086 2 89 6 1092 2 97 2 1096 2 102 2 1105 46 1107 2 1108 2 1110 2 108 2 408 6 410 2 413 6 1117 4 122 2 785 2 422 2 786 4 427 2 791 2 789 10 792 1 800 2 1147 2 1150 2 442 2 807 2 445 2 1157 4 155 2 157 6 458 2 1164 2 158 2 463 2 822 2 464 2 1170 4 466 2 167 2 170 4 174 2 843 2 1186 2 1185 6 177 6 491 1 493 24 186 2 857 6 867 4 869 2 195 2 868 6 196 2 873 2 507 2 515 2 878 4 518 2 525 2 206 2 541 2 1225 2 540 6 1226 2 221 2 895 2 1231 6 549 2 550 2 1236 2 237 4 561 2 562 4 902 4 904 2 251 2 1250 2 571 4 574 2 1256 12 586 4 265 2 264 1 269 8 268 12 594 2 927 2 274 2 275 2 600 6 603 2 934 1 1278 2 606 2 607 2 940 1 609 6 612 4 948 2 293 2 957 2 958 2 1305 4 962 1 967 4 1310 4 302 1 634 2 303 8 636 2 637 6 1317 2 971 2 977 7 645 2 
155 2 458 2 157 6 158 2 1164 2 822 2 463 2 650 2 464 2 1170 4 653 6 655 2 466 2 167 2 665 8 11 6 170 4 321 2 1008 2 322 2 174 2 843 2 325 4 1185 6 1186 2 177 6 1021 6 186 2 493 26 857 6 498 2 337 2 685 2 867 4 868 6 195 2 869 2 196 2 341 2 346 2 43 2 46 6 873 2 507 2 48 2 1045 6 352 4 1047 2 515 2 878 4 518 2 525 2 55 2 206 2 707 2 1055 2 715 6 717 2 62 2 364 8 540 6 1225 2 365 2 64 2 65 2 541 2 66 2 1226 2 725 2 69 2 221 2 1231 6 895 2 550 2 549 6 1068 2 379 2 1236 2 79 2 561 2 381 4 562 4 82 4 1082 6 902 4 384 6 1086 2 251 2 904 2 89 6 1250 2 571 4 1092 2 97 2 574 2 1096 2 1256 12 102 2 586 4 265 2 268 12 1105 48 269 8 1107 2 1108 2 274 2 927 4 594 2 1110 2 275 2 108 2 408 6 410 2 600 6 603 2 413 6 1117 4 1278 2 606 2 607 2 609 6 612 8 122 2 785 2 422 2 786 4 948 2 427 2 293 4 789 10 791 4 957 2 958 2 800 2 1305 4 1147 2 1150 2 967 4 442 2 1310 4 445 2 807 2 1313 4 303 8 634 2 636 2 1157 8 637 6 971 2 1317 2 645 2 
155 2 458 2 157 6 158 2 1164 2 822 2 463 2 650 2 464 2 1170 4 653 6 655 2 466 2 167 2 665 8 11 6 170 4 321 2 1008 2 322 2 174 2 843 2 325 4 1185 6 1186 2 177 6 1021 6 186 2 493 26 857 6 498 2 337 2 685 2 867 4 868 6 195 2 869 2 196 2 341 2 346 2 43 2 46 6 873 2 507 2 48 2 1045 6 352 4 1047 2 515 2 878 4 518 2 525 2 55 2 206 2 707 2 1055 2 715 6 717 2 62 2 364 8 540 6 1225 2 365 2 64 2 65 2 541 2 66 2 1226 2 725 2 69 2 221 2 1231 6 895 2 550 2 549 6 1068 2 379 2 1236 2 79 2 561 2 381 4 562 4 1082 6 82 4 902 4 384 6 1086 2 904 2 251 2 89 6 1250 2 571 4 1092 2 97 2 574 2 1096 2 1256 12 102 2 586 4 265 6 104 4 268 12 1105 48 269 8 1107 2 1108 2 274 2 927 4 594 2 1110 2 275 2 108 2 408 6 410 2 600 6 603 2 413 6 1117 4 1278 2 606 2 607 2 609 6 612 8 122 2 785 2 422 2 948 2 786 4 427 2 293 4 789 10 791 4 957 2 958 2 800 2 1305 4 1147 2 1150 2 967 4 442 2 1310 4 445 2 807 2 1313 4 303 8 634 2 636 2 1157 8 637 6 971 2 1317 2 645 2 
650 2 653 6 655 4 665 12 11 12 321 2 1007 2 1008 2 322 2 325 4 328 6 1021 6 1030 6 337 2 685 2 346 2 43 2 46 6 48 2 1045 6 352 4 1047 2 55 2 707 2 1055 2 717 2 715 12 62 2 364 10 65 2 64 2 365 2 66 2 725 2 69 2 1068 2 379 2 79 2 381 4 82 4 1082 8 384 6 1086 2 89 8 1092 2 97 2 1096 2 102 2 765 2 104 4 1105 52 1107 2 1108 2 1110 2 108 2 408 12 410 2 413 6 1117 4 122 2 1129 2 785 2 422 2 786 4 427 2 791 4 789 8 800 2 1147 2 1150 4 442 2 807 2 445 2 1157 10 150 6 155 2 458 2 157 6 158 2 1164 2 463 2 822 2 464 2 1170 4 466 2 167 4 469 2 170 4 174 2 843 2 1186 2 1185 12 177 12 1192 2 493 24 186 2 857 6 498 2 867 4 869 2 195 2 868 6 196 2 873 2 507 2 509 2 515 4 878 4 518 2 524 2 525 2 206 2 535 6 541 2 1225 2 540 6 1226 2 221 2 895 2 1231 12 549 6 550 2 1236 2 237 2 561 4 562 4 902 6 251 2 904 2 1250 2 255 6 571 4 574 2 1256 16 586 4 265 6 1260 2 269 8 268 10 271 6 594 2 927 4 274 2 595 6 275 2 600 6 603 2 1278 2 606 2 607 2 609 6 612 10 1291 6 948 2 293 4 1296 2 957 2 958 2 1305 4 967 4 1310 4 1313 4 634 2 303 8 636 2 637 6 1317 2 971 2 1319 6 645 2 
685 2 155 2 157 2 381 2 463 2 346 2 873 2 82 2 612 6 785 2 1086 2 904 2 878 2 518 2 1092 2 1305 4 1256 4 586 4 364 6 365 2 64 2 1310 2 265 4 104 4 1313 2 1105 4 269 2 725 2 895 2 549 6 594 2 1110 2 410 2 603 2 645 2 
155 2 157 2 1164 2 463 2 823 2 650 2 464 2 466 2 167 3 665 8 837 3 843 2 493 24 685 2 869 2 341 2 346 2 43 2 873 2 48 2 1045 6 352 2 878 2 518 2 206 2 717 2 62 2 364 6 365 2 541 2 1225 2 64 2 725 2 221 2 895 2 549 6 379 2 1236 2 381 2 561 3 562 4 82 2 1082 6 902 4 1086 2 251 2 904 2 750 2 89 6 1250 2 1092 2 574 2 97 2 1096 2 1256 4 584 2 586 4 265 2 269 2 1105 28 268 4 1110 2 594 2 410 2 600 6 603 2 1117 4 1120 2 779 2 941 2 612 6 122 2 785 2 125 2 786 4 948 2 427 2 789 2 1305 4 967 4 1150 3 442 2 1310 2 1313 2 634 2 636 2 145 2 975 2 645 2 
279 2 1110 2 463 2 
279 2 1110 2 463 2 
155 2 157 4 1164 2 987 2 463 6 650 2 464 2 1170 2 466 2 665 2 469 4 170 4 843 2 325 2 478 4 178 2 487 2 852 4 493 16 338 2 684 2 339 2 867 4 869 2 46 2 1042 4 48 2 1045 6 352 6 878 4 206 2 705 2 360 2 707 2 1220 2 1055 2 362 2 717 2 62 2 364 12 541 2 1225 2 365 2 726 2 221 2 895 2 549 6 223 2 71 2 379 2 1236 2 237 4 381 2 562 4 1082 2 82 2 251 2 89 2 1250 2 92 2 571 2 96 2 574 2 97 2 1096 2 1256 16 102 2 586 4 265 6 104 4 1105 24 268 4 269 4 1107 4 274 2 927 4 1110 4 600 6 603 2 279 2 1117 4 612 12 946 2 122 2 422 2 786 4 948 2 427 2 293 4 789 2 791 4 958 2 800 2 1305 4 967 4 1150 2 1310 2 1313 4 634 2 1157 4 636 2 1317 2 812 2 645 4 
431 2 1220 2 325 2 1078 2 46 2 807 2 268 2 1105 4 1047 2 514 2 592 2 812 2 493 2 525 2 789 2 71 2 1096 2 
155 2 157 4 158 2 1164 2 987 2 463 6 650 2 464 2 1170 4 466 2 665 2 469 4 170 4 843 2 478 4 852 4 493 16 338 2 684 2 339 4 1035 2 867 4 869 2 46 2 1042 4 198 2 48 2 1045 6 352 6 878 4 206 2 705 2 360 2 707 2 1220 2 57 2 1055 2 362 2 717 2 62 2 364 12 541 2 1225 2 365 2 221 2 895 2 549 6 223 2 71 2 379 2 1236 2 237 4 381 2 562 4 1082 2 82 2 251 2 89 2 1250 2 752 2 571 2 96 2 574 2 97 2 1096 2 1256 16 102 2 586 4 265 6 104 4 269 4 1105 24 268 2 1107 4 274 2 927 4 1110 4 600 6 603 2 279 2 1117 4 612 12 946 2 122 2 422 2 786 4 948 2 427 2 293 4 791 4 958 2 800 2 1305 4 967 4 1150 4 300 2 1310 2 1313 4 634 2 1157 4 636 2 1317 2 812 2 645 4 
155 2 157 4 158 2 1164 2 987 2 463 6 650 2 464 2 1170 4 466 2 665 2 469 4 170 4 843 2 325 2 478 4 852 4 493 16 495 2 338 2 684 2 339 2 867 4 869 2 46 2 1042 4 48 2 1209 2 1045 6 352 6 878 4 206 2 705 2 706 2 360 2 707 2 1220 2 1055 2 362 2 717 2 62 2 364 12 541 2 1225 2 365 2 221 2 895 2 549 6 222 2 223 2 71 2 379 2 1236 2 237 4 381 2 562 4 1082 2 82 2 251 2 89 2 1250 2 571 2 96 2 574 2 97 2 1096 2 1256 16 102 2 586 4 265 6 104 4 1105 24 268 4 269 4 770 2 1107 4 274 2 927 4 1110 4 600 6 603 2 279 2 1117 4 612 12 946 2 122 2 422 2 786 4 948 2 427 2 293 4 789 2 791 4 958 2 800 2 1305 4 967 4 1150 2 1310 2 1313 4 634 2 1157 4 636 2 1317 2 812 2 645 4 
817 2 314 2 1164 2 822 2 464 2 650 2 465 2 827 4 997 4 655 6 1000 4 466 2 320 1 167 6 665 16 473 2 1179 2 668 4 667 2 1009 2 837 2 18 2 843 2 1186 2 1189 4 846 2 1018 4 1191 6 1019 2 853 2 493 22 189 4 194 2 36 2 864 4 869 2 195 2 1203 2 871 2 43 2 508 2 874 2 48 2 1045 4 512 2 352 2 696 2 515 6 700 2 519 2 701 2 355 2 1050 2 523 7 703 2 1052 2 55 2 713 2 717 2 62 2 538 2 541 2 1225 2 546 2 1226 2 891 6 221 2 550 2 732 2 1232 2 224 2 227 4 559 2 379 2 1236 2 77 2 236 2 239 2 560 2 561 6 562 4 1082 10 564 4 902 8 903 12 565 2 905 4 1087 2 750 2 751 2 89 10 1251 2 1250 2 909 2 91 14 572 4 1254 2 97 2 1095 6 578 4 1096 2 757 2 1097 4 580 2 581 2 583 4 1099 4 584 2 920 6 766 2 1105 28 268 2 1106 2 1107 2 1109 2 108 2 1268 12 598 4 600 6 931 2 114 2 1117 2 1120 2 1122 2 783 2 1126 2 947 6 424 4 423 2 786 2 948 2 788 2 427 2 1143 2 964 6 137 2 967 4 1150 6 1153 4 634 2 1157 16 1316 2 146 2 147 2 639 2 975 2 814 2 454 2 
647 3 561 3 241 2 344 2 1040 2 43 2 1082 2 902 2 614 2 515 6 659 2 1002 2 167 3 89 2 699 2 665 2 839 2 1150 3 630 4 67 2 1105 2 493 2 974 2 860 2 
647 2 561 2 241 2 344 2 1040 2 43 2 1082 2 902 2 614 2 515 6 659 2 1002 2 167 2 89 2 699 2 665 2 839 2 1150 2 630 4 67 2 1105 2 493 2 974 2 860 2 
647 2 561 2 241 2 344 2 1040 2 43 2 1082 2 902 2 614 2 515 6 659 2 1002 2 167 2 89 2 699 2 665 2 839 2 1150 2 630 4 67 2 1105 2 493 2 974 2 860 2 
558 2 1075 2 239 2 241 2 167 3 751 2 169 4 665 2 572 2 16 2 257 3 1255 2 263 2 1018 2 846 2 1191 4 1101 4 1105 10 850 4 182 2 28 3 493 4 500 2 116 2 43 2 286 3 1289 4 512 2 616 2 1214 2 523 5 882 2 54 6 619 2 1306 2 718 2 1150 3 1153 2 219 4 1315 4 
558 2 1075 2 239 2 241 2 564 2 1000 2 167 2 751 2 169 4 665 2 572 2 16 2 257 2 1255 2 263 2 1018 2 846 2 1191 4 1101 4 266 2 1105 10 850 4 182 2 28 2 493 4 500 2 116 2 43 2 286 2 1289 4 512 2 616 2 1214 2 523 4 882 2 54 6 619 2 1306 2 718 2 1150 2 1153 2 219 4 1315 4 
558 2 1075 2 239 2 241 2 564 2 1000 2 167 2 751 2 169 4 665 2 572 2 16 2 257 2 1255 2 263 2 1018 2 846 2 1191 4 1101 4 266 2 1105 10 850 4 182 2 28 2 493 4 500 2 116 2 43 2 286 2 1289 4 512 2 616 2 1214 2 523 4 882 2 54 6 619 2 1306 2 718 2 1150 2 1153 2 219 4 1315 4 
558 2 1075 2 239 2 241 2 564 2 1000 2 167 2 751 2 169 4 665 2 572 2 16 2 257 2 1255 2 263 2 1018 2 846 2 1191 4 1101 4 266 2 1105 10 850 4 182 2 28 2 493 4 500 2 116 2 43 2 286 2 1289 4 512 2 616 2 1214 2 523 4 882 2 54 6 619 2 1306 2 718 2 1150 2 1153 2 219 4 1315 4 
558 2 1075 2 239 2 241 2 564 4 1000 4 167 2 751 2 169 4 665 2 572 2 16 2 257 2 1255 2 263 2 1018 2 846 2 1191 4 1101 4 266 4 1105 10 850 4 182 2 28 2 493 4 500 2 116 2 43 2 286 2 1289 4 512 2 616 2 1214 2 523 4 882 2 54 6 619 2 1306 2 718 2 1150 2 1153 2 219 4 1315 4 
885 2 475 2 361 2 1149 2 1253 2 827 2 527 2 
283 2 909 2 719 2 1149 2 207 2 692 2 
1300 2 1218 2 58 2 3 2 1188 2 345 1 720 1 922 1 1127 1 1105 4 201 2 490 2 1064 2 1250 2 493 4 1178 1 796 2 
239 5 871 2 1039 4 564 6 1000 6 657 2 512 5 751 5 523 12 172 2 572 6 357 2 667 2 669 2 394 2 583 1 1099 2 263 2 1189 2 1018 6 846 5 1191 11 1153 6 219 4 266 4 1105 6 891 3 593 2 1065 2 493 6 1031 1 312 2 
963 2 866 2 966 2 1281 2 396 2 330 4 161 7 1101 2 199 1 589 2 1105 1 590 2 850 2 169 2 493 1 753 2 256 2 1010 2 
866 2 963 4 966 2 1281 2 396 2 330 4 161 6 1101 2 589 4 590 2 850 2 169 2 753 2 256 2 1010 4 
866 2 963 8 966 2 1281 2 396 2 330 4 161 10 1101 2 199 1 589 8 1105 1 590 2 850 2 169 2 493 1 753 6 256 8 1010 8 
866 2 963 2 966 2 1281 2 396 2 330 2 161 2 1101 2 589 2 590 2 850 2 169 2 1010 2 
0 2 4 2 5 2 650 6 1168 2 996 2 163 2 828 2 164 2 1175 2 664 1 833 2 838 2 843 4 21 4 329 2 483 2 179 2 1024 4 493 34 682 10 1197 4 683 4 1032 1 1198 2 504 2 1202 4 348 2 1206 2 1045 32 521 1 880 4 56 2 1222 2 710 2 366 2 724 2 221 4 730 14 372 2 551 2 554 2 1233 2 556 2 1072 2 1236 4 235 2 746 2 747 4 254 5 1249 2 100 2 587 2 1259 2 924 2 1105 38 110 2 277 2 601 2 1117 18 938 1 1119 4 117 2 118 4 784 2 786 16 1292 2 1293 2 787 2 128 1 130 2 428 4 622 2 1303 2 1142 2 627 2 440 4 1155 2 1312 2 1314 2 634 6 144 2 1318 4 307 2 450 2 
153 2 1236 1 235 2 986 2 5 2 242 6 159 4 1167 2 650 2 999 2 385 2 249 2 1246 2 386 2 1001 2 254 2 1088 2 1249 2 907 2 12 2 666 2 389 2 392 2 838 2 843 2 21 4 1259 2 587 2 588 2 179 2 848 2 1105 46 30 2 1266 2 404 2 1024 4 493 44 33 2 110 2 277 2 601 2 1032 2 190 2 1275 2 777 2 113 2 415 2 501 2 1117 20 1202 38 1119 2 1283 4 39 2 1287 2 118 6 1206 2 1045 43 1132 2 1046 2 425 4 786 20 1292 2 615 2 517 2 879 2 1293 2 617 2 880 2 952 4 618 2 130 2 428 4 1142 2 214 2 1303 4 60 2 627 2 542 2 301 2 632 2 1312 2 1061 2 634 2 1230 2 221 1 1158 2 730 6 450 2 372 2 374 2 980 2 816 2 
0 2 983 2 4 2 650 4 1168 2 996 2 163 2 828 2 833 2 1177 2 838 2 843 2 21 4 329 2 179 2 1024 4 493 40 682 6 33 6 1197 2 503 8 1202 14 348 4 1206 2 1045 40 1046 2 517 2 880 6 52 2 521 2 704 2 56 2 1222 2 61 2 536 2 366 2 724 2 1061 6 221 6 730 10 551 2 554 2 1233 2 1236 6 235 2 1072 2 746 2 383 2 747 4 84 8 254 6 1090 2 261 2 587 2 588 2 1105 44 406 2 277 2 1117 20 1118 2 1119 4 943 8 786 18 1292 2 787 2 428 4 130 2 1139 2 622 2 1303 2 1142 4 432 2 627 2 629 2 440 6 1155 2 1312 2 1314 2 634 4 304 2 1318 6 307 2 450 2 816 6 
235 2 1236 10 986 2 315 2 5 4 1079 2 650 2 661 2 254 2 1249 4 664 2 838 2 843 2 100 2 21 6 587 2 1259 4 483 2 924 2 179 2 1105 28 1265 2 1024 6 185 4 493 26 682 10 188 2 683 2 1032 2 277 2 601 4 1198 2 1275 2 1117 14 504 10 1202 14 1119 2 117 2 118 6 1206 2 1045 38 786 14 1292 2 517 2 879 2 1293 4 880 2 521 6 1135 2 128 2 130 2 428 6 1142 2 1303 2 710 4 627 2 1312 2 634 2 221 10 730 8 450 2 372 4 
53 2 

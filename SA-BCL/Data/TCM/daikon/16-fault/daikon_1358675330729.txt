#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 1053 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 313 737 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (1213,1282) (1057,1153) (1057,1153) 
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 691 (1213,1282) (1057,1153) (1057,1153) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (1213,1282) (1057,1153) (1057,1153) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 691 (1213,1282) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 691 (1213,1282) (1213,1282) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 691 (1213,1282) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 678 854 1313 257 384 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 517 83 997 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.MathMDE:sign(I)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I | ASSIGN | 23606 | = null
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:eq(DD)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_89()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariants:Invariants()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair; | ASSIGN | 1906 | = null
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3_25()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_scan_token(I)Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfo:relate_var()V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Intern:numIntArrays()I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_148()Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_107()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_137()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:eltsLT([II)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ModBitTracker:num_vars()I
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3R_57()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 18478 | if (x) -> if (!x)
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3_22()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3_35()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3_3()Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_120()Z
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_122()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3_13()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_2_18(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_58()Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:union([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_104()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:jj_3R_164()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_74()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_86()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_3R_50()Z
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:justified()Z
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:slice([III)[I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eq(JJ)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsLTE([II)Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_3R_121()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_81()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:subsetOf([S[S)Z
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.Debug:logOn()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_136()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | RETURN | 19030 | return null
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.visitor.TreeFormatter:TreeFormatter()V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method; | ASSIGN | 38039 | = null
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3_18()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.PptSlice1:num_samples()I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaCharStream:readChar()C
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_108()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_5(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.ArraysMDE:sum([D)D
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.ProglangType:isScalar()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:eq(FF)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_14()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5096 | = null
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_2_36(I)Z
daikon.ValueTuple:size()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.Debug:logDetail()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.Quant:ne(II)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:eltsEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isArray()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:gte(II)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_124()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:concat([I[I)[I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_20()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_109()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3_16()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:numSpecials()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | CONDITION | 1730 | if (x) -> if (!x)
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_114()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_70()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[D)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaCharStream:getBeginLine()I
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression; | STATEMENT | 66038 | stmt -> ;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_27()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.ModBitTracker:split(I)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_13(I)Z
utilMDE.MathMDE:gcd([I)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:eq(II)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_25(I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_4()Z | CONSTANT | 185855 | 87 -> 0
utilMDE.Intern:intern([D)[D
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_105()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:lexGT([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3_12()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_149()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
jtb.visitor.FormatCommand:getNumCommands()I
daikon.Quant:subsetOf([I[I)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_77()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.MathMDE:pow(II)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3_10()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 121036 | = null
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:arity()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_21(I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_106()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
284 2 162 2 479 2 552 4 1183 2 407 2 1152 2 331 2 914 2 
124 2 899 4 283 2 1053 2 1227 6 1299 2 1283 2 477 2 654 2 290 2 1133 6 
284 2 748 6 879 2 547 2 568 4 230 2 727 6 1030 2 323 6 775 2 431 4 914 2 1254 6 
199 8 284 6 596 2 475 4 1249 16 415 8 622 2 693 4 518 2 533 30 439 10 792 8 981 12 1122 4 188 16 502 10 166 2 881 6 612 2 1011 2 862 4 523 16 320 10 1063 6 1066 2 1244 10 563 26 1067 8 32 10 914 6 
175 6 599 4 
1130 2 
284 4 663 2 1000 2 710 4 329 2 1094 2 1267 2 37 2 1271 2 1183 2 289 2 1308 2 7 4 251 2 294 2 256 2 1066 2 797 2 798 2 1194 2 54 4 139 2 938 2 970 2 1157 2 219 2 508 2 16 2 304 2 729 2 220 2 1162 2 774 4 1082 2 781 2 1124 2 361 2 400 2 1294 2 1221 2 865 2 658 2 156 2 914 4 
284 4 199 18 285 4 530 2 1136 4 1249 32 305 4 368 2 499 4 857 6 518 2 533 54 874 8 439 16 981 22 21 4 188 32 502 16 987 6 814 6 881 4 815 4 819 6 862 2 320 16 296 6 523 32 964 2 1063 4 11 2 968 2 1244 16 563 48 138 6 1067 6 1245 4 32 6 887 2 914 4 
1271 2 51 2 577 2 
1320 2 1215 2 1110 2 509 2 486 22 158 2 149 2 46 2 1267 2 231 2 146 2 1167 10 469 2 589 2 
199 2 641 2 1249 2 670 2 179 2 533 6 439 2 981 2 559 2 188 2 502 2 779 2 48 2 862 2 320 2 523 2 1063 2 1244 2 563 4 449 2 196 2 506 2 32 4 
188 8 987 6 502 4 372 2 815 4 1249 8 305 4 523 8 320 4 693 2 1244 4 563 12 138 6 533 16 439 4 981 4 345 2 
328 2 1091 2 1247 2 15 2 510 4 387 2 830 4 1 2 39 2 1160 4 220 2 241 2 772 2 1271 8 1183 2 145 2 7 2 1311 6 485 2 209 4 577 6 463 2 398 10 561 2 1029 34 903 2 882 2 49 4 51 2 996 2 591 2 1041 2 
737 2 218 2 313 2 1206 2 141 2 376 2 1076 2 621 2 333 2 504 2 1130 2 
0 2 77 32 237 2 496 2 330 2 1179 2 667 2 1269 12 831 4 668 4 832 2 1180 1 751 3 570 2 1002 3 1004 2 334 2 500 2 86 2 1272 2 928 2 243 2 755 16 89 2 421 2 1103 2 576 4 92 3 339 8 167 2 579 16 8 2 580 2 1013 2 842 2 761 2 95 2 760 2 1197 2 588 2 259 1 1107 1 261 4 850 2 105 4 17 2 768 32 434 2 853 2 265 24 1020 6 350 2 109 12 20 1 1209 2 438 2 183 2 946 1 1212 2 441 2 185 2 443 2 1290 1 783 2 609 3 192 6 279 2 193 2 281 24 1033 3 1297 2 366 2 1129 2 1037 2 1298 2 616 2 954 3 284 32 33 2 204 2 40 2 125 2 1306 5 287 2 1052 3 1307 1 875 2 43 2 45 2 1144 1 876 2 132 2 628 3 1237 3 1146 2 963 2 878 8 375 2 464 2 880 1 631 2 719 8 966 4 632 4 1150 1 1243 2 801 3 298 2 381 2 1154 2 803 2 473 2 639 2 544 2 303 2 974 2 1324 2 389 2 388 1 978 2 143 2 650 2 1253 2 1168 1 223 1 734 2 224 1 558 2 1085 2 898 6 312 2 314 2 399 3 317 2 1329 2 741 1 402 3 1089 2 407 2 325 2 70 1 909 16 1332 4 155 2 824 2 660 2 745 16 914 34 915 6 
808 2 914 2 
1291 2 713 2 914 4 
301 2 
664 2 999 8 669 2 673 28 1005 6 5 2 674 4 1007 2 675 198 335 26 336 6 337 160 681 2 683 2 684 2 686 2 346 2 347 6 1018 2 688 22 349 2 351 2 354 198 1021 68 1022 2 356 328 1023 6 357 12 697 54 359 26 358 2 1024 2 1027 2 698 224 27 2 28 2 362 4 1031 6 363 2 364 4 701 4 365 6 1035 2 1036 2 30 2 1038 2 1039 2 1040 14 705 432 704 2 707 6 708 2 709 2 1045 8 712 6 1046 8 1047 8 1048 198 1049 48 1050 2 41 2 369 244 42 204 1054 2 1055 2 1056 2 717 74 371 2 374 4 1059 2 718 2 47 2 379 6 1064 30 720 2 50 2 1065 2 721 4 53 2 722 2 55 6 56 4 57 4 1068 6 1072 6 385 30 1073 18 1075 4 726 2 1078 10 728 12 390 12 59 20 730 432 391 30 60 6 1083 2 394 60 733 2 1084 2 396 2 63 2 64 2 739 2 397 2 740 4 1087 12 401 2 404 4 405 2 69 30 408 2 409 6 1090 46 747 2 410 2 411 6 75 2 412 6 413 4 749 12 78 2 80 26 79 6 1098 2 82 6 1099 2 416 2 417 2 85 2 1100 2 88 2 418 4 419 8 1101 30 420 2 91 198 1104 6 93 6 758 2 1105 30 759 2 426 6 763 4 764 60 97 2 1106 4 429 2 98 4 1109 4 1111 4 101 84 104 2 433 4 107 2 771 6 770 4 1113 2 110 46 1117 2 1118 6 1120 6 1119 132 440 6 1121 4 778 6 442 106 114 48 1123 26 444 10 115 10 445 2 1127 2 116 2 1128 6 119 16 450 88 120 2 451 4 1132 2 121 16 122 2 1135 2 453 4 789 4 123 18 1139 2 459 2 126 6 127 4 1141 2 128 2 1143 22 793 290 131 2 1145 2 461 6 462 2 134 4 135 4 136 60 799 6 800 112 468 6 467 2 471 12 472 2 474 2 804 6 140 182 806 6 809 4 142 2 1161 2 810 2 1165 4 481 2 482 2 1169 4 483 6 147 8 1170 2 148 4 484 12 813 46 1171 6 817 28 816 2 150 2 818 4 1173 6 1174 244 487 2 488 86 490 4 491 228 154 4 823 24 1176 26 826 6 827 6 492 4 493 244 1177 32 495 192 159 4 497 4 834 2 161 2 1181 4 836 2 164 26 165 2 1182 4 837 22 838 2 839 2 1185 14 503 2 168 4 1186 2 1187 10 840 4 169 8 841 2 1191 28 174 52 1193 2 1196 2 177 12 1198 4 1199 2 844 20 848 6 847 4 1202 4 1204 8 851 8 512 4 852 2 513 2 1207 4 514 2 1208 14 181 566 182 2 856 2 1210 92 1211 2 184 2 519 6 1214 6 187 140 1217 2 1218 6 861 8 521 20 1219 14 191 2 522 2 194 2 863 6 1222 20 195 6 526 2 866 6 867 4 868 4 529 2 1226 2 200 10 871 2 201 28 202 30 206 2 1230 106 205 18 1231 8 873 4 1235 30 876 2 535 6 208 182 536 2 1236 2 1238 192 210 6 211 6 212 4 539 6 213 6 883 2 885 4 214 6 542 2 543 26 890 6 891 4 892 4 1250 30 550 2 1251 2 221 204 1252 6 554 198 895 2 556 4 1255 46 557 4 225 198 226 2 560 2 227 6 228 26 905 6 1257 8 232 60 906 2 233 2 1258 94 908 2 1260 12 1261 8 1262 2 911 8 910 46 912 2 914 10 1263 2 1264 2 917 4 920 6 1265 6 567 8 238 2 239 2 921 2 925 2 924 4 1270 4 926 8 1273 6 1274 2 1275 2 571 2 572 20 930 2 574 2 1278 2 244 2 575 6 245 2 1280 22 247 26 250 2 253 6 254 4 582 20 581 30 584 14 585 64 937 4 258 2 590 12 939 4 262 2 595 64 1284 2 598 2 1285 6 942 2 1286 2 264 2 267 66 601 112 947 2 603 2 271 118 272 6 949 4 608 2 607 2 1292 28 274 2 276 2 950 20 1293 2 280 4 1295 376 1296 2 613 6 282 6 614 50 952 336 617 2 1301 2 955 198 284 10 620 20 1302 4 1303 2 957 4 956 2 1304 6 959 4 960 2 288 132 624 4 1310 4 291 70 292 16 962 386 965 2 1316 2 1317 8 633 4 299 2 634 328 638 12 640 198 642 2 971 12 972 2 302 2 643 4 975 2 644 2 645 8 1322 6 976 4 306 2 307 30 1325 6 647 2 1326 82 310 24 982 4 311 14 652 6 315 2 1328 4 988 2 653 112 318 112 989 26 990 2 319 2 655 2 322 16 324 10 994 4 993 26 1331 14 326 2 995 98 659 2 327 2 662 4 661 2 
531 2 1112 2 380 2 1228 1 
1112 2 1116 2 
767 2 1122 2 1271 2 1112 2 825 2 393 2 549 2 
593 2 1112 2 393 2 
1203 2 1112 2 393 2 
129 2 531 2 896 2 
1112 2 393 2 
904 2 896 2 
623 2 1112 2 
454 2 531 2 896 2 
1287 2 531 2 913 2 
531 2 732 2 649 2 
1115 2 531 2 1008 2 
531 2 44 2 1234 2 
859 2 896 2 
1112 2 255 2 
934 2 913 2 
176 2 649 2 
1195 2 1115 2 
44 2 532 2 
896 2 1288 2 
269 2 44 2 
1115 2 190 2 
649 2 1239 2 
118 2 913 2 
454 2 531 2 87 2 896 2 
454 2 531 2 87 2 18 2 896 2 
531 2 694 2 896 2 
531 2 872 2 896 2 
805 2 286 2 1172 2 1240 2 
767 2 1271 2 340 2 944 2 
767 2 1271 2 340 2 825 2 944 2 425 2 
767 2 1122 2 1026 2 1271 2 1112 2 393 2 
953 2 400 2 
767 2 1122 2 1271 2 555 2 
1115 2 991 2 
1081 2 44 2 
268 2 913 2 
578 2 649 2 
386 2 649 2 44 2 
649 2 44 2 1315 2 
1163 2 649 2 44 2 
649 2 44 2 548 2 
767 2 919 6 58 2 1271 2 395 2 629 6 423 2 52 2 
1178 2 896 2 
62 4 1043 2 1201 2 486 6 597 4 373 2 610 2 1096 2 742 2 1305 2 1137 2 951 2 19 2 702 2 564 2 428 2 198 2 99 2 
735 2 531 2 
760 2 
0 2 77 6 496 2 831 2 668 4 832 2 923 2 1269 8 3 2 500 2 1184 2 421 4 1281 2 170 2 842 2 95 2 761 2 685 2 588 2 1197 2 261 4 105 4 768 4 853 2 1020 6 109 8 855 4 516 2 438 2 605 2 443 2 782 2 192 4 279 2 193 2 616 2 284 26 33 2 791 2 287 2 43 2 875 2 625 2 876 2 878 2 631 2 966 2 632 2 381 2 298 2 1154 2 1155 2 803 2 724 4 639 2 217 2 544 2 303 2 974 2 389 2 978 2 551 2 223 2 734 6 898 2 741 2 317 4 406 2 407 2 325 2 1332 4 824 2 745 6 72 2 914 26 915 2 
0 2 77 6 496 2 831 2 668 4 832 2 923 2 1269 8 3 2 500 2 1184 2 421 2 1281 2 8 2 170 2 842 2 761 2 95 2 765 2 685 2 588 2 1197 2 261 4 105 4 768 4 434 2 853 2 1020 6 109 8 855 4 516 2 438 2 605 2 443 2 782 2 192 6 279 2 193 2 1037 2 616 2 284 26 33 2 791 2 287 2 43 2 875 2 625 2 876 2 878 2 631 2 966 2 632 2 298 2 381 2 1154 2 1155 2 803 2 1319 2 724 4 639 2 544 2 303 2 974 2 389 2 978 2 551 2 648 2 223 2 734 6 898 2 741 2 317 4 407 2 325 2 1332 4 824 2 745 6 914 26 915 2 
1233 2 
757 2 478 2 
1327 2 1057 2 507 2 565 2 1147 2 1227 2 1126 2 682 4 979 2 969 2 283 2 460 4 1153 2 290 2 1289 2 573 2 1213 2 1133 2 
507 2 1108 2 869 2 1074 4 1227 2 769 4 124 2 979 2 460 2 948 2 290 2 1213 2 1327 2 1057 2 25 2 1125 4 1126 2 1188 2 654 2 682 2 864 2 283 2 466 2 1153 2 197 2 1133 4 
284 6 565 2 869 2 829 4 1227 6 332 2 460 4 290 4 573 2 1057 2 876 2 933 2 1147 2 795 4 1188 2 682 4 95 2 761 2 969 4 466 2 541 2 381 2 1153 2 1283 2 1154 2 13 2 260 2 261 2 1108 2 507 2 941 2 544 2 807 4 105 2 1074 4 546 2 769 4 1323 2 1020 4 945 2 979 2 691 2 948 2 811 2 1289 2 1213 2 1327 2 899 6 25 2 1125 6 65 2 1126 2 654 2 279 2 864 2 283 4 615 2 197 2 1133 4 914 12 
284 6 565 2 869 2 829 4 1227 6 332 2 460 4 290 4 573 2 1057 2 876 2 933 2 1147 2 795 4 1188 2 682 4 95 2 761 2 969 4 466 2 541 2 381 2 1153 2 1154 2 13 2 260 2 261 2 1108 2 507 2 941 2 544 2 807 4 105 2 1074 8 546 2 769 4 477 2 1323 2 1020 4 945 2 979 2 691 2 948 2 811 2 1289 2 1213 2 1327 2 899 6 25 2 1125 6 65 2 1126 2 654 2 279 2 864 2 283 4 615 2 197 2 1133 6 914 12 
284 6 565 2 869 2 829 4 1227 8 332 2 460 4 290 4 573 2 1057 2 876 2 933 2 1147 2 795 4 1188 2 682 4 95 2 761 2 969 4 466 2 541 2 381 2 1153 2 1283 2 1154 2 13 2 260 2 261 2 1108 2 507 2 941 2 544 2 807 4 105 2 1074 8 546 2 769 8 477 2 1323 2 1020 4 945 2 979 2 691 2 948 2 811 2 1289 2 1213 2 1327 2 899 8 25 2 1125 10 65 2 1126 2 654 2 279 2 864 2 283 4 615 2 197 2 1133 6 914 12 
284 6 565 2 869 2 829 4 1227 6 332 2 460 4 290 4 573 2 1057 2 876 2 933 2 1147 2 795 4 1188 2 682 4 95 2 761 2 969 4 466 2 541 2 381 2 1153 2 1154 2 13 2 260 2 261 2 1108 2 507 2 941 2 544 2 807 4 105 2 1074 8 546 2 769 8 477 2 1323 2 1020 4 945 2 979 2 691 2 948 2 811 2 1289 2 1213 2 1327 2 899 6 25 2 1125 10 65 2 1126 2 654 2 279 2 864 2 283 4 615 2 197 2 1133 6 914 12 
998 2 829 4 496 2 668 4 832 2 831 2 1001 1 332 4 3 2 500 2 501 1 1006 6 8 2 1188 2 1189 6 343 1 842 2 170 2 682 4 13 2 507 2 690 2 853 2 1020 6 691 2 516 2 692 6 355 2 1213 2 25 2 189 2 192 6 193 2 524 2 1032 2 864 2 1223 6 197 2 527 2 33 2 869 2 1044 2 1227 8 711 6 1229 2 713 6 715 2 43 2 1232 2 1057 2 876 2 878 2 1060 4 1242 10 541 2 381 2 215 2 886 2 724 4 1246 6 544 2 725 1 889 6 1074 2 553 4 734 6 899 12 898 2 65 2 229 2 67 6 907 7 407 2 745 6 914 46 915 2 73 2 1092 2 76 1 565 2 77 8 1269 4 569 2 573 2 932 2 1102 2 933 2 246 6 1281 4 249 2 252 2 95 2 761 2 762 2 1283 4 940 6 261 4 260 4 1108 2 941 2 263 1 105 4 106 8 768 2 434 2 108 2 109 4 945 2 438 2 948 2 777 7 1289 2 443 2 1125 2 275 2 784 1 1126 2 277 6 446 2 279 2 283 4 615 2 1131 2 788 2 1133 4 284 24 455 1 460 4 290 4 1142 2 1147 2 795 8 631 12 630 2 796 2 632 2 966 2 466 2 969 4 1318 1 298 2 1153 2 1154 2 802 2 637 6 807 6 301 6 303 2 974 2 1323 2 808 6 979 2 811 2 1327 2 985 6 654 4 1175 2 325 2 1332 4 824 2 
73 2 1092 2 565 2 998 2 77 8 829 4 496 2 569 2 1269 8 831 4 832 2 668 4 3 2 332 4 500 2 1006 6 932 2 573 2 1102 2 933 2 246 6 249 2 1281 4 252 2 8 2 1188 2 1189 6 9 2 170 2 842 2 682 4 761 2 95 2 762 2 940 6 13 2 260 4 261 4 1108 2 507 2 941 2 105 4 690 2 106 8 768 2 434 2 853 2 1020 6 108 2 109 8 945 2 516 2 691 2 692 6 438 2 355 2 948 2 1289 2 1213 2 443 2 25 2 189 2 1125 2 275 2 1126 2 446 2 277 6 192 6 524 2 193 2 279 2 1032 2 864 2 1223 6 283 4 615 2 788 2 527 2 1131 2 197 2 1133 8 284 26 1134 2 33 2 869 2 1044 2 711 6 1227 8 1229 2 713 6 715 2 460 4 43 2 1232 2 1142 2 290 4 1057 2 876 2 1147 2 878 2 795 8 630 2 631 12 1060 4 796 2 966 4 632 4 1242 10 969 4 466 2 541 2 215 2 298 2 381 2 1153 2 886 2 1154 2 802 2 637 6 724 4 1246 6 544 2 889 6 301 6 807 6 1074 6 303 2 974 2 808 6 1323 2 477 4 979 2 553 4 811 2 734 6 1327 2 985 6 898 2 899 12 65 2 317 2 67 6 229 2 654 4 1175 2 407 2 325 2 1332 4 824 2 745 6 915 2 914 48 
73 2 1092 2 565 2 998 2 77 8 829 4 496 2 569 2 1269 8 831 4 832 2 668 4 3 2 332 4 500 2 1006 6 932 2 573 2 1102 2 933 2 246 6 249 2 1281 4 252 2 8 2 1188 2 1189 6 9 2 170 2 842 2 682 4 95 2 761 2 762 2 940 6 13 2 260 4 261 4 1108 2 507 2 941 2 105 4 690 2 106 8 768 2 769 4 434 2 853 2 1020 6 108 2 109 8 945 2 516 2 691 2 692 6 438 2 355 2 948 2 1289 2 1213 2 443 2 25 2 189 2 1125 6 275 2 1126 2 446 2 277 6 192 6 524 2 193 2 279 2 1032 2 864 2 1223 6 283 4 615 2 788 2 527 2 1131 2 197 2 1133 8 284 26 1134 2 33 2 869 2 1044 2 711 6 1227 8 1229 2 713 6 715 2 460 4 43 2 1232 2 1142 2 290 4 1057 2 876 2 1147 2 878 2 795 8 630 2 631 12 1060 4 796 2 966 4 632 4 1242 10 969 4 466 2 541 2 215 2 298 2 381 2 1153 2 886 2 1154 2 802 2 637 6 724 4 1246 6 544 2 889 6 301 6 807 6 1074 6 303 2 974 2 808 6 1323 2 477 4 979 2 553 4 811 2 734 6 1327 2 985 6 898 2 899 12 65 2 317 2 67 6 229 2 654 4 1175 2 407 2 325 2 1332 4 824 2 745 6 915 2 914 48 
869 2 829 2 1227 10 831 4 1269 4 124 2 460 2 290 4 1057 2 795 4 1188 2 1060 2 796 2 682 2 632 4 966 4 466 2 1153 2 1283 2 13 2 507 2 1108 2 941 2 807 2 1074 6 769 4 477 4 1323 2 109 4 979 2 691 2 948 2 1213 2 1327 2 899 10 25 2 1125 4 1126 2 654 4 864 2 283 4 197 2 1133 10 914 6 
1108 2 507 2 941 2 807 2 869 2 829 2 1074 6 1227 6 769 4 1323 2 477 2 691 2 979 2 460 2 948 2 290 4 1213 2 1327 2 1057 2 899 4 25 2 1125 4 795 2 1126 2 1188 2 654 2 682 2 864 2 466 2 283 4 1153 2 197 2 13 2 914 4 1133 6 
918 2 74 2 829 2 77 8 496 2 832 2 668 4 500 2 1103 2 933 2 1281 2 680 3 8 2 1188 2 170 2 1013 2 842 2 682 2 761 2 760 2 95 2 13 2 261 4 507 2 1108 2 941 2 105 4 768 3 434 2 853 2 1020 6 691 2 516 2 438 2 948 2 1213 2 443 2 186 2 1216 2 25 2 1125 2 1126 2 192 6 279 2 193 2 864 2 283 4 197 2 1133 6 284 24 33 2 869 2 1227 6 460 2 43 2 290 4 1057 2 876 2 795 2 631 4 1242 2 466 2 298 2 381 2 215 2 1153 2 1154 2 473 2 724 4 544 2 807 2 303 2 1074 6 974 2 1323 2 477 2 731 2 979 2 734 6 1327 2 899 4 898 3 654 2 407 2 1332 4 824 2 745 6 914 28 915 3 
284 6 565 2 869 2 829 4 1227 6 332 2 460 4 290 4 573 2 1057 2 876 2 933 2 1147 2 795 4 1188 2 682 4 95 2 761 2 969 4 466 2 541 2 381 2 1153 2 1154 2 13 2 260 2 261 2 1108 2 507 2 941 2 544 2 807 4 105 2 1074 8 546 2 769 8 477 2 1323 2 1020 4 945 2 979 2 691 2 948 2 811 2 1289 2 1213 2 1327 2 899 6 25 2 1125 10 65 2 1126 2 654 2 279 2 864 2 283 4 615 2 197 2 1133 6 914 12 
507 2 1108 2 941 2 807 2 869 2 829 2 1227 6 1074 8 769 8 1323 2 477 2 458 2 124 2 691 2 979 2 460 2 948 2 290 4 1213 2 1327 2 1057 2 794 4 899 4 25 2 1125 8 795 2 1126 2 1188 2 654 2 682 2 700 2 864 2 283 4 466 2 1153 2 197 2 914 4 1133 8 
941 2 986 2 869 2 
941 2 986 2 869 2 
235 2 77 2 829 2 496 2 1269 4 831 4 668 4 832 2 1268 2 500 2 242 2 676 2 421 2 1281 4 341 2 8 2 1010 2 170 2 842 2 682 2 761 2 95 2 685 4 1283 2 940 2 261 4 941 2 105 4 768 2 434 2 769 2 1020 6 109 4 516 2 691 2 602 2 438 2 1213 2 443 2 1125 2 1126 2 192 6 279 2 193 2 283 4 452 2 1133 10 284 16 33 2 869 2 1227 10 124 2 460 2 43 2 290 4 961 2 876 2 795 4 1314 2 1060 2 631 4 966 4 632 4 1242 2 298 2 381 2 1154 2 544 2 807 2 303 2 1074 6 974 2 477 4 1323 2 553 2 734 2 1327 2 899 10 66 2 654 4 403 2 407 2 325 2 1332 4 824 2 745 2 914 24 
676 2 284 2 1092 2 757 2 341 2 1248 2 456 2 631 2 279 2 403 2 1242 2 1164 2 553 2 1289 2 932 2 940 2 914 4 
235 4 77 2 829 2 496 2 1269 4 831 4 668 4 832 2 1268 2 500 2 242 2 1281 4 341 2 8 2 1010 2 170 2 842 2 682 2 761 2 95 2 1282 2 685 4 1283 2 261 4 941 2 105 4 768 4 434 2 769 2 1020 6 109 4 516 2 691 2 602 2 438 2 1213 2 443 2 1125 2 1126 2 192 6 279 2 193 2 283 4 452 2 1133 10 284 14 33 2 869 2 1227 10 124 2 460 2 43 2 290 4 961 2 876 2 795 4 1314 2 1060 2 631 2 540 2 966 4 632 4 298 2 381 2 1154 2 544 2 807 2 303 2 1074 6 974 2 477 4 1323 2 734 2 1327 2 899 10 66 2 654 4 403 2 407 2 325 2 1332 4 824 2 745 2 914 20 
235 2 77 2 829 2 496 2 1269 4 831 4 668 4 832 2 1268 2 500 2 242 2 676 2 421 1 1281 4 341 2 8 2 1010 2 170 2 842 2 682 2 761 2 95 2 685 4 1283 2 940 2 261 4 941 2 105 4 768 2 434 2 769 2 1020 6 109 4 516 2 691 2 602 2 438 2 1213 2 443 2 1125 2 1126 2 192 6 279 2 193 2 283 4 452 2 1133 10 284 16 33 2 869 2 1227 10 124 2 460 2 43 2 290 4 961 2 876 2 795 4 1314 2 1060 2 631 4 966 4 632 4 1242 2 298 2 381 2 1154 2 544 2 807 2 303 2 1074 6 974 2 477 4 1323 2 553 2 734 2 1327 2 899 10 66 2 654 4 403 2 407 2 325 2 1332 4 824 2 745 2 914 24 
998 2 77 8 496 2 236 2 922 2 832 2 668 4 1003 2 500 2 1102 2 502 2 678 2 1281 2 249 2 8 1 252 2 842 2 761 2 95 2 1192 2 427 2 257 2 587 6 261 4 689 2 105 4 511 2 768 2 434 1 853 2 854 2 1020 6 436 2 516 2 438 2 439 2 776 4 443 2 188 2 192 5 523 2 279 2 193 2 284 20 33 2 457 2 533 6 43 2 876 2 1313 2 631 2 1244 2 298 2 381 2 1154 2 802 2 384 2 724 4 544 2 303 2 974 2 1249 2 61 2 734 6 987 4 898 2 1256 2 900 2 316 2 815 2 229 2 320 2 743 2 1088 2 1259 2 153 2 407 2 563 4 1332 4 824 2 745 6 157 2 914 26 915 2 
1070 2 284 2 1159 2 77 2 768 3 853 2 3 4 600 3 6 2 931 2 207 2 734 2 1277 2 898 3 378 1 137 2 172 2 10 2 656 2 787 2 745 2 724 2 915 3 914 2 
284 2 1070 2 898 2 1159 2 77 2 768 2 853 2 137 2 3 4 172 2 10 2 600 2 656 2 787 2 6 2 745 2 207 2 931 2 724 2 1277 2 914 2 734 2 915 2 
284 2 1070 2 898 2 1159 2 77 2 768 2 853 2 137 2 3 4 172 2 10 2 600 2 656 2 787 2 6 2 745 2 207 2 931 2 724 2 1277 2 914 2 734 2 915 2 
284 4 34 4 665 3 494 2 77 2 768 3 1249 2 853 2 646 2 1051 6 753 4 144 2 308 4 6 2 533 6 439 2 929 2 22 3 130 2 626 2 188 2 502 2 780 2 679 2 579 2 881 2 320 2 523 2 1241 3 1244 2 936 2 563 4 635 2 1067 4 909 2 300 4 1225 2 528 4 915 3 914 10 
284 4 199 2 665 2 34 4 77 2 494 2 1051 6 753 4 6 2 533 4 929 2 130 2 626 2 502 2 679 2 579 2 881 2 1241 2 1244 2 936 2 1067 4 635 2 300 4 768 2 1249 2 853 2 646 2 144 2 308 4 518 2 439 2 981 2 22 2 188 2 780 2 523 2 320 2 563 4 909 2 1225 2 528 4 914 10 915 2 
284 4 199 2 665 2 34 4 77 2 494 2 1051 6 753 4 6 2 533 4 929 2 130 2 626 2 502 2 679 2 579 2 881 2 1241 2 1244 2 936 2 1067 4 635 2 300 4 768 2 1249 2 853 2 646 2 144 2 308 4 518 2 439 2 981 2 22 2 188 2 780 2 523 2 320 2 563 4 909 2 1225 2 528 4 914 10 915 2 
284 4 199 2 665 2 34 4 77 2 494 2 1051 6 753 4 6 2 533 4 929 2 130 2 626 2 502 2 679 2 579 2 881 2 1241 2 1244 2 936 2 1067 4 635 2 300 4 768 2 1249 2 853 2 646 2 144 2 308 4 518 2 439 2 981 2 22 2 188 2 780 2 523 2 320 2 563 4 909 2 1225 2 528 4 914 10 915 2 
284 4 199 4 665 2 34 4 77 2 494 2 1051 6 753 4 6 2 533 4 929 2 130 2 626 2 502 2 679 2 579 2 881 2 1241 2 1244 2 936 2 1067 4 635 2 300 4 768 2 1249 2 853 2 646 2 144 2 308 4 518 4 439 2 981 4 22 2 188 2 780 2 523 2 320 2 563 4 909 2 1225 2 528 4 914 10 915 2 
1312 2 812 2 1019 2 448 2 1028 2 160 2 
605 2 29 2 1019 2 1086 2 465 2 414 2 846 2 
284 8 1247 1 1205 2 711 2 387 1 943 2 435 2 266 2 1079 2 835 2 480 1 112 2 754 2 984 2 113 2 736 2 293 2 860 2 611 2 68 1 278 2 95 2 152 2 489 1 884 2 914 10 
284 6 199 2 16 2 1249 6 2 2 457 2 533 16 518 2 874 2 61 2 439 6 1009 2 981 4 21 2 1025 2 188 6 987 4 502 6 738 2 900 2 815 2 881 2 296 4 523 6 320 6 1194 2 1244 6 563 12 1067 4 914 6 
766 2 284 1 706 2 897 2 133 2 377 2 1012 4 977 2 295 2 753 2 1080 1 270 6 894 2 744 2 300 2 528 2 914 1 845 2 
766 2 706 4 897 2 133 2 377 2 1012 4 977 2 295 4 753 2 270 6 894 4 744 2 300 2 528 2 845 2 
766 2 284 1 706 8 897 2 133 2 377 2 1012 4 977 6 295 8 753 2 1080 1 270 10 894 8 744 2 300 2 528 2 914 1 845 8 
766 2 706 2 897 2 133 2 377 2 1012 2 295 2 753 2 270 2 894 2 744 2 300 2 528 2 
746 8 916 4 566 4 1093 11 668 44 832 2 1269 16 833 4 1097 8 4 4 163 4 498 4 83 2 927 6 84 6 1276 4 90 32 421 2 1279 4 94 8 248 10 338 10 8 28 342 4 842 6 1014 8 171 4 173 2 583 2 1015 4 935 4 12 2 505 4 344 10 687 2 1016 4 1200 30 594 16 14 8 100 4 849 4 102 4 103 1 348 24 434 26 178 4 515 4 352 10 180 4 773 4 1114 2 517 2 111 4 23 8 520 16 604 4 360 4 24 2 785 4 192 102 1220 2 699 8 525 2 367 2 703 10 31 2 1224 4 1300 2 284 70 618 10 36 4 714 4 958 14 38 2 203 24 370 2 716 4 627 10 877 24 1058 4 1148 8 1061 4 1062 4 967 4 297 2 723 16 1151 4 216 4 470 2 382 4 1156 2 636 2 888 6 1069 4 545 4 1158 4 476 2 893 4 222 6 980 4 901 4 902 4 151 2 822 4 992 4 234 2 1332 36 824 6 914 78 997 2 
284 26 916 4 619 2 1093 2 36 2 1269 14 832 2 668 14 750 2 714 2 203 8 671 2 1097 6 163 4 498 2 83 2 927 2 370 2 84 2 421 2 627 6 338 6 248 6 8 12 342 4 424 2 1062 4 842 2 173 2 96 2 1151 2 216 2 470 2 344 2 430 2 888 4 383 2 1200 6 849 2 1017 2 476 2 434 12 773 4 517 2 858 2 111 2 651 2 696 10 606 2 785 4 192 40 1220 2 822 4 31 2 1300 2 1332 14 824 2 997 2 914 28 
916 6 1266 2 566 6 1093 12 666 2 668 42 832 4 1269 4 833 4 671 4 1097 6 4 4 163 6 498 6 83 2 927 12 84 6 1276 6 1279 6 94 12 338 12 248 12 8 22 342 6 424 3 842 10 1014 6 171 6 1015 6 344 12 687 2 430 2 1016 6 1200 22 100 4 849 6 102 4 348 12 434 22 178 6 515 4 180 6 773 6 353 6 1114 2 517 2 858 2 111 2 520 6 604 6 696 4 606 4 785 6 192 90 1220 2 525 2 31 2 447 6 1224 4 1300 2 284 78 35 2 36 2 714 2 203 42 958 12 370 2 716 4 877 12 627 12 1148 6 1062 6 967 6 1151 6 216 6 470 2 636 2 888 8 1069 4 545 6 1158 6 973 2 893 4 980 6 983 6 902 6 151 2 822 2 992 4 1332 36 824 10 914 90 997 2 
916 2 284 44 619 2 618 2 828 2 870 6 1093 2 790 2 1095 2 1269 36 832 2 668 20 203 6 672 2 752 4 240 2 81 4 163 2 498 2 1138 2 83 2 927 2 84 2 1140 2 1309 2 534 2 756 2 421 2 627 4 677 2 422 2 338 4 248 4 537 4 8 6 342 2 1190 2 538 2 1062 2 842 2 1149 2 173 2 843 2 297 2 1151 2 216 2 344 2 470 2 888 6 432 2 592 2 1321 2 1071 2 849 2 1017 2 476 2 434 6 1077 2 352 2 773 2 517 2 1166 2 437 2 392 2 111 2 309 2 695 2 26 2 273 2 562 2 785 2 821 2 820 2 192 48 1220 2 786 4 321 2 117 2 1034 2 1330 2 703 2 31 2 657 2 234 2 1300 2 1332 20 71 2 824 2 1042 2 997 2 914 46 
586 2 

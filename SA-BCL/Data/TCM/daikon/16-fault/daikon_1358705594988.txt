#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 605 840 126 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (99,373,443,571,918) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 851 929 842 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 851 929 842 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 152 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 88 84 641 8 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NullPointerException 579 848 (335,377) (335,377) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NullPointerException 579 848 (335,377) (335,377) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NullPointerException 579 848 (335,377) (335,377) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:readChar()C
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 51862 | != -> <
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:isFloat()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ModBitTracker:num_sets()I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eltwiseGT([I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >=
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:union([I[I)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_samples()I
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:sign(I)I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.ModBitTracker:split(I)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | STATEMENT | 54139 | stmt -> ;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:ne(II)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_vars()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLT([II)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:memberOf(S[S)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.Invariant:logOn()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Debug:logOn()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:slice([III)[I
daikon.Quant:eltsLteIndex([I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase:passes()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
daikon.ProglangType:dimensions()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:subsetOf([S[S)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptSlice1:arity()I
jtb.JavaCharStream:FillBuff()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eq(II)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Debug:logDetail()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 915 | = null
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit; | ASSIGN | 3246 | = null
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltsEqual([II)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:pow(II)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptSlice0:arity()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:lt(II)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaCharStream:backup(I)V
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:intersection([I[I)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptSlice1:num_samples()I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:noDups([I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice2:arity()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([I)[I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:isArray()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ProglangType:isScalar()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:lte(II)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoAux:hashCode()I
jtb.JavaCharStream:getEndColumn()I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
287 4 887 4 702 2 109 2 520 2 830 2 709 2 832 2 299 4 474 2 301 2 362 2 914 2 916 2 78 2 919 2 80 2 311 2 541 2 432 2 608 2 792 2 33 4 133 2 491 2 855 2 796 2 323 2 195 2 441 2 738 2 552 2 451 2 811 2 562 2 396 2 514 2 817 2 879 2 883 4 406 2 408 2 638 4 344 2 
135 4 887 4 35 2 349 2 136 6 161 4 645 16 926 6 769 22 896 18 296 6 652 8 93 32 235 4 684 4 904 2 780 4 782 6 559 2 455 2 870 6 367 6 535 16 55 6 822 4 277 2 279 4 336 16 428 32 216 56 537 2 370 32 458 6 883 4 283 4 849 48 726 2 850 4 375 16 
362 2 733 2 220 2 
492 10 493 2 324 22 425 2 398 2 52 2 25 2 168 2 946 2 825 2 298 2 792 2 94 2 73 2 
254 2 349 2 645 2 37 2 580 2 769 2 86 2 896 2 296 4 266 2 93 2 11 2 391 2 687 2 910 2 535 2 336 2 216 6 428 2 370 2 849 4 850 2 375 2 
136 6 575 2 645 4 207 2 769 4 895 2 535 4 428 8 216 16 336 4 370 8 458 6 283 4 93 8 235 4 849 12 375 4 
83 2 58 10 703 2 220 6 733 2 615 2 925 4 893 4 323 4 584 4 385 2 679 2 169 2 231 2 711 4 738 2 234 2 299 4 357 4 362 8 718 2 912 2 940 62 941 2 624 2 424 10 629 4 49 2 187 4 273 2 26 2 309 2 27 2 922 4 923 4 700 4 158 2 433 2 285 14 342 4 
218 2 253 2 732 2 897 2 388 2 331 2 602 2 753 2 567 2 727 2 
887 2 442 4 832 2 246 2 372 2 320 2 883 2 902 2 381 2 
690 2 506 2 36 2 625 2 648 6 752 2 144 2 90 6 542 6 838 2 762 2 
887 2 318 2 795 6 466 6 258 2 438 4 439 4 114 2 429 2 883 2 404 6 761 2 527 6 
887 6 349 4 645 10 769 12 896 8 494 2 800 2 296 10 835 8 93 16 657 2 474 2 17 4 559 2 182 4 207 4 534 2 870 8 603 8 535 10 279 6 216 30 428 16 336 10 370 16 883 6 849 26 850 6 728 2 375 10 
519 4 384 6 
602 2 
790 2 883 2 
696 2 883 4 866 2 
666 2 
827 8 705 2 574 2 351 2 581 2 113 4 708 4 9 2 353 6 469 2 586 16 354 2 121 2 837 2 836 2 596 3 839 2 13 2 237 2 358 2 361 3 124 2 842 2 477 2 125 2 723 2 21 2 721 2 722 1 845 2 22 1 482 16 483 2 369 2 724 3 607 2 30 4 853 4 613 2 138 2 379 2 381 2 382 1 259 2 39 2 736 16 858 2 260 32 616 2 141 2 860 6 617 2 145 2 500 4 863 32 620 6 508 2 395 2 47 2 749 2 626 2 48 3 867 16 272 2 154 1 869 2 51 2 631 3 633 24 872 2 515 2 276 1 877 2 755 3 756 4 282 2 883 34 759 2 403 5 884 2 286 1 159 2 887 32 291 2 890 2 162 3 163 2 647 2 649 2 523 2 167 2 295 1 68 8 901 2 297 2 526 2 178 4 72 1 778 8 180 2 179 1 658 2 781 2 75 3 660 4 532 2 305 2 785 3 789 2 669 24 540 2 434 2 317 2 436 2 544 2 924 2 321 3 546 2 676 2 927 3 930 8 327 2 680 1 551 2 803 1 683 2 936 1 685 2 450 2 937 3 686 1 808 2 688 1 558 2 810 2 453 2 208 2 813 2 566 1 814 2 821 2 945 2 699 2 217 2 341 6 461 1 345 2 
107 2 463 2 543 2 764 6 289 2 889 2 257 6 4 2 3 6 857 2 931 6 834 2 933 2 449 4 906 2 14 2 503 2 151 2 840 2 181 2 126 2 153 2 664 2 155 2 823 2 402 2 876 2 605 2 
475 2 787 2 772 2 393 2 421 1 362 2 598 2 182 2 
475 2 787 2 38 2 
475 2 787 2 373 2 
104 2 206 2 595 2 
475 2 787 2 
206 2 583 2 
475 2 501 2 
744 2 206 2 595 2 
191 2 512 2 595 2 
587 2 590 2 595 2 
530 2 880 2 595 2 
745 2 653 2 595 2 
206 2 210 2 
475 2 907 2 
310 2 191 2 
590 2 134 2 
880 2 87 2 
765 2 745 2 
399 2 206 2 
745 2 350 2 
880 2 618 2 
590 2 364 2 
456 2 191 2 
744 2 206 2 595 2 415 2 
401 2 744 2 206 2 595 2 415 2 
280 2 206 2 595 2 
131 2 206 2 595 2 
238 2 368 2 337 2 196 2 
362 2 598 2 198 2 517 2 
393 2 362 2 598 2 105 2 198 2 517 2 
475 2 787 2 716 2 362 2 598 2 182 2 
820 2 919 2 
362 2 598 2 182 2 363 2 
880 2 824 2 
745 2 226 2 
269 2 191 2 
290 2 590 2 
745 2 590 2 307 2 
745 2 590 2 446 2 
745 2 932 2 590 2 
745 2 590 2 554 2 
160 2 362 2 240 2 598 2 563 2 695 6 128 2 431 6 
288 2 206 2 
219 2 918 4 571 2 443 2 99 2 330 2 556 2 
539 2 595 2 
475 2 63 2 595 2 
475 2 819 2 
759 2 
887 14 647 2 649 2 715 2 180 2 839 2 358 2 237 2 842 2 477 2 660 4 532 2 482 6 847 2 30 4 851 2 434 2 546 2 381 2 39 2 929 2 260 6 858 2 327 2 861 4 262 2 500 4 803 2 551 2 620 4 448 2 450 2 810 2 395 2 47 2 749 2 814 2 869 2 877 6 756 4 883 14 341 6 
887 14 647 2 649 2 715 2 180 2 839 2 358 2 237 2 842 2 477 2 660 4 532 2 482 6 847 2 30 4 851 2 434 2 546 2 381 2 39 2 929 2 260 6 858 2 327 2 861 4 262 2 500 4 803 2 551 2 620 6 448 2 450 2 808 2 810 2 395 2 47 2 749 2 208 2 814 2 869 2 877 6 756 4 883 14 341 6 
117 2 
339 2 528 2 
731 2 101 2 694 2 735 2 481 4 400 2 387 4 144 2 90 2 754 2 542 2 355 2 405 2 553 2 329 2 838 2 490 2 376 2 
887 6 647 2 648 6 649 2 115 4 10 2 417 4 355 2 776 2 838 4 839 2 476 2 420 2 360 2 663 4 844 2 481 4 542 6 30 2 315 2 487 2 489 2 376 2 490 2 854 2 731 2 36 2 674 2 322 2 547 2 735 2 387 4 858 2 144 4 90 4 935 2 500 2 802 2 740 2 200 6 147 4 553 2 329 2 938 2 392 2 270 2 810 2 101 2 749 2 694 2 209 2 869 2 400 2 754 4 568 2 883 12 405 2 407 4 341 4 762 2 
887 6 647 2 648 6 649 2 115 4 10 2 417 4 355 2 776 2 838 4 839 2 476 2 420 2 360 2 663 4 844 2 481 4 542 4 30 2 315 2 487 2 489 2 376 2 490 2 854 2 731 2 674 2 322 2 547 2 735 2 387 4 858 2 144 4 90 6 935 2 500 2 802 2 740 2 200 6 147 4 553 2 329 2 938 2 392 2 506 2 270 2 810 2 101 2 749 2 694 2 209 2 869 2 400 2 754 4 568 2 883 12 405 2 407 4 341 4 762 2 
887 6 647 2 648 6 649 2 115 4 10 2 417 4 355 2 776 2 838 4 839 2 476 2 420 2 360 2 663 8 844 2 481 4 542 6 30 2 315 2 487 2 489 2 376 2 490 2 854 2 731 2 674 2 322 2 547 2 735 2 387 4 858 2 144 4 90 6 935 2 500 2 802 2 740 2 200 6 147 4 553 2 329 2 938 2 392 2 270 2 810 2 101 2 749 2 694 2 209 2 869 2 752 2 400 2 754 4 568 2 883 12 405 2 407 4 341 4 762 2 
887 6 647 2 648 8 649 2 115 4 10 2 417 4 355 2 776 2 838 4 839 2 476 2 420 2 360 2 663 8 844 2 481 4 542 6 30 2 315 2 487 2 489 2 376 2 490 2 854 2 731 2 674 2 322 2 547 2 735 2 387 4 858 2 144 4 90 8 935 2 500 2 802 2 740 2 200 10 147 8 553 2 329 2 938 2 392 2 506 2 270 2 810 2 101 2 749 2 694 2 209 2 869 2 752 2 400 2 754 4 568 2 883 12 405 2 407 4 341 4 762 2 
887 6 647 2 648 6 649 2 115 4 10 2 417 4 355 2 776 2 838 4 839 2 476 2 420 2 360 2 663 8 844 2 481 4 542 6 30 2 315 2 487 2 489 2 376 2 490 2 854 2 731 2 674 2 322 2 547 2 735 2 387 4 858 2 144 4 90 6 935 2 500 2 802 2 740 2 200 10 147 8 553 2 329 2 938 2 392 2 270 2 810 2 101 2 749 2 694 2 209 2 869 2 752 2 400 2 754 4 568 2 883 12 405 2 407 4 341 4 762 2 
221 7 708 2 10 2 472 2 714 1 13 2 237 2 476 4 477 2 720 1 481 4 482 6 30 4 487 2 489 2 490 2 731 2 735 2 39 2 495 2 260 8 262 2 500 4 740 2 44 2 506 4 270 2 746 1 747 2 47 2 749 2 513 6 53 2 278 8 56 2 754 4 516 2 756 4 57 2 762 4 518 2 775 6 776 2 778 2 779 6 302 6 531 2 532 2 783 2 784 6 538 6 790 6 542 4 315 2 793 6 546 2 85 2 322 4 327 2 549 2 90 8 802 2 551 2 553 2 329 2 96 2 808 2 810 2 101 2 812 2 814 2 334 1 568 2 106 6 341 6 828 2 115 4 353 2 585 2 831 2 833 6 355 2 838 4 594 4 356 10 839 2 358 12 360 2 842 2 600 2 844 2 127 2 847 2 376 2 853 2 854 2 612 2 381 2 858 2 387 4 860 2 142 2 144 4 861 4 863 2 620 6 392 2 623 2 395 2 865 1 869 2 400 2 871 4 877 6 878 7 157 2 883 46 405 2 407 8 640 6 887 24 647 2 414 2 648 12 649 2 898 6 417 6 178 2 419 2 656 2 905 1 180 2 420 2 660 4 663 2 186 2 427 2 666 6 671 2 194 1 434 2 674 2 677 6 928 1 930 2 935 2 445 1 199 6 200 2 448 4 450 2 938 2 203 2 691 2 208 2 694 2 209 2 943 2 696 6 
828 2 222 2 708 4 115 4 831 2 585 2 353 2 10 2 833 6 355 2 472 2 838 4 356 10 594 4 839 2 13 2 358 12 237 2 476 4 360 2 842 2 477 2 600 2 844 2 481 4 482 6 127 2 847 2 30 4 487 2 489 2 490 2 376 2 853 4 612 2 854 2 731 2 735 2 381 2 495 2 39 2 260 8 387 4 858 2 497 2 141 2 142 2 860 2 861 4 262 2 144 4 500 4 863 2 740 2 620 6 44 2 392 2 623 2 270 2 747 2 395 2 47 2 749 2 513 6 869 2 752 4 53 2 400 2 871 4 278 8 56 2 877 6 516 2 754 4 157 2 57 2 756 4 883 48 405 2 407 8 640 6 762 4 518 2 887 26 647 2 414 2 648 12 649 2 898 6 417 6 775 6 776 2 178 4 656 2 778 4 419 2 779 6 180 2 302 6 420 2 531 2 660 4 532 2 663 6 186 2 783 2 784 6 427 2 666 6 538 6 790 6 671 2 542 8 315 2 793 6 434 2 674 2 85 2 546 2 322 4 677 6 930 2 549 2 327 2 90 8 935 2 199 6 802 2 200 2 551 2 553 2 448 4 329 2 96 2 450 2 938 2 203 2 808 2 810 2 691 2 101 2 812 2 208 2 694 2 209 2 814 2 943 2 696 6 568 2 106 6 341 6 
828 2 222 2 708 4 115 4 831 2 585 2 353 2 10 2 833 6 355 2 472 2 838 4 356 10 594 4 839 2 13 2 358 12 237 2 476 4 360 2 842 2 477 2 600 2 844 2 481 4 482 6 127 2 847 2 30 4 487 2 489 2 490 2 376 2 853 4 612 2 854 2 731 2 735 2 381 2 495 2 39 2 260 8 387 4 858 2 497 2 141 2 142 2 860 2 861 4 262 2 144 4 500 4 863 2 740 2 147 4 620 6 44 2 392 2 623 2 270 2 747 2 395 2 47 2 749 2 513 6 869 2 752 4 53 2 400 2 871 4 278 8 56 2 877 6 516 2 754 4 157 2 57 2 756 4 883 48 405 2 407 8 640 6 762 4 518 2 887 26 647 2 414 2 648 12 649 2 898 6 417 6 775 6 776 2 178 4 656 2 778 4 419 2 779 6 180 2 302 6 420 2 531 2 660 4 532 2 663 6 186 2 783 2 784 6 427 2 666 6 538 6 790 6 671 2 542 8 315 2 793 6 434 2 674 2 85 2 546 2 322 4 677 6 930 2 549 2 327 2 90 8 935 2 199 6 802 2 200 6 551 2 553 2 448 4 329 2 96 2 450 2 938 2 203 2 808 2 810 2 691 2 101 2 812 2 208 2 694 2 209 2 814 2 943 2 696 6 568 2 106 6 341 6 
222 2 708 4 10 2 713 6 472 2 13 2 237 2 476 4 239 6 477 2 481 4 482 8 30 4 487 2 489 2 490 2 731 2 36 2 735 2 39 2 495 2 260 12 497 2 737 2 262 2 500 4 740 2 44 2 267 6 506 2 270 2 747 2 47 2 749 2 513 6 752 4 53 2 278 8 56 2 754 4 516 2 756 4 57 2 762 4 518 2 292 2 293 6 775 6 776 2 778 6 779 6 302 12 531 2 532 2 783 2 784 6 538 6 790 12 542 10 315 2 793 12 546 2 85 2 322 4 325 2 327 2 549 2 90 10 802 2 551 2 553 2 329 2 96 2 808 2 810 2 101 2 812 2 814 2 818 2 568 2 106 12 341 6 828 2 115 4 353 4 585 2 831 4 833 6 355 2 838 4 594 4 356 8 839 2 358 10 360 2 842 2 600 2 844 2 127 2 847 2 374 6 376 2 853 4 854 2 612 2 381 2 858 2 387 4 141 2 142 2 860 4 144 4 861 6 146 6 863 4 147 4 620 6 864 6 392 2 623 2 395 2 869 2 400 2 871 4 877 8 157 2 883 52 405 2 407 8 640 6 887 24 644 2 647 2 414 2 648 16 649 2 650 2 898 6 417 6 176 2 178 4 656 2 419 2 180 2 420 2 660 4 913 6 185 2 663 6 186 2 427 2 666 12 671 2 434 2 674 2 675 6 677 6 930 4 935 2 199 6 200 6 448 4 450 2 938 2 691 2 208 2 694 2 209 2 943 2 696 12 
854 2 674 2 735 2 648 4 115 2 387 2 10 2 144 4 417 2 90 6 935 2 740 2 147 4 200 4 355 2 776 2 553 2 329 2 838 4 938 2 420 2 360 2 392 2 663 6 481 2 752 2 542 6 883 4 315 2 405 2 407 2 762 2 489 2 490 2 376 2 
705 2 573 2 115 2 353 3 10 2 355 2 838 4 356 2 839 2 237 2 358 4 360 2 477 2 717 2 842 2 481 2 482 6 847 2 30 4 487 2 489 2 376 2 490 2 854 2 735 2 381 2 259 2 39 2 387 2 858 2 260 8 860 3 144 4 262 2 861 4 500 4 863 3 740 2 620 6 392 2 395 2 47 2 510 2 749 2 869 2 752 2 51 2 877 6 756 4 883 28 759 2 405 2 407 2 637 2 762 2 887 24 647 2 648 4 649 2 417 2 776 2 525 2 180 2 420 2 660 4 532 2 663 6 542 6 672 3 315 2 434 2 674 2 546 2 327 2 90 6 935 2 551 2 200 2 553 2 448 2 329 2 450 2 938 2 808 2 203 2 810 2 208 2 814 2 341 6 
887 6 647 2 648 6 649 2 115 4 10 2 417 4 355 2 776 2 838 4 839 2 476 2 420 2 360 2 663 8 844 2 481 4 542 6 30 2 315 2 487 2 489 2 376 2 490 2 854 2 731 2 674 2 322 2 547 2 735 2 387 4 858 2 144 4 90 6 935 2 500 2 802 2 740 2 200 10 147 8 553 2 329 2 938 2 392 2 270 2 810 2 101 2 749 2 694 2 209 2 869 2 752 2 400 2 754 4 568 2 883 12 405 2 407 4 341 4 762 2 
887 6 704 2 647 2 648 8 649 2 115 4 10 2 417 4 355 2 838 4 839 2 476 2 420 2 360 2 663 8 844 2 481 4 542 8 30 2 315 2 487 2 489 2 490 2 376 2 854 2 731 2 36 2 674 2 322 2 735 2 387 4 858 2 144 4 90 6 935 2 500 2 802 2 740 2 200 10 147 8 553 2 329 2 938 2 98 4 392 2 270 2 810 2 101 2 749 2 694 2 209 2 869 2 752 2 400 2 754 4 568 2 758 2 883 12 405 2 407 4 341 4 762 2 
392 2 740 2 308 2 
392 2 740 2 308 2 
577 2 576 2 708 4 115 2 10 2 833 2 838 4 594 2 356 2 839 2 13 6 237 2 358 4 476 4 477 2 844 2 481 2 482 2 127 2 484 2 847 2 30 4 376 2 853 4 731 2 378 6 36 4 735 2 381 2 495 2 39 2 858 2 260 2 387 2 262 2 144 4 500 4 863 2 740 6 147 4 620 6 502 2 504 4 392 4 152 2 506 4 395 2 47 2 749 2 869 2 752 4 275 2 871 2 877 2 754 4 881 4 756 4 883 24 405 4 407 4 762 4 642 2 887 16 647 2 165 6 648 16 649 2 524 2 417 4 178 4 180 2 529 2 303 4 660 4 532 2 663 6 308 2 542 12 434 2 546 2 322 2 327 2 90 12 935 2 91 2 802 2 551 2 200 6 448 8 450 2 808 2 204 2 810 2 101 2 564 2 208 2 209 2 814 2 943 2 212 2 698 2 341 6 343 2 
358 2 729 2 612 2 887 2 303 2 599 2 564 2 894 2 647 2 400 2 871 2 142 2 833 2 881 2 883 4 356 2 528 2 
577 2 576 2 578 2 708 4 115 2 10 2 838 4 594 2 839 2 13 6 237 2 358 2 476 2 477 2 844 2 481 2 482 2 127 2 847 2 30 4 376 2 853 4 731 2 378 6 36 4 735 2 381 2 495 2 39 2 858 2 260 2 387 2 262 2 144 4 500 4 863 4 740 6 147 4 620 6 502 2 504 4 392 4 152 2 506 4 395 2 47 2 749 2 869 2 752 4 275 2 874 2 877 2 754 4 881 4 756 4 883 20 405 4 407 4 762 4 642 4 887 14 647 2 165 6 648 16 649 2 524 2 417 4 774 2 178 4 180 2 303 4 660 4 532 2 184 2 663 6 308 2 542 12 434 2 546 2 322 4 327 2 90 12 935 2 802 2 551 2 200 6 448 8 450 2 808 2 810 2 101 2 208 2 209 2 814 2 212 2 698 2 568 2 341 6 343 2 569 2 
577 2 576 2 2 2 582 2 708 4 115 2 10 2 833 2 838 4 594 2 356 2 839 2 13 6 237 2 358 4 476 4 477 2 844 2 481 2 482 2 127 2 847 2 30 4 376 2 853 4 731 2 378 6 36 4 735 2 381 2 495 2 39 2 858 2 260 2 387 2 262 2 144 4 500 4 863 2 740 6 147 4 620 6 502 2 504 4 392 4 152 2 506 4 395 2 47 2 749 2 869 2 752 4 275 2 871 2 877 2 754 4 881 4 756 4 883 24 405 4 407 4 762 4 642 2 887 16 647 2 165 6 648 16 649 2 524 2 417 4 175 2 178 4 180 2 303 4 660 4 532 2 663 6 917 2 308 2 542 12 434 2 546 2 322 4 327 2 90 12 935 2 802 2 551 2 200 6 448 8 450 2 808 2 810 2 101 2 564 2 208 2 332 2 209 2 814 2 943 2 212 2 698 2 568 2 341 6 343 2 
701 6 573 2 224 18 8 2 707 2 228 4 230 2 831 10 353 6 585 2 235 4 122 2 123 2 715 2 839 2 13 4 473 6 358 2 359 2 18 4 717 2 477 2 842 2 19 4 719 6 241 2 482 12 604 18 486 2 370 4 847 2 371 2 30 4 31 2 849 6 32 2 851 2 609 2 375 2 136 6 256 2 381 2 139 2 858 2 260 18 860 6 861 10 500 4 863 6 620 4 741 2 42 2 621 2 507 2 394 10 510 2 47 2 749 2 751 24 629 2 868 2 869 2 630 6 274 2 635 4 875 2 877 12 882 6 756 2 883 28 760 6 637 2 639 2 641 2 885 2 886 2 887 22 412 1 888 2 59 4 767 2 645 2 646 2 893 2 768 2 647 2 770 4 769 4 294 6 414 2 771 6 896 4 649 2 170 2 651 4 773 4 654 2 655 2 778 22 908 2 419 2 180 2 911 2 423 2 660 2 531 2 532 2 915 4 183 2 427 2 187 2 788 2 535 2 668 2 189 8 670 2 920 4 537 4 428 4 671 2 313 10 81 2 672 2 84 2 437 2 925 2 546 2 930 10 929 2 88 2 327 2 92 2 93 4 803 2 551 2 448 2 96 2 450 2 808 2 557 6 810 2 561 2 208 2 565 2 814 2 942 2 336 2 216 8 214 2 215 2 338 2 700 2 341 6 
887 2 411 3 505 2 842 2 479 4 164 2 798 2 482 2 260 2 831 6 353 3 66 2 143 2 589 2 860 3 861 2 899 2 877 2 591 2 156 2 863 3 883 2 314 2 763 2 
887 2 411 2 505 2 842 2 479 4 164 2 798 2 482 2 260 2 831 6 353 2 66 2 143 2 589 2 860 2 861 2 899 2 877 2 591 2 156 2 863 2 883 2 314 2 763 2 
887 2 411 2 505 2 842 2 479 4 164 2 798 2 482 2 260 2 831 6 353 2 66 2 143 2 589 2 860 2 861 2 899 2 877 2 591 2 156 2 863 2 883 2 314 2 763 2 
887 4 545 3 892 2 645 2 521 2 797 3 225 4 260 2 736 2 416 4 589 2 860 3 712 2 801 2 863 3 805 2 93 2 15 2 689 2 809 4 842 2 748 2 867 2 50 2 870 4 846 2 535 2 279 2 336 2 216 5 428 2 370 2 312 4 791 3 883 10 284 2 849 4 460 4 375 2 570 6 
887 4 545 2 892 2 645 2 521 2 797 2 769 2 225 4 896 2 260 2 736 2 416 4 589 2 860 2 712 2 801 2 863 2 805 2 93 2 15 2 689 2 809 4 559 2 842 2 748 2 867 2 50 2 870 4 846 2 535 2 279 2 336 2 216 4 428 2 370 2 312 4 791 2 883 10 284 2 849 4 460 4 375 2 570 6 
887 4 545 2 892 2 645 2 521 2 797 2 769 2 225 4 896 2 260 2 736 2 416 4 589 2 860 2 712 2 801 2 863 2 805 2 93 2 15 2 689 2 809 4 559 2 842 2 748 2 867 2 50 2 870 4 846 2 535 2 279 2 336 2 216 4 428 2 370 2 312 4 791 2 883 10 284 2 849 4 460 4 375 2 570 6 
887 4 545 2 892 2 645 2 521 2 797 2 769 2 225 4 896 2 260 2 736 2 416 4 589 2 860 2 712 2 801 2 863 2 805 2 93 2 15 2 689 2 809 4 559 2 842 2 748 2 867 2 50 2 870 4 846 2 535 2 279 2 336 2 216 4 428 2 370 2 312 4 791 2 883 10 284 2 849 4 460 4 375 2 570 6 
887 4 545 2 892 2 645 2 521 2 797 2 769 4 225 4 896 4 260 2 736 2 416 4 589 2 860 2 712 2 801 2 863 2 805 2 93 2 15 2 689 2 809 4 559 4 842 2 748 2 867 2 50 2 870 4 846 2 535 2 279 2 336 2 216 4 428 2 370 2 312 4 791 2 883 10 284 2 849 4 460 4 375 2 570 6 
380 2 69 2 662 2 522 2 123 2 678 2 
468 2 76 2 739 2 662 2 6 2 947 2 771 2 
887 8 1 1 891 2 440 1 588 2 65 2 444 2 264 2 174 2 499 1 682 2 804 2 16 2 150 2 597 2 478 2 661 2 941 1 624 1 749 2 271 2 54 2 103 2 883 10 106 2 610 2 
887 6 136 4 161 2 645 6 352 2 769 4 799 2 896 2 652 2 93 6 235 2 359 2 451 2 841 2 559 2 78 2 870 4 367 4 535 6 279 2 216 16 428 6 635 2 336 6 457 2 370 6 883 6 31 2 849 12 375 6 
887 1 377 2 939 1 416 2 335 2 848 2 312 2 579 4 70 2 883 1 132 5 460 2 
377 2 416 2 335 2 848 2 312 2 579 4 70 2 132 2 460 2 
377 2 416 2 335 2 848 2 312 2 579 4 70 2 132 2 460 2 
377 2 20 2 77 2 579 2 365 2 335 2 416 2 265 2 848 2 312 2 70 2 460 2 132 2 
346 4 347 4 465 4 223 4 5 2 112 4 227 2 7 24 467 4 470 4 118 4 710 4 119 10 592 2 12 2 242 2 244 30 23 4 28 4 129 2 130 4 247 6 606 2 29 8 249 8 251 4 252 8 730 4 34 2 614 8 734 4 856 8 496 2 859 4 498 4 389 4 263 4 40 4 41 2 390 2 148 4 620 102 149 4 45 4 622 11 743 10 46 16 397 4 511 2 627 4 632 6 634 32 281 4 757 4 756 44 883 78 636 4 410 4 643 2 887 70 61 8 172 1 173 4 900 4 300 4 177 10 777 6 422 4 74 2 659 4 660 36 532 2 306 4 533 4 79 2 786 4 665 10 426 2 190 10 192 10 193 24 316 2 82 16 435 16 319 2 673 4 546 6 548 14 328 24 550 2 551 6 806 2 202 10 555 4 808 26 452 4 205 2 692 4 454 8 208 28 693 4 102 4 816 4 333 2 211 16 213 2 826 2 340 4 459 8 462 6 
346 4 0 2 887 26 348 2 112 2 467 4 171 2 471 2 119 6 592 2 777 2 12 2 909 2 74 2 660 14 532 2 242 2 244 6 786 4 665 2 28 2 129 2 606 2 247 2 130 2 193 8 316 2 730 2 435 14 794 2 614 6 673 4 546 2 496 2 859 2 261 10 498 2 263 4 197 2 550 2 551 2 390 2 620 40 202 6 95 2 43 2 808 12 743 6 622 2 205 2 509 2 692 2 208 12 627 4 632 4 944 2 756 14 757 4 883 28 
346 6 0 2 347 6 465 4 572 2 223 6 829 2 706 24 5 2 112 10 227 2 7 92 467 6 229 18 116 4 470 4 471 2 710 6 120 10 119 16 232 10 233 8 592 2 236 4 12 4 843 2 242 2 244 34 243 4 601 90 23 4 245 24 485 10 28 6 129 8 247 36 130 4 248 8 725 4 249 42 251 6 488 26 852 24 252 50 730 10 34 2 614 16 137 24 734 4 383 4 386 4 496 8 859 10 261 22 498 10 263 6 40 4 619 4 390 2 148 6 620 248 43 11 268 2 622 16 743 16 46 42 509 2 397 6 627 6 632 8 873 90 281 4 756 112 757 8 883 150 636 6 643 2 410 4 887 134 413 24 62 6 171 4 173 6 300 6 777 10 903 8 909 2 74 8 659 6 660 88 304 4 532 8 306 4 786 6 426 4 665 18 667 4 536 12 193 124 316 5 435 28 794 2 673 6 546 14 548 12 197 4 328 84 550 2 551 14 807 6 95 2 202 16 555 6 808 58 452 6 205 2 692 4 208 58 693 6 102 6 815 26 816 4 944 8 697 2 340 4 459 24 462 5 
346 2 887 44 464 2 348 2 108 2 110 2 766 2 413 2 60 2 111 4 706 2 112 2 166 2 467 2 116 2 64 2 120 2 67 4 119 4 232 2 592 2 593 2 777 2 177 2 418 2 71 2 903 2 909 2 74 2 660 20 532 2 242 2 480 2 24 2 786 2 665 2 245 2 188 2 485 2 28 2 190 2 921 4 129 2 247 2 606 2 430 2 192 2 250 2 193 6 316 2 611 2 730 2 435 36 255 2 673 2 546 2 140 2 496 2 859 2 326 4 89 2 498 2 263 2 934 6 862 2 681 2 447 2 550 2 41 2 551 2 390 2 201 2 620 48 806 2 202 4 742 2 808 6 97 2 622 2 743 4 205 2 100 2 560 2 208 6 750 2 628 2 627 2 632 6 756 20 883 46 409 2 
366 2 

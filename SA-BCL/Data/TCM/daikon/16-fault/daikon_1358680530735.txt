#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.util.NoSuchElementException 1 116 171 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 126 389 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V ERROR java.lang.ArrayIndexOutOfBoundsException 394 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 126 389 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 126 389 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 126 389 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 126 389 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 126 389 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 126 389 51 49 62 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 111 142 274 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 111 142 274 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 111 142 274 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 111 142 274 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eltsGteIndex([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:eq(JJ)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Ppt:Ppt()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Invariants:Invariants()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:pow(II)I
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[F)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltsEqual([II)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:gt(II)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V | OPERATOR | 20199 | - -> *
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:eq(II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:gcd([I)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1652 | = null
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:numIntArrays()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | ASSIGN | 10801 | = null
daikon.Quant:ne(II)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:lt(II)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:negate(I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltwiseLT([I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:lexLT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_samples()I
daikon.Quant:lexGT([I[I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ModBitTracker:num_vars()I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:sign(I)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:eltsGT([II)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltsGTE([II)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:eltsLT([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_ntk()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ModBitTracker:num_sets()I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.ValueTuple:size()I
utilMDE.OrderedPairIterator:setnext1()V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:union([I[I)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | STATEMENT | 32359 | stmt -> ;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:concat([I[I)[I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaCharStream:ReadByte()C
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ProglangType:dimensions()I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:lte(II)Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern:intern([J)[J
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName:hashCode()I
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0:arity()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | ASSIGN | 17372 | = null
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:gte(II)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaCharStream:FillBuff()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:eq(FF)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:eq(DD)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsGtIndex([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177183 | if (x) -> if (!x)
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:memberOf(F[D)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:gcd(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
367 2 355 2 55 4 8 2 281 2 118 2 2 2 88 2 109 2 
9 2 234 2 94 2 264 6 381 6 246 2 130 2 307 2 30 2 308 2 179 6 
203 2 281 2 90 2 343 6 326 6 316 4 88 2 6 2 58 2 269 6 101 6 255 2 218 4 
18 6 281 6 74 16 365 4 76 4 208 12 286 10 290 16 398 8 56 29 339 2 87 2 88 6 144 2 217 26 32 10 12 2 37 8 352 6 299 2 275 16 149 4 382 2 247 8 41 10 129 4 225 2 152 10 277 10 45 8 
132 4 350 6 
195 2 
107 2 364 2 2 2 260 2 110 2 158 2 213 2 374 4 120 2 170 2 327 4 379 2 223 2 68 2 15 2 332 2 281 4 181 2 139 2 392 2 237 2 184 2 80 2 291 2 293 2 143 2 188 2 29 2 88 4 31 2 145 2 406 2 33 2 93 2 36 2 299 2 38 2 40 2 303 4 305 4 251 2 43 2 44 2 201 2 
18 4 281 4 74 20 365 2 77 2 286 14 108 8 208 16 140 6 335 6 290 20 81 4 398 6 27 4 370 2 373 4 56 40 339 2 341 4 88 4 7 2 217 34 32 14 324 6 352 4 275 20 194 4 41 14 247 14 152 14 383 4 277 6 359 2 
406 2 369 2 323 2 
407 10 147 2 363 2 258 2 351 2 366 2 97 2 354 2 115 2 293 2 67 2 226 2 384 22 228 2 
18 2 231 2 22 2 74 2 365 2 286 2 208 2 290 2 318 2 56 6 119 2 217 4 166 2 32 2 121 2 92 2 275 2 41 2 247 2 356 2 152 2 277 4 279 2 
32 4 74 8 208 4 286 4 140 6 149 2 275 8 335 6 290 8 41 4 14 2 152 4 383 4 56 16 341 4 215 2 217 12 
19 2 103 2 204 2 73 2 182 4 282 2 283 2 1 2 207 52 393 4 25 6 54 2 369 6 114 10 292 4 116 4 241 2 4 2 340 2 294 2 295 2 296 2 406 6 219 2 33 2 323 2 171 2 301 4 411 10 98 2 150 2 305 2 358 2 227 4 253 4 16 2 
271 2 205 2 167 2 52 2 195 2 248 2 163 2 321 2 146 2 47 2 
156 5 317 2 211 2 371 2 319 2 168 1 126 2 385 2 389 2 180 1 281 4 21 4 236 2 395 2 84 2 88 4 89 2 91 2 298 2 95 2 193 2 357 4 196 4 306 2 46 2 
88 2 26 2 
401 2 361 2 88 4 
309 2 
310 2 105 2 106 2 233 2 257 18 155 2 235 2 313 18 289 2 396 2 83 2 161 2 372 2 162 2 266 2 117 2 57 2 404 2 165 2 244 2 10 2 220 2 34 2 377 2 325 2 348 2 380 2 96 2 39 2 65 2 329 2 276 2 330 18 197 2 249 2 413 2 200 2 250 2 252 2 17 2 360 2 71 2 
137 1 261 2 100 2 79 2 
72 2 100 2 
406 2 129 2 85 2 312 2 100 2 133 2 378 2 
86 2 100 2 133 2 
302 2 100 2 133 2 
127 2 79 2 24 2 
100 2 133 2 
127 2 63 2 
304 2 100 2 
127 2 3 2 79 2 
375 2 48 2 79 2 
66 2 35 2 79 2 
334 2 346 2 79 2 
148 2 124 2 79 2 
127 2 42 2 
336 2 100 2 
375 2 173 2 
66 2 70 2 
240 2 346 2 
394 2 
127 2 259 2 
0 2 148 2 
390 2 346 2 
128 2 66 2 
375 2 224 2 
127 2 3 2 79 2 209 2 
127 2 399 2 3 2 79 2 209 2 
127 2 79 2 229 2 
127 2 159 2 79 2 
232 2 183 2 185 2 153 2 
102 2 11 4 409 2 206 2 245 2 59 2 221 2 169 2 13 2 347 2 262 2 82 2 99 2 384 6 5 2 386 2 268 2 388 4 
151 2 79 2 
406 2 311 2 312 2 405 2 
406 2 85 2 311 2 312 2 405 2 270 2 
406 2 129 2 285 2 312 2 100 2 133 2 
186 2 392 2 
406 2 113 2 129 2 312 2 
346 2 216 2 
148 2 238 2 
375 2 242 2 
66 2 28 2 
66 2 148 2 177 2 
66 2 148 2 403 2 
66 2 148 2 191 2 
66 2 75 2 148 2 
312 2 288 2 210 2 368 6 338 2 406 2 176 2 134 6 
127 2 64 2 
122 2 
281 4 21 4 156 4 236 2 317 2 211 2 371 2 319 2 212 2 84 2 88 4 89 2 91 2 298 2 95 2 126 2 193 2 357 4 196 4 306 2 385 2 46 2 389 2 
156 6 317 2 211 2 371 2 319 2 212 2 168 2 126 2 385 2 389 2 180 2 281 4 21 4 236 2 84 2 88 4 89 2 91 2 298 2 95 2 193 2 357 4 196 4 306 2 46 2 
331 2 387 2 172 2 
331 2 387 2 172 2 
281 4 21 4 156 4 236 2 317 2 211 2 371 2 319 2 212 2 84 2 88 4 89 2 91 2 298 2 95 2 126 2 193 2 357 4 196 4 306 2 385 2 46 2 389 2 
156 6 317 2 211 2 371 2 319 2 212 2 168 2 126 2 385 2 389 2 180 2 281 4 21 4 236 2 84 2 88 4 89 2 91 2 298 2 95 2 193 2 357 4 196 4 306 2 46 2 
156 5 317 2 211 2 371 2 319 2 212 2 168 1 126 2 385 2 389 2 180 1 281 4 21 4 236 2 84 2 88 4 89 2 91 2 298 2 95 2 193 2 357 4 196 4 306 2 46 2 
49 2 104 2 51 2 156 5 317 2 211 2 371 2 319 2 267 2 168 1 125 2 273 2 126 2 62 2 278 2 385 2 389 2 180 1 281 4 21 4 391 2 236 2 287 2 84 2 88 8 89 2 91 2 298 2 345 2 95 2 193 2 357 4 196 4 198 2 306 2 46 2 
154 2 53 2 78 2 349 2 328 2 243 2 
141 2 175 2 256 2 412 2 53 2 178 2 315 2 
202 2 230 2 333 2 281 8 362 2 138 2 284 2 23 2 263 2 314 2 54 1 157 2 337 1 160 2 265 2 402 1 320 2 88 10 190 2 295 1 408 1 297 2 353 2 174 2 254 2 280 2 
50 2 281 6 107 2 74 6 237 2 286 6 108 2 140 4 290 6 112 2 398 4 27 2 239 2 56 17 341 2 88 6 217 12 376 2 32 6 324 4 222 2 275 6 352 2 300 2 61 2 41 6 152 6 
20 2 272 2 344 2 60 2 397 2 400 2 131 3 187 2 199 2 69 2 192 2 164 2 135 2 
136 1 281 1 20 2 272 2 344 2 60 2 410 2 397 2 400 2 131 6 214 2 187 2 199 2 88 1 69 2 192 2 164 4 135 2 
20 4 272 2 344 2 60 2 410 2 397 2 400 4 131 6 214 2 187 4 199 2 69 2 192 2 164 4 135 2 
136 1 281 1 20 8 272 2 344 2 60 2 410 8 397 2 400 8 131 10 214 6 187 8 199 2 88 1 69 2 192 2 164 4 135 2 
111 2 322 1 274 2 142 2 189 2 342 1 
142 2 189 2 274 2 111 2 
142 2 189 2 274 2 111 2 
142 2 189 2 274 2 111 2 
123 2 

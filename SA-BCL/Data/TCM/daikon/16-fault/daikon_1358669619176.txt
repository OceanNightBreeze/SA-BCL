#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 247 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 169 92 182 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (316,327) (76,704) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 169 92 182 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 169 92 182 
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 169 92 182 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 169 92 182 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 169 92 182 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 189 10 340 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 458 91 540 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (316,327) (316,327) 313 681 139 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 313 681 139 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 313 681 139 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.ProglangType:dimensions()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:gt(II)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfo:isPrestate()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd([I)I
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_ntk()I
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ModBitTracker:ModBitTracker(I)V | CONDITION | 2376 | if (x) -> if (!x)
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ProglangType:isArray()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eltsLtIndex([I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D | OPERATOR | 8959 | <= -> ==
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ValueTuple:size()I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:eq(DD)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.Invariants:Invariants()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:memberOf(F[D)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quantify.Constant:Constant(I)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:lte(II)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:gte(II)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:min([I)I | CONSTANT | 860 | 0 -> -1
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName; | RETURN | 62448 | return null
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.ProglangType:isPointerFileRep()Z
utilMDE.ArraysMDE:noDuplicates([I)Z | CONDITION | 57307 | if (x) -> if (!x)
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:hashCode()I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:eltwiseLT([I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:eq(II)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.ProglangType:isScalar()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | RETURN | 21332 | return null
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfo:new_ppt()V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V | STATEMENT | 20058 | stmt -> ;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfo:isPointer()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:eq(FF)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | RETURN | 20097 | return null
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | STATEMENT | 46499 | stmt -> ;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:subsetOf([F[D)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfo:isIOAArray()Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoAux:hashCode()I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:memberOf(I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token; | CONDITION | 213180 | if (x) -> if (!x)
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7264 | = null
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:union([I[I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Intern:intern([I)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
622 2 584 2 641 2 316 2 504 4 327 2 72 2 570 2 674 2 
403 2 138 6 391 6 127 2 495 2 37 2 356 2 357 2 263 2 432 2 121 6 
653 2 56 6 374 6 555 2 647 4 324 6 702 2 316 2 16 4 660 2 327 2 61 6 227 2 
375 10 404 10 22 4 532 2 655 2 736 2 183 12 117 10 365 4 27 16 210 2 50 26 739 6 327 6 349 29 388 10 52 2 55 8 721 6 273 2 519 8 438 10 394 4 417 2 316 6 106 8 694 8 505 16 290 16 40 4 
174 6 269 4 
180 2 
247 2 
375 4 404 4 438 4 183 4 618 4 172 8 456 4 316 4 694 2 50 4 327 4 349 5 387 2 388 4 471 2 
483 2 524 2 249 2 
410 10 13 2 583 2 518 2 638 2 603 2 616 2 89 2 593 22 548 2 173 2 222 2 685 2 401 2 
375 2 404 2 561 2 183 2 408 2 117 4 365 2 27 2 90 2 50 4 739 2 388 2 349 6 34 2 187 2 438 2 745 2 223 2 694 2 359 2 505 2 290 2 442 2 
123 4 375 4 404 4 370 6 438 4 576 2 394 2 183 5 620 6 27 8 703 4 50 12 505 8 388 4 290 8 349 14 293 2 
134 2 676 4 697 2 1 2 200 2 376 2 511 2 234 4 512 4 451 4 735 62 564 14 115 4 70 2 302 2 25 2 483 2 383 4 683 2 49 4 240 4 740 2 457 2 367 4 214 4 246 4 275 10 574 2 329 10 547 2 249 6 747 4 395 2 466 2 335 2 315 2 524 8 695 2 17 2 107 4 
180 2 587 2 159 2 163 2 73 2 248 2 150 2 101 2 195 2 693 2 
677 2 426 2 343 2 182 2 686 2 92 2 645 2 146 2 97 2 316 8 398 4 358 4 317 2 731 2 510 2 204 4 619 2 327 8 32 2 169 2 287 2 629 4 580 2 295 2 
184 2 327 2 
76 2 667 2 327 4 704 2 
423 2 
156 2 637 2 259 18 377 2 588 2 615 2 589 2 112 18 87 2 406 2 301 2 640 2 617 2 479 2 142 2 535 2 28 2 119 2 120 2 30 2 487 2 95 2 165 2 389 2 688 2 276 2 665 2 436 2 126 2 330 2 545 2 147 2 725 2 440 18 218 2 194 2 750 2 82 2 579 2 651 2 527 2 551 2 294 2 
368 2 493 1 672 2 371 2 
131 2 368 2 
368 2 524 2 22 2 39 2 571 2 213 2 592 2 
368 2 486 2 592 2 
368 2 489 2 592 2 
595 2 304 2 371 2 
368 2 592 2 
334 2 595 2 
368 2 99 2 
595 2 371 2 54 2 
241 2 371 2 212 2 
232 2 5 2 371 2 
565 2 224 2 371 2 
627 2 202 2 371 2 
595 2 573 2 
372 2 368 2 
361 2 241 2 
66 2 5 2 
26 2 224 2 
202 2 611 2 
595 2 657 2 
151 2 202 2 
224 2 550 2 
298 2 5 2 
71 2 241 2 
534 2 595 2 371 2 54 2 
534 2 186 2 595 2 371 2 54 2 
595 2 29 2 371 2 
595 2 371 2 610 2 
698 2 216 2 724 2 199 2 
524 2 427 2 443 2 213 2 
524 2 427 2 443 2 571 2 213 2 675 2 
368 2 650 2 524 2 22 2 213 2 592 2 
310 2 321 2 
274 2 524 2 22 2 213 2 
224 2 299 2 
530 2 202 2 
241 2 558 2 
5 2 322 2 
202 2 5 2 717 2 
202 2 728 2 5 2 
202 2 105 2 5 2 
202 2 414 2 5 2 
207 6 242 2 213 2 277 2 280 6 546 2 524 2 631 2 
595 2 668 2 
18 2 20 2 135 4 21 2 44 2 448 2 449 2 110 2 353 2 494 2 160 2 192 2 430 2 593 6 526 2 289 2 597 4 31 2 
352 2 371 2 
568 2 
731 2 677 2 510 2 426 2 343 2 182 2 204 4 619 2 686 2 327 8 92 2 32 2 125 2 645 2 146 2 169 2 287 2 358 4 398 4 316 8 317 2 629 4 580 2 295 2 
731 2 19 1 677 2 510 2 426 2 343 2 182 2 204 5 619 2 686 2 327 8 92 2 32 2 125 2 645 2 146 2 169 2 59 1 287 2 358 4 398 4 316 8 317 2 629 4 580 2 295 2 
677 2 426 2 343 2 182 2 686 2 92 2 645 2 146 2 59 1 316 8 398 4 358 4 317 2 731 2 19 1 510 2 204 5 619 2 327 8 32 2 125 2 169 2 287 2 629 4 580 2 295 2 
677 2 426 2 343 2 182 2 686 2 92 2 645 2 146 2 59 2 316 8 398 4 358 4 317 2 731 2 19 2 510 2 204 6 619 2 327 8 32 2 125 2 169 2 287 2 629 4 580 2 295 2 
731 2 19 1 677 2 510 2 426 2 343 2 182 2 204 5 619 2 686 2 327 8 92 2 32 2 125 2 645 2 146 2 169 2 59 1 287 2 358 4 398 4 316 8 317 2 629 4 580 2 295 2 
177 2 2 6 178 2 375 4 3 2 179 2 181 4 4 2 378 2 182 2 590 4 591 2 183 6 381 2 382 14 7 2 594 2 385 2 384 2 8 4 387 2 388 4 10 2 598 2 11 10 185 2 599 2 600 6 12 2 601 2 189 2 390 3 392 2 190 6 393 2 605 2 396 2 397 2 606 6 607 1 398 6 608 18 195 1 609 2 196 6 402 4 19 6 614 12 404 4 23 2 203 2 205 4 204 14 206 4 619 4 208 2 27 8 620 6 211 2 621 3 32 2 411 2 412 2 215 2 623 4 35 2 413 50 415 6 624 2 625 4 217 2 626 1 221 3 225 64 418 2 629 6 38 2 420 2 226 2 421 6 632 2 41 4 636 24 634 2 42 2 424 6 231 3 425 10 46 2 45 2 639 2 235 4 429 12 431 2 237 2 48 2 238 4 239 62 49 2 240 2 50 12 433 2 53 2 245 2 434 4 435 2 644 6 646 6 438 4 648 4 439 4 58 24 251 6 252 10 59 6 441 8 253 2 60 14 254 8 255 2 63 30 652 2 447 2 260 2 68 3 452 2 658 2 264 2 266 4 659 2 455 4 662 4 270 2 72 4 271 2 664 2 272 2 74 16 75 9 666 2 667 2 279 2 460 2 77 2 281 2 462 4 461 2 282 2 463 2 283 26 284 2 285 2 468 4 287 2 670 2 469 18 290 8 292 2 470 10 295 4 297 2 84 2 676 2 473 2 677 2 678 2 86 2 680 2 474 2 300 3 475 2 477 2 478 2 682 36 88 2 480 2 481 2 482 16 684 10 303 30 485 2 305 2 92 2 687 4 488 4 491 2 96 2 492 4 689 2 690 12 691 2 499 2 100 2 500 2 501 2 692 2 104 2 316 32 106 6 317 4 318 4 694 4 506 2 505 8 696 2 108 2 507 2 508 2 109 6 320 4 510 4 701 2 323 3 113 2 114 2 325 46 115 2 116 2 118 18 326 12 514 2 703 4 327 48 516 21 515 3 122 2 128 2 129 2 331 2 332 30 130 4 520 2 521 4 522 4 132 2 523 2 525 4 133 2 337 2 528 2 338 8 339 2 340 2 136 4 342 2 531 4 344 3 345 2 712 4 346 2 347 2 533 2 141 20 715 4 536 2 716 2 538 2 349 14 719 2 350 2 541 2 720 2 542 6 144 2 721 4 543 2 145 4 146 4 723 2 149 2 726 2 152 2 153 2 358 6 549 2 729 3 730 16 155 1 552 4 731 2 732 8 553 14 362 2 556 4 733 2 560 2 559 2 159 1 158 6 562 4 363 6 364 2 737 4 566 2 741 24 164 4 367 2 742 2 744 4 167 2 575 2 169 2 171 2 748 9 749 28 373 2 577 2 751 2 753 4 580 2 582 6 
445 2 176 2 450 2 312 2 245 2 409 2 
445 2 484 2 111 2 354 2 419 2 469 2 148 2 
85 2 328 2 369 1 376 1 743 2 437 1 69 1 79 2 314 2 102 2 302 1 316 8 267 2 671 2 91 2 319 2 327 10 540 2 458 2 32 2 
257 2 375 6 404 6 428 2 183 1 618 2 481 2 620 4 27 4 456 2 50 10 703 2 327 6 349 14 388 6 244 2 596 2 94 2 144 2 721 2 145 2 57 2 438 6 172 2 316 6 106 4 505 4 290 4 
529 2 2 2 709 2 124 7 311 2 711 2 476 2 496 4 262 1 604 2 161 2 714 2 606 2 316 1 327 1 569 2 421 2 422 2 
529 4 2 2 709 2 124 6 311 2 711 4 476 2 496 4 604 2 161 2 714 4 606 2 569 2 421 2 422 2 
529 8 2 2 709 2 124 10 311 2 711 8 476 2 496 4 262 1 604 6 161 2 714 8 606 2 316 1 327 1 569 8 421 2 422 2 
529 2 2 2 709 2 124 2 311 2 711 2 476 2 496 2 161 2 714 2 606 2 421 2 422 2 
472 2 585 2 679 2 4 2 379 2 681 2 380 5 93 4 306 2 490 2 309 2 313 2 398 12 316 30 502 2 503 2 317 6 197 4 612 2 613 4 19 4 201 2 699 2 700 12 24 2 204 24 619 6 327 34 336 2 416 4 523 2 707 2 228 2 229 2 708 2 139 2 233 2 713 2 348 2 236 2 539 1 718 2 544 2 722 2 59 4 358 14 62 4 64 2 444 2 652 2 258 2 65 2 557 2 157 2 563 2 162 2 738 2 567 2 268 2 366 2 459 2 667 2 168 2 669 2 286 2 578 2 291 4 752 2 581 2 295 4 
0 2 633 2 229 2 635 2 230 2 43 2 710 2 139 2 233 2 4 2 140 2 681 2 6 2 51 2 642 2 93 20 351 2 188 2 309 2 602 4 98 2 355 2 313 2 250 2 59 3 316 28 398 12 358 12 503 2 317 2 198 4 652 2 19 3 554 2 509 2 700 2 654 2 65 2 405 2 734 4 24 2 261 2 656 2 204 27 407 2 619 2 661 2 327 28 517 2 464 2 465 2 333 2 628 2 220 2 288 2 523 2 175 2 673 2 83 2 581 2 295 2 
472 4 585 5 679 6 586 4 4 2 379 4 380 10 681 2 386 4 93 14 306 6 307 4 490 4 498 4 313 2 191 4 193 2 103 4 398 28 316 62 503 6 400 2 317 6 197 6 612 2 613 18 201 20 19 18 699 4 700 18 204 74 619 6 209 2 327 70 705 2 36 2 706 4 219 2 416 10 523 2 630 4 707 12 229 6 341 2 137 16 233 6 139 2 47 2 348 4 143 4 243 10 643 6 722 4 59 18 358 34 154 2 360 16 62 6 444 4 64 6 652 2 258 4 446 4 65 2 557 4 157 4 67 20 563 4 162 6 454 4 738 4 265 4 567 4 268 4 661 2 366 4 663 6 459 4 572 10 278 2 166 12 78 4 168 4 170 4 286 2 80 10 467 4 81 4 578 4 752 2 291 18 581 2 295 2 
229 6 708 10 139 2 233 6 4 2 681 2 380 2 236 2 537 2 9 4 93 14 306 2 308 2 544 2 722 2 497 4 14 2 313 2 649 2 15 6 59 9 727 2 316 26 398 14 358 14 502 2 503 6 399 2 400 2 317 2 197 2 256 2 64 6 652 2 19 9 201 10 554 4 700 8 557 2 65 2 24 2 453 2 563 2 204 37 513 4 619 2 209 4 661 2 327 28 33 2 168 2 746 4 465 4 669 2 219 2 628 4 416 2 523 2 581 2 228 2 295 2 
296 2 

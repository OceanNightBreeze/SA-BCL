#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (390,560) (390,560) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 468 81 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (177,790) 442 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 74 74 290 290 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 183 (200,729) 331 (276,488) (200,729) 765 (276,488) 793 457 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 183 (200,729) 331 (276,488) (200,729) 765 (276,488) 793 457 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 183 (200,729) 331 (276,488) (200,729) 765 (276,488) 793 457 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 263 (417,794) (106,716) (106,716) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V ERROR java.lang.reflect.InvocationTargetException 
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 829 152 138 424 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 713 73 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 521 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 548 441 612 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (390,560) (390,560) 518 548 441 612 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ModBitTracker:split(I)I
utilMDE.Intern:intern([J)[J
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Invariant:justified()Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakHasherMap:size()I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[F)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltwiseLTE([I)Z
daikon.ProglangType:dimensions()I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:logOn()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 5636 | = null
daikon.Quant:union([I[I)[I
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName:hashCode()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptSlice1:arity()I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10778 | 3 -> 0
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptSlice0:arity()I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:lt(II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfo:new_ppt()V
daikon.Quant:eq(FF)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.ProglangType:isArray()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaCharStream:FillBuff()V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ModBitTracker:num_samples()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:lte(II)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 18478 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptSlice1:num_samples()I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.RootNode:RootNode()V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | ASSIGN | 25295 | = null
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey; | RETURN | 6660 | return null
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eq(II)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:eltsEqual([II)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53476 | = null
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaCharStream:readChar()C
daikon.Quant:subsetOf([J[J)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:Ppt()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:gt(II)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | RETURN | 21417 | return null
utilMDE.MathMDE:pow(II)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | OPERATOR | 36891 | != -> ==
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:memberOf(S[S)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:size()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.PptSlice2:arity()I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24039 | return null
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.ProglangType:isScalar()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONSTANT | 127547 | 2 -> -1
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaCharStream:getEndColumn()I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:relate_var()V
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant:logDetail()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:subsetOf([D[D)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
390 2 786 4 139 2 204 2 588 2 560 2 782 2 730 2 694 2 
293 6 199 2 446 2 316 2 568 2 366 2 347 6 799 6 332 2 271 2 155 2 
97 2 831 4 809 6 610 2 553 2 89 6 390 2 569 6 846 2 266 6 560 2 462 2 651 4 
755 8 807 8 337 2 497 2 498 2 555 8 528 8 243 2 706 8 560 4 648 2 708 2 352 8 622 2 253 8 626 6 387 2 772 6 277 9 456 6 390 4 599 2 628 8 49 8 
295 4 255 6 
797 2 
755 2 807 2 163 2 555 2 344 2 240 2 528 2 186 2 706 2 650 2 352 2 172 2 253 2 626 2 40 2 772 2 277 4 456 2 628 2 392 2 47 2 49 2 
755 4 352 8 452 4 830 4 807 8 313 2 253 8 387 2 555 8 277 10 528 8 78 4 706 8 430 4 544 2 49 8 
160 4 465 6 212 4 552 2 470 2 214 4 423 4 670 2 764 4 734 2 427 14 556 2 617 2 848 2 11 2 270 2 299 2 510 4 790 8 474 4 169 4 683 2 769 2 513 2 534 2 437 4 357 4 385 2 795 10 388 2 627 4 823 10 598 2 256 2 486 62 631 2 545 4 209 4 696 2 828 2 
53 2 468 2 797 2 27 2 402 2 81 2 284 2 61 2 22 2 151 2 397 2 
805 2 467 4 315 2 4 2 585 2 429 2 319 2 223 2 818 2 111 2 384 2 479 2 822 2 64 2 438 2 386 2 390 4 600 2 177 2 717 2 545 4 287 2 493 2 782 2 785 2 732 4 556 2 558 2 678 2 507 2 560 4 191 2 404 2 790 2 405 2 302 2 355 2 86 2 567 2 412 4 798 2 856 2 209 2 154 2 
755 4 807 4 555 4 528 4 706 4 560 4 352 4 116 2 253 4 277 5 714 8 390 4 628 2 693 2 574 4 49 4 159 4 
465 2 790 2 828 2 
109 10 353 2 697 2 520 2 836 22 374 2 143 2 248 2 177 2 58 2 737 2 665 2 634 2 591 2 
636 2 0 14 96 2 1 2 211 6 525 2 2 2 101 4 102 3 8 3 104 1 10 2 107 2 431 21 14 2 225 2 224 2 433 2 652 28 653 2 321 14 117 2 323 2 324 2 326 2 122 3 774 2 20 4 664 2 21 1 126 2 336 2 779 2 25 14 132 2 783 3 784 2 26 1 674 6 247 6 28 2 559 1 250 2 560 32 564 1 682 2 31 21 137 2 139 2 354 2 254 2 358 3 688 1 361 1 257 2 146 2 571 1 367 2 148 2 48 1 50 2 466 4 262 1 372 3 701 2 469 2 162 1 164 5 812 2 60 2 268 2 380 2 473 1 815 2 820 2 383 2 273 6 171 1 595 1 274 2 596 2 597 2 390 30 179 1 490 3 719 2 826 2 827 2 833 2 607 2 608 2 185 2 187 3 733 2 505 2 616 2 619 2 193 2 194 2 84 2 620 2 301 2 195 4 408 3 744 3 624 1 197 4 198 2 88 2 305 2 203 2 308 2 310 14 857 1 517 2 633 2 210 27 
773 2 
414 2 560 2 
578 2 428 2 560 4 
289 2 757 2 524 2 839 2 133 2 314 2 843 2 642 2 188 2 787 2 645 18 297 18 506 2 814 2 589 2 269 2 192 2 272 2 432 2 221 2 680 2 655 2 140 2 18 2 275 2 480 2 228 2 686 2 853 2 230 2 119 18 19 2 232 2 573 2 283 2 539 2 391 2 492 2 150 2 751 2 153 2 335 2 
561 2 669 2 625 2 56 1 
258 2 561 2 
442 2 69 2 409 2 790 2 
756 2 442 2 184 2 69 2 409 2 790 2 
243 2 516 2 442 2 436 2 561 2 790 2 
7 2 86 2 
442 2 782 2 790 2 325 2 
413 2 395 2 
511 2 265 2 
238 2 740 2 
692 2 348 2 
265 2 692 2 98 2 
265 2 692 2 334 2 
723 2 692 2 265 2 
251 2 692 2 265 2 
584 2 339 6 790 2 684 2 356 2 229 2 747 6 442 2 
855 2 549 2 
243 2 756 2 442 2 436 2 561 2 790 2 721 2 
216 2 436 2 561 2 
436 2 561 2 45 2 
855 2 669 2 450 2 
436 2 561 2 
579 2 855 2 
561 2 847 2 
855 2 629 2 669 2 
669 2 238 2 659 2 
692 2 566 2 669 2 
413 2 147 2 669 2 
265 2 669 2 54 2 
855 2 196 2 
303 2 561 2 
99 2 238 2 
90 2 692 2 
413 2 760 2 
265 2 174 2 
398 2 855 2 
668 2 265 2 
413 2 821 2 
692 2 611 2 
72 2 238 2 
667 2 855 2 629 2 669 2 
667 2 580 2 855 2 629 2 669 2 
855 2 669 2 475 2 
435 2 855 2 669 2 
494 2 329 2 557 2 368 2 
834 2 63 2 836 6 118 2 359 4 306 2 842 2 246 2 42 2 426 2 646 4 180 2 677 2 489 2 707 2 720 2 406 2 168 2 
669 2 811 2 
812 2 
636 2 211 2 525 8 101 4 215 2 104 2 12 2 14 2 225 2 224 2 652 6 653 2 321 6 114 2 657 2 323 2 774 6 20 4 664 2 666 2 126 2 779 8 26 2 241 2 674 6 247 4 28 2 560 26 137 2 139 2 454 2 364 2 571 4 44 2 157 2 50 2 51 2 810 2 471 2 378 2 268 2 166 4 815 2 273 2 596 2 597 2 390 26 719 2 290 2 833 2 835 4 495 2 496 2 608 2 291 2 74 2 185 2 502 2 501 2 294 2 190 2 616 2 619 2 83 2 195 4 304 2 197 4 88 2 198 2 305 2 411 4 203 2 205 2 750 2 210 4 635 2 
636 2 211 2 525 8 101 4 215 2 104 2 12 2 14 2 225 2 224 2 652 6 653 2 321 6 114 2 657 2 323 2 774 6 20 4 664 2 666 2 776 2 126 2 779 8 26 2 241 2 674 6 247 5 28 2 560 26 137 2 139 2 454 2 364 2 571 2 44 2 157 2 50 2 51 2 464 2 810 2 471 2 378 2 268 2 166 4 815 2 273 2 596 2 597 2 390 26 719 2 393 2 833 2 835 4 495 2 496 2 608 2 291 2 185 2 502 2 501 2 294 2 844 2 190 2 616 2 619 2 301 1 195 4 304 2 197 4 88 2 198 2 305 2 411 4 203 2 205 2 750 2 517 1 210 4 635 2 
637 2 804 2 421 4 263 2 101 2 765 2 103 2 106 2 815 2 271 4 590 2 13 8 224 2 819 2 476 2 17 8 227 4 323 2 597 2 276 2 660 2 390 6 68 2 485 2 716 2 488 2 540 4 234 4 547 2 23 2 396 10 126 2 608 2 130 2 292 2 342 2 293 6 446 4 614 2 674 4 347 6 560 12 562 2 792 2 195 2 34 2 793 2 37 2 87 4 88 2 199 2 200 2 457 2 365 2 366 2 799 6 461 2 311 2 417 2 156 4 
637 2 421 4 101 2 263 2 765 2 316 2 103 2 106 2 815 2 271 4 590 2 224 2 13 8 819 2 476 2 17 8 227 4 323 2 597 2 276 2 660 2 390 6 68 2 538 4 485 2 716 2 488 2 540 4 234 4 235 2 547 2 23 2 396 10 126 2 608 2 130 2 292 2 342 2 293 6 446 4 674 4 347 8 560 12 562 2 792 2 195 2 34 2 793 2 745 2 37 2 87 4 88 2 199 2 200 2 457 2 365 2 366 2 799 8 461 2 311 2 417 2 156 4 
421 2 476 2 793 2 37 2 292 2 293 2 446 2 457 2 716 2 488 2 106 2 540 4 347 2 271 2 417 2 23 2 792 2 156 4 
637 2 804 2 421 4 263 2 101 2 765 2 316 2 103 2 106 2 815 2 271 4 590 2 13 4 224 2 819 2 476 2 17 4 227 4 323 2 597 2 276 2 660 2 390 6 68 2 485 2 716 2 488 2 540 4 234 4 547 2 23 2 396 6 126 2 608 2 130 2 292 2 342 2 293 4 446 4 614 2 674 4 347 6 560 12 562 2 792 2 195 2 34 2 793 2 37 2 87 4 88 2 200 2 457 2 365 2 366 2 799 6 461 2 311 2 417 2 156 4 
637 2 804 2 421 4 263 2 101 2 765 2 103 2 106 2 815 2 271 4 590 2 13 4 224 2 819 2 476 2 17 4 227 4 323 2 597 2 276 2 660 2 390 6 68 2 485 2 716 2 488 2 540 4 332 2 234 4 547 2 23 2 396 6 126 2 608 2 130 2 292 2 342 2 293 6 446 4 614 2 674 4 347 4 560 12 562 2 792 2 195 2 34 2 793 2 37 2 87 4 88 2 200 2 457 2 365 2 366 2 799 6 461 2 311 2 417 2 156 4 
637 2 804 2 421 4 263 2 101 2 765 2 103 2 106 2 815 2 271 4 590 2 13 8 224 2 819 2 476 2 17 4 227 4 323 2 597 2 276 2 660 2 390 6 68 2 485 2 716 2 488 2 540 4 234 4 547 2 23 2 396 6 126 2 608 2 130 2 292 2 342 2 293 6 446 4 614 2 674 4 347 6 560 12 562 2 792 2 195 2 34 2 793 2 37 2 87 4 88 2 199 2 200 2 457 2 365 2 366 2 799 6 461 2 311 2 417 2 156 4 
637 2 804 2 421 4 101 2 263 2 765 2 103 2 106 2 815 2 271 4 590 2 13 8 224 2 819 2 476 2 17 8 227 4 323 2 597 2 276 2 660 2 390 6 68 2 485 2 716 2 488 2 540 4 332 2 234 4 547 2 23 2 396 10 126 2 608 2 130 2 292 2 342 2 293 8 446 4 614 2 674 4 347 6 560 12 562 2 792 2 195 2 34 2 793 2 37 2 87 4 88 2 199 2 200 2 457 2 365 2 366 2 799 8 461 2 311 2 417 2 156 4 
637 2 804 2 421 4 263 2 101 2 765 2 103 2 106 2 815 2 271 4 590 2 13 8 224 2 819 2 476 2 17 8 227 4 323 2 597 2 276 2 660 2 390 6 68 2 485 2 716 2 488 2 540 4 234 4 547 2 23 2 396 10 126 2 608 2 130 2 292 2 342 2 293 6 446 4 614 2 674 4 347 6 560 12 562 2 792 2 195 2 34 2 793 2 37 2 87 4 88 2 199 2 200 2 457 2 365 2 366 2 799 6 461 2 311 2 417 2 156 4 
636 2 637 2 421 4 211 2 3 1 428 4 644 1 649 4 224 2 225 2 13 2 14 2 652 8 653 2 434 2 226 4 227 8 656 2 440 1 662 4 663 2 20 4 664 2 234 6 23 2 446 4 674 6 247 6 28 2 676 1 681 4 34 2 252 2 36 2 37 2 454 2 457 2 461 2 50 2 698 2 703 2 263 2 268 2 271 4 476 2 273 2 276 2 278 4 67 8 485 2 716 2 488 2 719 2 496 2 727 2 292 2 293 8 729 2 76 4 503 4 509 2 742 2 301 2 304 2 87 4 88 2 305 2 307 2 309 4 517 2 311 2 752 2 759 1 522 7 525 4 526 1 101 4 763 4 765 2 103 2 106 2 530 2 532 2 321 6 770 2 323 2 535 2 536 4 773 4 540 4 774 6 331 2 332 4 542 2 547 2 126 2 779 4 130 2 781 2 342 2 343 4 135 2 347 4 560 40 562 2 563 7 792 2 137 2 139 2 793 2 360 1 365 2 571 1 366 4 799 12 149 1 802 2 156 4 158 8 804 2 810 2 376 2 377 2 379 2 166 4 815 2 590 2 592 2 819 2 596 2 597 2 390 22 176 4 833 2 183 2 399 2 608 2 838 2 185 10 841 4 189 1 190 2 616 2 619 2 618 2 195 4 621 2 197 4 198 2 200 2 203 2 205 2 414 4 417 2 418 4 210 2 
636 4 637 2 421 4 211 2 525 6 763 4 101 4 765 2 428 4 103 2 106 2 530 2 649 4 532 2 14 2 13 6 225 2 224 2 652 8 434 2 653 4 321 6 226 4 227 8 770 2 656 2 535 2 323 2 536 4 773 4 662 4 663 2 331 2 774 6 540 4 664 2 20 4 234 6 542 2 547 2 23 2 126 2 779 6 781 2 130 2 343 4 342 2 446 4 674 6 135 2 247 6 28 2 347 8 560 40 562 2 681 4 792 2 137 2 34 2 793 2 139 2 36 2 252 2 37 2 454 2 457 2 365 2 366 4 799 12 461 2 802 2 158 8 156 4 804 2 50 2 698 2 810 2 703 2 376 2 263 2 377 2 268 2 379 2 166 4 815 2 271 4 590 2 592 2 819 2 476 2 273 2 596 2 597 2 276 2 278 4 390 22 176 4 67 8 485 2 716 2 488 2 719 2 833 2 183 2 399 2 496 2 727 2 608 2 838 2 292 2 729 2 185 10 293 8 76 4 841 4 503 4 190 2 616 2 618 2 619 4 509 2 742 2 301 2 621 2 195 4 304 2 87 4 197 4 198 2 199 4 88 2 305 2 200 2 307 2 203 2 309 4 414 4 205 2 517 2 311 2 418 4 752 2 417 2 210 2 
636 4 637 2 421 4 211 2 525 6 763 4 101 4 765 2 428 4 103 2 106 2 530 2 649 4 532 2 13 6 14 2 225 2 224 2 652 8 434 2 653 4 321 6 226 4 17 4 227 8 770 2 656 2 535 2 323 2 536 4 773 4 662 4 663 2 331 2 774 6 540 4 664 2 20 4 234 6 542 2 547 2 23 2 126 2 779 6 781 2 130 2 343 4 342 2 446 4 674 6 135 2 247 6 28 2 347 8 560 40 562 2 681 4 792 2 137 2 34 2 793 2 139 2 36 2 252 2 37 2 454 2 457 2 365 2 366 4 799 12 461 2 802 2 158 8 156 4 804 2 50 2 698 2 810 2 703 2 376 2 263 2 377 2 268 2 379 2 166 4 815 2 271 4 590 2 592 2 819 2 476 2 273 2 596 2 597 2 276 2 278 4 390 22 176 4 67 8 485 2 716 2 488 2 719 2 396 4 833 2 183 2 399 2 496 2 727 2 608 2 838 2 292 2 729 2 185 10 293 8 76 4 841 4 503 4 190 2 616 2 618 2 619 4 509 2 742 2 301 2 621 2 195 4 304 2 87 4 197 4 198 2 88 2 199 4 305 2 200 2 307 2 203 2 309 4 414 4 205 2 517 2 311 2 418 4 752 2 417 2 210 2 
636 2 804 2 637 2 779 2 525 2 130 2 292 2 293 4 263 2 446 2 103 2 619 2 106 2 347 4 560 4 562 2 271 2 590 2 792 2 13 6 819 2 653 2 476 2 17 4 227 2 656 2 37 2 87 2 199 2 485 2 365 2 716 2 366 2 799 4 540 2 461 2 311 2 417 2 396 4 156 2 
804 2 637 2 130 2 292 2 293 6 263 2 446 4 103 2 106 2 347 6 560 4 562 2 271 4 590 2 792 2 13 6 819 2 476 2 17 4 227 2 37 2 87 2 199 2 485 2 365 2 716 2 366 2 799 4 540 2 234 2 461 2 311 2 417 2 396 4 156 2 
637 2 211 3 101 4 103 2 106 2 218 2 224 2 14 2 225 2 13 6 652 8 321 6 227 2 323 2 324 2 330 2 540 2 774 6 664 2 20 4 234 2 126 2 130 2 342 2 446 4 674 6 247 6 28 2 347 6 560 28 562 2 792 2 137 2 139 2 37 2 454 2 146 2 365 2 366 2 799 4 461 2 156 2 158 2 804 2 50 2 263 2 812 2 268 2 166 4 815 2 271 4 590 2 819 2 476 2 273 3 596 2 597 2 711 3 390 24 485 2 716 2 719 2 396 2 833 2 607 2 496 2 399 2 608 2 292 2 293 6 185 4 616 2 736 2 300 2 301 2 195 4 87 2 197 4 199 2 88 2 198 2 305 2 203 2 205 2 517 2 311 2 417 2 210 3 419 2 
485 2 103 2 586 2 
485 2 103 2 586 2 
636 4 637 2 421 4 523 4 525 4 101 4 765 2 215 4 316 4 103 4 647 2 14 2 225 2 224 2 13 6 652 2 110 2 653 4 321 2 17 4 227 4 323 2 536 2 331 2 774 2 540 2 20 4 664 2 332 4 234 4 333 2 547 4 126 2 779 4 445 2 446 4 242 2 674 6 247 6 28 2 675 2 347 12 560 24 792 2 137 2 34 2 793 2 139 2 36 2 37 4 454 2 690 2 571 2 366 4 799 16 460 2 802 2 158 2 156 2 50 2 376 2 263 2 586 2 165 2 268 2 815 2 271 4 596 2 597 2 276 2 390 16 176 2 68 2 485 6 178 2 282 2 488 2 719 2 602 2 396 6 833 2 726 2 496 2 608 2 185 4 293 12 296 2 190 4 616 2 619 4 849 2 743 2 301 2 195 4 850 4 851 2 197 4 87 2 88 2 199 4 305 2 203 2 205 6 517 2 417 2 210 2 
183 2 206 2 66 2 23 2 400 2 
636 4 637 2 421 4 523 4 525 4 101 4 765 2 215 4 316 4 103 4 647 2 14 2 225 2 224 2 13 6 652 2 653 4 321 2 17 4 227 4 323 2 536 2 660 2 331 2 774 2 540 2 20 4 664 2 332 4 234 4 333 2 547 4 126 2 779 4 445 2 446 4 674 6 247 6 28 2 675 2 347 12 560 24 792 2 137 2 34 4 793 2 139 2 794 2 37 4 454 2 690 2 366 4 799 16 460 4 369 2 802 2 156 2 50 2 52 2 376 2 263 2 586 2 165 2 472 2 268 2 815 2 271 4 596 2 597 2 276 2 390 16 176 2 68 2 485 6 282 2 488 2 719 2 602 2 396 6 833 2 726 2 496 2 608 2 185 2 293 12 190 4 616 2 619 4 849 2 82 2 743 2 301 2 195 4 850 4 851 2 87 2 197 4 88 2 199 4 305 2 203 2 205 6 517 2 417 2 210 4 
636 4 637 2 421 4 523 4 525 4 101 4 765 2 215 4 316 4 103 4 647 2 14 2 225 2 224 2 13 6 652 2 653 4 321 2 17 4 227 4 323 2 536 2 660 2 331 2 774 2 540 2 20 4 664 2 332 4 234 4 333 2 547 4 126 2 779 4 236 2 445 2 446 4 674 6 247 6 28 2 675 2 347 12 560 24 136 2 792 2 137 2 34 4 793 2 139 2 36 2 142 2 37 4 454 2 690 2 571 1 366 4 799 16 460 2 802 2 158 2 156 2 50 2 376 2 263 2 586 2 165 2 268 2 815 2 271 4 596 2 597 2 276 2 390 16 279 2 176 2 68 2 485 6 282 2 488 2 719 2 602 2 396 6 833 2 726 2 496 2 608 2 185 4 293 12 190 4 616 2 619 4 849 2 743 2 301 2 195 4 850 4 851 2 197 4 87 2 88 2 199 4 305 2 203 2 92 2 205 6 517 2 417 2 210 2 
758 2 211 2 525 2 761 1 213 2 641 2 101 4 424 2 527 2 425 2 529 2 530 2 533 2 224 2 225 2 14 2 652 8 16 2 434 2 321 6 322 2 323 2 124 2 775 2 774 6 664 2 20 4 541 2 126 2 127 2 443 2 24 2 779 2 550 1 781 2 551 2 131 2 672 2 239 2 244 2 674 6 247 5 28 2 788 2 560 24 137 2 138 2 139 2 252 2 454 2 455 2 571 1 572 2 459 2 801 2 152 2 576 1 50 2 582 2 810 2 704 4 59 2 268 2 166 4 815 2 593 2 273 2 596 2 481 2 597 2 484 2 389 2 390 18 719 2 829 2 182 2 724 2 833 2 495 2 608 2 727 2 185 2 840 2 613 2 77 2 504 2 616 2 298 2 739 2 738 2 741 1 301 1 195 4 621 2 304 2 197 4 88 2 198 2 305 2 410 2 202 2 203 2 748 2 205 2 517 1 752 2 210 2 94 2 
128 2 211 3 375 2 673 2 80 2 560 2 349 3 166 2 652 2 451 4 321 2 273 3 304 6 771 2 173 2 198 2 390 2 661 1 825 2 281 2 774 2 575 2 210 3 288 2 577 2 
128 2 211 2 375 2 673 2 80 2 560 2 349 2 166 2 652 2 451 4 321 2 273 2 304 6 771 2 173 2 198 2 390 2 825 2 281 2 774 2 575 2 210 2 288 2 577 2 
128 2 211 2 375 2 673 2 80 2 560 2 349 2 166 2 652 2 451 4 321 2 273 2 304 6 771 2 173 2 198 2 390 2 825 2 281 2 774 2 575 2 210 2 288 2 577 2 
0 2 832 4 807 2 808 2 581 2 638 2 555 2 134 2 813 2 528 2 105 2 706 2 448 3 560 10 531 2 350 4 352 2 512 3 652 2 623 6 33 2 112 2 273 3 35 4 253 2 141 3 198 2 689 4 277 3 144 2 390 4 231 2 715 2 91 4 310 2 487 2 575 2 49 2 210 3 
755 2 0 2 832 4 807 2 808 2 581 2 638 2 555 2 134 2 813 2 528 2 105 2 706 2 448 2 560 10 531 2 350 4 352 2 512 2 652 2 623 6 33 2 112 2 273 2 35 4 141 2 253 2 198 2 689 4 277 2 144 2 390 4 628 2 231 2 715 2 91 4 310 2 487 2 233 2 575 2 49 2 210 2 
755 2 0 2 832 4 807 2 808 2 581 2 638 2 555 2 134 2 813 2 528 2 105 2 706 2 448 2 560 10 531 2 350 4 352 2 512 2 652 2 623 6 33 2 112 2 273 2 35 4 141 2 253 2 198 2 689 4 277 2 144 2 390 4 628 2 231 2 715 2 91 4 310 2 487 2 233 2 575 2 49 2 210 2 
755 2 0 2 832 4 807 2 808 2 581 2 638 2 555 2 134 2 813 2 528 2 105 2 706 2 448 2 560 10 531 2 350 4 352 2 512 2 652 2 623 6 33 2 112 2 273 2 35 4 141 2 253 2 198 2 689 4 277 2 144 2 390 4 628 2 231 2 715 2 91 4 310 2 487 2 233 2 575 2 49 2 210 2 
755 2 0 2 832 4 807 2 808 2 581 2 638 2 555 2 134 2 813 2 528 2 105 2 706 2 448 2 560 10 531 2 350 4 352 2 512 2 652 2 623 6 33 2 112 2 273 2 35 4 141 2 253 2 198 2 689 4 277 2 144 2 390 4 628 2 231 2 715 2 91 4 310 2 487 2 233 2 575 2 49 2 210 2 
587 2 495 2 700 2 93 2 327 2 691 2 420 2 
320 2 73 2 639 2 789 2 713 2 420 2 
670 1 728 2 341 2 343 2 762 2 499 2 317 2 9 2 249 2 560 10 381 2 817 1 15 2 32 2 115 2 482 2 88 2 121 2 123 2 390 8 363 2 43 2 415 1 286 1 753 2 696 1 
755 1 807 4 521 2 640 2 555 4 813 2 528 4 78 2 706 4 352 4 452 2 33 2 253 4 39 2 277 6 854 2 628 1 856 2 800 2 233 1 543 2 49 4 287 2 695 2 
806 2 62 2 699 2 477 3 312 2 340 2 689 2 91 2 508 2 350 2 546 2 416 2 791 2 
806 2 62 2 699 2 477 6 312 2 340 4 689 2 796 2 401 2 390 1 91 2 560 1 508 2 350 2 546 2 791 2 416 2 85 1 
806 2 62 4 699 2 477 6 312 2 340 4 689 2 796 2 401 2 91 2 508 2 350 2 546 4 416 2 791 4 
806 2 62 8 699 2 477 10 312 2 340 4 689 2 796 8 401 6 390 1 91 2 560 1 508 2 350 2 546 8 416 2 791 8 85 1 
525 4 761 1 100 1 5 4 6 2 643 2 768 2 113 14 654 2 439 2 537 4 328 2 441 2 775 2 20 16 125 2 548 2 778 4 129 2 780 2 550 1 554 4 237 2 671 2 245 2 345 2 247 32 346 5 560 38 679 2 29 2 30 2 351 2 137 4 685 2 458 2 259 2 46 2 801 2 463 2 576 1 803 2 370 2 371 2 161 2 583 2 264 2 268 6 267 4 816 2 170 2 478 2 483 2 824 2 175 2 390 34 70 2 491 2 285 2 603 2 604 2 605 4 71 2 722 2 75 2 612 2 500 2 79 4 616 6 738 2 741 1 301 4 852 2 514 4 197 18 201 2 517 4 
260 2 161 2 525 38 373 2 422 2 213 6 702 2 55 2 766 2 705 2 217 2 57 2 268 2 318 2 267 4 108 2 767 2 167 2 219 2 222 2 816 4 709 2 382 2 113 6 478 2 710 2 439 2 658 2 537 2 712 2 120 2 389 4 390 44 280 2 441 2 70 2 718 2 20 20 181 2 285 2 603 2 605 2 606 2 722 2 777 2 548 2 778 4 725 2 129 2 444 2 609 2 338 2 837 2 237 2 731 4 612 2 345 2 615 4 447 2 845 4 247 42 616 2 346 2 560 46 351 2 407 2 137 2 453 2 565 2 514 4 685 2 746 2 197 20 687 2 515 2 41 2 201 2 362 2 145 2 570 2 571 2 458 2 630 2 749 2 208 2 46 2 463 2 803 6 754 2 95 2 
778 2 548 2 337 2 525 4 612 2 247 10 616 2 267 2 268 2 560 14 351 2 301 4 137 2 113 2 710 2 439 2 514 2 197 4 390 14 441 2 70 2 601 2 20 4 207 2 517 4 46 2 603 2 518 2 
261 2 519 2 371 2 161 2 525 14 761 2 422 2 268 2 267 6 767 2 219 2 220 2 816 2 113 8 594 2 710 2 439 2 65 4 537 2 390 26 441 2 775 2 70 2 20 14 285 4 603 2 394 2 605 2 722 4 548 2 778 6 129 4 550 6 237 2 612 2 345 4 245 2 735 4 247 38 616 2 346 2 560 28 738 10 403 2 351 2 741 2 301 10 137 2 38 2 514 6 685 2 197 14 201 2 571 2 458 4 632 2 517 10 46 2 801 10 463 4 576 2 803 6 
449 2 

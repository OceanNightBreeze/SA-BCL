#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 131 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 9 189 308 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 152 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 152 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 152 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 152 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 152 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 166 222 282 65 36 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V FAILED junit.framework.AssertionFailedError 70 181 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 267 91 285 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 267 91 285 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 267 91 285 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 267 91 285 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE:negate(I)I
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | STATEMENT | 65291 | stmt -> ;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:memberOf(F[F)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eq(FF)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:eq(II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:intersection([I[I)[I
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:min([I)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:backup(I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:lt(II)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | STATEMENT | 1433 | stmt -> ;
utilMDE.ArraysMDE:indexOf([II)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:dimensions()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:slice([III)[I
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltsEqual([II)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:lte(II)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:setEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:lexEqual([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:eltsLTE([II)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern:intern([J)[J
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:eltsEqualIndex([I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ModBitTracker:num_samples()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_ntk()I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:eq(DD)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltwiseGT([I)Z | OPERATOR | 176785 | + -> >>>
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:concat([I[I)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:memberOf(J[J)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:intern([D)[D
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:gte(II)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:eltsGTE([II)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | STATEMENT | 17277 | stmt -> ;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaCharStream:BeginToken()C
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:pow(II)I
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.Quant:memberOf(F[D)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaCharStream:readChar()C
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:eltsGT([II)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:noDups([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.ModBitTracker:num_vars()I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:memberOf(D[F)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.WeakHasherMap:size()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakHasherMap:processQueue()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
264 2 155 2 271 2 180 2 319 2 365 4 95 2 280 2 361 2 
363 2 14 6 346 2 175 6 273 2 231 2 321 2 44 2 214 2 313 6 151 2 
0 6 271 2 219 2 183 2 51 6 196 6 33 2 170 2 351 4 180 2 56 2 139 6 13 4 
286 26 117 2 143 2 366 4 43 6 42 10 211 12 213 8 146 2 192 30 148 10 292 8 74 8 242 2 271 6 375 4 158 6 221 2 301 2 324 16 354 16 250 4 305 10 180 6 278 4 163 10 200 8 140 2 329 16 381 10 
1 4 244 6 
119 2 
207 2 286 4 42 2 43 2 211 2 192 6 148 2 314 2 292 2 72 2 344 2 79 2 375 2 52 2 324 2 354 2 379 2 305 4 380 2 163 2 38 2 329 2 381 2 
298 6 195 6 286 12 104 2 42 4 211 5 324 8 354 8 122 4 192 14 275 2 251 4 278 2 148 4 163 4 329 8 381 4 
64 2 115 2 93 2 67 2 3 6 261 10 4 2 6 4 339 4 288 2 145 4 341 4 96 2 28 2 312 2 369 2 193 4 73 4 239 4 217 2 296 2 194 4 270 10 77 8 300 2 246 4 177 4 302 2 323 4 325 62 303 14 130 2 226 4 227 2 135 4 37 2 253 2 22 2 307 2 85 2 
168 2 119 2 188 2 7 2 147 2 376 2 83 2 225 2 306 2 132 2 
89 4 332 2 334 2 185 2 2 2 187 2 6 4 146 2 11 2 246 2 107 2 15 2 18 2 304 2 57 2 59 2 360 2 255 2 62 2 257 2 309 2 66 2 212 2 69 2 262 2 264 2 30 4 126 2 127 2 217 2 75 2 76 2 271 4 77 2 320 2 272 2 32 2 374 4 178 2 128 2 179 2 180 4 136 2 229 2 
331 2 286 48 117 2 42 16 43 4 287 6 211 22 338 2 26 4 192 54 122 4 266 4 238 2 98 8 290 6 148 16 173 4 292 18 317 2 297 2 298 6 271 4 373 6 195 6 375 2 158 4 352 4 324 32 354 32 305 6 180 4 19 4 251 4 163 16 137 2 200 6 329 32 381 16 358 6 
77 2 3 2 302 2 
243 2 318 2 103 2 105 10 232 2 144 2 224 22 190 2 248 2 235 2 236 2 291 2 199 2 255 2 
129 2 131 2 80 2 186 2 
252 2 
180 2 364 2 
180 4 162 2 164 2 
204 2 206 2 308 2 284 2 233 2 260 2 310 6 45 2 189 2 289 6 47 2 9 2 10 2 294 2 240 2 154 2 299 2 81 2 157 2 350 2 109 2 110 2 353 2 112 2 84 2 165 2 359 2 61 6 
101 2 215 2 48 2 108 1 
208 2 48 2 
41 2 345 2 24 2 335 2 258 2 209 4 349 2 5 2 224 6 20 2 55 2 172 2 279 2 58 2 125 2 269 4 295 2 201 2 
101 2 68 2 
77 2 237 2 118 2 99 2 
77 2 265 2 237 2 184 2 118 2 99 2 
121 2 77 2 118 2 48 2 12 2 366 2 
332 2 328 2 
77 2 118 2 366 2 100 2 
123 2 316 2 
281 2 87 2 
276 2 330 2 
150 2 31 2 
8 2 31 2 87 2 
31 2 337 2 87 2 
31 2 372 2 87 2 
31 2 87 2 16 2 
63 2 259 6 118 2 120 2 77 2 377 2 34 6 357 2 
347 2 378 2 
77 2 265 2 118 2 48 2 12 2 366 2 60 2 
134 2 48 2 12 2 
94 2 48 2 12 2 
101 2 370 2 378 2 
48 2 12 2 
114 2 378 2 
48 2 40 2 
101 2 277 2 378 2 
101 2 276 2 174 2 
101 2 216 2 31 2 
101 2 326 2 123 2 
101 2 153 2 87 2 
197 2 378 2 
348 2 48 2 
276 2 263 2 
31 2 367 2 
123 2 228 2 
78 2 87 2 
160 2 378 2 
53 2 87 2 
123 2 322 2 
102 2 31 2 
111 2 276 2 
141 2 101 2 277 2 378 2 
141 2 101 2 327 2 277 2 378 2 
101 2 82 2 378 2 
101 2 378 2 371 2 
142 2 355 2 218 2 202 2 
50 2 
129 2 80 2 186 2 152 2 
129 2 80 2 186 2 152 2 
156 2 49 2 247 2 
156 2 49 2 247 2 
129 2 80 2 186 2 152 2 
129 2 80 2 186 2 152 2 
129 2 80 2 186 2 152 2 
282 2 343 2 333 2 65 2 220 2 80 2 222 2 186 2 129 2 35 2 274 2 180 4 36 2 315 2 166 2 254 2 
203 2 256 2 106 2 311 2 46 2 368 2 171 2 
356 2 116 2 171 2 124 2 293 2 182 2 
88 2 167 2 90 1 25 1 234 2 288 1 27 1 342 2 97 2 70 2 149 2 271 4 300 1 223 2 159 2 180 4 181 2 230 2 
286 12 42 6 211 1 262 2 26 2 192 15 238 1 98 2 148 6 292 1 241 2 298 4 271 6 158 2 324 6 354 6 18 2 180 6 251 2 133 2 161 2 163 6 138 2 21 2 200 4 23 2 39 2 329 6 381 6 358 4 
362 2 205 2 283 2 92 2 245 2 210 2 176 3 336 2 17 2 340 2 198 2 113 2 86 2 
362 2 205 2 271 1 283 2 92 2 245 2 210 2 176 6 169 1 336 2 17 2 340 2 180 1 71 2 198 2 268 2 113 4 86 2 
362 2 205 4 283 4 92 2 245 2 210 2 176 6 336 2 17 2 340 4 71 2 198 2 268 2 113 4 86 2 
362 2 205 8 271 1 283 8 92 2 245 2 210 2 176 10 169 1 336 2 17 2 340 8 180 1 71 6 198 2 268 8 113 4 86 2 
91 2 285 2 191 1 249 2 54 1 267 2 271 2 180 2 
249 2 271 2 180 2 91 2 285 2 267 2 
249 2 271 2 180 2 91 2 285 2 267 2 
249 2 271 2 180 2 91 2 285 2 267 2 
29 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 456 632 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (330,576) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (82,543) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.IllegalStateException 791 644 (96,139,152,155,189,194,220,249,276,278,302,342,364,366,382,385,396,440,453,466,467,541,557,566,583,600,606,620,655,708,788,822,830,837,846,868,884,921,922,923,936,941,947,990,999,1038,1047,1058,1068,1077) 518 950 659 519 177 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 456 802 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException 456 141 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V ERROR java.lang.NullPointerException 456 247 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 1054 67 857 482 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 429 906 383 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 429 906 383 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 429 906 383 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 429 906 383 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:noDups([I)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:jj_3R_102()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_103()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_105()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_77()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_117()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaCharStream:ReadByte()C
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3_17()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.PptSlice1:num_samples()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:hashCode()I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ProglangType:isScalar()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:sameLength([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3R_180()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:size()I
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_85()Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3_15()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3R_169()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:lte(II)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_67()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Intern:numIntArrays()I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_161()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_3R_101()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long; | RETURN | 14632 | return null
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_3R_134()Z
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getEndLine()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ValueTuple:isMissing(I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:ne(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:memberOf(I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:gcd(II)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_121()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Debug:logDetail()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([III)[I | ASSIGN | 29404 | = null
jtb.JavaParser:jj_ntk()I
daikon.Quant:subsetOf([B[I)Z | CONDITION | 29819 | if (x) -> if (!x)
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3R_98()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3_13()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3R_119()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:gte(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3R_56()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:eq(II)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsGTE([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.Invariant:justified()Z
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_81()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:num_vars()I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:lexGT([I[I)Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParser:jj_3_22()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_135()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_106()Z
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:logDetail()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3_35()Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_16()Z
daikon.Debug:logOn()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3R_62()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:jj_3R_49()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:eltsEqual([II)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_120()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V | STATEMENT | 564 | stmt -> ;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_110()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_109()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:max([I)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_2_17(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ModBitTracker:split(I)I
daikon.Quant:subsetOf([I[I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_137()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_164()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3R_100()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE:min([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptName:isEnterPoint()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_136()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:backup(I)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptSlice1:arity()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_163()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
daikon.PptSlice2:arity()I
jtb.JavaParser:jj_3R_99()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:lt(II)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3_30()Z
daikon.diff.Node:Node()V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:jj_3R_133()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_80()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaCharStream:readChar()C
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_1()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isIntegral()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
925 2 357 2 1056 2 833 2 1060 2 132 2 1036 4 412 2 119 2 
1041 2 277 2 241 6 397 2 826 2 747 2 273 6 525 2 479 2 898 6 973 2 
35 2 1082 4 895 6 119 2 40 6 156 2 767 2 208 6 1060 2 1095 4 13 2 455 2 498 6 
707 2 119 2 1067 4 989 2 299 8 1074 2 933 6 756 6 371 2 567 2 311 2 21 2 963 6 632 2 169 2 59 2 495 8 1060 2 731 2 456 2 811 4 70 6 
576 4 330 4 
787 2 
707 2 1067 2 158 2 993 2 652 2 299 4 933 2 905 2 1002 2 271 2 756 4 371 2 311 2 21 2 55 2 963 2 59 2 939 2 495 6 28 2 731 2 811 2 70 2 
437 4 405 6 707 4 371 4 311 4 21 4 963 6 329 2 603 2 299 10 495 13 9 2 1074 2 811 3 542 4 70 6 933 6 
460 2 391 4 677 2 2 4 217 4 80 2 327 2 430 2 779 4 508 4 7 2 126 2 783 4 398 10 301 2 865 4 564 4 198 2 47 2 795 2 308 2 368 2 799 4 696 2 763 2 725 2 415 6 1091 4 1052 2 666 10 916 4 172 2 699 14 771 8 209 4 148 2 29 2 810 4 32 2 111 62 
816 2 855 2 473 2 787 2 752 2 873 2 309 2 845 2 178 2 68 2 
916 2 771 2 82 2 828 2 543 2 867 2 
707 6 892 8 119 4 614 2 329 4 780 4 299 18 542 4 933 12 405 6 437 6 371 6 311 6 21 6 963 12 495 19 279 2 638 6 107 2 1060 4 731 4 70 12 811 8 
415 2 47 2 771 2 
982 10 661 2 1005 2 289 2 312 2 135 2 908 2 258 2 560 22 42 2 344 2 685 2 686 2 885 2 
287 2 3 2 427 2 558 2 820 2 4 2 293 2 295 3 823 2 6 1 297 3 825 2 687 2 562 2 434 2 16 2 307 4 690 2 832 2 167 1 168 2 569 1 442 1 694 2 443 2 695 2 571 1 965 2 839 1 446 4 968 3 841 2 174 12 316 2 451 2 970 2 971 2 972 2 577 2 578 3 580 2 849 6 182 4 980 2 584 3 37 2 988 2 589 4 712 2 469 3 996 2 862 3 478 2 998 2 197 2 484 2 48 2 200 2 485 2 718 2 339 1 56 2 206 2 492 2 604 2 345 4 62 32 64 2 728 2 880 2 609 2 347 2 211 1 886 2 499 16 500 2 1020 2 888 2 1022 1 79 2 1023 2 216 3 1025 2 737 2 616 8 356 2 509 2 743 2 1027 16 357 2 744 2 621 2 91 1 225 16 224 1 624 1 626 2 902 2 230 6 93 2 94 2 753 2 235 4 516 2 1043 2 238 2 758 1 373 1 764 1 103 2 104 2 910 2 242 2 769 2 246 2 245 32 917 2 108 2 1061 2 1060 34 924 3 116 4 643 5 774 4 253 2 645 8 119 32 256 3 260 3 125 6 1070 8 127 24 261 24 786 2 266 2 931 1 792 2 272 2 409 2 408 2 133 2 938 6 136 2 1093 16 668 2 147 2 670 3 
447 2 
1060 2 819 2 
1060 4 57 2 444 2 
0 2 557 2 556 2 5 2 8 2 12 4 15 2 14 2 566 2 18 8 19 2 23 2 572 6 573 2 25 2 30 4 31 2 33 2 579 2 581 2 582 4 34 2 36 2 583 6 38 4 588 2 39 4 590 4 592 2 43 48 44 2 45 2 46 16 599 4 600 2 601 2 602 2 52 2 53 4 54 2 60 2 606 96 607 2 65 4 63 4 66 2 610 2 611 2 72 2 73 2 74 18 612 62 77 8 613 2 81 2 83 90 86 246 618 2 620 6 622 86 92 2 625 2 627 42 628 30 96 16 97 2 98 8 99 2 101 4 633 2 634 2 102 2 105 2 637 2 639 2 106 2 114 4 644 98 118 2 120 2 122 34 646 4 123 2 651 2 656 2 655 6 659 2 130 2 663 2 664 10 138 4 140 2 139 2 665 4 142 4 143 16 667 16 144 14 146 4 672 56 673 2 675 86 676 12 678 2 152 6 155 2 154 94 682 2 157 4 159 2 160 2 163 4 164 14 165 2 689 2 691 2 697 4 170 2 698 2 700 2 173 2 177 2 176 4 702 2 704 2 180 2 185 2 706 2 186 2 708 2 187 2 188 6 189 2 711 4 190 18 191 52 713 2 192 2 194 2 714 94 196 16 716 2 202 2 203 2 720 2 204 2 721 4 207 2 722 2 726 2 730 2 214 2 215 2 735 4 218 2 738 2 742 2 220 2 745 2 223 2 746 4 751 18 228 2 232 4 231 2 233 2 237 2 754 2 236 2 761 8 240 4 768 4 249 2 248 2 250 2 252 2 773 2 784 12 263 2 262 2 267 2 788 2 791 2 790 2 794 2 796 2 798 2 275 4 803 14 276 2 804 2 278 2 280 18 282 28 805 62 283 4 809 36 812 2 288 2 817 2 818 2 291 4 290 2 821 2 292 4 822 6 296 358 298 2 827 8 302 12 304 2 830 4 306 2 310 4 836 2 314 2 837 56 846 2 317 2 321 2 848 2 322 2 323 2 325 2 850 2 851 2 853 2 326 2 854 2 328 94 856 4 859 18 858 2 331 2 860 22 861 2 332 2 864 94 334 2 866 94 335 6 868 50 336 4 337 48 872 2 338 2 340 44 875 2 876 30 342 2 343 6 881 22 348 2 349 104 884 2 882 4 350 4 352 2 889 4 353 94 890 2 894 2 359 2 360 2 361 4 362 2 364 2 363 2 901 94 904 2 366 2 907 2 378 2 912 2 911 2 914 2 915 4 380 4 913 2 381 2 382 2 918 6 385 2 920 4 386 2 921 2 387 4 922 2 923 4 388 2 389 50 926 2 392 4 928 2 396 4 930 4 400 2 401 4 932 2 934 2 406 2 407 94 936 86 411 2 937 2 413 2 414 2 940 2 941 2 943 2 944 2 418 18 946 2 416 2 947 2 950 2 948 2 951 2 952 74 422 2 425 50 953 2 431 2 432 94 956 2 957 2 433 18 958 4 959 2 960 4 436 2 440 2 448 44 450 8 969 2 452 4 453 4 457 44 976 6 974 42 978 6 461 6 984 2 463 22 985 4 986 2 466 2 467 2 990 2 471 52 475 12 474 42 477 56 999 2 480 20 483 2 1004 2 487 4 1006 2 489 54 491 94 1009 4 1010 2 493 2 1013 2 1014 4 1017 4 504 2 1024 94 1026 2 506 2 507 8 510 2 511 56 1032 2 1031 2 512 2 1034 2 1035 2 1038 2 1039 4 515 12 1042 2 517 2 1045 4 1046 2 1047 2 518 6 1048 6 519 2 1051 12 1050 2 520 4 1055 8 1053 2 522 2 521 46 1057 2 1058 4 524 18 1059 246 523 2 526 12 530 2 532 2 1062 2 1064 2 1063 2 533 2 534 2 1069 2 1068 2 535 246 536 2 537 4 1071 12 539 30 538 2 1073 62 541 2 1077 2 1078 74 1080 2 1081 2 545 18 1083 2 1084 2 1085 2 549 4 1086 2 1089 4 1090 4 553 2 
593 2 151 2 630 1 454 2 
593 2 585 2 
802 2 456 2 
593 2 394 2 587 2 
593 2 844 2 394 2 
390 2 151 2 374 2 
593 2 394 2 
390 2 749 2 
793 2 593 2 
390 2 151 2 654 2 
565 2 151 2 1087 2 
151 2 757 2 445 2 
243 2 151 2 219 2 
151 2 551 2 1030 2 
501 2 390 2 
593 2 402 2 
565 2 897 2 
824 2 757 2 
243 2 701 2 
929 2 1030 2 
390 2 244 2 
1030 2 503 2 
243 2 294 2 
757 2 274 2 
565 2 229 2 
390 2 151 2 654 2 674 2 
390 2 151 2 115 2 654 2 674 2 
390 2 151 2 78 2 
390 2 151 2 994 2 
977 2 372 2 134 2 975 2 
458 2 
151 2 808 2 
1003 2 404 2 771 2 835 2 
1003 2 404 2 771 2 835 2 762 2 41 2 
141 2 456 2 
546 2 17 2 
1003 2 771 2 247 2 456 2 
243 2 212 2 
1030 2 619 2 
565 2 900 2 
757 2 962 2 
1030 2 757 2 205 2 
1030 2 757 2 961 2 
1030 2 757 2 653 2 
1030 2 757 2 766 2 
354 2 472 2 1003 2 131 6 1088 2 771 2 110 2 733 6 
390 2 257 2 
841 2 
287 2 427 2 153 2 681 2 823 2 825 2 687 2 16 2 307 2 167 2 168 2 693 2 446 4 174 8 175 2 972 2 849 2 182 2 981 2 852 2 988 2 589 4 712 2 478 2 1001 2 481 4 48 2 200 2 718 2 345 4 62 6 880 2 728 2 500 2 1020 2 888 2 737 2 357 2 744 2 1028 2 88 2 91 2 230 4 753 2 235 2 1043 2 760 4 103 2 104 2 242 2 769 2 245 4 246 2 108 2 1060 26 1061 4 116 4 117 2 253 2 645 2 119 26 395 2 778 2 125 6 786 2 129 2 268 2 547 2 408 2 133 2 938 2 136 6 1093 6 284 2 
286 2 287 2 427 2 153 2 681 2 823 2 825 2 687 2 16 2 307 2 167 2 168 2 693 2 446 4 174 8 175 2 972 2 849 2 182 2 981 2 988 2 589 4 712 2 478 2 197 2 1001 2 481 4 48 2 200 2 718 2 604 2 723 2 345 4 62 6 880 2 728 2 609 2 500 2 1020 2 888 2 737 2 357 2 744 2 1028 2 88 2 91 2 230 6 753 2 235 2 1043 2 760 4 103 2 104 2 242 2 769 2 245 4 246 2 108 2 1060 26 1061 4 116 4 253 2 645 2 119 26 395 2 125 6 786 2 129 2 268 2 547 2 408 2 133 2 938 2 136 6 1093 6 284 2 671 2 
650 2 
128 2 150 2 
629 2 927 2 736 2 20 2 273 2 100 2 124 2 259 2 878 2 241 2 636 2 476 4 1033 4 210 2 525 2 973 2 269 2 597 2 
736 2 737 2 898 6 87 2 300 2 747 2 1033 4 750 2 303 2 687 2 435 4 629 2 753 2 166 2 367 2 370 2 20 2 100 2 22 2 765 2 1049 2 840 2 446 2 241 4 636 2 574 4 525 4 847 2 1060 12 973 4 927 2 1066 2 255 2 464 2 119 6 124 2 259 2 125 4 468 4 540 2 476 4 478 2 269 2 597 4 1000 4 48 2 200 2 718 2 273 6 605 4 724 2 277 2 878 2 877 2 345 2 210 2 807 2 69 2 421 6 732 2 
736 2 737 2 898 6 87 2 300 2 1033 4 750 2 303 2 687 2 435 4 629 2 753 2 166 2 367 2 370 2 20 2 100 2 22 2 765 2 1049 2 840 2 446 2 241 6 636 2 574 4 525 4 847 2 1060 12 973 4 927 2 1066 2 255 2 464 2 119 6 124 2 259 2 125 4 468 4 397 2 540 2 476 4 478 2 269 2 597 4 1000 4 48 2 200 2 718 2 273 4 605 4 724 2 277 2 878 2 877 2 345 2 210 2 807 2 69 2 421 6 732 2 
736 2 737 2 898 6 87 2 300 2 1033 4 750 2 303 2 687 2 435 4 629 2 753 2 1041 2 166 2 367 2 370 2 20 2 100 2 22 2 765 2 1049 2 840 2 446 2 241 6 636 2 574 4 525 4 847 2 1060 12 973 4 927 2 1066 2 255 2 464 2 119 6 124 2 259 2 125 4 468 4 540 2 476 4 478 2 269 2 597 4 1000 4 48 2 200 2 718 2 273 6 605 8 724 2 277 2 878 2 877 2 345 2 210 2 807 2 69 2 421 6 732 2 
736 2 737 2 898 8 87 2 300 2 1033 4 750 2 303 2 687 2 435 4 629 2 753 2 1041 2 166 2 367 2 370 2 20 2 100 2 22 2 765 2 1049 2 446 2 840 2 241 8 636 2 574 4 525 4 847 2 1060 12 973 4 927 2 1066 2 255 2 464 2 119 6 124 2 259 2 125 4 468 4 397 2 540 2 476 4 478 2 269 2 597 4 1000 8 48 2 200 2 718 2 273 6 605 8 724 2 277 2 878 2 877 2 345 2 210 2 807 2 69 2 421 10 732 2 
736 2 737 2 898 6 87 2 300 2 1033 4 750 2 303 2 687 2 435 4 629 2 753 2 1041 2 166 2 367 2 370 2 20 2 100 2 22 2 765 2 1049 2 840 2 446 2 241 6 636 2 574 4 525 4 847 2 1060 12 973 4 927 2 1066 2 255 2 464 2 119 6 124 2 259 2 125 4 468 4 540 2 476 4 478 2 269 2 597 4 1000 8 48 2 200 2 718 2 273 6 605 8 724 2 277 2 878 2 877 2 345 2 210 2 807 2 69 2 421 10 732 2 
819 6 823 2 825 2 300 2 303 2 831 2 307 2 834 2 20 2 22 2 840 2 26 1 574 8 847 2 849 2 589 4 863 2 597 4 869 6 870 7 48 2 871 1 604 2 341 2 605 2 877 2 878 2 345 4 62 8 61 2 346 6 880 2 69 4 887 1 75 2 898 12 87 2 617 1 357 2 88 2 358 2 629 2 367 2 370 2 631 4 100 2 104 2 636 2 108 2 109 6 641 2 640 7 116 4 927 2 645 2 119 24 395 2 121 6 125 6 124 2 397 4 658 2 660 2 410 1 408 2 662 6 133 2 938 2 136 6 145 2 669 2 421 2 423 2 426 1 427 2 955 2 679 2 681 2 683 6 684 2 687 2 435 6 166 2 438 2 168 2 692 6 441 6 964 2 444 6 446 4 447 6 174 4 449 4 973 4 181 8 459 1 182 2 184 6 983 2 464 2 988 2 710 2 468 4 712 12 476 4 995 6 478 2 997 2 197 2 1001 4 481 4 200 2 718 2 724 2 1011 2 728 2 1012 2 210 2 1016 2 1019 2 732 2 500 2 736 2 505 2 737 2 744 2 221 2 1033 4 748 2 750 2 230 6 753 2 234 1 235 2 765 2 1049 2 241 8 769 2 245 2 525 4 1060 46 772 10 531 2 253 2 1065 6 1066 4 259 2 782 2 540 2 264 2 269 2 270 1 273 4 277 4 550 6 1093 6 1092 2 807 2 806 6 
955 2 427 2 679 2 819 6 681 2 684 2 683 6 823 2 825 2 300 2 303 2 687 2 435 6 831 2 307 4 166 2 438 2 834 2 692 6 20 2 168 2 441 6 22 2 444 6 964 2 315 2 840 2 446 4 447 6 174 8 449 4 574 8 847 2 973 4 181 8 849 2 182 4 184 6 983 2 987 2 464 2 710 2 988 2 468 4 589 4 712 12 995 6 476 4 863 2 478 2 997 2 597 4 197 2 1001 4 869 6 481 4 48 2 200 2 718 2 341 2 604 2 724 2 605 6 878 2 877 2 61 2 62 8 345 4 346 6 1011 2 1012 2 728 2 880 2 210 2 1016 2 1019 2 69 4 732 2 500 2 75 2 736 2 505 2 737 2 898 12 87 2 357 2 744 2 221 2 358 2 88 2 1033 4 748 2 750 2 230 6 629 2 1041 4 753 2 235 4 367 2 370 2 631 4 100 2 765 2 1049 2 104 2 241 8 769 2 636 2 245 2 108 2 525 4 1061 2 1060 48 109 6 641 2 531 2 772 10 927 2 116 4 1065 6 253 2 1066 4 645 2 121 6 395 2 119 26 124 2 259 2 125 6 782 2 540 2 264 2 269 2 658 2 660 2 408 2 662 6 273 8 938 2 133 2 136 6 550 6 277 4 1092 2 1093 6 145 2 669 2 806 6 807 2 421 2 423 2 
955 2 427 2 679 2 819 6 681 2 684 2 683 6 823 2 825 2 300 2 303 2 687 2 435 6 831 2 307 4 166 2 438 2 834 2 692 6 20 2 168 2 441 6 22 2 444 6 964 2 315 2 840 2 446 4 447 6 174 8 449 4 574 8 847 2 973 4 181 8 849 2 182 4 184 6 983 2 987 2 464 2 710 2 988 2 468 4 589 4 712 12 995 6 476 4 863 2 478 2 997 2 597 4 197 2 1001 4 1000 4 869 6 481 4 48 2 200 2 718 2 341 2 604 2 724 2 605 6 878 2 877 2 61 2 62 8 345 4 346 6 1011 2 1012 2 728 2 880 2 210 2 1016 2 1019 2 69 4 732 2 500 2 75 2 736 2 505 2 737 2 898 12 87 2 357 2 744 2 221 2 358 2 88 2 1033 4 748 2 750 2 230 6 629 2 1041 4 753 2 235 4 367 2 370 2 631 4 100 2 765 2 1049 2 104 2 241 8 769 2 636 2 245 2 108 2 525 4 1061 2 1060 48 109 6 641 2 531 2 772 10 927 2 116 4 1065 6 253 2 1066 4 645 2 121 6 395 2 119 26 124 2 259 2 125 6 782 2 540 2 264 2 269 2 658 2 660 2 408 2 662 6 273 8 938 2 133 2 136 6 550 6 277 4 1092 2 1093 6 145 2 669 2 806 6 807 2 421 6 423 2 
819 12 823 2 825 2 300 2 11 6 303 2 831 2 307 4 834 2 20 2 22 2 315 2 840 2 574 8 847 2 849 4 589 4 863 2 597 4 869 12 48 2 58 2 604 2 341 2 605 6 877 2 878 2 345 4 62 12 61 2 346 6 880 2 69 4 75 2 893 2 898 16 87 2 357 2 88 2 358 2 629 2 367 2 370 2 631 4 100 2 104 2 636 2 108 2 109 12 641 2 116 4 927 2 645 4 119 24 395 2 121 6 125 6 124 2 397 2 658 2 660 2 408 2 662 6 133 2 938 4 136 8 145 2 419 2 421 6 423 2 427 2 955 2 679 2 681 4 683 6 684 2 687 2 435 6 166 2 438 2 168 2 692 6 441 6 964 2 444 12 446 4 447 12 174 10 449 4 973 4 705 2 181 8 182 4 184 6 983 2 987 2 464 2 988 2 710 2 468 4 992 6 712 10 470 6 476 4 995 12 478 2 997 2 197 2 1000 4 1001 4 481 6 200 2 718 2 488 6 490 6 724 2 1011 2 728 2 1012 2 210 2 729 2 1016 2 1019 2 732 2 500 2 734 6 736 2 505 2 737 2 741 6 744 2 221 2 222 2 747 2 1033 4 748 2 750 2 230 6 514 6 753 2 1041 4 235 4 765 2 1049 2 241 10 769 2 245 4 525 4 1061 2 1060 52 531 2 772 8 254 2 253 2 1065 6 1066 4 259 2 782 2 540 2 264 2 269 2 1079 6 789 2 273 10 277 4 550 6 1093 8 1092 2 807 2 806 6 
927 2 736 2 464 2 898 4 259 2 468 2 540 2 476 2 1033 2 303 2 269 2 435 2 1000 4 1041 2 166 2 367 2 20 2 273 6 100 2 765 2 724 2 605 6 277 2 840 2 877 2 241 6 574 2 847 2 210 2 525 4 1060 4 807 2 973 4 421 4 732 2 
1 2 427 2 825 2 303 2 687 2 435 2 166 2 20 2 168 2 443 2 22 2 24 2 446 4 840 2 841 2 574 2 847 2 973 4 849 3 464 2 988 2 468 2 589 4 712 4 476 2 478 2 998 2 197 2 1001 2 481 4 200 2 48 2 718 2 604 2 724 2 605 6 877 2 345 4 62 8 608 2 880 2 728 2 210 2 732 2 500 2 736 2 737 2 898 4 615 3 357 2 744 2 88 2 1033 2 230 6 1041 2 753 2 367 2 100 2 909 2 765 2 104 2 241 6 769 2 245 3 525 4 108 2 1060 28 772 2 116 4 927 2 253 2 395 2 119 24 125 6 259 2 540 2 269 2 272 2 408 2 273 6 133 2 938 3 136 6 277 2 1093 6 669 2 1094 2 807 2 421 2 
736 2 737 2 898 6 87 2 300 2 1033 4 750 2 303 2 687 2 435 4 629 2 753 2 1041 2 166 2 367 2 370 2 20 2 100 2 22 2 765 2 1049 2 840 2 446 2 241 6 636 2 574 4 525 4 847 2 1060 12 973 4 927 2 1066 2 255 2 464 2 119 6 124 2 259 2 125 4 468 4 540 2 476 4 478 2 269 2 597 4 1000 8 48 2 200 2 718 2 273 6 605 8 724 2 277 2 878 2 877 2 345 2 210 2 807 2 69 2 421 10 732 2 
736 2 737 2 898 8 87 2 300 2 747 2 1033 4 750 2 303 2 687 2 435 4 629 2 753 2 1041 2 166 2 367 2 370 2 20 2 313 2 100 2 22 2 765 2 1049 2 446 2 840 2 241 6 636 2 574 4 847 2 525 4 1060 12 973 4 528 2 927 2 1066 2 464 2 119 6 124 2 259 2 125 4 468 4 540 2 476 4 478 2 269 2 597 4 598 4 1000 8 200 2 48 2 718 2 273 8 605 8 724 2 277 2 878 2 345 2 210 2 807 2 69 2 421 10 732 2 
399 2 732 2 724 2 
399 2 732 2 724 2 
815 2 427 2 680 2 823 4 825 2 300 2 687 2 162 2 435 4 829 2 688 2 307 4 834 2 168 2 20 2 446 4 174 4 449 2 574 4 973 4 182 4 981 4 324 2 983 2 988 2 589 4 468 2 712 4 476 2 478 2 597 4 195 2 197 2 1001 6 1000 4 48 2 200 2 718 2 1007 2 604 2 724 6 605 6 878 2 879 2 345 4 62 2 1011 2 880 2 210 2 1015 2 69 4 732 4 500 2 737 2 898 16 739 2 357 2 744 2 88 2 90 2 747 4 1033 2 1037 4 230 6 753 2 1041 4 235 4 367 2 370 2 631 2 100 4 1049 2 104 2 241 12 769 2 636 2 245 2 108 2 525 4 1060 24 251 2 772 2 116 4 253 2 1066 2 393 2 119 16 395 2 125 6 397 4 399 2 1075 2 408 2 273 12 133 2 136 2 137 4 550 2 277 4 1093 2 807 2 285 2 149 2 421 6 
772 2 629 2 200 2 324 2 775 2 631 2 710 2 119 2 379 2 966 2 550 2 712 2 90 2 1060 4 997 2 829 2 150 2 
427 2 680 4 823 4 825 2 300 2 687 2 435 4 829 2 688 2 307 4 834 2 168 2 20 2 446 4 174 4 449 2 574 4 973 4 703 2 182 4 981 4 324 2 983 2 988 2 468 2 589 4 712 2 476 2 595 2 478 2 597 4 195 2 197 2 1001 6 1000 4 48 2 200 2 718 2 201 2 1007 2 604 2 724 6 605 6 878 2 345 4 62 2 1011 2 880 2 210 2 1015 2 69 4 732 4 500 2 737 2 898 16 739 2 355 2 87 2 357 2 744 2 88 2 90 2 747 4 1033 2 1037 4 230 6 753 2 1041 4 235 4 367 2 370 2 100 4 1049 2 104 2 241 12 769 2 636 2 245 4 108 2 525 4 1060 24 251 2 116 4 253 2 1066 4 393 2 777 2 119 16 395 2 125 6 397 4 399 2 408 2 273 12 133 2 136 2 137 4 550 2 277 4 1093 2 807 2 285 2 149 2 421 6 
427 2 680 2 823 4 825 2 300 2 687 2 435 4 829 2 688 2 307 4 834 2 168 2 20 2 967 2 446 4 174 4 449 2 574 4 973 4 182 4 981 4 324 2 983 2 988 2 589 4 468 2 712 4 476 2 478 2 597 4 195 2 197 2 1001 6 1000 4 48 2 200 2 718 2 1007 2 604 2 724 6 605 6 878 2 345 4 62 2 1011 2 880 2 210 2 1015 2 69 4 732 4 500 2 737 2 898 16 739 2 87 2 357 2 744 2 88 2 90 2 747 4 1033 2 1037 4 230 6 753 2 1041 4 235 4 367 2 370 2 631 2 100 4 1049 2 104 2 241 12 769 2 636 2 245 2 108 2 525 4 1060 24 251 2 772 2 116 4 253 2 776 2 1066 4 393 2 119 16 395 2 125 6 397 4 399 2 935 2 408 2 273 12 133 2 801 2 136 2 137 4 550 2 277 4 1093 2 949 2 807 2 285 2 149 2 421 6 
555 1 299 4 825 2 10 2 687 2 563 2 437 4 439 2 311 2 168 2 21 2 963 2 570 2 964 2 446 4 27 2 318 2 575 2 319 2 849 2 707 2 988 2 329 2 589 2 991 2 857 2 712 2 333 2 478 2 1001 2 481 4 482 2 200 2 48 2 718 2 486 2 345 4 62 8 495 6 880 2 728 2 1012 2 67 2 70 2 500 2 891 2 737 2 896 2 84 4 740 2 357 2 1029 2 88 2 89 1 513 2 226 2 903 2 230 2 753 2 371 2 759 2 239 2 377 6 104 2 1054 2 245 2 1060 26 116 2 253 2 119 20 125 6 781 2 782 2 933 2 544 2 403 2 660 2 408 2 548 2 133 2 938 2 136 6 1093 6 145 2 1096 2 423 2 
849 3 502 4 814 2 954 2 709 1 119 2 681 6 649 2 596 2 481 2 199 2 755 2 717 2 938 3 136 2 1008 2 62 2 1093 2 728 2 245 3 420 3 1060 2 1018 2 320 2 213 2 
849 2 502 4 814 2 954 2 119 2 681 6 649 2 596 2 481 2 199 2 755 2 717 2 938 2 136 2 1008 2 62 2 1093 2 728 2 245 2 420 2 1060 2 1018 2 320 2 213 2 
849 2 502 4 814 2 954 2 119 2 681 6 649 2 596 2 481 2 199 2 755 2 717 2 938 2 136 2 1008 2 62 2 1093 2 728 2 245 2 420 2 1060 2 1018 2 320 2 213 2 
814 2 76 4 1021 2 299 4 225 2 227 4 561 4 305 6 1044 3 371 2 311 2 21 2 963 2 376 4 245 3 919 2 1060 10 529 2 113 2 707 2 586 3 119 4 1076 4 657 4 933 2 874 2 719 2 800 2 938 3 942 2 62 2 494 2 728 2 727 3 495 5 497 2 281 2 70 2 811 1 499 2 424 2 
113 2 76 4 814 2 1021 2 707 2 586 2 119 4 299 4 225 2 561 4 227 4 1076 4 657 4 933 2 305 6 49 2 719 2 371 2 1044 2 874 2 311 2 800 2 21 2 938 2 963 2 376 4 942 2 62 2 494 2 495 4 727 2 728 2 245 2 919 2 497 2 281 2 1060 10 731 2 811 2 529 2 70 2 499 2 424 2 
113 2 76 4 814 2 1021 2 707 2 586 2 119 4 299 4 225 2 561 4 227 4 1076 4 657 4 933 2 305 6 49 2 719 2 371 2 1044 2 874 2 311 2 800 2 21 2 938 2 963 2 376 4 942 2 62 2 494 2 495 4 727 2 728 2 245 2 919 2 497 2 281 2 1060 10 731 2 811 2 529 2 70 2 499 2 424 2 
113 2 76 4 814 2 1021 2 707 2 586 2 119 4 299 4 225 2 561 4 227 4 1076 4 657 4 933 2 305 6 49 2 719 2 371 2 1044 2 874 2 311 2 800 2 21 2 938 2 963 2 376 4 942 2 62 2 494 2 495 4 727 2 728 2 245 2 919 2 497 2 281 2 1060 10 731 2 811 2 529 2 70 2 499 2 424 2 
113 2 76 4 814 2 1021 2 707 2 586 2 119 4 299 4 225 2 561 4 227 4 1076 4 657 4 933 2 305 6 49 4 719 2 371 2 1044 2 874 2 311 2 800 2 21 2 938 2 963 2 376 4 942 2 62 2 494 2 495 4 727 2 728 2 245 2 919 2 497 2 281 2 1060 10 731 4 811 4 529 2 70 2 499 2 424 2 
417 2 496 2 462 2 797 2 838 2 899 2 
1028 2 635 2 1072 2 527 2 554 2 591 2 899 2 
460 1 979 2 183 2 119 8 85 2 559 2 647 2 995 2 623 2 193 2 478 2 365 1 715 2 95 1 51 1 50 2 369 2 171 2 843 2 770 2 148 1 384 2 1060 10 552 2 351 2 813 2 
27 2 
642 2 76 2 568 2 428 2 465 2 119 1 375 2 648 2 945 2 842 4 594 1 785 2 1060 1 227 2 561 2 265 2 179 7 1040 2 
642 2 76 2 568 2 428 2 465 2 375 4 648 4 945 2 842 4 785 2 227 2 561 2 265 4 179 6 1040 2 
642 6 76 2 568 2 428 2 465 8 119 1 375 8 648 8 945 2 842 4 594 1 785 2 1060 1 227 2 561 2 265 8 179 10 1040 2 
76 2 568 2 428 2 375 2 648 2 945 2 842 2 785 2 227 2 561 2 265 2 179 2 1040 2 
429 2 230 2 906 2 168 2 383 2 1060 4 112 2 116 2 119 4 589 2 408 2 133 2 883 1 71 1 
112 2 906 2 116 2 408 2 168 2 429 2 133 2 119 4 604 2 589 2 383 2 1060 4 230 4 197 2 
112 2 906 2 116 2 408 2 168 2 429 2 133 2 119 4 604 2 589 2 383 2 1060 4 230 4 197 2 
112 2 906 2 116 2 408 2 168 2 429 2 133 2 119 4 589 2 383 2 1060 4 230 2 
161 2 

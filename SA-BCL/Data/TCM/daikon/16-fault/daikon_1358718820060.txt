#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (55,459,546,671,800) (55,459,546,671,800) (55,459,546,671,800) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 166 727 23 116 2 560 508 239 467 563 188 729 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 709 463 425 306 502 541 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 696 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 141 893 844 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 141 893 844 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 141 893 844 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 141 893 844 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3_25()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:eq(DD)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:lt(II)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3R_122()Z
utilMDE.Intern:intern([J)[J
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaCharStream:getBeginLine()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_109()Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_133()Z
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:isReverse([I[I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.NodeList:NodeList()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_3_30()Z
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_149()Z
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(II)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ProglangType:isIntegral()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3_10()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V | ASSIGN | 49179 | = null
jtb.JavaParser:jj_2_16(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptSlice1:num_samples()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:jj_3R_108()Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3R_81()Z
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_106()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_15()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_27()Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_96()Z
jtb.JavaCharStream:backup(I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_72()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String; | ASSIGN | 970 | = null
jtb.JavaParser:jj_3R_48()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.Intern:intern([D)[D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptName:isEnterPoint()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3_5()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:negate(I)I
daikon.Quant:lte(II)Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfo:relate_var()V
daikon.ProglangType:isArray()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.Quant:union([I[I)[I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_21()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:internSubsequence([JII)[J
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_87()Z
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:concat([I[I)[I
jtb.JavaCharStream:getEndColumn()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3_14()Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_121()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3_20()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 22517 | = null
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3_36()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3R_80()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:noDups([I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3R_69()Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eq(JJ)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3R_75()Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:isMissing(I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:memberOf(S[S)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_119()Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.Invariants:Invariants()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_210()Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3R_77()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_68()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_29()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_3R_126()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Invariant:logOn()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([I[I)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3R_103()Z
daikon.Quant:eltsLT([II)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:gte(II)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaCharStream:ReadByte()C
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_61()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3R_60()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_4()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.LimitedSizeIntSet:size()I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:memberOf(D[F)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:jj_3R_162()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Debug:logDetail()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3R_70()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_120()Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:jj_3R_63()Z
utilMDE.Assert:assertTrue(Z)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | OPERATOR | 15357 | == -> <
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:jj_3R_57()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_2_14(I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_3()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_86()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3_16()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_118()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_2_25(I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ProglangType:dimensions()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_104()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_135()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_105()Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_124()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:eq(FF)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsEqual([II)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakHasherMap:size()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:ne(II)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:intern([I)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3_28()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(J[J)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ModBitTracker:num_samples()I
daikon.diff.RootNode:RootNode()V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gt(II)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_161()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isScalar()Z
daikon.ModBitTracker:num_vars()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_107()Z
utilMDE.MathMDE:gcd([I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_2_21(I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:memberOf(F[D)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
29 2 129 2 584 2 318 2 828 2 732 2 209 2 380 2 682 4 
153 2 94 2 172 2 847 6 721 2 506 2 325 2 443 6 884 2 648 2 537 6 
889 2 732 2 528 6 580 2 806 2 156 4 584 2 765 6 256 2 912 2 726 6 933 4 390 6 
35 6 860 10 744 8 556 2 717 4 835 4 321 4 140 10 922 16 631 8 723 2 208 8 531 16 11 4 810 2 568 10 391 2 638 26 614 29 732 6 362 2 462 12 517 2 825 16 584 6 228 10 710 8 886 6 937 2 831 10 
622 6 351 4 
466 2 
860 4 717 2 801 2 140 2 658 2 922 2 208 2 531 2 433 2 568 2 180 2 904 2 638 4 814 2 614 6 271 2 876 2 462 2 702 2 825 2 228 2 886 2 831 2 
638 12 435 6 151 2 614 15 321 2 205 4 776 2 462 5 140 4 825 8 922 8 585 4 531 8 676 6 228 4 568 4 831 4 
168 2 593 8 685 2 39 2 627 2 921 2 474 2 896 2 7 4 719 4 324 10 777 2 80 2 175 4 111 6 724 4 749 2 145 10 454 4 211 2 477 2 665 2 570 2 536 4 330 4 784 2 215 14 53 2 617 2 419 4 122 4 850 4 791 62 189 4 339 2 737 2 519 2 646 4 650 2 68 4 
525 2 410 2 268 2 115 2 909 2 576 2 366 2 466 2 586 2 919 2 
70 4 318 2 71 2 593 2 75 2 777 2 10 2 841 2 725 2 724 4 331 2 732 4 482 2 155 2 736 2 223 2 30 2 624 2 33 2 408 2 37 2 348 2 562 2 452 4 871 2 117 2 817 2 121 4 642 2 513 2 363 2 122 2 929 2 187 2 517 2 128 2 584 4 310 2 131 2 829 2 192 2 885 2 317 2 262 2 
36 6 35 4 103 2 860 6 320 4 1 2 203 4 653 4 717 2 205 4 42 6 140 16 922 32 143 4 208 18 531 32 507 2 810 2 85 2 568 16 415 2 571 6 638 48 511 8 435 6 668 6 614 54 732 4 275 2 462 22 516 4 825 32 584 4 585 4 676 6 228 16 710 6 886 4 831 16 
593 2 111 2 685 2 
298 22 183 2 286 2 745 2 4 2 746 2 819 2 718 10 290 2 778 2 292 2 915 2 610 2 117 2 
600 2 380 2 78 2 206 2 82 4 13 4 212 2 392 2 150 2 269 2 270 2 732 20 540 2 618 2 546 2 277 2 794 2 550 2 913 2 235 2 343 2 165 2 406 2 409 2 558 6 800 2 802 2 868 2 870 2 693 2 177 2 294 2 873 2 700 1 755 2 55 2 460 2 305 1 579 4 824 2 584 22 768 2 133 4 312 1 709 2 588 1 887 6 
489 2 
584 2 625 2 
584 4 672 2 750 2 
471 2 263 2 715 4 716 2 472 266 2 2 3 2 6 18 265 4 722 12 9 54 266 2 12 12 14 2 727 2 475 2 729 2 730 2 731 2 478 4 479 4 735 2 274 14 22 6 23 6 276 2 26 2 485 2 27 30 486 2 484 2 487 2 491 2 493 2 742 2 495 2 34 12 498 2 743 4 497 2 499 2 287 2 500 54 40 54 43 2 41 40 747 10 748 2 503 26 45 2 47 4 508 2 293 2 752 2 510 18 49 4 753 6 295 2 296 2 54 4 758 2 56 2 57 2 302 10 303 54 759 2 58 12 514 2 60 24 763 6 518 14 764 2 308 2 766 2 520 10 771 2 63 4 64 2 772 10 313 4 773 4 66 2 523 2 319 10 526 2 77 4 529 2 323 2 79 4 83 2 780 2 782 12 535 2 86 6 329 2 334 4 785 4 787 2 336 2 543 2 544 2 338 2 547 2 790 2 548 2 99 2 792 48 551 2 101 2 552 2 346 2 799 2 105 2 349 2 559 2 560 2 804 2 350 4 561 12 108 48 109 2 353 2 112 2 113 2 563 2 566 2 355 158 116 4 811 26 356 2 357 2 813 4 816 2 118 2 573 4 361 2 120 2 578 16 820 2 123 54 124 2 125 4 581 2 127 2 827 2 582 2 130 2 369 32 587 54 134 30 373 8 374 54 833 4 376 2 135 2 592 2 834 2 591 2 595 10 137 32 602 4 382 2 837 4 139 2 384 40 142 4 839 2 386 4 605 2 840 2 607 2 608 2 147 4 609 2 611 4 613 2 612 2 842 12 148 2 843 20 394 2 845 2 846 2 848 2 852 2 620 2 399 26 619 2 621 2 400 2 160 26 403 2 855 2 162 2 163 12 405 2 857 4 164 6 166 2 859 2 167 4 407 54 863 2 170 2 171 2 411 2 633 2 176 4 178 4 636 2 874 2 875 4 639 2 417 2 644 2 418 54 645 2 188 2 421 40 422 2 191 18 880 2 424 2 194 2 427 2 428 4 195 2 198 2 891 158 892 2 200 10 202 2 652 12 656 54 897 2 659 158 431 54 661 2 432 2 662 2 902 2 664 2 666 4 908 4 670 2 437 12 218 2 439 2 220 2 221 2 910 2 441 2 440 2 442 2 226 2 225 2 677 2 227 2 444 2 229 26 445 54 916 4 918 2 237 2 239 2 684 2 920 2 690 2 691 4 241 2 923 32 242 2 697 4 925 4 455 12 251 2 458 2 461 2 252 2 928 2 254 2 255 2 704 2 705 4 706 2 257 2 464 2 932 2 467 2 711 26 712 2 469 56 
214 1 169 2 396 2 186 2 
186 2 786 2 
505 2 490 2 593 2 184 2 11 2 598 2 186 2 
598 2 186 2 812 2 
632 2 598 2 186 2 
879 2 169 2 50 2 
598 2 186 2 
879 2 872 2 
186 2 87 2 
623 2 879 2 169 2 
169 2 654 2 107 2 
169 2 741 2 906 2 
169 2 340 2 858 2 
169 2 901 2 15 2 
555 2 879 2 
583 2 186 2 
654 2 438 2 
196 2 906 2 
340 2 429 2 
15 2 903 2 
879 2 635 2 
530 2 15 2 
340 2 20 2 
634 2 906 2 
654 2 783 2 
280 2 623 2 879 2 169 2 
280 2 623 2 879 2 169 2 708 2 
879 2 169 2 865 2 
879 2 169 2 695 2 
102 2 713 2 76 2 854 2 
298 6 864 2 894 2 5 4 154 2 545 2 692 2 62 4 259 2 770 2 522 2 739 2 341 2 370 2 663 2 65 2 626 2 938 2 
385 2 169 2 
46 2 593 2 184 2 430 2 
505 2 46 2 593 2 184 2 378 2 430 2 
593 2 184 2 11 2 598 2 186 2 260 2 
515 2 736 2 
593 2 184 2 11 2 138 2 
767 2 340 2 
554 2 15 2 
654 2 637 2 
936 2 906 2 
15 2 179 2 906 2 
15 2 161 2 906 2 
15 2 906 2 222 2 
881 2 15 2 906 2 
238 6 593 2 603 2 184 2 333 2 926 2 481 2 278 6 
879 2 781 2 
165 2 
596 2 380 2 381 2 387 2 13 4 16 5 270 2 269 2 150 6 615 2 732 26 480 4 483 3 618 6 279 2 404 3 494 2 406 2 496 2 409 2 867 2 289 2 870 2 48 2 294 2 873 2 297 2 300 2 755 2 301 2 641 2 756 4 59 2 768 2 311 2 887 4 197 4 73 4 72 2 201 8 78 2 206 2 81 3 82 4 534 2 212 2 92 2 669 2 332 2 216 2 217 2 540 2 674 2 549 2 793 2 794 2 550 2 913 6 235 2 233 2 917 2 343 2 342 2 558 6 693 2 248 8 460 2 579 4 703 2 824 2 826 2 584 26 707 2 133 4 709 2 830 2 
596 2 600 2 380 2 381 2 387 2 388 2 13 4 389 2 16 4 270 2 269 2 150 6 615 2 732 26 480 4 483 2 618 6 279 2 404 2 494 2 406 2 496 2 409 2 867 2 289 2 870 2 177 2 48 2 294 2 873 2 297 2 300 2 755 2 641 2 756 4 59 2 768 2 311 2 887 6 197 2 73 4 72 2 201 8 78 2 206 2 81 2 82 4 534 2 212 2 92 2 669 2 332 2 216 2 217 2 540 2 549 2 794 2 550 2 913 6 235 2 233 2 917 2 343 2 342 2 558 6 449 2 693 2 248 8 359 2 460 2 579 4 703 2 824 2 826 2 584 26 707 2 133 4 709 2 830 2 
61 2 
862 2 577 2 
651 4 74 2 597 2 473 2 836 2 379 2 721 4 206 2 900 4 606 2 325 2 84 2 326 2 537 6 213 2 269 2 152 2 153 4 732 6 616 2 540 2 847 6 25 2 488 4 443 6 158 2 856 2 32 2 236 2 797 2 446 10 285 2 406 2 558 4 803 2 687 2 450 4 869 4 693 2 694 8 506 2 354 2 808 2 249 2 456 2 360 8 755 2 877 2 460 2 643 2 927 2 364 2 579 2 253 4 823 2 584 12 465 2 133 2 193 2 935 2 
651 4 74 2 597 2 473 2 836 2 379 2 895 2 721 4 206 2 900 4 606 2 325 2 84 2 537 8 213 2 269 2 436 4 732 6 152 2 153 4 94 2 616 2 540 2 25 2 847 6 488 4 443 8 158 2 856 2 32 2 236 2 797 2 446 10 285 2 406 2 558 4 687 2 450 4 805 2 869 4 693 2 694 8 506 2 354 2 808 2 249 2 456 2 360 8 755 2 877 2 460 2 643 2 927 2 364 2 579 2 253 4 823 2 584 12 465 2 133 2 193 2 935 2 
153 2 152 2 877 2 74 2 473 2 927 2 836 2 364 2 687 2 450 2 253 4 847 2 721 2 900 4 465 2 84 2 236 2 537 2 
651 4 74 2 597 2 473 2 836 2 379 2 721 4 206 2 900 4 606 2 84 2 326 2 537 6 213 2 269 2 152 2 153 4 732 6 94 2 616 2 540 2 847 4 25 2 488 4 443 6 158 2 856 2 32 2 236 2 797 2 446 6 285 2 406 2 558 4 803 2 687 2 450 4 869 4 693 2 694 4 506 2 354 2 808 2 249 2 456 2 360 4 755 2 877 2 460 2 643 2 927 2 364 2 579 2 253 4 823 2 584 12 465 2 133 2 193 2 935 2 
651 4 74 2 597 2 473 2 836 2 379 2 721 4 206 2 900 4 606 2 84 2 326 2 537 4 213 2 269 2 152 2 153 4 732 6 616 2 540 2 847 6 25 2 488 4 443 6 158 2 856 2 32 2 236 2 797 2 446 6 285 2 406 2 558 4 803 2 687 2 450 4 869 4 693 2 694 4 506 2 354 2 808 2 249 2 456 2 360 4 755 2 877 2 460 2 643 2 927 2 364 2 579 2 253 4 823 2 584 12 465 2 133 2 193 2 935 2 648 2 
651 4 74 2 597 2 473 2 836 2 379 2 721 4 206 2 900 4 606 2 325 2 84 2 326 2 537 6 213 2 269 2 152 2 153 4 732 6 616 2 540 2 847 6 25 2 488 4 443 6 158 2 856 2 32 2 236 2 797 2 446 6 285 2 406 2 558 4 803 2 687 2 450 4 869 4 693 2 694 8 506 2 354 2 808 2 249 2 456 2 360 4 755 2 877 2 460 2 643 2 927 2 364 2 579 2 253 4 823 2 584 12 465 2 133 2 193 2 935 2 
651 4 74 2 597 2 473 2 836 2 379 2 721 4 206 2 900 4 606 2 325 2 84 2 326 2 537 6 213 2 269 2 152 2 153 4 732 6 616 2 540 2 847 8 25 2 488 4 443 8 158 2 856 2 32 2 236 2 797 2 446 10 285 2 406 2 558 4 803 2 687 2 450 4 869 4 693 2 694 8 506 2 354 2 808 2 249 2 456 2 360 8 755 2 877 2 460 2 643 2 927 2 364 2 579 2 253 4 823 2 584 12 465 2 133 2 193 2 935 2 648 2 
651 4 74 2 597 2 473 2 836 2 379 2 721 4 206 2 900 4 606 2 325 2 84 2 326 2 537 6 213 2 269 2 152 2 153 4 732 6 616 2 540 2 847 6 25 2 488 4 443 6 158 2 856 2 32 2 236 2 797 2 446 10 285 2 406 2 558 4 803 2 687 2 450 4 869 4 693 2 694 8 506 2 354 2 808 2 249 2 456 2 360 8 755 2 877 2 460 2 643 2 927 2 364 2 579 2 253 4 823 2 584 12 465 2 133 2 193 2 935 2 
470 2 473 2 264 6 721 4 13 4 16 2 269 2 270 2 18 6 732 24 273 1 480 4 734 7 483 2 25 2 279 2 28 2 488 4 489 6 282 6 32 2 494 2 285 2 496 2 288 2 504 6 506 4 291 6 750 6 48 4 294 2 509 2 299 2 512 4 300 2 755 2 760 2 309 2 768 2 521 2 315 6 524 6 74 2 78 2 81 2 82 4 84 2 326 2 328 1 537 4 540 2 549 2 794 2 550 2 343 2 553 1 797 2 345 1 557 1 558 6 352 2 354 2 114 2 808 4 572 2 364 2 579 4 822 6 823 2 824 2 584 46 132 6 133 4 589 2 375 2 590 2 597 2 596 2 379 2 836 2 599 2 600 2 380 2 381 2 604 2 606 2 150 6 152 2 153 4 616 2 847 8 618 8 398 6 158 2 159 2 402 2 856 4 625 6 406 2 861 1 409 2 630 10 869 8 870 2 177 2 873 2 877 2 643 2 878 1 190 2 882 1 193 2 648 4 426 2 887 6 197 1 199 1 651 6 201 4 204 6 657 2 206 2 660 2 900 4 210 2 212 2 213 2 224 6 443 12 678 8 913 6 232 2 231 2 235 12 917 2 236 2 683 2 446 2 447 2 687 2 450 4 451 2 693 2 694 2 453 2 248 4 247 7 249 2 250 6 456 2 460 2 927 2 701 2 253 4 703 2 465 2 258 2 709 2 935 2 261 4 939 2 
470 2 590 2 596 2 597 2 264 6 473 2 599 2 836 2 379 2 600 2 380 2 381 2 604 2 721 4 606 2 13 4 16 2 150 6 270 2 269 2 18 6 153 4 152 2 732 26 616 2 480 4 483 2 618 8 25 2 847 8 28 2 398 6 279 2 488 4 489 6 282 6 158 2 402 2 159 2 856 4 625 6 494 2 32 2 496 2 285 2 406 2 409 2 288 2 630 10 869 8 504 6 870 2 291 6 506 4 750 6 177 2 48 4 294 2 509 2 873 2 299 2 512 4 300 2 755 2 877 2 643 2 760 2 309 2 190 2 521 2 768 2 193 2 426 2 315 6 887 6 524 6 73 2 651 6 204 6 74 2 201 8 78 2 657 2 81 2 206 2 660 2 900 4 325 4 82 4 84 2 326 2 210 2 212 2 213 2 537 8 540 2 911 2 224 6 549 4 794 2 678 8 443 12 679 2 550 2 913 6 231 2 232 2 235 12 236 2 343 2 917 4 446 2 683 2 797 2 447 2 558 6 687 2 450 4 451 2 352 2 693 2 694 6 453 2 354 2 114 2 808 4 248 8 249 2 250 6 572 2 456 2 927 2 460 2 701 2 364 2 579 4 822 6 703 4 253 4 823 2 824 2 584 48 258 2 132 6 465 2 133 4 709 2 935 2 589 2 939 2 261 4 375 2 
470 2 590 2 596 2 597 2 264 6 473 2 599 2 836 2 379 2 600 2 380 2 381 2 604 2 721 4 606 2 13 4 16 2 150 6 270 2 269 2 18 6 153 4 152 2 732 26 616 2 480 4 483 2 618 8 25 2 847 8 28 2 398 6 279 2 488 4 489 6 282 6 158 2 402 2 159 2 856 4 625 6 494 2 32 2 496 2 285 2 406 2 409 2 288 2 630 10 869 8 504 6 870 2 291 6 506 4 750 6 177 2 48 4 294 2 509 2 873 2 299 2 512 4 300 2 755 2 877 2 643 2 760 2 309 2 190 2 521 2 768 2 193 2 426 2 315 6 887 6 524 6 73 2 651 6 204 6 74 2 201 8 78 2 657 2 81 2 206 2 660 2 900 4 325 4 82 4 84 2 326 2 210 2 212 2 213 2 537 8 540 2 911 2 224 6 549 4 794 2 678 8 443 12 679 2 550 2 913 6 231 2 232 2 235 12 236 2 343 2 917 4 683 2 446 6 797 2 447 2 558 6 687 2 450 4 451 2 352 2 693 2 694 6 453 2 354 2 114 2 808 4 248 8 249 2 250 6 572 2 456 2 360 4 460 2 927 2 701 2 364 2 579 4 822 6 703 4 253 4 823 2 824 2 584 48 258 2 132 6 465 2 133 4 709 2 935 2 589 2 939 2 261 4 375 2 
470 2 714 6 0 2 473 2 264 12 721 4 13 4 16 4 269 2 270 2 18 6 732 24 480 6 483 4 25 2 279 4 28 2 488 4 489 12 282 12 32 2 494 2 285 2 496 2 288 2 504 6 506 4 291 6 750 12 751 2 48 4 294 2 509 2 299 2 512 4 300 4 755 2 760 2 309 2 768 2 521 2 315 6 524 6 73 2 74 2 78 2 81 4 325 4 82 4 84 2 326 2 537 10 94 2 540 2 549 4 794 2 550 2 343 2 797 2 104 6 558 6 352 2 354 2 564 6 114 2 808 4 572 2 360 4 364 2 579 4 822 6 823 2 824 2 365 6 584 52 132 6 133 4 371 6 589 2 375 2 590 2 597 2 596 2 379 2 836 2 599 2 600 2 380 2 381 2 604 2 606 2 150 8 152 2 153 4 616 2 847 10 618 12 398 6 158 2 159 2 402 2 856 4 625 12 406 2 409 2 628 6 629 2 630 8 869 8 870 2 177 2 873 2 416 6 182 2 640 2 877 2 643 2 420 2 190 2 193 2 648 2 426 2 887 6 651 6 201 10 204 12 657 2 206 2 660 2 900 4 210 2 212 2 213 2 911 2 224 6 443 16 678 8 679 2 913 8 232 2 231 2 235 10 234 2 917 4 236 2 446 6 447 2 687 2 450 4 688 6 451 2 240 6 693 2 694 6 453 2 248 10 249 2 699 2 250 6 456 2 927 2 460 2 701 2 253 4 703 4 465 2 258 2 709 2 935 2 261 4 939 2 
285 2 651 2 597 2 836 2 687 2 869 2 721 4 606 2 506 2 694 6 900 2 325 2 354 2 84 2 326 2 213 2 537 6 456 2 360 4 152 2 153 4 927 2 643 2 364 2 25 2 253 2 847 6 823 2 488 2 584 4 465 2 443 4 32 2 446 4 797 2 
597 2 379 2 836 2 600 2 380 2 381 2 721 4 606 2 144 2 13 4 16 3 269 2 270 2 150 6 393 3 153 4 152 2 732 24 480 4 483 3 847 6 25 2 618 8 851 2 488 2 283 2 32 2 494 2 165 2 406 2 496 2 285 2 409 2 630 2 869 2 870 2 506 2 177 2 48 2 294 2 873 2 755 2 643 2 768 2 887 6 651 2 78 2 206 2 81 3 900 2 325 2 82 4 84 2 326 2 212 2 213 2 537 6 671 2 540 2 335 2 788 2 100 2 794 2 443 4 550 2 913 6 235 4 343 2 683 2 446 2 797 2 558 6 687 2 693 2 694 6 354 2 456 2 459 2 460 2 927 2 364 2 579 4 253 2 823 2 824 2 584 28 465 2 133 4 709 2 
456 2 818 2 32 2 
456 2 818 2 32 2 
596 4 600 2 380 2 381 2 721 4 606 2 13 4 476 2 16 2 270 2 269 2 150 2 17 2 732 16 152 2 153 4 618 2 847 12 488 2 492 2 856 2 494 2 32 4 406 2 38 4 409 2 501 2 630 2 869 4 870 2 291 2 506 4 177 2 48 6 294 2 873 2 512 2 755 2 761 2 307 2 309 2 768 2 193 2 648 4 649 2 887 6 888 2 197 2 651 4 527 2 74 2 201 4 78 2 206 2 779 2 900 2 325 4 82 4 84 4 434 4 212 2 537 12 213 2 907 2 95 2 94 4 540 2 549 4 794 2 443 16 550 2 913 2 235 4 236 2 917 4 343 2 446 6 447 2 558 6 106 2 450 4 693 2 694 6 453 2 808 4 248 4 924 2 698 2 249 2 456 6 457 2 360 4 818 2 460 2 579 4 703 4 253 2 824 2 826 4 584 24 465 2 367 2 133 4 709 2 935 2 261 2 
269 2 470 2 119 2 862 2 732 2 473 2 630 2 838 2 584 4 779 2 291 2 883 2 476 2 924 2 235 2 939 2 261 2 
596 4 600 2 380 2 381 2 721 4 606 2 13 4 476 2 16 4 270 2 269 2 150 2 17 2 732 16 152 2 153 4 616 2 397 2 618 2 847 12 488 2 492 2 856 4 494 2 32 4 406 2 38 4 409 2 501 2 869 4 870 2 291 2 506 4 177 2 48 6 294 2 873 2 512 2 755 2 307 2 309 2 768 2 193 2 648 4 649 2 887 6 888 2 651 4 527 2 74 2 201 4 78 2 206 2 779 2 900 2 325 4 82 4 84 4 434 4 212 2 537 12 213 2 539 2 95 4 673 2 94 4 540 2 549 4 794 2 443 16 550 2 913 2 235 2 236 2 917 4 343 2 446 6 447 2 347 2 558 6 686 2 106 2 450 4 693 2 694 6 453 2 808 4 248 4 924 2 249 2 456 6 457 2 360 4 818 2 460 2 579 4 703 4 253 2 824 2 826 4 584 24 465 2 133 4 709 2 935 2 
594 2 596 4 600 2 380 2 381 2 721 4 606 2 13 4 476 2 16 2 270 2 269 2 150 2 17 2 732 16 152 2 153 4 616 2 618 2 847 12 488 2 492 2 856 4 494 2 32 4 406 2 38 4 409 2 501 2 630 2 869 4 870 2 291 2 506 4 177 2 48 6 294 2 873 2 512 2 755 2 307 2 309 2 768 2 193 2 648 4 649 2 887 6 888 2 197 1 651 4 527 2 74 2 201 4 78 2 206 2 779 2 900 2 325 4 82 4 84 4 327 2 434 4 212 2 537 12 213 2 90 2 95 2 94 4 540 2 549 4 794 2 443 16 550 2 913 2 235 4 236 2 917 4 343 2 446 6 447 2 558 6 106 2 450 4 693 2 694 6 453 2 808 4 248 4 924 2 249 2 456 6 457 2 360 4 818 2 460 2 579 4 703 4 253 2 824 2 826 4 584 24 931 2 465 2 133 4 468 2 709 2 935 2 261 2 
448 2 541 2 463 2 502 2 306 2 173 2 762 2 870 2 174 2 584 4 207 2 768 2 550 2 795 2 245 2 709 2 425 2 
69 3 496 2 383 2 81 3 267 2 16 3 905 2 358 4 89 2 150 2 732 2 480 2 542 2 97 1 21 2 483 3 618 2 849 2 279 6 584 2 769 2 913 2 680 2 372 2 832 2 
69 2 496 2 383 2 81 2 267 2 16 2 905 2 358 4 89 2 150 2 732 2 480 2 542 2 21 2 483 2 618 2 849 2 279 6 584 2 769 2 913 2 680 2 372 2 832 2 
69 2 496 2 383 2 81 2 267 2 16 2 905 2 358 4 89 2 150 2 732 2 480 2 542 2 21 2 483 2 618 2 849 2 279 6 584 2 769 2 913 2 680 2 372 2 832 2 
136 2 140 2 531 2 16 3 146 4 905 2 614 4 732 4 272 2 395 2 483 3 337 2 98 2 618 2 675 2 281 2 853 4 740 6 228 2 796 2 344 2 35 2 496 2 922 2 244 3 807 2 246 2 809 4 567 2 568 2 638 4 815 3 185 2 825 2 126 3 584 10 423 4 710 4 934 4 831 2 
496 2 35 2 136 2 140 2 922 2 208 2 531 2 244 2 807 2 809 4 246 2 146 4 567 2 810 2 16 2 568 2 905 2 638 4 815 2 614 4 732 4 272 2 395 2 185 2 98 2 462 2 337 2 483 2 675 2 618 2 126 2 825 2 853 4 281 2 423 4 584 10 228 2 740 6 934 4 710 4 796 2 831 2 344 2 
496 2 35 2 136 2 140 2 922 2 208 2 531 2 244 2 807 2 809 4 246 2 146 4 567 2 810 2 16 2 568 2 905 2 638 4 815 2 614 4 732 4 272 2 395 2 185 2 98 2 462 2 337 2 483 2 675 2 618 2 126 2 825 2 853 4 281 2 423 4 584 10 228 2 740 6 934 4 710 4 796 2 831 2 344 2 
496 2 35 2 136 2 140 2 922 2 208 2 531 2 244 2 807 2 809 4 246 2 146 4 567 2 810 2 16 2 568 2 905 2 638 4 815 2 614 4 732 4 272 2 395 2 185 2 98 2 462 2 337 2 483 2 675 2 618 2 126 2 825 2 853 4 281 2 423 4 584 10 228 2 740 6 934 4 710 4 796 2 831 2 344 2 
496 2 35 2 136 2 140 2 922 2 208 4 531 2 244 2 807 2 809 4 246 2 146 4 567 2 810 4 16 2 568 2 905 2 638 4 815 2 614 4 732 4 272 2 395 2 185 2 98 2 462 4 337 2 483 2 675 2 618 2 126 2 825 2 853 4 281 2 423 4 584 10 228 2 740 6 934 4 710 4 796 2 831 2 344 2 
647 2 866 2 322 2 181 2 67 2 88 2 
297 2 91 2 738 2 19 2 157 2 696 2 322 2 
775 2 627 1 264 2 601 2 898 2 899 2 533 2 532 2 243 2 754 2 149 1 93 2 53 1 732 8 733 2 460 2 96 1 219 2 304 2 821 1 584 10 31 2 230 2 914 2 681 2 316 2 
798 2 35 2 1 1 205 2 655 2 42 4 140 6 8 2 922 6 143 2 208 3 531 6 810 2 568 6 511 2 638 12 435 4 614 15 51 2 732 6 462 4 24 2 825 6 30 2 584 6 192 2 228 6 401 2 284 2 710 4 831 6 
667 2 538 2 890 6 732 1 574 2 757 2 789 4 720 1 930 2 44 2 584 1 412 2 809 2 728 2 934 2 146 2 569 2 414 2 
667 2 538 2 890 6 574 4 757 2 789 4 930 2 44 4 412 2 809 2 728 2 934 2 146 2 569 2 414 4 
667 8 538 2 890 10 732 1 574 8 757 2 789 4 720 1 930 2 44 8 584 1 412 2 809 2 728 2 934 2 146 2 569 6 414 8 
538 2 890 2 574 2 757 2 789 2 930 2 44 2 412 2 809 2 728 2 934 2 146 2 414 2 
893 2 600 2 141 2 82 2 13 2 212 2 844 2 270 2 732 4 689 2 110 1 177 2 413 1 584 4 709 2 887 4 
844 2 270 2 732 4 893 2 141 2 689 2 584 4 82 2 13 2 709 2 212 2 887 2 
844 2 270 2 732 4 893 2 141 2 689 2 584 4 82 2 13 2 709 2 212 2 887 2 
844 2 270 2 732 4 893 2 600 2 141 2 689 2 584 4 177 2 82 2 13 2 709 2 212 2 887 4 
52 2 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 
377 1 575 1 368 1 314 1 565 1 774 1 

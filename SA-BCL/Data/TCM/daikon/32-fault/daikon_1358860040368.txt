#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (246,524) (246,524) 287 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (307,607) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (414,689) 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 407 (165,293) (165,293) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR utilMDE.Assert$AssertionException (246,524) 560 (694,714) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (246,524) 560 (694,714) (694,714) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (246,524) 560 (694,714) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 330 199 744 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 604 678 526 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 604 678 526 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 604 678 526 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 107 610 604 678 526 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection; | RETURN | 1264 | return null
utilMDE.WeakHasherMap:processQueue()V
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName:hashCode()I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127540 | = null
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:memberOf(J[J)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:intern([I)[I | RETURN | 15863 | return null
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:baseIsScalar()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Debug:logOn()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | RETURN | 27662 | return null
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.PptSlice2:arity()I
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I | CONDITION | 9296 | while (x) -> while (!x)
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | ASSIGN | 4792 | = null
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ModBitTracker:split(I)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13092 | = null
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE:max([I)I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
jtb.JavaParser:jj_3R_49()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
daikon.Quant:lte(II)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGT([I[I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:lexLT([I[I)Z
daikon.diff.Node:Node()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:slice([III)[I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.Invariant:logOn()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsFloat()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoAux:hashCode()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice0:arity()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | ASSIGN | 10728 | = null
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:dimensions()I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:justified()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfo:relate_var()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_50()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltsLT([II)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptSlice1:arity()I
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:subsetOf([J[J)Z | CONDITION | 196771 | if (x) -> if (!x)
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_163()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z | CONDITION | 31313 | if (x) -> if (!x)
daikon.Quant:eltwiseGTE([I)Z
daikon.ModBitTracker:num_sets()I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsGTE([II)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_vars()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(II)Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ValueTuple:size()I
daikon.Quant:eltwiseGT([I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3R_58()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 22146 | = null
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ProglangType:isFloat()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_ntk()I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfo:ioa_name()Ljava.lang.String; | RETURN | 99869 | return null
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaCharStream:BeginToken()C
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaCharStream:getEndColumn()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:noDups([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
629 2 536 2 298 2 156 2 419 4 179 2 246 2 283 2 524 2 
767 2 26 2 755 2 390 2 432 6 382 2 728 2 57 6 677 2 362 6 492 2 
751 6 451 4 74 6 586 2 238 2 144 6 246 2 112 2 320 6 524 2 367 2 58 2 397 4 
668 2 425 2 476 4 30 2 680 6 246 2 739 2 180 2 395 6 524 2 118 4 338 4 287 2 202 2 737 4 602 6 340 2 124 2 738 4 
447 4 436 6 
169 2 
307 2 683 2 414 2 607 2 205 2 282 2 
668 8 329 2 404 4 476 10 754 2 30 8 246 4 180 8 638 2 524 4 338 16 501 4 502 6 737 16 233 6 602 27 340 6 190 2 738 16 460 8 216 4 18 6 680 24 739 8 395 6 118 4 
352 2 756 2 414 2 
394 10 548 2 686 2 763 2 732 2 35 2 98 2 537 2 297 2 689 2 538 2 11 22 101 2 372 2 
668 2 425 2 474 2 476 2 30 2 180 2 338 2 647 2 737 2 602 6 340 2 341 2 738 2 45 2 762 2 680 4 739 2 395 4 52 2 659 2 417 2 118 2 22 2 
668 4 216 4 476 4 680 12 30 4 127 2 739 4 180 4 522 2 501 4 338 8 502 6 233 6 737 8 602 16 124 2 738 8 
706 2 110 8 405 2 672 2 547 2 247 4 36 2 756 2 168 14 259 2 15 2 484 2 170 2 290 2 414 6 150 2 565 2 352 4 629 2 20 2 174 2 204 2 123 2 
506 2 765 2 122 2 
403 2 2 2 312 2 6 2 9 1 212 2 213 2 214 2 690 2 16 1 115 4 505 2 692 2 413 1 693 2 695 2 318 1 220 2 698 2 609 2 702 4 222 2 701 2 322 2 420 1 324 1 225 2 422 4 424 2 328 3 427 6 28 3 31 16 227 2 32 3 228 16 524 32 334 16 622 2 335 3 37 3 525 2 623 2 39 1 42 3 234 2 530 2 713 2 441 2 531 2 717 2 142 16 626 2 627 1 47 1 48 4 145 2 146 2 721 2 444 2 51 4 240 2 148 3 723 2 149 3 350 24 53 2 724 2 59 2 630 2 242 1 156 2 243 1 449 2 64 2 65 2 361 2 246 34 163 2 550 4 248 1 363 8 456 2 553 2 251 1 368 2 735 2 254 1 370 2 736 2 167 12 649 2 260 2 73 2 559 1 374 2 461 6 171 2 265 6 562 2 266 2 466 2 379 24 267 1 268 5 661 2 172 2 745 2 468 2 748 32 85 3 570 2 276 2 669 2 572 2 573 6 671 3 92 2 280 2 181 2 95 4 93 2 384 2 674 2 184 2 481 2 758 2 187 2 286 2 289 8 482 8 583 2 194 32 393 2 587 2 195 2 589 2 396 2 769 2 398 2 399 2 591 3 498 2 401 2 594 4 304 2 305 3 
664 2 246 2 
108 2 246 4 423 2 
133 2 
682 4 598 14 308 2 3 18 684 2 499 2 408 2 315 2 211 14 7 2 8 2 603 44 12 8 117 4 507 6 319 2 219 2 510 2 221 2 612 14 518 2 519 4 705 2 426 2 428 2 709 6 621 2 232 14 132 2 38 2 40 2 712 2 625 10 528 8 529 2 43 8 344 14 140 14 716 2 719 2 49 2 534 2 351 10 353 14 55 2 241 2 631 2 357 2 63 4 359 2 544 2 360 44 729 2 545 2 162 2 641 12 366 6 69 18 552 8 554 10 457 8 257 2 70 2 556 2 263 2 463 2 264 2 378 10 380 4 173 2 273 2 470 2 569 6 86 32 90 2 574 12 281 10 576 2 285 2 188 2 581 4 189 44 582 2 679 14 483 10 485 4 391 14 487 2 488 2 295 2 764 14 681 2 496 4 770 14 300 2 592 2 
434 2 650 2 25 2 608 1 
128 2 650 2 
83 2 650 2 414 2 742 2 34 2 564 2 597 2 
635 2 83 2 650 2 
83 2 650 2 61 2 
239 2 434 2 697 2 
83 2 650 2 
239 2 415 2 
462 2 650 2 
239 2 434 2 158 2 
555 2 434 2 262 2 
434 2 708 2 439 2 
418 2 434 2 326 2 
434 2 325 2 733 2 
239 2 593 2 
650 2 585 2 
497 2 262 2 
708 2 261 2 
676 2 326 2 
600 2 325 2 
409 2 239 2 
656 2 325 2 
421 2 326 2 
255 2 708 2 
27 2 262 2 
734 2 239 2 434 2 158 2 
734 2 239 2 434 2 158 2 628 2 
710 2 239 2 434 2 
239 2 434 2 310 2 
313 2 296 2 105 2 203 2 
644 2 185 2 414 2 34 2 
644 2 185 2 119 2 414 2 34 2 564 2 
83 2 650 2 414 2 651 2 34 2 597 2 
284 2 772 2 
414 2 356 2 34 2 597 2 
577 2 326 2 
605 2 325 2 
535 2 262 2 
708 2 450 2 
348 2 708 2 325 2 
747 2 708 2 325 2 
346 2 708 2 325 2 
708 2 364 2 325 2 
478 2 210 6 34 2 435 2 438 6 198 2 414 2 358 2 
239 2 726 2 
44 2 82 2 383 2 575 4 673 2 
434 2 688 2 
6 2 
403 2 2 2 312 2 503 2 690 2 505 2 695 2 702 2 701 2 222 2 23 2 225 2 422 2 427 4 707 2 31 6 227 2 333 2 524 26 525 2 622 2 131 2 41 2 530 2 440 2 713 2 441 4 626 2 48 4 145 2 721 2 51 4 722 2 53 2 156 2 540 2 539 2 449 2 65 2 246 26 550 4 363 2 254 2 646 4 370 2 167 8 73 2 461 2 374 2 654 2 465 2 265 2 562 2 466 2 267 2 661 6 81 2 468 2 748 4 752 2 573 6 278 2 181 2 95 2 481 2 758 2 759 2 583 2 194 6 393 2 489 4 396 2 594 4 304 2 
403 2 2 2 685 2 312 2 690 2 691 2 505 2 692 2 695 2 702 2 701 2 222 2 23 2 225 2 422 2 427 6 707 2 31 6 227 2 524 26 525 2 622 2 131 2 41 2 530 2 713 2 441 4 626 2 48 4 145 2 721 2 51 4 722 2 53 2 156 2 540 2 539 2 449 2 65 2 731 2 246 26 550 4 363 2 254 2 646 4 370 2 167 8 73 2 461 2 374 2 654 2 465 2 265 2 562 2 466 2 267 2 661 6 81 2 468 2 748 4 752 2 573 6 278 2 181 2 95 2 674 2 481 2 758 2 759 2 583 2 194 6 393 2 489 4 195 2 396 2 594 4 304 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
293 2 29 2 407 2 224 2 165 2 
403 2 407 2 246 24 550 4 312 2 639 2 165 2 6 2 646 4 736 2 256 2 461 3 505 2 265 3 562 2 466 2 416 2 567 2 661 6 222 2 701 2 81 2 468 2 748 3 224 2 225 2 573 6 427 6 520 2 29 2 31 6 181 2 674 2 524 24 525 2 481 2 758 2 288 2 41 2 583 2 713 2 388 2 194 8 293 2 626 2 145 4 195 2 48 4 443 2 721 2 51 4 53 2 396 2 59 2 156 2 630 2 302 2 157 3 540 2 594 4 304 2 449 2 
99 2 634 2 766 2 
99 2 634 2 766 2 
403 2 1 2 312 2 13 4 505 2 694 2 416 2 702 2 701 2 703 2 224 2 225 2 422 2 26 2 427 6 521 2 31 2 429 2 524 16 525 2 432 12 41 2 527 2 235 2 713 2 626 2 349 2 48 4 145 4 721 2 51 4 53 2 152 4 153 2 57 8 156 2 448 2 540 2 449 2 728 4 66 4 634 2 246 24 550 4 362 10 249 2 167 2 258 4 558 2 560 2 654 2 562 2 466 2 661 2 81 2 272 2 468 2 748 2 573 6 382 4 753 2 181 2 95 2 94 2 674 2 481 2 758 2 288 4 677 4 583 2 102 2 390 4 194 2 490 2 195 2 492 2 766 2 396 2 202 2 594 4 304 2 
160 2 505 2 91 2 606 2 309 2 141 2 521 2 245 2 145 2 490 2 246 4 416 2 524 2 700 2 590 2 771 2 448 2 
403 2 1 2 312 2 13 4 505 2 694 2 321 2 702 2 701 2 703 2 224 2 225 2 422 2 26 2 427 6 31 2 429 4 524 14 525 2 432 12 41 2 527 2 235 2 713 2 714 2 626 2 349 2 48 4 145 2 721 2 51 4 53 2 152 4 153 2 57 8 156 2 540 2 449 2 728 4 66 4 634 2 246 20 550 4 362 10 249 2 167 2 258 4 558 2 560 2 654 2 562 2 466 2 661 2 81 2 272 2 468 2 748 4 573 6 382 4 753 2 181 2 95 2 94 2 674 2 481 2 758 2 288 4 677 4 583 2 102 2 390 4 194 2 195 2 492 2 766 2 396 2 202 2 594 4 304 2 
403 2 1 2 312 2 13 4 505 2 694 2 416 2 702 2 701 2 703 2 224 2 225 2 422 2 26 2 427 6 521 2 31 2 429 2 524 16 525 2 432 12 41 2 527 2 235 2 713 2 626 2 349 2 48 4 145 4 721 2 51 4 53 2 152 4 153 2 57 8 156 2 448 2 540 2 449 2 728 4 66 4 634 2 246 24 550 4 362 10 249 2 167 2 258 4 558 2 560 2 654 2 562 2 466 2 661 2 81 2 272 2 468 2 748 2 573 6 382 4 753 2 181 2 95 2 94 2 674 2 481 2 758 2 288 4 677 4 583 2 102 2 390 4 194 2 490 2 195 2 492 2 766 2 396 2 202 2 594 4 304 2 
306 2 403 2 207 2 599 22 109 2 208 4 312 2 5 2 113 2 602 8 505 2 412 2 217 4 216 4 508 2 699 2 514 2 701 2 222 2 223 2 515 2 23 6 323 2 225 2 24 4 704 2 327 2 614 4 330 2 427 4 331 2 30 2 31 10 227 2 617 2 523 6 229 2 524 22 525 2 431 1 338 4 433 6 130 2 233 6 41 2 134 2 135 12 340 4 715 2 532 2 143 2 626 2 442 2 533 2 48 4 145 2 443 2 721 2 51 2 54 12 446 2 151 2 154 2 155 2 156 2 725 6 157 2 540 2 449 2 543 2 161 2 453 2 67 2 454 2 246 28 638 4 455 2 550 2 363 6 639 2 250 2 642 4 646 8 737 4 167 16 166 2 371 2 256 2 373 4 738 4 461 6 465 4 655 4 377 2 561 2 739 2 265 6 563 2 562 2 658 2 743 4 467 2 567 2 744 2 661 10 270 2 271 2 746 4 468 2 748 6 84 4 666 2 750 2 88 2 178 6 473 2 668 2 476 4 573 6 670 2 477 2 180 2 181 2 479 2 674 2 96 2 757 2 578 2 481 2 760 4 584 2 583 2 194 16 291 2 680 6 196 2 195 2 588 2 199 2 491 2 201 2 396 2 768 2 104 2 106 2 594 4 595 2 304 2 
546 4 31 2 246 2 549 2 524 2 410 2 646 2 100 2 317 2 461 3 236 2 17 2 138 2 194 2 292 2 265 3 50 2 493 2 661 2 222 2 748 3 355 2 23 6 274 3 
546 4 31 2 246 2 549 2 524 2 410 2 646 2 100 2 317 2 461 2 236 2 17 2 138 2 194 2 292 2 265 2 50 2 493 2 661 2 222 2 748 2 355 2 23 6 274 2 
546 4 31 2 246 2 549 2 524 2 410 2 646 2 100 2 317 2 461 2 236 2 17 2 138 2 194 2 292 2 265 2 50 2 493 2 661 2 222 2 748 2 355 2 23 6 274 2 
452 4 730 2 246 10 164 2 314 2 68 2 253 3 737 2 602 5 738 2 72 2 504 4 461 3 17 2 464 2 739 2 19 2 511 2 513 4 222 2 748 3 120 2 749 3 381 6 87 2 668 2 30 2 180 2 524 4 334 2 338 2 194 2 237 2 347 4 142 2 680 4 541 2 596 3 62 4 542 4 
452 4 730 2 246 10 164 2 314 2 68 2 253 2 737 2 602 4 738 2 72 2 504 4 461 2 17 2 464 2 739 2 19 2 511 2 513 4 222 2 748 2 120 2 749 2 381 6 87 2 668 2 476 2 30 2 180 2 524 4 334 2 338 2 340 2 194 2 237 2 347 4 142 2 294 2 680 4 541 2 596 2 62 4 542 4 
452 4 730 2 246 10 164 2 314 2 68 2 253 2 737 2 602 4 738 2 72 2 504 4 461 2 17 2 464 2 739 2 19 2 511 2 513 4 222 2 748 2 120 2 749 2 381 6 87 2 668 2 476 2 30 2 180 2 524 4 334 2 338 2 340 2 194 2 237 2 347 4 142 2 294 2 680 4 541 2 596 2 62 4 542 4 
452 4 730 2 246 10 164 2 314 2 68 2 253 2 737 2 602 4 738 2 72 2 504 4 461 2 17 2 464 2 739 2 19 2 511 2 513 4 222 2 748 2 120 2 749 2 381 6 87 2 668 2 476 2 30 2 180 2 524 4 334 2 338 2 340 2 194 2 237 2 347 4 142 2 294 2 680 4 541 2 596 2 62 4 542 4 
452 4 730 2 246 10 164 2 314 2 68 2 253 2 737 2 602 4 738 2 72 2 504 4 461 2 17 2 464 2 739 2 19 2 511 2 513 4 222 2 748 2 120 2 749 2 381 6 87 2 668 2 476 4 30 2 180 2 524 4 334 2 338 2 340 4 194 2 237 2 347 4 142 2 294 4 680 4 541 2 596 2 62 4 542 4 
201 2 114 2 376 2 619 2 741 2 230 2 
114 2 465 2 337 2 718 2 500 2 60 2 551 2 
475 2 405 1 209 2 246 10 637 2 640 2 524 8 336 2 601 2 675 2 339 2 583 2 711 1 170 1 192 2 653 1 136 2 343 2 740 2 269 2 663 2 495 2 469 2 175 2 275 1 177 2 
668 6 404 2 476 4 30 6 246 6 180 6 430 2 524 6 68 2 580 2 338 6 233 4 737 6 602 16 316 2 340 2 738 6 460 2 116 2 216 2 18 4 294 2 680 12 739 6 658 2 746 2 611 2 595 2 727 2 542 4 
504 2 375 2 193 2 347 2 279 2 76 2 246 1 657 2 77 4 182 7 78 2 524 1 97 2 513 2 643 2 10 2 516 1 121 2 
504 2 375 4 193 4 347 2 279 2 76 2 657 2 77 4 182 6 78 2 97 2 513 2 643 2 10 2 121 4 
504 2 375 8 193 8 347 2 279 2 76 8 246 1 657 2 77 4 182 10 78 2 524 1 97 2 513 2 643 2 10 6 516 1 121 8 
504 2 375 2 193 2 347 2 279 2 657 2 77 2 182 2 78 2 97 2 513 2 643 2 121 2 
111 2 687 2 411 2 604 2 14 2 218 2 509 2 696 2 610 2 225 6 226 2 615 2 427 22 126 2 332 2 618 2 33 2 524 28 526 2 129 1 437 4 624 2 137 2 139 10 46 2 720 1 51 12 445 2 147 2 56 2 449 4 632 2 244 2 246 32 550 10 365 1 252 2 369 2 645 2 458 4 459 2 557 2 566 2 662 1 472 2 667 4 674 4 183 2 480 2 579 1 186 2 678 2 486 1 761 4 195 4 197 2 200 3 494 4 400 2 303 2 206 2 304 6 
427 6 126 2 636 2 246 12 550 4 33 2 524 12 365 2 526 2 458 2 437 2 604 2 678 2 14 2 103 2 139 2 761 2 218 2 509 2 197 2 51 4 147 2 494 6 354 2 568 2 471 2 304 2 449 2 225 2 
0 2 311 2 111 2 4 2 687 2 411 2 604 2 215 2 14 2 218 2 509 2 696 2 512 2 610 4 21 2 517 6 225 4 613 4 226 2 125 2 427 40 616 4 332 2 620 6 618 2 33 2 524 40 231 2 526 2 437 4 342 2 139 10 46 2 51 20 445 2 449 2 159 2 632 2 633 2 244 6 246 44 550 18 252 2 645 2 458 4 648 2 71 8 459 2 652 2 75 2 79 2 660 2 566 2 662 2 80 8 665 6 176 2 571 2 667 2 472 2 183 4 674 6 385 2 186 2 386 2 678 2 387 2 103 2 191 8 389 4 486 3 761 4 392 2 197 2 195 6 200 6 494 14 299 2 400 4 301 2 303 2 402 2 206 2 304 4 
89 2 244 2 427 18 246 18 332 2 550 6 33 2 183 2 524 16 674 4 365 2 252 2 526 2 411 2 458 4 437 4 604 2 678 2 14 2 103 2 137 2 139 6 761 4 345 2 218 2 197 2 195 4 509 2 51 6 147 2 445 2 200 2 610 2 494 12 662 2 400 2 107 2 304 2 449 2 225 2 277 2 
406 2 

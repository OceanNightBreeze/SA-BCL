#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.IllegalArgumentException 267 267 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.IllegalArgumentException (42,112,349,531,576,825,826) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 462 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 485 303 498 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 288 288 815 815 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 225 (40,693) (110,489) (110,489) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 360 464 784 617 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 516 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 257 715 218 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 176 257 715 218 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 257 715 218 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltwiseGT([I)Z
daikon.ValueTuple:size()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(II)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:lt(II)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:dimensions()I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfo:relate_var()V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:subsetOf([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:eltsGteIndex([I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | CONDITION | 21221 | if (x) -> if (!x)
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptSlice1:arity()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:gt(II)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfo:isPointer()Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:subsetOf([D[D)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53476 | = null
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern:intern([I)[I
jtb.JavaCharStream:readChar()C
daikon.Quant:lexEqual([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:ne(II)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:memberOf(F[F)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lte(II)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:memberOf(J[J)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.Node:Node()V
daikon.Quant:setDiff([I[I)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:memberOf(D[F)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:eltsEqual([II)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.ModBitTracker:split(I)I
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eq(FF)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONDITION | 127882 | if (x) -> if (!x)
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Assert:assertTrue(Z)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | OPERATOR | 60487 | == -> <
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 7162 | return null
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.ProglangType:isArray()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ModBitTracker:num_vars()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.MathMDE:gcd([I)I
daikon.Quant:lexLTE([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:slice([III)[I
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.PptSlice0:arity()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken; | ASSIGN | 215280 | = null
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([D)D
daikon.Ppt:Ppt()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 30997 | return null
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | STATEMENT | 54139 | stmt -> ;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:eltsGTE([II)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.ProglangType:isPseudoArray()Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:sign(I)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:gcd(II)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice1:num_samples()I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:gte(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan; | RETURN | 1528 | return null
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice2:arity()I
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | STATEMENT | 5655 | stmt -> ;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Debug:logOn()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 18003 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Debug:logDetail()Z
daikon.Quant:noDups([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern:numIntArrays()I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:intersection([I[I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern:intern([J)[J
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:logOn()Z
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.Invariant:isWorthPrinting()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
735 2 359 2 445 2 263 2 555 4 650 2 573 2 736 2 437 2 
220 2 587 2 358 2 158 2 165 2 459 2 45 2 135 2 398 6 480 6 137 6 
511 6 662 2 573 2 47 4 542 2 528 4 245 2 553 2 719 6 77 6 263 2 434 2 625 6 
163 16 339 10 614 8 311 2 683 2 643 2 691 2 263 6 203 29 536 8 149 10 656 10 591 16 210 2 826 6 102 2 852 10 129 4 540 4 573 6 440 16 780 12 857 4 560 26 21 4 112 6 79 8 733 10 57 2 547 8 
267 4 
467 2 
0 2 713 4 642 2 764 2 167 2 66 2 292 4 646 2 345 2 233 2 509 2 240 2 354 4 301 2 781 2 78 2 475 2 786 2 367 2 567 2 687 2 138 2 140 2 86 2 315 2 691 2 263 4 483 2 535 2 41 2 212 2 628 2 385 2 217 4 331 2 573 4 48 2 106 2 219 2 445 2 759 2 449 2 450 2 116 2 
163 6 339 4 531 4 263 4 649 4 767 2 203 12 349 2 656 4 149 4 591 6 42 2 852 4 572 6 573 4 440 6 576 8 780 4 560 10 547 2 
367 2 294 2 147 2 
851 2 100 2 326 2 558 2 776 2 167 2 543 2 357 22 123 2 859 2 417 2 739 2 676 2 476 10 
163 2 339 2 711 2 197 2 619 2 317 2 261 2 740 2 203 6 656 2 149 2 299 2 591 2 852 2 804 2 440 2 51 2 857 2 780 2 560 4 112 2 733 4 547 2 
163 8 339 4 852 4 566 2 540 2 440 8 429 2 780 4 560 12 649 6 722 6 203 15 656 4 349 4 149 4 591 8 825 4 
252 2 452 2 367 8 522 2 712 4 117 4 479 2 686 2 427 2 140 2 377 2 690 10 90 4 648 2 294 6 796 4 147 2 70 4 773 4 328 4 215 2 352 2 217 4 240 4 777 4 272 14 750 2 387 2 855 2 753 4 672 2 247 4 673 10 837 2 838 2 546 4 495 62 613 2 812 2 191 2 
128 2 467 2 765 2 552 2 808 2 448 2 173 2 462 2 208 2 80 2 724 2 
453 2 455 2 8 2 10 2 651 2 234 2 772 2 355 2 17 2 18 2 668 2 242 1 670 2 472 6 680 1 25 11 564 1 789 2 681 2 30 2 688 1 31 6 143 5 34 1 260 2 263 30 486 2 151 2 573 32 806 11 52 4 581 2 281 2 392 1 161 2 585 4 62 3 287 2 63 2 397 2 166 1 503 2 586 1 720 2 404 1 822 2 725 2 827 4 508 2 510 6 411 3 414 2 598 6 831 2 179 3 599 3 302 2 73 1 75 1 834 2 605 1 186 4 189 1 418 2 734 6 306 17 840 1 424 2 195 6 525 2 313 1 736 2 88 6 533 2 321 6 433 1 206 2 95 2 849 1 743 2 98 2 746 12 213 2 748 2 332 2 104 2 544 2 442 2 336 2 758 2 860 2 223 4 447 2 761 3 862 2 226 2 640 1 115 1 
573 2 192 2 
461 2 305 2 573 4 
583 2 
193 2 308 2 787 2 370 2 134 2 618 2 458 2 289 2 230 2 291 2 532 2 718 2 795 2 482 2 380 2 171 2 68 2 39 2 589 2 798 2 847 2 624 18 485 2 824 2 593 2 661 2 775 2 71 2 438 2 44 2 747 2 629 2 181 2 415 2 752 2 303 2 493 2 732 2 579 18 498 2 391 2 113 18 
19 2 280 2 258 1 744 2 
19 2 703 2 
19 2 816 2 367 2 836 2 129 2 609 2 180 2 
19 2 836 2 59 2 
19 2 35 2 836 2 
280 2 340 2 122 2 
19 2 836 2 
172 2 122 2 
19 2 432 2 
832 2 280 2 122 2 
368 2 678 2 280 2 
91 2 280 2 50 2 
695 2 280 2 150 2 
490 2 22 2 280 2 
800 2 122 2 
19 2 674 2 
678 2 469 2 
227 2 50 2 
150 2 15 2 
22 2 333 2 
122 2 200 2 
37 2 22 2 
446 2 150 2 
277 2 50 2 
692 2 678 2 
832 2 280 2 114 2 122 2 
832 2 551 2 280 2 114 2 122 2 
584 2 280 2 122 2 
369 2 280 2 122 2 
627 2 7 2 636 2 637 2 
81 2 641 4 408 2 286 2 853 2 64 2 779 2 130 2 156 2 168 2 574 2 357 6 603 2 729 2 221 2 705 4 492 2 727 2 
280 2 726 2 
367 2 699 2 622 2 180 2 
367 2 699 2 622 2 76 2 609 2 180 2 
19 2 367 2 836 2 129 2 180 2 160 2 
781 2 793 2 
367 2 413 2 129 2 180 2 
250 2 150 2 
22 2 630 2 
678 2 56 2 
818 2 50 2 
22 2 526 2 50 2 
388 2 22 2 50 2 
103 2 22 2 50 2 
22 2 541 2 50 2 
367 2 794 2 379 6 296 6 330 2 180 2 730 2 708 2 
164 2 122 2 
161 2 
2 2 453 2 5 4 229 2 8 2 344 2 766 2 234 2 13 2 772 2 465 2 17 2 667 4 362 4 477 2 788 4 789 2 375 2 30 2 568 2 263 26 569 8 151 2 573 26 46 2 274 4 52 4 581 2 810 2 813 4 815 2 288 2 397 2 63 2 503 2 402 4 725 2 507 2 827 4 508 2 510 6 414 6 598 6 831 2 513 4 834 2 186 4 610 2 611 4 418 2 734 2 519 2 306 4 195 2 524 2 312 2 198 2 736 2 88 4 533 2 433 2 206 2 95 2 849 2 98 2 322 2 746 6 332 2 104 2 749 2 758 2 447 2 223 4 863 4 
2 2 453 2 5 4 229 2 8 2 344 2 766 2 234 2 772 2 465 2 355 2 17 2 667 4 362 4 477 2 788 4 789 2 375 2 30 2 568 2 262 2 263 26 569 8 151 2 573 26 46 2 274 4 52 4 581 2 810 2 813 4 397 2 63 2 503 2 402 4 717 2 725 2 507 2 827 4 508 2 510 6 414 6 598 6 831 2 513 4 834 2 186 4 610 2 611 4 418 2 734 2 519 2 306 4 195 2 524 2 312 2 198 2 736 2 88 6 533 2 433 2 206 2 95 2 849 2 98 2 322 2 746 6 332 2 104 2 749 2 755 2 336 2 758 2 223 4 447 2 451 2 863 4 
444 2 
342 2 395 2 
453 2 4 2 285 2 165 2 397 2 398 6 401 2 503 2 403 2 232 2 295 2 556 2 14 4 659 4 827 2 510 4 356 2 833 2 600 2 241 2 358 4 132 2 419 10 521 2 480 6 29 2 135 2 684 8 136 4 376 2 137 6 141 2 144 2 533 2 318 2 263 6 264 2 40 2 320 2 848 2 698 4 697 4 207 2 384 2 436 8 488 2 489 2 271 2 332 2 573 12 157 2 443 2 756 2 758 2 158 4 110 2 447 2 159 4 223 2 225 2 
453 2 4 2 285 2 165 2 397 2 398 8 401 2 503 2 403 2 295 2 556 2 14 4 659 4 827 2 510 4 356 2 600 2 241 2 358 4 132 2 419 10 521 2 29 2 480 6 135 2 684 8 136 4 376 2 137 8 141 2 144 2 533 2 318 2 263 6 38 4 264 2 40 2 320 2 848 2 698 4 697 4 207 2 384 2 436 8 488 2 489 2 271 2 332 2 573 12 386 2 157 2 443 2 220 2 756 2 758 2 158 4 110 2 111 2 447 2 223 2 159 4 225 2 
489 2 271 2 480 2 398 2 136 2 401 2 241 2 157 2 144 2 358 2 158 2 110 2 40 2 159 4 207 2 295 2 556 2 659 4 
453 2 4 2 285 2 397 2 398 6 401 2 503 2 403 2 232 2 295 2 556 2 14 4 659 4 827 2 510 4 356 2 833 2 600 2 241 2 358 4 132 2 419 6 521 2 480 4 29 2 135 2 684 4 136 4 376 2 137 6 141 2 144 2 533 2 318 2 263 6 264 2 40 2 320 2 848 2 698 4 697 4 207 2 384 2 436 4 488 2 489 2 271 2 332 2 573 12 157 2 443 2 220 2 756 2 758 2 158 4 110 2 447 2 159 4 223 2 225 2 
453 2 4 2 285 2 397 2 398 4 401 2 503 2 403 2 232 2 295 2 556 2 14 4 659 4 827 2 510 4 356 2 833 2 600 2 241 2 358 4 132 2 419 6 521 2 480 6 29 2 135 2 684 4 136 4 376 2 137 6 141 2 144 2 533 2 318 2 263 6 264 2 40 2 320 2 848 2 698 4 697 4 207 2 384 2 436 4 488 2 489 2 271 2 45 2 332 2 573 12 157 2 443 2 756 2 758 2 158 4 110 2 447 2 159 4 223 2 225 2 
453 2 4 2 285 2 165 2 397 2 398 6 401 2 503 2 403 2 232 2 295 2 556 2 14 4 659 4 827 2 510 4 356 2 833 2 600 2 241 2 358 4 132 2 419 6 521 2 480 6 29 2 135 2 684 4 136 4 376 2 137 6 141 2 144 2 533 2 318 2 263 6 264 2 40 2 320 2 848 2 698 4 697 4 207 2 384 2 436 8 488 2 489 2 271 2 332 2 573 12 157 2 443 2 756 2 758 2 158 4 110 2 447 2 159 4 223 2 225 2 
453 2 4 2 285 2 165 2 397 2 398 6 401 2 503 2 403 2 232 2 295 2 556 2 14 4 659 4 827 2 510 4 356 2 833 2 600 2 241 2 358 4 132 2 419 10 521 2 480 8 29 2 135 2 684 8 136 4 376 2 137 8 141 2 144 2 533 2 318 2 263 6 264 2 40 2 320 2 848 2 698 4 697 4 207 2 384 2 436 8 488 2 489 2 271 2 45 2 332 2 573 12 157 2 443 2 756 2 758 2 158 4 110 2 447 2 223 2 159 4 225 2 
453 2 4 2 285 2 165 2 397 2 398 6 401 2 503 2 403 2 232 2 295 2 556 2 14 4 659 4 827 2 510 4 356 2 833 2 600 2 241 2 358 4 132 2 419 10 521 2 480 6 29 2 135 2 684 8 136 4 376 2 137 6 141 2 144 2 533 2 318 2 263 6 264 2 40 2 320 2 848 2 698 4 697 4 207 2 384 2 436 8 488 2 489 2 271 2 332 2 573 12 157 2 443 2 756 2 758 2 158 4 110 2 447 2 159 4 223 2 225 2 
453 2 3 2 4 2 228 2 647 2 8 2 232 2 234 2 14 8 659 4 238 2 239 6 17 2 667 4 241 2 246 2 675 6 677 6 474 2 477 2 253 2 480 8 29 2 30 2 259 7 263 24 264 2 40 2 698 4 697 6 484 2 488 2 489 2 271 2 45 4 46 4 49 6 274 2 52 4 494 1 284 2 710 1 285 2 63 2 503 2 295 2 725 2 508 2 510 6 512 4 304 2 731 6 305 6 734 2 306 2 521 4 83 6 527 2 85 2 736 2 529 6 533 2 88 6 318 2 320 2 95 2 98 2 99 2 323 1 101 1 746 8 332 2 104 2 336 2 756 2 758 2 110 2 337 2 550 2 344 2 125 2 772 12 556 2 350 2 355 2 356 2 358 4 132 2 366 2 789 2 135 4 792 2 136 4 376 2 137 12 139 6 141 4 144 2 569 2 381 6 382 1 384 2 151 2 573 46 157 2 158 4 159 4 581 2 814 2 583 6 396 2 397 2 398 4 399 2 401 2 819 1 403 2 820 6 821 2 175 4 827 4 828 1 414 6 598 6 831 2 600 2 182 6 601 2 834 2 184 2 835 10 186 4 606 8 611 2 418 2 419 2 192 6 195 2 842 2 620 2 201 2 431 2 845 1 204 7 848 2 206 2 207 2 205 2 436 2 441 2 634 6 443 2 447 2 223 4 638 6 225 2 863 2 864 1 865 2 
3 2 453 2 4 2 228 2 550 2 647 2 8 2 125 2 344 2 232 2 234 2 772 12 350 2 556 2 14 8 659 4 238 2 239 6 356 2 355 2 17 2 667 4 241 2 246 2 358 4 675 6 677 6 474 2 132 2 362 2 477 2 366 2 253 2 789 2 135 4 29 2 480 8 792 2 136 4 30 2 137 12 376 2 139 6 141 4 144 2 569 4 263 26 381 6 264 2 40 2 484 2 697 6 698 4 384 2 571 2 488 2 489 2 271 2 151 2 46 4 573 48 49 6 274 2 157 2 52 4 158 4 159 4 581 4 814 2 284 2 583 6 285 2 165 4 396 2 63 2 397 2 399 2 398 8 401 2 503 2 403 2 820 6 821 2 295 2 725 2 175 4 827 4 508 2 510 6 414 6 598 6 831 2 182 6 512 4 600 2 601 2 184 2 834 2 835 10 606 8 186 4 304 2 305 6 731 6 611 2 418 2 419 2 734 2 306 2 192 6 521 4 83 6 195 2 527 2 85 2 842 2 620 2 736 2 529 6 431 2 201 2 88 6 533 2 318 2 320 2 848 2 205 2 207 2 95 2 206 4 98 4 99 2 436 6 746 8 332 2 105 2 104 2 441 2 634 6 443 2 336 2 756 2 758 2 337 2 110 2 223 4 447 2 638 6 225 2 863 2 865 2 
3 2 453 2 4 2 228 2 550 2 647 2 8 2 125 2 344 2 232 2 234 2 772 12 350 2 556 2 14 8 659 4 238 2 239 6 356 2 355 2 17 2 667 4 241 2 246 2 358 4 675 6 677 6 474 2 132 2 362 2 477 2 366 2 253 2 789 2 135 4 29 2 480 8 792 2 684 4 136 4 30 2 137 12 376 2 139 6 141 4 144 2 569 4 263 26 381 6 264 2 40 2 484 2 697 6 698 4 384 2 571 2 488 2 489 2 271 2 151 2 46 4 573 48 49 6 274 2 157 2 52 4 158 4 159 4 581 4 814 2 284 2 583 6 285 2 165 4 396 2 63 2 397 2 399 2 398 8 401 2 503 2 403 2 820 6 821 2 295 2 725 2 175 4 827 4 508 2 510 6 414 6 598 6 831 2 182 6 512 4 600 2 601 2 184 2 834 2 835 10 606 8 186 4 304 2 305 6 731 6 611 2 418 2 734 2 419 6 306 2 192 6 521 4 83 6 195 2 527 2 85 2 842 2 620 2 736 2 529 6 431 2 201 2 88 6 533 2 318 2 320 2 848 2 205 2 207 2 95 2 206 4 98 4 99 2 436 6 746 8 332 2 105 2 104 2 441 2 634 6 443 2 336 2 756 2 758 2 337 2 110 2 223 4 447 2 638 6 225 2 863 2 865 2 
285 2 253 2 165 2 135 2 398 4 29 2 480 4 684 4 401 2 137 4 376 2 318 2 232 2 264 2 320 2 40 2 698 2 206 2 295 2 384 2 14 2 98 2 436 6 659 2 489 2 356 2 573 4 600 2 241 2 157 2 358 2 158 2 110 2 159 2 581 2 132 2 419 4 225 2 
285 2 165 2 135 2 29 2 480 6 398 6 684 4 401 2 137 4 376 2 318 2 232 2 264 2 320 2 40 2 697 2 698 2 295 2 384 2 14 2 436 6 659 2 489 2 356 2 573 4 600 2 241 2 157 2 358 4 158 4 110 2 159 2 132 2 419 4 225 2 
453 2 548 2 455 2 457 2 647 2 8 2 232 2 344 2 234 2 772 4 14 2 659 2 356 2 355 2 17 2 18 2 667 4 241 2 358 4 132 2 23 2 477 2 365 2 789 2 135 2 480 6 29 2 137 4 30 2 376 2 263 24 264 2 40 2 697 2 698 2 384 2 799 3 488 2 489 2 151 2 573 28 46 2 157 2 52 4 158 4 159 2 161 2 285 2 165 2 397 2 63 2 398 6 503 2 401 2 295 2 725 2 827 4 508 2 510 6 410 2 414 6 598 6 831 2 600 2 834 2 835 2 186 4 418 2 734 3 419 2 306 3 424 2 195 3 736 2 533 2 88 6 318 2 320 2 95 2 436 6 746 8 332 2 104 2 336 2 758 2 110 2 223 4 447 2 225 2 
356 2 132 2 58 2 
356 2 132 2 58 2 
2 4 453 2 4 2 120 4 8 2 554 2 344 2 769 2 234 2 772 4 556 2 14 4 659 2 665 6 466 2 356 6 355 2 17 2 241 2 358 4 473 2 132 4 363 2 477 2 789 2 480 12 135 4 684 4 136 4 689 2 30 2 137 16 141 2 263 16 40 2 697 4 698 2 803 2 271 2 45 4 151 2 573 24 46 8 52 4 158 4 809 2 390 2 159 2 581 4 58 2 814 2 283 2 285 2 61 6 165 4 397 2 398 12 503 2 401 4 67 2 403 2 170 2 298 2 725 2 175 2 406 4 827 4 508 2 510 6 414 2 598 2 831 2 512 2 834 2 604 2 835 2 186 4 731 2 418 2 419 6 306 2 521 4 736 2 88 6 533 2 848 2 205 2 206 4 95 2 98 4 436 6 746 2 332 2 104 2 441 2 336 2 220 4 758 2 108 2 223 4 447 2 225 2 863 6 
406 2 238 2 453 2 595 2 573 4 120 2 144 2 504 2 342 2 835 2 263 2 125 2 731 2 772 2 742 2 363 2 175 2 
2 4 453 2 4 2 120 4 8 2 554 2 344 2 771 2 234 2 772 2 463 2 556 2 14 4 659 2 665 6 466 2 356 6 355 2 17 2 241 2 358 4 132 4 363 2 477 2 789 2 480 12 135 4 684 4 136 4 30 2 137 16 141 4 263 16 693 2 40 2 697 4 698 2 803 2 271 2 45 4 151 2 573 24 46 8 52 4 158 4 390 4 159 2 581 4 58 2 814 2 283 2 285 2 61 6 165 4 397 2 398 12 503 2 401 4 67 2 403 2 170 2 298 2 725 2 406 4 827 4 508 2 510 6 412 2 414 2 598 2 831 2 512 2 834 2 604 2 186 4 731 2 418 2 419 6 306 4 521 4 616 2 736 2 88 6 533 2 848 2 205 2 206 4 95 2 98 4 436 6 746 2 332 2 104 2 441 2 443 2 336 2 220 4 758 2 108 2 223 4 447 2 225 2 863 6 
2 4 453 2 4 2 120 4 8 2 554 2 344 2 235 2 234 2 772 4 556 2 14 4 659 2 353 2 665 6 466 2 356 6 355 2 17 2 241 2 782 2 358 4 132 4 363 2 477 2 789 2 480 12 135 4 684 4 136 4 30 2 137 16 141 4 263 16 40 2 266 2 697 4 698 2 803 2 271 2 45 4 151 2 573 24 46 8 52 4 158 4 390 2 159 2 581 4 58 2 814 2 283 2 285 2 394 2 61 6 165 4 397 2 398 12 503 2 401 4 67 2 403 2 170 2 298 2 725 2 175 2 406 4 827 4 508 2 510 6 414 2 598 2 831 2 512 2 834 2 604 2 835 2 186 4 731 2 418 2 419 6 306 2 521 4 736 2 88 6 533 2 848 2 205 2 206 4 95 2 98 4 436 6 746 2 332 2 104 2 441 2 443 2 336 2 220 4 758 2 108 2 223 4 447 2 225 2 863 6 
453 2 3 2 5 2 457 2 229 2 645 4 231 2 8 2 460 10 653 2 234 2 656 2 464 2 465 2 664 3 17 2 667 10 20 2 671 4 248 2 24 2 477 2 478 8 256 2 682 2 30 2 36 2 263 22 696 2 484 2 43 2 700 2 701 2 46 2 274 14 52 2 278 2 707 26 55 2 496 12 712 2 502 4 63 2 65 24 503 2 290 2 293 2 721 12 722 6 723 2 69 2 297 4 725 2 507 2 508 2 510 6 513 2 734 11 306 11 310 2 527 2 736 2 88 4 533 2 87 4 92 2 96 6 537 2 538 2 325 2 745 4 328 2 746 18 329 2 332 2 539 2 335 4 336 2 758 2 546 2 547 4 762 2 339 2 548 2 118 2 121 2 341 8 343 2 347 2 772 2 773 2 355 2 778 2 777 2 780 4 560 6 360 2 784 2 361 2 365 2 364 2 366 2 565 2 789 2 790 2 568 2 378 2 145 2 569 28 797 2 383 2 799 2 570 2 149 2 801 2 151 2 573 28 155 2 577 2 578 6 811 26 813 10 163 4 582 2 396 2 397 2 402 2 588 2 591 4 592 4 405 2 825 4 827 4 410 2 409 2 177 2 597 2 414 12 598 12 831 2 183 2 186 2 187 2 188 2 608 4 611 24 420 2 423 2 841 2 425 2 426 4 194 10 195 11 196 2 617 2 843 2 620 2 199 2 428 4 621 2 844 2 201 2 202 4 623 1 433 2 203 8 849 2 850 4 852 2 439 4 440 4 632 6 856 8 222 6 447 2 223 4 863 4 
364 2 426 2 195 2 790 2 63 2 682 2 293 2 263 2 797 2 700 2 746 2 329 2 439 4 664 2 414 2 598 2 573 2 667 2 669 2 671 2 611 6 361 2 734 2 306 2 
364 2 426 2 195 2 790 2 63 2 682 2 293 2 263 2 797 2 700 2 746 2 329 2 439 4 664 2 414 2 598 2 573 2 667 2 669 2 671 2 611 6 361 2 734 2 306 2 
364 2 426 2 195 2 790 2 63 2 682 2 293 2 263 2 797 2 700 2 746 2 329 2 439 4 664 2 414 2 598 2 573 2 667 2 669 2 671 2 611 6 361 2 734 2 306 2 
163 2 339 2 63 2 644 2 716 3 124 2 656 2 591 2 407 2 826 2 178 3 468 2 560 4 514 4 783 2 306 3 364 2 309 6 28 4 195 3 372 4 31 2 263 4 146 4 93 2 321 2 203 6 536 4 149 2 268 2 324 4 626 3 746 2 214 2 852 2 702 2 573 10 440 2 107 2 338 2 
364 2 163 2 309 6 339 2 28 4 195 2 63 2 372 4 644 2 716 2 31 2 124 2 146 4 263 4 93 2 203 4 321 2 536 4 656 2 149 2 591 2 324 4 407 2 268 2 826 2 626 2 214 2 746 2 852 2 178 2 702 2 573 10 440 2 107 2 468 2 780 2 514 4 560 4 783 2 57 2 306 2 547 2 338 2 
364 2 163 2 309 6 339 2 28 4 195 2 63 2 372 4 644 2 716 2 31 2 124 2 146 4 263 4 93 2 203 4 321 2 536 4 656 2 149 2 591 2 324 4 407 2 268 2 826 2 626 2 214 2 746 2 852 2 178 2 702 2 573 10 440 2 107 2 468 2 780 2 514 4 560 4 783 2 57 2 306 2 547 2 338 2 
364 2 163 2 309 6 339 2 28 4 195 2 63 2 372 4 644 2 716 2 31 2 124 2 146 4 263 4 93 2 203 4 321 2 536 4 656 2 149 2 591 2 324 4 407 2 268 2 826 2 626 2 214 2 746 2 852 2 178 2 702 2 573 10 440 2 107 2 468 2 780 2 514 4 560 4 783 2 57 2 306 2 547 2 338 2 
364 2 163 2 309 6 339 2 28 4 195 2 63 2 372 4 644 2 716 2 31 2 124 2 146 4 263 4 93 2 203 4 321 2 536 4 656 2 149 2 591 2 324 4 407 2 268 2 826 2 626 2 214 2 746 2 852 2 178 2 702 2 573 10 440 2 107 2 468 2 780 4 514 4 560 4 783 2 57 4 306 2 547 4 338 2 
423 2 517 2 400 2 500 2 602 2 162 2 
185 2 516 2 654 2 679 2 126 2 813 2 602 2 
397 2 456 1 791 1 714 1 377 1 737 2 534 2 820 2 263 8 9 2 11 2 174 2 823 2 327 2 16 2 573 10 131 2 389 2 807 2 109 2 249 2 54 2 497 2 561 2 812 1 562 2 
163 6 26 2 339 6 531 2 263 6 345 2 203 16 722 4 41 2 536 4 149 6 656 6 591 6 825 2 325 2 826 2 745 2 852 6 572 4 539 2 72 2 573 6 440 6 576 2 780 3 560 12 861 2 57 3 60 2 547 3 
269 2 324 2 82 2 817 2 728 2 28 2 573 1 372 2 685 2 631 2 575 2 471 2 416 7 263 1 94 4 97 2 709 1 351 2 
269 2 324 2 82 2 817 4 728 2 28 2 372 2 685 2 631 2 575 2 416 6 471 4 94 4 97 2 351 4 
269 2 324 2 82 2 817 8 728 2 28 2 573 1 372 2 685 2 631 8 575 6 416 10 471 8 263 1 94 4 97 2 709 1 351 8 
82 2 324 2 269 2 817 2 728 2 471 2 416 2 28 2 94 2 685 2 372 2 97 2 351 2 
454 2 6 2 119 4 768 2 652 2 346 1 234 6 655 2 657 2 557 1 658 4 127 2 237 2 660 4 774 2 663 1 355 4 666 2 243 2 244 2 133 2 27 2 254 2 255 1 257 2 371 2 374 2 481 2 263 34 694 2 265 2 802 2 573 38 154 2 805 2 273 2 52 16 275 2 53 4 279 4 580 10 282 2 393 2 501 2 715 2 506 14 590 4 725 6 594 2 300 4 829 4 830 2 831 4 186 18 612 2 839 2 190 2 520 4 307 5 422 2 523 1 84 4 430 2 530 2 316 2 88 32 89 2 319 2 738 2 741 2 435 2 209 2 211 2 216 2 854 2 218 2 334 2 635 2 336 4 858 4 757 2 545 2 760 2 224 2 763 4 
257 2 549 2 373 2 119 2 715 2 169 2 88 13 89 2 481 2 694 2 263 14 768 2 741 2 506 2 234 2 148 2 725 2 127 2 176 2 300 2 663 2 355 1 831 2 573 14 666 2 805 2 334 2 218 2 52 6 336 1 858 10 704 2 186 6 520 2 563 2 
1 8 454 2 119 4 768 2 652 2 770 2 234 4 348 2 655 4 127 2 658 6 237 2 660 4 355 6 559 2 243 2 470 2 244 2 133 2 251 6 27 2 254 2 255 2 257 2 371 2 374 2 142 6 33 2 32 2 694 2 263 40 265 2 148 2 270 2 802 4 573 44 153 2 154 2 152 2 805 2 273 2 52 18 275 2 276 2 706 6 580 6 499 2 501 2 715 2 505 8 506 10 590 6 725 4 300 4 596 2 829 4 830 2 831 2 515 2 186 20 607 2 190 2 518 2 520 4 421 2 307 6 84 6 430 2 530 2 316 2 88 40 89 2 319 2 435 2 216 2 751 8 218 2 635 2 336 6 858 14 760 2 224 2 639 2 763 2 
393 4 6 4 119 6 715 2 768 2 346 2 12 2 506 8 234 2 655 2 657 4 725 2 236 2 127 2 300 6 829 2 663 2 355 10 831 2 666 4 74 2 186 14 520 6 785 2 307 2 422 2 255 6 523 2 257 2 615 2 84 2 530 2 89 2 88 38 738 4 263 26 694 2 265 2 846 2 741 4 435 2 209 2 148 2 211 2 487 2 491 2 573 28 154 2 805 2 218 2 334 4 633 4 52 14 53 6 754 2 858 14 336 10 757 2 279 2 545 2 580 10 282 10 
314 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 86 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 708 364 142 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 887 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V ERROR java.lang.ArrayIndexOutOfBoundsException 936 
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 742 162 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 334 (671,928) (671,928) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 140 (112,509) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 140 (112,509) (112,509) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 140 (112,509) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 33 763 195 341 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 849 977 167 105 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 335 335 986 328 833 874 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 328 833 874 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 335 335 335 986 328 833 874 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 335 335 335 328 833 874 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjCheckNAddTwoStates(II)V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_10()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:union([I[I)[I | RETURN | 152296 | return null
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | RETURN | 21332 | return null
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24199 | = null
daikon.Debug:logOn()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_122()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo; | CONDITION | 3097 | if (x) -> if (!x)
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_72()Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3R_121()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.Invariant:justified()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_98()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | STATEMENT | 48374 | stmt -> ;
jtb.JavaParser:jj_3R_52()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.MathMDE:sign(I)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_100()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:memberOf(F[F)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 11746 | = null
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_3()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:ReadByte()C
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.Node:Node()V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43258 | 32 -> 33
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaCharStream:backup(I)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:lt(II)Z
daikon.Quant:slice([III)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:intern([I)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.PptSlice1:arity()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair; | RETURN | 2847 | return null
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | CONDITION | 32424 | if (x) -> if (!x)
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_133()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_2_18(I)Z
daikon.ProglangType:isScalar()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_149()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName; | RETURN | 30246 | return null
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(FF)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z | STATEMENT | 165422 | stmt -> ;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:intern([J)[J
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 98882 | return null
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_137()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_56()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_97()Z
daikon.Quant:eq(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_125()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_ntk()I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3_4()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lte(II)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_126()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3_29()Z
daikon.Quant:eltsGTE([II)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONDITION | 4095 | if (x) -> if (!x)
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLtIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:asCollection()Ljava.util.Collection; | RETURN | 1264 | return null
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_70()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_106()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_49()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_3R_169()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.ProglangType:isArray()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParserTokenManager:jjCheckNAddStates(II)V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:jj_3_35()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_210()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[F)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z | CONDITION | 155109 | if (x) -> if (!x)
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParser:jj_3R_67()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.ValueTuple:size()I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(J[J)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([B[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:lexEqual([I[I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_75()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_88()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.ProglangType:dimensions()I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z | CONDITION | 174937 | if (x) -> if (!x)
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3_13()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 4429 | return null
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3R_109()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.FuzzyFloat:isSubset([D[D)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
667 2 949 2 85 2 345 4 388 2 245 2 382 2 932 2 90 2 
687 2 317 6 764 2 153 4 86 2 776 2 303 2 17 4 872 2 514 2 
580 6 168 2 909 6 538 2 207 4 858 6 382 2 490 2 193 6 674 2 388 2 268 2 87 4 
550 16 414 8 841 26 554 10 382 6 527 10 450 4 972 8 452 2 388 6 636 2 196 2 156 16 284 6 916 16 164 29 462 8 508 2 510 6 668 10 295 4 93 10 94 12 890 4 439 2 827 2 924 2 132 8 900 10 406 4 
669 6 440 4 
277 2 
222 2 660 2 589 2 931 2 79 2 480 2 147 4 346 2 941 2 942 2 160 2 602 2 945 2 90 2 946 2 604 2 820 2 539 2 957 2 436 4 439 2 545 2 28 2 497 2 183 2 679 2 548 2 551 2 729 2 382 4 388 4 194 4 738 2 199 4 506 2 979 2 853 2 55 2 398 2 512 2 568 2 330 2 648 2 338 2 
1 4 550 10 587 8 414 4 841 16 554 6 145 2 382 4 527 6 117 2 118 4 388 4 156 10 692 6 916 10 164 19 93 6 511 6 94 6 745 4 64 2 900 6 30 2 
214 2 611 2 946 2 
624 2 821 2 836 2 930 2 660 2 730 2 231 2 620 10 371 2 716 2 198 2 740 22 996 2 107 2 
69 2 550 2 841 4 554 2 527 2 284 2 156 2 916 2 164 6 798 2 668 4 16 2 93 2 956 2 802 2 544 2 900 2 375 2 576 2 310 2 
164 16 1 4 184 2 550 8 93 4 841 12 94 4 554 4 527 4 745 6 64 4 900 4 156 8 406 2 286 2 692 6 916 8 
142 2 185 2 476 2 114 2 708 2 553 2 225 6 870 2 523 2 970 2 711 2 589 2 147 2 712 10 592 2 321 2 976 2 561 4 427 2 288 2 460 2 946 6 463 2 244 2 640 4 611 4 364 2 700 2 366 30 60 2 214 2 215 2 830 2 
71 2 887 2 277 2 126 2 383 2 449 2 298 2 149 2 530 2 741 2 678 2 
517 8 652 2 654 16 411 2 520 2 521 2 413 2 873 2 151 2 663 2 282 2 878 2 12 4 533 3 157 2 158 2 161 2 534 2 428 1 666 2 15 3 290 2 885 1 166 2 765 2 296 3 537 1 540 2 889 3 888 2 172 1 771 3 433 1 301 2 894 1 896 2 302 24 546 4 27 6 903 3 677 2 34 2 182 5 36 2 905 32 441 2 779 16 37 2 186 2 188 2 781 3 315 2 445 2 785 2 684 1 447 2 316 32 688 3 558 1 456 2 559 2 458 2 47 2 794 16 915 2 694 2 919 2 464 2 327 2 921 2 698 4 799 2 209 4 61 2 65 3 571 2 703 2 216 1 339 1 805 2 579 2 223 2 586 2 584 2 583 2 73 8 228 2 77 2 80 1 343 2 937 2 236 2 599 1 943 2 350 1 238 2 603 2 606 2 607 2 949 2 487 2 822 2 608 2 953 2 719 8 358 2 360 2 491 2 617 1 368 3 619 2 492 2 493 12 100 2 826 6 723 6 108 2 831 2 725 2 966 2 965 2 250 3 382 32 634 16 846 2 737 2 388 34 503 2 850 4 393 1 978 2 852 1 855 6 260 4 129 3 984 2 401 24 861 2 130 2 746 2 266 2 516 2 990 2 272 4 135 4 865 2 137 2 
388 2 938 2 
388 4 380 2 403 2 
227 2 
275 4 0 4 2 2 276 74 3 16 755 2 524 74 4 2 525 14 526 2 528 2 757 2 279 16 758 4 6 2 529 4 7 2 760 2 10 4 11 6 287 34 14 2 762 2 535 2 293 2 294 2 766 4 768 2 18 2 19 2 769 2 21 2 774 2 23 10 24 8 777 2 543 4 304 2 778 2 31 2 306 2 307 32 308 34 311 2 549 4 314 2 783 74 42 2 43 2 44 2 786 2 787 74 556 2 557 10 790 4 318 2 791 4 320 2 792 4 793 2 795 2 48 2 50 2 562 2 49 2 796 2 563 2 797 44 564 10 54 2 566 2 567 2 57 2 58 4 59 74 331 2 62 2 63 4 66 2 333 4 67 14 803 2 336 2 337 2 575 2 804 2 68 204 808 2 75 4 809 2 81 2 82 2 590 10 591 56 84 2 593 4 815 2 595 36 347 14 348 2 598 2 601 4 605 206 352 4 91 10 355 8 92 14 357 4 359 2 610 2 612 74 823 74 614 2 96 4 363 4 824 2 365 2 618 2 367 4 369 2 370 2 621 2 102 2 373 2 829 2 106 8 109 304 834 2 626 2 111 2 835 42 115 2 113 2 837 2 838 26 629 2 116 4 632 48 842 6 844 2 845 2 384 2 387 2 847 32 390 2 848 2 391 4 120 14 121 4 394 2 122 4 637 2 638 14 125 2 397 2 128 22 856 74 859 2 641 2 402 4 645 2 862 2 863 2 404 2 136 2 650 8 409 2 868 2 139 4 867 38 655 60 656 2 658 2 659 2 416 2 144 4 146 4 417 2 148 2 418 4 420 2 419 2 661 2 154 74 877 2 423 2 664 4 425 48 880 2 159 2 426 2 882 2 883 20 429 20 670 2 170 2 171 2 173 14 174 4 672 2 434 2 176 2 891 12 438 4 897 2 675 4 178 8 898 2 179 4 902 2 181 2 680 14 681 2 906 74 443 2 907 20 187 2 444 60 910 2 911 2 685 2 189 32 192 4 197 2 690 4 457 2 201 42 461 48 695 2 204 6 205 2 696 4 206 2 697 2 465 4 467 2 923 2 211 2 701 2 468 2 212 2 213 2 470 4 925 2 702 2 472 2 219 2 218 2 705 2 474 2 220 16 475 2 709 2 478 4 479 2 230 2 934 14 713 2 715 2 233 2 940 16 483 2 484 46 237 2 485 2 944 2 239 2 486 2 951 2 240 12 243 2 720 74 958 2 959 2 246 2 722 4 248 2 963 2 500 4 727 2 967 2 728 6 732 4 973 2 734 2 735 2 252 4 975 2 505 4 255 2 256 204 980 20 743 2 507 4 981 2 259 2 983 2 261 22 264 2 985 2 988 4 267 2 269 86 747 2 751 2 
565 2 270 2 466 1 860 2 
565 2 810 2 
565 2 585 2 180 2 138 2 946 2 450 2 665 2 
585 2 840 2 
565 2 585 2 202 2 
332 2 843 2 860 2 
565 2 585 2 
292 2 843 2 
892 2 565 2 
843 2 448 2 860 2 
386 2 689 2 860 2 
806 2 860 2 257 2 
948 2 623 2 860 2 
481 2 280 2 860 2 
936 2 
565 2 560 2 
689 2 455 2 
717 2 806 2 
326 2 623 2 
280 2 895 2 
609 2 843 2 
280 2 724 2 
623 2 98 2 
806 2 499 2 
689 2 693 2 
871 2 843 2 448 2 860 2 
51 2 871 2 843 2 448 2 860 2 
843 2 217 2 860 2 
843 2 860 2 616 2 
651 2 731 2 993 2 408 2 
752 2 224 2 39 2 5 2 451 2 789 2 759 2 131 2 647 2 25 4 594 2 816 2 422 2 828 4 155 2 740 6 866 2 851 2 
860 2 515 2 
742 2 162 2 
20 2 
565 2 585 2 676 2 138 2 946 2 450 2 
249 2 648 2 
281 2 138 2 946 2 450 2 
435 2 623 2 
280 2 682 2 
689 2 879 2 
806 2 642 2 
806 2 280 2 262 2 
806 2 280 2 124 2 
806 2 280 2 253 2 
806 2 280 2 857 2 
782 2 600 2 323 6 946 2 353 6 854 2 950 2 138 2 
987 2 843 2 
937 2 
652 2 517 2 520 2 411 2 415 2 756 2 873 2 151 2 663 4 878 2 12 4 290 2 430 2 767 2 537 2 300 2 437 2 301 2 546 4 27 6 34 2 36 2 905 4 186 2 188 2 785 2 686 2 555 4 316 6 456 2 53 2 698 4 209 2 61 2 571 2 703 2 579 2 805 2 223 2 340 4 583 2 586 2 228 2 813 2 344 2 714 2 599 2 603 2 949 2 487 2 822 2 242 2 360 6 619 2 492 2 493 8 826 4 100 2 496 2 723 2 108 2 725 2 501 2 382 26 634 6 388 26 389 2 503 2 850 2 392 2 978 2 855 2 272 4 135 2 
652 2 517 2 520 2 411 2 415 2 873 2 151 2 663 4 878 2 12 4 290 2 166 2 430 2 767 2 537 2 300 2 299 2 437 2 301 2 546 4 27 6 35 2 34 2 36 2 905 4 186 2 188 2 785 2 686 2 555 4 316 6 456 2 53 2 698 4 209 2 61 2 571 2 703 2 579 2 805 2 581 2 223 2 340 4 583 2 586 2 228 2 813 2 599 2 603 2 949 2 487 2 822 2 953 2 242 2 360 6 619 2 492 2 493 8 826 6 100 2 496 2 723 2 108 2 725 2 501 2 382 26 634 6 388 26 389 2 503 2 850 2 392 2 978 2 855 2 861 2 272 4 135 2 
683 2 
633 2 376 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
334 2 671 2 710 2 229 2 928 2 
577 2 653 2 652 2 579 2 706 2 223 2 583 2 228 2 710 2 77 2 229 2 873 2 151 2 814 2 937 2 878 2 12 4 603 2 290 2 949 2 487 2 822 2 953 2 297 2 767 2 671 2 360 6 300 2 492 2 619 2 826 6 546 4 27 6 104 2 723 3 34 4 905 3 36 2 309 3 725 2 313 2 188 2 785 2 382 24 555 4 634 6 316 8 388 24 456 2 47 2 914 2 694 2 855 3 53 2 698 4 861 2 571 2 334 2 703 2 272 4 864 2 928 2 
884 2 152 2 285 2 
884 2 152 2 285 2 
652 2 140 2 872 2 873 2 151 2 875 2 152 2 153 10 531 2 878 2 12 4 761 4 290 2 884 2 764 4 536 2 767 2 17 8 22 2 300 4 776 4 546 4 303 4 27 6 34 4 36 2 905 2 780 2 38 2 188 2 191 2 316 2 687 4 453 2 317 10 456 2 53 2 698 4 800 2 209 4 571 2 703 2 577 2 579 2 223 2 586 2 583 2 228 2 78 2 229 2 933 2 814 2 813 4 482 2 603 2 947 2 949 2 487 2 822 2 953 2 615 2 360 2 361 2 95 2 97 2 619 2 492 2 493 4 826 6 103 2 725 2 112 2 382 16 634 2 388 24 850 4 258 2 123 2 399 6 861 2 991 2 272 4 749 2 135 4 
780 2 918 2 522 2 382 2 78 2 97 2 633 2 814 2 388 4 531 2 482 2 177 2 456 2 962 2 34 2 750 2 200 2 
652 2 140 2 872 2 873 2 151 2 875 2 152 2 153 10 531 2 878 2 12 4 761 4 884 2 290 2 764 4 536 2 767 2 17 8 22 2 300 4 776 4 546 4 303 4 27 6 34 2 36 2 905 4 780 2 38 2 188 2 191 2 316 2 687 4 453 2 317 10 456 2 53 2 698 4 800 2 209 4 571 2 703 2 577 2 579 2 223 2 586 2 583 2 228 2 812 2 229 2 933 2 813 4 603 2 947 4 949 2 487 2 822 2 953 2 615 2 360 2 361 2 95 2 619 2 492 2 493 4 826 6 103 2 725 2 112 2 382 14 634 2 388 20 850 4 509 2 258 2 123 2 399 6 861 2 991 2 272 4 749 2 135 4 
652 2 140 2 872 2 873 2 151 2 875 2 152 2 153 10 531 2 878 2 12 4 761 4 290 2 884 2 764 4 536 2 767 2 17 8 22 2 300 4 776 4 546 4 303 4 27 6 34 4 36 2 905 2 780 2 38 2 188 2 191 2 316 2 687 4 453 2 317 10 456 2 53 2 698 4 800 2 209 4 571 2 703 2 577 2 579 2 223 2 586 2 583 2 228 2 78 2 229 2 933 2 814 2 813 4 482 2 603 2 947 2 949 2 487 2 822 2 953 2 615 2 360 2 361 2 95 2 97 2 619 2 492 2 493 4 826 6 103 2 725 2 112 2 382 16 634 2 388 24 850 4 258 2 123 2 399 6 861 2 991 2 272 4 749 2 135 4 
763 2 952 2 195 2 899 2 341 2 41 2 739 2 33 2 995 2 
110 2 70 2 785 2 382 2 811 2 555 2 634 2 316 2 421 2 388 2 389 6 939 4 254 3 283 2 855 3 639 1 263 2 360 2 489 2 570 2 673 2 494 2 723 3 905 3 927 2 
110 2 70 2 785 2 382 2 811 2 555 2 634 2 316 2 421 2 388 2 389 6 939 4 254 2 283 2 855 2 263 2 360 2 489 2 570 2 673 2 494 2 723 2 905 2 927 2 
110 2 70 2 785 2 382 2 811 2 555 2 634 2 316 2 421 2 388 2 389 6 939 4 254 2 283 2 855 2 263 2 360 2 489 2 570 2 673 2 494 2 723 2 905 2 927 2 
110 2 779 2 753 2 929 4 550 2 627 3 707 2 784 2 841 4 554 2 785 2 382 4 527 2 316 2 388 10 817 4 424 2 156 2 13 4 794 2 459 3 916 2 164 6 462 4 356 2 510 2 718 2 855 3 922 3 93 2 646 2 893 6 495 2 900 2 901 4 374 4 547 2 994 2 904 2 905 3 
753 2 929 4 707 2 414 2 527 2 424 2 817 4 156 2 13 4 164 4 356 2 718 2 93 2 94 2 893 6 827 2 495 2 900 2 901 4 547 2 374 4 904 2 905 2 779 2 110 2 550 2 627 2 784 2 841 4 785 2 554 2 382 4 316 2 388 10 794 2 459 2 916 2 462 4 510 2 855 2 922 2 646 2 994 2 
753 2 929 4 707 2 414 2 527 2 424 2 817 4 156 2 13 4 164 4 356 2 718 2 93 2 94 2 893 6 827 2 495 2 900 2 901 4 547 2 374 4 904 2 905 2 779 2 110 2 550 2 627 2 784 2 841 4 785 2 554 2 382 4 316 2 388 10 794 2 459 2 916 2 462 4 510 2 855 2 922 2 646 2 994 2 
753 2 929 4 707 2 414 2 527 2 424 2 817 4 156 2 13 4 164 4 356 2 718 2 93 2 94 2 893 6 827 2 495 2 900 2 901 4 547 2 374 4 904 2 905 2 779 2 110 2 550 2 627 2 784 2 841 4 785 2 554 2 382 4 316 2 388 10 794 2 459 2 916 2 462 4 510 2 855 2 922 2 646 2 994 2 
753 2 929 4 707 2 414 4 527 2 424 2 817 4 156 2 13 4 164 4 356 2 718 2 93 2 94 4 893 6 827 4 495 2 900 2 901 4 547 2 374 4 904 2 905 2 779 2 110 2 550 2 627 2 784 2 841 4 785 2 554 2 382 4 316 2 388 10 794 2 459 2 916 2 462 4 510 2 855 2 922 2 646 2 994 2 
541 2 876 2 133 2 234 2 29 2 631 2 
412 2 876 2 628 2 596 2 686 2 324 2 203 2 
463 1 822 2 982 2 167 2 382 4 385 1 913 2 265 2 572 1 388 4 372 2 105 2 471 2 849 2 407 1 977 2 460 1 
548 2 519 2 550 6 72 2 587 2 414 4 841 12 554 6 382 6 527 6 788 2 118 2 388 6 346 2 156 6 322 2 916 6 164 15 354 2 462 4 510 2 431 2 511 4 127 2 93 6 94 4 745 4 64 2 827 4 900 6 
929 2 329 2 954 2 446 2 56 2 770 2 208 2 342 3 775 2 992 2 817 2 901 2 881 2 
582 2 929 2 141 2 329 2 954 2 446 2 382 1 56 2 770 2 208 2 342 6 775 4 388 1 992 2 817 2 901 2 881 2 832 1 
141 2 582 2 929 2 329 2 954 4 446 4 56 2 770 2 208 2 342 6 775 4 992 4 817 2 901 2 881 2 
141 8 582 6 929 2 329 2 954 8 446 8 382 1 56 2 770 2 208 2 342 10 775 4 388 1 992 8 817 2 901 2 881 2 832 1 
518 2 754 2 873 6 278 2 874 2 9 2 662 2 532 2 289 4 165 2 886 2 291 1 432 2 772 2 175 2 546 16 32 2 312 2 908 4 188 6 552 2 40 4 912 2 45 1 319 14 46 2 691 2 325 2 917 2 920 2 328 2 698 18 569 4 801 2 210 2 469 2 335 8 704 1 473 2 578 2 221 4 588 2 83 2 935 2 88 2 597 2 235 4 349 2 351 2 89 2 818 2 953 4 241 2 488 2 955 2 362 2 825 5 721 4 826 36 961 2 101 2 247 4 498 2 833 2 725 4 377 2 964 2 378 1 969 2 968 2 382 34 251 1 971 2 736 2 974 2 635 2 119 2 388 38 504 4 395 2 396 2 861 4 986 4 644 4 405 2 
312 2 833 2 625 2 869 2 725 2 754 2 908 2 188 2 726 2 657 2 502 2 40 2 143 2 226 2 381 2 382 20 971 2 190 2 873 2 874 2 232 2 388 20 319 2 532 2 235 14 89 2 819 2 886 2 744 2 241 2 953 2 169 2 328 2 698 8 699 2 175 2 861 2 542 2 826 16 247 2 546 8 704 2 32 2 649 2 
410 4 518 4 754 2 150 2 873 6 278 4 874 2 8 4 9 4 662 2 532 2 163 2 289 18 165 4 432 4 772 4 175 2 773 6 546 32 26 2 305 6 32 2 442 10 312 2 908 8 552 4 188 6 40 8 912 6 45 6 319 20 691 2 325 4 917 4 52 4 920 4 328 2 698 38 569 2 801 4 469 2 335 22 573 2 926 2 574 16 578 2 221 6 74 4 477 6 76 4 588 4 83 4 88 4 597 4 235 14 349 2 351 4 89 2 818 4 953 24 241 2 488 6 613 4 955 2 362 2 825 10 960 2 99 6 101 4 826 94 721 6 961 2 247 8 498 4 833 2 625 2 725 2 377 4 839 2 379 2 968 6 630 4 382 66 971 2 733 10 736 4 119 4 635 2 388 74 504 18 395 2 396 2 513 24 986 12 861 24 643 2 400 4 644 10 989 10 271 2 134 4 748 4 273 16 405 12 274 2 
221 2 754 2 807 2 873 2 874 2 662 2 597 2 532 2 235 12 349 2 89 2 241 2 953 8 772 2 175 2 825 2 960 2 961 2 622 2 826 34 247 4 546 10 32 2 833 2 312 2 625 2 725 2 908 4 188 2 968 2 839 2 40 4 382 20 971 2 736 2 974 2 45 2 635 2 388 22 319 6 395 2 920 2 396 2 328 2 698 10 861 8 644 2 469 2 335 6 704 2 
454 2 

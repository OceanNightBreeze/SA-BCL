#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 2 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 437 727 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (95,149,221,294,418) (95,149,221,294,418) (95,149,221,294,418) (95,149,221,294,418) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 758 (403,629) 817 (84,127) (403,629) 570 (84,127) 567 313 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (598,821) (556,799) (556,799) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (598,821) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (598,821) (598,821) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (598,821) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 703 158 247 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 725 472 444 76 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 863 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 433 783 124 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 250 250 250 433 783 124 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 433 783 124 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 256 433 783 124 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:hashCode()I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([I)I
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ProglangType:isArray()Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:min([I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 279916 | = null
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaCharStream:getEndColumn()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | OPERATOR | 5137 | + -> /
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eq(FF)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ProglangType:isFloat()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_2_14(I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:isReverse([I[I)Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:lt(II)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | RETURN | 21417 | return null
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 8797 | = null
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z | STATEMENT | 9323 | stmt -> ;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow(II)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:lte(II)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String; | ASSIGN | 5385 | = null
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:sameLength([I[I)Z
daikon.diff.InvMap:InvMap()V
daikon.Quant:eltsGTE([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:gt(II)Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:Initializer()Ljtb.syntaxtree.Initializer;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127505 | = null
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_57()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 5354 | if (x) -> if (!x)
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(JJ)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 2084 | = null
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 38491 | return null
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lexGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Debug:logOn()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_134()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGT([II)Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:eq(II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_135()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_2_15(I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaCharStream:ReadByte()C
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaCharStream:backup(I)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfo:isPointer()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:hashCode()I
daikon.Quant:eltsNotEqual([II)Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:concat([I[I)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:lexLT([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([B[I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName; | RETURN | 30246 | return null
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.MathMDE:negate(I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsFloat()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getEndLine()I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:memberOf(F[D)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ValueTuple:size()I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14923 | if (x) -> if (!x)
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | STATEMENT | 24560 | stmt -> ;
daikon.PptSlice2:arity()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:isEnterPoint()Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | CONDITION | 25988 | if (x) -> if (!x)
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_162()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfo:new_ppt()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:setDiff([I[I)[I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:relate_var()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGT([I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:noDups([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_133()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:dimensions()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:union([I[I)[I
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair; | ASSIGN | 2099 | = null
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3_13()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:baseIsScalar()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
829 2 728 4 223 2 466 2 599 2 647 2 147 2 176 2 529 2 
655 4 229 2 271 2 431 2 0 4 2 2 78 2 841 2 
372 2 647 2 439 6 753 6 448 6 160 4 721 2 855 6 538 4 471 2 131 2 10 2 529 2 
644 6 392 2 583 4 772 8 303 10 647 6 838 6 600 2 521 8 306 10 803 16 360 16 146 10 258 8 523 4 782 10 865 2 529 6 209 16 818 2 237 29 66 26 156 2 90 2 636 4 92 2 537 8 275 4 276 12 323 10 
81 4 394 6 
415 2 
390 2 514 2 222 2 835 2 599 2 647 4 600 2 227 2 843 2 724 2 452 2 400 2 529 4 785 2 116 2 406 4 575 2 536 2 71 2 473 2 300 2 186 2 350 2 743 2 750 2 254 2 196 2 30 2 82 4 691 2 811 2 698 2 553 2 262 2 875 2 379 2 38 2 383 4 42 2 763 2 273 2 317 2 562 4 321 2 
644 4 479 6 481 2 772 6 303 16 519 4 647 4 838 4 751 2 80 8 306 16 521 18 803 28 360 28 307 6 657 4 146 16 523 2 203 6 782 6 340 4 571 2 529 4 209 28 868 8 374 4 61 4 237 48 66 44 408 2 40 4 92 2 670 6 276 22 710 4 323 16 
653 2 672 2 724 2 
679 2 249 2 251 2 63 2 344 2 79 2 544 10 549 2 691 2 880 2 793 22 322 2 711 2 165 2 
644 2 303 2 306 2 521 2 803 2 360 2 146 2 174 2 523 2 524 2 782 4 8 2 492 2 209 2 237 6 434 2 438 2 66 4 44 2 128 2 612 2 276 2 323 2 
312 2 209 8 61 4 479 6 237 16 303 4 66 12 306 4 803 8 670 6 360 8 146 4 275 2 276 4 340 4 631 2 323 4 
832 2 738 2 352 2 353 2 797 2 254 2 281 2 141 2 285 2 653 2 547 2 604 2 82 4 366 2 724 8 525 4 399 2 367 2 527 4 261 2 453 4 786 2 238 4 872 2 875 4 292 62 669 4 39 4 211 10 595 4 94 2 672 6 182 2 414 4 130 4 675 2 184 4 561 14 73 10 512 4 
391 2 437 2 574 2 752 2 243 2 808 2 68 2 415 2 216 2 491 2 727 2 
221 2 767 2 102 2 647 24 649 1 111 2 779 1 661 2 338 1 451 2 339 2 662 2 663 2 787 2 117 1 790 2 343 2 458 1 464 1 16 4 579 1 676 2 23 1 478 2 796 4 136 2 801 1 359 2 364 2 809 2 147 2 697 2 588 4 149 2 154 6 823 2 378 1 503 2 161 4 45 2 277 2 708 2 389 5 51 4 518 2 520 1 839 1 840 2 717 1 722 1 175 2 177 2 529 26 178 1 291 2 851 6 65 8 293 2 732 2 539 2 185 2 541 6 617 2 417 1 418 2 621 2 201 1 430 2 432 1 873 1 318 6 95 2 97 2 445 1 
311 2 529 2 
57 2 529 4 218 2 
163 2 
100 2 565 2 566 2 225 2 773 2 5 2 331 2 107 2 336 2 110 2 780 18 233 4 337 2 12 2 573 2 13 2 456 2 342 32 118 32 14 22 122 2 345 2 460 2 17 8 245 32 129 2 578 14 474 2 678 2 24 2 351 18 252 18 355 4 687 32 584 8 357 2 802 2 804 2 28 12 586 18 363 4 692 14 693 2 812 2 489 32 814 2 696 2 369 2 152 10 820 2 263 2 700 8 377 2 494 2 265 4 591 32 266 2 381 18 825 22 500 2 157 2 704 2 705 2 159 2 385 2 506 106 830 4 507 2 831 6 510 2 513 2 279 24 515 2 517 2 167 106 169 2 396 2 603 10 605 2 846 4 58 12 401 2 60 40 404 2 848 2 405 32 62 2 533 106 852 2 411 32 181 2 735 2 69 2 618 22 739 2 620 2 189 2 543 32 75 32 190 12 746 2 77 4 305 8 546 2 861 2 754 2 83 2 308 42 425 12 202 2 426 12 205 4 206 4 630 2 867 2 871 2 634 32 441 2 877 2 635 2 879 2 638 32 642 2 765 2 219 18 
324 2 395 2 511 2 93 1 
511 2 776 2 
864 2 724 2 569 2 232 2 217 2 511 2 636 2 
88 2 864 2 511 2 
864 2 511 2 542 2 
324 2 168 2 816 2 
864 2 511 2 
508 2 816 2 
589 2 511 2 
324 2 816 2 208 2 
324 2 234 2 49 2 
324 2 844 2 329 2 
297 2 324 2 25 2 
324 2 197 2 461 2 
480 2 816 2 
577 2 511 2 
138 2 234 2 
329 2 651 2 
795 2 297 2 
197 2 499 2 
816 2 91 2 
197 2 770 2 
297 2 486 2 
329 2 139 2 
234 2 410 2 
324 2 816 2 208 2 283 2 
324 2 702 2 816 2 208 2 283 2 
324 2 816 2 597 2 
324 2 224 2 816 2 
532 2 876 2 650 2 502 2 
791 2 816 2 
436 2 724 2 569 2 628 2 
436 2 724 2 569 2 232 2 628 2 827 2 
777 2 864 2 724 2 569 2 511 2 636 2 
843 2 798 2 
724 2 569 2 636 2 764 2 
297 2 505 2 
197 2 326 2 
244 2 234 2 
199 2 329 2 
197 2 660 2 329 2 
581 2 197 2 329 2 
197 2 329 2 476 2 
729 2 197 2 329 2 
446 2 724 2 569 2 289 2 67 2 386 2 348 2 21 6 
99 2 564 2 664 2 789 4 849 2 771 2 253 4 535 2 43 2 488 2 640 2 470 2 793 6 443 2 98 2 402 2 677 2 712 2 
324 2 46 2 
823 2 
563 4 767 2 102 2 647 26 775 2 111 2 779 2 661 2 451 2 662 2 787 2 459 2 242 2 16 4 465 4 580 2 676 2 478 2 796 4 136 2 683 2 255 8 140 2 359 2 805 2 364 2 147 2 31 2 32 2 697 6 588 4 151 2 493 2 154 6 824 2 594 2 161 4 45 2 277 2 833 2 54 2 840 2 177 6 528 2 529 26 288 2 291 2 851 2 65 4 409 2 296 2 857 2 539 2 185 2 540 2 72 2 541 2 617 2 740 2 744 2 748 2 621 2 302 4 623 2 421 2 625 2 424 2 309 2 866 2 430 2 432 2 318 4 319 2 97 6 
563 4 767 2 768 2 102 2 647 26 775 2 111 2 779 2 661 2 451 2 339 2 662 2 787 2 459 2 242 2 16 4 465 4 580 2 676 2 478 2 796 4 136 2 683 2 686 2 484 2 255 8 140 2 359 2 805 2 364 2 147 2 31 2 32 2 697 6 588 4 493 2 154 6 824 2 269 2 161 4 45 2 277 2 833 2 54 2 518 2 840 2 177 6 529 26 288 2 291 2 851 2 65 4 409 2 296 2 857 2 539 2 185 2 540 2 72 2 541 2 617 2 740 2 744 2 748 2 621 2 302 4 623 2 421 2 625 2 424 2 309 2 866 2 430 2 432 2 318 6 319 2 97 6 
215 2 368 2 
112 2 
132 2 325 2 420 2 0 4 78 2 799 2 483 2 841 2 719 2 333 2 656 2 655 4 550 2 9 2 431 2 35 2 821 2 666 2 665 2 407 6 590 6 554 6 267 2 556 2 271 2 187 2 
132 2 420 2 325 2 0 4 516 2 78 2 799 2 483 2 282 4 841 2 719 2 333 2 655 4 656 2 550 2 9 2 431 2 35 2 821 2 666 2 665 2 407 6 590 6 554 6 267 2 556 2 826 2 271 2 187 2 
431 2 325 2 35 4 420 2 0 2 313 2 821 2 799 2 483 4 556 2 567 2 655 2 271 2 550 2 84 2 858 2 9 2 114 2 
325 2 0 6 647 6 567 2 332 2 333 2 719 2 655 4 656 2 7 2 661 2 570 2 451 2 9 2 114 4 11 4 529 12 847 6 454 2 665 2 666 2 407 4 295 2 125 2 610 2 127 2 298 2 539 2 858 2 187 2 132 2 420 2 796 2 621 2 136 2 749 2 799 2 78 2 483 4 422 2 362 2 423 4 550 2 84 2 629 2 431 4 430 2 35 4 699 4 313 2 821 2 154 4 314 2 590 6 554 4 267 2 556 2 271 4 161 2 277 2 
325 2 0 4 647 6 567 2 332 2 333 2 719 2 655 6 656 2 7 2 661 2 570 2 451 2 9 2 114 4 11 4 529 12 847 6 454 2 665 2 666 2 407 4 125 2 610 2 127 2 298 2 539 2 858 2 187 2 132 2 420 2 796 2 621 2 136 2 749 2 799 2 78 2 483 4 358 2 422 2 362 2 423 4 550 2 84 2 629 2 431 4 430 2 35 4 699 4 313 2 821 2 154 4 314 2 590 6 554 4 267 2 556 2 271 4 161 2 277 2 
132 2 325 2 420 2 0 4 78 2 799 2 483 2 841 2 719 2 333 2 656 2 655 4 550 2 9 2 431 2 35 2 821 2 666 2 665 2 407 4 590 4 554 6 267 2 556 2 271 2 187 2 
132 2 325 2 420 2 0 4 78 2 799 2 483 2 841 2 719 2 333 2 656 2 655 4 550 2 9 2 431 2 35 2 821 2 666 2 665 2 407 6 590 6 554 6 267 2 556 2 271 2 187 2 
132 2 325 2 420 2 0 4 78 2 799 2 483 2 841 2 719 2 333 2 656 2 655 4 550 2 9 2 431 2 35 2 821 2 666 2 665 2 407 6 590 6 554 6 267 2 556 2 271 2 187 2 
767 2 325 2 0 4 102 2 647 18 328 2 330 2 567 2 332 2 228 2 333 2 656 2 655 8 335 2 111 2 661 2 570 2 451 2 339 2 9 2 114 4 11 8 662 2 787 2 454 2 788 2 666 2 665 2 16 4 125 2 127 2 676 2 132 2 478 4 134 2 796 4 136 2 683 2 799 2 483 4 255 2 358 4 359 2 29 4 364 2 147 2 31 2 697 6 588 4 150 2 817 2 35 4 699 6 821 2 154 6 824 2 267 2 271 4 161 4 45 2 277 2 54 2 518 2 840 2 719 2 177 6 529 28 847 12 403 2 291 2 851 2 65 2 409 2 857 2 298 2 539 2 858 2 613 2 185 2 541 2 617 2 187 2 420 2 621 2 302 4 749 2 78 4 623 2 423 4 550 2 84 2 758 2 629 2 431 4 430 2 633 2 313 2 314 2 554 2 442 2 556 2 318 6 881 2 97 8 
132 2 325 2 134 2 420 2 0 4 78 2 799 2 483 2 841 2 719 2 333 2 656 2 655 4 550 2 9 2 431 2 35 2 821 2 666 2 665 2 554 4 267 2 556 2 271 2 187 2 
132 2 325 2 134 2 420 2 0 4 78 2 799 2 483 2 841 2 719 2 333 2 656 2 655 4 550 2 9 2 431 2 35 2 821 2 666 2 665 2 407 2 590 2 554 4 267 2 556 2 271 2 187 2 
132 2 325 2 134 2 420 2 0 4 78 2 799 2 483 2 841 2 719 2 333 2 656 2 655 4 550 2 9 2 431 2 35 2 821 2 666 2 665 2 407 2 590 2 554 4 267 2 556 2 271 2 187 2 
132 2 325 2 420 2 0 4 78 2 799 2 483 2 841 2 719 2 333 2 656 2 655 4 550 2 9 2 431 2 35 2 821 2 666 2 665 2 407 2 590 2 554 4 267 2 556 2 271 2 187 2 
767 2 325 2 0 4 102 2 647 24 328 2 330 2 333 2 655 4 656 2 111 2 661 2 451 2 339 2 9 2 662 2 454 2 787 2 665 2 666 2 16 4 673 2 676 2 248 3 132 2 478 4 796 4 136 2 799 2 483 2 359 2 364 2 147 2 31 2 697 6 588 4 149 2 35 2 821 2 376 2 154 6 823 2 824 2 590 2 267 2 270 2 271 2 161 4 45 2 47 2 277 2 54 2 518 2 840 2 841 2 719 2 526 2 177 6 529 24 291 2 851 3 65 3 294 2 539 2 185 2 541 3 617 2 187 2 420 2 621 2 302 4 78 2 623 2 550 2 552 2 431 2 430 2 554 4 556 2 318 6 97 8 
171 2 125 2 267 2 
171 2 125 2 267 2 
325 2 767 2 0 4 54 2 102 2 518 2 647 14 840 2 841 2 655 4 111 2 661 2 451 2 339 2 177 2 529 14 662 2 787 2 291 2 407 2 65 2 854 2 16 4 539 2 185 2 617 2 676 2 420 2 478 2 796 4 621 2 136 2 78 2 483 2 685 2 27 2 359 2 862 2 364 2 147 2 31 2 697 2 588 4 431 2 430 2 35 2 821 2 701 2 154 6 497 2 590 2 824 2 554 4 267 2 271 2 161 4 45 2 559 2 318 6 97 2 277 2 
477 2 869 2 478 2 455 2 290 2 850 2 647 2 330 2 194 2 792 2 611 2 215 2 539 2 858 2 758 2 33 2 529 4 
325 2 767 2 0 4 54 2 102 2 518 2 647 14 840 2 841 2 655 4 111 2 661 2 451 2 339 2 177 2 529 14 662 2 787 2 291 2 407 2 65 4 854 2 16 4 539 2 185 2 617 2 676 2 420 2 478 2 742 2 796 4 621 2 136 2 78 2 483 2 685 2 27 2 359 2 862 2 364 2 147 2 31 2 697 2 588 4 431 2 430 2 35 2 821 2 701 2 154 6 497 4 590 2 824 2 554 4 267 2 271 2 161 4 45 2 559 2 318 6 97 2 277 2 598 2 
325 2 767 2 0 4 54 2 102 2 518 2 647 14 840 2 841 2 655 4 111 2 661 2 451 2 339 2 177 2 529 14 662 2 787 2 291 2 407 2 65 2 854 2 16 4 539 2 185 2 617 2 676 2 420 2 478 2 796 4 621 2 136 2 78 2 483 2 685 2 27 2 359 2 862 2 364 2 147 2 31 2 697 2 588 4 431 2 430 2 35 2 821 2 701 2 154 6 497 2 590 2 824 2 554 4 267 2 271 2 161 4 45 2 559 2 318 6 97 2 277 2 
643 2 647 22 226 2 3 2 447 2 449 2 231 1 661 2 451 2 235 2 662 2 237 7 241 2 463 2 669 2 242 2 16 2 670 6 18 2 19 2 468 2 247 2 22 4 248 2 478 2 482 10 684 4 26 2 255 28 688 2 31 2 32 2 697 12 490 2 36 2 495 2 37 4 498 2 268 2 39 2 270 2 703 2 504 2 45 2 47 2 276 4 48 2 277 2 50 2 709 2 518 2 521 4 286 6 527 2 726 2 287 2 529 28 291 2 61 4 64 2 731 2 65 11 66 6 534 8 296 18 737 2 736 6 539 2 299 2 72 2 540 2 541 11 740 2 741 2 744 12 302 10 303 2 545 2 306 2 551 2 552 2 756 2 310 24 760 2 555 2 761 24 557 2 318 4 319 10 97 18 560 4 323 2 767 2 103 4 104 2 105 4 106 2 108 4 335 2 778 2 111 2 779 2 339 2 784 3 572 2 787 2 788 2 120 2 121 2 346 2 347 2 130 2 580 4 582 2 796 4 136 2 356 2 585 2 359 2 803 4 360 4 142 6 146 2 364 2 807 2 147 2 813 2 815 2 588 2 370 2 375 6 373 4 376 2 154 6 824 2 380 2 592 4 828 6 158 2 384 2 161 4 387 2 833 2 836 2 837 24 601 2 172 2 845 2 177 12 180 2 851 11 408 4 607 2 856 8 613 2 184 2 185 2 859 4 860 2 621 2 623 2 424 2 198 12 626 2 429 2 207 2 430 2 209 4 633 2 632 8 432 2 440 8 442 2 210 12 212 2 213 2 214 2 881 2 
836 2 741 2 582 2 302 2 647 2 623 2 172 4 845 2 235 2 697 2 177 2 529 2 784 2 572 2 851 2 36 2 37 2 241 2 65 2 41 2 504 2 296 6 97 2 541 2 
836 2 741 2 582 2 302 2 647 2 623 2 172 4 845 2 235 2 697 2 177 2 529 2 784 2 572 2 851 2 36 2 37 2 241 2 65 2 41 2 504 2 296 6 97 2 541 2 
836 2 741 2 582 2 302 2 647 2 623 2 172 4 845 2 235 2 697 2 177 2 529 2 784 2 572 2 851 2 36 2 37 2 241 2 65 2 41 2 504 2 296 6 97 2 541 2 
772 4 714 4 647 4 838 2 716 2 842 2 659 3 529 10 606 4 730 3 237 6 239 2 15 2 65 3 241 2 66 4 794 2 541 3 475 2 303 2 682 4 485 4 623 2 193 2 306 2 803 2 360 2 146 2 34 2 87 2 209 2 819 2 822 4 762 2 878 2 272 6 558 2 97 2 641 3 323 2 
772 4 714 4 647 4 838 2 716 2 521 2 842 2 659 2 529 10 606 4 730 2 237 4 239 2 15 2 65 2 241 2 66 4 794 2 541 2 475 2 303 2 682 4 485 4 623 2 193 2 306 2 803 2 360 2 146 2 34 2 87 2 209 2 819 2 822 4 762 2 878 2 92 2 272 6 558 2 276 2 97 2 641 2 323 2 
772 4 714 4 647 4 838 2 716 2 521 2 842 2 659 2 529 10 606 4 730 2 237 4 239 2 15 2 65 2 241 2 66 4 794 2 541 2 475 2 303 2 682 4 485 4 623 2 193 2 306 2 803 2 360 2 146 2 34 2 87 2 209 2 819 2 822 4 762 2 878 2 92 2 272 6 558 2 276 2 97 2 641 2 323 2 
772 4 714 4 647 4 838 2 716 2 521 2 842 2 659 2 529 10 606 4 730 2 237 4 239 2 15 2 65 2 241 2 66 4 794 2 541 2 475 2 303 2 682 4 485 4 623 2 193 2 306 2 803 2 360 2 146 2 34 2 87 2 209 2 819 2 822 4 762 2 878 2 92 2 272 6 558 2 276 2 97 2 641 2 323 2 
772 4 714 4 647 4 838 2 716 2 521 4 842 2 659 2 529 10 606 4 730 2 237 4 239 2 15 2 65 2 241 2 66 4 794 2 541 2 475 2 303 2 682 4 485 4 623 2 193 2 306 2 803 2 360 2 146 2 34 2 87 2 209 2 819 2 822 4 762 2 878 2 92 4 272 6 558 2 276 4 97 2 641 2 323 2 
334 2 720 2 449 2 230 2 616 2 637 2 
602 2 388 2 319 2 327 2 96 2 501 2 637 2 
870 2 352 1 713 2 354 1 76 2 136 2 647 4 281 1 361 2 587 1 723 1 674 2 725 2 472 2 444 2 529 4 766 2 
772 4 303 4 3 2 838 2 306 4 521 4 803 4 624 2 360 4 863 2 146 4 371 2 209 4 61 2 237 9 119 2 66 8 92 4 670 4 212 2 276 5 71 2 321 2 22 2 323 4 
220 2 74 7 188 2 714 2 822 2 191 4 53 2 682 2 647 1 240 2 4 2 568 2 274 2 85 2 183 1 236 2 529 1 619 2 
220 4 74 6 188 2 714 2 822 2 191 4 53 2 682 2 240 2 4 4 568 4 274 2 85 2 236 2 619 2 
220 8 74 10 188 2 714 2 822 2 191 4 53 2 682 2 647 1 240 6 4 8 568 8 274 2 85 2 183 1 236 2 529 1 619 8 
220 2 74 2 188 2 714 2 822 2 191 2 53 2 682 2 4 2 568 2 274 2 85 2 236 2 
769 2 1 2 101 2 645 2 647 40 6 6 652 2 774 2 654 2 109 8 450 2 113 2 783 2 339 2 115 2 457 10 124 2 123 2 16 18 469 2 20 4 349 2 246 7 680 2 137 2 800 6 689 2 690 2 806 4 364 4 257 2 259 4 695 2 260 6 588 20 148 2 155 2 382 2 593 4 706 2 45 2 162 2 164 16 834 6 52 2 393 2 518 2 166 4 280 2 718 2 170 2 397 2 522 2 55 8 284 2 398 2 173 2 56 2 529 44 59 4 179 6 291 4 609 2 412 2 413 2 416 2 70 6 614 2 615 2 419 1 301 2 745 2 195 8 200 2 427 2 755 2 428 4 433 2 759 2 435 2 874 2 315 2 318 36 
518 4 715 2 647 20 648 2 170 2 397 2 284 2 173 2 783 2 339 4 529 22 59 2 530 2 291 2 457 6 667 2 124 2 462 2 16 10 733 2 576 2 412 2 413 2 20 4 70 2 246 2 133 2 250 6 747 2 689 2 690 2 143 2 806 2 145 2 364 2 259 4 427 2 428 2 588 10 433 2 874 2 155 2 593 4 316 2 45 2 509 2 318 30 639 2 164 12 882 2 
834 4 52 2 1 4 769 2 645 2 518 6 646 2 166 2 647 34 648 2 280 2 170 2 522 2 397 2 284 2 654 2 398 2 173 2 783 2 339 6 529 38 59 2 530 2 179 4 531 1 291 6 457 14 668 2 123 2 124 2 16 16 671 2 469 2 20 4 70 4 416 2 614 2 349 2 615 2 246 4 301 2 133 2 680 2 250 2 745 2 304 2 689 2 690 1 487 2 143 2 145 2 806 2 364 6 257 2 200 2 259 4 755 2 427 2 86 1 428 4 588 18 433 2 759 2 153 2 874 2 155 2 382 2 593 4 316 2 706 2 45 4 509 2 318 34 639 2 320 1 278 2 707 2 164 4 
518 6 647 22 648 2 170 2 173 2 658 2 781 2 783 2 339 6 341 2 529 22 291 2 457 2 853 4 608 2 124 2 16 10 734 2 467 2 412 2 413 2 20 2 135 2 681 2 192 2 622 2 256 2 548 4 143 2 144 2 365 2 364 2 810 2 427 2 259 2 694 2 757 2 204 2 627 2 588 10 433 2 264 2 496 2 89 4 155 2 593 2 316 2 45 2 318 28 596 2 164 14 
126 2 

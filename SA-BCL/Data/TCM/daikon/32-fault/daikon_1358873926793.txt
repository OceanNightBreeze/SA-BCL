#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 200 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 829 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 805 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 303 684 132 349 755 573 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.ArrayIndexOutOfBoundsException 201 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 201 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 829 447 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 721 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 871 54 177 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 871 54 177 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 871 54 177 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (358,648) (358,648) 360 871 54 177 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_3R_50()Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_58()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:eq(FF)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_3_1()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsLTE([II)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaCharStream:readChar()C
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.PptSlice1:num_samples()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaCharStream:getEndColumn()I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:lte(II)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_163()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_49()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.Invariant:prob_and(DD)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern:intern([J)[J
utilMDE.Intern:numIntArrays()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:negate(I)I
daikon.ProglangType:dimensions()I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V | ASSIGN | 58129 | = null
daikon.test.TestQuant:removeAdjacentDups([I)[I | CONSTANT | 624 | 0 -> 1
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_51()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:sameLength([I[I)Z
daikon.ProglangType:baseIsScalar()Z
daikon.ValueTuple:isMissing(I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptSlice2:arity()I
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.MathMDE:pow(II)I
daikon.Quant:memberOf(D[F)Z
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:gt(II)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltsEqual([II)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min([I)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:InvMap()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | RETURN | 17435 | return null
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:memberOf(S[S)Z
daikon.diff.Node:Node()V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3053 | = null
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.Invariant:logDetail()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariants:Invariants()V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:gte(II)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Invariant:justified()Z
daikon.Quant:eltsLT([II)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptName:isEnterPoint()Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptSlice0:arity()I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Debug:logDetail()Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:union([I[I)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4963 | 78 -> 77
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | ASSIGN | 4792 | = null
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | STATEMENT | 38468 | stmt -> ;
utilMDE.WeakHasherMap:processQueue()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptSlice1:arity()I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:memberOf(I[I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:eq(II)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.Invariant:logOn()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_48()Z
daikon.Ppt:Ppt()V
daikon.Quant:eltsGteIndex([I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 133346 | return null
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaCharStream:ReadByte()C
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ProglangType:baseIsIntegral()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2590 | = null
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 37686 | 64 -> 0
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3R_54()Z
daikon.Debug:logOn()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:eq(DD)Z
daikon.Quant:memberOf(J[J)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaCharStream:getEndLine()I
daikon.ProglangType:isIntegral()Z
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_2_1(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z | CONDITION | 171995 | if (x) -> if (!x)
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.WeakHasherMap:size()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 13645 | = null
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ModBitTracker:num_samples()I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.MathMDE:gcd(II)I
jtb.JavaCharStream:getBeginLine()I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:hashCode()I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:memberOf(F[D)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
318 2 830 2 853 2 358 2 777 2 65 2 288 2 648 2 469 4 
486 2 200 2 245 2 50 2 512 2 823 2 
289 4 635 2 323 2 680 6 5 4 600 2 648 2 650 6 444 6 358 2 178 2 511 2 375 6 
106 10 55 2 695 2 607 8 581 10 763 16 293 26 86 6 704 2 270 2 436 2 437 29 304 4 538 10 714 10 679 10 774 2 748 8 75 8 46 4 309 16 648 6 779 4 422 2 281 8 358 6 180 6 786 16 811 12 157 4 
606 6 478 4 
715 2 
251 2 677 2 184 2 683 2 325 2 829 2 777 2 21 2 355 2 401 2 422 2 8 2 267 2 735 2 36 2 283 2 137 2 602 2 847 2 754 4 271 2 673 2 
106 12 1 6 604 4 607 6 2 4 581 12 763 24 109 4 818 6 293 36 86 4 222 6 270 2 591 2 304 2 437 40 538 12 714 6 679 12 20 8 748 10 750 6 353 4 646 2 309 24 648 4 358 4 524 2 180 4 786 24 811 15 631 2 
735 2 73 2 226 2 
541 2 634 2 119 2 333 2 345 22 799 10 74 2 397 2 548 2 371 2 238 2 314 2 390 2 711 2 
106 2 479 2 581 2 431 2 763 2 266 2 293 4 86 2 304 2 437 6 538 2 274 2 18 2 851 2 714 4 679 2 794 2 748 2 309 2 284 2 181 2 786 2 811 2 
106 4 538 4 604 4 581 4 679 4 109 4 763 8 750 6 420 2 46 2 309 8 293 12 222 6 406 2 786 8 811 4 437 16 
550 2 664 2 584 2 242 62 843 10 433 4 667 2 789 2 638 14 587 4 565 4 189 4 36 4 735 8 669 2 570 2 38 4 223 4 847 2 248 2 11 2 411 2 226 2 487 2 197 2 796 4 797 4 73 6 467 2 383 10 123 2 384 2 783 2 445 4 864 2 834 4 754 4 579 2 657 2 182 4 
715 2 108 2 292 2 597 2 805 2 22 2 427 2 194 2 
759 16 213 16 217 3 434 2 533 3 640 2 534 2 9 2 536 2 10 3 773 1 17 1 542 2 19 2 545 2 232 4 440 2 120 2 778 6 648 34 781 2 236 1 653 2 125 2 654 1 446 2 27 2 30 2 448 2 449 1 239 2 240 2 342 1 132 2 554 2 453 1 560 2 454 3 133 2 561 2 562 24 564 2 348 4 347 2 244 2 573 2 349 2 574 2 143 2 144 1 792 2 678 1 252 2 682 2 684 2 258 1 149 2 49 2 262 2 152 2 358 32 473 2 810 5 689 32 154 2 476 2 361 2 692 2 816 2 265 2 817 2 699 2 821 2 822 3 484 2 706 2 62 6 164 3 485 2 67 1 68 2 69 2 489 2 490 2 495 16 720 2 278 2 830 2 76 2 499 2 723 2 79 2 81 2 725 2 287 2 838 2 391 2 603 2 727 16 394 2 505 2 840 2 506 3 85 2 398 4 400 3 733 24 734 2 297 4 611 2 190 1 736 3 298 1 90 1 613 2 740 3 303 2 196 2 195 3 615 6 743 1 852 4 416 4 417 2 203 6 619 3 618 2 617 2 621 2 752 2 521 2 310 2 627 32 755 2 757 1 869 2 101 2 
842 2 648 2 
557 2 167 2 648 4 
142 2 
762 2 216 2 111 2 3 4 110 2 767 2 221 4 115 20 117 2 771 2 438 4 118 2 546 2 547 20 442 10 651 2 124 2 25 16 336 2 450 20 131 2 451 6 551 16 555 2 556 2 553 56 665 2 563 4 35 2 37 2 572 4 571 2 140 2 41 4 350 2 675 4 793 2 681 2 466 4 256 2 257 2 150 32 48 2 808 4 471 16 687 18 155 2 53 2 691 2 57 4 366 2 820 2 824 20 709 2 710 2 826 2 70 2 488 2 72 56 496 2 277 2 498 2 385 6 831 2 833 20 179 2 290 6 504 16 83 20 291 8 844 20 731 6 403 4 404 20 88 20 191 4 192 2 848 2 299 20 409 2 92 8 614 2 301 2 93 10 94 2 741 2 415 2 307 2 745 2 859 12 862 10 624 56 312 2 210 2 756 2 629 2 526 2 758 20 105 2 
590 2 212 2 91 1 861 2 
590 2 313 2 
735 2 508 2 201 2 590 2 585 2 128 2 157 2 
590 2 585 2 828 2 
590 2 585 2 719 2 
0 2 28 2 212 2 
590 2 585 2 
268 2 28 2 
590 2 576 2 
28 2 656 2 212 2 
114 2 212 2 468 2 
260 2 212 2 458 2 
151 2 212 2 121 2 
147 2 380 2 212 2 
28 2 129 2 
590 2 316 2 
382 2 468 2 
260 2 503 2 
636 2 121 2 
147 2 413 2 
28 2 392 2 
147 2 616 2 
121 2 43 2 
780 2 
300 2 468 2 
443 2 28 2 656 2 212 2 
443 2 28 2 656 2 212 2 850 2 
770 2 28 2 212 2 
516 2 28 2 212 2 
205 2 
28 2 726 2 
735 2 483 2 732 2 128 2 
735 2 201 2 531 2 483 2 732 2 128 2 
735 2 459 2 590 2 585 2 128 2 157 2 
829 2 447 2 
735 2 760 2 128 2 157 2 
776 2 121 2 
147 2 324 2 
481 2 468 2 
260 2 51 2 
147 2 260 2 663 2 
782 2 
147 2 260 2 685 2 
147 2 260 2 373 2 
735 2 510 6 64 2 237 2 500 6 626 2 870 2 128 2 
764 2 345 6 421 2 34 2 700 4 701 2 356 2 23 2 326 2 113 2 470 2 866 2 100 2 249 2 42 2 374 2 837 4 839 2 
212 2 435 2 
613 2 
759 6 322 2 434 2 640 2 534 2 642 2 232 4 778 2 648 26 649 2 647 2 30 2 239 2 32 2 132 2 560 2 561 2 564 2 134 2 348 4 347 2 790 4 573 2 349 2 672 2 678 2 465 2 252 2 798 2 682 2 149 2 358 26 689 4 154 2 476 2 361 2 692 2 265 2 816 2 583 2 699 2 484 6 62 4 705 2 825 2 66 4 68 2 713 2 278 2 830 2 282 2 76 2 723 2 81 2 725 2 391 2 603 2 840 2 398 4 730 2 297 8 298 2 196 4 615 6 852 4 96 2 203 2 424 2 752 2 521 2 310 2 627 6 755 2 869 2 
759 6 321 2 322 2 434 2 640 2 534 2 9 1 642 2 232 4 778 2 648 26 649 2 647 2 24 2 446 1 30 2 239 2 32 2 132 2 560 2 561 2 564 2 134 2 348 4 347 2 790 4 573 2 349 2 678 2 465 2 252 2 682 2 149 2 358 26 52 2 689 4 154 2 476 2 361 2 692 2 362 2 265 2 816 2 583 2 699 2 484 6 62 5 705 2 825 2 66 4 68 2 713 2 278 2 830 2 282 2 76 2 723 2 81 2 725 2 391 2 603 2 840 2 398 4 297 8 298 2 196 4 615 6 852 4 96 2 203 2 424 2 752 2 521 2 310 2 627 6 755 2 869 2 
815 2 13 2 
161 2 
693 2 482 2 586 2 702 2 219 2 588 2 224 2 272 2 593 6 68 2 486 4 15 2 16 2 231 4 494 2 232 2 717 2 381 2 278 2 648 12 175 8 76 2 501 2 724 2 784 2 30 2 391 2 31 2 605 2 343 2 344 2 33 2 396 4 398 2 347 2 457 4 188 2 845 2 245 6 566 2 612 2 412 2 512 4 514 4 306 2 615 4 515 10 857 8 419 2 357 4 519 2 261 2 521 2 50 6 358 6 523 4 628 2 477 2 103 2 812 2 
693 2 482 2 586 2 532 4 702 2 219 2 588 2 224 2 272 2 592 2 593 8 68 2 486 4 15 2 16 2 231 4 232 2 332 2 717 2 381 2 278 2 648 12 175 8 76 2 501 2 784 2 30 2 391 2 31 2 605 2 343 2 344 2 33 2 396 4 398 2 347 2 457 4 188 2 845 2 245 6 566 2 612 2 412 2 512 4 514 4 306 2 615 4 515 10 857 8 419 2 357 4 519 2 521 2 520 2 261 2 50 8 358 6 523 4 628 2 477 2 103 2 812 2 
514 2 306 2 693 2 486 2 15 2 605 2 344 2 702 2 457 4 357 4 245 2 519 2 566 2 50 2 224 2 477 2 812 2 512 2 
693 2 482 2 702 2 219 2 588 2 224 2 272 2 593 6 68 2 486 4 15 2 16 2 231 4 332 2 494 2 232 2 717 2 381 2 278 2 648 12 175 4 76 2 501 2 724 2 784 2 30 2 391 2 31 2 605 2 343 2 344 2 33 2 396 4 398 2 347 2 457 4 188 2 845 2 245 4 566 2 612 2 412 2 512 4 514 4 306 2 615 4 515 6 857 4 419 2 357 4 519 2 261 2 521 2 50 6 358 6 523 4 628 2 477 2 103 2 812 2 
693 2 482 2 702 2 219 2 588 2 224 2 272 2 593 6 68 2 486 4 15 2 16 2 231 4 494 2 232 2 717 2 381 2 278 2 648 12 175 4 76 2 501 2 724 2 784 2 30 2 391 2 31 2 605 2 343 2 344 2 33 2 396 4 398 2 347 2 457 4 188 2 845 2 245 6 566 2 612 2 737 2 412 2 512 4 514 4 306 2 615 4 515 6 857 4 419 2 357 4 519 2 261 2 521 2 50 4 358 6 523 4 628 2 477 2 103 2 812 2 
693 2 482 2 586 2 702 2 219 2 588 2 224 2 272 2 593 6 68 2 486 4 15 2 16 2 231 4 494 2 232 2 717 2 381 2 278 2 648 12 175 4 76 2 501 2 724 2 784 2 30 2 391 2 31 2 605 2 343 2 344 2 33 2 396 4 398 2 347 2 457 4 188 2 845 2 245 6 566 2 612 2 412 2 512 4 514 4 306 2 615 4 515 6 857 8 419 2 357 4 519 2 261 2 521 2 50 6 358 6 523 4 628 2 477 2 103 2 812 2 
693 2 482 2 586 2 702 2 219 2 588 2 224 2 272 2 593 8 68 2 486 4 15 2 16 2 231 4 494 2 232 2 717 2 381 2 278 2 648 12 175 8 76 2 501 2 724 2 784 2 30 2 391 2 31 2 605 2 343 2 344 2 33 2 396 4 398 2 347 2 457 4 188 2 845 2 245 8 566 2 612 2 737 2 412 2 512 4 514 4 306 2 615 4 515 10 857 8 419 2 357 4 519 2 261 2 521 2 50 6 358 6 523 4 628 2 477 2 103 2 812 2 
693 2 482 2 586 2 702 2 219 2 588 2 224 2 272 2 593 6 68 2 486 4 15 2 16 2 231 4 494 2 232 2 717 2 381 2 278 2 648 12 175 8 76 2 501 2 724 2 784 2 30 2 391 2 31 2 605 2 343 2 344 2 33 2 396 4 398 2 347 2 457 4 188 2 845 2 245 6 566 2 612 2 412 2 512 4 514 4 306 2 615 4 515 10 857 8 419 2 357 4 519 2 261 2 521 2 50 6 358 6 523 4 628 2 477 2 103 2 812 2 
434 2 639 2 219 2 9 2 224 2 15 2 16 2 643 2 231 6 232 4 645 4 644 1 648 46 649 2 446 2 30 2 659 2 239 2 31 2 662 2 452 2 33 2 666 6 457 4 245 8 247 2 39 2 462 2 45 6 252 2 682 2 259 2 261 2 50 4 689 2 476 2 477 2 692 12 693 2 265 2 480 4 697 7 482 4 699 2 484 6 702 2 703 2 62 6 705 2 272 2 66 4 68 2 486 4 491 2 492 2 494 2 717 2 278 2 76 2 501 2 725 2 729 1 297 4 737 4 738 2 89 6 512 4 95 6 306 2 514 4 515 2 749 6 521 2 519 2 310 2 523 8 103 2 527 2 319 1 759 6 320 2 534 2 539 6 331 1 543 1 778 2 784 2 338 2 343 2 558 2 344 2 560 2 561 2 564 2 134 2 347 2 348 4 566 2 568 2 138 8 349 2 142 6 352 6 800 2 354 2 357 4 578 6 149 2 809 2 358 24 153 2 154 2 812 2 361 2 364 2 583 4 163 2 588 2 369 1 165 2 167 6 593 12 168 2 595 6 596 10 598 2 381 2 174 6 830 2 601 2 386 2 388 6 391 2 603 2 605 2 393 1 840 2 842 6 396 4 186 6 398 4 845 2 188 2 612 4 408 2 412 4 414 1 615 6 199 7 852 4 857 2 419 2 203 2 860 2 623 6 627 8 628 2 630 2 430 1 
320 2 759 6 434 2 639 2 219 2 534 4 9 2 224 2 539 6 16 2 15 2 643 2 231 6 232 4 645 4 778 2 649 2 648 48 446 2 784 2 30 2 659 2 239 2 31 2 662 2 338 2 788 2 343 2 558 2 452 2 560 2 344 2 561 2 33 2 666 6 564 2 134 2 348 4 347 2 457 4 245 8 568 2 566 2 247 2 39 2 349 2 138 8 462 2 142 6 45 6 352 6 252 2 682 4 800 2 354 2 259 2 357 4 578 6 149 2 809 2 261 2 50 8 358 26 153 2 689 2 154 2 476 2 477 2 812 2 361 2 159 2 693 2 692 12 265 2 364 2 480 4 583 4 482 4 699 2 586 4 163 2 484 6 703 2 702 2 588 2 705 2 62 6 165 2 272 2 167 6 66 4 593 12 486 4 68 2 168 2 595 6 491 2 596 10 492 2 494 2 598 2 717 2 381 2 278 2 174 6 830 2 601 2 76 2 386 2 501 2 388 6 725 2 391 2 603 4 605 2 840 2 842 6 186 6 396 4 398 4 188 2 845 2 297 8 612 4 738 2 89 6 408 2 412 4 512 4 196 2 95 6 514 4 306 2 615 6 515 2 852 4 749 6 857 6 419 2 203 2 860 2 623 6 519 2 521 2 310 2 627 8 523 8 628 2 630 2 103 2 527 2 
320 2 759 6 434 2 639 2 219 2 534 4 9 2 224 2 539 6 16 2 15 2 643 2 231 6 232 4 645 4 778 2 649 2 648 48 446 2 784 2 30 2 659 2 239 2 31 2 662 2 338 2 788 2 343 2 558 2 452 2 560 2 344 2 561 2 33 2 666 6 564 2 134 2 348 4 347 2 457 4 245 8 568 2 566 2 247 2 39 2 349 2 138 8 462 2 142 6 45 6 352 6 252 2 682 4 800 2 354 2 259 2 357 4 578 6 149 2 809 2 261 2 50 8 358 26 153 2 689 2 476 2 154 2 477 2 812 2 361 2 159 2 693 2 692 12 265 2 364 2 480 4 583 4 482 4 699 2 586 4 163 2 484 6 703 2 702 2 588 2 705 2 62 6 165 2 272 2 167 6 66 4 593 12 486 4 68 2 168 2 595 6 491 2 596 10 492 2 494 2 598 2 717 2 381 2 278 2 174 6 175 4 830 2 601 2 76 2 386 2 501 2 388 6 725 2 391 2 603 4 605 2 840 2 842 6 186 6 396 4 398 4 188 2 845 2 297 8 612 4 738 2 89 6 408 2 412 4 512 4 196 2 95 6 514 4 306 2 615 6 515 6 852 4 749 6 857 6 419 2 203 2 860 2 623 6 519 2 521 2 310 2 627 8 523 8 628 2 630 2 103 2 527 2 
434 2 639 2 219 2 9 2 224 2 15 2 16 2 643 2 231 6 232 4 645 4 649 2 648 52 446 2 30 2 659 2 239 2 31 2 452 2 33 2 666 6 457 4 245 10 247 2 39 2 462 2 45 6 252 2 682 4 259 2 261 2 50 10 689 4 690 2 476 2 477 2 692 10 693 2 265 2 480 4 482 4 699 2 58 6 484 8 702 2 703 2 62 6 705 4 707 6 272 2 66 6 273 2 486 4 68 2 491 2 492 2 494 2 717 2 278 2 76 2 501 2 725 4 297 10 737 2 738 2 89 12 512 4 95 6 306 2 514 4 515 6 749 12 521 2 519 2 310 2 523 8 103 2 527 2 317 6 759 8 320 2 534 4 772 6 539 6 332 2 778 4 784 2 785 6 787 2 338 2 788 2 343 2 558 2 344 2 560 2 561 2 564 2 134 2 347 2 348 4 566 2 568 2 138 8 349 2 142 12 352 6 800 2 802 2 354 2 357 4 578 6 149 2 809 2 358 24 359 6 153 2 154 2 812 2 361 2 159 2 364 2 583 4 586 4 163 2 588 2 165 2 166 6 167 12 593 16 168 2 594 2 595 6 170 6 596 8 598 2 381 2 175 4 174 12 830 2 176 2 601 2 386 2 388 6 391 2 603 4 605 2 840 2 842 12 396 4 186 6 398 4 845 2 188 2 612 4 408 2 410 2 412 4 196 2 615 6 852 4 857 6 419 2 203 4 860 2 425 2 623 6 865 6 627 12 628 2 630 2 
31 2 605 2 344 2 396 2 586 2 219 2 457 2 845 2 245 6 566 2 224 2 412 2 512 4 593 4 486 4 16 2 15 2 515 4 231 2 494 2 717 2 857 6 419 2 381 2 648 4 175 4 357 2 261 2 50 6 501 2 523 2 628 2 477 2 812 2 103 2 
759 6 218 2 434 2 219 2 9 2 224 2 16 2 15 2 231 2 232 4 778 3 649 2 648 28 653 2 652 2 446 2 784 2 30 2 239 2 549 2 31 2 662 2 560 2 344 2 561 2 564 2 134 2 348 4 347 2 457 2 456 3 245 6 566 2 252 2 357 2 149 2 261 2 50 6 358 24 689 3 154 2 476 2 477 2 812 2 361 2 158 2 692 4 265 2 583 2 699 2 586 2 484 6 62 6 66 4 593 4 486 4 68 2 596 2 494 2 717 2 381 2 720 2 278 2 830 2 76 2 501 2 391 2 605 2 840 2 396 2 398 4 845 2 613 2 412 2 512 4 302 2 615 6 852 4 515 2 857 6 419 2 203 3 618 2 521 2 310 2 523 2 627 8 628 2 103 2 
381 2 60 2 219 2 
381 2 60 2 219 2 
759 2 766 2 219 6 534 4 9 2 329 2 224 2 116 2 225 2 15 2 16 2 231 4 544 2 232 4 332 4 645 2 648 24 649 2 446 2 30 2 239 2 31 2 339 2 343 2 560 2 344 4 561 2 564 2 134 2 348 4 347 2 457 2 245 12 567 2 349 4 252 2 146 4 682 4 357 2 149 2 50 12 358 16 475 2 689 2 154 2 476 2 361 2 692 4 160 2 265 2 364 2 480 2 583 6 482 4 699 2 367 2 586 4 60 2 484 2 588 2 62 6 165 2 272 2 593 16 68 2 486 4 595 2 713 4 596 2 598 2 381 4 278 2 175 4 830 2 280 2 76 2 285 2 836 2 391 2 603 4 840 2 185 4 396 2 398 4 507 2 297 4 612 2 737 4 412 4 512 4 514 4 306 2 615 6 852 4 744 2 515 6 857 6 519 2 521 2 310 2 627 2 523 4 315 2 211 2 
692 2 160 2 815 2 595 2 558 2 596 2 480 2 801 2 354 2 702 2 648 4 246 2 521 2 311 2 358 2 329 2 116 2 
759 2 530 2 766 2 219 6 534 4 9 2 329 2 224 2 116 2 15 2 16 2 231 4 544 2 232 4 332 4 645 2 648 24 649 2 446 2 30 2 239 2 31 2 339 2 343 2 560 2 344 4 561 2 33 2 564 2 134 2 348 4 347 2 457 2 136 2 245 12 567 2 349 4 44 2 252 2 146 4 682 4 357 2 149 2 50 12 358 16 689 4 154 2 476 2 813 2 361 2 692 2 160 2 265 2 364 2 583 6 482 4 699 2 367 2 586 4 60 2 484 2 588 2 62 6 165 2 272 2 593 16 68 2 486 4 595 2 713 4 598 2 381 4 278 2 175 4 830 2 280 2 76 2 285 4 836 2 391 2 603 4 840 2 185 4 396 2 398 4 297 4 612 4 737 4 412 4 512 4 514 4 306 2 615 6 852 4 744 2 515 6 857 6 98 2 519 2 521 2 310 2 523 4 627 2 211 2 
759 2 766 2 219 6 534 4 9 2 329 2 224 2 116 2 15 2 16 2 231 4 544 2 232 4 332 4 645 2 648 24 649 2 655 2 446 2 30 2 337 2 239 2 31 2 339 2 343 2 560 2 344 4 561 2 33 2 564 2 134 2 348 4 347 2 457 2 245 12 567 2 349 4 252 2 146 4 682 4 357 2 149 2 50 12 358 16 474 2 689 2 154 2 476 2 361 2 692 4 160 2 265 2 364 2 480 2 583 6 482 4 699 2 367 2 586 4 60 2 484 2 588 2 62 6 165 2 272 2 593 16 68 2 486 4 595 2 713 4 596 2 598 2 381 4 278 2 175 4 830 2 280 2 76 2 285 2 836 2 391 2 603 4 840 2 185 4 396 2 398 4 297 4 612 4 846 2 737 4 412 4 512 4 514 4 306 2 615 6 852 4 744 2 515 6 857 6 519 2 521 2 310 2 753 2 627 2 523 4 211 2 
721 2 
759 2 761 2 59 2 434 2 368 2 668 2 484 2 112 2 61 2 705 6 407 2 12 4 66 2 275 1 827 2 203 3 778 3 648 2 832 2 358 2 627 2 686 2 689 3 658 3 429 2 
759 2 761 2 59 2 434 2 368 2 668 2 484 2 112 2 61 2 705 6 407 2 12 4 66 2 827 2 203 2 778 2 648 2 832 2 358 2 627 2 686 2 689 2 658 2 429 2 
759 2 761 2 59 2 434 2 368 2 668 2 484 2 112 2 61 2 705 6 407 2 12 4 66 2 827 2 203 2 778 2 648 2 832 2 358 2 627 2 686 2 689 2 658 2 429 2 
106 2 607 4 581 2 608 2 213 2 763 2 819 2 434 2 293 4 589 4 61 2 295 3 670 2 641 2 437 6 198 4 513 2 538 2 71 4 540 6 679 2 97 2 145 2 855 2 858 2 495 2 497 4 778 3 309 2 648 10 235 4 807 3 358 4 627 2 180 2 689 3 29 3 786 2 660 2 130 2 
106 2 607 4 581 2 608 2 213 2 763 2 819 2 434 2 293 4 589 4 61 2 295 2 270 2 670 2 641 2 437 4 198 4 513 2 538 2 71 4 540 6 679 2 97 2 145 2 855 2 748 2 858 2 495 2 497 4 778 2 309 2 648 10 235 4 807 2 358 4 627 2 180 2 689 2 29 2 786 2 811 2 660 2 130 2 
106 2 607 4 581 2 608 2 213 2 763 2 819 2 434 2 293 4 589 4 61 2 295 2 270 2 670 2 641 2 437 4 198 4 513 2 538 2 71 4 540 6 679 2 97 2 145 2 855 2 748 2 858 2 495 2 497 4 778 2 309 2 648 10 235 4 807 2 358 4 627 2 180 2 689 2 29 2 786 2 811 2 660 2 130 2 
106 2 607 4 581 2 608 2 213 2 763 2 819 2 434 2 293 4 589 4 61 2 295 2 270 2 670 2 641 2 437 4 198 4 513 2 538 2 71 4 540 6 679 2 97 2 145 2 855 2 748 2 858 2 495 2 497 4 778 2 309 2 648 10 235 4 807 2 358 4 627 2 180 2 689 2 29 2 786 2 811 2 660 2 130 2 
106 2 607 4 581 2 608 2 213 2 763 2 819 2 434 2 293 4 589 4 61 2 295 2 270 4 670 2 641 2 437 4 198 4 513 2 538 2 71 4 540 6 679 2 97 2 145 2 855 2 748 4 858 2 495 2 497 4 778 2 309 2 648 10 235 4 807 2 358 4 627 2 180 2 689 2 29 2 786 2 811 4 660 2 130 2 
77 2 696 2 327 2 708 2 215 2 99 2 
96 2 233 2 141 2 395 2 455 2 99 2 206 2 
528 2 214 2 609 2 7 2 370 1 139 2 63 2 248 1 193 2 250 2 68 2 712 2 230 2 747 2 441 2 804 2 718 2 648 10 47 1 174 2 358 8 80 2 835 2 26 1 579 1 156 2 
106 6 1 4 814 2 2 2 607 4 363 2 241 2 581 6 56 2 763 6 109 2 293 12 460 2 270 2 437 16 538 6 679 6 795 2 20 2 418 2 748 2 750 4 255 2 234 2 309 6 648 2 358 2 502 2 180 2 786 6 632 2 811 3 
198 2 229 2 716 2 775 2 378 2 243 4 497 2 620 1 648 1 518 2 235 2 358 1 269 2 209 2 867 7 387 2 372 2 228 2 
198 2 229 2 716 2 775 2 378 4 243 4 497 2 518 2 235 2 269 2 209 2 867 6 387 4 372 2 228 4 
198 2 229 2 716 2 775 2 378 8 243 4 497 2 620 1 648 1 518 2 235 2 358 1 269 6 209 8 867 10 387 8 372 2 228 8 
198 2 229 2 716 2 775 2 378 2 243 2 497 2 518 2 235 2 867 2 387 2 372 2 228 2 
107 16 633 2 765 2 432 2 637 2 6 4 220 2 9 2 328 4 769 2 14 2 227 2 330 8 439 2 648 44 334 2 335 2 126 2 446 2 127 2 341 2 552 2 559 10 346 6 348 18 791 2 40 2 575 2 674 2 351 2 464 2 253 2 803 4 148 6 149 4 472 4 358 40 263 2 154 2 54 2 694 4 365 2 698 6 699 4 162 6 62 36 169 2 171 2 377 2 493 2 379 6 276 2 599 2 279 14 173 2 78 2 177 2 722 2 286 7 82 2 389 2 183 4 728 1 84 6 841 2 399 2 187 8 294 2 610 2 402 2 87 2 296 2 405 2 509 6 849 2 742 2 305 2 852 20 517 2 308 4 202 2 204 2 751 2 207 4 423 8 622 2 208 6 522 2 428 2 868 2 525 2 102 2 871 2 872 4 
694 2 340 2 107 10 661 2 559 4 841 2 699 2 162 2 348 6 6 2 87 2 62 16 791 2 9 4 769 2 849 2 852 6 376 2 308 2 803 2 648 18 207 2 149 2 177 2 722 2 358 16 522 2 446 4 428 2 286 2 389 2 525 2 154 2 871 2 872 2 54 2 
107 2 852 2 376 2 699 2 348 2 648 6 149 2 62 4 177 2 9 2 522 2 358 6 446 2 154 2 871 2 54 2 
694 2 529 2 107 14 580 2 699 2 4 2 768 2 6 2 535 4 62 24 9 4 537 2 172 2 122 2 648 24 177 2 722 2 446 4 559 2 135 2 348 10 87 2 569 2 461 4 791 2 671 2 849 2 739 2 463 2 676 2 852 10 746 2 854 2 856 2 254 2 803 2 577 2 806 2 426 2 149 2 863 2 625 2 522 2 358 24 428 2 688 4 154 2 264 2 360 2 871 2 54 2 104 2 
582 2 

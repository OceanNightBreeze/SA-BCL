#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V ERROR java.lang.NullPointerException 159 226 
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (176,323) (176,323) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 63 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 139 (49,116) 188 (14,83,114,181,276,287) 187 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 110 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 90 148 170 246 200 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.NullPointerException 267 314 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 267 314 95 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NoClassDefFoundError (221,288) (221,288) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 272 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 272 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 272 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 272 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 272 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 278 235 132 331 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NoClassDefFoundError (78,203) (78,203) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NoClassDefFoundError (78,203) (78,203) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NoClassDefFoundError (78,203) (78,203) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.NoClassDefFoundError (78,203) (78,203) 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ExceptionInInitializerError 11 271 72 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 11 271 72 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 11 271 72 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 11 271 72 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern:numIntArrays()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eq(II)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaCharStream:ReadByte()C
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 2840 | = null
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:lexGT([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60655 | = null
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:eltsGT([II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:noDups([I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.ValueTuple:size()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:mod_positive(II)I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:memberOf(F[F)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7862 | if (x) -> if (!x)
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eltwiseGT([I)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:memberOf(I[I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ModBitTracker:split(I)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:lexGTE([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName:repr()Ljava.lang.String; | OPERATOR | 14823 | == -> !=
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:ne(II)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakHasherMap:size()I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ModBitTracker:num_sets()I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:min([I)I
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:eltsLtIndex([I)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:gte(II)Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.TestUtilMDE:lsis_test(I)V | ASSIGN | 45022 | = null
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ModBitTracker:num_vars()I
daikon.Quant:lexLTE([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eq(FF)Z
daikon.Quant:intersection([I[I)[I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_ntk()I
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.ArraysMDE:concat([I[I)[I | ASSIGN | 37483 | = null
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern:intern([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:lte(II)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
daikon.Quant:eltsGTE([II)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:concat([I[I)[I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:lt(II)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName:hashCode()I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:memberOf(F[D)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltsNotEqual([II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
159 2 226 2 
324 2 236 6 154 2 62 2 158 2 6 2 30 6 140 2 120 2 92 2 244 6 
73 4 296 6 24 4 176 2 268 2 19 6 239 2 310 6 232 2 231 6 323 2 219 2 245 2 
186 2 143 2 82 4 134 17 176 4 188 8 276 6 274 4 49 8 294 17 103 8 254 2 139 16 116 8 37 8 321 2 107 8 323 4 109 8 205 12 122 2 
63 2 
38 2 
174 2 173 2 42 2 299 2 176 4 300 2 1 2 214 2 7 2 177 2 178 2 216 4 105 2 180 2 264 2 9 4 147 2 59 2 152 2 61 2 64 2 21 2 309 2 160 2 117 2 118 2 66 2 163 2 23 2 197 2 32 2 79 4 323 4 133 2 168 2 249 2 285 2 250 4 289 2 136 2 253 2 89 2 256 2 211 2 
176 4 49 4 103 4 107 4 109 4 323 4 282 8 14 8 134 9 83 4 188 4 114 2 294 9 139 8 116 4 37 4 
180 2 161 2 243 2 
163 2 315 2 98 2 124 2 304 2 208 2 293 2 328 2 202 2 319 22 218 10 313 2 93 2 80 2 
96 2 44 2 45 2 101 2 276 2 49 2 4 2 103 2 107 2 109 2 205 4 185 2 134 6 188 2 327 2 294 6 139 4 116 2 192 2 37 2 193 2 
74 8 287 2 134 5 187 2 251 2 188 6 49 4 294 9 22 2 103 4 139 10 116 6 37 4 181 4 321 2 107 4 109 6 
237 4 25 4 41 4 164 2 198 2 213 4 102 2 126 2 127 14 8 10 166 2 129 2 31 2 180 8 264 4 279 4 9 4 240 2 150 4 149 2 243 2 247 2 248 62 286 4 325 2 266 4 84 4 111 10 291 2 252 2 329 2 65 2 209 4 89 2 311 2 194 4 161 6 257 2 142 2 210 2 
97 2 316 2 43 2 318 2 54 2 60 2 305 2 141 2 38 2 69 2 
110 2 
176 2 171 2 
176 4 301 2 48 2 
269 2 
246 2 196 2 144 2 16 6 225 2 270 2 306 6 170 2 308 2 47 2 200 2 5 2 138 2 28 2 167 2 52 2 90 2 258 2 148 2 108 2 56 2 121 6 
135 2 155 1 12 2 273 2 
106 2 12 2 
234 2 263 2 143 2 180 2 153 2 230 2 12 2 
81 2 153 2 12 2 
153 2 12 2 242 2 
88 2 135 2 182 2 
153 2 12 2 
182 2 259 2 
12 2 332 2 
191 2 135 2 182 2 
222 2 135 2 183 2 
297 2 172 2 135 2 
135 2 302 2 165 2 
320 2 135 2 17 2 
182 2 70 2 
284 2 12 2 
222 2 100 2 
172 2 261 2 
302 2 137 2 
320 2 3 2 
99 2 182 2 
320 2 322 2 
290 2 302 2 
172 2 189 2 
222 2 217 2 
191 2 135 2 223 2 182 2 
191 2 135 2 223 2 182 2 20 2 
135 2 182 2 67 2 
135 2 182 2 303 2 
292 2 18 2 115 2 91 2 
314 2 267 2 
314 2 267 2 95 2 
143 2 180 2 153 2 46 2 230 2 12 2 
174 2 113 2 
143 2 169 2 180 2 230 2 
77 2 302 2 
320 2 312 2 
222 2 255 2 
172 2 220 2 
320 2 172 2 125 2 
320 2 172 2 229 2 
172 2 320 2 50 2 
172 2 320 2 162 2 
288 2 221 2 
53 2 182 2 
71 2 233 2 298 2 175 2 224 2 207 2 112 4 199 2 27 2 76 2 86 2 215 2 330 2 319 6 104 4 36 2 131 2 55 2 
135 2 201 2 
34 2 
272 2 
272 2 
275 2 145 2 2 2 
275 2 145 2 2 2 
272 2 
272 2 
272 2 
13 2 235 2 130 2 238 2 278 2 10 2 331 2 307 2 132 2 
29 2 75 2 262 2 277 2 39 2 151 2 
190 2 33 2 260 2 212 2 280 2 206 2 151 2 
40 1 295 2 123 2 0 2 176 10 317 2 146 2 51 2 128 2 241 1 204 2 184 2 323 8 281 1 283 2 247 1 15 2 156 2 157 2 227 2 87 2 228 2 119 2 257 1 68 2 195 2 
203 2 78 2 
203 2 78 2 
203 2 78 2 
203 2 78 2 
176 3 179 1 11 2 57 1 265 1 58 1 271 2 72 2 26 1 323 3 326 1 85 1 35 2 
35 2 72 2 176 2 11 2 271 2 323 2 
35 2 72 2 176 2 11 2 271 2 323 2 
35 2 72 2 176 2 11 2 271 2 323 2 
94 2 

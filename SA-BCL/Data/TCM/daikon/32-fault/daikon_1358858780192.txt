#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (443,585) (443,585) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 581 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 192 618 684 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V ERROR java.lang.ArrayIndexOutOfBoundsException 479 
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V ERROR java.lang.ArrayIndexOutOfBoundsException 318 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testPpts1Ppts2()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testPpts1Ppts3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 560 226 (125,666) (125,666) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 560 226 (125,666) (125,666) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 560 226 (125,666) (125,666) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 560 226 (125,666) (125,666) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR utilMDE.Assert$AssertionException (443,585) 285 (29,658) (125,666) (125,666) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR utilMDE.Assert$AssertionException (443,585) 285 (29,658) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (443,585) 285 (29,658) (29,658) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (443,585) 285 (29,658) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 48 353 562 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 417 (113,134,164,174,252,309,470,497,551,587) 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 417 (113,134,164,174,252,309,470,497,551,587) 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 16 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 417 (113,134,164,174,252,309,470,497,551,587) 103 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NullPointerException 421 656 (474,678) (474,678) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NullPointerException 421 656 (474,678) (474,678) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NullPointerException 421 656 (474,678) (474,678) 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (443,585) (443,585) 384 67 333 238 
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (443,585) 83 67 333 238 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.UnsupportedOperationException 411 461 67 333 238 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.Error 235 67 333 238 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:concat([I[I)[I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:union([I[I)[I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:slice([III)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z | CONDITION | 57307 | if (x) -> if (!x)
daikon.Quant:subsetOf([B[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaCharStream:getEndLine()I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:ne(II)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:min([I)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z | CONDITION | 4936 | if (x) -> if (!x)
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eltwiseLT([I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:gt(II)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.Node:Node()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:noDups([I)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | RETURN | 37622 | return null
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLT([II)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(DD)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfo:new_ppt()V
daikon.ModBitTracker:split(I)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getEndColumn()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1858 | return null
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.ValueTuple:size()I
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:intersection([I[I)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator; | RETURN | 101933 | return null
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.Invariants:Invariants()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ModBitTracker:num_sets()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:memberOf(J[J)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.PptSlice1:arity()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.RootNode:RootNode()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object; | RETURN | 62299 | return null
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177183 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.MathMDE:gcd(JJ)J
daikon.ModBitTracker:num_samples()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptSlice0:arity()I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:backup(I)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:subsetOf([S[S)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:isScalar()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Ppt:Ppt()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.WeakHasherMap:size()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName:esc_name()Ljava.lang.String; | RETURN | 7456 | return null
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit; | ASSIGN | 3246 | = null
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:lt(II)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Intern:intern([D)[D
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:eltwiseEqual([I)Z | CONDITION | 174937 | if (x) -> if (!x)
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus([I)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.ProglangType:isIntegral()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 37686 | 64 -> 0
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J | RETURN | 30018 | return null
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONSTANT | 127547 | 2 -> -1
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String; | OPERATOR | 49349 | > -> ==
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.ProglangType:dimensions()I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:esc_name_impl()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:eltsLteIndex([I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ProglangType:isArray()Z
daikon.Quant:memberOf(S[S)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaCharStream:readChar()C | CONDITION | 5637 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:isReverse([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 22146 | = null
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eq(FF)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
581 2 585 2 142 2 41 4 267 2 443 2 261 2 47 2 294 2 
414 6 230 2 253 2 197 2 1 2 82 2 334 2 491 2 513 6 233 2 540 6 
535 2 43 6 251 4 80 2 671 4 296 2 495 6 585 2 375 2 377 6 369 2 443 2 17 6 
417 16 4 2 326 24 399 4 176 8 356 6 116 10 308 2 139 4 360 11 557 2 443 6 361 10 487 2 626 6 74 8 225 2 163 11 164 6 293 16 37 2 649 28 585 6 320 2 522 4 606 14 113 6 543 4 370 10 302 11 
651 4 582 6 
135 2 
417 2 326 4 529 2 175 2 503 2 116 4 405 2 360 2 157 2 361 2 248 2 626 2 77 2 163 2 124 2 293 2 649 6 277 2 606 2 113 2 370 2 543 2 302 2 
417 8 549 2 326 12 512 6 576 2 163 4 293 8 174 4 649 14 563 6 139 2 606 8 360 4 309 4 361 5 370 4 302 4 
259 4 455 2 636 4 198 2 236 6 668 4 64 2 138 4 438 2 204 2 355 2 245 2 641 4 674 2 617 2 533 8 469 4 537 2 292 4 366 2 211 2 490 2 275 62 145 2 603 2 12 4 516 4 298 2 316 2 110 2 111 4 61 2 416 10 130 2 605 14 632 2 523 4 665 4 195 4 279 10 
667 2 499 2 572 2 311 2 135 2 492 2 515 2 555 2 266 2 177 2 
581 2 172 2 119 2 4 2 648 2 143 2 344 2 229 2 12 2 402 2 415 2 130 2 464 2 642 2 100 2 429 2 533 2 193 2 665 4 580 2 
457 2 417 32 134 4 371 6 326 48 638 2 155 6 551 2 241 2 174 4 356 6 116 6 360 16 309 4 443 4 361 22 181 2 468 6 626 18 512 6 121 4 163 16 164 4 293 32 649 54 252 4 563 6 213 2 470 4 519 2 585 4 587 4 606 32 497 8 350 6 113 4 370 16 543 2 302 16 
110 2 236 2 533 2 
526 2 154 2 352 22 574 2 184 2 394 2 123 2 514 2 126 2 146 2 471 2 505 2 507 10 118 2 
86 12 430 2 610 2 260 2 93 3 433 2 95 3 613 2 96 2 436 2 615 2 265 1 531 2 532 1 440 2 179 2 443 32 363 1 180 2 182 1 534 2 622 3 623 2 183 2 536 2 625 1 10 2 106 2 11 2 274 2 189 2 109 2 452 2 633 16 112 4 454 2 196 3 20 1 545 2 372 2 460 2 552 2 462 16 553 2 463 2 205 2 25 1 640 2 26 2 554 4 207 32 379 1 643 1 644 2 30 2 287 1 380 2 33 2 559 2 35 2 36 2 650 2 295 4 564 24 299 6 566 2 567 2 385 2 133 3 387 2 570 2 390 6 389 6 391 2 657 1 44 8 395 2 398 2 478 2 45 2 481 2 482 2 484 5 406 2 407 2 223 8 51 2 410 2 52 3 142 2 313 2 489 1 55 2 144 2 314 2 493 2 413 1 315 1 228 2 494 16 147 3 148 2 319 2 585 34 232 2 234 2 152 2 153 4 323 2 501 2 590 2 418 2 502 3 239 4 591 2 420 1 156 6 672 2 594 4 244 2 331 2 332 2 595 2 596 2 246 2 675 4 158 2 508 3 336 16 341 2 510 2 679 2 254 3 604 24 517 2 518 2 347 2 255 2 256 4 428 1 168 3 84 2 607 2 169 2 686 8 524 3 608 32 
343 2 
585 2 325 2 
115 2 585 4 210 2 
609 2 303 2 645 4 288 2 337 2 217 2 105 2 365 2 583 2 262 2 530 2 639 2 541 2 128 2 473 2 684 2 376 2 6 2 496 2 618 2 192 2 
209 1 439 2 475 2 321 2 
439 2 300 2 
472 2 73 2 231 2 439 2 533 2 170 2 399 2 
73 2 439 2 441 2 
281 2 73 2 439 2 
653 2 475 2 117 2 
73 2 439 2 
117 2 151 2 
439 2 661 2 
475 2 117 2 327 2 
53 2 475 2 107 2 
160 2 611 2 475 2 
393 2 475 2 280 2 
456 2 475 2 221 2 
479 2 
439 2 194 2 
141 2 53 2 
282 2 160 2 
104 2 393 2 
318 2 
509 2 117 2 
456 2 34 2 
393 2 214 2 
630 2 160 2 
659 2 53 2 
215 2 475 2 117 2 327 2 
215 2 475 2 117 2 327 2 676 2 
409 2 475 2 117 2 
475 2 78 2 117 2 
271 2 426 2 485 2 247 2 
2 2 533 2 170 2 114 2 
472 2 2 2 5 2 533 2 170 2 114 2 
73 2 439 2 533 2 170 2 240 2 399 2 
27 2 178 2 
15 2 533 2 170 2 399 2 
373 2 393 2 
456 2 660 2 
53 2 187 2 
160 2 7 2 
456 2 160 2 201 2 
456 2 243 2 160 2 
374 2 456 2 160 2 
456 2 60 2 160 2 
458 2 242 2 533 2 599 6 345 2 685 2 542 6 170 2 
425 2 117 2 
525 2 677 2 655 2 289 2 352 6 547 2 444 2 669 2 94 2 79 2 273 2 108 2 203 4 382 2 28 2 634 2 85 4 588 2 
304 2 475 2 
274 2 
86 8 358 2 179 2 443 26 182 2 180 2 269 4 183 2 10 2 106 2 189 2 449 2 452 2 191 2 112 4 454 2 548 2 463 2 205 2 283 2 207 4 644 2 646 2 559 2 295 2 299 2 39 2 385 2 387 6 570 2 390 4 389 6 44 2 478 2 477 2 407 2 410 2 51 2 142 2 55 2 314 2 315 2 494 6 317 2 585 26 586 4 498 2 153 2 152 4 234 2 501 2 590 2 418 2 239 4 329 2 66 2 156 2 594 2 332 2 595 2 69 2 675 4 158 2 341 2 510 2 76 2 600 2 517 2 427 2 347 2 256 4 84 2 607 2 608 6 
86 8 96 1 615 2 179 2 443 26 182 2 180 2 623 1 269 4 183 2 10 2 106 2 186 2 189 2 449 2 452 2 191 2 112 4 454 2 548 2 463 2 205 2 283 2 207 4 644 2 646 2 559 2 295 2 299 2 39 2 385 2 387 6 570 2 390 5 389 6 44 2 478 2 477 2 407 2 410 2 51 2 142 2 55 2 314 2 315 2 494 6 317 2 585 26 586 4 498 2 153 2 152 4 234 2 501 2 590 2 418 2 239 4 329 2 66 2 156 2 594 2 332 2 595 2 69 2 675 4 158 2 341 2 510 2 161 2 517 2 427 2 347 2 348 2 256 4 84 2 607 2 608 6 
386 2 
166 2 652 2 
173 4 647 2 612 2 226 2 513 2 540 2 212 2 629 2 125 2 263 2 82 2 658 2 278 2 131 2 334 2 284 2 666 2 301 4 
432 2 89 2 173 4 389 4 392 4 612 2 397 2 396 2 528 4 435 2 305 2 263 2 614 6 403 2 658 2 359 2 443 6 140 2 268 2 183 2 314 2 226 2 540 2 629 2 188 2 414 4 230 2 585 8 278 2 666 2 454 2 233 2 590 2 239 2 65 2 330 2 334 2 284 2 71 2 249 2 558 2 341 2 647 2 560 2 381 2 513 4 212 2 125 2 383 2 82 2 347 2 256 2 257 2 131 4 385 2 301 4 
432 2 89 2 173 4 389 4 392 4 218 2 612 2 396 2 528 4 397 4 435 2 305 2 263 2 614 6 403 2 658 2 359 4 443 6 140 2 268 2 183 2 314 2 226 2 491 2 540 6 629 2 188 2 414 6 585 12 278 2 666 2 454 2 233 2 590 2 239 2 65 2 592 2 330 2 334 4 284 2 71 2 285 2 249 2 558 2 341 2 647 2 560 2 381 4 513 4 212 2 38 2 125 2 383 2 82 4 347 2 256 2 257 2 131 4 385 2 301 4 
432 2 89 2 173 4 389 4 392 4 218 2 612 2 396 2 528 6 397 4 435 2 305 2 263 2 614 6 403 2 658 2 359 4 443 6 140 2 268 2 183 2 314 2 226 2 540 6 629 2 188 2 414 6 585 12 278 2 666 2 454 2 233 2 590 2 239 2 65 2 592 2 330 2 334 4 284 2 71 2 285 2 249 2 558 2 341 2 647 2 560 2 381 4 513 6 212 2 38 2 125 2 253 2 383 2 82 4 347 2 256 2 257 2 131 4 385 2 301 4 
432 2 89 2 173 4 389 4 392 6 218 2 612 2 396 2 528 6 397 4 435 2 305 2 263 2 614 8 403 2 658 2 359 4 443 6 140 2 268 2 183 2 314 2 226 2 491 2 540 8 629 2 188 2 414 8 585 12 278 2 666 2 454 2 233 2 590 2 239 2 65 2 592 2 330 2 334 4 284 2 71 2 285 2 249 2 558 2 341 2 647 2 560 2 381 4 513 6 212 2 38 2 125 2 253 2 383 2 82 4 347 2 256 2 257 2 131 4 385 2 301 4 
432 2 89 2 173 4 389 4 392 6 218 2 612 2 396 2 528 6 397 4 435 2 305 2 263 2 614 8 403 2 658 2 359 4 443 6 140 2 268 2 183 2 314 2 226 2 540 6 629 2 188 2 414 6 585 12 278 2 666 2 454 2 233 2 590 2 239 2 65 2 592 2 330 2 334 4 284 2 71 2 285 2 249 2 558 2 341 2 647 2 560 2 381 4 513 6 212 2 38 2 125 2 253 2 383 2 82 4 347 2 256 2 257 2 131 4 385 2 301 4 
305 2 125 2 268 2 432 2 249 2 560 2 396 2 528 2 226 2 666 2 629 2 212 2 
305 2 125 2 268 2 432 2 249 2 560 2 396 2 528 2 226 2 666 2 629 2 212 2 
305 2 125 2 268 2 432 2 249 2 560 2 396 2 528 2 226 2 666 2 629 2 212 2 
305 2 125 2 268 2 432 2 249 2 560 2 396 2 528 2 226 2 666 2 629 2 212 2 
432 2 173 2 218 2 392 2 65 2 397 2 396 2 528 4 592 2 305 2 614 2 658 2 334 4 359 2 71 2 285 2 268 2 249 2 560 2 381 2 226 2 513 6 540 6 629 2 212 2 414 4 125 2 253 2 585 4 82 4 278 2 257 2 666 2 301 2 233 2 
610 2 432 2 89 2 173 2 92 2 528 4 96 2 614 2 359 2 99 2 443 24 268 2 623 2 269 4 183 2 106 2 274 2 540 6 629 2 189 2 13 2 278 2 452 2 454 2 112 4 463 2 205 2 283 2 207 3 285 2 560 2 381 2 212 2 125 2 299 3 385 2 301 2 387 6 570 2 389 6 390 6 218 2 397 2 478 2 396 2 305 2 658 2 410 2 51 2 310 3 142 2 55 2 56 2 314 2 226 2 414 4 494 6 148 2 585 28 666 2 233 2 498 2 322 2 590 2 418 2 239 4 65 2 592 2 66 2 156 3 332 4 334 4 71 2 335 2 158 2 675 4 249 2 341 2 679 2 513 6 253 2 517 2 82 4 347 2 256 4 257 2 521 2 84 2 608 8 
432 2 89 2 173 4 389 4 392 6 218 2 612 2 396 2 528 6 397 4 435 2 305 2 263 2 614 8 403 2 658 2 359 4 443 6 140 2 268 2 183 2 314 2 226 2 540 6 629 2 188 2 414 6 585 12 278 2 666 2 454 2 233 2 590 2 239 2 65 2 592 2 330 2 334 4 284 2 71 2 285 2 249 2 558 2 341 2 647 2 560 2 381 4 513 6 212 2 38 2 125 2 253 2 383 2 82 4 347 2 256 2 257 2 131 4 385 2 301 4 
432 2 573 2 173 2 218 2 392 6 65 2 397 2 528 6 396 2 305 2 614 6 658 2 334 4 359 2 71 2 285 2 268 2 249 2 560 2 381 2 513 8 226 2 663 4 57 2 540 6 37 2 629 2 212 2 414 6 125 2 230 2 253 2 585 4 82 4 278 2 257 2 301 2 666 2 233 2 
218 2 65 2 680 2 
218 2 65 2 680 2 
86 2 173 2 92 2 528 4 96 2 614 4 97 2 359 4 443 16 101 2 623 2 183 2 106 2 540 10 446 2 189 2 452 2 278 2 112 4 454 2 19 2 550 2 463 2 205 2 283 2 465 2 207 2 466 2 285 2 381 4 37 2 212 2 295 2 40 2 385 2 301 2 387 2 570 2 390 6 389 6 218 2 392 4 478 2 397 2 307 2 658 2 410 2 142 2 55 2 314 2 491 4 494 2 414 12 230 2 585 24 664 2 233 4 498 2 153 2 590 2 418 2 239 4 65 2 329 2 66 2 594 2 332 4 334 4 675 4 158 2 341 2 340 2 513 8 517 2 253 2 347 2 82 4 256 4 257 2 84 2 608 2 
216 2 341 2 91 2 92 2 627 2 612 2 539 2 446 2 437 2 166 2 346 2 332 2 585 4 307 2 635 2 443 2 19 2 
86 2 173 2 528 4 96 2 614 4 97 2 359 4 443 14 101 2 623 2 183 2 106 2 540 10 189 2 452 2 278 2 112 4 454 2 550 2 463 2 205 2 283 2 465 2 207 4 466 2 285 2 29 2 291 2 381 4 37 2 212 2 295 2 40 2 385 2 301 2 387 2 570 2 390 6 389 6 218 2 392 4 397 2 478 2 658 2 410 2 142 2 55 2 314 2 491 4 494 2 414 12 230 2 585 20 664 4 233 4 498 2 153 2 590 2 418 2 239 4 65 2 329 2 66 2 594 2 332 2 334 4 675 4 158 2 341 2 340 2 513 8 517 2 253 2 347 2 82 4 256 4 257 2 84 2 608 2 
86 2 173 2 92 2 528 4 96 2 614 4 97 2 359 4 443 16 101 2 623 2 183 2 106 2 540 10 446 2 189 2 452 2 278 2 112 4 454 2 19 2 550 2 463 2 205 2 283 2 465 2 207 2 466 2 285 2 381 4 37 2 212 2 295 2 40 2 385 2 301 2 387 2 570 2 390 6 389 6 218 2 392 4 478 2 397 2 307 2 658 2 410 2 142 2 55 2 314 2 491 4 494 2 414 12 230 2 585 24 664 2 233 4 498 2 153 2 590 2 418 2 239 4 65 2 329 2 66 2 594 2 332 4 334 4 675 4 158 2 341 2 340 2 513 8 517 2 253 2 347 2 82 4 256 4 257 2 84 2 608 2 
171 2 353 2 527 2 354 2 96 2 616 4 443 18 362 2 623 2 269 4 183 2 106 2 276 2 631 2 452 2 454 2 112 2 544 2 463 2 205 2 556 2 283 2 207 2 31 2 32 2 562 2 297 2 299 2 568 1 654 2 385 2 387 6 569 2 389 6 390 4 219 2 478 2 48 2 401 2 483 2 408 2 222 2 410 2 51 2 142 2 488 2 312 2 55 2 314 2 227 2 58 2 494 6 59 2 585 24 62 2 498 2 324 1 590 2 418 2 239 4 156 2 332 2 675 2 423 2 341 2 681 2 517 2 347 2 256 4 167 2 608 8 
387 2 87 2 199 2 237 2 577 2 202 2 156 3 504 4 68 2 207 3 442 2 443 2 597 2 8 1 269 2 51 2 75 2 662 3 494 2 299 3 585 2 39 6 190 2 258 2 608 2 
387 2 87 2 199 2 237 2 577 2 202 2 156 2 504 4 68 2 207 2 442 2 443 2 597 2 269 2 51 2 75 2 662 2 494 2 299 2 585 2 39 6 190 2 258 2 608 2 
387 2 87 2 199 2 237 2 577 2 202 2 156 2 504 4 68 2 207 2 442 2 443 2 597 2 269 2 51 2 75 2 662 2 494 2 299 2 585 2 39 6 190 2 258 2 608 2 
589 4 571 2 417 2 326 4 575 2 593 2 328 2 462 2 156 3 673 2 356 4 404 2 360 2 357 3 70 2 207 3 443 4 208 4 102 3 286 6 598 4 51 2 250 2 270 4 122 4 162 2 163 2 164 2 293 2 649 5 447 2 81 2 585 10 190 2 606 2 132 3 633 2 370 2 302 2 608 2 
589 4 571 2 457 2 417 2 326 4 575 2 593 2 328 2 462 2 156 2 673 2 356 4 404 2 360 2 357 2 70 2 207 2 443 4 361 2 208 4 102 2 286 6 598 4 51 2 250 2 626 2 270 4 122 4 162 2 163 2 164 2 293 2 649 4 447 2 81 2 585 10 190 2 606 2 132 2 633 2 370 2 302 2 608 2 
589 4 571 2 457 2 417 2 326 4 575 2 593 2 328 2 462 2 156 2 673 2 356 4 404 2 360 2 357 2 70 2 207 2 443 4 361 2 208 4 102 2 286 6 598 4 51 2 250 2 626 2 270 4 122 4 162 2 163 2 164 2 293 2 649 4 447 2 81 2 585 10 190 2 606 2 132 2 633 2 370 2 302 2 608 2 
417 2 326 2 462 2 156 2 356 2 404 2 357 2 70 2 207 2 443 2 361 2 102 2 286 2 51 2 162 2 164 2 293 2 649 2 447 2 81 2 585 4 190 2 606 2 132 2 633 2 608 2 
417 2 326 2 462 2 156 2 356 2 404 2 357 2 70 2 207 2 443 2 361 2 102 2 286 2 51 2 162 2 164 2 293 2 649 2 447 2 81 2 585 4 190 2 606 2 132 2 633 2 608 2 
338 2 21 2 14 2 185 2 422 2 16 2 
0 2 621 2 351 2 431 2 14 2 548 2 149 2 
88 2 198 1 388 2 500 2 546 2 200 1 137 2 264 2 506 2 206 2 443 8 467 1 339 2 224 2 624 2 342 2 424 2 272 2 584 2 445 2 145 1 448 2 683 2 585 10 451 1 385 2 
103 2 417 4 419 2 326 6 512 4 163 2 164 2 293 4 649 7 356 2 98 2 360 2 378 2 606 4 309 2 361 2 370 2 302 2 
208 2 589 2 598 2 656 2 3 2 637 2 22 3 120 2 678 2 421 2 127 2 50 2 474 2 
208 2 589 2 63 1 598 2 656 2 637 2 22 4 678 2 421 4 585 1 443 1 474 2 
208 2 421 4 589 2 656 2 598 2 22 2 637 2 678 2 474 2 
208 2 421 4 589 2 656 2 598 2 22 2 637 2 678 2 474 2 
390 8 478 2 220 2 96 2 49 2 306 2 443 12 9 2 623 2 364 2 538 2 585 12 452 2 112 4 23 1 238 2 418 2 24 2 670 1 67 2 333 2 675 4 159 2 290 2 602 6 165 2 37 2 565 2 129 2 384 2 
159 2 623 4 290 2 238 2 390 12 418 2 364 2 24 2 602 4 538 2 478 2 220 2 165 2 96 4 37 2 480 2 565 2 67 2 585 14 306 2 333 2 452 2 83 2 368 2 675 4 443 12 112 4 
42 2 90 2 390 16 238 2 418 4 24 2 476 2 459 2 136 2 478 4 461 2 578 2 46 2 96 4 49 2 67 2 306 4 333 2 675 6 443 20 619 2 620 1 486 2 9 2 72 2 623 4 411 4 364 2 511 2 601 2 602 4 561 2 54 2 628 2 165 2 565 2 682 2 520 1 585 20 452 4 349 2 367 1 112 6 453 2 150 1 18 2 
235 2 390 10 238 2 418 2 24 2 434 2 478 2 220 2 96 4 400 2 67 2 306 2 333 2 675 4 579 2 443 12 159 2 623 4 290 2 364 2 602 6 538 2 165 2 450 2 565 2 585 12 452 2 112 4 
412 2 

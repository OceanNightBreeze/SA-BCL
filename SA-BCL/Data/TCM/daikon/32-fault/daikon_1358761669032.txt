#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V ERROR java.lang.NullPointerException 474 164 
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 127 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 389 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 389 
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 389 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 389 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 389 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 459 387 468 388 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 349 207 359 
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 412 8 254 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 412 8 254 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 412 8 254 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 412 8 254 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3_14()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:dimensions()I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_96()Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.ValueTuple:size()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.ModBitTracker:ModBitTracker(I)V | CONDITION | 2376 | if (x) -> if (!x)
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_3R_55()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_135()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_89()Z
utilMDE.MathMDE:pow(II)I
daikon.Quant:memberOf(J[J)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3_3()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:gte(II)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_12()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eq(FF)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:lt(II)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_57()Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:lexGT([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_3R_50()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:gt(II)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_69()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.TestUtilMDE:lsis_test(I)V | ASSIGN | 45022 | = null
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_2_5(I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43258 | 32 -> 33
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block; | STATEMENT | 103715 | stmt -> ;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([J)[J
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:eltwiseLT([I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_2_12(I)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_122()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | RETURN | 1469 | return null
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_61()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3R_121()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_56()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakHasherMap:size()I
daikon.Quant:slice([III)[I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.MathMDE:sign(I)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3_1()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eq(DD)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:sameLength([I[I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3R_133()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_ntk()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_49()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:getEndLine()I
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_54()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_163()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:eltsLTE([II)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | ASSIGN | 17372 | = null
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:gcd([I)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.InvariantFormatTester:execute()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:noDups([I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eltsGTE([II)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:union([I[I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern:numIntArrays()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_3R_118()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:lte(II)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3_5()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 20179 | if (x) -> if (!x)
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_88()Z
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_120()Z
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24199 | = null
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:ReadByte()C
daikon.Quant:concat([I[I)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:eltsEqual([II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
164 2 474 2 
24 2 113 6 269 6 286 2 197 2 101 2 362 2 224 2 178 2 256 6 285 2 
396 6 259 2 0 6 70 6 104 6 276 4 45 2 93 2 193 2 444 4 140 2 129 2 380 2 
427 12 333 6 429 8 27 2 438 2 337 30 208 2 369 4 471 8 374 8 376 2 128 10 129 6 282 26 445 10 14 4 16 10 132 4 485 8 231 2 230 16 457 10 331 2 192 6 109 16 193 6 242 2 394 16 425 4 267 10 
295 6 400 4 
139 2 
298 2 427 2 333 2 148 2 401 2 337 6 374 2 411 2 128 2 282 4 98 2 445 4 13 2 16 2 230 2 419 2 457 2 109 2 355 2 425 2 243 2 394 2 267 2 
427 5 14 2 16 4 247 6 337 14 320 6 230 8 213 4 457 4 128 4 109 8 9 2 475 4 111 2 394 8 267 4 282 12 
399 2 116 10 430 4 199 2 301 2 2 4 204 2 365 10 89 2 467 2 249 4 250 2 342 4 251 2 124 4 315 2 476 2 61 2 217 14 413 2 316 4 131 4 43 62 483 2 134 2 383 4 225 2 228 2 385 2 487 2 322 4 75 4 294 4 165 2 324 2 105 4 492 8 494 2 354 6 170 4 
84 2 57 2 441 2 42 2 478 2 260 2 184 2 139 2 77 2 143 2 
114 2 117 2 433 2 58 2 308 2 368 2 310 4 129 4 379 2 316 2 131 4 67 2 17 2 455 2 325 2 328 2 392 2 193 4 23 4 399 2 145 2 334 2 80 2 203 2 273 4 85 2 406 2 339 2 277 2 340 2 36 2 39 2 40 2 95 2 99 2 222 2 159 2 160 2 350 2 232 2 46 2 492 2 167 2 242 2 
428 8 427 16 333 4 361 4 247 6 465 4 337 38 208 2 471 6 213 4 374 14 377 2 156 2 128 14 475 4 129 4 283 4 282 34 284 2 445 6 347 4 481 2 16 14 320 6 230 20 265 6 457 14 192 4 109 20 193 4 425 2 394 20 267 14 
492 2 354 2 228 2 
299 2 448 2 415 2 85 2 206 2 319 2 439 2 19 2 372 22 76 10 493 2 281 2 356 2 332 2 
352 2 246 2 127 2 358 2 
345 2 
188 2 193 2 
414 2 180 2 193 4 
1 8 360 2 3 2 364 2 366 2 367 136 370 2 121 2 122 2 123 10 252 4 125 8 7 4 378 4 255 4 130 4 257 2 258 2 10 2 381 2 262 2 15 4 263 4 18 16 135 2 136 4 137 2 138 26 391 4 266 4 20 2 393 32 142 4 21 20 22 4 25 4 147 4 149 16 29 2 28 22 30 4 31 8 150 12 274 4 151 44 275 22 32 2 409 2 408 2 407 8 410 2 153 4 34 4 35 2 154 44 155 12 278 12 37 44 38 4 41 2 289 20 290 20 292 12 418 4 162 10 293 2 168 2 296 2 48 2 422 2 171 44 51 2 172 2 173 2 300 4 52 2 431 2 432 4 303 2 304 2 174 4 54 4 177 4 305 2 55 44 306 44 309 10 440 2 442 2 59 2 313 44 314 4 182 2 446 2 65 20 183 2 447 2 66 4 451 4 68 22 452 4 69 4 71 44 186 46 318 2 454 4 72 2 321 4 456 2 326 2 330 4 190 2 191 14 195 2 194 4 196 32 460 2 461 2 462 44 81 4 202 2 82 4 83 2 335 20 463 4 86 4 336 4 205 4 464 4 338 26 209 2 88 2 469 136 341 2 212 2 214 2 92 4 215 2 216 4 94 32 218 4 346 2 221 132 100 2 102 2 223 4 482 136 484 16 226 4 227 2 348 44 488 4 489 2 351 2 491 2 236 2 353 44 108 2 239 4 495 40 498 14 112 6 357 4 500 4 
152 2 270 2 201 2 91 1 
64 2 152 2 
268 4 115 2 146 2 220 2 480 2 53 2 435 2 486 2 118 2 73 2 372 6 311 2 106 2 90 2 496 2 240 4 497 2 97 2 
270 2 119 2 
163 2 470 2 492 2 499 2 
163 2 470 2 492 2 175 2 404 2 499 2 
163 2 211 2 490 2 492 2 152 2 369 2 
58 2 395 2 
163 2 244 2 492 2 369 2 
420 2 60 2 
120 2 402 2 
329 2 107 2 
323 2 157 2 
120 2 443 2 157 2 
120 2 63 2 157 2 
120 2 133 2 157 2 
120 2 26 2 157 2 
78 2 12 2 261 2 287 2 187 6 74 6 163 2 492 2 
317 2 161 2 
163 2 211 2 492 2 152 2 79 2 175 2 369 2 
211 2 152 2 453 2 
211 2 152 2 96 2 
270 2 434 2 161 2 
211 2 152 2 
161 2 501 2 
152 2 344 2 
270 2 161 2 56 2 
270 2 107 2 307 2 
270 2 373 2 157 2 
229 2 270 2 420 2 
120 2 270 2 417 2 
477 2 161 2 
152 2 179 2 
198 2 107 2 
49 2 157 2 
420 2 436 2 
120 2 297 2 
161 2 248 2 
120 2 219 2 
420 2 50 2 
272 2 157 2 
327 2 107 2 
47 2 270 2 161 2 56 2 
47 2 235 2 270 2 161 2 56 2 
270 2 161 2 466 2 
270 2 288 2 161 2 
245 2 384 2 87 2 233 2 
11 2 
389 2 352 2 246 2 358 2 
389 2 352 2 246 2 358 2 
389 2 352 2 246 2 358 2 
389 2 352 2 246 2 358 2 
389 2 352 2 246 2 358 2 
388 2 468 2 397 2 459 2 343 2 238 2 253 2 386 2 387 2 
166 2 390 2 279 2 110 2 363 2 280 2 424 2 
398 2 234 2 390 2 449 2 403 2 185 2 
271 2 302 2 44 2 176 1 416 2 264 2 349 2 207 2 89 1 237 2 494 1 473 2 6 1 189 1 181 2 193 10 141 2 129 8 62 2 359 2 
427 2 247 4 437 2 337 10 208 2 471 4 374 2 128 4 475 2 282 8 158 2 16 4 230 4 325 2 457 4 458 2 192 2 109 4 423 2 394 4 267 4 144 2 
479 2 200 2 103 2 4 2 291 2 405 2 210 2 371 2 312 2 472 2 5 2 375 2 421 3 
426 2 479 2 200 2 103 2 4 2 291 2 405 2 210 2 371 2 312 2 472 2 5 4 375 2 169 2 421 6 126 1 193 1 129 1 
426 2 479 2 200 4 103 4 4 2 291 2 405 2 210 2 371 2 312 4 472 2 5 4 375 2 169 2 421 6 
426 8 479 2 200 8 103 8 4 2 291 2 405 2 210 2 371 2 312 8 472 2 5 4 375 2 169 6 421 10 126 1 193 1 129 1 
8 2 254 2 129 2 450 2 382 1 193 2 412 2 241 1 
450 2 8 2 193 2 254 2 129 2 412 2 
450 2 8 2 193 2 254 2 129 2 412 2 
450 2 8 2 193 2 254 2 129 2 412 2 
33 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 362 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V ERROR utilMDE.Assert$AssertionException (124,212) 360 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (124,212) (124,212) (108,245,324,366,526) (108,245,324,366,526) (108,245,324,366,526) 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 68 143 
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 68 143 213 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 218 226 113 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 218 226 113 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 145 (377,510) (1,434) (1,434) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 145 (377,510) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 145 (377,510) (377,510) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 145 (377,510) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 294 257 121 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 364 515 444 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 219 183 284 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 219 183 284 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 219 183 284 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 219 183 284 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I | RETURN | 12820 | return null
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eq(JJ)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaCharStream:getEndColumn()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.Invariant:logOn()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:sum([[D)D | STATEMENT | 9149 | stmt -> ;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:subsetOf([J[J)Z
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:hashCode()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:sum([I)I
daikon.Ppt:Ppt()V
daikon.Quant:sameLength([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:memberOf(F[F)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.ProglangType:isScalar()Z
daikon.ProglangType:dimensions()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:sign(I)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String; | RETURN | 10782 | return null
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:concat([I[I)[I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptSlice1:arity()I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eq(DD)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:ne(II)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eq(II)Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:lte(II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Intern:intern([D)[D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:lexGTE([I[I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:memberOf(S[S)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z | ASSIGN | 9658 | = null
daikon.inv.Invariant:prob_and(DD)D
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE:gcd(II)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltsLT([II)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:slice([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator; | RETURN | 2296 | return null
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfo:relate_var()V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:eltsGT([II)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:negate(I)I
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfo:new_ppt()V
daikon.diff.Node:Node()V
daikon.Quant:memberOf(D[F)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:gcd([I)I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.Invariant:prob_is_ge(DD)D | STATEMENT | 6797 | stmt -> ;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.Quant:gt(II)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap:size()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | STATEMENT | 5655 | stmt -> ;
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:lexLT([I[I)Z
daikon.ProglangType:isIntegral()Z
daikon.ProglangType:isArray()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.InvMap:InvMap()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptSlice0:arity()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.RootNode:RootNode()V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([F[D)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:pow(II)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaCharStream:ReadByte()C
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:eq(FF)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaCharStream:readChar()C
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoAux:hashCode()I
daikon.Quant:memberOf(F[D)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1211 | = null
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
267 2 486 2 292 2 5 2 63 2 77 2 210 2 54 2 
265 2 306 6 237 56 124 4 126 18 440 2 127 6 203 6 204 32 130 16 205 4 352 2 353 4 410 6 134 2 447 6 354 16 208 4 209 4 177 2 355 16 212 4 383 4 286 4 15 4 253 2 389 22 221 32 457 16 111 48 524 8 23 6 495 6 25 2 396 4 90 4 337 32 116 6 93 2 
313 2 80 2 210 2 
199 2 344 2 3 2 252 2 222 2 422 2 109 2 189 2 394 22 227 2 474 10 260 2 448 2 248 2 
237 6 126 2 204 2 130 2 379 2 246 2 207 2 354 2 355 2 217 2 182 2 389 2 221 2 457 2 56 2 489 2 111 4 20 2 25 2 396 2 337 2 116 4 234 2 
237 16 389 4 221 8 349 2 204 8 130 4 457 4 205 4 111 12 23 6 228 2 447 6 354 4 430 2 337 8 355 4 383 4 
341 4 118 2 119 4 66 2 32 2 348 2 268 10 34 2 311 2 99 4 244 4 313 2 514 4 476 2 210 8 356 2 318 2 140 2 387 2 80 6 417 2 321 2 188 2 521 10 390 2 54 2 490 2 22 4 193 58 462 2 397 6 429 4 26 2 301 2 504 2 
342 2 236 2 49 2 455 2 362 2 365 2 129 2 272 2 493 2 174 2 61 2 
249 2 83 2 250 2 59 2 124 2 431 2 301 2 408 4 212 2 
159 2 16 2 145 6 172 2 374 2 232 2 391 6 421 2 392 6 323 2 45 2 
107 6 345 2 124 2 375 2 19 6 296 4 314 4 155 6 115 6 527 2 44 2 212 2 506 2 
263 8 237 30 405 2 122 4 126 8 124 6 203 8 204 16 130 10 134 2 169 2 354 10 450 2 355 10 212 6 15 6 18 2 389 12 221 16 457 10 191 2 111 26 327 4 152 8 25 4 396 6 116 10 337 16 430 4 302 2 
437 4 184 6 
174 2 
287 2 360 2 212 2 
0 2 212 4 258 2 
85 2 
120 2 266 2 125 2 468 2 124 20 470 4 11 2 74 4 413 2 281 2 212 22 78 6 287 2 288 4 418 2 147 2 291 2 293 2 366 2 491 2 87 2 297 2 91 2 97 2 435 2 31 2 438 6 245 2 382 2 42 2 249 2 251 2 519 2 322 2 108 2 256 2 110 2 55 2 328 2 194 2 525 2 62 2 197 4 
402 6 2 6 404 6 346 2 406 2 347 2 67 2 407 6 350 2 131 2 351 2 132 2 472 2 10 2 136 2 75 6 278 4 479 2 478 6 14 2 215 2 359 6 146 2 220 6 420 6 488 28 425 2 151 6 492 2 24 6 233 2 29 6 303 2 304 6 158 4 307 4 308 2 441 8 33 2 241 6 35 2 376 6 168 6 36 2 312 2 173 2 39 2 381 2 316 6 104 28 452 4 386 2 517 2 518 2 181 2 58 2 333 2 114 4 336 2 465 28 198 2 
327 2 160 1 289 2 166 2 210 2 64 2 460 2 310 2 
289 2 166 2 117 2 
289 2 166 2 501 2 
79 2 164 2 508 2 
289 2 166 2 
100 2 164 2 
357 2 166 2 
79 2 142 2 164 2 
378 2 79 2 522 2 
79 2 51 2 363 2 
79 2 171 2 449 2 
179 2 79 2 69 2 
164 2 282 2 
166 2 186 2 
378 2 112 2 
238 2 363 2 
171 2 4 2 
179 2 371 2 
164 2 481 2 
179 2 439 2 
171 2 102 2 
363 2 242 2 
378 2 156 2 
79 2 142 2 164 2 167 2 
79 2 142 2 162 2 164 2 167 2 
79 2 164 2 139 2 
79 2 164 2 262 2 
103 2 
143 2 68 2 
143 2 68 2 213 2 
327 2 289 2 166 2 187 2 210 2 460 2 
485 2 419 2 
327 2 273 2 210 2 460 2 
305 2 171 2 
179 2 50 2 
378 2 270 2 
466 2 363 2 
179 2 412 2 363 2 
179 2 497 2 363 2 
179 2 363 2 196 2 
179 2 231 2 363 2 
210 2 223 2 460 2 393 2 86 6 60 2 332 6 195 2 
164 2 6 2 
141 2 200 2 161 4 201 2 239 2 82 2 71 4 459 2 473 2 394 6 427 2 330 2 512 2 299 2 41 2 503 2 480 2 27 2 
79 2 471 2 
79 2 73 2 166 2 
192 2 166 2 
91 2 
120 2 266 2 125 2 468 2 124 14 202 2 470 4 7 1 11 2 74 4 413 6 76 2 281 2 212 14 78 6 218 2 288 4 418 2 291 2 293 2 148 2 226 2 491 6 297 2 298 2 300 4 97 6 436 1 435 2 31 2 438 4 309 1 382 2 42 2 249 2 251 2 322 2 519 2 110 2 328 2 194 2 113 2 525 2 399 1 528 2 197 4 
120 2 266 2 125 2 468 2 124 14 202 2 470 4 11 2 74 4 413 6 76 2 281 2 212 14 78 6 218 2 288 4 418 2 147 2 291 2 293 2 148 2 226 2 491 6 297 2 298 2 300 4 97 6 435 2 31 2 438 6 382 2 42 2 249 2 251 2 519 2 322 2 110 2 55 2 328 2 194 2 113 2 525 2 528 2 197 4 
463 2 
475 2 500 2 
434 2 1 2 96 2 145 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 331 4 276 2 277 2 499 4 498 4 338 2 502 2 432 2 401 2 
1 2 434 2 96 2 165 2 510 2 172 2 276 2 277 2 178 4 46 2 145 2 454 2 487 2 424 2 81 2 494 2 88 2 329 2 331 4 498 4 499 4 502 2 338 2 432 2 401 2 
1 2 434 2 145 2 172 2 88 2 329 2 454 2 276 2 165 2 432 2 510 2 
434 2 1 2 96 2 145 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 331 4 276 2 277 2 499 4 498 4 338 2 502 2 432 2 401 2 
434 2 1 2 96 2 145 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 331 4 276 2 277 2 499 4 498 4 338 2 502 2 432 2 401 2 
434 2 1 2 96 2 145 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 331 4 276 2 277 2 499 4 498 4 338 2 502 2 432 2 401 2 
434 2 1 2 96 2 145 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 331 4 276 2 277 2 499 4 498 4 338 2 502 2 432 2 401 2 
434 2 1 2 96 2 145 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 331 4 276 2 277 2 499 4 498 4 338 2 502 2 432 2 401 2 
434 2 1 2 96 2 145 2 144 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 276 2 277 2 499 2 502 2 338 2 432 2 401 2 
434 2 1 2 96 2 145 2 144 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 276 2 277 2 499 2 502 2 338 2 432 2 401 2 
434 2 1 2 96 2 145 2 144 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 276 2 277 2 499 2 502 2 338 2 432 2 401 2 
434 2 1 2 96 2 145 2 144 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 276 2 277 2 499 2 502 2 338 2 432 2 401 2 
434 2 1 2 96 2 145 2 454 2 165 2 487 2 424 2 510 2 494 2 172 2 88 2 329 2 276 2 277 2 499 2 502 2 338 2 432 2 401 2 
1 2 266 2 120 2 124 24 125 2 7 3 276 2 11 2 277 2 413 6 12 2 281 2 145 2 288 4 418 2 291 2 147 2 293 2 148 2 424 2 297 2 428 2 298 2 300 4 432 2 433 2 434 2 435 2 436 3 438 6 31 2 165 2 309 3 172 2 40 2 42 2 454 2 322 2 55 2 324 2 328 2 57 3 329 2 194 2 331 2 338 2 339 2 197 4 65 2 468 2 470 4 74 4 212 24 78 6 214 2 487 2 491 8 494 2 88 2 499 2 502 2 91 2 96 2 97 6 510 2 382 2 249 2 251 4 519 2 254 2 110 2 113 2 525 2 526 2 401 2 528 2 261 2 
487 2 409 2 30 2 
487 2 409 2 30 2 
120 2 266 2 125 2 468 2 124 14 470 4 7 2 133 2 276 2 11 2 74 4 413 2 279 2 281 2 212 14 78 6 145 2 288 4 418 2 147 2 291 2 293 2 487 2 148 2 491 2 154 2 229 2 297 2 498 2 499 2 298 2 432 2 97 2 435 2 31 2 438 6 442 2 510 2 172 2 315 2 382 2 175 2 42 2 249 2 251 2 454 2 519 2 322 2 110 2 55 2 328 2 331 2 329 2 194 2 525 2 528 2 197 4 
48 2 264 2 251 2 106 2 435 2 124 2 443 2 458 2 325 2 21 2 461 2 411 2 475 2 40 2 135 2 400 2 212 4 
120 2 266 2 125 2 468 2 124 14 470 4 7 4 133 2 276 2 11 2 74 4 413 2 279 2 281 2 212 14 78 6 145 2 288 4 418 2 147 2 291 2 293 2 487 2 148 2 224 2 491 2 154 2 229 4 297 2 498 2 499 2 298 2 432 2 97 2 435 2 31 2 438 6 442 2 377 2 510 2 172 2 315 2 382 2 175 2 42 2 249 2 251 2 454 2 519 2 322 2 110 2 55 2 328 2 331 2 329 2 194 2 525 2 528 2 197 4 
120 2 266 2 125 2 468 2 124 14 470 4 7 2 133 2 276 2 11 2 74 4 413 2 279 2 281 2 212 14 78 6 145 2 288 4 418 2 147 2 291 2 293 2 487 2 148 2 491 2 154 2 229 2 297 2 498 2 499 2 298 2 432 2 97 2 435 2 31 2 438 6 442 2 510 2 172 2 315 2 382 2 175 2 42 2 249 2 251 2 454 2 519 2 322 2 110 2 55 2 328 2 331 2 329 2 194 2 525 2 528 2 197 4 
120 2 121 2 123 2 125 2 124 18 468 2 269 2 470 4 7 2 271 2 8 2 206 2 275 2 74 2 413 6 137 2 138 2 280 2 281 2 211 2 212 24 482 2 415 2 78 6 484 2 288 2 361 2 291 2 147 1 418 2 148 2 294 2 225 2 491 8 496 2 297 2 298 2 300 4 370 2 92 2 95 2 157 1 97 6 372 2 436 2 435 2 438 3 31 2 309 2 511 2 382 2 42 2 249 2 47 2 251 2 519 2 322 2 53 2 55 1 257 2 110 2 395 1 328 2 113 2 398 2 525 2 197 4 
97 2 436 3 124 2 128 2 309 3 7 3 445 2 446 3 413 2 13 2 212 2 319 2 358 2 290 2 423 2 491 2 523 2 84 6 326 4 426 1 113 2 334 2 335 2 300 2 235 2 
97 2 436 2 124 2 128 2 309 2 7 2 445 2 446 2 413 2 13 2 212 2 319 2 358 2 290 2 423 2 491 2 523 2 84 6 326 4 113 2 334 2 335 2 300 2 235 2 
97 2 436 2 124 2 128 2 309 2 7 2 445 2 446 2 413 2 13 2 212 2 319 2 358 2 290 2 423 2 491 2 523 2 84 6 326 4 113 2 334 2 335 2 300 2 235 2 
237 5 436 3 124 4 98 4 509 6 203 4 204 2 130 2 7 3 72 2 37 3 170 4 101 2 9 2 354 2 176 4 414 2 355 2 283 2 212 10 105 2 15 2 516 2 180 2 17 4 320 4 255 2 52 2 423 2 221 2 457 2 150 3 111 4 491 2 153 3 368 2 113 2 337 2 340 2 94 2 
124 4 126 2 204 2 203 4 130 2 7 2 72 2 134 2 9 2 354 2 414 2 212 10 283 2 355 2 15 2 17 4 221 2 423 2 150 2 491 2 153 2 368 2 94 2 237 4 436 2 98 4 509 6 37 2 170 4 101 2 176 4 105 2 516 2 180 2 320 4 52 2 255 2 389 2 457 2 111 4 113 2 337 2 340 2 
124 4 126 2 204 2 203 4 130 2 7 2 72 2 134 2 9 2 354 2 414 2 212 10 283 2 355 2 15 2 17 4 221 2 423 2 150 2 491 2 153 2 368 2 94 2 237 4 436 2 98 4 509 6 37 2 170 4 101 2 176 4 105 2 516 2 180 2 320 4 52 2 255 2 389 2 457 2 111 4 113 2 337 2 340 2 
124 4 126 2 204 2 203 4 130 2 7 2 72 2 134 2 9 2 354 2 414 2 212 10 283 2 355 2 15 2 17 4 221 2 423 2 150 2 491 2 153 2 368 2 94 2 237 4 436 2 98 4 509 6 37 2 170 4 101 2 176 4 105 2 516 2 180 2 320 4 52 2 255 2 389 2 457 2 111 4 113 2 337 2 340 2 
124 4 126 4 204 2 203 4 130 2 7 2 72 2 134 4 9 2 354 2 414 2 212 10 283 2 355 2 15 2 17 4 221 2 423 2 150 2 491 2 153 2 368 2 94 2 237 4 436 2 98 4 509 6 37 2 170 4 101 2 176 4 105 2 516 2 180 2 320 4 52 2 255 2 389 4 457 2 111 4 113 2 337 2 340 2 
367 2 464 2 149 2 70 2 243 2 317 2 
274 2 385 2 403 2 373 2 367 2 89 2 520 2 
216 2 38 2 230 2 124 2 382 2 364 2 515 2 212 2 444 2 
343 2 237 15 124 6 126 4 127 4 204 6 203 4 130 6 134 4 247 2 513 2 354 6 477 2 212 6 355 6 383 2 286 2 15 2 388 2 185 2 389 4 221 6 457 6 190 2 111 12 524 2 23 4 337 6 369 2 28 2 
483 2 416 2 507 2 453 2 17 2 124 1 320 2 98 2 240 2 163 2 295 2 380 2 259 4 43 2 451 7 505 2 212 1 384 1 
483 2 416 4 507 2 453 2 17 2 320 2 98 2 240 2 163 2 295 4 380 2 259 4 43 2 451 6 505 4 
483 8 416 8 507 2 453 2 17 2 124 1 320 2 98 2 240 6 163 2 295 8 380 2 259 4 43 2 451 10 505 8 212 1 384 1 
416 2 507 2 453 2 17 2 320 2 98 2 163 2 295 2 380 2 259 2 43 2 451 2 505 2 
467 1 124 4 468 2 74 2 212 4 284 2 285 2 288 2 219 2 147 2 291 2 438 4 42 2 456 1 183 2 55 2 
288 2 219 2 124 4 468 2 438 2 291 2 183 2 74 2 42 2 212 4 284 2 285 2 
288 2 219 2 124 4 468 2 438 4 147 2 291 2 183 2 55 2 74 2 42 2 212 4 284 2 285 2 
288 2 219 2 124 4 468 2 438 4 147 2 291 2 183 2 55 2 74 2 42 2 212 4 284 2 285 2 
469 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 681 216 16 936 686 688 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 772 1045 655 386 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 125 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (545,829) (545,829) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 222 (56,672) 618 (391,666) (56,672) 887 (391,666) 102 761 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 179 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 179 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1037 575 63 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 8 600 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NullPointerException 549 181 (41,428) (41,428) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NullPointerException 549 181 (41,428) (41,428) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NullPointerException 549 181 (41,428) (41,428) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 522 47 755 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 522 47 755 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 522 47 755 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 522 47 755 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_110()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeList:NodeList()V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:jj_3R_69()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:setEqual([I[I)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice2:arity()I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_12()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_210()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:eltsEqual([II)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:memberOf(F[D)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:size()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_58()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.Quant:subsetOf([J[J)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant; | RETURN | 609 | return null
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3_17()Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_2_4(I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Intern:intern([J)[J
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:gte(II)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ProglangType:isIntegral()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_60()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3R_48()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_149()Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2590 | = null
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_114()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.InvMap:InvMap()V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaCharStream:getBeginColumn()I
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node; | RETURN | 1374 | return null
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_115()Z
utilMDE.Intern:numIntArrays()I
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3_15()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3_20()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:ne(II)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
daikon.Quant:memberOf(J[J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_29()Z
jtb.JavaCharStream:BeginToken()C
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:jj_3_18()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 1380 | if (x) -> if (!x)
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_99()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
jtb.JavaCharStream:backup(I)V
daikon.Quant:isReverse([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_3R_49()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3_25()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_2_35(I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Ppt:Ppt()V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_109()Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1652 | = null
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3_21()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit; | ASSIGN | 3246 | = null
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:sign(I)I
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_125()Z
daikon.Quant:noDups([I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3_19()Z
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Invariants:Invariants()V
jtb.JavaCharStream:getEndLine()I
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_103()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_13()Z
daikon.Quant:lte(II)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_73()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_3R_100()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3R_98()Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:concat([I[I)[I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_3R_108()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_117()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfo:relate_var()V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_70()Z
daikon.VarInfoName:hashCode()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([D[D)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3_28()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
daikon.Debug:logDetail()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2308 | = null
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern:intern([I)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:jj_3R_77()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_68()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_87()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183876 | = null
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_164()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_2_18(I)Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3R_137()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3095 | - -> *
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24075 | return null
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.MathMDE:gcd(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_56()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:jj_3R_54()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_67()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_2_25(I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_136()Z
daikon.inv.Invariant:logOn()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.PptName:isEnterPoint()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.Quant:subsetOf([S[S)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Node:Node()V
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:ReadByte()C
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_161()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3_36()Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_5()Z
utilMDE.MathMDE:mod_positive(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[F)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_ntk()I
daikon.Quant:eltwiseLT([I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.ProglangType:isArray()Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:noDuplicates([I)Z | CONDITION | 57307 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
615 2 654 2 1020 2 848 2 376 2 1029 2 265 2 1066 2 496 2 921 2 421 2 1105 2 202 2 675 2 168 2 1008 4 1009 2 461 2 934 2 1162 2 584 2 395 2 
1051 4 72 16 293 2 844 6 296 16 949 22 885 16 1129 2 744 4 301 8 528 6 112 4 747 2 51 2 711 6 665 6 956 2 88 4 1136 6 197 6 637 4 163 4 1038 6 757 4 965 6 640 4 242 4 279 2 282 32 504 2 799 32 98 32 801 2 288 56 973 16 361 4 473 48 877 18 807 4 
987 2 675 2 971 2 
794 2 399 2 201 2 656 2 480 2 658 2 42 2 111 2 661 2 100 2 323 10 1099 22 116 2 1137 2 
72 2 296 2 949 2 597 2 885 2 444 2 665 4 757 2 1107 2 538 2 282 2 357 2 828 2 799 2 99 2 98 2 801 2 288 6 973 2 327 2 613 2 877 2 473 4 
637 4 273 2 72 4 965 6 296 4 949 4 282 8 885 4 799 8 815 2 98 8 288 16 973 4 711 6 652 2 807 4 473 12 
944 2 987 2 1053 62 404 2 332 2 591 2 558 2 525 2 1057 2 811 2 883 4 223 2 624 4 488 4 489 2 955 4 490 4 997 4 889 2 54 2 823 2 1148 4 166 2 202 2 675 8 1008 4 1072 14 678 2 971 6 94 10 903 10 869 2 389 4 62 2 174 4 583 4 584 4 35 2 178 4 943 2 
776 2 882 2 227 2 709 2 751 2 87 2 349 2 505 2 213 2 105 2 
376 2 1144 2 237 2 1040 4 1132 2 128 2 85 2 242 2 88 2 
364 6 1119 2 348 2 1086 2 573 6 369 2 221 2 467 2 1131 2 418 6 392 2 
1085 2 146 2 780 2 149 4 385 4 242 2 646 2 1079 6 50 6 82 2 88 2 514 6 958 6 
72 10 1087 2 296 10 949 12 885 10 528 8 816 4 226 2 747 2 665 10 88 6 421 2 163 6 273 4 757 6 1108 8 23 2 501 2 242 6 282 16 1154 2 799 16 465 4 98 16 288 30 801 4 973 10 768 8 877 8 473 26 
653 4 325 6 
227 2 
1158 2 88 2 
286 2 458 2 88 4 
485 2 
587 1 879 6 740 2 1023 16 593 2 592 32 150 1 596 2 299 24 886 2 1028 1 745 2 156 2 309 3 14 2 16 2 891 2 606 2 313 2 317 2 165 3 459 16 764 2 321 2 29 4 173 2 175 1 1048 1 773 2 34 3 472 3 177 16 33 2 38 1 184 2 782 2 482 2 336 2 783 2 621 4 189 2 44 2 916 1 1063 3 49 1 344 2 55 2 1069 1 796 2 347 1 350 2 354 1 1074 2 927 3 803 6 211 1 804 1 805 6 936 2 508 6 651 3 67 2 940 2 216 2 366 2 950 2 225 2 814 2 224 24 79 2 953 2 1096 2 1098 1 84 2 667 4 1101 3 534 3 88 34 236 2 380 32 1104 2 383 2 674 2 539 2 240 2 542 2 826 2 676 2 970 2 242 32 679 2 681 2 96 2 1112 2 686 2 837 4 1115 2 555 2 393 2 1117 2 688 2 689 3 252 2 843 2 696 5 845 1 109 4 698 2 258 3 1125 2 991 2 993 3 113 2 415 2 1132 2 1133 1 852 2 716 2 1145 2 1006 2 857 2 1149 4 1007 2 130 2 132 2 1153 2 723 4 576 2 868 2 726 2 430 2 1157 16 873 2 1015 2 579 2 1017 2 580 2 874 2 434 1 
0 2 1 18 2 2 588 24 590 4 4 4 5 6 594 6 6 58 7 10 9 168 598 6 10 6 599 4 601 12 602 6 11 2 18 14 19 22 607 6 22 294 25 2 26 72 27 2 28 2 30 2 31 62 611 6 610 2 612 2 36 6 614 2 616 6 617 6 40 114 43 2 622 168 45 182 625 2 630 50 629 2 632 2 634 2 638 6 643 4 58 2 644 2 647 92 648 2 66 6 68 6 69 22 71 2 655 2 73 2 657 2 75 6 76 6 659 2 660 12 662 4 86 2 88 4 668 4 670 22 669 2 673 4 91 2 92 2 677 6 93 2 682 24 95 2 97 2 683 4 685 10 104 2 692 2 690 2 106 4 694 10 107 4 697 480 699 2 110 14 701 4 702 2 703 168 705 24 707 24 708 2 114 8 117 2 118 2 119 10 712 42 120 40 121 2 124 4 718 2 717 6 126 6 127 2 720 18 131 2 722 2 133 2 134 4 138 6 727 138 728 2 730 18 139 182 140 4 733 2 141 2 145 2 144 2 736 2 738 4 147 24 148 40 742 10 741 4 151 6 743 4 154 2 155 2 749 94 161 2 750 2 752 14 759 2 760 2 762 2 171 2 771 322 176 2 772 4 774 2 775 2 777 4 778 2 182 24 185 4 781 4 186 2 784 294 188 4 786 20 787 6 190 2 192 4 191 2 790 4 194 4 791 4 792 4 198 2 795 4 797 2 203 12 204 2 205 4 206 2 800 2 207 4 208 6 215 4 808 2 218 10 810 16 220 16 813 82 817 24 818 50 230 2 233 2 820 4 234 2 819 2 824 2 825 4 238 2 239 14 242 4 241 6 827 42 244 2 832 2 246 82 248 2 247 6 834 2 835 2 249 6 839 2 838 10 840 2 250 26 251 184 254 2 257 2 847 2 259 56 849 4 261 2 260 2 850 2 262 2 851 2 264 4 271 168 853 2 854 2 855 2 272 18 859 2 275 6 858 2 274 2 861 2 277 2 862 14 281 376 864 2 865 2 867 36 866 2 870 2 871 6 290 4 872 24 291 2 292 4 878 6 294 2 297 2 881 62 888 4 303 40 304 2 307 2 890 6 310 2 892 22 893 2 314 54 312 2 318 2 316 6 897 2 319 4 320 22 901 18 902 106 904 6 322 96 906 2 326 2 328 332 909 4 329 6 912 2 333 12 913 48 338 6 914 12 915 2 341 40 917 2 345 2 918 2 919 4 922 14 346 2 351 2 352 2 924 6 925 4 356 2 928 6 929 4 930 2 931 6 360 10 932 4 933 2 935 168 937 2 938 6 940 2 939 6 365 2 946 2 947 2 371 10 372 2 373 96 954 114 377 6 379 2 381 6 382 2 960 6 963 6 964 96 961 6 384 2 969 2 968 14 386 2 972 6 388 4 974 2 976 294 390 184 978 20 980 24 981 14 984 2 985 184 401 6 400 2 405 2 992 2 408 152 409 2 410 2 998 4 411 168 412 2 413 2 414 168 1000 2 416 12 417 6 1001 6 419 6 420 2 423 2 424 2 425 2 426 2 429 48 1010 6 1011 10 431 96 1013 2 1014 282 1018 22 436 2 438 2 1025 4 1024 6 442 22 1027 2 445 2 448 6 449 2 1031 2 1033 24 451 4 1034 6 453 2 454 186 456 6 457 4 1039 376 460 2 462 2 1042 4 1044 2 463 4 1043 6 1045 4 466 2 1047 168 1049 6 474 2 1052 6 477 42 476 2 1054 38 1056 2 481 10 479 12 483 86 1058 2 484 2 1060 4 487 4 1062 2 492 6 1065 2 493 10 494 2 495 168 1067 2 498 24 1071 2 500 10 1073 6 503 2 506 2 1077 4 1081 2 509 2 1082 4 513 24 515 2 516 38 517 46 518 14 519 24 1088 2 521 6 1090 6 1091 2 526 152 1092 2 1093 6 1095 12 529 2 1102 18 537 192 540 2 1109 2 543 2 546 6 1110 6 548 48 1111 4 551 2 554 24 1114 4 1116 2 556 4 1127 10 1126 74 559 4 560 24 562 2 1130 20 563 6 564 6 1134 4 567 22 568 2 1135 4 1138 6 1139 162 1140 2 1141 4 569 2 1142 56 1146 6 570 2 1147 2 572 2 1150 2 1151 2 1156 2 578 2 581 4 1159 10 582 2 1163 78 1164 2 
397 2 465 2 831 2 627 2 1064 2 926 1 675 2 806 2 
831 2 64 2 806 2 
536 2 831 2 806 2 
455 2 193 2 355 2 
831 2 806 2 
80 2 355 2 
900 2 806 2 
193 2 355 2 337 2 
125 2 
193 2 989 2 298 2 
193 2 631 2 983 2 
846 2 603 2 193 2 
842 2 355 2 
907 2 806 2 
1143 2 169 2 
298 2 196 2 
15 2 631 2 
846 2 763 2 
779 2 355 2 
846 2 52 2 
631 2 721 2 
595 2 298 2 
1075 2 169 2 
340 2 193 2 355 2 337 2 
340 2 626 2 193 2 355 2 337 2 
193 2 663 2 355 2 
193 2 355 2 619 2 
589 2 
193 2 806 2 1032 2 
359 2 806 2 
627 2 684 2 675 2 232 2 
397 2 627 2 684 2 675 2 232 2 143 2 
1155 2 465 2 831 2 627 2 675 2 806 2 
571 2 1162 2 
704 2 465 2 627 2 675 2 
631 2 1068 2 
846 2 967 2 
169 2 510 2 
229 2 298 2 
367 2 846 2 298 2 
846 2 687 2 298 2 
962 2 846 2 298 2 
846 2 298 2 243 2 
895 2 675 2 829 6 1076 2 627 2 545 2 
335 2 355 2 
122 4 89 2 1055 2 642 2 1124 2 623 2 407 2 48 2 447 2 729 2 158 2 13 4 1099 6 532 2 83 2 268 2 180 2 1002 2 
193 2 160 2 
79 2 
879 4 592 6 596 2 886 2 16 2 606 2 898 2 24 2 29 4 767 2 1046 2 175 2 1048 2 471 2 177 6 33 2 183 4 482 2 783 2 621 4 44 2 189 2 793 2 55 2 1069 4 803 2 805 2 649 2 650 2 508 6 936 2 940 2 225 2 1096 2 667 8 88 26 235 2 535 2 380 4 1104 2 674 2 539 2 240 2 676 2 542 2 970 2 242 26 686 2 837 8 555 2 393 2 1117 2 1118 4 398 2 688 2 841 2 843 4 1125 2 406 2 415 2 1132 2 852 2 1005 2 716 2 1006 2 857 2 1145 2 1149 4 863 2 723 4 283 2 430 2 873 2 579 6 433 2 1017 2 
879 6 592 6 596 2 886 2 745 2 16 2 606 2 898 2 24 2 29 4 767 2 1046 2 175 2 1048 2 471 2 177 6 33 2 183 4 782 2 482 2 783 2 621 4 44 2 189 2 793 2 55 2 803 2 805 2 649 2 508 6 936 2 940 2 225 2 78 2 1096 2 667 8 88 26 235 2 380 4 1104 2 674 2 539 2 240 2 676 2 542 2 970 2 242 26 686 2 837 8 555 2 393 2 1117 2 1118 4 688 2 841 2 1120 2 843 4 557 2 1125 2 406 2 415 2 1132 2 852 2 714 2 1005 2 716 2 1006 2 857 2 1145 2 1149 4 863 2 723 4 283 2 430 2 873 2 579 6 433 2 1017 2 
739 2 
142 2 1152 2 
364 2 1036 4 1119 2 761 2 1026 2 221 2 387 2 374 2 995 2 725 4 102 2 266 2 604 2 666 2 957 2 53 2 418 2 1050 2 
364 6 217 2 1086 2 809 2 1026 2 369 2 221 4 153 2 886 2 887 2 952 2 374 2 748 2 450 2 531 2 604 4 666 2 957 2 452 4 88 12 959 2 20 2 1036 4 672 2 899 4 761 2 242 6 387 2 102 2 391 2 1050 2 475 2 1119 4 988 2 693 2 482 2 1125 2 621 2 1128 4 486 4 785 2 995 2 415 2 266 2 53 2 418 4 270 4 1003 2 713 6 497 2 1006 2 573 6 1149 2 725 4 645 2 136 2 430 2 137 2 508 4 940 2 
364 4 217 2 1086 2 809 2 1026 2 221 4 153 2 886 2 887 2 952 2 374 2 748 2 450 2 531 2 604 4 666 2 957 2 452 4 88 12 959 2 20 2 1036 4 672 2 899 4 761 2 242 6 387 2 102 2 391 2 1050 2 475 2 1119 4 988 2 693 2 482 2 1125 2 621 2 1128 4 486 4 785 2 995 2 415 2 266 2 53 2 418 6 270 4 1003 2 713 6 497 2 1006 2 348 2 573 6 1149 2 725 4 645 2 136 2 430 2 137 2 508 4 940 2 
364 6 217 2 1086 2 809 2 1026 2 221 4 153 2 886 2 887 2 952 2 374 2 748 2 450 2 531 2 604 4 666 2 957 2 452 4 88 12 959 2 20 2 1036 4 672 2 899 8 761 2 242 6 387 2 102 2 391 2 1050 2 475 2 1119 4 988 2 693 2 482 2 1125 2 621 2 1128 4 486 4 785 2 995 2 1131 2 415 2 266 2 53 2 418 6 270 4 1003 2 713 6 497 2 1006 2 573 6 1149 2 725 4 645 2 136 2 430 2 137 2 508 4 940 2 
364 6 217 2 1086 2 809 2 1026 2 221 4 153 2 886 2 887 2 952 2 374 2 748 2 450 2 531 2 604 4 666 2 957 2 452 8 88 12 959 2 20 2 1036 4 672 2 899 8 761 2 242 6 387 2 102 2 391 2 1050 2 475 2 1119 4 988 2 693 2 482 2 1125 2 621 2 1128 4 486 4 785 2 995 2 1131 2 415 2 266 2 53 2 418 8 270 4 1003 2 713 10 497 2 1006 2 348 2 573 8 1149 2 725 4 645 2 136 2 430 2 137 2 508 4 940 2 
364 6 217 2 1086 2 809 2 1026 2 221 4 153 2 886 2 887 2 952 2 374 2 748 2 450 2 531 2 604 4 666 2 957 2 452 8 88 12 959 2 20 2 1036 4 672 2 899 8 761 2 242 6 387 2 102 2 391 2 1050 2 475 2 1119 4 988 2 693 2 482 2 1125 2 621 2 1128 4 486 4 785 2 995 2 1131 2 415 2 266 2 53 2 418 6 270 4 1003 2 713 10 497 2 1006 2 573 6 1149 2 725 4 645 2 136 2 430 2 137 2 508 4 940 2 
879 6 3 4 592 8 596 2 886 2 302 2 887 2 604 4 606 2 20 2 899 2 29 4 324 2 908 1 33 2 37 2 330 2 331 2 618 2 621 4 44 2 339 2 628 6 633 2 53 2 635 2 55 2 348 4 639 6 56 2 923 2 57 2 645 2 59 6 936 2 940 2 364 4 368 1 948 10 74 2 77 1 952 2 374 2 664 1 666 2 957 2 667 4 88 46 380 2 959 2 672 2 671 2 676 2 970 2 387 2 102 2 979 6 391 2 393 2 982 2 396 6 988 4 693 2 406 4 995 2 706 6 415 2 710 6 418 8 1003 2 713 2 1005 2 715 6 716 2 123 2 1006 2 723 4 725 4 135 2 430 2 137 2 136 2 1012 7 432 6 731 2 1017 2 737 2 1022 2 1026 2 152 1 153 2 745 2 748 2 450 2 753 2 754 1 1036 4 761 2 767 2 177 6 1050 2 475 2 183 4 782 2 482 2 783 2 1059 2 486 8 485 6 785 2 497 2 1069 1 502 1 803 2 507 4 1080 8 805 2 508 6 1084 2 1086 4 809 2 221 4 222 2 527 2 1096 2 530 2 531 2 228 2 231 6 1104 12 822 6 1106 6 539 2 542 2 242 24 830 1 833 2 837 4 836 6 555 2 1119 4 1125 2 1128 4 565 1 266 2 1132 2 267 2 269 2 852 2 270 6 857 2 276 2 1149 4 573 12 863 2 284 7 286 6 873 2 579 6 1158 6 1161 2 
737 2 879 6 3 4 1022 2 592 8 1026 2 596 2 153 2 302 2 886 2 887 2 745 2 748 2 450 2 604 4 753 2 606 2 20 2 1036 4 899 6 761 2 29 4 324 2 767 2 33 2 177 6 1050 2 37 2 475 2 330 2 331 2 183 4 782 2 618 2 482 2 783 4 621 4 339 2 1059 2 44 2 485 6 486 8 785 2 628 6 633 2 53 2 635 2 497 2 55 2 639 6 923 2 56 2 57 2 645 2 59 6 803 2 1080 8 507 4 805 2 936 2 508 6 940 2 1084 2 364 8 1086 4 948 10 809 2 74 2 221 4 222 2 527 2 952 2 374 2 1096 2 530 2 228 2 531 2 231 6 666 2 957 2 667 6 88 46 380 2 1104 12 959 2 822 6 671 2 1106 6 672 2 539 2 542 2 676 2 970 4 242 24 387 2 833 2 979 6 102 2 836 6 837 6 391 2 555 2 393 2 982 2 396 6 1119 4 988 4 693 2 1125 2 1128 4 406 4 706 6 995 2 1131 4 415 2 710 6 1132 2 266 2 267 2 269 2 270 6 852 4 418 8 1003 2 713 2 715 6 1005 2 123 2 716 2 857 2 1006 2 276 2 573 12 1149 4 863 2 723 4 725 4 135 2 286 6 136 2 137 2 430 2 432 6 731 2 873 2 1158 6 579 6 1017 2 1161 2 
737 2 879 6 3 4 1022 2 592 8 1026 2 596 2 153 2 302 2 886 2 887 2 745 2 748 2 450 2 604 4 753 2 452 4 606 2 20 2 1036 4 899 6 761 2 29 4 324 2 767 2 33 2 177 6 1050 2 37 2 475 2 330 2 331 2 183 4 782 2 618 2 482 2 783 4 621 4 339 2 1059 2 44 2 485 6 486 8 785 2 628 6 633 2 53 2 635 2 497 2 55 2 639 6 923 2 56 2 57 2 645 2 59 6 803 2 1080 8 507 4 805 2 936 2 508 6 940 2 1084 2 364 8 1086 4 948 10 809 2 74 2 221 4 222 2 527 2 952 2 374 2 1096 2 530 2 228 2 531 2 231 6 666 2 957 2 667 6 88 46 380 2 1104 12 959 2 822 6 671 2 1106 6 672 2 539 2 542 2 676 2 970 4 242 24 387 2 833 2 979 6 102 2 836 6 837 6 391 2 393 2 555 2 982 2 396 6 1119 4 988 4 693 2 1125 2 1128 4 406 4 706 6 995 2 1131 4 415 2 710 6 1132 2 266 2 267 2 269 2 270 6 852 4 418 8 1003 2 713 6 715 6 1005 2 123 2 716 2 857 2 1006 2 276 2 573 12 1149 4 863 2 723 4 725 4 135 2 286 6 136 2 137 2 430 2 432 6 731 2 873 2 1158 6 579 6 1017 2 1161 2 
737 2 879 6 3 4 1022 2 592 12 1026 2 596 2 153 2 302 2 886 2 887 2 745 2 748 2 450 2 604 4 753 2 452 4 606 2 20 2 1036 4 899 6 167 2 761 2 172 2 29 4 324 2 767 2 33 2 177 8 1050 2 37 2 475 2 330 2 331 2 183 6 782 2 618 2 482 2 783 4 621 4 339 2 1059 2 44 2 485 6 486 8 628 6 633 2 53 2 635 2 497 2 55 2 639 6 348 2 923 2 56 2 499 2 57 2 645 2 59 6 803 4 1080 8 507 4 212 2 805 4 936 2 508 6 940 2 1084 2 1083 2 364 10 1086 4 948 8 809 2 74 2 369 2 221 4 222 2 527 2 952 2 374 2 1096 2 530 2 228 2 531 2 231 6 666 2 957 2 667 6 88 44 380 4 1104 10 959 2 822 6 671 2 1106 6 672 2 539 2 542 2 676 2 970 4 242 22 387 2 833 2 979 6 102 2 836 6 837 6 391 2 393 2 555 2 396 6 1119 4 988 2 693 2 1125 2 1128 4 406 4 706 6 995 2 1131 4 415 2 710 6 1132 2 266 2 267 2 269 2 852 4 418 10 270 6 713 4 715 6 1005 2 123 2 716 2 857 2 1006 2 276 2 573 16 1149 4 863 2 427 2 723 4 725 4 135 2 286 6 430 2 137 2 432 6 731 2 873 2 1158 6 579 8 1017 2 1161 2 
364 6 475 2 1119 4 693 2 1086 2 809 2 1026 2 221 4 1128 2 153 2 486 2 952 2 374 2 748 2 1131 2 450 2 266 2 531 2 452 4 957 2 53 2 270 2 418 6 88 4 20 2 713 4 497 2 959 2 1036 2 573 4 899 6 387 2 645 2 725 2 1050 2 
879 6 592 8 596 2 1026 2 884 2 153 2 886 2 300 2 745 2 748 2 450 2 891 2 606 2 20 2 1036 2 313 2 899 6 29 4 767 2 177 6 33 2 1050 2 475 2 183 4 478 2 782 2 482 2 621 4 44 2 486 2 53 2 497 2 55 2 645 2 209 2 803 3 805 3 508 6 940 2 364 6 1086 2 948 2 809 2 221 4 952 2 79 2 374 2 1096 2 531 2 957 2 88 28 380 3 959 2 1104 4 539 2 676 2 826 2 542 2 242 24 680 2 387 2 555 2 393 2 982 2 1119 4 693 2 1125 2 1128 2 406 2 1131 2 415 2 1132 2 266 2 566 3 270 2 418 6 713 2 1005 2 716 2 1006 2 857 2 573 4 1149 4 723 4 725 2 137 2 430 2 873 2 579 6 
364 6 217 2 1086 2 809 2 1026 2 221 4 153 2 886 2 887 2 952 2 374 2 748 2 450 2 531 2 604 4 666 2 957 2 452 8 88 12 959 2 20 2 1036 4 672 2 899 8 761 2 242 6 387 2 102 2 391 2 1050 2 475 2 1119 4 988 2 693 2 482 2 1125 2 621 2 1128 4 486 4 785 2 995 2 1131 2 415 2 266 2 53 2 418 6 270 4 1003 2 713 10 497 2 1006 2 573 6 1149 2 725 4 645 2 136 2 430 2 137 2 508 4 940 2 
364 8 437 2 1086 2 809 2 1026 2 369 2 221 4 153 2 886 2 887 2 374 2 375 4 748 2 450 2 531 2 604 4 666 2 957 2 452 8 88 12 959 2 20 2 1036 4 672 2 899 8 761 2 242 6 387 2 102 2 391 2 1050 2 475 2 1119 4 988 2 693 2 1121 2 482 2 1125 2 621 2 1128 4 486 4 785 2 995 2 1131 2 415 2 266 2 53 2 418 6 270 4 1003 2 713 10 497 2 1006 2 1149 2 573 8 645 2 725 4 136 2 430 2 137 2 508 4 940 2 
20 2 475 2 1030 2 
20 2 475 2 1030 2 
1019 2 879 6 3 2 592 2 596 2 886 2 887 2 745 2 12 2 748 2 1030 2 604 4 452 4 605 4 606 2 1035 2 20 6 1036 2 899 6 464 2 29 4 767 2 770 2 177 2 33 2 179 2 475 4 331 2 782 2 618 2 482 2 783 4 621 4 44 2 486 4 53 2 55 2 1069 1 199 2 348 4 1070 2 1078 2 507 2 936 4 649 4 508 6 940 2 364 12 1086 4 948 2 370 2 369 4 221 4 1096 2 666 2 667 4 88 24 380 2 1104 4 1106 2 539 2 676 2 970 4 242 16 387 2 975 2 547 2 977 2 102 2 837 4 391 2 555 2 393 2 394 2 1119 4 988 4 403 2 255 4 693 2 108 2 1125 2 1128 2 406 6 1131 4 415 2 1132 2 266 4 270 4 852 4 418 12 713 6 1005 2 123 2 716 2 1006 2 857 2 1149 4 573 16 723 4 725 2 136 2 430 2 873 2 579 2 585 2 
1104 2 1106 2 1006 2 403 2 3 2 520 2 948 2 353 2 242 2 222 2 527 2 995 2 977 2 770 2 142 2 195 2 88 4 
1019 2 879 6 295 2 592 2 596 2 886 2 887 2 745 2 12 2 748 2 1030 2 604 4 452 4 605 4 606 2 1035 2 20 6 1036 2 899 6 1041 2 464 2 29 4 767 2 177 2 33 2 179 2 475 4 331 2 782 2 618 2 482 2 783 4 621 4 44 2 486 4 785 2 53 2 55 2 199 4 348 4 1070 2 507 2 214 2 936 4 649 4 508 6 940 2 364 12 1086 4 370 2 369 4 221 4 1096 2 666 2 667 4 88 20 380 4 1104 2 90 2 539 2 676 2 970 4 242 14 387 2 547 2 977 2 102 2 837 4 391 2 555 2 393 2 394 2 1119 4 988 4 403 2 255 4 693 2 1125 2 1128 2 406 6 1131 4 415 2 1132 2 266 4 270 4 852 4 418 12 1003 2 713 6 1005 2 123 2 716 2 1006 2 857 2 1149 4 573 16 723 4 724 2 725 2 136 2 430 2 873 2 579 2 
1019 2 879 6 439 2 3 2 592 2 596 2 886 2 887 2 745 2 12 2 748 2 1030 2 604 4 452 4 605 4 606 2 1035 2 20 6 1036 2 899 6 464 2 29 4 767 2 468 2 770 2 177 2 33 2 179 2 475 4 331 2 782 2 618 2 482 2 783 4 621 4 44 2 486 4 785 2 342 2 53 2 55 2 1069 1 199 2 348 4 1070 2 60 2 507 2 936 4 649 4 508 6 940 2 364 12 1086 4 948 2 370 2 369 4 221 4 1096 2 666 2 1100 2 667 4 88 24 380 2 1104 4 1106 2 539 2 676 2 970 4 242 16 387 2 547 2 977 2 102 2 837 4 391 2 555 2 393 2 394 2 1119 4 988 4 403 2 255 4 693 2 1125 2 1128 2 406 6 1131 4 415 2 1132 2 266 4 270 4 852 4 418 12 1003 2 713 6 1005 2 123 2 716 2 1006 2 857 2 1149 4 573 16 723 4 725 2 136 2 430 2 873 2 579 2 
879 7 1022 2 296 2 880 2 592 8 441 2 596 2 885 2 886 2 745 1 746 2 306 2 157 2 162 2 756 2 606 2 896 2 1037 2 758 2 164 6 29 4 766 2 767 2 177 6 33 2 473 4 910 2 911 2 330 2 183 4 782 1 39 2 334 2 482 2 621 4 44 2 1059 2 788 2 633 2 920 2 636 2 55 2 1069 1 641 2 57 2 799 2 802 2 803 2 63 2 805 2 508 6 65 2 940 2 807 2 70 2 72 2 219 2 74 2 524 1 949 1 1089 2 951 2 812 2 1094 2 1096 2 530 2 378 2 956 1 667 2 235 2 88 26 380 2 1104 2 965 4 539 2 541 2 676 2 542 2 242 20 98 2 973 2 101 2 550 2 103 2 552 2 553 2 837 2 555 2 393 2 253 2 402 2 1122 2 990 2 1125 2 700 2 406 2 415 2 1132 2 856 2 716 2 422 2 1006 2 857 2 860 2 278 2 1149 4 863 2 129 4 280 2 574 2 575 2 282 2 723 4 285 2 288 5 287 2 430 2 577 2 873 2 579 6 1017 2 1160 2 735 2 875 2 877 1 435 2 
183 2 592 2 994 2 305 2 446 2 263 2 343 2 1097 3 821 2 88 2 380 3 311 2 863 6 542 2 242 2 358 2 210 2 803 3 805 3 1016 2 579 2 511 4 512 2 177 2 
183 2 592 2 994 2 305 2 446 2 263 2 343 2 1097 2 821 2 88 2 380 2 311 2 863 6 542 2 242 2 358 2 210 2 803 2 805 2 1016 2 579 2 511 4 512 2 177 2 
183 2 592 2 994 2 305 2 446 2 263 2 343 2 1097 2 821 2 88 2 380 2 311 2 863 6 542 2 242 2 358 2 210 2 803 2 805 2 1016 2 579 2 511 4 512 2 177 2 
586 2 945 6 72 2 1021 4 1023 2 296 2 592 2 443 3 885 2 528 4 533 2 88 10 380 3 163 2 966 4 542 2 242 4 98 2 765 2 544 2 973 2 473 4 695 2 256 2 1123 2 620 2 46 4 1061 4 789 2 282 2 799 2 210 2 288 5 803 3 1157 2 362 4 941 2 942 3 876 3 363 2 
586 2 945 6 72 2 1021 4 1023 2 296 2 592 2 949 2 443 2 885 2 528 4 747 2 533 2 88 10 380 2 163 2 966 4 542 2 242 4 98 2 765 2 544 2 973 2 473 4 695 2 256 2 1123 2 620 2 46 4 1061 4 789 2 282 2 799 2 210 2 288 4 803 2 1157 2 362 4 941 2 942 2 876 2 877 2 363 2 
586 2 945 6 72 2 1021 4 1023 2 296 2 592 2 949 2 443 2 885 2 528 4 747 2 533 2 88 10 380 2 163 2 966 4 542 2 242 4 98 2 765 2 544 2 973 2 473 4 695 2 256 2 1123 2 620 2 46 4 1061 4 789 2 282 2 799 2 210 2 288 4 803 2 1157 2 362 4 941 2 942 2 876 2 877 2 363 2 
586 2 945 6 72 2 1021 4 1023 2 296 2 592 2 949 2 443 2 885 2 528 4 747 2 533 2 88 10 380 2 163 2 966 4 542 2 242 4 98 2 765 2 544 2 973 2 473 4 695 2 256 2 1123 2 620 2 46 4 1061 4 789 2 282 2 799 2 210 2 288 4 803 2 1157 2 362 4 941 2 942 2 876 2 877 2 363 2 
586 2 945 6 72 2 1021 4 1023 2 296 2 592 2 949 4 443 2 885 2 528 4 747 4 533 2 88 10 380 2 163 2 966 4 542 2 242 4 98 2 765 2 544 2 973 2 473 4 695 2 256 2 1123 2 620 2 46 4 1061 4 789 2 282 2 799 2 210 2 288 4 803 2 1157 2 362 4 941 2 942 2 876 2 877 4 363 2 
1103 2 245 2 469 2 732 2 769 2 187 2 
996 2 61 2 115 2 159 2 440 2 769 2 235 2 
894 1 21 2 600 2 200 2 315 2 999 2 905 1 166 1 470 1 242 4 734 2 1125 2 8 2 88 4 943 1 
1051 2 986 2 72 5 691 2 296 5 949 5 301 2 885 5 528 4 747 4 491 2 956 1 17 2 88 6 197 4 163 2 965 3 242 6 282 6 798 2 799 6 98 6 288 13 577 2 973 5 1113 2 1160 2 473 11 807 2 877 5 910 2 
181 2 966 2 523 5 41 2 242 1 428 2 46 2 561 1 1061 2 81 2 549 4 88 1 
181 2 46 2 1061 2 966 2 81 2 549 4 523 2 41 2 428 2 
181 2 46 2 1061 2 966 2 81 2 549 4 523 2 41 2 428 2 
181 2 966 2 719 2 523 2 41 2 428 2 46 2 608 2 289 2 1061 2 609 2 81 2 549 2 
522 2 308 1 755 2 170 2 47 2 1004 1 
47 2 522 2 755 2 170 2 
47 2 522 2 755 2 170 2 
47 2 522 2 755 2 170 2 
32 2 

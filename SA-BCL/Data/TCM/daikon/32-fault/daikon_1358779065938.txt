#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (166,728) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.util.NoSuchElementException 113 399 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 743 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.Error 191 136 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 786 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (151,239,391,441,540) (151,239,391,441,540) (151,239,391,441,540) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 104 265 521 209 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException (10,527) 7 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 99 783 465 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 723 747 733 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 723 747 733 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 723 747 733 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.Node:Node()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:slice([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([D[D)Z | CONDITION | 81695 | if (x) -> if (!x)
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ProglangType:isFloat()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:lte(II)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:union([I[I)[I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:passes()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant:logOn()Z
daikon.ProglangType:dimensions()I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariants:Invariants()V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:isReverse([I[I)Z
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I | CONSTANT | 21177 | 2 -> 1
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 8811 | 0 -> 1
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ProglangType:isScalar()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17104 | = null
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_2()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String; | ASSIGN | 970 | = null
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.ArraysMDE:min_max([I)[I
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:justified()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:memberOf(J[J)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 11746 | = null
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:mod_positive(JJ)J | CONDITION | 13056 | if (x) -> if (!x)
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z | CONSTANT | 162209 | 0 -> 1
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.Quant:noDups([I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaCharStream:readChar()C
utilMDE.WeakHasherMap:processQueue()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eq(DD)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.ProglangType:isPseudoArray()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfo:isPointer()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:FillBuff()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20735 | return null
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7917 | 3 -> 1
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V | CONDITION | 919 | if (x) -> if (!x)
daikon.Debug:logOn()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptSlice1:arity()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.PptSlice0:arity()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Ppt:Ppt()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfo:new_ppt()V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltsLT([II)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:GetSuffix(I)[C
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:num_samples()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_2(J)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15342 | if (x) -> if (!x)
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | CONSTANT | 123248 | 1 -> -1
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:logDetail()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:getConfidence()D
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd([I)I
daikon.Quant:subsetOf([F[D)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:sameLength([I[I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10682 | = null
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Intern:intern([I)[I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 11304 | 2 -> 0
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGTE([II)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:eltsLTE([II)Z
daikon.diff.InvMap:InvMap()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:sum([D)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5096 | = null
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:num_sets()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:negate(I)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61946 | = null
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18332 | 0 -> -1
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:hashCode()I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern([D)[D
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
daikon.Debug:logDetail()Z
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:element_range([I)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:size()I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eltsEqual([II)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseLT([I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern([J)[J
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE:pow(II)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 2 174 2 870 2 766 2 435 4 644 2 491 2 364 2 627 2 
479 2 802 6 333 2 332 2 866 2 580 6 31 2 382 2 695 6 622 2 770 2 
653 4 644 2 8 2 93 6 690 2 50 6 737 2 878 4 491 2 87 2 845 2 395 6 186 6 
758 10 495 8 859 26 144 4 614 16 558 8 644 6 559 2 527 2 179 10 864 6 10 4 865 16 591 30 738 10 625 8 817 12 685 2 847 8 629 6 823 2 659 4 22 4 242 10 305 2 547 2 220 16 491 6 442 2 554 10 
728 4 166 4 
288 2 
223 2 758 4 859 4 614 2 399 2 179 2 113 2 502 2 865 2 591 6 738 2 867 2 326 2 629 2 365 2 242 2 162 2 416 2 220 2 554 2 
817 5 859 12 137 4 671 2 614 8 674 2 659 2 242 4 179 4 865 8 591 14 205 6 468 6 738 4 220 8 554 4 535 4 
815 2 294 2 600 6 257 2 743 2 389 2 727 2 270 2 560 2 885 2 
136 2 573 2 656 2 730 2 110 2 337 2 288 2 793 2 880 2 191 2 
57 2 522 2 644 4 3 2 700 2 526 2 317 2 588 2 67 2 201 4 14 2 841 2 651 2 534 2 536 2 774 2 655 2 154 2 542 4 338 2 789 2 165 2 606 2 547 2 491 4 724 2 498 2 803 2 673 2 447 2 616 2 178 2 565 2 453 2 454 2 96 2 185 2 870 2 874 2 875 4 579 2 881 4 251 2 884 2 
758 6 859 48 144 2 834 2 614 32 760 4 644 4 559 2 287 2 807 6 179 16 808 8 228 2 864 4 865 32 591 54 205 6 738 16 321 4 625 16 741 6 535 4 817 22 847 6 137 4 629 4 436 2 577 2 242 16 214 4 854 6 274 4 468 6 879 6 220 32 491 4 554 16 169 4 
786 2 
155 22 673 2 585 2 461 2 302 2 562 2 245 2 650 2 356 10 663 2 307 2 756 2 127 2 611 2 
832 2 108 2 582 2 109 1 759 2 644 22 761 2 197 4 375 2 423 2 199 1 702 2 151 2 652 2 208 6 709 2 714 2 15 2 118 2 264 2 122 4 438 1 603 2 720 2 391 2 794 2 546 2 491 20 446 2 183 2 355 2 403 6 357 2 627 2 135 4 458 2 406 2 512 2 871 2 363 2 239 2 240 1 188 2 693 2 750 4 638 2 829 2 
286 2 
644 2 86 2 
25 2 444 2 644 4 
0 6 472 2 60 4 196 2 373 4 763 2 316 8 528 2 590 2 425 2 476 2 477 2 116 2 262 4 428 2 705 36 478 2 711 4 209 2 594 14 330 2 210 6 16 2 265 4 782 6 76 6 272 2 788 36 439 6 721 2 28 2 550 2 492 2 552 6 725 2 856 8 171 8 667 2 350 8 500 2 226 2 617 2 563 4 36 4 35 2 504 2 233 2 813 2 293 6 187 4 509 2 360 6 297 4 362 6 241 36 873 6 634 2 691 8 692 2 367 2 304 2 517 10 826 2 246 2 104 8 469 4 521 2 249 6 639 2 143 2 
624 2 608 2 675 1 348 2 
511 2 624 2 
29 2 754 2 526 2 734 2 
89 2 670 2 29 2 754 2 526 2 734 2 
10 2 7 2 
803 2 234 2 
10 2 33 2 29 2 526 2 
65 2 277 2 
142 2 679 2 
420 2 282 2 
682 2 175 2 
142 2 175 2 719 2 
811 2 142 2 175 2 
432 2 142 2 175 2 
142 2 812 2 175 2 
90 2 279 6 729 2 526 2 139 2 80 6 303 2 29 2 
9 2 170 2 
10 2 670 2 781 2 29 2 111 2 526 2 624 2 
111 2 624 2 553 2 
544 2 111 2 624 2 
9 2 141 2 608 2 
111 2 624 2 
9 2 820 2 
229 2 
9 2 742 2 608 2 
282 2 92 2 608 2 
73 2 175 2 608 2 
65 2 608 2 640 2 
568 2 142 2 608 2 
9 2 506 2 
624 2 882 2 
848 2 282 2 
457 2 175 2 
65 2 824 2 
819 2 142 2 
9 2 369 2 
142 2 39 2 
65 2 593 2 
661 2 175 2 
282 2 237 2 
9 2 742 2 207 2 608 2 
9 2 742 2 341 2 207 2 608 2 
180 2 9 2 608 2 
72 2 9 2 608 2 
422 2 231 2 260 2 681 2 
18 2 155 2 335 2 631 4 688 2 561 2 48 2 215 2 68 2 319 2 12 2 467 2 248 2 
608 2 32 2 
693 2 
308 2 644 26 761 6 197 4 423 2 203 2 767 2 768 2 652 2 429 2 208 4 324 2 15 2 118 2 336 2 122 4 339 3 23 2 24 2 792 2 662 2 794 2 346 4 672 4 446 2 355 2 678 2 814 2 135 4 458 2 822 4 359 2 361 2 363 2 47 2 829 2 830 2 582 2 58 2 145 2 371 2 254 5 587 2 837 8 66 2 69 2 702 2 709 2 714 2 264 2 598 2 603 2 720 2 491 26 496 2 281 2 735 3 94 2 618 2 501 2 183 2 403 6 626 2 627 2 628 2 406 2 512 2 513 2 871 2 633 2 188 6 750 4 638 6 107 3 
308 2 108 2 644 26 761 6 197 4 423 2 203 2 767 2 768 2 652 2 429 2 208 6 324 2 15 2 118 2 336 2 122 4 339 2 23 2 24 2 794 2 546 2 346 4 443 2 672 4 446 2 355 2 678 2 814 2 135 4 458 2 822 4 359 2 361 2 363 2 47 2 829 2 830 2 582 2 58 2 252 2 145 2 371 2 254 4 587 2 837 8 66 2 69 2 702 2 709 2 714 2 264 2 598 2 603 2 720 2 491 26 496 2 281 2 735 2 94 2 618 2 183 2 403 6 626 2 627 2 628 2 406 2 512 2 513 2 871 2 633 2 188 6 519 2 635 2 750 4 638 6 107 2 
219 2 
481 2 850 2 
582 2 698 2 370 4 311 2 644 12 6 2 146 10 197 2 148 2 423 2 258 2 764 2 702 2 704 2 382 2 772 2 15 2 333 4 332 4 156 2 541 2 718 4 602 2 164 2 163 2 343 2 342 2 26 4 84 4 794 2 30 2 491 6 665 8 802 6 280 2 349 2 736 2 450 2 866 2 290 2 452 2 403 4 38 2 455 2 404 4 135 2 683 2 458 2 821 2 363 2 576 2 98 2 412 2 580 6 636 2 106 2 695 6 755 2 883 4 55 8 
582 2 698 2 370 4 311 2 644 12 6 2 146 10 197 2 148 2 423 2 258 2 764 2 530 4 702 2 704 2 382 2 772 2 15 2 333 4 332 4 156 2 849 2 541 2 718 4 602 2 164 2 163 2 343 2 342 2 26 4 84 4 794 2 30 2 31 2 491 6 665 8 802 8 280 2 349 2 736 2 866 2 452 2 403 4 38 2 455 2 404 4 135 2 683 2 458 2 821 2 363 2 576 2 98 2 412 2 751 2 636 2 580 6 106 2 695 8 755 2 55 8 883 4 
772 2 683 2 802 2 332 2 333 2 311 2 541 2 6 2 258 2 602 2 164 2 163 2 26 4 452 2 580 2 455 2 404 2 883 4 
582 2 698 2 370 4 311 2 644 12 6 2 146 6 197 2 148 2 423 2 258 2 764 2 702 2 704 2 772 2 15 2 333 4 332 4 156 2 541 2 718 4 602 2 164 2 163 2 343 2 342 2 26 4 84 4 794 2 30 2 31 2 491 6 665 4 802 6 280 2 349 2 736 2 450 2 866 2 290 2 452 2 403 4 38 2 455 2 404 4 135 2 683 2 458 2 821 2 363 2 576 2 98 2 412 2 580 4 636 2 106 2 695 6 755 2 883 4 55 4 
582 2 698 2 370 4 311 2 644 12 6 2 146 6 197 2 148 2 423 2 258 2 764 2 702 2 704 2 772 2 15 2 333 4 332 4 156 2 541 2 718 4 602 2 164 2 163 2 343 2 342 2 26 4 84 4 794 2 30 2 491 6 665 4 802 4 280 2 349 2 736 2 450 2 866 2 290 2 452 2 403 4 38 2 622 2 455 2 404 4 135 2 683 2 458 2 821 2 363 2 576 2 98 2 412 2 580 6 636 2 106 2 695 6 755 2 883 4 55 4 
582 2 698 2 370 4 311 2 644 12 6 2 146 6 197 2 148 2 423 2 258 2 764 2 702 2 704 2 382 2 772 2 15 2 333 4 332 4 156 2 541 2 718 4 602 2 164 2 163 2 343 2 342 2 26 4 84 4 794 2 30 2 491 6 665 8 802 6 280 2 349 2 736 2 450 2 866 2 290 2 452 2 403 4 38 2 455 2 404 4 135 2 683 2 458 2 821 2 363 2 576 2 98 2 412 2 580 6 636 2 106 2 695 6 755 2 883 4 55 4 
582 2 698 2 370 4 311 2 644 12 6 2 146 10 197 2 148 2 423 2 258 2 764 2 702 2 704 2 382 2 772 2 15 2 333 4 332 4 156 2 541 2 718 4 602 2 164 2 163 2 343 2 342 2 26 4 84 4 794 2 30 2 491 6 665 8 802 6 280 2 349 2 736 2 450 2 866 2 290 2 452 2 403 4 38 2 622 2 455 2 404 4 135 2 683 2 458 2 821 2 363 2 576 2 98 2 412 2 580 8 636 2 106 2 695 8 755 2 883 4 55 8 
582 2 698 2 370 4 311 2 644 12 6 2 146 10 197 2 148 2 423 2 258 2 764 2 702 2 704 2 382 2 772 2 15 2 333 4 332 4 156 2 541 2 718 4 602 2 164 2 163 2 343 2 342 2 26 4 84 4 794 2 30 2 491 6 665 8 802 6 280 2 349 2 736 2 450 2 866 2 290 2 452 2 403 4 38 2 455 2 404 4 135 2 683 2 458 2 821 2 363 2 576 2 98 2 412 2 580 6 636 2 106 2 695 6 755 2 883 4 55 8 
418 2 644 46 6 2 5 2 646 2 197 4 423 2 198 7 652 2 208 6 15 2 433 2 19 2 657 1 21 2 213 4 437 6 26 4 30 2 665 2 444 6 672 4 446 2 449 2 452 2 38 2 455 2 683 2 458 2 238 2 462 1 47 2 463 1 466 2 695 12 54 6 697 2 698 2 699 6 254 2 64 6 256 4 258 2 702 2 704 2 706 2 709 2 714 2 264 2 715 2 483 2 77 2 718 8 720 2 84 4 491 24 86 6 278 6 493 2 726 2 496 2 280 2 281 2 286 6 736 2 290 2 505 2 740 1 512 2 514 2 98 2 750 4 753 6 106 4 755 2 107 2 108 2 311 2 524 6 761 6 313 6 764 2 768 2 531 2 117 1 771 2 533 2 772 2 325 2 118 2 333 4 332 4 336 2 541 2 120 10 122 4 787 2 339 2 340 1 342 2 343 2 545 1 794 2 546 2 548 8 549 2 799 2 802 4 349 2 810 1 355 12 814 2 135 4 816 2 572 7 821 2 359 4 138 2 363 2 576 2 140 2 580 8 829 2 581 6 582 2 370 6 145 2 587 2 146 2 837 4 147 2 148 2 839 6 377 6 156 4 851 2 159 1 602 2 164 2 163 2 603 2 394 2 607 6 183 2 866 4 403 6 622 4 627 2 404 4 405 2 406 2 868 6 871 2 188 6 633 2 412 2 636 2 638 8 883 4 
108 2 418 2 524 6 311 2 644 48 761 6 5 2 6 2 646 2 313 6 197 4 764 2 423 2 768 2 531 2 652 2 771 2 208 6 533 2 325 2 772 2 15 2 433 2 332 4 333 4 118 2 19 2 336 2 541 2 120 10 21 2 122 4 213 4 787 2 437 6 339 2 343 2 342 2 26 4 794 2 30 2 546 2 549 2 548 8 346 2 799 2 665 6 802 8 444 6 349 2 672 4 446 2 449 2 355 12 452 2 38 2 814 2 455 2 135 4 816 2 683 2 458 2 821 2 138 2 359 4 238 2 363 2 576 2 47 4 825 2 466 2 140 2 580 8 695 12 54 6 829 2 581 6 697 2 582 2 698 2 699 6 370 6 145 4 146 2 587 2 254 2 837 8 64 6 147 2 256 4 148 2 258 2 377 6 839 6 702 2 704 2 382 4 706 2 709 2 714 2 264 2 715 2 156 4 483 2 851 2 77 2 718 8 163 2 164 2 602 2 603 2 720 2 84 4 168 2 86 6 491 26 394 2 278 6 607 6 493 2 726 2 496 2 280 2 281 2 286 6 736 2 290 2 866 4 183 2 505 2 403 6 404 4 627 2 405 2 868 6 406 2 512 2 514 2 871 2 633 4 188 6 98 2 412 2 750 4 753 6 636 2 106 4 638 8 755 2 107 2 883 4 
108 2 418 2 524 6 311 2 644 48 761 6 5 2 6 2 646 2 313 6 197 4 764 2 423 2 768 2 531 2 652 2 771 2 208 6 533 2 325 2 772 2 15 2 433 2 332 4 333 4 118 2 19 2 336 2 541 2 120 10 21 2 122 4 213 4 787 2 437 6 339 2 343 2 342 2 26 4 794 2 30 2 546 2 549 2 548 8 346 2 799 2 665 6 802 8 444 6 349 2 672 4 446 2 449 2 355 12 452 2 38 2 814 2 455 2 135 4 816 2 683 2 458 2 821 2 138 2 359 4 238 2 363 2 576 2 47 4 825 2 466 2 140 2 580 8 695 12 54 6 829 2 55 4 581 6 697 2 582 2 698 2 699 6 370 6 145 4 587 2 254 2 146 6 837 8 64 6 147 2 256 4 148 2 258 2 377 6 839 6 702 2 704 2 382 4 706 2 709 2 714 2 264 2 715 2 156 4 483 2 851 2 77 2 718 8 163 2 164 2 602 2 603 2 720 2 84 4 168 2 86 6 491 26 394 2 278 6 607 6 493 2 726 2 496 2 280 2 281 2 286 6 736 2 183 2 290 2 866 4 505 2 403 6 404 4 627 2 405 2 868 6 406 2 512 2 514 2 871 2 188 6 633 4 98 2 412 2 750 4 753 6 636 2 106 4 638 8 755 2 107 2 883 4 
418 2 644 52 6 2 5 2 646 2 645 6 197 4 423 2 200 6 652 2 208 6 15 2 433 2 19 2 21 2 213 4 437 12 26 4 30 2 31 2 665 6 444 12 672 6 446 2 449 2 451 2 452 2 38 2 455 2 683 2 458 2 42 6 47 4 466 2 695 16 54 6 55 4 697 2 698 2 699 12 63 2 254 4 64 6 473 6 256 4 258 2 702 2 704 2 706 2 709 2 714 2 264 2 715 2 483 2 77 2 718 8 486 6 720 2 84 4 491 24 86 12 278 12 493 2 726 2 496 2 280 2 281 4 286 12 736 2 290 2 505 2 512 2 514 2 98 2 750 4 306 2 753 6 106 4 755 2 107 4 108 2 311 2 524 6 761 8 313 6 764 2 768 2 531 2 771 2 533 2 772 2 325 2 118 2 333 4 332 4 538 6 336 4 541 2 120 8 122 4 787 2 339 4 123 2 342 2 343 2 794 2 546 2 548 8 549 2 346 2 799 2 802 10 349 2 355 10 570 2 814 2 358 6 135 4 816 2 821 2 359 4 138 2 363 2 576 2 825 2 140 2 580 10 829 2 581 6 582 2 370 6 145 4 146 6 587 2 837 10 147 2 148 2 839 6 377 6 592 6 382 4 153 2 156 4 851 2 388 2 602 2 164 2 163 2 603 2 393 6 168 2 394 2 607 6 860 2 866 4 183 2 403 6 622 2 627 2 404 4 405 2 406 2 868 6 871 2 633 4 188 8 412 2 636 2 638 12 883 4 
665 6 802 6 698 2 280 2 370 2 349 2 644 4 146 4 148 2 764 2 258 2 290 2 866 2 704 2 382 2 455 2 683 2 333 4 332 4 541 2 718 2 412 2 163 2 164 2 602 2 343 2 26 2 84 2 636 2 580 6 30 2 695 4 755 2 55 4 883 2 
108 2 757 2 644 28 761 6 197 4 764 2 423 2 768 2 652 2 208 6 15 2 329 2 332 4 333 4 118 2 540 2 20 2 541 2 120 2 122 4 339 3 342 2 343 2 26 2 794 2 546 2 30 2 441 2 665 6 802 6 349 2 672 4 446 2 355 4 455 2 814 2 135 4 683 2 458 2 359 2 363 2 238 2 693 2 580 6 695 4 829 2 582 2 698 2 370 2 254 3 146 2 148 2 258 2 702 2 704 2 382 2 844 2 152 3 709 2 714 2 264 2 718 2 602 2 164 2 163 2 603 2 720 2 84 2 491 24 88 2 496 2 280 2 284 2 290 2 866 2 183 2 403 6 627 2 406 2 512 2 871 2 188 6 412 2 750 4 636 2 638 8 755 2 883 2 107 3 
566 2 764 2 636 2 
566 2 764 2 636 2 
192 2 108 2 524 2 644 24 761 2 197 4 764 6 423 2 765 4 768 2 652 2 208 6 772 2 775 4 15 2 118 2 333 4 332 4 541 2 120 2 21 2 122 4 213 2 24 4 26 2 794 2 546 2 31 4 347 2 665 6 801 2 802 12 446 2 564 2 809 2 566 2 677 2 355 4 452 2 38 2 455 2 135 4 683 4 458 2 821 2 138 2 359 6 363 2 47 4 243 2 52 2 580 12 695 16 829 2 696 2 55 4 582 2 370 4 145 4 587 4 254 2 146 6 837 4 147 2 256 2 374 2 148 2 150 2 702 2 842 2 382 4 709 2 714 2 264 2 156 4 718 4 603 2 720 2 84 2 491 16 496 2 182 2 183 2 866 4 403 6 739 2 622 4 404 4 627 2 406 2 296 2 512 2 871 2 748 2 633 4 188 2 98 2 750 4 415 2 636 4 106 2 638 2 755 2 883 2 
418 2 334 2 524 2 850 2 268 2 644 4 120 2 363 2 6 2 213 2 809 2 374 2 355 2 549 2 322 2 491 2 696 2 
108 2 524 2 644 24 761 2 197 4 764 6 423 2 765 4 768 2 652 2 208 6 772 2 775 4 15 2 118 2 333 4 332 4 541 2 21 2 122 4 24 4 26 2 794 2 546 2 31 4 347 2 665 6 666 2 802 12 446 2 564 2 809 2 566 2 677 2 355 2 452 2 38 2 455 2 135 4 683 4 458 2 821 2 687 2 138 2 359 6 363 2 47 4 243 4 52 2 828 2 580 12 695 16 829 2 696 2 55 4 582 2 370 4 145 4 587 4 254 4 146 6 837 4 147 2 256 2 374 2 148 2 150 2 702 2 381 2 842 2 382 4 709 2 714 2 264 2 156 4 596 2 718 4 603 2 720 2 84 2 491 16 496 2 736 2 183 2 866 4 403 6 622 4 404 4 627 2 406 2 296 2 512 2 871 2 748 2 633 4 188 2 98 2 750 4 415 2 636 4 106 4 638 2 755 2 883 2 
108 2 419 2 524 2 644 24 761 2 197 4 764 6 423 2 765 4 768 2 652 2 208 6 772 2 775 4 15 2 118 2 333 4 332 4 541 2 120 2 21 2 122 4 213 2 24 4 26 2 794 2 546 2 31 4 347 2 665 6 802 12 446 2 564 2 809 2 566 2 677 2 232 2 355 4 452 2 38 2 455 2 135 4 683 4 458 2 821 2 138 2 359 6 363 2 47 4 243 2 52 2 580 12 695 16 829 2 696 2 55 4 582 2 370 4 145 4 587 4 254 2 146 6 837 4 701 2 147 2 256 2 374 2 148 2 150 2 702 2 842 2 382 4 709 2 714 2 264 2 156 4 718 4 603 2 720 2 84 2 491 16 609 2 173 2 496 2 736 2 183 2 866 4 403 6 622 4 404 4 627 2 406 2 296 2 512 2 871 2 748 2 633 4 188 2 98 2 750 4 415 2 636 4 106 4 638 2 755 2 883 2 
641 2 193 2 642 2 644 32 646 2 197 4 648 2 649 2 423 2 426 2 203 2 13 10 204 2 652 2 208 4 430 2 15 2 431 10 20 2 658 2 23 10 664 2 220 4 221 6 222 4 445 2 672 10 446 2 225 6 34 2 37 2 456 10 459 1 458 2 686 2 45 14 242 2 464 4 465 2 466 2 51 4 468 6 56 30 697 2 58 2 471 2 59 2 253 2 254 11 255 2 69 2 702 2 70 2 703 2 71 2 708 2 263 2 707 2 709 2 714 2 482 2 74 4 75 10 716 2 717 2 77 2 273 4 83 2 720 2 276 2 85 2 491 24 496 2 281 16 283 8 285 2 94 2 735 2 289 2 738 2 510 2 295 2 298 2 299 2 515 2 99 2 101 2 102 2 749 2 520 2 750 2 103 4 752 6 107 11 308 2 757 2 108 2 761 12 525 2 314 12 315 2 529 10 318 10 320 2 769 2 533 2 773 2 778 2 329 2 328 2 539 2 780 2 119 2 336 42 783 2 785 2 122 2 339 11 794 2 546 2 796 8 126 2 554 2 799 2 800 2 806 2 352 4 131 24 354 2 567 14 355 2 814 2 135 4 816 2 817 4 818 4 137 4 359 2 363 2 577 4 830 2 829 2 582 2 371 2 587 4 837 30 589 4 838 2 376 2 591 8 380 3 844 2 152 2 385 2 157 2 386 4 387 10 852 2 598 2 160 2 601 2 855 2 857 2 859 6 614 4 397 4 176 2 400 2 402 2 862 2 861 4 179 2 183 2 865 4 403 6 625 4 627 2 406 2 408 2 871 2 409 2 188 12 413 2 411 2 877 30 638 18 
643 2 445 2 644 2 761 2 672 2 254 2 862 2 648 2 318 2 380 2 71 2 814 2 456 2 430 2 75 4 336 6 785 2 188 2 339 2 411 2 85 2 638 2 491 2 107 2 
643 2 445 2 644 2 761 2 672 2 254 2 862 2 648 2 318 2 380 2 71 2 814 2 456 2 430 2 75 4 336 6 785 2 188 2 339 2 411 2 85 2 638 2 491 2 107 2 
643 2 445 2 644 2 761 2 672 2 254 2 862 2 648 2 318 2 380 2 71 2 814 2 456 2 430 2 75 4 336 6 785 2 188 2 339 2 411 2 85 2 638 2 491 2 107 2 
1 2 128 6 859 4 805 2 614 2 644 10 4 2 62 4 61 2 732 4 254 3 862 2 227 2 179 2 620 2 864 2 865 2 591 5 259 2 95 4 738 2 133 2 206 2 843 2 623 3 680 4 814 2 710 3 847 4 121 4 689 2 242 2 244 2 275 3 487 2 638 2 491 4 220 2 554 2 107 3 
1 2 128 6 859 4 805 2 614 2 644 10 4 2 62 4 61 2 559 2 732 4 254 2 862 2 227 2 179 2 620 2 864 2 865 2 591 4 259 2 95 4 738 2 133 2 206 2 843 2 623 2 680 4 625 2 814 2 710 2 817 2 847 4 121 4 689 2 242 2 244 2 275 2 487 2 638 2 491 4 220 2 554 2 107 2 
1 2 128 6 859 4 805 2 614 2 644 10 4 2 62 4 61 2 559 2 732 4 254 2 862 2 227 2 179 2 620 2 864 2 865 2 591 4 259 2 95 4 738 2 133 2 206 2 843 2 623 2 680 4 625 2 814 2 710 2 817 2 847 4 121 4 689 2 242 2 244 2 275 2 487 2 638 2 491 4 220 2 554 2 107 2 
1 2 128 6 859 4 805 2 614 2 644 10 4 2 62 4 61 2 559 2 732 4 254 2 862 2 227 2 179 2 620 2 864 2 865 2 591 4 259 2 95 4 738 2 133 2 206 2 843 2 623 2 680 4 625 2 814 2 710 2 817 2 847 4 121 4 689 2 242 2 244 2 275 2 487 2 638 2 491 4 220 2 554 2 107 2 
1 2 128 6 859 4 805 2 614 2 644 10 4 2 62 4 61 2 559 4 732 4 254 2 862 2 227 2 179 2 620 2 864 2 865 2 591 4 259 2 95 4 738 2 133 2 206 2 843 2 623 2 680 4 625 4 814 2 710 2 817 4 847 4 121 4 689 2 242 2 244 2 275 2 487 2 638 2 491 4 220 2 554 2 107 2 
23 2 184 2 390 2 267 2 27 2 597 2 105 2 
310 2 119 2 267 2 301 2 798 2 366 2 
699 2 644 10 351 2 836 2 621 2 149 2 202 2 702 2 507 2 235 2 846 2 684 2 713 2 43 2 630 2 270 1 158 2 81 1 189 1 791 2 53 2 795 1 491 8 551 2 831 2 885 1 
859 11 421 2 195 2 614 6 644 6 559 2 525 2 372 2 808 2 179 5 228 1 864 2 865 6 591 13 738 5 96 2 625 4 817 5 847 4 137 2 295 2 577 1 874 2 242 5 854 4 274 2 468 3 103 2 247 2 491 6 220 6 554 5 
497 2 331 2 557 2 644 1 575 2 744 2 121 2 732 2 448 2 660 4 440 7 190 1 489 2 427 2 292 2 569 2 491 1 680 2 
331 2 497 4 557 2 575 2 121 2 744 4 732 2 448 2 660 4 440 6 489 2 427 4 292 2 569 2 680 2 
331 8 497 8 557 2 644 1 575 2 121 2 744 8 732 2 448 6 660 4 440 10 190 1 489 2 427 8 292 2 569 2 491 1 680 2 
497 2 557 2 575 2 121 2 744 2 732 2 660 2 440 2 489 2 427 2 292 2 569 2 680 2 
417 6 309 2 108 42 523 6 2 4 194 2 312 13 644 116 762 2 112 2 647 6 115 6 114 4 424 6 652 14 323 4 208 164 537 2 777 2 776 8 327 10 654 2 17 4 211 4 784 4 543 18 212 6 122 62 217 26 344 2 124 12 125 8 546 42 345 2 797 4 130 18 129 8 555 6 668 2 669 4 804 2 556 26 224 10 353 8 230 6 676 2 132 50 134 2 571 6 40 6 236 4 41 2 44 24 574 4 46 2 49 2 578 2 827 6 694 12 470 6 368 12 250 4 583 6 833 12 584 4 474 8 475 6 840 2 378 2 379 6 261 4 384 26 709 8 712 1 480 12 595 4 266 2 484 6 271 6 78 9 853 6 79 6 161 8 82 2 485 28 488 2 605 2 490 48 167 2 491 104 722 10 723 2 610 6 494 6 612 5 858 4 91 24 172 2 499 5 613 14 398 6 731 6 615 6 177 2 733 2 401 6 863 24 503 2 291 4 508 4 97 6 869 12 871 14 745 2 300 26 872 6 746 12 747 2 516 6 876 2 518 66 414 4 750 74 637 2 
108 1 858 2 668 2 835 2 396 2 644 20 586 2 401 2 733 2 424 2 676 2 11 2 383 2 652 2 208 15 709 2 236 2 779 2 480 2 537 2 434 2 407 2 871 2 460 2 269 2 574 2 484 2 122 8 632 2 747 2 599 2 161 14 216 2 100 2 518 2 578 2 604 2 124 2 750 8 546 1 368 2 392 2 491 20 723 2 
709 2 236 2 858 2 108 4 668 2 871 2 644 10 574 2 122 4 733 2 747 2 619 2 161 4 604 2 750 4 546 4 491 10 652 2 723 2 208 10 
108 10 2 4 194 2 312 2 644 28 112 2 424 4 652 2 208 38 709 2 480 6 537 2 266 2 543 2 484 4 122 14 853 2 78 6 161 14 82 2 790 2 485 10 604 2 124 6 218 2 167 2 125 6 546 10 491 26 345 2 723 2 610 4 494 4 130 10 612 2 858 2 555 2 668 2 804 2 499 2 613 2 615 2 733 2 401 4 230 2 508 2 134 2 571 2 236 2 41 2 871 2 574 2 46 2 747 2 410 2 518 8 578 2 750 14 827 2 470 4 368 6 250 4 
532 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArithmeticException 113 43 251 345 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 17 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 402 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 405 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 341 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 273 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 273 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 273 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 273 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 273 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 106 4 167 208 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 157 183 199 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 157 183 199 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 157 183 199 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 157 183 199 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3_14()Z
daikon.ModBitTracker:num_samples()I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I | CONSTANT | 860 | 0 -> -1
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:gt(II)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z | CONSTANT | 23955 | 1 -> 0
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:eltsLTE([II)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:ConstructorDeclaration()Ljtb.syntaxtree.ConstructorDeclaration;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE:sign(I)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:readChar()C
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_163()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern:intern([D)[D
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:lt(II)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltwiseGT([I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:setDiff([I[I)[I
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLT([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:noDups([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_16(I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGTE([II)Z
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J | OPERATOR | 13933 | > -> <=
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:pow(II)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 156850 | if (x) -> if (!x)
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_89()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:lte(II)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3_3()Z | STATEMENT | 186144 | stmt -> ;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:size()I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern:intern([J)[J
daikon.Quant:subsetOf([J[J)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:gte(II)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaCharStream:FillBuff()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_85()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_50()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ModBitTracker:split(I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_56()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:lexGT([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3_15()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_161()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:memberOf(S[S)Z
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | RETURN | 25109 | return null
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13809 | = null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaCharStream:BeginToken()C
daikon.Quant:pairwiseEqual([I[I)Z | STATEMENT | 165422 | stmt -> ;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:ne(II)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
305 2 1 2 285 2 229 2 93 2 230 2 414 2 358 2 390 2 5 2 71 2 74 2 313 4 14 2 241 4 398 2 315 6 48 2 139 2 202 2 61 2 302 2 388 2 
305 4 241 12 315 14 229 8 28 2 93 5 357 4 414 8 358 4 48 4 80 6 270 2 139 4 384 4 172 6 240 2 388 8 
228 2 251 4 207 2 355 10 180 4 70 4 330 6 149 2 72 2 152 2 209 2 101 2 424 2 75 4 156 2 129 2 340 2 214 2 43 2 428 2 318 8 345 2 79 2 220 2 108 2 134 2 49 2 164 10 113 8 322 2 82 4 437 4 411 60 171 4 276 2 87 2 201 2 
308 2 36 2 334 2 125 2 236 2 401 2 343 2 18 2 319 2 132 2 
17 2 
305 16 229 32 286 2 414 32 252 4 93 22 357 4 358 16 390 18 3 2 233 4 360 6 74 2 313 6 336 6 241 48 397 2 398 4 315 53 219 2 109 4 48 16 80 6 406 2 346 4 50 6 195 6 137 2 323 8 139 16 384 4 385 4 275 4 172 6 277 2 388 32 281 6 122 4 90 4 
209 2 318 2 330 2 
188 10 41 2 147 2 344 2 432 2 181 2 182 2 359 2 407 22 22 2 350 2 337 2 159 2 314 2 
16 2 235 4 186 2 248 2 252 2 237 2 367 2 148 2 122 2 
399 2 91 2 329 2 294 2 393 2 115 2 117 6 143 6 301 2 300 2 339 6 
54 2 306 4 185 2 402 2 298 2 94 2 412 2 376 2 12 2 
305 10 65 2 229 16 93 12 414 16 252 6 358 10 179 2 390 8 416 4 233 6 333 8 74 4 313 10 128 2 241 26 398 6 315 28 373 2 191 4 48 10 137 2 270 4 436 2 139 10 83 2 388 16 281 8 122 6 63 8 
405 2 
125 2 
25 2 
311 2 122 2 
210 2 133 2 122 4 
421 2 427 2 165 2 341 2 
226 2 225 4 327 36 0 8 123 2 2 36 331 2 6 2 124 36 10 10 9 20 126 4 13 2 15 2 130 2 342 22 243 36 19 14 20 2 247 2 21 14 140 2 349 2 142 2 141 2 144 2 352 2 354 2 29 4 30 2 31 2 34 28 33 4 150 4 253 14 361 2 254 20 362 4 255 4 364 4 153 26 38 2 154 36 39 34 155 2 40 36 260 118 261 2 372 2 371 2 44 2 262 2 264 4 45 4 161 2 375 44 379 2 51 2 53 20 269 2 271 4 382 4 383 2 272 4 58 14 168 36 170 4 60 2 278 4 282 4 283 36 64 4 175 10 389 2 67 4 68 4 69 2 288 24 184 2 289 4 73 2 394 2 187 2 395 2 396 4 76 4 291 4 293 2 190 4 403 8 404 2 192 2 77 16 193 4 295 26 194 4 410 118 200 2 86 8 88 2 304 2 203 36 204 4 92 2 309 2 415 2 96 6 98 10 418 4 419 6 100 4 422 2 103 118 425 20 426 22 211 16 212 4 316 2 105 4 216 2 429 36 218 74 110 14 321 2 222 2 223 4 439 36 118 2 325 4 
370 2 145 2 112 2 332 1 191 2 318 2 78 2 320 2 
112 2 32 2 320 2 
112 2 320 2 303 2 
438 2 391 2 338 2 
112 2 320 2 
438 2 246 2 
423 2 320 2 
438 2 430 2 338 2 
257 2 338 2 287 2 
24 2 215 2 338 2 
221 2 249 2 338 2 
417 2 338 2 111 2 
42 2 438 2 
258 2 320 2 
176 2 257 2 
24 2 11 2 
221 2 114 2 
356 2 111 2 
438 2 434 2 
387 2 111 2 
37 2 221 2 
24 2 232 2 
257 2 131 2 
290 2 438 2 430 2 338 2 
290 2 438 2 430 2 409 2 338 2 
438 2 338 2 224 2 
197 2 438 2 338 2 
245 2 266 2 347 2 326 2 
52 2 213 2 292 2 377 2 234 2 
256 2 338 2 
370 2 363 2 178 2 318 2 
370 2 145 2 363 2 178 2 318 2 324 2 
370 2 112 2 191 2 318 2 116 2 320 2 
62 2 121 2 
370 2 191 2 318 2 381 2 
221 2 206 2 
111 2 173 2 
257 2 169 2 
24 2 84 2 
24 2 119 2 111 2 
24 2 111 2 136 2 
328 2 24 2 111 2 
24 2 135 2 111 2 
284 2 99 6 370 2 318 2 46 2 435 2 408 2 89 6 
205 2 438 2 
104 2 320 2 338 2 
320 2 250 2 
239 2 
421 2 427 2 165 2 273 2 
421 2 427 2 165 2 273 2 
307 2 217 2 351 2 
307 2 217 2 351 2 
421 2 427 2 165 2 273 2 
421 2 427 2 165 2 273 2 
421 2 427 2 165 2 273 2 
369 2 27 2 106 2 95 2 4 2 380 2 208 2 167 2 366 2 85 2 26 2 122 2 
259 2 312 2 348 2 265 2 274 2 420 2 
259 2 23 2 392 2 146 2 297 2 310 2 431 2 
227 2 413 2 174 2 66 2 252 8 231 2 97 2 7 2 365 1 189 2 400 1 244 2 378 2 81 2 55 2 56 2 57 2 198 1 299 2 59 2 386 2 87 1 201 1 279 2 280 2 122 10 
305 6 229 6 177 2 252 6 414 6 93 1 358 6 390 1 233 2 360 4 335 2 158 2 127 2 241 12 397 1 315 15 47 2 162 2 48 6 268 2 323 2 138 2 139 6 384 2 172 4 388 6 440 2 122 6 281 4 90 2 
160 2 242 2 263 2 107 2 35 2 267 2 196 2 8 3 102 2 166 2 238 2 120 2 368 2 
160 2 317 2 242 2 252 1 263 2 107 2 163 2 35 4 267 2 151 1 196 2 8 6 102 2 166 2 238 2 120 2 122 1 368 2 
160 2 317 2 242 4 263 2 107 2 163 2 35 4 267 2 196 2 8 6 102 4 166 2 238 2 120 2 368 4 
160 2 317 6 242 8 252 1 263 2 107 2 163 8 35 4 267 2 151 1 196 2 8 10 102 8 166 2 238 2 120 2 122 1 368 8 
183 2 199 2 353 1 252 2 157 2 374 1 433 2 122 2 
252 2 199 2 433 2 157 2 122 2 183 2 
252 2 199 2 433 2 157 2 122 2 183 2 
252 2 199 2 433 2 157 2 122 2 183 2 
296 2 

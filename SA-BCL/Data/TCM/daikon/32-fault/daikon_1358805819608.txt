#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 720 (381,548) 295 (54,205,500,518,650,670,703) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 720 (381,548) 295 (54,205,500,518,650,670,703) 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.NullPointerException 720 (381,548) 295 (54,205,500,518,650,670,703) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (179,651) (179,651) (11,96,253,413,520) (11,96,253,413,520) (11,96,253,413,520) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.IllegalArgumentException (217,465) (217,465) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 592 (40,716) (40,716) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 452 195 562 264 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 254 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 882 735 806 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 882 735 806 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eq(JJ)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_53()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaCharStream:readChar()C
utilMDE.MathMDE:mod_positive(JJ)J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
jtb.JavaCharStream:backup(I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE:sum([I)I
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ModBitTracker:split(I)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:eltsGT([II)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_1()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfo:name()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.PptSlice1:num_samples()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:lte(II)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsEqual([II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:eq(FF)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | CONDITION | 281963 | if (x) -> if (!x)
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:ne(II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:slice([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eq(II)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 121018 | = null
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_48()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:size()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:subarray([III)[I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 17506 | if (x) -> if (!x)
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:jj_3R_54()Z | STATEMENT | 166542 | stmt -> ;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:hashCode()I
daikon.Debug:logOn()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ValueTuple:size()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:justified()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.Invariant:prob_and(DD)D
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ProglangType:isIntegral()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | CONDITION | 1462 | if (x) -> if (!x)
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:isSubset([D[D)Z | OPERATOR | 63684 | < -> >
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_16()Z
daikon.ModBitTracker:num_samples()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:subsetOf([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Ppt:Ppt()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:gt(II)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional; | RETURN | 7329 | return null
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:format()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern:intern([I)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariants:Invariants()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:concat([I[I)[I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:indexOf([II)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13739 | = null
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice1:arity()I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7310 | = null
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice2:arity()I
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gte(II)Z
utilMDE.Intern:intern([J)[J
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:subsetOf([F[F)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 3291 | = null
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptName:isEnterPoint()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern:numIntArrays()I
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE:sign(I)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.Invariant:logOn()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_50()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:arity()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsFloat()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ModBitTracker:num_vars()I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 27721 | return null
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:memberOf(D[F)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:subsetOf([D[D)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.ProglangType:isFloat()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_3R_52()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:sameLength([I[I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Invariant:logDetail()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
545 2 741 2 198 2 445 2 179 2 868 2 276 4 651 2 47 2 
581 2 687 6 21 2 678 2 723 6 871 2 444 2 458 2 512 6 715 2 417 2 
614 2 119 2 120 4 307 2 761 4 383 4 771 2 579 2 895 2 
518 2 548 2 720 2 298 2 695 2 295 2 
824 4 109 6 
870 2 
518 2 548 2 720 2 298 2 150 2 510 2 247 2 709 2 210 2 695 2 728 2 790 2 295 2 
166 6 880 2 205 4 548 8 650 4 298 8 720 12 381 4 827 2 829 14 691 4 412 5 832 6 819 4 528 2 295 8 865 4 
404 2 758 2 325 2 489 2 737 2 629 2 630 10 328 4 300 2 154 2 14 4 766 2 129 4 541 4 803 2 284 4 74 2 636 4 255 2 498 4 582 2 719 4 290 62 336 2 108 14 808 8 260 4 456 2 786 10 525 6 873 2 400 2 114 2 558 4 727 2 597 4 146 2 791 2 463 4 148 4 
734 2 881 2 706 2 831 2 748 2 519 2 169 2 870 2 263 2 202 2 
89 2 273 2 238 2 704 2 702 2 66 2 350 2 328 4 94 2 353 2 572 2 123 2 447 2 129 2 542 2 635 2 74 2 777 2 422 2 868 2 808 2 25 2 590 4 49 2 269 2 820 2 726 2 847 4 848 2 147 2 58 2 379 2 
731 6 205 4 298 14 703 8 650 4 381 6 736 2 651 4 829 19 412 8 832 6 865 6 451 2 518 2 166 6 548 14 720 20 455 2 691 6 523 6 500 2 179 4 819 6 695 2 54 4 295 14 
582 2 808 2 525 2 
477 10 44 2 1 2 508 2 275 2 454 2 765 2 371 2 560 2 645 22 101 2 774 2 433 2 837 2 
851 2 345 2 563 1 511 1 568 1 11 2 303 2 860 2 680 1 862 5 415 2 576 2 634 1 253 2 745 2 418 1 637 2 194 6 311 2 420 4 257 2 520 2 138 1 480 2 423 2 751 1 482 2 588 4 314 1 198 2 267 2 817 2 693 2 319 4 595 2 320 2 527 4 822 5 598 1 323 2 378 2 529 5 204 2 649 2 151 1 651 24 382 2 152 2 442 1 657 2 836 1 769 2 662 2 450 6 164 1 718 3 335 2 289 1 393 2 721 1 341 2 179 22 724 2 503 1 53 2 676 4 
171 2 
332 2 651 2 
397 2 651 4 357 2 
730 2 505 6 118 2 627 14 466 2 244 2 569 2 628 2 6 2 469 10 351 8 9 50 471 14 414 2 71 10 249 20 308 2 474 8 133 2 475 10 517 14 866 50 77 6 360 4 361 10 20 2 688 8 312 2 22 18 365 2 425 2 427 2 143 2 810 8 589 14 197 4 29 2 268 8 874 2 486 2 85 2 201 2 86 18 32 2 823 14 203 4 487 2 760 2 437 4 533 6 277 2 35 14 91 2 764 2 654 2 37 4 212 2 492 14 100 2 282 2 768 4 714 14 41 4 770 2 772 14 165 2 665 2 392 8 103 10 781 14 170 2 228 4 172 50 337 2 783 10 175 2 553 6 177 2 112 4 294 6 501 2 56 4 181 14 
239 2 788 2 127 1 877 2 
239 2 26 2 
0 2 852 2 776 2 856 2 749 4 624 2 825 2 626 4 196 2 248 2 710 2 51 2 213 2 660 2 334 2 645 6 516 2 685 2 
483 2 877 2 
259 2 611 2 808 2 580 2 
259 2 199 2 611 2 808 2 580 2 663 2 
259 2 239 2 252 2 808 2 278 2 142 2 
447 2 532 2 
259 2 252 2 808 2 234 2 
95 2 130 2 
34 2 343 2 
421 2 669 2 
478 2 87 2 
478 2 343 2 551 2 
478 2 343 2 45 2 
478 2 343 2 236 2 
478 2 343 2 349 2 
465 2 122 2 217 2 889 6 285 2 259 2 808 2 555 2 
225 2 229 2 
759 2 259 2 199 2 239 2 252 2 808 2 142 2 
239 2 125 2 142 2 
239 2 440 2 142 2 
207 2 877 2 229 2 
239 2 142 2 
161 2 229 2 
239 2 407 2 
844 2 877 2 229 2 
669 2 877 2 279 2 
478 2 38 2 877 2 
130 2 877 2 849 2 
343 2 242 2 877 2 
72 2 229 2 
239 2 491 2 
669 2 366 2 
478 2 411 2 
130 2 490 2 
343 2 756 2 
258 2 229 2 
530 2 343 2 
316 2 130 2 
478 2 98 2 
782 2 669 2 
815 2 844 2 877 2 229 2 
815 2 844 2 877 2 229 2 292 2 
877 2 81 2 229 2 
877 2 229 2 428 2 
403 2 384 2 266 2 344 2 
335 2 
345 2 124 2 576 6 682 2 134 2 256 2 257 2 480 2 140 2 817 2 267 2 693 2 595 2 698 2 822 2 598 2 378 2 603 2 152 2 39 2 497 2 291 2 841 2 179 26 50 2 724 2 52 2 503 2 618 2 851 2 61 2 858 2 410 2 303 2 860 2 415 6 862 4 189 2 514 2 309 2 637 2 194 4 420 4 311 2 76 2 522 2 423 2 526 4 429 2 198 2 319 4 527 4 320 2 204 2 529 2 649 2 326 2 651 26 657 2 769 2 773 2 450 6 222 2 547 2 105 8 226 2 668 2 110 2 891 2 556 2 341 6 116 4 676 4 894 4 
345 2 566 2 576 6 682 2 134 2 256 2 257 2 480 2 140 2 482 2 817 2 267 2 693 2 595 2 698 2 822 2 598 2 378 2 382 2 603 2 152 2 39 2 43 2 497 2 291 2 841 2 179 26 50 2 724 2 52 2 503 2 618 2 851 2 61 2 858 2 303 2 860 2 69 2 415 6 862 4 189 2 514 2 309 2 637 2 194 6 420 4 311 2 76 2 522 2 423 2 526 4 429 2 198 2 319 4 527 4 320 2 204 2 529 2 649 2 651 26 657 2 769 2 773 2 450 6 222 2 547 2 105 8 226 2 668 2 110 2 891 2 556 2 341 6 461 2 116 4 676 4 894 4 
633 2 
62 2 878 2 
851 2 296 2 620 2 857 2 678 2 512 6 251 2 473 2 416 4 73 8 310 8 193 4 581 2 311 2 19 2 137 2 687 6 21 4 689 2 811 2 369 2 813 2 31 2 592 2 693 2 527 2 757 2 378 2 434 4 488 2 651 12 441 2 707 2 152 2 280 10 444 4 330 4 539 2 40 2 388 4 716 2 769 2 390 2 450 4 221 2 167 2 499 2 339 2 174 4 842 2 457 2 723 6 554 2 179 6 231 2 724 2 233 2 729 2 57 2 676 2 
167 2 857 2 137 2 499 2 679 2 457 2 280 2 484 2 592 2 231 2 251 2 674 4 40 2 716 2 233 2 73 2 729 2 310 2 221 2 
434 4 167 2 21 2 441 2 174 4 339 2 369 2 723 2 444 2 512 2 31 2 539 2 592 2 231 2 40 2 716 2 390 2 193 2 
851 2 296 2 620 2 857 2 678 2 512 4 251 2 473 2 416 4 73 4 310 4 193 4 311 2 19 2 137 2 687 6 21 4 689 2 811 2 369 2 813 2 31 2 592 2 693 2 527 2 757 2 378 2 434 4 488 2 651 12 441 2 707 2 152 2 280 6 444 4 330 4 539 2 40 2 388 4 716 2 715 2 769 2 390 2 450 4 221 2 167 2 499 2 339 2 174 4 842 2 457 2 723 6 554 2 179 6 231 2 724 2 233 2 729 2 57 2 676 2 
851 2 296 2 620 2 857 2 678 2 512 6 251 2 473 2 416 4 73 4 310 4 193 4 311 2 19 2 137 2 687 6 21 4 689 2 811 2 369 2 813 2 31 2 592 2 693 2 527 2 757 2 378 2 434 4 488 2 651 12 441 2 707 2 152 2 280 6 444 4 330 4 539 2 40 2 388 4 716 2 769 2 390 2 450 4 221 2 167 2 499 2 339 2 174 4 842 2 457 2 723 4 554 2 458 2 179 6 231 2 724 2 233 2 729 2 57 2 676 2 
851 2 296 2 620 2 857 2 678 2 512 6 251 2 473 2 416 4 73 8 310 4 193 4 581 2 311 2 19 2 137 2 687 6 21 4 689 2 811 2 369 2 813 2 31 2 592 2 693 2 527 2 757 2 378 2 434 4 488 2 651 12 441 2 707 2 152 2 280 6 444 4 330 4 539 2 40 2 388 4 716 2 769 2 390 2 450 4 221 2 167 2 499 2 339 2 174 4 842 2 457 2 723 6 554 2 179 6 231 2 724 2 233 2 729 2 57 2 676 2 
851 2 296 2 620 2 857 2 678 2 512 8 251 2 473 2 416 4 73 8 310 8 193 4 581 2 311 2 19 2 137 2 687 8 21 4 689 2 811 2 369 2 813 2 31 2 592 2 693 2 527 2 757 2 378 2 434 4 488 2 651 12 441 2 707 2 152 2 280 10 444 4 330 4 539 2 40 2 388 4 716 2 769 2 390 2 450 4 221 2 167 2 499 2 339 2 174 4 842 2 457 2 723 6 554 2 458 2 179 6 231 2 724 2 233 2 729 2 57 2 676 2 
851 2 296 2 620 2 857 2 678 2 512 6 251 2 473 2 416 4 73 8 310 8 193 4 581 2 311 2 19 2 137 2 687 6 21 4 689 2 811 2 369 2 813 2 31 2 592 2 693 2 527 2 757 2 378 2 434 4 488 2 651 12 441 2 707 2 152 2 280 10 444 4 330 4 539 2 40 2 388 4 716 2 769 2 390 2 450 4 221 2 167 2 499 2 339 2 174 4 842 2 457 2 723 6 554 2 179 6 231 2 724 2 233 2 729 2 57 2 676 2 
678 4 250 1 251 2 473 4 16 6 684 6 257 2 19 2 480 2 687 12 21 4 689 2 482 2 261 2 28 1 30 2 267 2 31 2 693 2 698 2 701 8 488 2 707 2 280 2 40 2 716 2 497 2 499 2 723 4 724 2 729 2 57 2 507 2 296 2 733 10 61 2 299 2 303 2 302 2 512 8 515 2 73 2 311 2 75 2 79 2 521 2 82 1 526 4 753 2 319 4 527 4 320 12 322 2 529 2 538 2 330 8 539 2 331 2 99 2 332 6 769 2 773 2 547 2 104 6 105 4 778 2 339 2 340 2 111 6 552 1 554 2 341 6 559 2 345 2 347 6 576 8 805 2 137 2 811 4 369 2 813 2 817 2 592 2 594 4 595 2 822 2 378 2 382 2 152 2 385 7 606 2 387 4 388 4 390 2 167 2 609 6 394 6 171 6 395 1 174 4 173 2 397 6 842 2 176 1 179 24 846 2 618 4 850 6 851 2 619 1 620 2 621 2 853 6 857 2 858 2 182 1 860 2 415 6 862 2 189 2 191 1 416 6 193 4 637 2 194 6 420 4 867 6 423 2 640 6 198 2 204 2 879 2 434 4 648 7 649 2 651 46 439 2 441 2 884 2 657 2 444 4 886 2 450 6 218 2 221 2 220 2 222 2 224 6 666 2 890 2 667 6 226 2 227 2 457 2 458 4 231 2 233 2 675 2 676 4 
345 2 347 6 678 4 251 2 473 4 576 8 16 6 684 6 581 4 19 2 257 2 805 2 687 12 137 2 480 2 21 4 689 2 261 2 482 2 811 4 369 2 813 2 30 2 267 2 817 2 31 2 592 2 693 2 594 4 595 2 822 2 698 2 378 2 701 8 488 2 382 2 707 2 152 2 280 2 387 4 606 2 388 4 40 2 716 2 390 2 497 2 167 2 609 6 394 6 499 2 171 6 173 2 174 4 842 2 397 6 723 8 179 26 724 2 846 2 729 2 57 2 850 6 618 4 851 2 296 2 507 2 620 2 853 6 733 10 621 2 61 2 857 2 299 2 858 2 302 2 303 2 860 2 512 8 862 2 415 6 189 2 515 2 416 6 73 6 193 4 637 2 194 6 420 4 311 2 75 2 867 6 521 2 79 2 423 2 640 6 753 2 526 4 198 2 319 4 320 12 527 4 322 2 879 2 529 2 204 2 434 4 649 2 651 48 439 2 884 2 441 2 538 2 657 2 444 4 330 8 331 2 539 2 888 2 332 6 886 2 99 2 769 2 218 2 773 4 450 6 220 2 221 2 222 4 224 6 666 2 547 4 104 6 549 2 890 2 105 8 778 2 667 6 226 2 227 2 339 2 340 2 457 2 111 6 554 2 341 6 231 2 559 2 116 2 675 2 233 2 676 4 
345 2 347 6 678 4 251 2 473 4 576 8 16 6 684 6 581 4 19 2 257 2 805 2 480 2 687 12 137 2 21 4 689 2 261 2 482 2 811 4 369 2 813 2 30 2 267 2 817 2 31 2 592 2 693 2 594 4 595 2 822 2 698 2 378 2 701 8 488 2 382 2 707 2 152 2 280 6 387 4 606 2 388 4 40 2 716 2 390 2 497 2 167 2 609 6 394 6 499 2 171 6 173 2 174 4 842 2 397 6 723 8 179 26 724 2 846 2 729 2 57 2 850 6 618 4 851 2 296 2 507 2 620 2 853 6 733 10 621 2 61 2 857 2 299 2 858 2 302 2 303 2 860 2 512 8 862 2 415 6 189 2 515 2 416 6 73 6 310 4 193 4 637 2 194 6 420 4 311 2 75 2 867 6 521 2 79 2 423 2 640 6 753 2 526 4 198 2 319 4 320 12 527 4 322 2 879 2 529 2 204 2 434 4 649 2 651 48 439 2 884 2 441 2 538 2 657 2 444 4 330 8 331 2 539 2 888 2 332 6 886 2 99 2 769 2 218 2 773 4 450 6 220 2 221 2 222 4 224 6 666 2 547 4 104 6 549 2 890 2 105 8 778 2 667 6 226 2 227 2 339 2 340 2 457 2 111 6 554 2 341 6 231 2 559 2 116 2 675 2 233 2 676 4 
678 4 251 2 15 2 473 4 16 12 684 6 257 2 19 2 687 16 480 2 21 4 689 2 482 2 261 2 30 2 267 2 31 2 693 2 698 2 701 8 488 2 707 2 280 6 40 2 716 2 715 2 497 2 499 2 723 10 724 2 729 2 57 2 507 2 296 2 733 8 61 2 299 2 303 2 302 2 305 2 512 10 515 2 73 6 310 4 311 2 75 2 79 2 521 2 526 6 753 2 319 4 527 4 320 10 322 2 529 4 538 2 330 8 331 2 539 2 332 12 769 2 773 4 547 4 104 6 549 2 105 10 778 2 339 2 340 2 111 12 554 2 341 8 559 2 116 2 345 2 347 6 792 6 567 6 795 2 797 2 576 12 581 4 805 2 137 2 139 6 811 4 369 2 813 2 817 2 592 2 594 4 595 2 822 4 378 2 382 2 152 2 834 2 156 6 606 2 387 4 388 4 607 6 390 2 167 2 609 6 610 6 394 12 840 6 171 12 174 4 173 2 396 6 842 2 397 12 179 24 846 2 618 4 850 6 851 2 620 2 621 2 853 6 855 6 857 2 858 4 860 2 415 8 862 4 189 4 416 6 193 4 637 2 194 6 420 4 867 6 423 2 640 6 198 2 876 2 431 2 204 2 879 2 434 4 649 2 651 52 439 2 441 2 884 2 657 2 444 4 888 2 886 2 450 6 218 2 221 2 220 2 222 4 224 6 666 2 890 2 667 6 226 2 227 2 457 2 672 2 458 2 231 2 233 2 675 2 676 4 
434 2 620 2 857 2 651 4 678 2 707 2 280 4 444 4 330 2 512 6 251 2 416 2 388 2 40 2 716 2 73 6 390 2 310 4 221 2 581 2 167 2 687 4 137 2 499 2 21 4 174 2 339 2 457 2 723 6 813 2 592 2 231 2 233 2 729 2 57 2 
345 2 678 2 251 2 576 8 581 2 257 2 687 4 480 2 137 2 21 4 364 2 482 2 813 2 817 2 267 2 592 2 693 2 595 2 821 3 698 2 822 3 378 2 382 2 707 2 152 2 604 2 280 2 386 2 388 2 40 2 716 2 390 2 497 2 167 2 499 2 174 2 723 6 179 24 724 2 729 2 57 2 618 2 851 2 620 2 733 2 857 2 303 2 860 2 413 2 512 6 415 6 862 3 743 2 416 2 73 6 637 2 194 6 311 2 420 4 747 2 423 2 526 4 198 2 319 4 527 4 320 4 204 2 529 3 434 2 649 2 651 28 657 2 444 4 96 2 330 2 99 2 769 2 450 6 221 2 335 2 226 2 339 2 457 2 554 2 341 6 231 2 893 2 233 2 676 4 
457 2 620 2 543 2 
457 2 620 2 543 2 
345 2 678 4 8 2 573 2 798 2 473 2 576 2 581 4 19 2 257 2 480 2 687 16 21 4 482 2 811 4 27 2 369 2 813 2 817 2 267 2 31 2 693 2 594 2 595 2 375 2 698 2 378 2 149 2 488 2 382 2 152 2 36 2 280 6 155 2 387 2 162 2 388 2 715 4 390 2 497 2 167 4 174 2 723 12 179 16 724 2 55 4 57 2 618 6 851 2 296 2 620 6 733 2 297 2 61 4 303 2 860 2 861 2 512 12 415 2 862 2 416 4 73 6 310 4 193 4 637 2 194 6 420 4 311 2 423 2 750 2 313 4 198 2 319 4 430 2 527 4 320 4 879 2 204 2 434 2 649 2 531 2 651 24 884 2 657 2 444 4 330 4 886 2 887 2 769 2 543 2 773 4 450 6 222 4 547 4 105 4 550 2 667 2 668 4 339 2 457 4 458 4 341 2 113 2 676 4 
700 2 733 2 297 2 550 2 667 2 62 2 651 4 141 2 587 2 173 2 539 2 331 2 179 2 887 2 387 2 320 2 769 2 
345 2 678 4 573 2 798 2 473 4 576 2 581 4 19 2 257 2 480 2 807 2 687 16 21 4 482 2 811 4 27 2 369 2 813 2 817 2 267 2 31 2 694 2 693 2 594 2 595 2 375 2 698 2 378 2 488 2 602 2 382 2 152 2 36 4 280 6 155 2 160 2 162 2 388 2 715 4 390 2 497 2 167 4 174 2 842 2 723 12 179 16 724 2 55 4 57 2 618 6 851 2 296 2 620 6 297 2 61 4 303 2 860 2 861 2 512 12 415 2 862 4 416 4 73 6 310 4 193 4 637 2 194 6 420 4 311 2 423 2 313 4 198 2 319 4 527 4 320 2 879 2 204 2 434 2 649 2 531 2 651 24 884 2 657 2 444 4 330 4 886 2 887 2 769 2 449 2 543 2 773 4 450 6 222 4 547 4 105 4 550 2 667 2 668 4 339 2 457 4 458 4 341 2 113 2 676 4 
345 2 678 4 245 2 573 2 798 2 473 4 576 2 581 4 19 2 257 2 480 2 687 16 21 4 367 2 482 2 811 4 27 2 369 2 813 2 817 2 267 2 31 2 693 2 594 2 595 2 375 2 698 2 378 2 488 2 382 2 152 2 36 2 280 6 155 2 387 2 162 2 388 2 715 4 390 2 497 2 167 4 174 2 842 2 723 12 613 2 179 16 724 2 55 4 57 2 618 6 851 2 296 2 620 6 733 2 297 2 61 4 303 2 860 2 861 2 512 12 415 2 862 2 416 4 73 6 310 4 193 4 637 2 194 6 420 4 311 2 423 2 643 2 313 4 198 2 319 4 527 4 320 4 879 2 204 2 434 2 436 2 649 2 531 2 651 24 884 2 657 2 444 4 330 4 886 2 887 2 769 2 543 2 773 4 450 6 222 4 547 4 105 4 550 2 667 2 668 4 339 2 457 4 458 4 341 2 113 2 676 4 
562 2 464 2 345 2 7 2 10 2 12 2 13 2 575 2 681 2 355 2 576 12 801 2 578 2 356 2 254 2 686 2 18 2 135 2 480 2 691 2 482 2 264 2 816 2 372 2 817 2 819 2 693 2 595 2 698 2 822 4 270 2 378 2 599 2 381 2 382 2 152 2 829 6 832 4 833 2 157 2 493 2 159 2 606 2 42 2 288 2 720 4 178 2 398 2 179 22 724 2 725 2 295 2 618 2 851 2 507 2 405 2 621 2 298 2 736 2 64 2 858 4 67 2 412 2 740 4 303 2 302 2 859 2 415 8 862 4 189 4 864 2 515 2 865 2 637 2 419 2 194 4 311 2 420 2 638 2 195 2 80 2 424 2 523 2 642 4 752 4 526 6 872 8 198 2 875 2 319 2 527 4 320 2 204 2 529 4 88 8 205 2 649 2 651 28 90 6 535 4 329 2 208 2 656 2 657 2 448 2 214 2 769 2 216 2 450 6 219 2 102 2 666 2 548 2 452 2 105 8 226 2 784 2 671 2 556 4 341 8 459 2 789 1 232 2 561 2 675 2 462 2 676 4 
241 2 651 2 243 2 470 3 443 2 415 2 862 3 189 6 540 2 659 2 281 4 576 2 17 2 226 2 584 2 690 2 368 2 526 2 341 2 179 2 84 2 822 3 647 2 529 3 
241 2 651 2 243 2 470 2 443 2 415 2 862 2 189 6 540 2 659 2 281 4 576 2 17 2 226 2 584 2 690 2 368 2 526 2 341 2 179 2 84 2 822 2 647 2 529 2 
241 2 651 2 243 2 470 2 443 2 415 2 862 2 189 6 540 2 659 2 281 4 576 2 17 2 226 2 584 2 690 2 368 2 526 2 341 2 179 2 84 2 822 2 647 2 529 2 
298 2 183 2 412 1 472 4 862 3 306 4 800 2 576 2 132 3 865 2 24 2 586 2 691 2 809 2 485 4 819 2 696 4 647 2 376 2 271 3 529 3 435 2 206 2 381 2 651 10 829 5 835 2 712 2 775 2 544 3 546 2 548 2 720 4 106 4 226 2 670 2 48 2 722 4 179 4 615 6 295 2 
435 2 298 2 206 2 381 2 651 10 183 2 829 4 412 2 472 4 835 2 306 4 862 2 712 2 800 2 576 2 132 2 865 2 544 2 775 2 546 2 548 2 720 4 106 4 226 2 586 2 24 2 670 2 48 2 809 2 691 2 523 2 722 4 485 4 179 4 819 2 696 4 376 2 647 2 615 6 271 2 699 2 529 2 295 2 
435 2 298 2 206 2 381 2 651 10 183 2 829 4 412 2 472 4 835 2 306 4 862 2 712 2 800 2 576 2 132 2 865 2 544 2 775 2 546 2 548 2 720 4 106 4 226 2 586 2 24 2 670 2 48 2 809 2 691 2 523 2 722 4 485 4 179 4 819 2 696 4 376 2 647 2 615 6 271 2 699 2 529 2 295 2 
435 2 298 2 206 2 381 2 651 10 183 2 829 4 412 2 472 4 835 2 306 4 862 2 712 2 800 2 576 2 132 2 865 2 544 2 775 2 546 2 548 2 720 4 106 4 226 2 586 2 24 2 670 2 48 2 809 2 691 2 523 2 722 4 485 4 179 4 819 2 696 4 376 2 647 2 615 6 271 2 699 2 529 2 295 2 
435 2 298 2 206 2 381 2 651 10 183 2 829 4 412 4 472 4 835 2 306 4 862 2 712 2 800 2 576 2 132 2 865 2 544 2 775 2 546 2 548 2 720 4 106 4 226 2 586 2 24 2 670 2 48 2 809 2 691 2 523 4 722 4 485 4 179 4 819 2 696 4 376 2 647 2 615 6 271 2 699 4 529 2 295 2 
274 2 556 2 625 2 793 2 33 2 235 2 153 2 
211 2 178 2 574 2 565 2 793 2 391 2 
117 2 346 2 732 2 348 2 438 2 651 10 534 2 794 2 571 1 92 2 708 2 158 2 190 1 16 2 495 1 803 1 802 2 163 2 838 2 78 2 479 2 812 2 179 8 892 2 146 1 378 2 
506 2 254 2 205 2 288 2 548 2 298 2 720 4 381 2 691 2 829 5 412 1 832 4 833 2 819 2 755 2 865 2 295 2 
60 2 106 2 826 2 536 2 653 2 409 2 524 3 185 2 186 2 485 2 83 2 696 2 502 2 
60 2 106 2 651 1 826 4 536 2 653 2 409 2 524 6 185 2 186 2 265 2 485 2 179 1 83 2 502 2 696 2 683 1 377 2 
60 4 106 2 826 4 536 2 653 2 409 4 524 6 185 2 186 2 265 2 485 2 83 2 696 2 502 4 377 2 
60 8 106 2 651 1 826 4 536 2 653 2 409 8 524 10 185 2 186 2 265 6 485 2 179 1 83 2 696 2 502 8 683 1 377 8 
237 4 240 2 121 3 3 6 4 4 5 2 352 4 354 6 126 12 128 12 577 6 131 6 476 22 804 6 806 2 362 13 363 2 481 12 585 2 482 20 262 2 144 6 692 6 370 6 814 6 818 6 817 4 374 6 596 6 697 6 380 6 601 6 705 2 382 20 830 1 711 2 605 4 494 6 717 4 287 2 168 8 46 2 612 2 843 2 179 78 616 5 617 6 59 6 854 4 509 12 735 2 738 4 63 2 65 4 408 2 301 4 631 6 184 2 742 42 70 6 187 3 188 6 863 6 513 4 744 6 194 88 420 36 746 2 869 6 426 4 315 6 754 2 319 42 318 12 321 12 324 6 432 6 204 10 649 10 882 2 651 90 93 2 885 6 655 2 537 6 215 12 661 12 223 6 779 2 453 6 780 4 338 2 230 1 342 4 460 4 115 12 
622 2 854 20 406 2 735 2 623 2 468 2 408 2 570 2 68 2 796 2 304 2 742 2 632 2 192 2 194 25 420 12 746 2 358 2 583 2 806 2 869 2 481 2 23 2 482 1 370 2 644 2 817 2 200 2 317 4 593 2 319 12 318 2 373 2 321 2 204 2 649 2 882 2 651 28 652 2 382 1 762 2 830 2 658 2 97 2 711 2 283 2 608 2 496 2 223 2 287 2 779 2 839 2 785 4 612 2 787 2 399 2 179 28 845 2 673 2 180 2 401 4 
237 4 564 4 2 10 3 4 467 10 352 4 246 4 799 2 126 14 128 6 577 4 131 4 476 30 804 4 136 2 806 2 359 4 362 10 481 10 585 2 482 30 262 4 144 16 692 4 370 4 817 2 374 4 596 6 145 10 697 4 272 8 600 8 380 4 601 4 382 28 828 16 494 4 713 2 283 2 389 2 717 4 287 2 168 6 46 2 612 2 293 2 843 2 179 70 616 8 617 4 59 4 504 2 854 14 735 2 509 24 738 4 739 16 63 4 65 4 408 2 301 4 631 4 742 24 70 4 188 8 863 4 513 4 744 8 194 104 420 36 746 2 639 32 869 4 426 4 315 4 754 4 318 10 319 44 646 4 321 10 324 4 432 4 204 6 649 6 327 2 882 2 651 78 883 2 763 8 655 2 93 2 885 4 537 4 209 4 446 8 333 4 661 10 215 8 664 2 223 4 779 2 453 4 780 4 107 4 342 4 460 4 115 24 
677 2 854 14 735 2 121 2 63 2 4 10 408 2 5 2 631 2 184 2 742 8 187 2 799 2 128 2 476 6 194 40 420 14 746 2 806 2 869 4 362 2 481 6 641 2 482 12 262 2 692 2 370 4 817 2 754 4 319 14 318 6 596 2 321 6 697 2 204 2 649 2 380 2 601 4 882 2 651 28 382 12 885 4 830 2 767 2 605 2 283 2 661 2 223 4 286 2 287 2 168 4 779 2 46 2 612 2 557 2 179 26 616 6 402 2 59 4 
591 2 

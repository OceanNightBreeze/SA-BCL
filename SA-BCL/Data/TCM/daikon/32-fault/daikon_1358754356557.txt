#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 596 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (141,477) 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 124 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (17,103,128,172,421) (17,103,128,172,421) (17,103,128,172,421) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 303 220 52 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 124 225 
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (141,477) 107 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (247,471) (475,561) (475,561) 
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 343 (247,471) (475,561) (475,561) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (247,471) (475,561) (475,561) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 343 (247,471) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 343 (247,471) (247,471) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 343 (247,471) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 302 570 213 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 447 525 511 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 447 525 511 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException (78,329) (78,329) 447 525 511 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 447 525 511 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24075 | return null
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:setEqual([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:gte(II)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22083 | stmt -> ;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:subsetOf([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.WeakHasherMap:size()I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isScalar()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:gt(II)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.PptSlice2:arity()I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:hashCode()I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptSlice0:arity()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:eltsGTE([II)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:ne(II)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoAux:hashCode()I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern([J)[J
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakHasherMap:processQueue()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ProglangType:isArray()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE:min([I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:union([I[I)[I
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:noDups([I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:lexLT([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:sum([[D)D
daikon.ModBitTracker:num_samples()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eq(DD)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.MathMDE:sign(I)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lt(II)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfo:relate_var()V
daikon.Ppt:Ppt()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:InvMap()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 12386 | = null
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22726 | = null
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaCharStream:backup(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:readChar()C | CONDITION | 5637 | if (x) -> if (!x)
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:lte(II)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair; | ASSIGN | 1906 | = null
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9684 | = null
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:eq(FF)Z
utilMDE.Intern:intern([I)[I
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:baseIsIntegral()Z
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15105 | if (x) -> if (!x)
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:sameLength([I[I)Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptSlice1:num_samples()I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | RETURN | 19030 | return null
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.JavaCharStream:BeginToken()C
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logOn()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Assert:assertTrue(Z)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:logOn()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.RootNode:RootNode()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:eltsGT([II)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:concat([I[I)[I
daikon.inv.Invariant:justified()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[F)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | RETURN | 17435 | return null
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quant:eltsLT([II)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:eltsLTE([II)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:memberOf(J[J)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ModBitTracker:num_vars()I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.ValueTuple:size()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:sorted([I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:memberOf(D[F)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99177 | return null
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
145 2 431 2 132 2 253 2 327 2 559 2 314 2 234 2 375 4 
344 2 231 6 405 2 382 2 138 2 272 2 294 4 273 2 541 6 299 2 596 2 
57 2 556 2 47 2 6 2 431 2 132 2 38 4 351 4 369 6 537 6 444 6 33 2 573 6 
151 6 1 6 313 8 44 2 155 5 367 5 28 6 431 5 474 3 350 2 595 1 542 9 524 15 204 1 479 1 108 1 357 6 565 3 305 2 255 11 586 2 131 14 326 11 132 5 22 2 490 4 148 3 149 3 
356 6 429 4 
240 2 
526 2 267 2 162 2 397 2 58 2 130 2 393 2 146 2 352 2 
1 4 151 4 155 4 235 4 357 5 565 2 348 2 28 4 255 8 246 2 30 4 131 12 326 8 542 8 265 6 524 14 94 6 
477 4 70 6 136 2 304 2 250 2 163 2 480 2 363 2 314 2 271 2 96 2 4 2 276 2 198 2 256 2 53 6 316 2 497 2 
345 2 240 2 242 2 579 2 478 2 251 2 411 2 531 2 587 2 395 2 
477 2 452 2 232 2 592 2 249 2 546 4 44 2 314 2 584 2 298 2 124 2 241 2 423 2 593 2 5 2 179 2 180 2 82 2 604 2 182 2 211 2 353 2 
1 12 151 12 313 6 155 12 116 2 28 12 367 4 431 4 61 8 30 4 542 24 384 2 450 2 265 6 524 42 505 4 479 2 269 2 357 15 235 4 389 6 255 24 586 2 239 4 74 6 131 36 326 24 132 4 490 6 148 4 94 6 149 10 
477 2 497 2 198 2 
296 2 362 2 252 2 195 2 347 2 337 2 196 22 245 2 282 2 403 10 141 2 190 2 84 2 319 2 
310 2 80 2 157 1 281 6 83 1 48 4 317 2 120 4 205 1 419 2 122 2 164 2 421 2 126 2 323 1 132 22 428 2 172 2 93 2 465 2 219 4 137 2 297 2 518 2 27 2 97 4 431 20 227 2 101 2 31 2 68 2 103 2 597 2 562 2 186 6 234 2 438 2 564 2 439 2 376 2 533 2 485 2 280 2 147 2 193 2 40 2 192 2 
365 2 
460 2 132 2 
173 2 132 4 215 2 
12 2 206 2 220 2 336 2 16 2 166 2 52 2 558 2 261 2 325 4 73 2 223 2 432 2 331 2 606 2 449 2 278 2 492 2 413 2 308 2 303 2 
484 2 399 1 580 2 401 2 
591 2 580 2 
477 2 7 2 474 2 107 2 580 2 388 2 55 2 
7 2 26 2 580 2 
56 2 7 2 580 2 
425 2 115 2 401 2 
7 2 580 2 
412 2 115 2 
322 2 580 2 
115 2 401 2 254 2 
29 2 381 2 401 2 
510 2 85 2 401 2 
342 2 372 2 401 2 
270 2 401 2 75 2 
115 2 266 2 
158 2 580 2 
29 2 114 2 
85 2 503 2 
342 2 275 2 
346 2 270 2 
104 2 115 2 
459 2 270 2 
342 2 306 2 
85 2 394 2 
29 2 528 2 
396 2 115 2 401 2 254 2 
396 2 115 2 274 2 401 2 254 2 
115 2 401 2 39 2 
420 2 115 2 401 2 
244 2 473 2 63 2 191 2 
477 2 482 2 268 2 107 2 
477 2 482 2 268 2 107 2 212 2 55 2 
477 2 7 2 474 2 462 2 107 2 580 2 
225 2 124 2 
477 2 387 2 314 2 107 2 
342 2 461 2 
270 2 109 2 
29 2 508 2 
554 2 85 2 
270 2 85 2 229 2 
270 2 433 2 85 2 
270 2 85 2 502 2 
270 2 85 2 112 2 
60 2 230 2 477 2 14 6 107 2 289 2 208 2 21 6 
71 2 115 2 
144 2 258 2 379 2 494 2 599 2 196 6 366 2 529 2 178 2 243 4 567 2 368 2 535 2 523 4 426 2 571 2 443 2 288 2 
401 2 434 2 
80 2 
310 2 79 2 311 2 383 2 8 2 317 2 161 2 86 2 87 2 544 2 164 2 324 2 92 2 170 2 552 2 465 2 174 2 27 2 260 2 470 3 97 4 101 2 31 2 185 4 409 2 562 2 186 4 563 2 481 2 277 3 485 2 338 2 280 2 193 2 192 2 40 2 493 3 113 2 281 6 199 4 48 4 283 2 577 2 201 8 120 4 500 2 287 2 419 2 122 2 126 2 291 2 588 2 132 26 428 2 513 2 218 2 219 4 221 2 518 6 521 2 431 26 62 2 227 2 68 6 234 2 439 2 438 2 440 4 530 2 376 6 533 2 605 2 608 2 378 5 
310 2 79 2 383 2 8 2 317 2 161 2 87 2 544 2 164 2 92 2 170 2 552 2 465 2 174 2 27 2 260 2 470 2 97 4 101 2 31 2 185 4 409 2 186 6 562 2 35 2 563 2 564 2 481 2 277 2 485 2 338 2 280 2 193 2 192 2 40 2 493 2 113 2 281 6 199 4 48 4 283 2 577 2 201 8 120 4 500 2 287 2 419 2 122 2 125 2 126 2 291 2 588 2 132 26 54 2 428 2 513 2 218 2 219 4 221 2 518 6 521 2 140 2 431 26 62 2 227 2 68 6 597 2 234 2 439 2 438 2 440 4 530 2 376 6 533 2 605 2 608 2 378 4 
549 2 
568 2 152 2 
453 2 231 2 410 2 561 2 105 2 398 2 272 2 51 2 188 2 456 4 541 2 566 2 471 2 98 2 262 4 475 2 382 2 293 2 
344 2 517 2 138 2 541 2 471 2 262 2 575 2 594 4 226 4 475 2 382 2 370 4 335 2 231 4 410 2 561 2 105 2 454 2 272 2 188 2 456 2 20 2 488 2 293 2 279 2 295 2 
343 2 41 2 539 2 153 2 2 2 541 6 281 4 575 2 48 2 382 4 318 4 286 2 453 2 504 2 454 2 51 2 456 4 20 2 132 12 293 2 428 2 294 6 214 2 295 2 219 2 517 2 398 4 27 2 138 2 471 2 98 2 262 4 594 4 431 6 475 2 226 6 405 2 183 2 101 2 102 4 370 4 334 2 335 2 231 4 410 2 105 2 561 2 562 2 272 4 188 2 374 2 236 2 566 2 533 2 488 2 279 2 442 2 609 4 193 2 40 2 
343 2 41 2 539 2 153 2 2 2 541 6 281 4 575 2 48 2 382 4 318 4 286 2 453 2 504 2 454 2 51 2 456 4 20 2 132 12 293 2 428 2 294 6 214 2 295 2 219 2 517 2 398 4 27 2 138 2 471 2 98 2 262 4 594 8 431 6 475 2 226 6 183 2 101 2 102 4 370 4 334 2 335 2 231 6 410 2 105 2 561 2 562 2 272 4 188 2 273 2 374 2 236 2 566 2 533 2 488 2 279 2 442 2 609 4 193 2 40 2 
343 2 41 2 539 2 153 2 2 2 541 8 281 4 575 2 48 2 382 4 318 4 286 2 453 2 504 2 454 2 51 2 456 4 20 2 132 12 293 2 428 2 294 8 214 2 295 2 219 2 517 2 398 4 27 2 138 2 471 2 98 2 262 4 594 8 431 6 475 2 226 10 405 2 183 2 101 2 102 4 370 8 334 2 335 2 231 6 410 2 105 2 561 2 562 2 272 4 188 2 273 2 374 2 236 2 566 2 533 2 488 2 279 2 442 2 609 4 193 2 40 2 
343 2 41 2 539 2 153 2 2 2 541 6 281 4 575 2 48 2 382 4 318 4 286 2 453 2 504 2 454 2 51 2 456 4 20 2 132 12 293 2 428 2 294 6 214 2 295 2 219 2 517 2 398 4 27 2 138 2 471 2 98 2 262 4 594 8 431 6 475 2 226 10 183 2 101 2 102 4 370 8 334 2 335 2 231 6 410 2 105 2 561 2 562 2 272 4 188 2 273 2 374 2 236 2 566 2 533 2 488 2 279 2 442 2 609 4 193 2 40 2 
0 4 310 2 154 2 153 4 2 2 8 2 317 2 318 8 161 2 453 2 15 6 164 2 454 2 455 6 456 4 20 2 460 6 328 2 463 1 465 2 27 2 176 1 468 1 470 2 471 2 475 2 183 2 31 2 476 6 185 4 335 2 186 6 188 2 36 1 485 2 483 4 339 7 488 2 491 2 341 2 193 2 40 2 192 2 343 2 41 2 493 2 43 2 48 4 498 2 201 4 499 2 202 2 354 2 504 2 51 2 210 2 214 4 215 6 217 2 218 2 219 4 517 2 518 6 365 6 520 2 522 6 226 2 227 2 65 2 228 6 68 6 231 4 234 2 236 2 374 2 72 2 376 8 237 6 533 2 378 2 77 6 539 2 541 8 382 4 383 2 385 1 248 2 89 1 545 2 547 1 92 4 550 2 551 2 95 1 553 1 259 2 398 4 400 2 97 4 262 4 98 2 404 2 405 4 264 2 101 2 102 6 406 6 407 6 560 7 410 2 105 2 561 2 562 2 563 2 564 2 272 4 566 2 279 2 280 2 113 2 281 6 575 2 283 2 117 8 119 2 120 4 285 2 286 2 419 12 122 2 121 6 126 2 422 6 585 2 292 2 132 46 588 2 293 2 428 2 294 12 295 2 590 2 134 2 138 4 430 2 594 2 431 24 143 2 597 2 438 2 439 2 605 2 441 10 607 2 442 2 307 6 609 4 150 2 610 6 
0 4 77 6 310 2 539 2 153 4 154 2 2 2 541 8 383 4 8 4 382 4 317 2 318 8 161 2 248 2 453 2 545 2 15 6 164 2 454 2 455 6 456 4 20 2 92 4 460 6 550 2 328 2 551 2 465 2 25 2 259 2 398 4 27 2 400 2 470 2 471 2 98 2 262 4 97 4 404 2 475 2 264 2 183 2 101 2 476 6 102 6 31 2 406 6 407 6 185 4 335 2 410 2 561 2 105 2 186 6 562 2 563 2 272 4 564 2 273 4 188 2 566 2 483 4 485 2 488 2 279 2 491 2 280 2 341 2 192 2 40 2 193 2 41 2 343 2 493 2 113 2 43 2 281 6 575 2 48 4 498 2 283 2 119 2 117 8 201 8 499 2 202 2 285 2 120 4 286 2 354 2 419 12 504 2 121 6 122 2 51 2 126 2 422 6 585 2 210 2 292 2 588 4 132 48 293 2 428 2 294 12 215 6 214 4 217 2 295 2 218 2 590 2 134 2 219 4 517 2 518 6 138 4 365 6 520 2 430 2 522 6 594 6 431 26 226 2 227 2 65 2 228 6 68 6 143 2 231 8 597 2 234 2 440 2 439 2 438 2 374 2 236 2 72 2 376 8 237 6 533 2 605 2 441 10 536 2 607 2 307 6 378 2 442 2 150 2 609 4 610 6 
0 4 77 6 310 2 539 2 153 4 154 2 2 2 541 8 383 4 8 4 382 4 317 2 318 8 161 2 248 2 453 2 545 2 15 6 164 2 454 2 455 6 456 4 20 2 92 4 460 6 550 2 328 2 551 2 465 2 25 2 259 2 398 4 27 2 400 2 470 2 471 2 98 2 262 4 97 4 404 2 475 2 264 2 183 2 101 2 476 6 102 6 31 2 406 6 407 6 185 4 335 2 410 2 561 2 105 2 186 6 562 2 563 2 272 4 564 2 273 4 188 2 566 2 483 4 485 2 488 2 279 2 491 2 280 2 341 2 192 2 40 2 193 2 41 2 343 2 493 2 113 2 43 2 281 6 575 2 48 4 498 2 283 2 119 2 117 8 201 8 499 2 202 2 285 2 120 4 286 2 354 2 419 12 504 2 121 6 122 2 51 2 126 2 422 6 585 2 210 2 292 2 588 4 132 48 293 2 428 2 294 12 215 6 214 4 217 2 295 2 218 2 590 2 134 2 219 4 517 2 518 6 138 4 365 6 520 2 430 2 522 6 594 6 431 26 226 6 227 2 65 2 228 6 68 6 370 4 143 2 231 8 597 2 234 2 440 2 439 2 438 2 374 2 236 2 72 2 376 8 237 6 533 2 605 2 441 10 536 2 607 2 307 6 378 2 442 2 150 2 609 4 610 6 
41 2 343 2 0 2 344 2 517 2 2 2 138 4 541 10 471 2 262 2 575 2 594 6 405 2 226 4 475 2 383 4 8 4 382 4 201 4 102 2 318 4 370 4 335 2 231 10 410 2 561 2 105 2 454 2 272 4 273 4 188 2 456 2 20 2 588 4 132 6 488 2 293 2 551 2 279 2 442 2 294 10 609 2 295 2 
41 2 343 2 517 2 2 2 138 2 541 6 471 2 262 2 575 2 594 6 226 4 475 2 382 4 102 2 318 2 370 4 335 2 231 6 410 2 561 2 105 2 454 2 272 4 273 2 188 2 456 2 20 2 132 4 488 2 293 2 279 2 442 2 294 4 609 2 295 2 
310 2 540 2 80 2 2 2 541 6 382 4 317 2 318 2 164 2 17 2 454 2 456 2 20 2 92 2 465 2 27 2 400 2 470 3 471 2 262 2 97 4 475 2 101 2 102 2 31 2 185 4 335 2 410 2 105 2 561 2 186 6 562 2 563 2 272 4 564 2 273 2 188 2 485 2 488 2 279 2 280 2 40 2 192 2 193 2 41 2 343 2 493 3 113 2 281 6 575 2 48 4 283 2 120 4 286 2 418 2 419 4 122 2 123 2 126 2 128 2 132 28 293 2 428 2 294 4 295 2 219 4 517 2 518 6 138 2 222 2 594 6 431 24 226 2 227 2 68 6 69 2 142 3 231 6 597 2 234 2 439 2 438 2 376 8 533 2 534 2 441 2 442 2 378 3 609 2 
343 2 41 2 539 2 153 2 2 2 541 6 281 4 575 2 48 2 382 4 318 4 286 2 453 2 504 2 454 2 51 2 456 4 20 2 132 12 293 2 428 2 294 6 214 2 295 2 219 2 517 2 398 4 27 2 138 2 471 2 98 2 262 4 594 8 431 6 475 2 226 10 183 2 101 2 102 4 370 8 334 2 335 2 231 6 410 2 105 2 561 2 562 2 272 4 188 2 273 2 374 2 236 2 566 2 533 2 488 2 279 2 442 2 609 4 193 2 40 2 
41 2 343 2 344 2 517 2 138 2 46 4 541 6 471 2 262 2 575 2 594 8 226 8 475 2 382 4 102 2 318 2 370 8 50 2 335 2 231 8 410 2 105 2 561 2 454 2 272 4 273 2 456 2 188 2 20 2 601 2 132 4 488 2 293 2 279 2 442 2 294 4 609 2 295 2 
41 2 380 2 20 2 
41 2 380 2 20 2 
0 2 310 2 541 10 383 4 8 4 382 4 317 2 9 2 160 2 318 4 161 2 90 2 164 2 456 2 20 2 92 4 548 2 465 2 555 2 27 2 471 2 472 2 97 4 262 2 405 2 100 2 101 2 102 2 31 2 105 2 186 6 562 2 564 2 272 4 273 4 483 2 485 2 486 2 280 2 193 2 192 2 40 2 343 2 41 2 344 2 113 2 197 2 281 6 48 4 283 2 201 4 120 4 501 2 419 4 122 2 126 2 588 4 132 24 293 2 428 2 294 10 219 4 518 2 138 4 522 2 594 6 431 16 62 4 226 2 227 2 67 2 68 2 370 2 231 10 597 2 527 2 234 2 439 2 438 2 376 2 533 2 441 2 378 2 442 2 609 2 
419 2 43 2 152 2 582 2 566 2 430 2 472 2 522 2 209 2 431 2 483 2 441 2 132 4 9 2 101 2 67 2 371 2 
0 2 310 2 541 10 383 4 8 4 382 4 317 2 9 2 160 4 247 2 318 4 161 2 90 2 164 2 456 2 20 2 92 4 548 2 465 2 555 2 27 2 471 2 97 4 262 2 405 2 100 2 101 2 102 2 31 2 105 2 186 6 562 2 564 2 272 4 273 4 485 2 486 2 340 2 280 2 193 2 192 2 40 2 41 2 343 2 344 2 113 2 197 2 281 6 48 4 283 2 201 4 120 4 501 2 419 2 122 2 126 2 588 4 132 20 293 2 428 2 294 10 219 4 518 2 138 4 594 6 431 14 62 4 226 2 227 2 67 2 68 2 370 2 231 10 597 2 527 2 234 2 439 2 438 2 376 2 533 2 378 4 442 2 609 2 
0 2 310 2 541 10 383 4 8 4 382 4 317 2 9 2 160 2 318 4 161 2 90 2 164 2 456 2 20 2 92 4 548 2 465 2 555 2 27 2 471 2 472 2 97 4 262 2 405 2 100 2 101 2 102 2 31 2 105 2 186 6 562 2 564 2 272 4 273 4 483 2 485 2 486 2 280 2 193 2 192 2 40 2 343 2 41 2 344 2 113 2 197 2 281 6 48 4 283 2 201 4 120 4 501 2 419 4 122 2 126 2 588 4 132 24 293 2 428 2 294 10 219 4 518 2 138 4 522 2 594 6 431 16 62 4 226 2 227 2 67 2 68 2 370 2 231 10 597 2 527 2 234 2 439 2 438 2 376 2 533 2 441 2 378 2 442 2 609 2 
76 4 154 2 317 2 10 2 13 2 321 1 320 2 545 2 165 2 91 2 257 2 92 2 465 2 27 2 470 2 467 2 97 2 404 2 181 2 264 2 101 2 31 2 185 4 34 2 186 2 562 2 106 2 563 2 485 2 570 2 280 2 40 2 193 2 493 2 414 2 281 6 48 4 200 2 283 2 120 2 354 2 419 2 207 2 122 2 583 2 507 2 132 24 428 2 213 2 512 1 516 2 219 4 518 6 59 2 139 2 520 2 224 2 431 18 300 2 227 2 302 2 68 6 437 2 234 2 439 2 438 2 376 8 533 2 378 2 
218 4 493 3 464 2 466 2 518 2 470 3 448 2 431 2 118 2 333 2 68 2 185 2 386 2 408 2 373 3 563 2 127 2 189 1 376 2 169 2 424 2 132 2 378 3 216 2 
218 4 493 2 464 2 466 2 518 2 470 2 448 2 431 2 118 2 333 2 68 2 185 2 386 2 408 2 373 2 563 2 127 2 376 2 169 2 424 2 132 2 378 2 216 2 
218 4 493 2 464 2 466 2 518 2 470 2 448 2 431 2 118 2 333 2 68 2 185 2 386 2 408 2 373 2 563 2 127 2 376 2 169 2 424 2 132 2 378 2 216 2 
194 2 151 2 1 2 155 2 45 2 496 4 542 2 543 4 451 2 417 2 203 4 355 4 18 3 358 6 255 2 131 4 171 2 326 2 132 10 133 2 514 3 515 2 557 2 28 2 470 3 469 2 402 2 263 2 431 4 66 2 32 2 333 2 524 5 435 3 563 2 376 2 532 4 490 4 378 3 148 2 
194 2 151 2 1 2 155 2 45 2 496 4 542 2 543 4 451 2 417 2 203 4 355 4 18 2 357 2 358 6 255 2 131 4 171 2 326 2 132 10 133 2 514 2 515 2 557 2 28 2 470 2 469 2 402 2 263 2 431 4 66 2 32 2 333 2 524 4 435 2 479 2 563 2 376 2 532 4 490 4 378 2 148 2 149 2 
194 2 151 2 1 2 155 2 45 2 496 4 542 2 543 4 451 2 417 2 203 4 355 4 18 2 357 2 358 6 255 2 131 4 171 2 326 2 132 10 133 2 514 2 515 2 557 2 28 2 470 2 469 2 402 2 263 2 431 4 66 2 32 2 333 2 524 4 435 2 479 2 563 2 376 2 532 4 490 4 378 2 148 2 149 2 
194 2 151 2 1 2 155 2 45 2 496 4 542 2 543 4 451 2 417 2 203 4 355 4 18 2 357 2 358 6 255 2 131 4 171 2 326 2 132 10 133 2 514 2 515 2 557 2 28 2 470 2 469 2 402 2 263 2 431 4 66 2 32 2 333 2 524 4 435 2 479 2 563 2 376 2 532 4 490 4 378 2 148 2 149 2 
194 2 151 2 1 2 155 2 45 2 496 4 542 2 543 4 451 2 417 2 203 4 355 4 18 2 357 4 358 6 255 2 131 4 171 2 326 2 132 10 133 2 514 2 515 2 557 2 28 2 470 2 469 2 402 2 263 2 431 4 66 2 32 2 333 2 524 4 435 2 479 4 563 2 376 2 532 4 490 4 378 2 148 2 149 4 
309 2 312 2 364 2 110 2 11 2 572 2 
538 2 446 2 576 2 338 2 332 2 364 2 360 2 
42 2 135 1 175 2 27 2 177 2 315 2 4 1 574 2 431 8 416 2 301 2 284 2 436 2 581 2 271 1 233 2 509 1 600 2 290 2 603 1 168 2 237 2 569 2 132 10 377 2 489 2 
151 6 1 6 155 6 28 6 349 2 81 2 431 6 61 2 542 6 384 1 578 2 265 4 524 15 88 2 479 2 506 2 235 2 357 4 167 2 602 2 389 4 255 6 239 2 131 12 132 6 326 6 490 4 111 2 589 2 148 2 149 3 
24 2 598 2 495 2 129 2 457 2 238 2 431 1 415 2 359 2 132 1 37 2 543 2 23 1 49 2 203 2 184 4 445 7 355 2 
24 2 598 4 495 2 129 2 457 2 238 2 415 4 359 2 37 4 543 2 49 2 203 2 184 4 445 6 355 2 
24 2 598 8 495 2 129 6 457 2 238 8 431 1 415 8 359 2 132 1 37 8 543 2 23 1 49 2 203 2 184 4 445 10 355 2 
24 2 598 2 495 2 457 2 415 2 359 2 37 2 543 2 49 2 203 2 184 2 445 2 355 2 
447 2 120 2 390 2 392 1 511 2 132 6 361 2 519 1 330 2 97 2 431 6 31 2 525 2 186 2 187 2 439 2 485 2 
597 2 447 2 186 4 187 2 564 2 439 2 330 2 97 2 431 6 485 2 511 2 132 6 31 2 120 2 361 2 525 2 
78 2 447 2 329 2 330 2 97 2 431 8 64 2 159 2 31 2 120 2 525 2 597 2 186 6 187 2 439 2 564 2 19 2 458 2 485 2 391 1 390 1 132 8 511 2 487 2 
597 2 447 2 186 4 187 2 564 2 439 2 3 2 330 2 97 2 99 2 431 8 485 2 390 2 511 2 132 8 427 2 31 2 120 2 361 2 525 2 
156 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (105,480) (105,480) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.IllegalArgumentException 268 268 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 557 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 425 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (105,480) (105,480) (51,138,198,267,469) (51,138,198,267,469) (51,138,198,267,469) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 190 279 680 610 213 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 557 310 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (121,570) (121,570) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (699,716) 546 710 (699,716) 506 637 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (699,716) 405 710 (699,716) 506 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (699,716) 476 710 (699,716) 506 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (699,716) 207 710 (699,716) 506 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 460 248 595 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 694 
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 63 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 538 399 292 314 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 700 662 194 427 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 700 662 194 427 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 700 662 194 427 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 700 662 194 427 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.Invariant:justified()Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:subsetOf([B[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(J[J)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:gte(II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:setEqual([I[I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | STATEMENT | 43923 | stmt -> ;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[D)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 10865 | if (x) -> if (!x)
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 184000 | = null
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:lexGT([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:subsetOf([D[F)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eq(DD)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_ntk()I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:lt(II)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:getEndLine()I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:RootNode()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName:hashCode()I
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Ppt:Ppt()V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:eltsLtIndex([I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | OPERATOR | 60487 | == -> <
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:gt(II)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:lexGTE([I[I)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:noDups([I)Z
daikon.Quant:slice([III)[I
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:isPointer()Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:lexLT([I[I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice2:arity()I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 14876 | return null
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:subsetOf([F[F)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:numIntArrays()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I | CONDITION | 488 | if (x) -> if (!x)
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.FormatTestCase:passes()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V | OPERATOR | 609 | != -> ==
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.Invariants:Invariants()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Assert:assertTrue(Z)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_and(DD)D
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:logOn()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:backup(I)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7862 | if (x) -> if (!x)
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.MathMDE:gcd(II)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer; | RETURN | 14085 | return null
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lte(II)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.ProglangType:isScalar()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoAux:hashCode()I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | CONDITION | 37236 | if (x) -> if (!x)
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:ne(II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eltsLT([II)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfo:new_ppt()V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63682 | = null
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:intersection([I[I)[I
daikon.Quant:subsetOf([J[J)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 440 | = null
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaCharStream:getBeginColumn()I
daikon.PptSlice0:arity()I
utilMDE.WeakHasherMap:size()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Debug:logOn()Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:concat([I[I)[I
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Field:java_field(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:min([I)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
537 2 166 2 217 2 480 2 85 2 172 2 105 2 544 2 140 4 
734 2 169 2 459 2 724 6 14 2 57 2 16 6 388 2 474 6 436 2 125 2 
480 2 54 2 659 2 105 2 494 6 495 2 608 6 364 4 600 2 611 4 489 6 24 2 126 6 
615 17 480 4 554 17 100 8 185 6 103 12 83 2 682 2 105 4 119 8 147 4 586 2 661 2 366 8 375 8 632 2 235 16 236 4 116 8 490 8 731 8 
268 4 
411 2 
669 2 553 2 732 2 421 2 210 2 557 2 254 2 227 2 690 2 104 2 739 2 704 2 396 2 385 2 463 4 110 2 96 2 709 2 85 2 245 2 711 2 679 2 
615 9 554 8 562 8 480 4 100 4 408 8 482 2 55 4 105 4 119 4 366 4 375 4 235 8 116 4 490 4 731 4 
96 2 387 2 368 2 
420 2 160 2 422 2 564 2 616 2 133 2 175 2 305 2 36 2 530 2 501 10 437 2 438 22 76 2 
615 6 554 6 100 2 378 2 185 2 103 4 366 2 136 2 235 4 116 2 326 2 731 2 524 2 119 2 585 2 17 2 153 2 375 2 435 2 720 2 490 2 
83 2 572 2 
571 10 492 2 79 4 209 2 2 4 381 2 319 2 410 4 617 2 345 4 322 4 621 2 414 10 446 4 113 4 387 2 62 2 324 2 418 14 368 6 141 2 732 2 391 2 421 4 66 2 265 4 329 2 548 2 337 4 463 4 588 62 96 8 272 2 202 2 294 2 487 2 635 4 244 4 360 2 246 2 
89 2 465 2 723 2 425 2 521 2 
697 2 380 2 105 22 496 2 619 2 574 2 575 2 166 2 301 2 348 2 114 2 351 2 65 2 355 4 267 2 508 4 632 2 550 2 400 2 592 2 719 2 403 2 23 2 722 2 27 2 468 4 469 2 598 2 725 6 230 6 232 2 602 2 192 4 727 2 367 2 645 2 475 2 478 2 480 20 289 2 651 2 531 2 51 2 
1 2 105 2 
534 2 105 4 195 2 
738 2 
250 4 163 4 213 2 442 2 443 2 304 4 447 24 64 4 453 2 219 2 262 2 580 2 392 24 456 2 457 2 118 2 171 4 629 4 673 2 547 4 509 2 549 2 15 2 224 4 359 2 590 2 718 2 124 2 636 2 680 2 186 2 130 2 363 4 279 4 33 2 190 4 726 2 139 4 603 2 43 2 143 24 481 2 293 2 610 2 152 2 486 2 338 2 528 2 742 2 656 2 205 2 376 2 
317 2 242 2 297 1 4 2 
671 2 317 2 
77 2 96 2 431 2 317 2 682 2 703 2 705 2 
317 2 44 2 703 2 
35 2 317 2 703 2 
670 2 3 2 242 2 
317 2 703 2 
670 2 34 2 
317 2 183 2 
670 2 341 2 242 2 
242 2 252 2 38 2 
472 2 286 2 242 2 
582 2 242 2 701 2 
167 2 242 2 513 2 
670 2 253 2 
317 2 591 2 
38 2 45 2 
111 2 286 2 
582 2 349 2 
167 2 302 2 
670 2 321 2 
167 2 471 2 
582 2 605 2 
286 2 280 2 
247 2 38 2 
670 2 341 2 695 2 242 2 
670 2 341 2 695 2 242 2 193 2 
670 2 242 2 467 2 
670 2 242 2 741 2 
426 2 569 2 667 2 203 2 
77 2 96 2 170 2 729 2 
77 2 223 2 96 2 170 2 431 2 729 2 
77 2 96 2 317 2 181 2 682 2 703 2 
557 2 310 2 
77 2 96 2 682 2 311 2 
582 2 10 2 
167 2 333 2 
683 2 38 2 
159 2 286 2 
167 2 286 2 401 2 
167 2 286 2 336 2 
167 2 286 2 131 2 
167 2 303 2 286 2 
77 2 423 2 121 6 96 2 665 2 570 2 
670 2 296 2 
379 2 239 2 173 2 299 2 413 2 706 4 567 2 150 4 429 2 271 2 589 2 520 2 19 2 137 2 21 2 75 2 8 2 438 6 
206 2 242 2 
65 2 
380 2 105 26 106 2 496 2 214 2 574 2 575 2 301 6 218 2 664 2 578 4 117 8 222 2 508 4 587 2 400 2 514 2 592 2 23 2 25 2 27 2 31 2 598 6 320 2 230 6 232 2 234 3 602 2 601 2 237 2 526 2 145 2 156 2 531 2 533 2 157 3 697 2 251 4 619 2 165 2 166 2 59 2 351 2 452 2 355 4 357 2 542 2 550 6 273 2 182 3 180 2 719 2 552 2 722 2 361 2 468 4 470 2 725 4 192 4 727 2 561 5 645 2 648 2 475 2 478 2 480 26 289 2 373 2 650 2 483 2 201 2 484 2 99 2 744 4 
380 2 105 26 106 2 496 2 214 2 574 2 575 2 301 6 218 2 664 2 578 4 117 8 222 2 508 4 400 2 514 2 592 2 23 2 25 2 27 2 29 2 31 2 598 6 320 2 230 6 232 2 234 2 602 2 601 2 237 2 686 2 526 2 145 2 527 2 156 2 691 2 531 2 157 2 697 2 251 4 619 2 165 2 166 2 59 2 348 2 351 2 452 2 355 4 357 2 542 2 550 6 273 2 182 2 719 2 552 2 722 2 361 2 468 4 470 2 725 6 192 4 727 2 561 4 645 2 648 2 475 2 478 2 480 26 289 2 373 2 650 2 651 2 483 2 201 2 484 2 99 2 744 4 
699 2 698 2 161 2 105 12 536 2 710 2 448 8 388 4 351 2 390 2 624 2 355 2 628 2 459 2 506 2 14 2 715 4 546 2 397 2 358 2 16 6 716 2 717 8 592 2 402 2 719 2 23 2 125 4 516 4 637 2 721 2 184 8 362 2 594 2 468 2 30 2 134 2 724 6 189 4 230 4 232 2 560 2 728 2 474 6 646 4 87 2 478 2 604 2 480 6 736 2 649 2 146 2 93 2 95 2 566 4 531 2 
699 2 698 2 161 2 105 12 536 2 710 2 306 4 448 8 388 4 451 2 351 2 390 2 624 2 355 2 169 2 628 2 459 2 506 2 14 2 715 4 546 2 397 2 358 2 16 8 716 2 717 8 592 2 719 2 402 2 23 2 125 4 516 4 637 2 721 2 184 8 362 2 468 2 594 2 30 2 134 2 724 8 189 4 230 4 232 2 560 2 728 2 474 6 646 4 478 2 604 2 480 6 649 2 146 2 93 2 148 2 95 2 566 4 531 2 
604 2 699 2 362 2 594 2 628 2 506 2 724 2 189 4 397 2 566 4 358 2 388 2 474 2 390 2 125 2 637 2 721 2 624 2 
699 2 698 2 161 2 105 12 536 2 710 2 448 4 388 4 351 2 390 2 624 2 355 2 169 2 628 2 459 2 506 2 715 4 546 2 397 2 358 2 16 6 716 2 717 4 592 2 402 2 719 2 23 2 125 4 516 4 637 2 721 2 184 4 362 2 594 2 468 2 30 2 134 2 724 6 189 4 230 4 232 2 560 2 728 2 474 4 646 4 87 2 478 2 604 2 480 6 736 2 649 2 146 2 93 2 95 2 566 4 531 2 
699 2 698 2 161 2 105 12 536 2 57 2 710 2 448 4 388 4 351 2 390 2 624 2 355 2 628 2 459 2 506 2 715 4 546 2 397 2 358 2 16 6 716 2 717 4 592 2 402 2 719 2 23 2 125 4 516 4 637 2 721 2 184 4 362 2 594 2 468 2 30 2 134 2 724 4 189 4 230 4 232 2 560 2 728 2 474 6 646 4 87 2 478 2 604 2 480 6 736 2 649 2 146 2 93 2 95 2 566 4 531 2 
699 2 698 2 161 2 105 12 536 2 710 2 448 4 388 4 351 2 390 2 624 2 355 2 628 2 459 2 506 2 14 2 715 4 546 2 397 2 358 2 16 6 716 2 717 8 592 2 402 2 719 2 23 2 125 4 516 4 637 2 721 2 184 4 362 2 594 2 468 2 30 2 134 2 724 6 189 4 230 4 232 2 560 2 728 2 474 6 646 4 87 2 478 2 604 2 480 6 736 2 649 2 146 2 93 2 95 2 566 4 531 2 
699 2 698 2 161 2 105 12 536 2 57 2 710 2 448 8 388 4 351 2 390 2 624 2 355 2 628 2 459 2 506 2 14 2 715 4 546 2 397 2 358 2 16 8 716 2 717 8 592 2 402 2 719 2 23 2 125 4 516 4 637 2 721 2 184 8 362 2 468 2 594 2 30 2 134 2 724 6 189 4 230 4 232 2 560 2 728 2 474 8 646 4 87 2 478 2 604 2 480 6 736 2 649 2 146 2 93 2 95 2 566 4 531 2 
699 2 698 2 161 2 105 12 536 2 710 2 448 8 388 4 351 2 390 2 624 2 355 2 628 2 459 2 506 2 14 2 715 4 546 2 397 2 358 2 16 6 716 2 717 8 592 2 402 2 719 2 23 2 125 4 516 4 637 2 721 2 184 8 362 2 594 2 468 2 30 2 134 2 724 6 189 4 230 4 232 2 560 2 728 2 474 6 646 4 87 2 478 2 604 2 480 6 736 2 649 2 146 2 93 2 95 2 566 4 531 2 
380 2 106 2 105 28 496 2 107 2 574 2 575 2 301 8 388 4 117 2 390 2 309 2 506 2 508 4 397 2 16 12 512 2 400 2 402 2 592 2 23 2 516 4 125 4 25 2 128 2 27 2 594 2 30 2 598 6 134 2 230 6 232 2 234 2 601 2 602 2 604 2 146 2 156 2 531 2 699 2 697 2 161 2 698 2 619 2 536 2 57 4 166 2 444 2 348 2 710 2 351 2 624 2 454 2 355 4 357 2 628 2 459 4 543 2 715 6 546 2 358 2 716 2 717 2 550 6 634 4 182 2 719 2 637 2 721 2 722 4 552 2 362 2 468 4 724 4 725 6 189 4 192 4 561 2 727 2 560 2 728 2 646 8 474 8 645 2 475 2 87 2 478 2 480 18 563 2 289 2 649 2 90 2 651 2 93 2 201 2 95 2 566 4 744 4 
380 2 106 2 105 28 496 2 107 2 574 2 575 2 301 8 388 4 117 4 390 2 309 2 506 2 14 4 508 4 397 2 16 12 512 2 400 2 402 2 592 2 23 2 516 4 125 4 25 4 128 2 27 2 594 2 30 2 598 6 134 2 230 6 232 2 234 2 601 2 602 2 604 2 146 2 156 2 531 2 699 2 697 2 161 2 698 2 619 2 536 2 166 2 444 2 348 2 710 2 351 2 624 2 454 2 355 4 357 2 628 2 459 4 543 2 715 6 546 2 358 2 716 2 717 6 550 6 634 4 182 2 719 2 637 2 721 2 722 4 552 4 362 2 468 4 724 8 725 6 189 4 192 4 561 2 727 2 560 2 728 2 646 8 474 8 645 2 475 2 87 2 478 2 480 18 563 2 289 2 649 2 90 2 651 2 93 2 201 4 95 2 566 4 744 4 
380 2 106 2 105 28 496 2 107 2 574 2 575 2 301 8 388 4 117 4 390 2 309 2 506 2 14 4 508 4 397 2 16 12 512 2 400 2 402 2 592 2 23 2 516 4 125 4 25 4 128 2 27 2 594 2 30 2 598 6 134 2 230 6 232 2 234 2 601 2 602 2 604 2 146 2 156 2 531 2 699 2 697 2 161 2 698 2 619 2 536 2 166 2 444 2 348 2 710 2 448 4 351 2 624 2 454 2 355 4 357 2 628 2 459 4 543 2 715 6 546 2 358 2 716 2 717 6 550 6 634 4 182 2 719 2 637 2 721 2 722 4 552 4 184 4 362 2 468 4 724 8 725 6 189 4 192 4 561 2 560 2 727 2 728 2 645 2 646 8 474 8 475 2 87 2 478 2 480 18 563 2 289 2 649 2 90 2 651 2 93 2 201 4 95 2 566 4 744 4 
380 2 106 2 105 26 496 2 107 2 574 2 575 2 301 12 388 4 117 4 390 2 309 2 506 2 14 4 508 4 397 2 16 16 512 2 400 2 592 2 402 2 23 2 516 4 125 4 25 4 128 2 27 2 594 2 30 2 598 8 134 2 32 2 230 6 232 2 234 4 601 2 602 2 604 2 424 2 146 2 48 2 156 2 531 2 699 2 697 2 161 2 698 2 619 2 536 2 57 2 166 2 444 2 348 2 710 2 448 4 351 2 624 2 454 2 355 4 169 2 357 2 628 2 459 4 545 2 715 6 546 2 358 2 177 2 716 2 717 6 550 8 634 4 182 4 719 2 637 2 721 2 722 2 552 4 184 4 362 2 468 4 724 10 725 6 189 4 192 4 561 4 560 2 727 2 728 2 645 2 646 8 474 10 475 2 87 2 478 2 480 16 737 2 289 2 649 2 90 2 651 2 93 2 201 4 95 2 566 4 744 6 
184 4 161 2 698 2 362 2 594 2 30 2 105 4 134 2 724 6 189 2 536 2 560 2 728 2 448 4 388 4 646 2 474 6 87 2 624 2 604 2 649 2 628 2 459 2 146 2 14 2 715 2 93 2 95 2 397 2 566 2 16 4 717 6 516 2 125 4 721 2 
380 2 382 3 105 28 106 2 496 2 574 2 575 2 301 8 388 4 579 2 581 2 14 2 508 4 397 2 16 4 400 2 402 2 592 2 23 2 516 2 125 4 593 2 27 2 406 2 594 2 30 2 598 6 134 2 230 6 232 2 234 3 602 2 601 2 138 2 604 2 146 2 156 2 531 2 698 2 697 2 161 2 619 2 536 2 166 2 348 2 448 2 351 2 65 2 260 2 624 2 355 4 357 2 628 2 459 2 543 2 715 2 717 6 550 6 182 3 719 2 721 2 722 4 362 2 468 4 81 2 724 6 725 6 189 2 192 4 727 2 561 3 560 2 728 2 646 2 474 6 645 2 475 2 87 2 478 2 480 24 198 2 563 2 289 2 649 2 651 2 93 2 95 2 566 2 744 4 
698 2 728 2 389 2 
698 2 728 2 389 2 
0 2 380 2 211 2 105 24 106 2 497 2 496 2 574 2 575 2 301 2 388 4 115 2 117 4 390 2 506 2 14 4 508 4 397 2 16 16 400 2 592 2 23 2 125 4 516 2 25 4 405 2 27 2 598 2 230 6 232 2 602 2 689 2 146 2 151 2 156 4 529 2 531 2 340 2 52 2 699 2 697 2 698 4 619 2 57 4 166 2 707 2 348 2 347 2 710 2 448 4 351 2 355 4 169 4 357 2 628 4 459 4 543 2 715 4 269 2 716 2 717 6 550 2 634 2 719 2 552 4 722 4 184 4 362 2 468 4 278 2 724 12 725 6 189 2 192 4 727 2 561 2 728 2 644 2 645 2 474 12 646 4 475 2 285 2 478 2 480 16 289 2 649 2 290 2 373 2 651 2 201 4 566 2 484 4 654 2 
285 2 225 2 0 2 480 2 28 2 407 2 290 2 105 4 543 2 498 2 358 2 151 2 644 2 283 2 719 2 352 2 722 2 
380 2 211 2 105 20 106 2 497 2 496 2 574 2 575 2 301 2 388 4 115 2 117 4 390 2 220 2 9 2 506 2 14 4 508 4 397 2 16 16 400 2 592 2 23 2 516 2 125 4 25 4 27 2 598 2 230 6 232 2 602 2 689 2 146 2 151 2 156 4 529 2 531 2 340 2 52 2 699 2 697 2 698 4 256 2 619 2 57 4 166 2 707 2 348 2 347 4 710 2 448 4 351 2 355 4 264 2 169 4 357 2 628 4 459 4 715 4 269 2 716 2 717 6 550 2 634 2 719 2 552 4 722 2 184 4 362 2 468 4 278 2 724 12 725 6 189 2 192 4 727 2 561 4 728 2 644 2 646 4 645 2 474 12 476 2 475 2 478 2 480 14 289 2 649 2 373 2 651 2 201 4 566 2 484 4 654 2 
207 2 0 2 380 2 211 2 105 24 106 2 497 2 496 2 574 2 575 2 301 2 388 4 115 2 117 4 390 2 9 2 506 2 14 4 508 4 397 2 16 16 400 2 592 2 23 2 125 4 516 2 25 4 27 2 598 2 230 6 232 2 602 2 689 2 146 2 151 2 156 4 529 2 531 2 340 2 52 2 699 2 697 2 698 4 256 2 619 2 57 4 166 2 707 2 348 2 347 2 710 2 448 4 351 2 355 4 169 4 357 2 628 4 459 4 543 2 715 4 269 2 716 2 717 6 550 2 634 2 719 2 552 4 722 4 184 4 362 2 468 4 278 2 724 12 725 6 189 2 192 4 727 2 561 2 728 2 644 2 645 2 474 12 646 4 475 2 285 2 478 2 480 16 289 2 649 2 290 2 373 2 651 2 201 4 566 2 484 4 654 2 
208 2 377 2 380 2 2 2 382 2 383 10 214 2 215 4 574 2 573 2 216 30 575 2 386 2 5 4 218 2 579 2 7 10 581 2 222 16 393 2 20 2 592 2 23 2 22 2 26 6 27 2 406 2 595 2 31 2 409 3 598 12 410 2 228 8 230 6 231 2 232 2 234 11 601 2 602 2 416 4 235 8 419 2 237 42 41 2 42 2 46 2 241 4 430 8 432 2 434 2 615 9 248 2 620 2 56 2 258 4 257 2 59 10 444 2 622 14 445 2 446 2 260 2 452 2 454 2 626 2 625 6 460 2 461 2 630 2 270 2 71 2 632 2 631 2 633 2 635 2 73 2 74 2 274 2 78 2 468 4 80 2 470 2 641 2 84 2 642 10 643 10 645 2 284 2 475 2 478 2 479 2 480 24 289 2 90 2 651 2 92 2 485 2 652 24 655 2 490 4 491 12 295 2 100 4 101 4 298 2 658 8 106 2 105 30 107 2 109 2 300 2 301 18 666 10 116 4 117 30 500 2 502 2 503 4 505 2 119 4 508 2 312 10 313 4 675 14 512 2 511 2 315 2 515 2 677 2 127 2 128 2 129 4 322 2 135 4 518 4 687 2 327 2 328 6 525 2 332 4 145 2 526 2 154 2 156 2 531 2 157 2 693 2 158 2 696 1 697 2 166 2 708 2 346 2 348 2 351 2 350 30 353 2 355 4 356 2 542 2 176 2 550 12 182 11 719 2 722 2 554 8 187 2 188 2 725 4 192 2 366 4 561 11 370 2 731 4 733 10 373 4 200 4 375 4 740 2 743 2 204 2 744 10 
208 2 409 2 188 2 298 2 598 2 105 2 642 2 234 2 601 2 300 2 301 2 561 2 500 2 237 6 7 4 480 2 733 2 505 2 525 2 94 2 550 2 182 2 434 2 744 2 
208 2 409 2 188 2 298 2 598 2 105 2 642 2 234 2 601 2 300 2 301 2 561 2 500 2 237 6 7 4 480 2 733 2 505 2 525 2 94 2 550 2 182 2 434 2 744 2 
208 2 409 2 188 2 298 2 598 2 105 2 642 2 234 2 601 2 300 2 301 2 561 2 500 2 237 6 7 4 480 2 733 2 505 2 525 2 94 2 550 2 182 2 434 2 744 2 
615 5 493 2 100 2 249 3 555 4 597 4 105 10 412 2 233 4 499 3 234 3 191 6 108 2 601 2 366 2 301 2 663 4 561 3 577 2 235 4 116 2 730 2 731 2 623 2 197 2 480 4 606 2 11 4 266 2 525 2 67 2 119 2 395 3 653 2 122 4 375 2 98 2 676 2 692 2 490 2 
615 4 554 4 493 2 100 2 249 2 555 4 597 4 105 10 412 2 233 4 499 2 234 2 191 6 108 2 601 2 366 2 301 2 663 4 561 2 577 2 235 4 116 2 730 2 731 2 623 2 197 2 480 4 606 2 11 4 266 2 525 2 67 2 119 2 395 2 653 2 122 4 375 2 98 2 676 2 692 2 490 2 
615 4 554 4 493 2 100 2 249 2 555 4 597 4 105 10 412 2 233 4 499 2 234 2 191 6 108 2 601 2 366 2 301 2 663 4 561 2 577 2 235 4 116 2 730 2 731 2 623 2 197 2 480 4 606 2 11 4 266 2 525 2 67 2 119 2 395 2 653 2 122 4 375 2 98 2 676 2 692 2 490 2 
615 4 554 4 493 2 100 2 249 2 555 4 597 4 105 10 412 2 233 4 499 2 234 2 191 6 108 2 601 2 366 2 301 2 663 4 561 2 577 2 235 4 116 2 730 2 731 2 623 2 197 2 480 4 606 2 11 4 266 2 525 2 67 2 119 2 395 2 653 2 122 4 375 2 98 2 676 2 692 2 490 2 
615 4 554 4 493 2 100 2 249 2 555 4 597 4 105 10 412 2 233 4 499 2 234 2 191 6 108 2 601 2 366 2 301 2 663 4 561 2 577 2 235 4 116 2 730 2 731 2 623 2 197 2 480 4 606 2 11 4 266 2 525 2 67 2 119 2 395 2 653 2 122 4 375 2 98 2 676 2 692 2 490 2 
713 2 660 2 640 2 507 2 346 2 694 2 
59 2 142 2 318 2 417 2 596 2 713 2 63 2 
480 4 13 2 617 1 105 4 91 2 535 2 292 2 229 1 538 2 464 1 473 1 62 1 399 2 314 2 325 2 592 2 477 2 
615 17 554 8 100 6 129 2 408 4 658 4 55 2 105 6 384 2 685 2 366 6 663 4 235 12 37 2 116 6 353 2 731 6 623 2 480 6 562 2 119 6 374 2 510 2 375 6 313 2 740 2 243 2 490 6 
277 1 480 1 555 2 517 2 597 2 331 2 105 1 440 2 428 2 149 2 684 2 233 2 58 7 70 2 540 4 541 2 668 2 39 2 
555 2 517 4 331 2 597 2 440 2 428 2 149 2 684 2 233 2 58 6 70 2 540 4 541 2 668 4 39 4 
277 1 480 1 555 2 517 8 331 8 597 2 105 1 440 2 428 6 149 2 684 2 233 2 58 10 70 2 540 4 541 2 668 8 39 8 
555 2 517 2 597 2 440 2 149 2 684 2 233 2 58 2 70 2 540 2 541 2 668 2 39 2 
105 28 575 4 662 2 504 2 12 2 583 4 394 2 508 8 674 2 18 1 123 2 404 2 226 1 316 2 681 2 602 6 522 2 238 2 607 4 334 4 427 2 240 1 155 4 613 2 700 2 162 2 348 4 60 2 450 2 449 2 627 2 714 4 462 1 466 2 276 2 639 2 556 2 82 1 558 2 725 16 365 1 192 10 647 2 369 2 86 2 194 2 475 6 196 1 480 26 88 2 372 2 199 2 651 4 488 2 
342 2 439 2 700 2 102 2 343 2 105 42 255 2 702 4 164 2 212 2 618 2 344 2 441 2 575 2 662 2 539 2 112 2 348 1 576 2 61 2 6 2 168 2 307 2 263 2 455 2 354 2 308 2 458 2 712 6 627 2 12 2 174 2 583 2 68 2 394 2 584 2 508 18 178 2 398 2 179 8 551 2 678 2 638 2 275 2 404 2 316 2 132 2 599 2 725 37 415 2 602 2 192 18 519 2 323 2 282 2 281 2 475 2 194 2 371 2 522 2 196 2 523 4 480 42 735 2 288 2 287 2 565 2 330 2 651 1 144 2 335 2 427 2 609 4 47 2 568 2 612 2 155 34 433 4 97 2 50 2 532 2 657 2 
53 2 700 2 162 2 105 34 618 2 575 2 662 2 259 2 348 6 60 2 449 2 307 2 261 2 221 2 354 2 458 2 627 2 12 2 672 4 714 2 583 6 69 4 394 2 508 10 674 2 120 2 123 4 398 2 639 2 404 2 556 2 681 2 82 2 558 2 725 24 599 2 559 2 602 4 192 12 281 2 86 2 647 2 369 2 475 4 194 2 522 2 40 2 480 32 88 2 372 2 688 4 330 2 199 2 291 2 651 6 607 6 334 6 427 2 568 2 155 14 49 2 613 2 339 2 614 2 
263 2 522 2 404 2 354 2 196 2 480 12 700 2 627 2 651 4 105 12 394 2 725 10 427 2 508 4 575 2 662 2 602 2 192 4 348 4 155 4 475 2 194 2 
72 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.NullPointerException 297 (160,167) 522 (74,178,245,321,442,455,496) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 297 (160,167) 522 (74,178,245,321,442,455,496) 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 12 490 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 297 (160,167) 522 (74,178,245,321,442,455,496) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (32,180) 360 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (32,180) (32,180) (234,397,479,504,726) (234,397,479,504,726) (234,397,479,504,726) 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 194 232 638 506 134 155 179 211 153 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (32,180) 360 532 747 213 636 667 84 631 (576,704) 755 (248,736) (576,704) 569 (248,736) 499 473 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (32,180) 360 532 747 213 636 667 84 631 (576,704) 755 (248,736) (576,704) 569 (248,736) 499 473 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (32,180) 360 532 747 213 636 667 84 631 (576,704) 755 (248,736) (576,704) 569 (248,736) 499 473 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (32,180) 360 532 747 213 636 667 84 631 (576,704) 755 (248,736) (576,704) 569 (248,736) 499 473 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 259 395 337 674 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 511 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 511 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 511 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 511 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 511 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 126 661 93 651 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 126 661 93 651 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 126 661 93 651 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 126 661 93 651 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 18478 | if (x) -> if (!x)
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:sum([D)D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3R_88()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_69()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltsLT([II)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:gt(II)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ProglangType:isArray()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3_15()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.Invariant:justified()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.PptSlice0:arity()I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.ProglangType:isFloat()Z
jtb.JavaCharStream:FillBuff()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | ASSIGN | 4792 | = null
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:eltsLTE([II)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:new_ppt()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration; | ASSIGN | 13768 | = null
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptSlice1:num_samples()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaCharStream:readChar()C
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:slice([III)[I
daikon.Quant:eltwiseGT([I)Z | OPERATOR | 176785 | + -> >>>
daikon.Quant:intersection([I[I)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_133()Z
daikon.ProglangType:isScalar()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_63()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:memberOf(I[I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaCharStream:getEndLine()I
daikon.ValueTuple:size()I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.Invariant:logOn()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3R_161()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:sign(I)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern:intern([J)[J
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:eq(FF)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.ValueSet:ValueSet(I)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
daikon.inv.Invariant:prob_and(DD)D | CONSTANT | 8716 | 1 -> -1
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I | CONDITION | 910 | if (x) -> if (!x)
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:gte(II)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.FormatTestCase:passes()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3_13()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE:gcd(II)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptName:isEnterPoint()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:eltsEqual([II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eq(DD)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:lexLT([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern:intern([I)[I
daikon.ProglangType:dimensions()I
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_134()Z
jtb.JavaCharStream:BeginToken()C
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3_14()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:arity()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 20464 | = null
utilMDE.ArraysMDE:sum([[I)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:eq(JJ)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:setEqual([I[I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_16()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_3R_54()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_2_14(I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus; | RETURN | 17563 | return null
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 46762 | && -> ||
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 3291 | = null
daikon.Quant:subsetOf([D[F)Z
daikon.ProglangType:isPseudoArray()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariants:Invariants()V
jtb.JavaCharStream:getEndColumn()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ModBitTracker:num_samples()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_163()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_3()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2146 | = null
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_48()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Debug:logOn()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseLT([I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_89()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:ne(II)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:min([I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 3087 | return null
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:gcd([I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName:hashCode()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexNotEqual([I[I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
657 2 281 2 660 4 546 2 549 4 510 2 512 2 43 2 665 2 180 4 102 2 612 2 288 2 672 2 237 2 615 2 108 2 240 2 620 2 679 2 348 2 394 2 725 2 301 4 737 2 13 2 119 2 73 2 530 2 206 2 534 2 417 2 77 2 644 2 27 2 501 2 80 2 698 4 31 2 32 4 650 2 752 2 277 2 597 2 
455 2 91 2 708 6 120 14 178 4 514 6 180 4 74 4 496 8 639 6 442 4 160 6 516 2 8 6 322 6 585 8 54 6 297 20 32 4 588 2 167 14 245 2 191 6 60 21 522 14 368 2 
444 2 393 2 31 2 
264 2 212 2 545 2 241 2 685 2 188 2 665 2 226 2 17 2 437 2 6 2 439 10 481 2 64 22 
455 2 428 2 509 2 471 2 297 2 120 2 271 2 588 2 167 2 187 2 190 2 522 2 438 2 
442 4 160 4 8 6 633 2 322 4 585 4 54 4 297 12 45 2 178 4 120 8 167 8 514 6 60 16 230 2 522 8 639 4 
354 4 148 2 311 2 735 2 476 4 475 10 375 2 492 2 116 2 662 14 602 2 282 2 557 4 231 4 21 4 208 4 464 62 612 4 691 2 389 2 161 2 51 2 444 6 364 2 696 2 421 10 647 4 448 2 242 4 393 2 270 4 143 2 31 8 350 2 502 2 301 4 650 2 273 4 682 2 451 4 
12 2 706 2 490 2 238 2 458 2 446 2 604 2 484 2 72 2 308 2 628 2 
32 2 25 2 335 2 712 2 381 2 180 2 228 2 370 4 501 2 
71 6 478 2 265 2 568 2 645 2 537 2 547 6 603 6 260 2 520 2 689 2 
263 6 39 4 601 4 312 2 500 6 177 6 619 2 32 2 180 2 19 2 75 2 653 2 343 6 
455 2 120 2 588 2 167 2 522 2 297 2 
154 4 378 6 
628 2 
340 2 180 2 
360 2 180 2 584 2 
173 2 
222 2 599 4 176 2 709 2 711 2 379 2 479 2 712 2 180 22 559 2 386 2 714 2 715 2 566 2 344 2 347 2 678 2 449 2 55 2 726 2 247 2 147 2 114 2 353 2 488 4 66 2 574 2 529 2 580 2 686 2 359 6 209 2 497 2 744 4 584 2 29 4 648 2 326 2 32 20 126 2 424 6 504 2 85 2 
88 4 372 20 374 14 376 4 551 2 96 2 179 2 380 24 553 2 554 2 555 20 670 4 561 4 103 14 7 22 671 36 563 4 290 20 565 2 675 4 294 4 483 2 567 10 305 14 189 2 306 4 398 4 9 4 681 2 10 34 192 118 115 2 310 2 402 14 403 4 193 2 194 36 195 24 406 2 408 2 313 14 197 34 578 44 200 2 16 18 203 34 204 118 688 4 122 2 415 2 211 2 23 2 320 4 690 4 419 8 420 118 693 2 324 10 124 2 325 2 33 4 700 34 34 2 425 10 426 24 221 4 506 2 427 2 38 36 600 36 336 2 707 2 131 2 508 4 225 2 710 10 44 4 134 2 341 6 713 4 232 74 610 2 614 4 517 2 719 2 616 4 349 2 57 2 56 16 521 20 58 4 59 4 244 8 728 8 729 4 630 2 528 2 457 2 632 2 70 2 150 2 356 4 153 2 155 2 638 2 159 2 261 4 465 24 262 2 466 4 642 6 361 2 467 36 266 36 470 4 746 2 162 4 472 2 749 34 750 2 751 4 365 2 753 34 168 4 169 4 276 2 652 4 655 2 
233 2 286 1 513 2 235 2 507 2 216 2 252 2 31 2 
233 2 507 2 536 2 
233 2 507 2 422 2 
498 2 722 2 450 2 
233 2 507 2 
443 2 722 2 
507 2 654 2 
253 2 498 2 722 2 
542 2 498 2 385 2 
498 2 78 2 721 2 
498 2 292 2 118 2 
498 2 431 2 482 2 
411 2 722 2 
507 2 205 2 
716 2 385 2 
130 2 78 2 
215 2 292 2 
482 2 640 2 
223 2 722 2 
695 2 482 2 
185 2 292 2 
78 2 249 2 
139 2 385 2 
253 2 498 2 163 2 722 2 
253 2 498 2 756 2 163 2 722 2 
498 2 41 2 722 2 
498 2 491 2 722 2 
105 2 723 2 399 2 730 2 
513 2 480 2 31 2 459 2 
513 2 235 2 351 2 480 2 31 2 459 2 
233 2 513 2 507 2 634 2 252 2 31 2 
417 2 92 2 
513 2 214 2 252 2 31 2 
734 2 292 2 
229 2 482 2 
385 2 47 2 
170 2 78 2 
447 2 482 2 78 2 
50 2 482 2 78 2 
112 2 482 2 78 2 
738 2 482 2 78 2 
196 2 513 2 390 6 79 6 31 2 327 2 396 2 474 2 
199 2 722 2 
24 2 498 2 507 2 
507 2 82 2 
659 2 26 2 445 4 518 2 68 2 164 4 519 2 329 2 607 2 589 2 256 2 624 2 625 2 383 2 5 2 413 2 414 2 64 6 
739 2 498 2 
566 2 
279 2 0 2 373 2 176 2 379 2 180 26 384 2 558 2 559 2 386 6 287 2 289 2 110 2 678 2 299 2 113 5 114 2 487 2 488 4 574 2 575 2 314 2 409 2 15 2 316 3 580 2 207 2 686 2 497 2 418 2 29 4 326 2 32 26 126 2 424 4 702 4 703 2 218 2 220 2 595 2 331 2 222 6 599 4 224 4 432 2 709 2 711 2 712 2 435 2 714 2 344 2 617 8 720 2 347 6 55 2 626 2 147 2 452 2 353 2 453 3 250 2 251 4 731 2 66 2 635 2 529 2 461 3 257 2 359 6 744 4 166 2 367 2 541 2 85 2 
279 2 0 2 373 2 176 2 379 2 180 26 384 2 558 2 559 2 386 6 287 2 289 2 184 2 110 2 678 2 299 2 113 4 114 2 487 2 488 4 574 2 575 2 409 2 15 2 316 2 580 2 686 2 209 2 497 2 418 2 29 4 326 2 32 26 126 2 424 6 702 4 703 2 218 2 220 2 331 2 222 6 599 4 224 4 432 2 709 2 711 2 712 2 435 2 714 2 48 2 344 2 617 8 720 2 449 2 347 6 55 2 626 2 147 2 62 2 452 2 353 2 453 2 250 2 251 4 731 2 66 2 635 2 529 2 461 2 257 2 359 6 744 4 166 2 367 2 754 2 541 2 85 2 
656 2 
400 2 440 2 
37 8 599 2 544 2 547 6 603 6 550 2 94 2 478 4 338 4 379 2 227 2 180 12 556 2 436 2 284 2 388 2 613 2 564 2 618 4 678 2 146 2 303 2 623 4 569 2 147 2 488 2 248 2 572 2 736 2 66 2 493 2 355 2 407 2 71 6 18 2 531 2 580 2 319 4 686 2 260 2 359 4 416 2 535 8 499 2 265 4 742 4 645 2 28 2 646 2 538 4 326 2 32 6 81 2 473 2 539 10 699 2 366 2 217 2 175 2 704 2 
599 2 37 8 544 2 547 6 603 8 550 2 94 2 478 4 338 4 379 2 227 2 180 12 556 2 284 2 388 2 613 2 564 2 345 4 618 4 678 2 146 2 303 2 623 4 569 2 147 2 488 2 248 2 523 2 572 2 736 2 66 2 493 2 355 2 407 2 71 8 18 2 580 2 319 4 686 2 260 2 359 4 416 2 535 8 499 2 265 4 742 4 645 2 28 2 537 2 646 2 268 2 538 4 326 2 32 6 81 2 473 2 539 10 699 2 366 2 217 2 175 2 704 2 
388 2 572 2 736 2 613 2 499 2 265 2 544 2 742 4 547 2 550 2 618 4 71 2 478 2 473 2 699 2 623 2 556 2 175 2 
37 4 599 2 544 2 547 4 603 6 550 2 94 2 478 4 338 4 379 2 227 2 180 12 556 2 436 2 284 2 388 2 613 2 564 2 618 4 678 2 146 2 303 2 623 4 569 2 147 2 488 2 248 2 572 2 736 2 66 2 493 2 355 2 407 2 71 6 18 2 531 2 580 2 319 4 686 2 359 4 416 2 535 4 499 2 265 4 742 4 645 2 28 2 537 2 646 2 538 4 326 2 32 6 81 2 473 2 539 6 699 2 366 2 217 2 175 2 704 2 
37 4 599 2 544 2 547 6 603 6 550 2 94 2 478 4 338 4 379 2 227 2 180 12 556 2 436 2 284 2 388 2 613 2 564 2 618 4 520 2 678 2 146 2 303 2 623 4 569 2 147 2 488 2 248 2 572 2 736 2 66 2 493 2 355 2 407 2 71 4 18 2 531 2 580 2 319 4 686 2 359 4 416 2 535 4 499 2 265 4 742 4 645 2 28 2 646 2 538 4 326 2 32 6 81 2 473 2 539 6 699 2 366 2 217 2 175 2 704 2 
37 4 599 2 544 2 547 6 603 6 550 2 94 2 478 4 338 4 379 2 227 2 180 12 556 2 436 2 284 2 388 2 613 2 564 2 618 4 678 2 146 2 303 2 623 4 569 2 147 2 488 2 248 2 572 2 736 2 66 2 493 2 355 2 407 2 71 6 18 2 531 2 580 2 319 4 686 2 260 2 359 4 416 2 535 8 499 2 265 4 742 4 645 2 28 2 646 2 538 4 326 2 32 6 81 2 473 2 539 6 699 2 366 2 217 2 175 2 704 2 
599 2 37 8 544 2 547 8 603 8 550 2 94 2 478 4 338 4 379 2 227 2 180 12 556 2 436 2 284 2 388 2 613 2 564 2 618 4 520 2 678 2 146 2 303 2 623 4 569 2 147 2 488 2 248 2 572 2 736 2 66 2 493 2 355 2 407 2 71 6 18 2 531 2 580 2 319 4 686 2 260 2 359 4 416 2 535 8 499 2 265 4 742 4 645 2 28 2 646 2 538 4 326 2 32 6 81 2 473 2 539 10 699 2 366 2 217 2 175 2 704 2 
37 8 599 2 544 2 547 6 603 6 550 2 94 2 478 4 338 4 379 2 227 2 180 12 556 2 436 2 284 2 388 2 613 2 564 2 618 4 678 2 146 2 303 2 623 4 569 2 147 2 488 2 248 2 572 2 736 2 66 2 493 2 355 2 407 2 71 6 18 2 531 2 580 2 319 4 686 2 260 2 359 4 416 2 535 8 499 2 265 4 742 4 645 2 28 2 646 2 538 4 326 2 32 6 81 2 473 2 539 10 699 2 366 2 217 2 175 2 704 2 
279 2 544 2 176 2 547 8 548 4 477 2 550 2 94 2 478 4 379 2 667 2 180 32 556 2 559 2 182 2 284 2 285 2 386 8 287 2 388 2 562 2 106 2 564 2 293 2 678 2 299 2 113 2 303 2 569 2 114 2 487 2 488 4 572 2 574 2 405 2 493 2 407 2 576 2 410 2 15 2 18 2 580 2 20 2 319 6 686 2 209 2 416 2 497 2 499 2 213 2 694 2 584 2 29 4 326 2 32 20 126 2 699 2 424 6 503 2 217 2 505 2 218 2 704 2 222 6 599 4 603 12 709 4 711 2 338 8 340 2 712 2 434 2 227 2 436 2 714 2 613 2 141 2 344 2 617 4 142 2 720 2 618 4 347 6 520 4 449 2 621 2 55 2 724 2 146 2 623 4 626 2 147 2 353 2 452 2 453 2 248 2 454 2 251 4 736 2 66 2 631 2 355 2 636 2 71 4 529 2 461 2 156 4 532 2 359 6 360 2 535 2 265 4 645 4 742 4 744 4 646 2 747 2 538 4 748 2 81 2 473 2 272 2 367 2 173 2 755 2 175 2 84 2 85 2 
279 2 544 2 176 2 547 8 548 4 477 2 550 2 94 2 478 4 379 2 667 2 180 32 556 2 559 2 182 2 284 2 285 2 386 8 287 2 388 2 562 2 106 2 564 2 293 2 678 2 299 4 113 2 303 2 569 2 114 2 487 2 488 4 572 2 574 2 405 2 493 2 407 2 576 2 410 2 15 2 18 2 580 2 20 2 319 6 686 2 209 2 416 2 497 2 499 2 213 2 694 2 584 2 29 4 326 2 32 20 126 2 699 2 424 6 503 2 217 2 505 2 218 4 704 2 222 6 599 4 603 12 709 4 711 2 338 8 340 2 712 2 434 2 227 2 436 2 714 2 613 2 141 2 344 2 617 6 142 2 720 2 618 4 347 6 449 2 621 2 55 2 724 2 146 2 623 4 626 2 147 2 353 2 452 4 453 2 248 2 454 2 251 4 736 2 66 2 631 2 355 2 636 2 71 8 529 2 461 2 156 4 532 2 260 4 359 6 360 2 535 6 265 4 645 4 742 4 744 4 646 2 747 2 538 4 748 2 81 2 473 2 272 2 367 2 173 2 755 2 175 2 84 2 85 2 
279 2 544 2 176 2 547 8 548 4 477 2 550 2 94 2 478 4 379 2 667 2 180 32 556 2 559 2 182 2 284 2 285 2 386 8 287 2 388 2 562 2 106 2 564 2 293 2 678 2 299 4 113 2 303 2 569 2 114 2 487 2 488 4 572 2 574 2 405 2 493 2 407 2 576 2 410 2 15 2 18 2 580 2 20 2 319 6 686 2 209 2 416 2 497 2 499 2 213 2 694 2 584 2 29 4 326 2 32 20 126 2 699 2 424 6 503 2 217 2 505 2 218 4 704 2 222 6 37 4 599 4 603 12 709 4 711 2 338 8 340 2 712 2 434 2 227 2 436 2 714 2 613 2 141 2 344 2 617 6 142 2 720 2 618 4 347 6 449 2 621 2 55 2 724 2 146 2 623 4 626 2 147 2 452 4 353 2 453 2 248 2 454 2 251 4 736 2 66 2 631 2 355 2 636 2 71 8 529 2 461 2 156 4 532 2 260 4 359 6 360 2 535 6 265 4 645 4 742 4 744 4 646 2 747 2 538 4 748 2 81 2 473 2 272 2 539 4 367 2 173 2 755 2 175 2 84 2 85 2 
279 2 544 2 176 2 547 10 548 4 477 2 550 2 94 2 478 4 379 2 667 2 180 30 556 2 559 2 182 2 284 2 285 2 386 12 287 2 388 2 562 2 106 2 564 2 293 2 678 2 299 4 113 4 303 2 680 2 569 2 114 2 487 2 488 4 572 2 574 2 405 2 493 2 407 2 576 2 494 2 410 2 15 2 18 2 580 2 319 6 686 2 209 2 583 2 416 2 497 2 499 2 213 2 694 2 584 2 29 4 326 2 32 18 126 2 699 2 424 6 503 2 701 2 217 2 505 2 218 4 704 2 222 8 37 4 599 4 603 16 709 2 711 2 338 8 340 2 712 2 434 2 227 2 436 2 714 2 613 2 141 2 344 2 617 6 142 2 720 2 618 4 347 8 520 2 449 2 621 2 55 2 724 2 146 2 623 4 626 2 147 2 452 4 353 2 453 4 248 2 454 2 251 6 736 2 66 2 631 2 355 2 636 2 71 10 529 2 461 4 156 4 358 2 532 2 260 4 359 6 360 2 535 6 265 4 645 4 742 4 744 4 537 2 646 2 747 2 538 4 748 2 81 2 473 2 539 4 275 2 367 2 173 2 755 2 175 2 84 2 85 2 
572 2 37 4 544 2 355 2 493 2 547 6 603 4 407 2 550 2 94 2 71 6 338 2 478 4 18 2 180 4 436 2 319 2 260 2 284 2 416 2 388 2 535 6 613 2 265 4 645 2 742 2 646 2 564 2 538 2 618 2 539 4 699 2 303 2 217 2 175 2 
544 2 547 6 176 2 377 2 550 2 94 2 478 4 379 2 180 28 101 2 559 2 284 2 386 8 388 2 564 2 566 2 678 2 113 3 303 2 397 2 114 2 487 2 488 4 572 2 574 2 493 2 407 2 15 2 579 3 18 2 580 2 20 2 319 2 686 2 209 2 416 2 497 2 29 4 326 2 32 24 423 2 126 2 699 2 424 6 217 2 222 6 599 4 430 2 603 4 709 4 711 2 338 2 712 2 436 2 234 2 714 2 613 2 344 2 618 2 720 2 449 2 347 6 55 2 145 2 147 2 353 2 453 3 251 4 66 2 355 2 71 6 529 2 461 3 260 2 359 6 641 2 535 6 265 4 645 2 742 2 744 4 646 2 538 2 81 2 272 2 539 2 367 2 175 2 85 2 
303 2 2 2 493 2 
303 2 2 2 493 2 
658 2 544 2 176 2 547 12 548 2 550 4 94 2 478 4 379 2 2 2 666 2 667 2 180 24 99 2 558 4 559 2 560 2 386 2 291 2 677 2 678 2 299 4 113 2 303 6 569 2 114 2 487 6 488 4 574 2 493 4 410 2 580 2 319 4 495 4 686 2 209 2 22 2 497 2 499 2 28 2 29 4 326 2 32 16 126 2 424 6 591 2 127 2 218 4 36 2 332 2 222 2 599 4 37 4 603 16 709 4 711 2 338 4 135 2 342 2 712 2 227 2 714 2 613 2 141 2 239 4 617 4 344 2 720 2 618 2 449 2 347 2 520 4 55 2 144 2 146 4 623 4 626 4 147 2 452 4 353 2 248 2 524 2 736 2 66 2 529 2 71 12 463 2 359 6 260 4 535 6 265 4 744 4 742 2 645 4 537 4 646 2 538 2 269 2 272 2 539 6 367 2 755 2 85 2 86 2 
524 2 371 2 67 2 709 2 32 2 272 2 135 2 136 2 667 2 180 4 556 2 400 2 36 2 463 2 181 2 147 2 570 2 
658 4 544 2 176 2 547 12 548 2 550 4 94 2 478 4 379 2 2 2 666 2 667 2 180 24 99 2 558 4 559 2 386 2 183 2 291 2 295 2 677 2 678 2 299 4 113 4 303 6 569 2 114 2 487 6 488 4 574 2 493 4 410 2 580 2 319 4 495 4 686 2 209 2 22 2 497 2 499 2 28 2 29 4 326 2 32 16 126 2 424 6 127 2 218 4 36 2 222 2 599 4 37 4 603 16 709 2 711 2 338 4 342 2 712 2 227 4 714 2 613 2 141 2 239 4 617 4 344 2 720 2 618 2 449 2 347 2 520 4 55 2 144 2 146 4 623 4 626 4 147 2 452 4 353 2 248 2 524 2 65 2 732 2 736 2 66 2 529 2 71 12 463 2 359 6 260 4 76 2 535 6 265 4 744 4 742 2 645 4 537 4 646 2 538 2 539 6 366 2 367 2 755 2 85 2 86 2 
87 2 658 2 544 2 176 2 547 12 548 2 550 4 94 2 478 4 379 2 2 2 666 2 667 2 180 24 99 2 558 4 559 2 386 2 109 2 291 2 677 2 111 2 678 2 299 4 113 2 303 6 569 2 114 2 487 6 488 4 574 2 493 4 410 2 580 2 319 4 495 4 686 2 209 2 22 2 497 2 499 2 28 2 29 4 326 2 32 16 126 2 424 6 127 2 218 4 36 2 222 2 599 4 37 4 603 16 709 4 711 2 338 4 135 2 342 2 712 2 227 4 441 2 714 2 613 2 141 2 239 4 617 4 344 2 720 2 618 2 449 2 347 2 520 4 55 2 144 2 146 4 623 4 626 4 147 2 452 4 353 2 248 2 524 2 736 2 66 2 69 2 529 2 71 12 463 2 359 6 260 4 535 6 265 4 744 4 742 2 645 4 537 4 646 2 538 2 272 2 539 6 366 2 367 2 755 2 85 2 86 2 
279 10 280 2 90 2 543 2 663 14 176 2 377 2 477 2 283 2 178 4 95 2 379 2 664 2 382 2 180 28 669 2 559 2 104 2 387 2 386 16 285 2 287 10 106 2 8 6 673 2 391 2 674 2 676 2 297 6 678 2 186 6 300 6 395 2 113 6 302 2 191 4 487 2 488 4 401 2 571 2 309 2 684 2 573 2 489 2 574 2 404 2 120 4 15 2 202 2 579 2 318 6 580 2 581 2 686 2 121 4 209 2 210 2 692 4 497 2 694 2 322 2 585 4 29 2 586 2 697 2 326 2 125 6 423 2 32 22 328 2 126 2 424 4 593 2 503 2 35 2 219 1 330 2 596 6 222 10 129 2 333 2 334 6 599 4 337 2 709 2 605 4 711 2 339 4 712 2 137 2 434 2 231 2 611 4 714 2 140 2 52 2 617 22 54 2 344 2 346 2 720 2 242 2 449 2 347 10 55 2 145 2 243 2 451 2 60 8 61 2 626 4 522 4 147 2 627 2 629 2 453 6 354 2 454 2 525 14 251 8 733 4 527 4 149 4 66 2 151 6 460 2 254 2 461 6 255 8 257 6 158 24 259 2 533 4 639 2 359 6 641 2 160 2 741 2 468 4 469 4 743 2 744 2 649 2 167 4 273 2 274 4 174 4 368 4 83 2 
279 6 222 2 251 2 117 2 315 4 15 2 461 3 97 2 180 2 668 3 582 2 386 2 49 2 107 2 53 2 30 2 347 2 32 2 587 2 113 3 727 2 453 3 278 2 683 2 
279 6 222 2 251 2 117 2 315 4 15 2 461 2 97 2 180 2 668 2 582 2 386 2 49 2 107 2 53 2 30 2 347 2 32 2 587 2 113 2 727 2 453 2 278 2 683 2 
279 6 222 2 251 2 117 2 315 4 15 2 461 2 97 2 180 2 668 2 582 2 386 2 49 2 107 2 53 2 30 2 347 2 32 2 587 2 113 2 727 2 453 2 278 2 683 2 
705 2 89 2 40 2 511 2 577 2 606 3 120 2 15 2 97 2 157 2 180 4 100 2 639 2 687 3 386 2 160 2 321 2 322 2 54 2 392 2 297 4 32 2 113 3 167 2 352 3 590 2 486 4 60 5 522 2 369 2 453 3 
705 2 89 2 40 2 511 2 577 2 606 2 120 2 15 2 97 2 157 2 180 4 100 2 639 2 687 2 386 2 160 2 321 2 322 2 585 2 54 2 123 2 392 2 297 4 32 2 113 2 167 2 352 2 590 2 191 2 486 4 60 4 522 2 369 2 453 2 
705 2 89 2 40 2 511 2 577 2 606 2 120 2 15 2 97 2 157 2 180 4 100 2 639 2 687 2 386 2 160 2 321 2 322 2 585 2 54 2 123 2 392 2 297 4 32 2 113 2 167 2 352 2 590 2 191 2 486 4 60 4 522 2 369 2 453 2 
705 2 89 2 40 2 511 2 577 2 606 2 120 2 15 2 97 2 157 2 180 4 100 2 639 2 687 2 386 2 160 2 321 2 322 2 585 2 54 2 123 2 392 2 297 4 32 2 113 2 167 2 352 2 590 2 191 2 486 4 60 4 522 2 369 2 453 2 
705 2 89 2 40 2 511 2 577 2 606 2 120 2 15 2 97 2 157 2 180 4 100 2 639 2 687 2 386 2 160 2 321 2 322 2 585 4 54 2 123 4 392 2 297 4 32 2 113 2 167 2 352 2 590 2 191 4 486 4 60 4 522 2 369 2 453 2 
622 2 485 2 52 2 246 2 98 2 745 2 
526 2 622 2 236 2 257 2 429 2 323 2 14 2 
375 1 198 2 1 1 379 2 46 2 201 2 357 2 608 2 3 2 4 2 180 10 258 2 609 2 740 2 138 2 717 1 643 2 363 1 389 1 267 2 142 2 296 2 32 8 307 2 172 2 63 2 
708 4 120 6 178 2 433 2 462 2 180 6 74 2 496 2 639 6 534 2 160 6 321 2 8 4 322 6 585 4 54 6 123 2 297 12 346 2 80 2 32 6 167 6 592 2 593 2 486 4 191 2 60 16 540 2 174 2 522 6 
362 2 718 2 456 2 42 2 132 2 298 4 552 7 32 1 152 2 133 2 412 2 180 1 171 1 515 2 594 2 128 2 11 2 598 2 
362 2 718 2 456 2 42 2 132 4 298 4 552 6 152 2 133 2 412 4 515 2 594 4 128 2 11 2 598 2 
362 2 718 2 456 2 42 2 132 8 298 4 552 10 32 1 152 2 133 2 412 8 180 1 171 1 515 8 594 8 128 6 11 2 598 2 
362 2 718 2 456 2 42 2 132 2 298 2 552 2 152 2 133 2 412 2 594 2 11 2 598 2 
661 2 93 2 180 2 637 1 317 1 165 2 32 2 126 2 651 2 
32 2 126 2 651 2 180 2 661 2 165 2 93 2 
32 2 126 2 651 2 180 2 661 2 165 2 93 2 
32 2 126 2 651 2 180 2 661 2 165 2 93 2 
304 2 

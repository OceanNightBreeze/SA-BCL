#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (180,297) (180,297) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NegativeArraySizeException 220 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 47 315 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 106 206 235 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.ClassCastException (56,65) (56,65) (56,65) (56,65) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 47 315 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 47 315 
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 47 315 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 47 315 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 47 315 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 194 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 145 275 281 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 145 275 281 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 145 275 281 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 145 275 281 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:union([I[I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:concat([I[I)[I
daikon.Quant:lexLT([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet; | OPERATOR | 1556 | == -> !=
daikon.Quant:eltwiseGTE([I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:setEqual([I[I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:gte(II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap:size()I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:min([I)I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGT([II)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | CONSTANT | 11643 | 0 -> -1
daikon.ValueTuple:isMissing(I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:slice([III)[I
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | CONDITION | 280460 | if (x) -> if (!x)
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ModBitTracker:split(I)I
utilMDE.MathMDE:negate(I)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ModBitTracker:num_sets()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lte(II)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Invariants:Invariants()V
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | RETURN | 66339 | return null
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Ppt:Ppt()V
daikon.Quant:eltsLteIndex([I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 913 | = null
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:eltsLtIndex([I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ModBitTracker:num_samples()I
daikon.Quant:isReverse([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:dimensions()I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ModBitTracker:num_vars()I
utilMDE.WeakHasherMap:processQueue()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptSlice0:arity()I
utilMDE.Intern:numIntArrays()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 156850 | if (x) -> if (!x)
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18499 | 1 -> -1
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.Intern:intern([I)[I
daikon.Quant:noDups([I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51688 | 64 -> 1
utilMDE.MathMDE:gcd(II)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:eltsLT([II)Z
daikon.ProglangType:isIntegral()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:intersection([I[I)[I
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7862 | if (x) -> if (!x)
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ProglangType:isScalar()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
daikon.Quant:eq(II)Z
daikon.Quant:lt(II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:sameLength([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:memberOf(I[I)Z
daikon.Quant:memberOf(S[S)Z
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:lexGT([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLTE([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Intern:intern([J)[J
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([ZZ)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
107 4 180 2 334 2 50 2 120 2 66 2 327 2 297 2 46 2 
340 6 7 2 2 2 89 2 132 2 236 2 81 2 82 2 248 6 165 2 140 6 
54 2 30 6 319 2 148 2 205 2 11 6 131 6 180 2 164 6 170 2 151 4 296 4 297 2 
224 6 341 2 320 12 258 8 103 8 260 8 67 8 35 2 178 8 291 17 251 17 179 4 332 2 180 4 38 16 49 2 282 4 209 2 297 4 198 8 273 8 
212 4 72 6 
274 2 
146 2 234 2 46 2 237 2 4 2 155 2 99 2 276 2 57 2 105 2 10 2 161 4 162 2 12 4 207 2 326 2 115 2 329 2 287 2 168 4 289 2 68 2 333 2 221 2 222 2 223 2 297 4 336 2 300 2 253 2 339 2 256 2 32 2 259 2 343 2 133 2 263 2 36 2 180 4 181 2 308 2 345 2 309 4 231 2 
213 8 67 4 291 9 251 8 297 4 198 4 273 4 153 2 258 4 103 4 260 4 178 4 180 4 38 8 324 4 13 8 
256 2 342 2 302 2 
300 2 77 22 312 2 100 2 203 2 290 10 69 2 196 2 208 2 183 2 252 2 116 2 85 2 298 2 
67 2 251 2 291 6 292 2 27 2 270 2 173 2 198 2 273 2 224 2 320 4 201 2 258 2 130 2 103 2 228 2 279 2 260 2 178 2 38 4 211 2 
159 4 258 8 87 8 103 8 215 2 229 8 260 8 67 8 251 9 178 8 291 18 109 2 244 4 38 16 49 2 198 8 273 8 
154 2 98 2 135 2 220 2 102 2 137 2 238 2 241 6 71 2 74 2 
64 2 127 2 330 2 101 2 226 2 247 2 184 2 311 2 14 2 274 2 
144 2 232 2 267 2 190 2 314 2 315 2 47 2 91 2 150 2 97 2 277 2 108 2 246 2 210 2 117 2 18 2 214 2 122 2 123 4 218 2 334 2 294 2 28 2 172 4 297 10 299 2 126 2 128 4 176 4 180 10 139 2 
40 2 297 2 
149 2 1 2 297 4 
278 2 
118 6 266 2 41 2 42 2 313 2 288 2 191 2 235 2 293 2 335 2 53 4 152 2 29 2 33 2 240 2 303 2 79 2 106 2 230 2 80 2 323 6 206 2 264 2 37 2 111 2 112 2 265 6 167 6 
280 2 59 2 271 2 62 1 
143 2 271 2 
249 2 341 2 256 2 271 2 322 2 304 2 305 2 
271 2 305 2 21 2 
271 2 45 2 305 2 
280 2 93 2 186 2 
271 2 305 2 
93 2 104 2 
255 2 271 2 
286 2 280 2 93 2 
25 2 280 2 328 2 
307 2 280 2 200 2 
134 2 280 2 88 2 
284 2 280 2 272 2 
93 2 147 2 
175 2 271 2 
25 2 243 2 
307 2 204 2 
250 2 88 2 
19 2 272 2 
93 2 331 2 
166 2 272 2 
88 2 75 2 
307 2 124 2 
25 2 182 2 
286 2 280 2 43 2 93 2 
286 2 280 2 43 2 83 2 93 2 
280 2 93 2 9 2 
280 2 93 2 5 2 
17 2 177 2 90 2 171 2 
261 2 76 2 55 2 217 2 306 2 
280 2 242 2 
15 2 256 2 92 2 322 2 
15 2 6 2 256 2 92 2 322 2 304 2 
341 2 256 2 84 2 271 2 322 2 305 2 
225 2 326 2 
341 2 256 2 322 2 52 2 
39 2 88 2 
24 2 272 2 
25 2 245 2 
307 2 257 2 
16 2 307 2 272 2 
307 2 321 2 272 2 
307 2 317 2 272 2 
307 2 8 2 272 2 
65 2 96 6 73 2 56 6 256 2 58 2 227 2 322 2 
113 2 93 2 
310 2 
144 2 232 2 267 2 190 2 314 2 315 2 47 2 91 2 268 2 150 2 97 2 277 2 108 2 246 2 210 2 117 2 18 2 214 2 122 2 123 4 218 2 334 2 294 2 28 2 172 4 297 10 299 2 128 4 176 4 180 10 139 2 
144 2 232 2 0 1 267 2 190 2 314 2 315 2 47 2 91 2 268 2 150 2 97 2 277 2 108 2 246 2 210 2 117 2 18 2 214 2 122 2 123 4 218 2 334 2 294 2 28 2 172 4 297 10 299 2 174 1 128 5 176 4 180 10 139 2 
144 2 232 2 267 2 190 2 314 2 315 2 47 2 91 2 268 2 150 2 97 2 277 2 108 2 246 2 210 2 117 2 18 2 214 2 122 2 123 4 218 2 334 2 294 2 28 2 172 4 297 10 299 2 128 4 176 4 180 10 139 2 
144 2 232 2 0 2 267 2 190 2 314 2 315 2 47 2 91 2 268 2 150 2 97 2 277 2 108 2 246 2 210 2 117 2 18 2 214 2 122 2 123 4 218 2 334 2 294 2 28 2 172 4 297 10 299 2 174 2 128 6 176 4 180 10 139 2 
144 2 232 2 0 1 267 2 190 2 314 2 315 2 47 2 91 2 268 2 150 2 97 2 277 2 108 2 246 2 210 2 117 2 18 2 214 2 122 2 123 4 218 2 334 2 294 2 28 2 172 4 297 10 299 2 174 1 128 5 176 4 180 10 139 2 
194 2 
163 2 119 2 136 2 138 2 192 2 141 2 
262 2 239 2 136 2 316 2 94 2 3 2 63 2 
86 2 216 2 44 2 23 2 195 2 48 2 219 2 197 2 269 1 150 2 95 2 70 2 297 10 74 1 318 2 337 2 157 2 78 2 199 2 102 1 180 8 60 1 185 2 325 2 114 1 142 2 
213 2 285 2 121 2 87 4 233 2 20 2 67 6 193 2 291 16 251 3 297 6 198 6 273 6 125 2 57 2 338 2 301 4 159 2 258 6 103 6 260 6 178 6 133 2 180 6 38 12 324 2 61 2 13 4 
156 2 187 7 188 2 254 4 31 2 202 2 189 1 34 2 160 2 169 2 26 2 180 1 110 2 344 2 295 2 51 2 297 1 283 2 
156 2 187 6 188 2 254 4 31 2 202 4 34 2 160 2 169 2 26 4 110 2 344 2 295 2 51 2 283 4 
156 2 187 10 188 2 254 4 31 8 202 8 189 1 34 2 160 2 169 6 26 8 180 1 110 2 344 2 295 2 51 2 297 1 283 8 
156 2 187 2 188 2 254 2 202 2 34 2 160 2 26 2 110 2 344 2 295 2 51 2 283 2 
145 2 275 2 158 1 281 2 129 1 
275 2 145 2 281 2 
275 2 145 2 281 2 
275 2 145 2 281 2 
22 2 

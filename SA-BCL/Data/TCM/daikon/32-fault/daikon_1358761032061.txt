#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 604 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 682 352 105 390 380 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 585 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 190 (353,504) 461 (17,481) (353,504) 283 (17,481) 35 129 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.ClassCastException 452 55 438 512 (353,504) 461 (17,481) (353,504) 283 (17,481) 35 129 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.ClassCastException 452 55 438 512 (353,504) 461 (17,481) (353,504) 283 (17,481) 35 129 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.ClassCastException 452 55 438 512 (353,504) 461 (17,481) (353,504) 283 (17,481) 35 129 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 576 
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 117 626 488 328 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.IllegalArgumentException 580 (66,97) (66,97) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.IllegalArgumentException 580 (66,97) (66,97) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.IllegalArgumentException 580 (66,97) (66,97) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.IllegalArgumentException 580 (66,97) (66,97) 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 263 533 433 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 263 533 433 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 263 533 433 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 263 533 433 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:noDups([I)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eltsGteIndex([I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.MathMDE:pow(II)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:max([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:sum([D)D
daikon.PptName:isEnterPoint()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:setEqual([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:subsetOf([D[D)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaCharStream:ReadByte()C
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONSTANT | 64756 | 0 -> -1
utilMDE.ArraysMDE:sum([[I)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:eltsLT([II)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsGT([II)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min([I)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eq(II)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:justified()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant; | RETURN | 547 | return null
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(F[D)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quant:eq(DD)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:slice([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([I[I)Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice0:arity()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:gt(II)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:gcd([I)I
daikon.Ppt:Ppt()V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Intern:intern([D)[D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:logOn()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:eq(JJ)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:readChar()C
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eq(FF)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaCharStream:FillBuff()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:eltsGTE([II)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:size()I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:eltsLteIndex([I)Z
daikon.PptSlice1:num_samples()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap:size()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter; | CONDITION | 5537 | if (x) -> if (!x)
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:negate(I)I
daikon.diff.InvMap:InvMap()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:memberOf(D[F)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:sameLength([I[I)Z
daikon.Quant:memberOf(S[S)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo; | RETURN | 20729 | return null
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:lte(II)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Debug:logOn()Z
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability; | CONDITION | 1674 | if (x) -> if (!x)
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String; | OPERATOR | 49349 | > -> ==
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[F)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariants:Invariants()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptSlice2:arity()I
daikon.ProglangType:dimensions()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([I)[I
daikon.ModBitTracker:num_sets()I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lt(II)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([DD)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
449 2 451 2 403 2 184 4 516 2 207 2 406 2 448 2 604 2 
413 2 92 6 693 2 464 2 305 2 21 6 317 6 235 2 437 2 409 2 133 2 
207 2 194 2 31 2 673 6 375 2 162 2 451 2 173 6 640 4 307 2 275 6 643 6 350 4 
215 10 269 2 249 16 670 4 170 2 674 2 128 10 451 6 676 6 254 12 454 26 681 8 383 2 336 4 411 8 10 4 690 16 414 2 207 6 503 4 323 6 551 10 15 2 479 10 505 8 395 30 19 16 418 8 79 2 168 10 
518 4 489 6 
237 2 
215 4 670 2 249 2 331 2 128 2 492 2 676 2 254 2 201 2 454 4 474 2 111 2 690 2 551 2 479 2 395 6 434 2 19 2 418 2 309 2 168 2 119 2 327 2 
690 8 475 6 249 8 503 2 551 4 479 4 128 4 395 14 19 8 5 6 26 4 272 2 603 2 254 5 454 12 648 4 168 4 
289 2 537 4 122 4 612 4 316 2 63 4 374 2 447 2 543 2 591 4 470 2 65 2 200 10 273 2 494 10 88 2 217 2 473 4 567 2 177 4 384 8 27 2 178 2 335 4 337 2 70 2 524 62 280 6 115 2 304 4 16 14 244 2 365 2 164 2 36 2 508 4 77 4 267 2 367 4 120 4 
499 2 250 2 614 2 590 2 592 2 237 2 366 2 496 2 300 2 423 2 
181 2 51 2 170 2 33 2 232 2 137 2 491 2 295 2 106 2 619 2 37 2 509 2 77 2 9 2 567 2 384 2 521 2 604 2 90 2 120 4 
215 6 608 6 59 4 670 2 249 32 539 6 293 4 613 6 43 2 128 16 451 4 676 4 147 8 26 4 5 6 254 22 87 4 89 2 454 48 681 6 690 32 414 2 475 6 207 4 257 2 303 4 208 4 629 2 551 16 323 4 479 16 395 54 506 6 19 32 631 2 553 2 418 18 648 4 168 16 
65 2 280 2 384 2 
238 22 29 2 57 2 412 2 291 2 541 2 139 10 695 2 345 2 634 2 362 2 522 2 288 2 386 2 
514 2 515 2 609 2 516 2 611 2 517 4 84 2 1 2 85 2 330 2 251 2 520 1 7 2 8 2 339 8 431 4 525 4 14 1 630 2 96 2 262 1 344 3 23 2 266 2 636 5 191 1 100 6 536 2 354 1 103 1 442 1 355 2 356 2 445 2 271 2 451 32 544 1 642 2 277 2 203 3 546 2 205 2 645 2 206 1 28 4 457 2 278 2 549 3 550 2 207 34 32 2 209 3 364 2 34 2 555 2 212 3 459 1 556 2 557 3 117 2 284 2 559 16 286 2 650 2 213 2 290 6 651 2 462 16 652 16 369 3 121 32 123 2 371 2 654 2 563 2 42 2 44 2 465 2 656 2 657 2 131 2 378 2 379 2 568 2 48 6 219 4 659 1 302 2 136 2 476 1 477 2 391 24 393 2 664 2 663 1 665 32 396 2 308 8 397 2 310 2 54 1 399 2 666 4 402 2 578 2 314 2 668 2 56 2 582 2 583 2 485 3 671 2 230 2 231 2 62 2 586 2 490 2 587 4 675 2 593 2 493 3 234 8 405 6 318 2 680 24 599 2 149 1 684 2 686 2 688 2 72 2 155 3 321 2 415 4 322 2 241 16 324 2 242 2 243 12 161 3 75 3 245 2 694 1 510 2 420 2 167 2 80 2 
93 2 
607 2 207 2 
207 4 562 2 467 2 
443 2 376 2 294 2 450 2 105 2 46 6 380 2 682 2 218 2 156 2 390 2 221 2 662 2 341 2 325 6 480 2 575 2 183 2 458 2 38 2 98 6 352 2 
440 1 140 2 363 2 527 2 
140 2 507 2 
534 2 573 2 653 2 384 2 
534 2 573 2 653 2 340 2 384 2 74 2 
534 2 140 2 174 2 384 2 336 2 338 2 
299 2 2 2 
534 2 176 2 384 2 336 2 
134 2 560 2 
691 2 357 2 
112 2 127 2 
429 2 287 2 
154 2 691 2 287 2 
691 2 110 2 287 2 
691 2 132 2 287 2 
691 2 287 2 624 2 
534 2 565 2 384 2 385 6 30 2 223 6 163 2 141 2 
240 2 435 2 
534 2 140 2 174 2 594 2 340 2 384 2 336 2 
140 2 174 2 81 2 
140 2 174 2 216 2 
240 2 69 2 527 2 
140 2 174 2 
535 2 240 2 
140 2 455 2 
240 2 683 2 527 2 
585 2 
171 2 287 2 527 2 
116 2 560 2 527 2 
691 2 192 2 527 2 
240 2 548 2 
140 2 425 2 
359 2 127 2 
258 2 287 2 
60 2 560 2 
569 2 
240 2 672 2 
24 2 691 2 
343 2 560 2 
387 2 287 2 
130 2 127 2 
240 2 248 2 683 2 527 2 
240 2 248 2 486 2 683 2 527 2 
18 2 240 2 527 2 
240 2 67 2 527 2 
228 2 270 2 554 2 333 2 
238 6 153 2 40 2 279 4 159 4 94 2 542 2 306 2 528 2 360 2 224 2 175 2 632 2 76 2 332 2 227 2 349 2 498 2 
145 2 527 2 
167 2 
514 2 609 2 516 2 517 2 330 2 251 2 625 2 431 2 525 2 12 2 432 4 14 2 260 2 185 2 436 2 633 2 265 2 347 2 100 2 445 2 451 26 546 2 205 2 278 2 457 2 207 26 555 2 117 2 284 2 286 2 290 6 462 6 121 4 465 2 44 2 377 2 656 2 131 2 379 6 568 2 48 2 219 4 136 2 665 6 308 2 397 2 310 2 312 4 483 2 666 4 402 2 581 2 578 2 56 2 582 2 583 2 315 2 586 2 490 2 587 4 675 2 405 4 318 2 319 2 407 2 151 2 688 4 415 4 322 2 324 2 243 8 694 2 78 2 80 2 
514 2 609 2 516 2 517 2 330 2 251 2 625 2 431 2 525 2 12 2 432 4 14 2 630 2 260 2 185 2 436 2 265 2 23 2 347 2 100 2 351 2 445 2 451 26 546 2 205 2 457 2 278 2 207 26 364 2 555 2 117 2 284 2 286 2 290 6 462 6 121 4 465 2 44 2 377 2 656 2 131 2 379 6 568 2 48 2 219 4 136 2 665 6 308 2 397 2 310 2 312 4 666 4 402 2 581 2 578 2 56 2 582 2 583 2 315 2 586 2 490 2 587 4 675 2 405 6 318 2 319 2 152 2 151 2 688 4 415 4 322 2 324 2 243 8 694 2 78 2 80 2 513 2 
392 2 
229 2 606 2 
290 4 464 4 616 2 129 2 6 4 618 4 471 2 472 2 570 2 571 2 301 4 255 2 91 2 92 6 13 4 478 2 222 2 526 2 305 2 17 2 342 2 481 2 574 2 21 6 52 2 22 2 437 4 311 4 666 2 400 2 99 2 441 2 358 2 144 8 639 2 25 2 587 2 451 6 107 2 317 6 408 2 278 2 457 2 207 12 693 2 501 2 504 2 324 2 160 2 646 2 552 8 35 2 602 4 283 2 460 10 117 2 80 2 284 2 286 2 422 2 
290 4 464 4 616 2 129 2 6 4 618 4 471 2 658 4 472 2 570 2 571 2 301 4 91 2 92 8 13 4 478 2 526 2 222 2 305 2 17 2 342 2 481 2 574 2 21 6 22 2 437 4 311 4 666 2 400 2 99 2 441 2 358 2 144 8 639 2 25 2 587 2 588 2 451 6 107 2 317 8 408 2 150 2 278 2 457 2 413 2 207 12 693 2 501 2 504 2 324 2 160 2 646 2 552 8 35 2 602 4 283 2 460 10 117 2 80 2 284 2 286 2 422 2 
464 2 526 2 222 2 646 2 342 2 35 2 481 2 129 2 6 2 21 2 618 4 317 2 471 2 437 2 472 2 311 4 422 2 571 2 
290 4 464 4 616 2 129 2 6 4 618 4 471 2 472 2 570 2 571 2 301 4 255 2 91 2 92 6 13 4 478 2 222 2 526 2 305 2 17 2 342 2 481 2 574 2 21 4 52 2 22 2 437 4 311 4 666 2 400 2 99 2 441 2 358 2 144 4 639 2 25 2 587 2 451 6 107 2 317 6 408 2 278 2 457 2 413 2 207 12 501 2 504 2 324 2 160 2 646 2 552 4 35 2 602 4 283 2 460 6 117 2 80 2 284 2 286 2 422 2 
290 4 464 4 616 2 129 2 6 4 618 4 471 2 472 2 133 2 570 2 571 2 301 4 255 2 91 2 92 6 13 4 478 2 222 2 526 2 305 2 17 2 342 2 481 2 574 2 21 6 52 2 22 2 437 4 311 4 666 2 400 2 99 2 441 2 358 2 144 4 639 2 25 2 587 2 451 6 107 2 317 4 408 2 278 2 457 2 207 12 501 2 504 2 324 2 160 2 646 2 552 4 35 2 602 4 283 2 460 6 117 2 80 2 284 2 286 2 422 2 
290 4 464 4 616 2 129 2 6 4 618 4 471 2 472 2 570 2 571 2 301 4 255 2 91 2 92 6 13 4 478 2 222 2 526 2 305 2 17 2 342 2 481 2 574 2 21 6 52 2 22 2 437 4 311 4 666 2 400 2 99 2 441 2 358 2 144 4 639 2 25 2 587 2 451 6 107 2 317 6 408 2 278 2 457 2 207 12 693 2 501 2 504 2 324 2 160 2 646 2 552 8 35 2 602 4 283 2 460 6 117 2 80 2 284 2 286 2 422 2 
290 4 464 4 616 2 129 2 6 4 618 4 471 2 472 2 133 2 570 2 571 2 301 4 255 2 91 2 92 8 13 4 478 2 222 2 526 2 305 2 17 2 342 2 481 2 574 2 21 8 52 2 22 2 437 4 311 4 666 2 400 2 99 2 441 2 358 2 144 8 639 2 25 2 587 2 451 6 107 2 317 6 408 2 278 2 457 2 207 12 693 2 501 2 504 2 324 2 160 2 646 2 552 8 35 2 602 4 283 2 460 10 117 2 80 2 284 2 286 2 422 2 
290 4 464 4 616 2 129 2 6 4 618 4 471 2 472 2 570 2 571 2 301 4 255 2 91 2 92 6 13 4 478 2 222 2 526 2 305 2 17 2 342 2 481 2 574 2 21 6 52 2 22 2 437 4 311 4 666 2 400 2 99 2 441 2 358 2 144 8 639 2 25 2 587 2 451 6 107 2 317 6 408 2 278 2 457 2 207 12 693 2 501 2 504 2 324 2 160 2 646 2 552 8 35 2 602 4 283 2 460 10 117 2 80 2 284 2 286 2 422 2 
514 2 609 2 516 2 427 2 517 2 251 2 330 2 616 2 6 4 618 4 431 2 525 2 91 2 92 12 13 4 526 2 630 2 17 2 342 2 260 2 21 8 437 4 188 2 190 2 100 2 353 2 441 2 358 2 445 2 639 2 25 2 451 18 107 2 108 2 457 2 278 2 207 28 210 2 646 2 552 2 364 2 35 2 283 2 39 2 117 2 284 2 461 2 286 2 290 6 462 6 121 2 464 4 373 2 656 2 129 2 296 2 131 2 379 6 471 2 472 2 133 4 48 2 568 4 49 4 570 2 219 4 301 8 571 2 136 2 478 2 305 4 222 2 481 2 665 8 574 2 53 2 52 2 226 2 310 2 311 4 312 4 666 4 578 2 581 2 56 2 582 2 583 2 315 2 586 2 587 4 317 4 405 6 148 2 408 2 415 4 501 2 502 2 504 2 324 2 160 2 243 2 602 6 421 2 80 2 422 2 
607 2 514 2 247 7 609 2 0 1 516 2 427 2 517 4 251 2 330 2 253 7 86 2 616 2 3 1 6 4 618 4 180 2 431 4 525 4 91 2 92 12 13 4 526 2 93 2 630 2 17 2 342 2 260 2 20 1 21 8 436 2 437 4 188 2 438 2 100 2 439 2 102 2 353 2 441 2 358 2 445 2 639 2 446 2 25 2 451 20 452 2 107 2 108 6 276 1 202 1 546 2 457 2 278 2 207 34 282 2 210 2 646 2 552 6 364 2 35 2 283 2 39 2 117 2 284 2 461 2 286 2 214 2 290 6 462 6 121 2 292 1 464 4 125 2 373 2 467 2 656 2 129 2 296 4 131 2 379 6 471 2 472 2 48 2 568 6 49 4 570 2 219 4 301 8 571 2 135 2 388 2 136 2 478 2 305 4 222 2 481 2 665 8 574 2 308 2 53 2 52 2 226 2 310 2 577 1 311 4 312 4 666 4 55 2 578 2 581 2 56 2 582 2 583 2 315 2 61 2 487 2 586 2 587 4 596 1 317 8 405 6 148 2 236 2 408 2 239 2 73 1 692 2 693 4 415 4 501 2 502 2 504 2 324 2 160 2 243 6 602 6 326 2 421 2 80 2 422 2 512 2 
607 2 514 2 609 2 516 2 427 2 517 4 251 2 330 2 86 2 616 2 6 4 618 4 180 2 431 4 525 4 91 2 92 12 13 4 526 2 93 2 630 2 17 2 342 2 260 2 21 8 436 2 437 4 188 2 438 2 100 2 439 2 102 2 353 2 441 2 358 2 445 2 639 2 446 2 25 2 451 20 452 2 107 2 108 6 546 2 457 2 278 2 207 34 282 2 210 2 646 2 552 6 364 2 35 2 283 2 460 4 39 2 117 2 284 2 461 2 286 2 214 2 290 6 462 6 121 2 464 4 125 2 373 2 467 2 656 2 129 2 296 4 131 2 379 6 471 2 472 2 48 2 568 6 49 4 570 2 219 4 301 8 571 2 135 2 388 2 136 2 478 2 305 4 222 2 481 2 665 8 574 2 308 2 53 2 52 2 226 2 310 2 311 4 312 4 666 4 55 2 578 2 581 2 56 2 582 2 583 2 315 2 61 2 487 2 144 4 586 2 587 4 317 8 405 6 148 2 236 2 408 2 239 2 692 2 693 4 415 4 501 2 502 2 504 2 324 2 160 2 243 6 602 6 326 2 421 2 80 2 422 2 512 2 
607 2 514 2 609 2 516 2 427 2 517 4 251 2 330 2 86 2 616 2 6 4 618 4 180 2 431 4 525 4 91 2 92 16 13 4 526 2 93 2 630 2 17 2 342 2 260 2 21 10 436 2 437 4 532 2 188 2 438 2 100 4 439 2 102 2 353 2 441 2 358 2 445 2 639 2 446 2 25 2 451 18 452 2 107 2 108 6 546 2 278 2 457 2 207 32 282 2 646 2 552 6 364 2 35 2 283 2 460 4 39 2 117 2 285 2 284 2 461 2 286 2 214 2 290 6 462 8 121 4 464 4 125 2 373 2 467 2 656 2 129 2 296 2 131 2 379 8 471 2 472 2 133 2 48 4 568 4 49 4 570 2 219 4 301 8 571 2 135 2 388 2 136 2 478 2 305 4 222 2 481 2 665 12 574 2 308 2 53 2 225 2 52 2 226 2 310 2 311 4 312 6 666 4 55 2 578 2 581 2 56 2 582 2 583 2 315 2 61 2 487 2 144 4 586 2 587 4 64 2 317 10 405 6 148 2 495 2 236 2 408 2 239 2 413 2 692 2 693 4 415 4 501 2 502 2 504 2 324 2 160 2 243 6 602 6 326 2 419 2 421 2 80 2 422 2 512 2 
441 2 464 4 144 4 639 2 25 2 616 2 107 2 618 2 317 6 471 2 472 2 408 2 570 2 301 2 571 2 91 2 207 4 92 4 693 2 13 2 501 2 478 2 305 2 526 2 222 2 646 2 552 6 602 2 574 2 21 6 52 2 437 4 460 4 311 2 422 2 
514 2 609 2 516 2 330 2 251 2 616 2 618 2 622 2 523 2 91 2 92 4 13 2 526 2 630 2 260 2 21 6 437 4 100 3 441 2 358 2 445 2 639 2 25 2 451 24 641 2 107 2 457 2 278 2 550 2 207 28 210 2 646 2 364 2 552 6 460 2 649 2 117 2 284 2 286 2 290 6 462 6 121 3 464 4 656 2 296 2 131 2 379 6 471 2 472 2 568 4 48 3 219 4 570 2 301 2 571 2 136 2 478 2 305 2 222 2 664 2 665 8 574 2 52 2 310 2 311 2 312 4 666 4 581 2 578 2 56 2 582 2 583 2 315 2 586 2 587 4 678 2 317 6 405 6 679 3 408 2 599 2 693 2 415 4 501 2 324 2 602 2 167 2 80 2 422 2 
91 2 572 2 408 2 
91 2 572 2 408 2 
514 2 609 2 516 2 517 4 252 2 330 2 251 2 6 4 618 2 334 2 431 4 525 4 91 4 92 16 13 2 630 2 17 2 260 2 21 12 22 2 437 4 347 4 441 2 193 2 445 2 451 16 545 2 546 4 644 2 204 2 456 2 457 2 278 2 207 24 364 2 552 6 35 2 283 2 460 6 117 2 284 2 461 2 286 2 290 6 462 2 121 2 464 4 561 2 125 2 45 2 656 2 296 2 131 2 379 2 471 4 472 2 133 4 568 4 49 2 219 4 301 4 50 2 136 2 572 2 222 2 305 4 138 4 481 2 665 2 576 2 53 2 398 4 310 2 311 2 666 4 400 2 313 2 142 2 581 2 578 2 56 2 582 2 583 2 315 6 144 4 587 4 317 12 405 6 148 2 320 2 408 4 413 4 415 4 693 4 501 2 324 2 160 2 243 4 602 4 417 2 80 2 511 2 246 2 
82 2 207 4 125 2 229 2 538 2 252 2 589 2 342 2 451 2 296 2 320 2 284 2 511 2 568 2 190 2 667 2 142 2 
514 2 609 2 516 2 517 4 252 2 330 2 251 2 4 2 6 4 618 2 431 4 525 4 91 4 92 16 13 2 630 2 17 2 260 2 21 12 22 2 437 4 347 4 635 2 99 2 441 2 445 2 451 14 545 2 546 4 204 2 456 2 457 2 278 2 207 20 113 2 114 2 364 2 552 6 35 2 283 2 460 6 117 2 284 2 461 2 286 2 290 6 462 2 121 4 464 4 45 2 656 2 131 2 379 2 471 4 472 2 133 4 568 2 49 2 219 4 301 4 50 4 660 2 136 2 389 2 572 2 222 2 305 4 138 4 481 2 665 2 576 2 53 2 398 4 310 2 311 2 666 4 400 2 313 2 581 2 578 2 56 2 582 2 583 2 315 6 144 4 587 4 317 12 405 6 148 2 408 6 413 4 415 4 693 4 501 2 324 2 160 4 243 4 602 4 417 2 80 2 511 2 246 2 
514 2 609 2 516 2 517 4 252 2 330 2 251 2 6 4 618 2 431 4 525 4 91 4 92 16 13 2 630 2 17 2 260 2 21 12 22 2 437 4 347 4 348 2 99 2 441 2 444 2 445 2 451 16 361 2 545 2 546 4 204 2 456 2 457 2 278 2 207 24 364 2 552 6 35 2 283 2 460 6 117 2 284 2 461 2 286 2 290 6 462 2 121 2 464 4 125 2 45 2 656 2 296 2 131 2 379 2 471 4 472 2 298 2 133 4 568 4 49 2 219 4 301 4 50 2 660 2 136 2 572 2 222 2 305 4 138 4 481 2 665 2 576 2 53 2 398 4 310 2 311 2 666 4 400 2 313 2 142 2 581 2 578 2 56 2 582 2 583 2 315 6 144 4 587 4 317 12 405 6 148 2 320 2 408 6 685 2 413 4 415 4 693 4 501 2 324 2 160 4 243 4 602 4 417 2 80 2 511 2 246 2 
609 2 426 2 328 2 638 2 41 2 268 2 610 2 488 2 445 2 564 2 198 2 451 2 656 2 595 2 597 2 405 2 598 2 620 2 600 1 109 2 547 2 219 2 687 1 626 2 628 2 207 6 136 2 415 2 158 2 117 2 
637 2 462 2 121 3 463 2 586 2 519 2 172 2 404 2 451 2 146 2 47 1 617 3 199 2 379 2 48 3 623 2 220 2 500 2 207 2 665 2 436 6 312 2 401 2 100 3 605 4 
637 2 462 2 121 2 463 2 586 2 519 2 172 2 404 2 451 2 146 2 617 2 199 2 379 2 48 2 623 2 220 2 500 2 207 2 665 2 436 6 312 2 401 2 100 2 605 4 
637 2 462 2 121 2 463 2 586 2 519 2 172 2 404 2 451 2 146 2 617 2 199 2 379 2 48 2 623 2 220 2 500 2 207 2 665 2 436 6 312 2 401 2 100 2 605 4 
121 3 652 2 329 4 370 2 124 2 249 2 128 2 469 4 621 2 48 3 179 2 627 3 182 2 479 2 395 5 19 2 261 2 665 2 264 2 189 6 484 4 101 3 58 4 669 4 195 3 586 2 196 2 451 4 199 2 454 4 681 4 690 2 207 10 281 2 416 2 323 2 551 2 166 2 168 2 559 2 
121 2 652 2 329 4 370 2 124 2 249 2 128 2 469 4 254 2 621 2 48 2 179 2 627 2 182 2 479 2 395 4 19 2 261 2 665 2 264 2 189 6 484 4 101 2 58 4 669 4 195 2 586 2 196 2 451 4 199 2 454 4 681 4 690 2 414 2 207 10 281 2 416 2 323 2 551 2 166 2 418 2 168 2 559 2 
121 2 652 2 329 4 370 2 124 2 249 2 128 2 469 4 254 2 621 2 48 2 179 2 627 2 182 2 479 2 395 4 19 2 261 2 665 2 264 2 189 6 484 4 101 2 58 4 669 4 195 2 586 2 196 2 451 4 199 2 454 4 681 4 690 2 414 2 207 10 281 2 416 2 323 2 551 2 166 2 418 2 168 2 559 2 
121 2 652 2 329 4 370 2 124 2 249 2 128 2 469 4 254 2 621 2 48 2 179 2 627 2 182 2 479 2 395 4 19 2 261 2 665 2 264 2 189 6 484 4 101 2 58 4 669 4 195 2 586 2 196 2 451 4 199 2 454 4 681 4 690 2 414 2 207 10 281 2 416 2 323 2 551 2 166 2 418 2 168 2 559 2 
121 2 652 2 329 4 370 2 124 2 249 2 128 2 469 4 254 4 621 2 48 2 179 2 627 2 182 2 479 2 395 4 19 2 261 2 665 2 264 2 189 6 484 4 101 2 58 4 669 4 195 2 586 2 196 2 451 4 199 2 454 4 681 4 690 2 414 4 207 10 281 2 416 2 323 2 551 2 166 2 418 4 168 2 559 2 
430 2 11 2 233 2 453 2 297 2 265 2 372 2 
529 2 453 2 187 2 661 2 579 2 655 2 
584 2 466 2 446 2 197 2 104 2 451 8 677 2 428 2 382 2 410 2 27 1 70 1 71 2 278 2 207 10 601 2 211 2 647 1 482 1 165 1 530 2 186 2 531 2 558 2 368 2 143 2 
608 4 83 2 59 2 249 6 128 6 451 6 147 2 5 4 566 2 254 4 274 2 454 12 681 4 497 2 690 6 414 2 157 2 207 6 629 1 551 6 323 2 479 6 259 2 395 15 19 6 418 3 648 2 346 2 168 6 169 2 424 2 
689 2 469 2 97 2 66 2 669 2 484 2 580 2 
451 1 689 2 468 1 469 2 207 1 97 2 66 2 669 2 484 2 580 2 
689 2 469 2 97 2 66 2 669 2 484 2 580 2 
689 2 469 2 97 2 66 2 669 2 484 2 580 2 
609 2 126 1 615 1 219 2 136 2 433 2 630 2 394 2 95 2 263 2 533 2 445 2 451 6 405 4 68 1 207 6 415 2 364 2 118 2 
609 2 207 6 136 2 415 2 433 2 445 2 394 2 451 6 263 2 381 2 405 2 68 2 533 2 118 2 219 2 
609 2 207 6 136 2 256 2 415 2 433 2 445 2 394 2 451 6 263 2 405 2 68 2 533 2 118 2 219 2 
609 2 207 6 136 2 256 2 415 2 433 2 445 2 364 1 630 1 394 2 451 6 263 2 405 3 68 1 533 2 118 2 219 2 
540 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 259 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (11,403) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 400 665 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException (591,775) 554 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 256 256 474 474 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 479 479 4 4 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 534 (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (495,621) (631,808) (631,808) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (495,621) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (495,621) (495,621) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (495,621) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 607 226 409 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V FAILED junit.framework.AssertionFailedError 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V ERROR java.lang.NullPointerException 187 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 304 20 338 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.UnsupportedOperationException 126 126 389 304 20 338 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaCharStream:readChar()C
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61946 | = null
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:union([I[I)[I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(FF)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set; | CONDITION | 16702 | if (x) -> if (!x)
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:num_sets()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONDITION | 4095 | if (x) -> if (!x)
daikon.PptSlice0:arity()I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:min([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair; | ASSIGN | 2099 | = null
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3_16()Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Ppt:Ppt()V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:lte(II)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3R_49()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 9379 | stmt -> ;
utilMDE.MathMDE:gcd(II)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.Invariant:justified()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.Node:Node()V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ProglangType:isIntegral()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3_1()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsLT([II)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | CONSTANT | 122537 | 0 -> 1
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_54()Z | STATEMENT | 166542 | stmt -> ;
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eq(II)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:ne(II)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.MathMDE:sign(I)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
daikon.Quant:sameLength([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_50()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41894 | return null
utilMDE.MathMDE:mod_positive(II)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(DD)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:jj_2_1(I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Debug:logOn()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eq(JJ)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfo:relate_var()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:gt(II)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:concat([I[I)[I
jtb.Token:newToken(I)Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:subsetOf([D[F)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:gte(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:eltsGTE([II)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String; | CONDITION | 29684 | if (x) -> if (!x)
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus; | RETURN | 17563 | return null
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([J)[J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ProglangType:isFloat()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:dimensions()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:sum([[D)D
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_3R_47()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object; | RETURN | 76505 | return null
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 12410 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:subsetOf([D[D)Z
daikon.ModBitTracker:num_samples()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:memberOf(J[J)Z
daikon.ValueTuple:size()I
daikon.ModBitTracker:split(I)I
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:lexLT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.PptSlice1:arity()I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptName:isEnterPoint()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:logOn()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eltwiseGT([I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 54234 | = null
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
601 2 719 2 619 2 826 2 220 2 65 2 829 2 766 2 236 4 
438 2 114 2 301 2 259 2 171 2 209 2 224 4 455 4 
563 6 584 4 758 2 248 2 45 2 622 6 87 2 543 6 826 2 423 6 97 2 766 2 785 4 
775 2 28 2 138 10 614 4 586 26 111 4 113 2 33 2 251 10 663 2 591 4 8 10 624 10 173 8 813 4 816 10 819 8 90 16 792 16 759 12 605 6 826 6 849 2 766 6 684 6 268 2 491 8 464 16 21 30 523 8 
11 4 403 4 
636 2 
494 2 719 2 221 2 2 2 108 2 725 2 662 2 116 2 391 4 227 2 670 2 177 2 180 2 234 2 453 2 341 2 461 2 796 2 240 2 849 2 632 2 689 2 693 2 470 2 750 2 199 2 700 2 641 2 643 2 255 4 708 4 649 2 876 4 376 2 826 4 762 2 651 2 321 2 766 4 545 2 322 2 435 2 883 2 830 2 
831 2 103 4 138 6 162 4 858 2 807 6 586 48 251 16 63 6 840 2 663 2 478 4 502 2 424 2 624 16 8 16 866 4 813 2 425 4 174 4 426 6 816 16 819 18 428 6 90 32 792 32 647 8 371 4 122 2 759 22 605 4 826 4 766 4 684 4 491 6 464 32 608 6 380 6 21 54 
155 2 180 2 450 2 
231 2 24 2 802 2 705 2 206 2 721 2 871 2 597 2 778 22 496 2 376 2 296 2 129 2 131 10 
47 2 400 2 665 2 655 2 
772 2 816 4 428 6 90 8 371 4 792 8 634 2 614 2 586 12 759 4 251 4 624 4 464 8 8 4 380 6 21 16 425 4 
659 4 273 2 720 4 384 2 81 2 690 2 834 4 855 2 804 2 386 14 724 4 279 2 471 2 782 2 166 10 199 4 699 4 360 2 201 2 333 4 117 2 362 4 38 10 450 2 734 4 754 2 817 4 180 8 234 2 213 2 263 2 876 4 628 2 155 6 186 2 156 4 128 2 404 62 405 4 299 2 
207 2 722 2 636 2 61 2 36 2 751 2 202 2 765 2 334 2 463 2 
774 1 441 2 105 2 327 4 110 1 557 1 448 6 560 1 784 2 118 2 230 1 119 1 562 2 673 2 565 1 337 2 339 3 123 2 568 1 454 2 18 2 675 4 681 1 799 2 577 2 241 6 133 6 800 2 580 2 25 2 692 2 698 2 250 2 253 2 473 2 141 2 39 1 812 2 43 2 370 2 822 2 598 2 262 2 602 2 264 6 710 2 826 30 606 2 825 1 159 2 609 2 836 5 619 2 390 1 168 2 178 2 508 2 397 2 513 2 512 1 846 1 289 11 742 2 401 6 630 4 743 2 79 2 526 1 190 5 531 2 857 1 862 3 310 2 537 2 863 1 755 2 538 4 427 1 91 1 872 2 208 4 317 5 877 1 761 4 544 2 98 2 766 32 215 2 548 2 
462 2 766 2 
460 2 573 2 766 4 
572 2 
323 4 716 4 771 2 219 2 222 2 442 2 444 8 446 2 109 2 278 2 3 50 280 2 115 6 165 10 500 4 170 2 842 10 172 2 669 2 229 8 181 14 510 2 340 14 15 2 125 2 75 4 456 8 342 8 795 8 571 50 677 6 345 14 295 2 402 2 407 4 522 2 130 4 350 14 466 10 132 4 745 10 579 2 82 2 26 8 191 14 468 2 583 14 84 2 585 14 354 50 246 20 194 14 415 2 637 6 859 10 88 2 701 2 254 2 363 4 145 2 814 2 313 14 41 2 365 2 644 2 869 10 258 14 645 2 368 2 151 4 318 6 823 2 542 2 94 4 377 2 266 2 828 2 490 18 270 18 53 2 381 6 547 14 436 2 
374 2 300 2 210 2 793 1 
10 2 300 2 
324 2 300 2 591 2 180 2 261 2 406 2 55 2 
324 2 300 2 237 2 
324 2 300 2 353 2 
358 2 374 2 197 2 
324 2 300 2 
358 2 481 2 
300 2 530 2 
358 2 374 2 727 2 
374 2 556 2 492 2 
374 2 540 2 349 2 
374 2 243 2 140 2 
374 2 417 2 667 2 
358 2 520 2 
300 2 787 2 
556 2 252 2 
48 2 540 2 
140 2 856 2 
293 2 667 2 
358 2 188 2 
667 2 30 2 
134 2 140 2 
182 2 540 2 
331 2 556 2 
358 2 374 2 727 2 288 2 
358 2 374 2 727 2 288 2 330 2 
358 2 374 2 298 2 
358 2 374 2 67 2 
627 2 
233 2 180 2 546 2 261 2 
233 2 180 2 546 2 17 2 261 2 406 2 
591 2 554 2 
396 2 796 2 
320 2 591 2 180 2 261 2 
218 2 140 2 
667 2 574 2 
249 2 556 2 
723 2 540 2 
741 2 667 2 540 2 
536 2 667 2 540 2 
667 2 503 2 540 2 
667 2 540 2 44 2 
195 6 588 2 617 2 66 2 70 2 180 2 261 2 265 6 
358 2 344 2 
102 2 467 2 549 2 736 2 72 2 582 2 509 2 29 2 778 6 739 2 570 2 247 2 418 2 518 2 76 4 46 2 729 2 408 4 
374 2 127 2 
123 2 
1 2 774 2 441 2 105 2 555 2 448 2 118 2 671 2 562 2 790 2 337 2 18 2 675 4 678 2 346 2 679 2 799 2 348 4 465 2 241 4 133 6 800 2 580 2 698 2 253 2 473 2 474 2 812 2 256 2 43 2 820 2 822 2 598 2 484 2 602 2 264 6 604 2 710 2 826 22 606 2 827 2 49 2 159 6 609 2 833 2 277 2 616 2 619 2 282 2 735 2 289 4 847 2 77 2 401 2 630 4 743 2 79 2 746 2 531 2 748 2 537 2 311 2 312 2 538 4 427 2 872 2 208 6 648 2 761 4 544 6 878 2 766 22 768 2 
1 2 774 2 441 2 105 2 555 2 4 2 448 2 118 2 671 2 562 2 790 2 337 2 18 2 675 4 678 2 346 2 679 2 799 2 348 4 465 2 577 2 241 6 133 6 800 2 580 2 698 2 253 2 473 2 479 2 812 2 43 2 820 2 822 2 598 2 484 2 602 2 264 6 604 2 710 2 826 22 606 2 827 2 49 2 159 6 609 2 833 2 277 2 616 2 619 2 282 2 735 2 289 4 847 2 77 2 401 2 630 4 743 2 79 2 746 2 531 2 748 2 306 2 310 2 537 2 311 2 312 2 538 4 427 2 872 2 208 6 648 2 761 4 544 6 766 22 768 2 
561 2 
274 2 841 2 
633 6 160 2 301 2 326 6 106 2 224 4 749 2 414 2 808 2 416 2 696 2 114 2 621 2 171 2 864 2 204 2 625 2 566 2 209 2 875 2 430 2 455 4 319 6 239 2 99 2 631 2 
633 6 160 2 301 2 326 6 106 2 553 2 224 4 749 2 414 2 808 2 416 2 696 2 114 2 621 2 171 2 864 2 204 2 625 2 566 2 209 2 875 2 430 2 152 2 455 4 319 6 239 2 99 2 576 4 631 2 
204 4 160 2 301 2 625 2 550 2 209 2 224 2 31 2 455 2 469 2 808 2 387 2 416 2 603 2 621 2 239 4 99 2 631 2 
160 2 275 6 550 2 326 4 106 2 224 6 613 2 387 2 621 2 171 2 562 2 625 2 566 2 337 2 235 2 455 4 516 2 239 4 682 2 79 2 631 2 633 6 133 4 800 2 301 4 531 2 747 4 806 2 534 2 31 2 414 2 749 2 356 2 469 4 808 2 305 2 357 4 696 2 416 2 37 2 864 2 204 4 148 2 538 2 209 4 430 2 875 2 485 2 602 2 319 4 214 2 603 2 710 2 761 2 95 4 826 6 51 2 766 12 653 2 99 2 
160 2 275 6 550 2 326 4 106 2 224 4 613 2 387 2 621 2 171 2 562 2 625 2 566 2 337 2 455 6 516 2 239 4 682 2 79 2 631 2 633 6 133 4 800 2 301 4 531 2 747 4 806 2 534 2 31 2 414 2 749 2 356 2 469 4 808 2 305 2 357 4 696 2 416 2 308 2 37 2 864 2 204 4 148 2 538 2 209 4 430 2 875 2 485 2 602 2 319 4 214 2 603 2 710 2 761 2 95 4 826 6 51 2 766 12 653 2 99 2 
633 4 160 2 301 2 326 4 106 2 224 4 749 2 414 2 808 2 416 2 696 2 114 2 621 2 171 2 864 2 204 2 625 2 566 2 209 2 875 2 430 2 455 4 319 6 239 2 99 2 631 2 
633 6 160 2 301 2 326 6 106 2 224 4 749 2 414 2 808 2 416 2 696 2 114 2 621 2 171 2 864 2 204 2 625 2 566 2 209 2 875 2 430 2 455 4 319 6 239 2 99 2 631 2 
633 6 160 2 301 2 326 6 106 2 224 4 749 2 414 2 808 2 416 2 696 2 114 2 621 2 171 2 864 2 204 2 625 2 566 2 209 2 875 2 430 2 455 4 319 6 239 2 99 2 631 2 
160 2 275 4 301 2 441 2 747 2 106 2 534 2 806 2 224 2 356 2 414 2 749 2 808 2 416 2 696 2 308 2 621 2 171 2 864 2 812 2 204 2 625 2 566 2 872 2 209 2 875 2 430 2 74 2 455 4 214 2 319 2 95 2 544 2 239 2 766 4 99 2 631 2 
160 2 301 2 106 2 224 4 414 2 749 2 808 2 416 2 696 2 114 2 621 2 171 2 864 2 204 2 625 2 566 2 209 2 875 2 430 2 74 2 455 4 319 4 239 2 99 2 631 2 
633 2 160 2 301 2 326 2 106 2 224 4 414 2 749 2 808 2 416 2 696 2 114 2 621 2 171 2 864 2 204 2 625 2 566 2 209 2 875 2 430 2 74 2 455 4 319 4 239 2 99 2 631 2 
633 2 160 2 301 2 326 2 106 2 224 4 414 2 749 2 808 2 416 2 696 2 114 2 621 2 171 2 864 2 204 2 625 2 566 2 209 2 875 2 430 2 74 2 455 4 319 4 239 2 99 2 631 2 
633 2 160 2 301 2 326 2 106 2 224 4 414 2 749 2 808 2 416 2 696 2 114 2 621 2 171 2 864 2 204 2 625 2 566 2 209 2 875 2 430 2 455 4 319 4 239 2 99 2 631 2 
660 2 105 2 106 2 445 2 224 4 114 2 448 3 118 2 562 2 790 2 566 2 337 2 123 2 455 4 454 2 18 2 675 4 239 2 799 2 348 4 577 2 241 6 133 6 800 2 580 2 801 3 808 2 696 2 698 2 253 2 473 4 257 2 43 2 370 2 822 2 598 2 709 2 602 2 264 8 710 2 606 2 826 24 379 2 159 6 609 2 160 2 613 2 621 2 619 2 171 2 735 2 179 2 625 2 845 2 289 3 401 3 630 4 743 2 79 2 631 2 633 2 301 2 531 2 748 2 749 2 414 2 416 2 310 2 537 2 864 2 204 2 755 2 538 4 209 2 208 6 875 2 430 2 319 4 761 4 766 24 99 2 
696 2 458 2 356 2 
696 2 458 2 356 2 
160 2 326 2 105 2 224 4 114 2 621 2 619 2 664 2 171 2 118 2 735 2 335 2 562 2 232 2 790 2 337 2 455 4 289 2 794 2 18 2 675 4 239 2 630 4 521 2 743 2 799 2 79 2 850 2 577 2 241 6 633 2 133 6 800 2 580 2 301 2 531 2 805 2 748 2 696 2 698 2 473 2 253 2 537 2 310 2 204 2 538 4 43 2 209 2 208 2 598 2 822 2 319 4 264 2 602 2 761 4 710 2 606 2 826 14 766 14 99 2 159 2 
0 2 175 2 773 2 136 2 845 2 31 2 375 2 760 2 473 2 359 2 535 2 841 2 826 2 766 4 769 2 79 2 54 2 
160 2 326 2 495 2 105 2 224 4 114 2 621 2 619 2 664 2 171 2 118 2 735 2 335 2 562 2 232 2 790 2 337 2 455 4 289 4 794 4 18 2 675 4 239 2 630 4 521 2 743 2 799 2 79 2 850 2 577 2 241 6 633 2 22 2 133 6 800 2 580 2 301 2 531 2 805 2 748 2 696 2 698 2 473 2 253 2 537 2 310 2 204 2 538 4 43 2 209 2 208 2 598 2 822 2 319 4 264 2 602 2 761 4 710 2 606 2 826 14 766 14 99 2 159 2 
160 2 326 2 105 2 224 4 114 2 621 2 619 2 664 2 171 2 118 2 735 2 335 2 562 2 232 2 790 2 337 2 455 4 289 2 794 2 18 2 675 4 239 2 630 4 521 2 743 2 799 2 79 2 850 2 577 2 241 6 633 2 133 6 800 2 580 2 301 2 531 2 805 2 748 2 696 2 698 2 473 2 253 2 537 2 310 2 204 2 538 4 43 2 209 2 208 2 598 2 822 2 319 4 264 2 602 2 761 4 710 2 606 2 826 14 766 14 99 2 159 2 
658 8 660 2 661 2 5 2 6 2 448 11 226 2 666 2 7 2 8 2 671 2 9 2 12 2 674 8 16 2 18 2 675 2 676 2 679 2 19 10 680 4 683 2 464 4 241 4 21 8 687 4 688 2 245 2 698 2 695 12 473 2 253 2 251 2 699 2 477 2 703 2 257 2 706 2 483 2 709 2 264 18 488 2 710 2 50 4 712 2 713 26 271 26 715 2 717 2 57 2 720 2 277 2 281 6 499 2 282 22 731 4 732 8 504 2 506 4 73 4 515 2 289 11 290 2 740 2 743 2 744 2 79 2 80 2 746 2 531 2 532 2 748 2 303 2 309 2 537 2 310 2 311 2 753 2 538 4 756 4 315 2 539 2 89 2 316 2 90 4 541 2 759 4 761 4 764 2 544 28 96 4 767 2 766 30 325 2 104 2 774 2 776 3 552 24 112 2 783 2 559 2 118 2 789 2 562 2 790 2 791 2 337 2 792 4 343 4 797 2 346 4 798 2 348 10 575 2 577 2 351 2 133 6 800 2 801 2 137 4 581 2 586 6 590 2 809 2 593 6 362 2 146 2 816 2 819 4 369 2 820 2 821 2 371 4 598 2 822 2 602 2 824 2 826 24 606 2 827 14 378 2 607 2 158 2 157 2 379 2 159 12 609 2 834 2 612 4 837 2 838 10 619 2 840 4 624 2 176 2 184 2 847 2 185 6 401 11 630 2 405 2 189 2 409 2 852 2 410 2 411 2 860 2 420 6 422 2 861 2 640 6 642 6 427 2 428 6 208 12 874 2 648 10 433 2 879 2 880 12 881 2 217 1 654 2 
609 2 104 4 776 2 411 2 661 2 590 2 783 2 448 2 666 2 282 6 287 2 706 2 208 2 184 2 289 2 264 2 343 2 826 2 401 2 766 2 680 2 348 2 654 2 159 2 
609 2 104 4 776 2 411 2 661 2 590 2 783 2 448 2 666 2 282 6 287 2 706 2 208 2 184 2 289 2 264 2 343 2 826 2 401 2 766 2 680 2 348 2 654 2 159 2 
609 2 104 4 776 2 411 2 661 2 590 2 783 2 448 2 666 2 282 6 287 2 706 2 208 2 184 2 289 2 264 2 343 2 826 2 401 2 766 2 680 2 348 2 654 2 159 2 
609 2 661 2 193 2 59 3 586 4 251 2 839 2 624 2 8 2 788 2 816 2 673 2 646 3 90 2 792 2 599 2 600 2 289 3 264 2 605 2 826 2 434 2 519 2 401 3 98 2 766 4 267 3 491 4 464 2 851 2 21 6 
609 2 661 2 193 2 59 2 586 4 251 2 839 2 663 2 624 2 8 2 788 2 816 2 673 2 819 2 646 2 90 2 792 2 599 2 600 2 759 2 289 2 264 2 605 2 826 2 434 2 519 2 401 2 98 2 766 4 267 2 491 4 464 2 851 2 21 4 
609 2 661 2 193 2 59 2 586 4 251 2 839 2 663 2 624 2 8 2 788 2 816 2 673 2 819 2 646 2 90 2 792 2 599 2 600 2 759 2 289 2 264 2 605 2 826 2 434 2 519 2 401 2 98 2 766 4 267 2 491 4 464 2 851 2 21 4 
609 2 661 2 193 2 59 2 586 4 251 2 839 2 663 2 624 2 8 2 788 2 816 2 673 2 819 2 646 2 90 2 792 2 599 2 600 2 759 2 289 2 264 2 605 2 826 2 434 2 519 2 401 2 98 2 766 4 267 2 491 4 464 2 851 2 21 4 
609 2 661 2 193 2 59 2 586 4 251 2 839 2 663 4 624 2 8 2 788 2 816 2 673 2 819 4 646 2 90 2 792 2 599 2 600 2 759 4 289 2 264 2 605 2 826 2 434 2 519 2 401 2 98 2 766 4 267 2 491 4 464 2 851 2 21 4 
32 2 307 2 167 2 139 2 309 2 810 2 
648 2 385 2 529 2 558 2 187 2 810 2 733 2 
58 2 81 1 777 2 531 2 440 2 223 1 107 2 472 2 480 2 730 2 228 2 394 1 69 2 818 2 507 2 596 1 737 2 564 2 121 2 738 2 263 1 153 2 826 8 347 2 766 10 297 2 
770 2 717 2 383 2 2 2 586 12 662 2 251 6 663 2 478 2 8 6 624 6 9 2 426 4 816 6 819 2 428 4 90 6 73 2 647 2 792 6 371 2 511 2 124 2 759 4 605 2 826 6 766 6 491 4 464 6 21 16 
525 2 815 2 13 2 452 2 42 4 161 2 412 1 413 2 211 2 728 2 620 2 419 2 826 1 489 2 294 2 766 1 142 7 284 2 
525 2 815 4 13 2 452 2 42 4 161 2 413 2 211 2 728 2 620 2 419 2 489 4 294 2 142 6 284 4 
525 8 815 8 13 2 452 2 42 4 161 2 412 1 413 2 211 6 728 2 620 2 419 2 826 1 489 8 294 2 766 1 142 10 284 8 
815 2 13 2 452 2 42 2 161 2 413 2 728 2 620 2 419 2 489 2 294 2 142 2 284 2 
439 2 551 2 779 4 443 6 328 6 329 2 225 6 781 6 447 54 668 2 786 116 672 32 567 12 338 2 457 2 126 30 675 100 459 6 685 2 20 2 686 20 577 54 241 216 242 4 23 4 352 24 135 6 244 2 691 6 694 4 587 2 697 12 253 14 35 8 592 14 476 4 811 10 40 2 144 6 147 13 704 20 595 6 482 18 367 2 486 2 373 50 260 6 487 6 154 6 606 8 826 118 52 26 269 2 493 16 382 6 272 2 718 4 56 2 610 4 276 6 611 6 835 4 498 2 164 6 726 6 389 12 615 4 388 6 62 10 618 2 501 54 64 12 169 6 623 4 68 1 285 6 843 4 393 24 395 6 505 24 398 2 514 2 626 5 517 20 291 6 629 2 848 4 630 76 743 14 78 2 524 20 528 6 854 4 192 2 302 4 533 2 196 9 304 2 85 8 639 2 752 6 200 12 421 6 310 54 203 6 205 26 868 10 870 4 429 6 873 2 212 5 93 4 650 4 431 8 763 6 652 2 882 2 766 130 216 4 656 2 100 6 101 6 657 4 
437 2 551 2 611 2 780 2 163 2 497 2 164 2 60 4 329 2 225 2 781 2 62 2 392 2 283 2 786 6 843 2 844 2 672 2 395 2 336 2 451 2 120 2 71 2 567 4 14 2 338 2 183 2 291 2 517 2 459 2 675 20 292 2 399 2 629 4 630 20 743 2 20 2 577 1 241 43 524 2 578 4 27 2 135 2 803 2 83 2 691 2 635 4 355 2 638 2 589 2 304 2 697 4 34 2 198 2 253 2 86 2 200 4 592 2 475 2 361 2 310 1 811 2 143 2 702 2 865 2 40 2 147 2 203 2 704 2 594 2 867 2 868 2 595 2 364 2 314 2 366 2 757 2 149 6 870 2 429 2 150 2 92 4 154 2 432 2 431 6 826 44 606 2 711 2 763 2 714 2 766 46 493 38 
832 2 276 2 389 2 388 2 225 2 615 2 332 2 449 2 786 4 844 2 286 2 672 2 567 2 338 2 238 2 569 2 126 4 675 8 629 2 848 2 630 8 743 2 20 2 78 2 577 4 241 22 853 2 27 2 854 2 638 2 694 2 304 2 589 2 697 2 639 2 253 2 200 2 592 2 476 2 310 4 865 2 144 2 40 2 203 2 147 2 366 2 707 4 372 4 260 2 154 2 650 2 826 26 606 2 763 2 766 26 216 2 100 2 493 14 
56 2 437 2 718 4 439 2 610 2 551 2 611 4 497 2 835 4 164 2 225 2 781 4 618 2 786 8 844 2 395 2 672 2 451 2 567 6 338 2 398 2 626 2 291 2 126 10 459 4 675 14 629 2 630 14 743 2 20 2 685 2 686 10 577 9 241 37 135 4 691 2 196 6 304 2 587 2 697 6 253 2 35 2 200 6 592 2 310 9 40 2 203 2 147 2 595 4 367 2 429 4 873 2 212 2 154 2 431 6 826 26 606 2 763 2 882 2 766 28 269 2 493 14 
527 2 

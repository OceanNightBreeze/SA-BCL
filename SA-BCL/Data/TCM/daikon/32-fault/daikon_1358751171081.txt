#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 531 514 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (281,572) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V ERROR utilMDE.Assert$AssertionException (15,754) 187 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 566 661 641 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 448 
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 373 759 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 373 759 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 373 92 (348,431) 300 (201,386) (348,431) 93 (201,386) 297 643 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 373 92 (348,431) 300 (201,386) (348,431) 93 (201,386) 297 643 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 373 92 (348,431) 300 (201,386) (348,431) 93 (201,386) 297 643 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 299 216 637 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 522 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 347 288 233 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 347 288 233 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 347 288 233 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 347 288 233 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaCharStream:backup(I)V | OPERATOR | 8274 | -= -> |=
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:hashCode()I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.InvMap:InvMap()V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:setDiff([I[I)[I
daikon.ProglangType:isIntegral()Z
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Node:Node()V
utilMDE.Intern:intern([J)[J
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfo:esc_name()Ljava.lang.String; | STATEMENT | 100148 | stmt -> ;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String; | ASSIGN | 6046 | = null
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setEqual([I[I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:gcd(II)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaCharStream:ReadByte()C
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltsLTE([II)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:concat([I[I)[I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaCharStream:BeginToken()C
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:eltsLT([II)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:prob_is_ge(DD)D | STATEMENT | 6797 | stmt -> ;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | CONDITION | 21420 | if (x) -> if (!x)
daikon.PptSlice1:arity()I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:sum([[D)D
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ProglangType:isPointerFileRep()Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z | CONDITION | 4936 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Ppt:Ppt()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | OPERATOR | 36110 | * -> +
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:ne(II)Z
daikon.test.FormatTestCase:passes()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([D)[D
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:isPointer()Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 51862 | != -> <
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set; | CONDITION | 16702 | if (x) -> if (!x)
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.ProglangType:baseIsScalar()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltsGTE([II)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z | ASSIGN | 37692 | = null
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.MathMDE:gcd_differences([I)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:split(I)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
daikon.ProglangType:isScalar()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ModBitTracker:num_samples()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE:negate(I)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:pairwiseGT([I[I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:eltsGteIndex([I)Z | CONSTANT | 179520 | 0 -> -1
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.RootNode:RootNode()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:noDups([I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:relate_var()V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:lexLT([I[I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:intersection([I[I)[I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd([I)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.ModBitTracker:num_vars()I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z | CONDITION | 196771 | if (x) -> if (!x)
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22726 | = null
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_ntk()I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:internSubsequence([JII)[J
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ProglangType:isArray()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:eltwiseLTE([I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gte(II)Z
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ProglangType:isFloat()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 2 186 4 724 2 593 2 656 2 15 2 221 2 9 2 754 2 
771 6 14 2 541 2 553 2 614 2 111 6 502 2 43 2 352 2 66 2 433 6 
168 2 469 2 481 2 89 4 230 2 15 2 542 6 587 6 107 6 262 2 754 2 51 6 747 4 
435 2 537 2 215 4 624 1 599 1 360 6 461 8 739 11 544 1 95 3 627 5 365 3 149 2 466 15 657 2 547 5 180 3 15 5 61 9 307 6 754 5 591 11 663 1 454 2 665 6 287 3 716 14 213 6 
568 4 37 6 
443 2 
193 2 144 2 195 2 47 2 249 2 700 2 149 2 7 2 392 2 54 2 656 2 659 2 255 4 551 2 449 2 156 2 15 4 258 2 754 4 208 2 710 2 19 4 350 2 714 2 569 4 513 2 411 2 128 2 763 2 572 2 129 2 680 2 767 2 77 2 278 2 228 2 470 2 232 2 281 2 284 2 688 2 529 2 532 2 594 4 
596 2 537 2 142 4 215 6 624 2 360 22 461 6 739 32 489 8 517 6 627 16 95 4 150 4 766 2 151 2 466 55 547 4 581 6 224 4 59 2 277 6 748 6 427 2 15 4 61 32 259 4 686 4 306 4 307 16 754 4 591 32 508 6 665 16 23 4 120 2 716 48 287 18 139 6 213 16 
322 2 52 2 281 2 
126 2 313 2 227 22 79 2 314 2 572 2 375 2 775 2 39 10 177 2 330 2 96 2 253 2 312 2 
329 2 531 2 514 2 164 2 
748 6 660 2 360 4 739 8 61 8 259 4 18 2 307 4 627 4 591 8 365 2 466 16 508 6 665 4 23 4 716 12 213 4 
225 2 322 2 421 2 623 2 206 2 425 2 447 2 684 2 335 2 281 4 390 2 52 2 656 2 119 2 24 2 125 6 582 2 
410 2 214 2 651 2 653 2 574 2 443 2 252 2 631 2 223 2 349 2 
0 2 88 2 192 3 598 2 290 2 384 32 482 1 696 1 385 2 484 2 485 2 487 2 603 2 488 1 199 2 5 1 8 2 493 2 703 2 395 6 609 2 12 2 100 2 101 2 205 1 704 2 399 2 705 3 104 3 15 32 706 2 401 2 501 2 108 2 503 2 403 24 504 4 114 2 115 8 209 2 507 2 211 1 406 4 407 2 512 2 28 8 622 2 626 2 414 2 515 2 516 2 319 2 30 1 415 2 519 3 32 2 320 2 416 1 520 2 221 2 632 1 422 4 633 2 634 2 725 3 726 2 325 2 231 2 526 5 234 2 729 16 328 2 430 2 236 1 237 2 240 2 644 2 533 2 535 3 246 2 332 16 141 4 736 3 738 2 737 1 143 2 650 3 248 2 147 2 50 6 743 2 746 2 340 2 552 2 450 1 157 2 751 32 556 2 261 2 754 34 64 24 453 2 162 2 455 2 561 2 456 2 354 16 351 2 268 4 267 2 759 2 67 2 166 2 564 2 565 3 669 2 169 3 171 1 674 3 363 4 463 1 273 2 676 2 675 2 573 2 275 6 768 6 682 2 75 2 368 2 182 2 183 2 584 1 279 2 280 1 373 2 774 2 283 3 80 2 81 2 477 12 592 4 777 8 378 4 84 16 779 2 595 2 
136 2 187 2 754 2 
13 2 212 2 754 4 
413 2 
566 2 26 6 218 2 173 2 698 2 145 4 317 2 175 2 604 2 492 6 57 2 34 2 524 6 132 6 525 2 424 2 612 2 661 2 753 2 473 2 264 2 476 2 641 2 210 2 480 2 356 2 243 2 124 2 
730 1 85 2 321 2 523 2 
491 2 321 2 
575 2 577 2 281 2 179 2 180 2 343 2 321 2 
179 2 121 2 321 2 
426 2 179 2 321 2 
309 2 298 2 85 2 
179 2 321 2 
678 2 298 2 
321 2 434 2 
298 2 85 2 467 2 
558 2 744 2 85 2 
459 2 85 2 745 2 
452 2 436 2 85 2 
235 2 85 2 381 2 
298 2 172 2 
123 2 321 2 
65 2 744 2 
745 2 741 2 
452 2 4 2 
235 2 655 2 
298 2 394 2 
448 2 
610 2 452 2 
256 2 745 2 
744 2 400 2 
298 2 85 2 467 2 557 2 
254 2 298 2 85 2 467 2 557 2 
298 2 85 2 181 2 
298 2 85 2 380 2 
539 2 618 2 628 2 286 2 
639 4 105 2 444 2 555 2 276 2 
85 2 196 2 
207 2 575 2 154 2 281 2 
207 2 575 2 154 2 281 2 687 2 343 2 
575 2 83 2 281 2 179 2 180 2 321 2 
536 2 411 2 
575 2 281 2 180 2 500 2 
452 2 773 2 
235 2 367 2 
178 2 744 2 
745 2 146 2 
235 2 562 2 745 2 
235 2 432 2 745 2 
530 2 235 2 745 2 
176 2 235 2 745 2 
3 2 575 2 681 2 494 6 260 2 281 2 41 6 691 2 
408 2 298 2 
101 2 
88 2 191 2 246 2 695 2 141 4 384 2 290 2 696 2 485 2 488 2 248 2 654 2 50 2 53 2 8 2 549 2 395 4 100 2 706 2 15 18 751 6 556 2 501 2 261 2 754 18 160 2 161 4 268 4 759 2 166 2 67 2 564 2 406 4 407 6 512 2 275 6 221 2 768 2 368 2 633 2 226 2 726 2 325 2 373 2 185 2 592 4 84 6 430 2 237 2 595 2 
88 2 191 2 246 2 695 2 141 4 384 2 290 2 696 2 485 2 488 2 248 2 654 2 50 2 53 2 8 2 549 2 395 6 100 2 706 2 15 18 751 6 556 2 501 2 261 2 754 18 160 2 161 4 351 2 268 4 759 2 166 2 67 2 564 2 406 4 407 6 512 2 275 6 221 2 768 2 368 2 633 2 226 2 726 2 325 2 373 2 185 2 81 2 592 4 84 6 430 2 237 2 595 2 
56 2 
465 2 188 2 
88 2 647 2 141 2 290 2 46 2 538 2 386 2 541 4 194 2 485 2 197 8 294 2 699 2 93 2 94 4 297 2 606 2 658 2 201 2 153 4 14 2 15 6 499 8 754 12 614 4 111 6 664 2 712 2 352 2 268 2 509 4 357 2 510 4 122 2 25 2 719 2 668 2 625 2 673 2 464 2 576 2 721 2 275 4 629 4 74 2 368 2 771 6 583 2 36 10 727 2 471 2 430 2 431 2 237 2 643 2 433 6 595 2 534 2 45 2 245 4 
88 2 647 2 141 2 290 2 46 2 538 2 386 2 541 4 194 2 485 2 197 8 294 2 387 4 699 2 93 2 94 4 297 2 391 2 606 2 658 2 201 2 153 4 14 2 15 6 553 2 499 8 754 12 614 4 111 8 664 2 712 2 506 2 352 2 268 2 509 4 357 2 510 4 122 2 25 2 668 2 673 2 464 2 576 2 721 2 275 4 629 4 74 2 368 2 771 8 583 2 36 10 727 2 471 2 430 2 431 2 237 2 643 2 433 6 595 2 534 2 45 2 245 4 
541 2 294 2 94 4 614 2 111 2 297 2 721 2 712 2 643 2 606 2 658 2 509 2 357 2 201 2 74 2 510 4 433 2 534 2 
88 2 647 2 141 2 290 2 46 2 538 2 386 2 541 4 194 2 485 2 197 4 294 2 699 2 93 2 94 4 297 2 606 2 658 2 201 2 153 4 15 6 553 2 499 4 754 12 614 4 111 6 664 2 712 2 352 2 268 2 509 4 357 2 510 4 122 2 25 2 719 2 668 2 625 2 673 2 464 2 576 2 721 2 275 4 629 4 74 2 368 2 771 6 583 2 36 6 727 2 471 2 430 2 431 2 237 2 643 2 433 4 595 2 534 2 45 2 245 4 
88 2 647 2 141 2 290 2 46 2 538 2 386 2 541 4 194 2 485 2 197 4 294 2 699 2 93 2 94 4 297 2 606 2 658 2 201 2 153 4 15 6 499 4 754 12 614 4 111 4 502 2 664 2 712 2 352 2 268 2 509 4 357 2 510 4 122 2 25 2 719 2 668 2 625 2 673 2 464 2 576 2 721 2 275 4 629 4 74 2 368 2 771 6 583 2 36 6 727 2 471 2 430 2 431 2 237 2 643 2 433 6 595 2 534 2 45 2 245 4 
88 2 647 2 141 2 290 2 46 2 538 2 386 2 541 4 194 2 485 2 197 8 294 2 699 2 93 2 94 4 297 2 606 2 658 2 201 2 153 4 14 2 15 6 499 4 754 12 614 4 111 6 664 2 712 2 352 2 268 2 509 4 357 2 510 4 122 2 25 2 719 2 668 2 625 2 673 2 464 2 576 2 721 2 275 4 629 4 74 2 368 2 771 6 583 2 36 6 727 2 471 2 430 2 431 2 237 2 643 2 433 6 595 2 534 2 45 2 245 4 
88 2 647 2 141 2 290 2 46 2 538 2 386 2 541 4 194 2 485 2 197 8 294 2 699 2 93 2 94 4 297 2 606 2 658 2 201 2 153 4 14 2 15 6 499 8 754 12 614 4 111 6 502 2 664 2 712 2 352 2 268 2 509 4 357 2 510 4 122 2 25 2 719 2 668 2 625 2 673 2 464 2 576 2 721 2 275 4 629 4 74 2 368 2 771 8 583 2 36 10 727 2 471 2 430 2 431 2 237 2 643 2 433 8 595 2 534 2 45 2 245 4 
88 2 647 2 141 2 290 2 46 2 538 2 386 2 541 4 194 2 485 2 197 8 294 2 699 2 93 2 94 4 297 2 606 2 658 2 201 2 153 4 14 2 15 6 499 8 754 12 614 4 111 6 664 2 712 2 352 2 268 2 509 4 357 2 510 4 122 2 25 2 719 2 668 2 625 2 673 2 464 2 576 2 721 2 275 4 629 4 74 2 368 2 771 6 583 2 36 10 727 2 471 2 430 2 431 2 237 2 643 2 433 6 595 2 534 2 45 2 245 4 
1 2 384 2 194 2 386 2 602 6 197 2 388 2 8 2 605 2 606 2 607 6 201 2 395 6 13 6 204 6 398 6 15 24 402 1 614 4 406 4 25 2 407 6 27 2 625 2 413 6 220 2 29 6 629 4 221 2 422 2 633 2 226 4 36 2 635 2 430 2 431 2 237 2 640 2 643 2 645 1 433 8 45 2 245 8 246 2 647 2 46 4 247 2 438 1 248 2 652 2 48 2 654 2 50 2 53 2 658 2 63 2 261 2 664 2 268 4 67 2 269 6 666 2 668 2 270 6 462 10 672 1 673 2 274 2 464 2 275 6 679 2 74 2 76 2 471 2 474 2 81 2 477 4 84 6 689 2 88 2 290 2 483 6 485 2 486 1 294 2 699 2 92 2 93 2 94 4 490 6 702 2 297 2 100 12 300 2 301 7 706 2 501 2 111 4 502 4 712 2 115 2 310 2 509 4 510 4 122 2 512 2 130 6 721 2 521 2 723 6 323 4 325 2 726 2 134 2 135 1 727 2 527 1 528 2 733 2 534 2 141 4 538 4 541 4 148 7 153 6 344 2 552 2 751 8 556 2 754 46 348 2 755 2 161 4 757 2 351 2 352 4 357 2 758 2 166 2 564 2 167 2 570 6 361 6 363 2 576 2 765 4 578 8 768 2 579 2 580 1 368 2 370 1 771 12 583 2 376 2 592 4 378 2 187 6 595 2 
88 2 1 2 384 2 290 2 483 6 386 2 194 2 602 6 485 2 197 6 294 2 92 2 699 2 93 2 388 2 702 2 490 6 94 4 297 2 8 2 605 2 607 6 606 2 201 2 395 6 13 6 204 6 100 12 300 2 398 6 14 4 706 2 15 24 501 2 111 8 614 4 712 2 115 2 310 2 509 4 510 4 122 2 406 4 407 6 512 2 27 2 625 2 413 6 130 6 220 2 29 6 318 2 721 2 521 2 221 2 629 4 723 6 323 4 633 2 422 4 226 4 134 2 635 2 726 2 325 2 727 2 528 2 430 2 431 2 237 2 640 2 643 2 733 2 433 8 245 8 45 2 534 2 647 2 246 2 141 4 46 2 247 2 538 2 541 4 248 2 652 2 48 2 654 2 50 2 53 2 658 2 153 6 344 2 552 2 63 2 751 8 556 2 261 2 348 2 754 46 755 2 161 4 664 2 757 2 352 4 351 2 268 4 357 2 758 2 166 2 67 2 269 6 167 2 564 2 666 2 668 2 270 6 570 6 462 10 361 6 673 2 363 4 274 2 576 2 679 2 275 6 765 4 578 8 768 2 74 2 579 2 368 2 583 2 771 12 471 2 373 2 376 2 474 2 81 2 477 6 592 4 378 4 689 2 84 6 187 6 692 2 595 2 
88 2 1 2 384 2 290 2 483 6 386 2 194 2 602 6 485 2 197 6 294 2 92 2 699 2 93 2 388 2 702 2 490 6 94 4 297 2 8 2 605 2 607 6 606 2 201 2 395 6 13 6 204 6 100 12 300 2 398 6 14 4 706 2 15 24 499 4 501 2 111 8 614 4 712 2 115 2 310 2 509 4 510 4 122 2 406 4 407 6 512 2 27 2 625 2 413 6 130 6 220 2 29 6 318 2 721 2 521 2 221 2 629 4 723 6 323 4 633 2 422 4 226 4 36 4 134 2 635 2 726 2 325 2 727 2 528 2 430 2 431 2 237 2 640 2 643 2 733 2 433 8 245 8 45 2 534 2 647 2 246 2 141 4 46 2 247 2 538 2 541 4 248 2 652 2 48 2 654 2 50 2 53 2 658 2 153 6 344 2 552 2 63 2 751 8 556 2 261 2 348 2 754 46 755 2 161 4 664 2 757 2 352 4 351 2 268 4 357 2 758 2 166 2 67 2 269 6 167 2 564 2 666 2 668 2 270 6 570 6 462 10 361 6 673 2 363 4 274 2 576 2 679 2 275 6 765 4 578 8 768 2 74 2 579 2 368 2 583 2 771 12 471 2 373 2 376 2 474 2 81 2 477 6 592 4 378 4 689 2 84 6 187 6 692 2 595 2 
88 2 1 2 384 4 290 2 483 6 386 2 194 2 602 6 485 2 197 6 294 2 92 2 699 2 93 2 388 2 702 2 490 6 94 4 297 2 8 2 605 2 607 6 606 2 201 2 395 6 13 6 204 6 396 2 100 10 300 2 398 6 14 4 706 2 15 22 499 4 501 2 502 2 111 10 614 4 712 2 115 2 310 2 509 4 510 4 122 2 406 4 619 2 407 8 512 2 27 2 625 2 413 6 130 6 220 2 29 6 318 2 721 2 521 2 221 2 629 4 723 6 323 4 422 4 633 2 226 4 36 4 134 2 635 2 726 2 325 2 727 2 528 2 638 2 327 2 430 2 431 2 237 2 640 2 643 2 733 2 433 10 245 8 45 2 534 2 648 2 647 2 246 2 141 4 46 2 247 2 538 2 541 4 248 2 652 2 48 2 654 2 50 4 53 2 658 2 546 2 153 6 344 2 552 2 553 2 63 2 751 12 556 2 261 2 348 2 754 44 755 2 161 6 664 2 757 2 352 4 351 2 268 4 357 2 758 2 166 2 67 2 269 6 167 2 564 2 666 2 668 2 270 6 570 6 462 8 361 6 673 2 363 4 274 2 576 2 679 2 275 6 765 4 578 8 768 4 74 2 579 2 368 2 583 2 771 16 471 2 373 2 376 2 81 2 477 6 592 4 378 4 689 2 84 8 187 6 692 2 595 2 
647 2 668 2 625 2 541 4 197 6 673 2 699 2 94 2 721 2 576 2 629 2 658 2 606 2 74 2 153 2 583 2 771 4 36 4 14 2 727 2 471 2 499 4 754 4 614 4 111 6 664 2 712 2 352 2 357 2 510 2 122 2 433 6 245 2 45 2 534 2 
0 2 88 2 598 2 290 2 384 3 697 2 194 2 485 2 197 6 699 2 94 2 8 2 606 2 395 6 100 4 99 3 101 2 14 2 706 2 15 24 304 2 501 2 111 6 614 4 712 2 510 2 122 2 406 4 407 6 512 2 625 2 721 2 629 2 221 2 633 2 226 2 36 2 325 2 726 2 727 2 430 2 237 2 433 6 245 2 534 2 45 2 647 2 246 2 141 4 541 4 248 2 654 2 50 3 53 2 658 2 153 2 751 8 556 2 261 2 754 28 266 2 161 4 664 2 352 2 351 2 268 4 357 2 67 2 166 2 564 2 667 2 668 2 170 2 462 2 673 2 675 2 576 2 275 6 768 3 74 2 368 2 583 2 771 4 471 2 474 2 81 2 592 4 84 6 595 2 
583 2 60 2 699 2 
583 2 60 2 699 2 
88 2 597 2 290 2 384 2 386 2 485 2 197 6 699 4 93 2 94 2 297 2 8 2 200 2 201 2 395 6 98 2 100 4 300 2 302 2 14 4 15 16 706 2 499 4 501 2 614 4 111 12 502 4 712 2 509 4 510 2 25 2 406 4 407 2 620 2 512 2 221 2 629 2 323 2 422 4 633 2 226 6 36 6 635 2 325 2 430 2 237 2 42 2 433 12 734 2 140 2 534 2 245 4 246 2 647 2 141 4 46 4 538 2 540 2 541 4 248 2 742 4 654 2 441 2 53 2 153 4 749 2 60 2 552 4 553 4 751 2 346 2 556 2 261 2 754 24 757 2 351 2 352 4 268 4 163 2 67 2 166 2 760 4 269 2 564 2 462 2 673 2 363 4 275 6 765 2 74 4 368 2 583 6 771 16 586 2 81 2 477 4 592 4 378 4 377 2 84 2 690 2 285 2 382 4 595 2 
323 2 98 2 100 2 586 2 271 2 462 2 15 2 485 2 294 2 70 2 92 2 754 4 701 2 465 2 200 2 758 2 269 2 
88 2 290 2 384 4 386 2 485 2 197 6 699 4 93 2 94 2 297 2 8 2 200 2 201 2 395 6 98 2 100 2 300 2 302 2 14 4 15 16 706 2 499 4 501 2 614 4 111 12 502 4 712 2 509 4 510 2 717 2 25 2 406 4 407 2 512 2 629 2 221 2 422 4 633 2 226 6 36 6 635 2 325 2 636 2 430 2 40 2 237 2 642 2 242 2 433 12 734 2 140 2 245 4 534 2 246 2 647 2 141 4 46 4 538 4 540 4 541 4 248 2 742 4 654 2 53 2 153 4 749 2 60 2 552 4 553 4 751 2 346 2 556 2 261 2 754 24 757 2 351 2 352 4 268 4 163 2 67 2 166 2 760 4 269 2 564 2 673 2 363 4 464 2 275 6 765 2 74 4 368 2 583 6 771 16 586 2 81 2 477 4 592 4 378 4 377 2 84 2 690 2 285 2 382 4 595 2 
88 2 290 2 384 2 386 2 485 2 197 6 293 2 699 4 93 2 94 2 297 2 8 2 200 2 201 2 395 6 498 2 98 2 100 4 300 2 302 2 14 4 15 16 706 2 499 4 501 2 614 4 111 12 502 4 712 2 509 4 510 2 25 2 406 4 407 2 512 2 221 2 629 2 323 2 422 4 633 2 226 6 36 6 635 2 325 2 430 2 237 2 433 12 734 2 140 2 534 2 245 4 246 2 647 2 141 4 46 4 538 4 540 2 541 4 248 2 742 4 654 2 53 2 153 4 749 2 60 2 552 4 553 4 751 2 346 2 556 2 261 2 754 24 757 2 351 2 352 4 268 4 163 2 67 2 166 2 760 4 269 2 564 2 762 2 462 2 673 2 363 4 464 2 275 6 765 2 74 4 368 2 583 6 771 16 371 2 586 2 81 2 477 4 592 4 778 2 378 4 377 2 84 2 690 2 285 2 382 4 595 2 
191 2 1 46 2 4 384 19 198 2 389 2 8 2 605 2 608 2 393 2 11 3 202 3 395 12 396 2 611 2 15 30 17 16 613 2 20 4 615 6 616 2 404 2 21 3 405 2 23 4 406 6 213 4 407 14 619 2 215 6 217 4 216 2 412 2 220 2 627 4 31 2 417 2 418 2 33 2 221 4 630 2 419 2 35 2 226 2 428 2 637 2 38 3 638 2 429 2 430 2 237 2 241 2 646 4 246 4 648 2 649 2 437 2 440 2 50 19 53 2 250 4 55 2 58 2 446 2 257 2 61 8 62 2 263 4 451 2 662 2 266 2 268 4 665 4 67 4 68 2 457 2 460 2 666 2 667 2 69 2 670 2 671 2 71 2 72 2 677 38 275 6 679 4 466 16 78 14 468 2 683 2 685 2 282 2 475 2 81 4 477 42 82 2 84 14 478 2 693 24 694 14 287 4 86 2 87 2 88 2 290 2 696 2 90 2 485 2 291 3 292 2 488 2 296 2 95 4 299 2 495 2 496 10 100 2 99 2 103 12 303 2 106 4 304 2 305 4 501 4 707 2 709 2 109 2 307 4 110 2 308 1 112 2 711 10 113 12 115 20 116 2 117 2 118 2 311 4 120 4 715 2 716 12 718 2 512 4 127 2 315 2 518 6 521 2 722 2 324 2 726 2 325 2 133 2 729 4 326 10 327 2 732 4 137 2 138 2 331 2 141 4 332 4 735 2 333 2 739 8 334 4 740 2 543 2 336 2 338 2 339 10 546 2 152 2 548 2 549 2 342 2 748 6 750 4 552 4 751 28 554 2 556 2 158 2 754 40 160 2 559 2 756 2 161 12 560 10 351 4 353 2 355 2 563 2 165 14 166 2 167 2 564 2 761 2 358 2 567 2 170 2 360 6 174 2 362 2 364 2 764 4 766 2 768 16 579 2 770 40 368 2 369 2 184 4 772 16 585 2 372 12 588 6 374 2 185 2 592 6 591 8 379 2 780 2 781 4 190 2 383 2 595 2 
407 2 69 2 1 6 384 2 50 2 339 4 768 2 11 2 446 2 35 2 726 2 585 2 15 2 751 2 282 2 754 2 326 2 84 2 161 2 560 2 138 2 782 2 405 2 457 2 
407 2 69 2 1 6 384 2 50 2 339 4 768 2 11 2 446 2 35 2 726 2 585 2 15 2 751 2 282 2 754 2 326 2 84 2 161 2 560 2 138 2 782 2 405 2 457 2 
407 2 69 2 1 6 384 2 50 2 339 4 768 2 11 2 446 2 35 2 726 2 585 2 15 2 751 2 282 2 754 2 326 2 84 2 161 2 560 2 138 2 782 2 405 2 457 2 
332 2 359 2 384 3 215 4 739 2 291 3 131 2 439 2 6 2 389 4 627 2 95 2 50 3 250 2 466 5 222 2 445 2 495 4 35 2 203 4 726 2 229 3 16 2 15 4 61 2 751 2 38 3 307 2 729 2 754 10 591 2 662 4 617 2 239 2 189 2 665 2 68 4 716 4 213 2 646 6 
332 2 384 2 739 2 291 2 6 2 439 2 389 4 95 2 50 2 250 2 445 2 495 4 203 4 15 4 16 2 61 2 751 2 754 10 307 2 662 4 617 2 665 2 716 4 68 4 213 2 359 2 215 4 360 2 624 2 131 2 627 2 466 4 222 2 35 2 726 2 229 2 38 2 729 2 591 2 239 2 189 2 287 2 646 6 
332 2 384 2 739 2 291 2 6 2 439 2 389 4 95 2 50 2 250 2 445 2 495 4 203 4 15 4 16 2 61 2 751 2 754 10 307 2 662 4 617 2 665 2 716 4 68 4 213 2 359 2 215 4 360 2 624 2 131 2 627 2 466 4 222 2 35 2 726 2 229 2 38 2 729 2 591 2 239 2 189 2 287 2 646 6 
332 2 384 2 739 2 291 2 6 2 439 2 389 4 95 2 50 2 250 2 445 2 495 4 203 4 15 4 16 2 61 2 751 2 754 10 307 2 662 4 617 2 665 2 716 4 68 4 213 2 359 2 215 4 360 2 624 2 131 2 627 2 466 4 222 2 35 2 726 2 229 2 38 2 729 2 591 2 239 2 189 2 287 2 646 6 
332 2 384 2 739 2 291 2 6 2 439 2 389 4 95 2 50 2 250 2 445 2 495 4 203 4 15 4 16 2 61 2 751 2 754 10 307 2 662 4 617 2 665 2 716 4 68 4 213 2 359 2 215 4 360 4 624 4 131 2 627 2 466 4 222 2 35 2 726 2 229 2 38 2 729 2 591 2 239 2 189 2 287 4 646 6 
423 2 289 2 366 2 333 2 590 2 522 2 
78 2 497 2 345 2 22 2 590 2 91 2 97 2 
621 2 409 2 570 2 601 2 337 2 442 1 73 2 769 2 368 2 550 2 155 2 397 2 425 1 206 1 102 2 15 8 472 2 589 2 159 2 728 2 708 2 754 10 505 1 731 1 244 2 511 2 
142 2 215 4 513 2 600 2 437 2 360 4 624 2 272 2 571 2 739 6 489 2 627 6 95 2 764 2 251 2 466 16 277 4 748 4 15 6 61 6 754 6 307 6 429 2 284 2 591 6 665 6 23 2 716 12 287 2 213 6 
420 7 15 1 316 1 752 2 754 1 545 2 265 2 776 2 662 2 479 2 238 2 713 4 44 2 68 2 10 2 495 2 341 2 
420 4 752 2 545 2 265 2 776 2 662 2 479 2 238 2 713 4 44 2 68 2 495 2 341 2 
420 4 15 1 316 1 752 2 754 1 545 2 265 2 776 2 662 2 479 2 238 2 713 4 44 2 68 2 495 2 341 2 
420 2 752 2 545 2 265 2 776 2 662 2 479 2 238 2 713 2 44 2 68 2 495 2 341 2 
246 2 288 2 295 1 395 4 15 4 501 2 347 2 754 4 351 2 67 2 406 2 219 1 720 2 233 2 81 2 592 2 
395 2 592 2 246 2 720 2 288 2 15 4 67 2 501 2 347 2 233 2 406 2 754 4 
395 2 592 2 246 2 720 2 288 2 15 4 67 2 501 2 347 2 233 2 406 2 754 4 
395 4 246 2 288 2 15 4 501 2 233 2 347 2 754 4 81 2 720 2 592 2 351 2 67 2 406 2 
458 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 623 635 35 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V ERROR java.lang.ArrayIndexOutOfBoundsException 510 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 629 
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V ERROR java.lang.NullPointerException 339 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (29,384) 639 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 54 (27,807) 355 (567,690) (27,807) 450 (567,690) 250 722 
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 54 (27,807) 355 (567,690) (27,807) 450 (567,690) 250 722 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 475 754 83 94 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 496 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 671 430 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 106 106 291 398 506 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:lte(II)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 2084 | = null
daikon.PptSlice0:arity()I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:eq(DD)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 182066 | = null
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([[D)D | STATEMENT | 9149 | stmt -> ;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ProglangType:baseIsScalar()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | RETURN | 1469 | return null
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfo:new_ppt()V
utilMDE.MathMDE:gcd_differences([I)I | CONSTANT | 5121 | 0 -> 1
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:gte(II)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:max([I)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:subsetOf([B[I)Z
daikon.PptSlice1:arity()I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 3450 | return null
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eq(II)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:slice([III)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 266434 | = null
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Debug:logDetail()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariants:Invariants()V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:isReverse([I[I)Z
utilMDE.MathMDE:negate(I)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[F)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13889 | = null
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | STATEMENT | 54139 | stmt -> ;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsLT([II)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaCharStream:getEndColumn()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177183 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:intern([D)[D
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 956 | = null
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(JJ)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(J[J)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsGtIndex([I)Z | OPERATOR | 179154 | ++ -> --
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Intern:intern([I)[I
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:union([I[I)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J | OPERATOR | 13933 | > -> <=
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Ppt:Ppt()V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:dimensions()I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.MathMDE:pow(II)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 18743 | = null
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaCharStream:getEndLine()I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfo:relate_var()V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.Node:Node()V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsLTE([II)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | RETURN | 37622 | return null
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
738 4 727 2 406 2 22 2 390 2 172 2 89 2 692 2 203 2 
600 6 659 2 604 2 219 2 493 6 454 2 259 2 119 2 55 6 222 2 380 2 
158 2 324 2 365 2 805 2 188 4 830 4 320 2 524 4 814 4 
164 4 216 10 193 8 139 10 792 2 170 16 535 16 654 6 202 16 277 10 669 2 11 4 404 8 145 10 146 2 406 6 88 2 149 2 605 12 803 8 442 10 696 4 157 4 520 2 22 6 497 2 581 8 344 6 781 29 350 26 
667 6 842 4 
396 2 
81 2 593 2 687 2 435 2 244 2 204 2 40 2 29 2 
290 6 73 4 526 4 216 16 217 2 758 6 680 2 452 4 6 6 271 4 247 6 139 16 111 8 300 6 792 2 170 32 534 2 535 32 654 4 202 32 277 6 537 2 145 16 370 4 404 18 406 4 513 4 720 4 605 22 514 2 442 16 696 2 340 6 22 4 581 6 344 4 781 54 523 2 350 48 
717 2 69 2 29 2 
280 2 384 2 386 2 132 2 824 22 606 2 152 2 357 2 316 2 743 2 448 2 552 2 349 2 642 10 
389 2 426 2 216 2 139 2 170 2 436 2 654 2 535 2 202 2 277 4 145 2 404 2 489 2 605 2 442 2 721 2 311 2 696 2 773 2 777 2 781 6 350 4 615 2 
290 6 73 4 145 4 513 4 605 4 4 2 216 4 442 4 340 6 139 4 682 2 170 8 535 8 781 16 202 8 11 2 350 12 
742 2 185 2 372 2 409 6 294 2 352 2 105 2 656 2 
705 2 78 2 356 2 484 2 396 2 252 2 279 2 417 2 120 2 123 2 
322 3 101 2 644 2 323 2 549 2 550 2 648 1 106 2 649 2 8 2 112 1 732 2 736 3 554 2 740 4 117 2 337 8 558 2 118 1 467 2 468 1 121 2 22 34 745 2 124 2 747 16 343 4 345 2 125 2 126 2 347 2 751 2 130 2 753 3 477 2 131 2 756 2 480 3 245 6 481 2 28 2 31 1 666 3 570 2 33 3 251 1 366 1 574 2 764 2 672 2 369 4 256 1 490 2 673 1 373 2 676 24 39 2 776 2 43 1 495 2 44 2 263 2 379 2 784 2 265 1 382 2 585 2 587 3 500 3 678 2 385 1 789 2 268 2 388 2 167 8 53 1 273 2 793 3 505 2 56 2 276 2 596 8 598 2 402 2 176 2 685 2 178 2 512 2 405 3 281 2 406 32 802 2 407 2 688 2 283 2 692 2 408 2 515 2 411 4 694 2 285 2 413 2 415 32 184 2 809 2 613 2 419 32 813 4 70 2 422 1 293 2 530 2 194 2 196 24 82 2 297 2 622 2 432 6 625 2 199 2 299 2 714 6 624 16 434 1 84 2 716 2 86 16 303 4 437 2 719 6 87 2 634 2 831 2 90 4 833 5 92 1 446 16 723 4 318 2 209 2 210 2 640 2 838 2 546 8 641 2 843 3 643 3 
22 2 187 2 
22 4 143 2 288 2 
183 2 
476 2 590 2 760 2 551 2 623 2 140 2 794 4 595 2 401 2 735 2 511 2 771 2 35 2 309 2 577 2 635 2 828 2 443 2 410 2 46 2 498 2 499 2 840 2 844 4 
295 2 739 1 479 2 763 2 
295 2 492 2 
295 2 164 2 597 2 135 2 639 2 29 2 750 2 
295 2 597 2 174 2 
295 2 518 2 597 2 
420 2 763 2 351 2 
295 2 597 2 
679 2 420 2 
295 2 525 2 
420 2 763 2 155 2 
189 2 763 2 17 2 
93 2 674 2 763 2 
509 2 763 2 13 2 
483 2 763 2 230 2 
420 2 18 2 
295 2 371 2 
618 2 189 2 
674 2 287 2 
13 2 206 2 
510 2 
226 2 420 2 
483 2 278 2 
629 2 13 2 
674 2 65 2 
650 2 189 2 
336 2 420 2 763 2 155 2 
592 2 336 2 420 2 763 2 155 2 
612 2 420 2 763 2 
296 2 420 2 763 2 
339 2 103 2 
23 2 583 2 639 2 29 2 
23 2 668 2 135 2 583 2 639 2 29 2 
295 2 164 2 522 2 597 2 639 2 29 2 
257 2 556 2 
315 2 164 2 639 2 29 2 
652 2 13 2 
483 2 96 2 
429 2 189 2 
674 2 826 2 
483 2 674 2 190 2 
16 2 483 2 674 2 
483 2 674 2 507 2 
241 2 483 2 674 2 
607 2 639 2 29 2 66 2 172 2 
305 2 420 2 
334 2 463 2 548 2 824 6 64 4 675 2 260 2 361 2 286 2 660 2 533 2 171 2 363 2 563 2 97 4 655 2 508 2 332 2 
501 2 763 2 
87 2 
102 2 644 2 549 2 106 2 107 4 649 4 331 2 554 6 228 4 740 2 117 2 22 26 745 2 343 4 345 2 125 2 126 2 237 2 240 4 130 2 756 2 245 2 28 2 570 2 251 2 574 2 764 2 368 2 34 2 39 2 776 2 261 2 495 2 45 4 263 2 379 2 784 2 161 2 388 2 167 4 52 2 502 2 505 2 276 2 596 8 178 2 512 4 406 26 283 2 692 2 411 2 515 2 415 4 184 2 419 6 813 4 191 4 616 4 293 2 194 2 432 2 622 2 714 6 624 6 434 2 628 2 303 4 719 4 827 2 831 2 90 2 723 4 445 4 838 2 
102 2 644 2 549 2 106 2 107 4 649 4 331 2 554 6 225 2 228 4 740 2 117 2 466 2 22 26 745 2 343 4 345 2 125 2 126 2 240 4 130 2 756 2 245 2 28 2 570 2 251 2 574 2 764 2 368 2 374 2 39 2 776 2 261 2 495 2 45 4 263 2 379 2 784 2 161 2 388 2 167 4 52 2 505 2 276 2 596 8 402 2 178 2 512 4 406 26 802 2 283 2 692 2 411 2 515 2 415 4 184 2 419 6 813 4 191 4 616 4 293 2 194 2 432 2 622 2 714 6 624 6 434 2 628 2 303 4 437 2 719 6 827 2 831 2 90 2 723 4 445 4 838 2 
383 2 
580 2 310 2 
450 2 787 4 788 4 726 4 644 2 388 2 3 4 218 2 219 4 272 2 169 2 795 10 55 6 222 2 14 2 600 6 178 2 406 6 604 2 63 2 227 2 804 2 690 2 691 2 117 2 181 2 807 2 19 2 20 2 22 12 343 2 348 2 813 2 662 2 704 2 130 2 74 8 28 2 567 2 818 2 711 2 433 2 301 8 714 4 250 2 362 2 201 2 254 2 766 2 821 4 769 4 718 2 440 2 36 2 154 2 638 2 493 6 722 2 784 2 380 4 
450 2 787 4 788 4 726 4 644 2 388 2 3 4 218 2 219 4 272 2 169 2 795 10 55 8 222 2 14 2 600 6 178 2 406 6 604 2 63 2 227 2 804 2 690 2 691 2 117 2 181 2 807 2 229 2 19 2 20 2 22 12 343 2 813 2 662 2 703 4 704 2 130 2 74 8 28 2 567 2 818 2 569 2 711 2 433 2 301 8 714 4 250 2 362 2 254 2 766 2 821 4 769 4 718 2 440 2 36 2 154 2 638 2 493 8 259 2 722 2 784 2 380 4 
769 4 787 4 600 2 726 2 804 2 690 2 218 2 691 2 219 2 818 2 722 2 711 2 250 2 55 2 380 2 254 2 662 2 14 2 
450 2 787 4 788 4 726 4 644 2 388 2 3 4 218 2 219 4 272 2 169 2 795 6 55 6 14 2 600 4 178 2 406 6 604 2 63 2 227 2 804 2 690 2 691 2 117 2 181 2 807 2 19 2 20 2 22 12 343 2 348 2 813 2 662 2 704 2 130 2 74 4 28 2 567 2 818 2 711 2 433 2 301 4 714 4 250 2 362 2 201 2 254 2 766 2 821 4 769 4 718 2 440 2 36 2 154 2 638 2 493 6 259 2 722 2 784 2 380 4 
450 2 787 4 788 4 726 4 644 2 388 2 3 4 218 2 219 4 272 2 169 2 795 6 55 4 14 2 600 6 178 2 406 6 604 2 63 2 227 2 804 2 690 2 691 2 117 2 181 2 807 2 19 2 119 2 20 2 22 12 343 2 348 2 813 2 662 2 704 2 130 2 74 4 28 2 567 2 818 2 711 2 433 2 301 4 714 4 250 2 362 2 201 2 254 2 766 2 821 4 769 4 718 2 440 2 36 2 154 2 638 2 493 6 722 2 784 2 380 4 
450 2 787 4 788 4 726 4 644 2 388 2 3 4 218 2 219 4 272 2 169 2 795 6 55 6 222 2 14 2 600 6 178 2 406 6 604 2 63 2 227 2 804 2 690 2 691 2 117 2 181 2 807 2 19 2 20 2 22 12 343 2 348 2 813 2 662 2 704 2 130 2 74 8 28 2 567 2 818 2 711 2 433 2 301 4 714 4 250 2 362 2 201 2 254 2 766 2 821 4 769 4 718 2 440 2 36 2 154 2 638 2 493 6 722 2 784 2 380 4 
450 2 787 4 788 4 726 4 644 2 388 2 3 4 218 2 219 4 272 2 169 2 795 10 55 6 222 2 14 2 600 8 178 2 406 6 604 2 63 2 227 2 804 2 690 2 691 2 117 2 181 2 807 2 19 2 119 2 20 2 22 12 343 2 348 2 813 2 662 2 704 2 130 2 74 8 28 2 567 2 818 2 711 2 433 2 301 8 714 4 250 2 362 2 201 2 254 2 766 2 821 4 769 4 718 2 440 2 36 2 154 2 638 2 493 8 722 2 784 2 380 4 
450 2 787 4 788 4 726 4 644 2 388 2 3 4 218 2 219 4 272 2 169 2 795 10 55 6 222 2 14 2 600 6 178 2 406 6 604 2 63 2 227 2 804 2 690 2 691 2 117 2 181 2 807 2 19 2 20 2 22 12 343 2 348 2 813 2 662 2 704 2 130 2 74 8 28 2 567 2 818 2 711 2 433 2 301 8 714 4 250 2 362 2 201 2 254 2 766 2 821 4 769 4 718 2 440 2 36 2 154 2 638 2 493 6 722 2 784 2 380 4 
450 2 645 2 726 4 644 2 3 8 218 2 219 4 106 2 14 2 554 6 227 2 228 4 740 2 117 2 19 2 20 2 119 4 22 28 661 2 343 4 345 2 348 2 662 2 130 2 756 2 245 2 355 2 27 2 28 2 567 2 568 2 248 2 570 2 250 2 362 2 764 2 574 2 254 2 670 4 769 4 36 2 153 2 258 2 493 12 776 2 261 2 495 2 379 4 380 4 784 2 788 6 787 4 388 2 272 2 169 2 54 2 55 4 276 2 600 8 178 2 406 18 802 2 604 4 63 2 283 2 804 2 690 2 691 2 692 2 411 2 807 2 415 2 184 2 701 2 419 8 813 4 614 2 704 2 74 2 293 2 529 2 80 2 818 2 711 2 432 2 433 2 714 6 624 6 628 2 303 4 821 4 437 2 718 2 719 6 636 2 440 2 827 2 638 2 831 2 90 2 722 2 723 4 838 2 
450 2 644 2 645 2 214 4 3 8 218 2 219 4 5 6 9 2 459 7 653 1 222 4 14 2 227 2 228 4 19 2 20 2 234 2 22 46 661 2 470 2 471 2 662 2 245 2 27 2 28 2 248 2 485 6 249 2 250 2 487 6 254 2 670 4 36 4 258 2 493 12 42 2 261 4 495 2 48 1 272 2 55 8 54 2 276 2 58 2 512 2 63 2 283 2 691 2 690 2 692 2 701 10 288 6 704 2 74 6 293 2 529 2 80 8 711 2 714 6 536 2 303 4 718 2 719 6 312 6 90 4 722 2 723 4 99 1 726 4 106 2 107 2 108 2 553 6 554 6 740 4 117 2 341 2 343 4 345 2 564 2 348 2 353 2 130 2 756 2 355 2 568 2 567 2 570 2 571 6 362 2 574 2 764 2 768 2 766 2 769 4 575 2 578 6 153 2 154 2 776 2 377 2 780 6 379 12 784 2 380 4 782 6 381 2 786 1 785 2 586 6 787 4 788 6 165 1 388 2 167 2 169 2 795 2 397 1 173 6 399 7 596 2 600 8 178 2 800 1 406 24 802 2 801 6 604 4 180 1 804 2 411 4 181 2 807 2 183 6 415 2 184 2 187 6 419 8 812 2 813 4 614 2 192 6 818 2 432 2 433 2 624 6 628 2 821 4 437 2 822 2 636 2 440 2 827 2 638 2 831 2 838 2 212 1 
450 2 214 4 645 2 726 4 644 2 3 8 218 2 219 4 5 6 106 2 107 2 108 2 9 2 222 4 14 2 553 6 554 6 227 2 228 4 740 4 117 2 19 2 341 2 234 2 20 2 22 46 661 2 343 4 564 2 345 2 470 2 348 2 471 2 662 2 353 2 130 2 756 2 245 2 355 2 27 2 28 2 567 2 568 2 485 6 248 2 249 2 570 2 571 6 250 2 362 2 487 6 764 2 254 2 574 2 670 4 766 2 768 2 769 4 575 2 578 6 36 4 154 2 153 2 258 2 493 12 776 2 42 2 261 4 495 2 377 2 780 6 379 12 381 2 782 6 380 4 784 2 785 2 586 6 788 6 787 4 388 2 167 2 272 2 169 2 795 6 54 2 55 8 173 6 276 2 596 2 58 2 600 8 178 2 512 2 406 24 801 6 802 2 604 4 63 2 283 2 804 2 690 2 691 2 692 2 181 2 411 4 183 6 807 2 415 2 184 2 701 10 187 6 419 8 812 2 813 4 288 6 614 2 704 2 192 6 74 6 293 2 529 2 80 8 818 2 711 2 432 2 433 2 624 6 301 4 714 6 536 2 628 2 303 4 821 4 437 2 718 2 719 6 822 2 636 2 440 2 827 2 638 2 831 2 312 6 90 4 722 2 723 4 838 2 
450 2 214 4 645 2 726 4 644 2 3 8 218 2 219 4 5 6 455 2 106 2 107 2 108 2 9 2 222 4 14 2 553 6 554 8 227 2 228 6 740 4 117 2 19 2 341 2 234 2 119 2 20 2 22 44 661 2 343 4 564 2 345 2 470 2 348 2 471 2 662 2 353 2 128 2 130 2 756 2 24 2 245 4 355 2 27 2 28 2 567 2 568 2 485 6 248 2 249 2 570 2 571 6 250 2 362 2 487 6 764 2 254 2 574 2 367 2 670 4 768 2 769 4 575 2 578 6 36 2 153 2 258 2 493 16 259 2 776 2 42 2 261 4 495 2 377 2 780 6 379 10 381 2 782 6 784 2 380 4 785 2 586 6 788 6 787 4 388 2 167 2 272 2 169 2 795 4 54 2 55 10 173 6 276 2 596 2 58 2 684 2 600 10 178 2 512 2 406 22 801 6 802 2 604 4 63 2 283 2 804 2 690 2 691 2 692 2 411 4 183 6 807 2 415 4 184 2 701 8 187 6 419 12 812 2 813 4 288 6 614 2 704 2 192 6 74 6 293 2 529 2 80 8 818 2 711 2 432 4 433 2 624 8 301 4 714 6 536 2 628 2 303 4 821 4 437 2 718 2 719 6 822 2 440 2 827 2 638 2 831 2 312 6 90 4 722 2 723 4 837 2 838 2 
788 2 704 2 787 2 74 6 3 2 218 2 219 4 272 2 711 2 169 2 301 4 795 4 362 2 55 6 222 2 254 2 821 2 14 2 769 2 600 6 718 2 604 2 227 2 440 2 63 2 804 2 691 2 638 2 493 4 19 2 20 2 22 4 348 2 380 4 662 2 
644 2 3 2 218 2 219 4 106 2 222 2 14 2 554 6 227 2 228 4 117 2 19 2 20 2 22 28 124 2 343 4 345 2 348 2 662 2 130 2 756 2 245 3 28 2 570 2 362 2 144 2 574 2 764 2 254 2 769 2 493 4 776 2 261 2 495 2 379 4 380 4 784 2 788 2 787 2 789 2 388 2 270 2 272 2 169 2 594 3 795 2 55 6 276 2 599 2 600 6 178 2 406 24 802 2 604 2 63 2 283 2 804 2 691 2 692 2 408 2 806 2 415 3 184 2 701 2 419 8 813 4 704 2 74 6 293 2 532 2 711 2 432 3 433 2 714 6 624 6 628 2 303 4 821 2 437 2 718 2 87 2 719 6 636 2 440 2 827 2 638 2 831 2 723 4 838 2 
169 2 425 2 638 2 
169 2 425 2 638 2 
450 2 645 2 726 4 214 2 644 2 3 4 219 4 106 2 651 6 222 4 737 2 554 2 227 2 740 4 117 2 741 2 119 4 20 2 22 24 343 4 345 2 748 2 662 2 130 2 756 2 355 2 28 2 567 2 761 2 360 4 570 2 250 2 142 2 364 2 574 2 764 2 254 4 670 2 769 2 578 2 36 2 154 2 493 16 259 4 776 2 261 8 495 2 379 4 784 2 380 4 788 4 787 2 388 2 49 4 269 2 52 4 169 6 683 2 795 6 55 12 61 2 600 12 178 2 603 2 512 6 406 16 802 2 604 4 283 2 690 2 692 2 181 4 411 4 517 2 415 2 184 2 699 2 701 2 67 2 419 2 813 4 74 6 75 6 425 2 617 2 293 2 431 2 711 2 714 6 624 2 301 4 628 2 303 4 821 2 437 2 719 6 439 2 827 2 638 4 831 2 90 4 723 4 838 2 
214 2 406 2 578 2 49 2 28 2 360 2 761 2 818 2 701 2 457 2 580 2 22 4 54 2 379 2 223 2 845 2 768 2 
450 2 645 2 726 4 644 2 3 4 729 2 219 4 106 2 651 6 222 4 461 2 554 2 227 2 740 4 117 2 741 2 119 4 20 2 22 24 343 4 345 2 662 2 130 2 756 2 355 2 28 2 665 2 567 2 761 2 360 4 570 2 250 2 142 4 364 2 574 2 764 2 254 4 670 2 766 2 769 2 578 2 36 4 154 2 493 16 259 4 776 2 261 8 495 2 379 2 784 2 380 4 266 2 788 4 787 2 388 2 49 4 269 2 52 4 274 2 169 6 795 6 55 12 600 12 178 2 603 2 512 6 406 16 802 2 604 4 283 2 690 2 692 2 181 4 411 4 517 2 415 4 184 2 699 2 67 2 419 2 813 4 74 6 75 6 425 2 617 2 293 2 431 2 711 2 714 6 624 2 301 4 628 2 303 4 821 2 437 2 719 6 439 2 827 2 638 4 831 2 90 4 723 4 838 2 
450 2 645 2 726 4 214 2 644 2 2 2 3 4 327 2 219 4 106 2 651 6 222 4 554 2 227 2 740 4 117 2 741 2 119 4 20 2 22 24 343 4 345 2 662 2 130 2 756 2 355 2 28 2 567 2 761 2 360 4 32 2 570 2 250 2 142 2 364 2 574 2 764 2 254 4 670 2 766 2 769 2 578 2 36 4 154 2 493 16 259 4 776 2 261 8 495 2 379 4 784 2 380 4 788 4 787 2 388 2 49 4 269 2 52 4 169 6 795 6 55 12 600 12 178 2 512 6 406 16 802 2 604 4 283 2 690 2 692 2 181 2 411 4 517 2 415 2 184 2 699 2 701 2 611 2 67 2 419 2 813 4 74 6 75 6 425 2 617 2 527 2 293 2 431 2 711 2 714 6 624 2 301 4 628 2 303 4 821 2 437 2 719 6 439 2 827 2 638 4 831 2 90 4 723 4 838 2 
644 2 216 2 106 2 554 6 228 4 117 2 232 2 340 4 22 24 661 2 343 4 345 2 350 4 130 2 475 2 478 6 754 2 245 2 134 4 28 2 359 2 358 2 139 2 248 2 570 2 762 2 764 2 145 2 151 2 258 2 153 2 38 2 774 2 261 2 495 2 781 6 379 2 784 2 677 2 388 2 393 1 395 2 170 2 276 2 178 2 798 2 513 2 406 18 802 1 686 2 283 2 692 2 695 2 415 2 184 2 419 8 813 4 614 2 816 2 293 2 529 2 83 2 197 2 432 2 714 6 624 6 535 2 202 2 630 1 631 2 303 2 302 2 304 2 306 2 437 1 719 3 308 2 438 2 827 2 442 2 637 2 831 2 723 2 94 2 211 2 545 2 
421 2 245 3 482 3 50 2 710 2 107 6 168 2 432 3 624 2 276 2 819 2 572 2 59 2 460 2 333 2 633 2 554 2 60 2 406 2 228 2 415 3 233 4 469 1 22 2 419 2 
421 2 245 2 482 2 50 2 710 2 107 6 168 2 432 2 624 2 276 2 819 2 572 2 59 2 460 2 333 2 633 2 554 2 60 2 406 2 228 2 415 2 233 4 22 2 419 2 
421 2 245 2 482 2 50 2 710 2 107 6 168 2 432 2 624 2 276 2 819 2 572 2 59 2 460 2 333 2 633 2 554 2 60 2 406 2 228 2 415 2 233 4 22 2 419 2 
451 3 216 2 391 2 245 3 730 2 139 2 110 2 170 2 276 2 535 2 731 4 202 2 12 4 733 3 86 2 403 2 59 2 632 2 145 2 406 4 116 4 179 4 150 6 442 2 829 2 697 2 207 2 415 3 834 2 609 4 446 2 22 10 581 4 781 6 344 2 419 2 841 2 350 4 702 3 71 2 
451 2 216 2 391 2 730 2 110 2 792 2 170 2 276 2 731 4 733 2 12 4 59 2 403 2 404 2 406 4 605 2 179 4 116 4 697 2 415 2 609 4 22 10 344 2 419 2 350 4 71 2 702 2 245 2 139 2 535 2 202 2 86 2 632 2 145 2 150 6 442 2 829 2 207 2 834 2 446 2 581 4 781 4 841 2 
451 2 216 2 391 2 730 2 110 2 792 2 170 2 276 2 731 4 733 2 12 4 59 2 403 2 404 2 406 4 605 2 179 4 116 4 697 2 415 2 609 4 22 10 344 2 419 2 350 4 71 2 702 2 245 2 139 2 535 2 202 2 86 2 632 2 145 2 150 6 442 2 829 2 207 2 834 2 446 2 581 4 781 4 841 2 
451 2 216 2 391 2 730 2 110 2 792 2 170 2 276 2 731 4 733 2 12 4 59 2 403 2 404 2 406 4 605 2 179 4 116 4 697 2 415 2 609 4 22 10 344 2 419 2 350 4 71 2 702 2 245 2 139 2 535 2 202 2 86 2 632 2 145 2 150 6 442 2 829 2 207 2 834 2 446 2 581 4 781 4 841 2 
451 2 216 2 391 2 730 2 110 2 792 4 170 2 276 2 731 4 733 2 12 4 59 2 403 2 404 4 406 4 605 4 179 4 116 4 697 2 415 2 609 4 22 10 344 2 419 2 350 4 71 2 702 2 245 2 139 2 535 2 202 2 86 2 632 2 145 2 150 6 442 2 829 2 207 2 834 2 446 2 581 4 781 4 841 2 
447 2 658 2 496 2 836 2 418 2 136 2 
138 2 616 2 542 2 335 2 264 2 136 2 775 2 
163 2 115 2 646 2 406 8 430 2 26 1 25 2 294 1 412 2 560 1 742 1 156 2 7 2 109 1 713 2 416 2 22 10 784 2 671 2 85 2 767 2 
216 6 758 4 79 2 621 2 271 2 531 2 139 6 111 2 330 2 792 4 170 6 535 6 202 6 302 2 145 6 404 4 406 6 513 2 605 4 686 2 442 6 232 2 340 4 22 6 810 2 581 4 781 14 344 2 839 2 350 12 
657 4 205 2 406 1 282 2 116 2 708 1 759 2 394 2 195 2 91 7 22 1 731 2 573 2 160 2 765 2 12 2 177 2 15 2 
657 4 205 2 282 4 116 2 759 2 394 2 195 2 91 6 731 2 765 2 160 2 573 4 12 2 177 2 15 4 
657 4 205 2 406 1 282 8 116 2 708 1 759 6 394 2 195 2 91 10 22 1 731 2 765 8 160 2 573 8 12 2 177 2 15 8 
657 2 205 2 282 2 116 2 394 2 195 2 91 2 731 2 160 2 573 2 12 2 177 2 15 2 
321 4 1 12 215 24 325 6 326 4 647 24 106 8 456 6 329 8 458 50 10 6 113 2 734 4 224 2 464 6 465 24 559 24 231 4 561 4 22 138 744 26 21 32 122 2 746 4 562 14 345 14 346 10 238 4 472 116 354 8 129 6 239 4 473 3 474 4 752 4 663 6 242 4 243 42 755 6 246 21 664 2 141 1 486 4 253 6 770 2 576 2 148 24 491 6 37 42 375 4 494 12 41 8 778 6 579 4 262 26 495 14 582 2 783 2 47 8 162 6 584 4 166 6 588 8 589 32 790 12 591 6 51 6 791 4 504 3 681 6 275 6 398 2 506 2 400 4 601 90 602 6 406 126 802 56 689 3 284 4 693 6 182 2 516 9 698 2 608 4 519 6 808 6 610 90 700 12 521 2 289 10 423 2 424 10 291 2 427 6 428 6 292 12 707 6 706 4 619 4 817 6 709 6 712 2 198 6 626 3 715 4 200 2 627 18 820 4 538 92 303 84 540 24 437 56 307 84 541 6 719 234 823 24 543 12 314 6 444 13 317 8 544 8 723 108 724 6 449 6 547 2 
100 4 267 2 0 2 588 2 215 38 591 2 326 2 392 2 453 2 647 2 104 4 106 2 456 2 503 2 681 2 275 2 329 2 796 2 221 2 398 2 57 2 797 2 506 2 462 2 799 2 406 44 62 2 802 2 555 2 284 2 557 2 559 2 338 2 608 4 700 4 235 2 21 2 22 46 562 2 346 2 345 2 236 2 127 2 472 6 289 2 565 2 72 2 129 2 815 2 663 2 566 2 423 2 424 2 76 2 291 2 77 2 757 4 133 2 292 4 528 2 137 2 709 2 298 2 198 2 626 2 253 2 539 2 303 20 488 2 540 2 255 2 437 2 719 44 491 2 772 2 832 2 494 4 444 2 41 2 835 4 376 2 317 2 495 2 723 20 208 2 724 2 159 2 319 2 378 6 98 2 47 6 213 2 
321 4 0 2 215 14 728 4 325 4 328 2 106 2 456 4 458 8 10 4 220 2 114 4 734 4 224 2 464 4 555 10 231 4 342 8 561 4 21 6 22 78 562 10 345 6 238 4 472 24 749 8 129 4 752 4 663 6 242 4 243 8 755 4 664 2 137 2 30 4 253 4 147 16 491 4 37 16 375 4 494 10 41 2 778 4 779 2 495 6 159 10 783 2 47 6 584 4 162 4 387 8 166 4 588 2 589 30 790 8 591 4 791 4 504 4 681 4 275 4 398 2 506 2 175 32 406 70 62 2 802 30 689 4 693 4 414 2 608 2 700 10 808 4 186 8 811 2 68 2 423 2 76 10 291 2 77 2 427 4 428 4 292 10 707 4 706 2 620 4 817 4 709 4 198 4 538 24 303 36 437 28 307 24 541 4 719 104 823 8 825 4 441 4 543 14 444 10 314 4 317 2 723 44 95 16 724 4 449 4 725 4 547 2 
0 2 588 2 215 14 589 6 790 6 591 4 106 2 456 2 681 4 504 2 275 4 796 2 113 2 398 2 506 2 462 2 602 2 406 26 62 2 802 12 689 2 182 2 516 2 608 2 700 6 22 28 21 2 562 2 345 2 472 8 129 4 473 2 663 2 423 2 291 2 292 6 706 2 246 10 707 4 709 4 712 2 198 2 626 2 200 2 253 2 303 14 770 2 437 12 719 40 491 4 494 6 444 2 41 2 579 2 317 2 495 2 723 14 724 2 47 4 
313 2 

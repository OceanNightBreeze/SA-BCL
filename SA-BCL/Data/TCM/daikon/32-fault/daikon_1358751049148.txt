#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 222 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 219 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 219 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 126 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 262 142 43 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (162,184) 5 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 80 98 58 127 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 256 74 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 149 (49,69,141,163,261,263,285,317,319,329) 133 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 181 73 268 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 181 73 268 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 181 73 268 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 181 73 268 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:sum([I)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eq(FF)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakHasherMap:size()I
daikon.Quant:eltsGTE([II)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:max([I)I
daikon.Quant:ne(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eq(DD)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I | ASSIGN | 181361 | = null
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V | ASSIGN | 746 | = null
daikon.Quant:memberOf(J[J)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:eq(II)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:lte(II)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.MathMDE:gcd([I)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:memberOf(F[F)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14490 | = null
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:memberOf(D[F)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ProglangType:dimensions()I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:sameLength([I[I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_ntk()I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:concat([I[I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:setEqual([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:gt(II)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:isReverse([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:subsetOf([F[F)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:eq(JJ)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 184000 | = null
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:negate(I)I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
daikon.ModBitTracker:num_sets()I
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String; | OPERATOR | 49349 | > -> ==
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([D[F)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaCharStream:BeginToken()C
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.MathMDE:sign(I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaCharStream:FillBuff()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:eltsLT([II)Z
daikon.ModBitTracker:split(I)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:intersection([I[I)[I
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ModBitTracker:num_samples()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:pow(II)I
daikon.Quant:eltsLTE([II)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19813 | = null
daikon.inv.Invariant:prob_and(DD)D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([I[I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE:gcd(II)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:eltsGteIndex([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
jtb.JavaCharStream:backup(I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE:pow_fast(II)I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.MathMDE:mod_positive(II)I
daikon.ValueTuple:size()I
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:noDups([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:slice([III)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:intern([D)[D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:gte(DD)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
222 2 103 2 78 2 121 2 183 4 96 2 140 2 272 2 91 2 
228 6 106 2 138 2 42 6 282 2 257 2 93 6 247 2 30 2 172 2 271 2 
11 2 39 2 71 6 22 6 137 4 176 2 27 6 147 4 214 2 96 2 59 2 91 2 273 6 
316 4 276 26 186 2 136 2 251 2 111 8 211 10 283 8 234 2 284 16 96 6 29 2 32 10 149 16 104 29 261 6 240 12 325 16 263 6 13 2 241 8 129 10 130 10 265 4 132 10 16 2 180 8 36 4 91 6 109 4 
100 6 287 4 
295 2 
67 2 222 2 323 2 0 2 197 2 14 2 212 2 175 2 189 2 53 4 4 2 55 2 35 2 167 2 169 2 292 2 29 2 184 2 321 2 108 2 
276 46 38 6 163 4 208 2 136 2 211 18 317 4 114 4 141 4 144 6 284 32 319 4 285 4 96 4 123 2 97 2 9 6 32 18 149 32 261 4 49 8 69 2 104 51 51 2 325 32 240 18 263 4 130 14 129 6 241 16 132 18 329 4 34 6 180 6 20 4 36 2 91 4 37 6 
219 2 
68 2 162 2 207 22 252 2 250 2 164 10 17 2 61 2 331 2 205 2 246 2 122 2 134 2 304 2 
276 4 209 2 211 2 116 2 284 2 46 2 32 2 149 2 174 2 104 6 261 2 240 2 325 2 130 2 241 2 242 2 129 4 132 2 291 2 244 2 158 2 248 2 36 2 
102 2 149 8 276 12 104 16 240 4 325 8 265 2 130 4 298 2 317 4 211 4 132 4 141 4 34 6 284 8 37 6 32 4 
238 2 206 2 290 6 165 2 219 2 24 2 311 2 81 2 280 2 313 2 293 2 184 2 90 2 
295 2 1 2 216 2 226 2 105 2 299 2 44 2 160 2 260 2 215 2 
126 2 239 2 330 2 41 2 
15 2 91 2 
286 2 310 2 91 4 
12 2 
305 2 306 4 50 2 262 2 154 2 85 2 326 2 253 2 267 2 86 2 142 2 54 2 107 2 43 2 83 2 156 2 312 2 62 2 245 2 95 2 236 4 235 2 258 2 57 2 
119 2 79 2 21 2 72 1 
79 2 117 2 
316 2 274 2 79 2 2 2 5 2 184 2 166 2 
161 2 79 2 166 2 
79 2 166 2 288 2 
190 2 119 2 56 2 
79 2 166 2 
56 2 210 2 
145 2 79 2 
119 2 309 2 56 2 
119 2 115 2 243 2 
119 2 178 2 297 2 
119 2 88 2 139 2 
48 2 119 2 315 2 
152 2 56 2 
79 2 191 2 
322 2 243 2 
177 2 178 2 
275 2 88 2 
76 2 315 2 
56 2 92 2 
302 2 315 2 
88 2 66 2 
178 2 3 2 
224 2 243 2 
119 2 309 2 56 2 131 2 
119 2 318 2 309 2 56 2 131 2 
119 2 56 2 112 2 
119 2 264 2 56 2 
40 2 168 2 179 2 125 2 
195 2 5 2 148 2 184 2 
195 2 2 2 5 2 148 2 184 2 221 2 
316 2 79 2 5 2 184 2 166 2 266 2 
324 2 153 2 
316 2 5 2 184 2 327 2 
88 2 217 2 
315 2 47 2 
269 2 243 2 
178 2 281 2 
178 2 315 2 230 2 
28 2 178 2 315 2 
178 2 315 2 173 2 
178 2 315 2 77 2 
222 2 201 2 63 2 5 2 184 2 
118 2 56 2 
196 2 110 2 207 6 60 4 300 2 254 2 199 2 26 2 232 2 75 2 94 2 204 4 171 2 159 2 65 2 8 2 193 2 31 2 
119 2 227 2 
328 2 
239 2 330 2 41 2 294 2 
239 2 330 2 41 2 294 2 
18 2 150 2 128 2 
18 2 150 2 128 2 
239 2 330 2 41 2 294 2 
239 2 330 2 41 2 294 2 
239 2 330 2 41 2 294 2 
127 2 308 2 170 2 277 2 80 2 6 2 58 2 7 2 98 2 237 2 
74 2 256 2 
223 2 23 2 218 2 25 2 200 2 231 2 19 2 
296 2 249 2 188 2 278 2 280 1 82 2 146 2 96 8 259 1 303 2 320 1 10 2 124 2 289 2 194 2 307 2 70 2 52 2 311 1 203 2 157 1 314 2 89 2 220 2 270 2 91 10 
276 10 187 2 317 2 211 4 114 2 279 2 233 2 301 2 284 6 285 2 192 2 32 4 149 6 104 13 325 6 240 2 263 2 130 4 198 2 132 4 133 2 34 4 180 4 
101 2 151 2 185 2 113 2 33 2 155 2 255 2 213 2 87 3 84 2 120 2 64 2 135 2 
101 2 225 2 151 2 185 2 113 2 229 1 33 2 155 2 255 2 213 4 87 6 84 2 120 2 96 1 182 2 64 2 135 2 91 1 
101 4 225 2 151 2 185 4 113 2 33 2 155 4 255 2 213 4 87 6 84 2 120 2 182 2 64 2 135 2 
101 8 225 6 151 2 185 8 113 2 229 1 33 2 155 8 255 2 213 4 87 10 84 2 120 2 96 1 182 8 64 2 135 2 91 1 
45 1 268 2 181 2 91 2 96 2 99 1 202 2 73 2 
202 2 73 2 181 2 96 2 268 2 91 2 
202 2 73 2 181 2 96 2 268 2 91 2 
202 2 73 2 181 2 96 2 268 2 91 2 
143 2 

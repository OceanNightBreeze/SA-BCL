#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.ArrayIndexOutOfBoundsException 334 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 79 353 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 123 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 352 311 247 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (62,302) 200 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 241 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 241 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 241 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 241 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 241 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 347 278 25 303 135 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 237 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 39 270 191 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 39 270 191 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 39 270 191 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 39 270 191 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
jtb.JavaCharStream:BeginToken()C
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.Quant:eq(FF)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:memberOf(F[D)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:sum([D)D
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.ModBitTracker:num_samples()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(S[S)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set; | CONDITION | 16702 | if (x) -> if (!x)
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:sameLength([I[I)Z
daikon.ModBitTracker:num_vars()I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltsLTE([II)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaCharStream:FillBuff()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:subsetOf([F[D)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakHasherMap:size()I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:ne(II)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lt(II)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20497 | return null
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.MathMDE:sign(I)I
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaCharStream:ReadByte()C
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
daikon.Quant:eltsLT([II)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:subsetOf([D[F)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:eltsNotEqual([II)Z | CONSTANT | 162209 | 0 -> 1
utilMDE.ArraysMDE:min([I)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eq(DD)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern:intern([J)[J
daikon.Quant:eq(JJ)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:noDups([I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:eltsGT([II)Z
daikon.Quant:eltsEqual([II)Z
daikon.ValueTuple:size()I
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4963 | 78 -> 77
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:memberOf(D[F)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z | ASSIGN | 925 | = null
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:split(I)I
utilMDE.MathMDE:pow(II)I
daikon.ModBitTracker:num_sets()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant:prob_or(DD)D
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltsEqualIndex([I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:gte(II)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:indexOf([II)I | CONDITION | 13875 | if (x) -> if (!x)
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.Quant:eq(II)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:lte(II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I | CONSTANT | 11181 | 1 -> 0
utilMDE.ArraysMDE:subarray([III)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:gt(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:lexLTE([I[I)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.ProglangType:dimensions()I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Intern:intern([I)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern:numIntArrays()I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
298 2 312 2 300 2 273 2 14 2 71 2 61 2 286 2 234 4 
313 6 141 6 282 2 213 2 72 2 46 6 235 2 209 2 64 2 125 2 190 2 
246 2 306 2 181 2 173 2 291 2 314 2 334 2 
101 16 128 2 300 6 179 2 305 2 26 10 307 4 30 2 29 2 271 8 273 6 159 6 198 8 52 8 218 12 310 16 166 4 201 2 239 10 343 6 202 4 317 4 37 26 121 30 319 2 225 10 17 10 248 16 229 8 211 10 
56 6 111 4 
232 2 
281 2 143 2 34 2 214 2 148 2 215 2 45 2 171 2 217 2 94 2 62 2 22 4 
101 32 104 4 42 2 2 4 300 4 26 16 92 2 271 16 93 6 273 4 159 4 10 6 51 4 259 6 310 32 218 22 96 4 183 4 280 4 12 2 239 16 82 6 283 2 202 2 343 4 85 6 37 48 121 54 319 2 292 4 17 16 225 16 248 32 152 6 175 2 229 6 124 8 211 6 
267 2 344 2 62 2 
167 2 127 2 269 2 192 2 302 2 345 2 222 2 107 2 28 22 122 2 336 2 249 2 338 10 20 2 
54 2 27 2 79 2 353 2 
218 4 310 8 101 8 183 4 239 4 83 2 317 2 26 4 37 12 121 16 292 4 225 4 17 4 248 8 258 2 152 6 259 6 
23 2 41 4 299 2 328 2 154 4 215 4 106 2 156 2 136 2 7 2 108 2 48 2 109 2 81 4 261 2 184 2 13 4 185 4 114 4 344 2 146 2 204 4 243 4 99 4 318 4 206 2 348 4 267 6 16 2 100 10 289 10 322 2 151 2 210 2 88 62 62 8 66 14 354 2 297 2 22 4 
126 2 232 2 133 2 134 2 236 2 220 2 238 2 149 2 321 2 19 2 
18 2 123 2 226 2 73 2 
300 2 327 2 
170 2 300 4 74 2 
264 2 
153 2 0 4 69 2 91 2 4 2 5 2 155 2 216 2 76 2 311 2 199 2 219 2 113 2 263 2 316 2 15 4 86 2 288 2 247 2 351 2 352 2 294 2 324 2 250 2 
120 1 59 2 295 2 346 2 
332 2 295 2 
200 2 307 2 68 2 3 2 62 2 295 2 244 2 
230 2 295 2 244 2 
115 2 295 2 244 2 
95 2 59 2 132 2 
295 2 244 2 
95 2 196 2 
147 2 
95 2 59 2 57 2 
59 2 277 2 251 2 
341 2 59 2 315 2 
301 2 59 2 63 2 
97 2 59 2 131 2 
95 2 80 2 
272 2 295 2 
277 2 40 2 
315 2 90 2 
290 2 301 2 
97 2 320 2 
95 2 275 2 
245 2 97 2 
301 2 118 2 
315 2 228 2 
87 2 277 2 
95 2 59 2 57 2 325 2 
95 2 32 2 59 2 57 2 325 2 
95 2 59 2 268 2 
95 2 59 2 242 2 
161 2 339 2 340 2 165 2 
212 2 140 2 129 2 130 2 231 2 98 2 223 2 6 2 75 2 331 2 38 2 28 6 157 4 8 2 158 2 110 4 160 2 227 2 
178 2 59 2 
200 2 78 2 33 2 62 2 
200 2 68 2 78 2 33 2 335 2 62 2 
200 2 307 2 102 2 62 2 295 2 244 2 
168 2 174 2 
200 2 312 2 62 2 116 2 
195 2 301 2 
97 2 84 2 
277 2 117 2 
67 2 315 2 
97 2 315 2 203 2 
97 2 315 2 323 2 
97 2 315 2 205 2 
97 2 224 2 315 2 
177 6 103 2 180 2 138 2 200 2 144 2 172 6 62 2 
95 2 194 2 
308 2 
18 2 241 2 226 2 73 2 
18 2 241 2 226 2 73 2 
150 2 89 2 296 2 
150 2 89 2 296 2 
18 2 241 2 226 2 73 2 
18 2 241 2 226 2 73 2 
18 2 241 2 226 2 73 2 
300 4 303 2 193 2 25 2 135 2 182 2 337 2 163 2 278 2 164 2 220 1 169 2 266 2 347 2 188 2 321 1 189 2 
279 2 119 2 326 2 58 2 55 2 162 2 
187 2 119 2 208 2 293 2 49 2 24 2 233 2 
176 2 252 2 300 10 43 1 253 2 330 2 44 1 137 2 255 2 256 2 9 1 273 8 197 2 31 2 112 2 53 2 260 2 261 1 262 2 35 2 265 2 36 2 349 2 151 1 60 2 65 2 
101 6 1 2 2 2 105 2 26 6 77 2 159 2 10 4 309 2 237 2 259 4 310 6 239 6 145 2 287 2 37 12 186 2 121 17 292 2 225 6 17 6 350 2 248 6 229 4 
342 7 142 2 221 2 300 1 284 2 70 2 329 2 304 2 254 1 47 2 333 2 139 2 273 1 257 2 274 2 276 2 50 2 21 4 
342 6 142 2 221 4 284 2 70 2 329 2 304 4 333 2 47 4 139 2 257 2 274 2 276 2 50 2 21 4 
342 10 142 2 221 8 300 1 284 2 70 2 329 2 304 8 254 1 333 2 47 8 139 8 273 1 257 2 274 2 276 2 50 6 21 4 
342 2 142 2 221 2 284 2 70 2 329 2 304 2 333 2 47 2 257 2 274 2 276 2 21 2 
300 2 11 1 191 2 270 2 273 2 240 2 207 1 39 2 
240 2 300 2 273 2 39 2 270 2 191 2 
240 2 300 2 273 2 39 2 270 2 191 2 
240 2 300 2 273 2 39 2 270 2 191 2 
285 2 

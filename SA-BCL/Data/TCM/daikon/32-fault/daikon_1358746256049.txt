#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR utilMDE.Assert$AssertionException (208,360) (208,360) 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 390 145 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 119 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 101 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 101 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 101 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 101 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 101 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 201 55 250 278 213 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 309 370 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 118 385 14 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 118 385 14 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 118 385 14 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 118 385 14 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus([I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE:pow(II)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(F[F)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern:intern([I)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:noDuplicates([D)Z | CONSTANT | 57690 | 0 -> 1
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaCharStream:backup(I)V
utilMDE.MathMDE:gcd(JJ)J
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:lt(II)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:isReverse([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:lte(II)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:eq(II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:eltsLTE([II)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:sum([[D)D
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:memberOf(F[D)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14759 | 1 -> -1
daikon.Quant:eq(FF)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:subsetOf([D[D)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 20834 | = null
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:intern([D)[D
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:lexGT([I[I)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaCharStream:getEndLine()I
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern([J)[J
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:min([I)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:sum([I)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaCharStream:readChar()C
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43258 | 32 -> 33
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:max([I)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | CONDITION | 13357 | if (x) -> if (!x)
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:size()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:gte(II)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:gt(II)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | STATEMENT | 5303 | stmt -> ;
daikon.Quant:sameLength([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:concat([I[I)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltsEqual([II)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:subsetOf([D[F)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:size()I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:subsetOf([F[F)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:ne(II)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakHasherMap:processQueue()V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:gcd(II)I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.ProglangType:dimensions()I
jtb.JavaCharStream:ReadByte()C
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:noDups([I)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V | OPERATOR | 20199 | - -> *
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eq(JJ)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaCharStream:getBeginLine()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:setDiff([I[I)[I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
252 2 41 2 208 2 360 2 319 2 307 2 88 2 340 4 27 2 
249 2 11 2 264 2 1 2 0 2 339 2 102 2 285 2 374 6 344 6 94 6 
73 2 208 2 74 6 86 2 66 2 360 2 7 6 153 4 93 6 232 6 272 2 154 2 332 2 402 2 
180 26 354 16 182 6 23 6 310 10 100 29 129 12 229 8 360 6 107 10 258 16 362 10 156 4 289 16 191 2 32 4 208 6 135 8 110 8 111 8 37 2 138 2 302 4 197 10 303 2 375 4 117 10 401 2 68 2 248 2 
373 4 392 6 
328 2 
70 2 50 2 353 2 97 2 224 2 356 4 99 2 27 2 56 2 133 2 189 2 162 2 269 2 164 2 115 2 241 2 167 2 138 2 140 2 214 2 170 2 173 2 217 2 219 2 
336 4 251 2 180 48 354 32 182 4 310 16 23 4 100 54 26 6 129 22 147 6 229 18 360 4 107 6 362 16 186 2 258 32 157 4 321 6 346 6 289 32 347 2 32 2 236 4 208 4 110 6 91 2 39 8 196 6 197 16 216 4 15 4 117 16 247 2 45 4 352 6 18 2 379 4 248 2 
220 2 122 2 56 2 
82 2 383 2 179 2 293 2 295 2 210 2 13 10 127 22 388 2 281 2 283 2 329 2 172 2 120 2 
95 2 253 2 354 2 180 4 310 2 23 2 100 6 129 2 229 2 107 4 362 2 258 2 289 2 32 2 160 2 114 2 166 2 197 2 271 2 246 2 117 2 274 2 46 2 
354 8 180 12 310 4 239 2 100 16 129 4 197 4 15 4 117 4 57 2 258 8 362 4 156 2 352 6 379 4 346 6 289 8 
221 2 220 2 48 4 122 6 353 2 356 2 25 2 126 4 387 58 27 2 282 4 3 2 130 2 315 2 56 8 105 2 106 2 361 2 287 2 259 2 261 2 364 10 9 2 60 10 395 2 84 4 294 4 212 4 195 2 300 2 301 4 305 2 273 4 378 2 380 2 
159 2 51 2 145 2 148 2 328 2 390 2 377 2 6 2 30 2 77 2 108 2 
177 2 80 2 270 2 119 2 
360 2 334 2 
244 2 360 4 89 2 
215 2 
96 2 355 6 52 2 254 2 255 38 204 8 2 2 205 8 103 12 357 2 152 12 318 2 155 2 158 8 61 2 265 6 266 4 63 12 209 4 367 38 267 4 368 12 163 4 325 6 165 2 168 2 116 2 174 12 19 4 335 10 222 2 276 12 71 2 338 2 22 12 125 6 124 12 184 2 226 2 128 2 227 4 228 2 28 2 76 2 230 2 231 38 233 16 394 4 78 16 132 8 134 8 237 4 396 12 34 8 193 2 397 2 35 6 85 8 398 2 194 2 36 4 92 12 38 4 298 2 304 10 42 12 44 4 400 2 47 6 
299 2 381 1 121 2 169 2 
121 2 90 2 
149 2 121 2 29 2 302 2 33 2 56 2 203 2 
79 2 121 2 29 2 
121 2 29 2 292 2 
299 2 359 2 83 2 
121 2 29 2 
359 2 323 2 
121 2 316 2 
299 2 359 2 142 2 
299 2 277 2 175 2 
299 2 81 2 296 2 
299 2 43 2 109 2 
299 2 256 2 67 2 
359 2 327 2 
121 2 150 2 
277 2 75 2 
376 2 296 2 
322 2 109 2 
67 2 297 2 
359 2 192 2 
372 2 67 2 
40 2 109 2 
185 2 296 2 
290 2 277 2 
299 2 359 2 142 2 12 2 
299 2 62 2 359 2 142 2 12 2 
299 2 291 2 359 2 
299 2 139 2 359 2 
21 2 72 2 65 2 391 2 
56 2 320 2 203 2 260 2 
149 2 56 2 320 2 203 2 240 2 260 2 
121 2 29 2 302 2 56 2 203 2 403 2 
371 2 219 2 
69 2 302 2 56 2 203 2 
211 2 109 2 
67 2 223 2 
243 2 277 2 
131 2 296 2 
67 2 386 2 296 2 
141 2 67 2 296 2 
67 2 171 2 296 2 
284 2 67 2 296 2 
275 2 382 2 203 2 56 2 288 6 188 2 369 6 198 2 
348 2 359 2 
20 2 144 2 49 2 199 2 384 2 279 2 146 2 268 2 127 6 350 2 314 4 330 2 151 2 317 2 8 2 207 2 58 4 393 2 
299 2 98 2 
245 2 
177 2 80 2 270 2 101 2 
177 2 80 2 270 2 101 2 
10 2 54 2 280 2 
10 2 54 2 280 2 
177 2 80 2 270 2 101 2 
177 2 80 2 270 2 101 2 
177 2 80 2 270 2 101 2 
250 2 308 2 278 2 201 2 148 1 360 4 6 1 55 2 257 2 187 2 365 2 31 2 190 2 213 2 143 2 306 2 17 2 
331 2 399 2 64 2 202 2 225 2 326 2 
178 2 286 2 200 2 202 2 137 2 313 2 389 2 
9 1 263 2 208 4 123 2 309 2 181 2 238 2 24 1 312 2 112 2 341 1 370 2 360 4 105 1 218 1 
336 2 180 12 354 6 182 2 183 2 310 6 100 17 342 2 360 6 258 6 362 6 345 2 59 2 321 4 289 6 234 2 208 6 110 4 136 2 113 2 349 2 39 2 197 6 15 2 117 6 352 4 176 2 
208 1 337 2 366 2 161 4 311 2 87 2 206 2 242 2 104 2 4 2 5 7 360 1 343 2 16 1 363 2 333 2 351 2 262 2 
337 4 366 2 161 4 311 2 87 2 206 2 242 4 104 4 4 2 5 6 343 2 363 2 333 2 351 2 262 2 
208 1 337 8 366 2 161 4 311 2 87 6 206 2 242 8 104 8 4 2 5 10 360 1 343 8 16 1 363 2 333 2 351 2 262 2 
337 2 366 2 161 2 311 2 206 2 242 2 104 2 4 2 5 2 363 2 333 2 351 2 262 2 
53 1 360 2 208 2 324 2 14 2 118 2 385 2 235 1 
208 2 360 2 14 2 324 2 385 2 118 2 
208 2 360 2 14 2 324 2 385 2 118 2 
208 2 360 2 14 2 324 2 385 2 118 2 
358 2 

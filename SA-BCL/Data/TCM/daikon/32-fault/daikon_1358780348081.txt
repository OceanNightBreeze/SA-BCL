#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (529,567) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (90,445) (90,445) (149,291,322,323,324) (149,291,322,323,324) (149,291,322,323,324) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (551,574) (551,574) (551,574) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (43,453) (169,347) (169,347) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 557 311 705 142 552 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V FAILED junit.framework.AssertionFailedError 415 682 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 215 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 716 375 7 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 600 294 130 716 375 7 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 716 375 7 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 600 294 130 206 425 716 375 7 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGT([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_3_16()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:lt(II)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Intern:intern([J)[J
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:eltsLT([II)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | CONDITION | 18510 | if (x) -> if (!x)
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107829 | = null
daikon.VarInfo:relate_var()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:eltsEqual([II)Z | OPERATOR | 161601 | < -> >
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType; | RETURN | 7895 | return null
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaCharStream:getBeginLine()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 23053 | = null
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z | ASSIGN | 925 | = null
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
daikon.Quant:noDups([I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:indexOf([II)I | CONDITION | 13875 | if (x) -> if (!x)
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:dimensions()I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.inv.Invariants:Invariants()V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | CONDITION | 1462 | if (x) -> if (!x)
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ProglangType:isPointerFileRep()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.MathMDE:gcd(II)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_ntk()I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 99550 | = null
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:memberOf(F[D)Z
jtb.JavaCharStream:backup(I)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltwiseLT([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:justified()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:slice([III)[I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoAux:hashCode()I
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaCharStream:getEndColumn()I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:concat([I[I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.Invariant:logOn()Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakHasherMap:size()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | STATEMENT | 1433 | stmt -> ;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:isFloat()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus([I)[I
utilMDE.MathMDE:pow(II)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.Quant:intersection([I[I)[I
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | ASSIGN | 17372 | = null
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaCharStream:getEndLine()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaCharStream:readChar()C
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.Node:Node()V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282204 | = null
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eq(FF)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I | CONDITION | 23649 | if (x) -> if (!x)
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:gte(II)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Debug:logOn()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName:hashCode()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:memberOf(D[F)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice2:arity()I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:gt(II)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:memberOf(F[F)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:union([I[I)[I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String; | RETURN | 29320 | return null
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsGT([II)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isIntegral()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
27 2 739 2 361 2 577 2 90 2 65 2 499 2 445 2 480 4 
293 2 463 2 208 6 642 2 233 2 735 2 325 6 247 2 308 2 41 2 162 6 
303 2 421 2 108 2 116 6 363 4 391 6 479 6 547 2 695 6 90 2 253 4 445 2 159 2 
584 16 44 10 664 2 721 4 560 2 69 12 234 2 73 10 150 4 79 6 279 4 677 10 466 2 678 10 709 16 523 8 413 8 394 26 285 2 202 10 343 2 87 16 312 8 39 6 90 6 445 6 287 2 417 29 688 4 93 8 
529 4 567 4 
663 2 
617 2 641 2 745 2 436 2 437 4 261 2 355 2 481 2 575 2 527 2 221 2 603 2 
632 2 319 4 583 2 584 20 44 14 478 4 456 4 720 6 69 16 234 2 484 2 432 2 73 6 335 4 512 4 79 4 677 14 678 14 679 6 16 6 709 20 18 8 523 6 394 34 202 14 87 20 38 4 90 4 39 4 445 4 688 2 417 38 93 14 
503 2 481 2 540 2 
592 2 753 2 634 22 718 2 468 2 326 2 353 2 491 2 156 2 262 10 384 2 223 2 205 2 510 2 
584 2 44 2 356 2 665 2 430 2 103 2 69 2 73 4 673 2 674 2 677 2 467 2 678 2 709 2 394 4 202 2 87 2 685 2 39 2 688 2 417 6 476 2 93 2 
319 4 584 8 44 4 228 2 271 2 677 4 678 4 720 6 456 4 16 6 721 2 709 8 394 12 202 4 69 4 87 8 417 16 
450 4 209 2 1 4 501 2 502 2 402 2 503 6 297 4 51 2 170 4 481 8 143 2 254 4 540 2 764 2 105 2 276 10 464 4 616 14 515 2 644 2 437 4 15 2 439 2 341 2 680 4 237 2 282 10 395 2 240 2 598 4 61 4 626 2 527 4 346 4 37 4 89 2 550 62 188 2 315 2 
663 2 760 2 146 2 761 2 148 2 153 2 77 2 201 2 244 2 630 2 
633 2 269 4 323 2 324 2 736 4 635 2 272 1 428 2 379 2 739 2 696 1 196 2 144 1 145 1 6 2 743 2 589 2 434 2 151 2 11 1 12 6 337 6 746 1 548 1 241 2 492 3 344 2 203 2 651 2 111 2 348 2 445 24 601 2 600 4 496 1 114 1 22 2 115 2 448 2 500 2 291 2 757 4 294 4 562 1 460 2 252 2 29 5 668 5 358 2 762 1 613 1 729 1 614 2 511 1 571 2 516 1 732 2 81 2 470 2 623 1 624 5 683 1 472 2 578 2 90 22 690 2 
519 2 
748 2 445 4 19 2 
34 2 
189 6 316 2 477 4 139 2 0 2 192 6 377 2 48 2 328 2 273 30 141 6 382 2 52 2 697 6 741 2 332 4 588 2 9 4 387 6 433 2 542 2 543 2 544 30 280 2 281 2 596 2 710 6 242 2 20 2 749 8 494 2 446 6 752 4 21 4 113 2 289 2 248 6 249 6 250 2 609 2 563 2 302 6 70 2 507 2 360 6 727 6 615 2 409 2 513 2 618 6 412 2 365 2 621 6 767 4 36 2 132 4 734 8 525 2 86 2 579 4 528 6 416 2 530 30 224 2 42 2 
405 1 390 2 260 2 455 2 
522 2 260 2 
59 2 481 2 565 2 260 2 508 2 595 2 150 2 
260 2 687 2 595 2 
488 2 260 2 595 2 
390 2 286 2 373 2 
260 2 595 2 
135 2 
260 2 180 2 
715 2 390 2 373 2 
576 2 390 2 689 2 
638 2 558 2 390 2 
330 2 694 2 390 2 
76 2 699 2 390 2 
181 2 373 2 
380 2 260 2 
576 2 367 2 
638 2 122 2 
330 2 72 2 
76 2 722 2 
213 2 373 2 
441 2 76 2 
330 2 259 2 
647 2 638 2 
576 2 629 2 
715 2 390 2 310 2 373 2 
715 2 390 2 370 2 310 2 373 2 
390 2 373 2 646 2 
390 2 373 2 217 2 
659 2 458 2 371 2 161 2 
388 2 451 2 634 6 556 2 643 2 364 4 608 2 625 2 5 2 197 2 301 2 495 2 653 2 475 2 652 4 123 2 359 2 604 2 
207 2 390 2 
59 2 449 2 481 2 14 2 
59 2 449 2 481 2 14 2 565 2 662 2 
59 2 481 2 759 2 260 2 595 2 150 2 
374 2 230 2 
59 2 481 2 410 2 150 2 
330 2 719 2 
76 2 640 2 
576 2 88 2 
362 2 638 2 
76 2 24 2 638 2 
76 2 638 2 517 2 
76 2 638 2 26 2 
76 2 691 2 638 2 
270 2 737 2 481 2 57 6 574 2 59 2 648 2 551 4 
386 2 373 2 
601 2 
269 4 379 2 381 2 6 2 589 2 703 4 12 6 13 2 200 2 396 2 203 2 111 2 600 4 602 2 115 2 210 4 500 2 295 2 294 4 119 2 29 2 31 2 506 2 32 2 125 2 614 2 128 2 516 2 732 6 733 2 35 2 520 2 624 4 627 2 313 2 45 4 635 2 427 2 426 2 428 6 739 2 740 2 743 2 434 2 435 2 337 4 746 2 241 2 445 26 554 2 448 2 755 2 559 2 757 4 460 2 252 2 357 8 668 2 358 6 462 2 78 2 571 2 81 2 470 2 472 2 473 2 578 2 185 2 90 26 581 2 686 2 266 2 690 2 95 2 
269 4 379 2 381 2 6 2 589 2 703 4 12 6 13 2 393 2 396 2 203 2 111 2 600 4 602 2 115 2 400 2 210 4 500 2 294 4 118 2 119 2 29 2 506 2 32 2 125 2 614 2 128 2 516 2 732 6 733 2 35 2 520 2 624 4 627 2 313 2 225 2 45 4 635 2 427 2 426 2 428 6 739 2 740 2 743 2 434 2 151 2 435 2 337 6 746 2 241 2 445 26 348 2 554 2 448 2 755 2 559 2 757 4 460 2 252 2 357 8 668 2 358 6 462 2 78 2 571 2 81 2 470 2 472 2 473 2 578 2 185 2 90 26 581 2 686 2 266 2 690 2 95 2 
570 2 
447 2 539 2 
43 2 730 2 258 2 23 2 452 4 350 2 216 2 594 2 368 2 169 2 296 4 231 2 404 2 53 2 347 2 407 2 275 2 158 2 541 2 173 4 
43 2 23 2 452 4 350 2 169 2 296 4 404 2 231 2 53 2 611 2 407 2 275 2 541 2 173 4 730 2 258 2 216 2 594 2 368 2 155 2 347 2 158 2 
43 2 730 2 23 2 258 2 350 2 347 2 158 2 541 2 169 2 
43 2 730 2 23 2 258 2 350 2 347 2 158 2 541 2 169 2 
43 2 730 2 258 2 23 2 452 4 350 2 216 2 594 2 368 2 169 2 296 4 231 2 404 2 53 2 347 2 407 2 275 2 158 2 541 2 173 4 
43 2 730 2 258 2 23 2 452 4 350 2 216 2 594 2 368 2 169 2 296 4 231 2 404 2 53 2 347 2 407 2 275 2 158 2 541 2 173 4 
43 2 730 2 258 2 23 2 452 4 350 2 216 2 594 2 368 2 169 2 296 4 231 2 404 2 53 2 347 2 407 2 275 2 158 2 541 2 173 4 
43 2 730 2 258 2 23 2 452 4 350 2 216 2 594 2 368 2 169 2 296 4 231 2 404 2 53 2 347 2 407 2 275 2 158 2 541 2 173 4 
43 2 730 2 258 2 23 2 452 2 350 2 216 2 594 2 368 2 169 2 231 2 404 2 133 2 53 2 347 2 407 2 275 2 158 2 541 2 
43 2 730 2 258 2 23 2 452 2 350 2 216 2 594 2 368 2 169 2 231 2 404 2 133 2 53 2 347 2 407 2 275 2 158 2 541 2 
43 2 730 2 258 2 23 2 452 2 350 2 216 2 594 2 368 2 169 2 231 2 404 2 133 2 53 2 347 2 407 2 275 2 158 2 541 2 
43 2 730 2 258 2 23 2 452 2 350 2 216 2 594 2 368 2 169 2 231 2 404 2 133 2 53 2 347 2 407 2 275 2 158 2 541 2 
43 2 730 2 258 2 23 2 452 2 350 2 216 2 594 2 368 2 169 2 231 2 404 2 53 2 347 2 407 2 275 2 158 2 541 2 
269 4 379 2 6 2 275 2 589 2 703 4 12 6 593 2 594 2 599 2 203 2 111 2 601 2 600 4 115 2 23 2 500 2 294 4 296 2 404 2 119 2 29 3 407 2 614 2 730 2 128 2 732 6 733 2 216 2 520 2 309 2 624 3 43 2 322 2 635 2 428 6 739 2 231 2 53 2 538 2 743 2 147 3 541 2 149 2 434 2 151 2 337 6 546 2 241 2 445 24 348 2 347 2 654 2 158 2 656 2 448 2 452 2 350 2 169 2 757 4 459 2 460 2 252 2 668 3 358 8 258 2 571 2 465 2 81 2 470 2 368 2 472 2 578 4 90 24 690 2 
712 2 368 2 235 2 
712 2 368 2 235 2 
190 2 269 4 2 2 191 2 99 2 193 2 379 2 6 2 483 2 589 2 107 4 12 6 109 2 707 2 712 2 203 2 111 2 600 4 399 2 112 2 115 2 208 16 605 4 717 2 606 2 500 2 290 2 292 2 294 4 296 6 119 6 30 2 33 2 408 2 614 2 730 2 128 2 619 2 732 2 733 2 308 4 624 2 526 4 735 4 313 4 41 4 227 2 43 2 325 12 47 2 635 2 428 2 739 2 233 4 639 2 743 2 54 2 334 2 541 2 235 6 434 2 56 2 151 2 642 4 337 6 241 2 157 2 553 2 445 24 348 2 750 2 162 12 448 2 349 4 657 2 452 6 350 2 247 4 755 4 756 2 757 4 561 2 460 2 357 4 252 2 358 2 462 4 255 2 173 4 258 4 571 2 465 2 81 2 470 2 368 4 681 2 472 2 769 4 578 4 581 4 90 16 92 4 690 2 95 4 
112 2 96 2 408 2 175 2 422 2 731 2 465 2 707 2 284 2 578 2 30 2 90 2 743 2 553 2 445 4 447 2 277 2 
582 2 190 2 269 4 2 2 191 4 99 2 193 2 379 2 6 2 483 4 589 2 107 4 12 6 109 2 707 2 712 2 203 2 111 2 600 4 399 2 112 2 115 2 208 16 605 4 606 2 500 2 290 2 292 2 294 4 296 6 119 6 504 2 30 2 33 2 614 2 730 2 128 2 732 2 733 2 308 4 624 4 526 4 735 4 313 4 41 4 43 2 47 2 325 12 635 2 428 2 739 2 233 4 639 2 743 2 54 2 334 2 541 2 235 6 434 2 56 2 151 2 236 2 642 4 337 6 241 2 157 2 553 2 445 24 348 2 750 2 162 12 448 2 349 4 657 2 452 6 350 2 453 2 247 4 755 4 757 4 561 2 666 2 460 2 357 4 252 2 358 2 462 4 255 2 173 4 75 2 258 4 571 2 81 2 470 2 368 4 681 2 472 2 769 4 578 2 581 4 90 16 92 4 690 2 95 4 
190 2 97 2 269 4 2 2 191 2 99 2 193 2 379 2 6 2 483 4 589 2 107 4 486 2 12 6 109 2 707 2 712 2 203 2 111 2 600 4 399 2 112 2 115 2 208 16 605 4 606 2 500 2 290 2 292 2 294 4 296 6 119 6 30 2 33 2 408 2 614 2 730 2 128 2 732 2 733 2 308 4 624 2 526 4 735 4 313 4 41 4 43 2 46 2 423 2 325 12 47 2 635 2 428 2 739 2 233 4 639 2 743 2 54 2 334 2 541 2 235 6 434 2 56 2 151 2 236 2 642 4 337 6 241 2 157 2 553 2 445 24 348 2 750 2 162 12 448 2 349 4 657 2 452 6 350 2 247 4 755 4 757 4 561 2 460 2 357 4 252 2 358 2 462 4 255 2 173 4 258 4 571 2 465 2 81 2 572 2 470 2 368 4 681 2 472 2 769 4 578 4 581 4 90 16 92 4 690 2 95 4 
583 4 584 4 585 2 586 2 378 3 194 2 3 4 379 2 381 2 195 6 4 24 6 2 198 2 590 2 591 2 13 2 12 6 389 10 17 2 392 12 597 2 394 6 396 2 202 2 599 2 203 2 398 2 204 2 600 2 607 2 401 2 25 2 403 2 406 4 29 16 211 12 212 2 612 2 614 2 411 2 35 2 624 16 222 16 37 2 627 2 628 2 40 2 417 7 418 36 419 2 226 2 44 2 635 2 428 14 636 2 232 1 55 2 434 2 435 12 645 4 440 2 442 2 241 2 60 2 649 2 63 2 445 34 656 2 64 2 448 2 450 2 658 2 660 2 456 4 667 2 67 2 460 2 252 2 68 2 69 4 668 16 254 2 461 4 675 2 465 2 677 2 678 2 469 12 471 2 470 2 680 2 83 2 84 2 85 2 473 46 265 2 684 2 263 2 87 4 90 24 686 18 91 2 690 2 93 4 268 2 269 4 693 2 102 2 698 4 274 4 700 4 106 2 703 12 705 2 487 6 709 4 283 4 711 2 111 2 288 2 115 2 498 4 500 2 720 6 294 2 723 2 117 10 297 2 119 2 725 2 298 2 299 2 726 2 300 16 121 2 505 2 506 2 509 10 304 36 307 2 516 2 732 14 733 2 520 2 521 2 309 2 311 2 524 2 134 2 138 2 318 2 137 14 533 2 534 2 535 2 140 2 738 4 142 2 739 2 537 2 742 3 743 2 147 2 336 4 151 2 152 2 337 4 154 10 338 2 546 2 340 2 342 2 746 2 549 10 345 2 348 2 552 2 160 2 163 2 754 2 557 2 351 2 167 2 166 2 354 2 757 4 357 36 358 22 566 2 569 12 178 2 765 2 766 2 179 2 182 4 183 4 578 4 185 2 581 4 369 2 770 2 372 2 
140 2 672 2 321 2 655 2 670 2 631 2 
239 2 243 2 435 2 321 2 713 2 71 2 168 2 
115 2 66 2 502 1 402 1 120 1 744 2 126 1 172 1 702 2 127 2 129 2 366 2 489 2 682 2 415 2 90 4 445 4 532 2 
584 6 44 6 478 2 720 4 456 2 28 2 637 2 69 1 79 2 215 2 677 6 80 2 678 6 438 2 490 2 679 4 709 6 394 12 523 4 283 2 202 6 263 2 87 6 369 2 417 17 
305 2 138 2 675 2 306 4 199 2 747 2 493 1 265 2 587 2 444 2 650 7 474 2 90 1 445 1 531 2 701 2 497 2 94 2 
305 2 138 2 675 2 306 4 199 2 747 2 265 2 587 4 474 2 444 2 650 6 531 2 701 2 497 4 94 4 
305 2 138 2 675 2 306 4 199 6 747 2 493 1 265 2 587 8 474 8 444 2 650 10 90 1 445 1 531 2 701 2 497 8 94 8 
305 2 138 2 675 2 306 2 747 2 265 2 587 2 444 2 650 2 531 2 701 2 497 2 94 2 
375 2 98 1 376 2 692 2 100 1 6 6 7 2 485 2 278 1 708 2 110 2 600 10 716 2 500 4 294 8 610 2 124 1 214 4 620 2 518 4 622 4 218 2 420 2 320 1 229 2 327 2 425 2 49 2 429 2 333 2 434 6 151 4 337 16 339 2 238 1 445 26 348 4 555 2 352 2 454 2 661 2 251 2 564 2 763 4 174 2 257 4 568 2 176 2 177 1 90 24 267 2 
317 2 714 2 375 2 716 2 500 2 49 2 692 2 294 6 383 2 6 2 385 2 7 2 8 2 669 2 728 2 214 6 434 2 151 1 257 2 514 2 337 9 130 2 706 2 708 2 339 2 218 2 238 2 220 2 90 14 445 14 348 1 600 6 267 2 
375 2 376 2 692 2 100 6 101 6 482 8 6 4 385 4 7 2 485 2 10 2 278 2 708 2 110 2 397 6 600 20 716 2 500 2 294 18 610 2 124 2 214 14 514 4 620 2 518 2 218 2 622 6 131 2 414 4 219 2 220 2 314 2 136 2 420 2 229 2 424 2 536 2 425 2 49 2 50 2 329 2 331 2 333 2 431 2 434 4 151 6 337 40 545 2 339 2 58 2 443 8 62 2 445 44 348 6 245 2 246 6 751 2 555 2 164 4 165 2 454 2 352 2 661 2 457 2 758 6 171 2 669 4 763 6 74 2 671 8 256 2 257 10 568 4 176 2 676 2 573 2 768 2 184 2 264 2 580 2 90 40 186 2 187 2 
375 2 164 2 716 2 500 2 425 2 49 2 692 2 100 2 294 8 329 2 724 2 6 2 385 4 7 2 104 2 669 4 431 2 124 2 74 2 728 2 214 12 434 2 174 2 151 4 257 6 514 4 704 2 337 20 130 2 706 2 708 2 339 2 218 2 238 2 414 2 184 2 220 2 397 2 90 18 445 20 348 4 600 8 206 2 
82 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (226,452) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 544 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 433 (50,496) 440 (397,878) (50,496) 550 (397,878) 900 651 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 294 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 294 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 294 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 689 299 630 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 698 290 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 892 776 205 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 787 542 348 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (474,811) (474,811) 787 542 348 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 787 542 348 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ProglangType:isFloat()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7310 | = null
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | CONDITION | 14085 | if (x) -> if (!x)
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 156850 | if (x) -> if (!x)
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | OPERATOR | 12584 | &= -> >>>=
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:gt(II)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_16(I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.ProglangType:baseIsIntegral()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:numIntArrays()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_16()Z
jtb.JavaCharStream:ReadByte()C
daikon.PptSlice0:arity()I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName; | RETURN | 62448 | return null
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:hashCode()I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:logOn()Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 10865 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant; | RETURN | 609 | return null
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V | ASSIGN | 746 | = null
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String; | ASSIGN | 3056 | = null
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptSlice1:arity()I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:readChar()C
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:element_range([I)I
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:gte(II)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Debug:logDetail()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:ne(II)Z
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern:intern([J)[J
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant:logDetail()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName:hashCode()I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:eltsEqual([II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice1:num_samples()I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Assert:assertTrue(Z)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:union([I[I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:slice([III)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:baseIsScalar()Z
daikon.Ppt:Ppt()V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V | OPERATOR | 609 | != -> ==
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isScalar()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107829 | = null
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.MathMDE:sign(I)I
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | ASSIGN | 15073 | = null
daikon.ProglangType:isIntegral()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfo:isPointer()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:lexLT([I[I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1211 | = null
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eq(II)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99061 | return null
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap:size()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltsGTE([II)Z | OPERATOR | 163389 | == -> !=
utilMDE.MathMDE:modulus([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfo:relate_var()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:eltwiseGTE([I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.LimitedSizeIntSet:size()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
589 2 502 2 841 2 474 2 335 2 111 2 811 2 925 4 748 2 
717 2 390 6 657 2 31 2 35 2 360 2 147 2 164 2 9 2 789 6 311 6 
41 2 770 2 272 6 474 2 752 2 539 6 6 4 649 6 556 6 811 2 844 4 234 2 929 2 
893 4 316 10 221 8 72 2 684 2 74 8 5 10 437 16 898 2 494 26 606 2 77 4 320 4 229 4 115 8 469 16 708 2 470 10 811 6 416 10 908 8 84 6 417 6 791 10 850 12 474 6 724 16 179 2 125 2 650 30 
452 4 226 4 
343 2 
247 2 434 2 701 2 656 2 70 2 317 2 189 2 502 2 82 2 811 4 136 2 195 2 381 2 880 2 618 2 201 2 563 2 671 2 728 2 774 4 461 2 212 4 154 2 156 2 781 2 634 2 408 2 468 2 291 2 898 2 34 2 113 2 38 2 40 2 750 2 474 4 174 4 420 2 243 2 309 2 181 2 924 2 58 2 60 4 
806 4 316 16 405 6 782 2 437 32 74 18 5 6 494 48 77 2 115 6 469 32 194 2 612 2 470 16 13 6 811 4 416 16 529 6 84 4 417 4 791 16 352 6 715 8 640 4 850 22 388 4 43 2 914 6 474 4 620 4 92 2 646 6 122 2 724 32 179 2 650 54 364 4 483 4 679 4 
275 2 82 2 253 2 
304 10 453 2 579 22 421 2 660 2 113 2 53 2 921 2 310 2 906 2 694 2 734 2 778 2 487 2 
739 2 857 2 547 2 133 2 570 2 675 2 449 2 87 2 848 2 
850 4 388 4 18 2 316 4 405 6 437 8 494 12 724 8 229 2 773 2 469 8 470 4 13 6 650 16 416 4 791 4 640 4 
220 2 252 2 317 4 253 6 634 2 705 4 808 2 901 10 163 2 191 2 609 2 584 4 116 2 710 14 82 8 638 4 588 2 714 4 616 2 199 4 643 4 535 4 356 4 328 2 719 2 721 2 672 2 507 4 151 2 275 2 862 2 678 4 863 2 545 4 431 62 509 10 598 2 695 2 464 2 60 4 
402 2 182 2 544 2 3 2 593 2 
700 2 249 2 1 2 250 2 372 3 703 2 4 3 495 2 258 2 7 24 259 2 380 2 10 2 811 34 384 2 141 2 142 2 387 2 271 2 505 2 143 1 146 3 723 2 623 2 508 4 727 6 626 3 150 2 277 2 731 2 280 2 400 2 28 2 153 8 828 3 517 3 520 2 521 16 287 24 831 6 633 2 288 2 160 2 740 2 743 6 636 2 415 2 842 5 169 32 747 2 533 3 418 2 641 2 852 8 854 2 855 3 856 2 644 2 538 2 753 2 540 2 307 2 47 2 177 2 543 4 51 3 757 2 183 2 864 2 653 2 61 32 62 2 761 2 71 1 438 8 439 1 872 1 873 2 765 4 876 2 188 2 661 2 769 1 442 4 444 2 445 1 83 2 446 4 447 1 325 2 200 2 561 16 562 2 93 2 332 2 669 1 455 2 456 2 206 1 97 2 572 1 674 2 99 3 888 2 676 16 211 2 889 2 105 2 106 1 216 2 108 4 681 1 339 2 224 1 111 2 896 4 581 2 786 2 347 2 905 2 585 2 233 1 790 2 119 3 912 1 120 2 792 2 794 2 474 32 354 2 591 16 236 2 357 2 592 6 358 2 690 2 594 2 241 2 917 1 922 12 693 4 244 3 800 2 801 2 803 2 802 2 697 2 
811 2 178 2 
811 4 910 2 473 2 
566 2 
488 4 490 2 868 2 763 2 435 6 702 6 658 6 374 2 127 2 128 6 871 2 605 6 551 2 192 4 450 2 270 2 389 6 720 4 91 4 203 2 21 4 95 2 885 2 673 6 568 6 96 32 207 2 393 6 334 2 278 2 281 6 574 6 337 2 575 32 736 6 890 2 218 2 157 4 403 6 833 2 344 2 525 6 114 2 296 2 586 4 350 2 849 2 42 6 235 2 534 2 175 2 306 32 52 2 920 6 759 4 927 2 485 2 
839 2 346 2 351 1 816 2 
466 2 816 2 
36 2 555 2 707 2 82 2 511 2 320 2 816 2 
707 2 462 2 816 2 
707 2 709 2 816 2 
839 2 460 2 414 2 
707 2 816 2 
414 2 465 2 
333 2 816 2 
839 2 767 2 414 2 
839 2 482 2 330 2 
839 2 228 2 49 2 
839 2 103 2 805 2 
839 2 363 2 923 2 
414 2 284 2 
816 2 353 2 
121 2 330 2 
184 2 49 2 
103 2 835 2 
887 2 923 2 
414 2 173 2 
923 2 283 2 
254 2 103 2 
639 2 49 2 
330 2 118 2 
839 2 767 2 414 2 54 2 
839 2 425 2 767 2 414 2 54 2 
839 2 414 2 11 2 
839 2 414 2 909 2 
404 2 162 2 758 2 326 2 
29 2 159 2 874 2 514 2 742 2 
839 2 273 2 
36 2 843 2 82 2 138 2 
489 2 36 2 555 2 843 2 82 2 138 2 
36 2 707 2 82 2 687 2 320 2 816 2 
189 2 548 2 
36 2 82 2 506 2 320 2 
123 2 103 2 
861 2 
37 2 330 2 
569 2 49 2 
923 2 764 2 49 2 
336 2 923 2 49 2 
279 2 923 2 49 2 
245 2 923 2 49 2 
704 2 293 2 36 2 82 2 198 6 822 6 312 2 866 2 
414 2 913 2 
28 2 
699 2 700 2 1 2 495 2 259 2 811 26 142 2 387 2 817 2 619 2 508 2 727 2 826 2 731 2 519 2 831 2 288 2 160 2 411 2 741 2 743 4 636 6 415 2 169 4 300 2 418 2 852 2 856 2 307 2 177 2 543 4 864 2 653 2 61 6 62 2 765 4 876 2 322 2 442 4 193 4 83 2 447 2 558 4 200 2 327 2 90 2 93 2 332 2 455 2 456 2 97 2 210 2 775 2 676 6 889 2 105 2 108 4 111 2 896 2 112 2 585 2 233 2 792 2 794 2 474 26 915 2 236 2 592 6 241 4 693 2 922 8 800 2 803 2 367 2 
699 2 700 2 250 2 1 2 495 2 259 2 811 26 142 2 387 2 619 2 508 2 727 2 731 2 519 2 831 2 288 2 160 2 741 2 743 6 636 6 415 2 169 4 300 2 301 2 418 2 852 2 856 2 307 2 177 2 543 4 864 2 59 2 653 2 61 6 62 2 765 4 876 2 322 2 442 4 193 4 83 2 447 2 558 4 200 2 327 2 90 2 93 2 332 2 565 2 455 2 456 2 97 2 210 2 775 2 676 6 889 2 105 2 108 4 111 2 896 2 112 2 585 2 233 2 792 2 794 2 474 26 915 2 236 2 592 6 241 4 693 2 922 8 800 2 802 2 803 2 367 2 697 2 
771 2 
928 2 903 2 
390 2 657 2 858 2 46 4 900 2 423 2 242 2 9 2 582 2 166 2 610 2 789 2 397 2 398 2 865 2 651 2 557 2 214 4 
870 2 657 4 375 4 493 2 496 2 495 2 765 2 550 2 9 4 878 2 610 2 811 12 815 4 557 2 142 2 390 6 202 2 331 4 332 2 145 2 886 2 97 2 397 2 398 2 214 4 285 2 737 2 217 2 108 2 222 2 780 2 578 2 31 2 900 2 164 2 526 4 582 2 166 2 788 2 789 4 530 2 746 2 846 2 418 2 172 4 474 6 476 2 856 2 592 4 858 2 46 4 307 2 423 2 691 2 424 6 242 2 799 2 311 6 865 4 651 2 
870 2 657 4 375 4 493 2 496 2 495 2 765 2 550 2 9 4 878 2 610 2 811 12 815 4 557 2 142 2 390 4 202 2 331 4 332 2 145 2 886 2 147 2 97 2 397 2 398 2 214 4 285 2 737 2 217 2 108 2 222 2 780 2 578 2 31 2 900 2 526 4 582 2 166 2 788 2 789 6 530 2 746 2 846 2 418 2 172 4 474 6 476 2 856 2 592 4 858 2 46 4 307 2 423 2 691 2 424 6 242 2 799 2 311 6 865 4 651 2 
870 2 657 4 375 4 493 2 496 2 495 2 765 2 550 2 9 4 878 2 610 2 811 12 815 4 557 2 142 2 390 6 202 2 331 4 332 2 145 2 886 2 97 2 397 2 398 2 214 4 285 2 737 2 217 2 108 2 222 2 780 2 578 2 31 2 35 2 900 2 526 4 582 2 166 2 788 2 789 6 530 2 746 2 846 2 418 2 172 8 474 6 476 2 856 2 592 4 858 2 46 4 307 2 423 2 691 2 424 6 242 2 799 2 311 6 865 4 651 2 
870 2 657 4 375 8 493 2 496 2 495 2 765 2 550 2 9 4 878 2 610 2 811 12 815 4 557 2 142 2 390 6 202 2 331 4 332 2 145 2 886 2 147 2 97 2 397 2 398 2 214 4 285 2 737 2 217 2 108 2 222 2 780 2 578 2 31 2 35 2 900 2 526 4 582 2 166 2 788 2 789 8 530 2 746 2 846 2 418 2 172 8 474 6 476 2 856 2 592 4 858 2 46 4 307 2 423 2 691 2 424 10 242 2 799 2 311 8 865 4 651 2 
870 2 657 4 375 8 493 2 496 2 495 2 765 2 550 2 9 4 878 2 610 2 811 12 815 4 557 2 142 2 390 6 202 2 331 4 332 2 145 2 886 2 97 2 397 2 398 2 214 4 285 2 737 2 217 2 108 2 222 2 780 2 578 2 31 2 35 2 900 2 526 4 582 2 166 2 788 2 789 6 530 2 746 2 846 2 418 2 172 8 474 6 476 2 856 2 592 4 858 2 46 4 307 2 423 2 691 2 424 10 242 2 799 2 311 6 865 4 651 2 
250 2 1 2 493 2 492 2 255 2 495 2 496 2 259 2 9 4 15 2 14 6 264 2 16 1 725 1 508 2 727 2 730 2 737 2 285 2 31 4 743 6 526 6 530 2 746 2 300 4 537 7 46 4 307 2 50 2 543 4 311 12 314 1 61 8 65 1 765 4 319 6 550 2 322 2 552 6 554 1 81 2 83 2 557 2 88 2 329 6 331 4 332 2 566 6 97 2 775 2 576 6 108 4 780 4 111 2 578 2 112 2 582 2 788 2 789 8 585 2 590 2 792 2 795 6 592 6 799 2 366 2 370 2 377 2 130 4 131 6 132 2 809 6 378 2 610 2 611 2 811 46 815 8 142 2 385 2 387 2 390 4 820 6 145 2 147 4 824 1 395 2 398 2 397 2 829 7 831 2 160 2 636 6 166 2 637 8 415 2 169 2 170 4 846 2 418 2 172 2 419 6 852 2 856 2 858 2 423 2 177 12 178 6 424 2 428 2 429 2 864 2 651 2 865 4 186 2 653 2 655 2 654 2 433 2 870 2 657 4 440 2 441 6 875 2 878 2 442 4 193 4 196 2 200 2 202 2 456 2 455 2 886 2 676 6 889 2 214 4 217 2 896 2 682 2 227 2 899 2 900 2 232 2 471 2 472 6 911 2 473 6 474 24 236 2 476 2 238 1 480 1 691 2 242 2 918 6 693 2 922 4 484 10 246 1 697 2 
1 2 250 2 370 2 492 2 493 2 130 4 377 2 131 6 255 2 378 2 809 6 496 2 132 2 495 2 259 2 9 4 610 2 611 2 14 6 15 2 811 46 264 2 815 8 385 2 142 2 387 2 390 8 820 6 145 2 727 2 508 4 395 2 730 2 397 2 398 2 285 2 737 2 831 2 160 2 31 4 35 4 743 6 526 6 636 6 166 2 637 8 415 2 530 2 169 2 300 4 170 4 746 2 846 2 418 2 419 6 172 6 852 2 856 2 858 2 46 4 307 2 178 6 50 2 177 12 423 2 424 2 543 4 428 2 311 12 429 2 864 2 865 4 651 2 186 2 653 2 654 2 61 8 655 2 433 2 870 2 657 4 441 6 319 6 440 2 765 4 875 2 550 2 322 2 552 6 878 2 442 4 193 4 81 2 83 2 196 2 557 2 88 2 200 2 202 2 329 6 331 4 332 2 566 6 455 2 456 2 886 2 97 2 676 6 775 2 889 2 214 4 217 2 576 6 108 4 780 4 111 2 682 2 896 4 227 2 578 2 112 2 899 2 900 2 582 2 788 2 232 2 585 2 789 8 471 2 911 2 472 6 473 6 590 2 792 2 795 6 474 24 236 2 476 2 592 6 691 2 918 6 242 2 922 6 693 4 799 2 366 2 484 10 697 2 
1 2 250 2 370 2 492 2 493 2 375 4 130 4 377 2 131 6 255 2 378 2 809 6 496 2 132 2 495 2 259 2 9 4 610 2 611 2 14 6 15 2 811 46 264 2 815 8 385 2 142 2 387 2 390 8 820 6 145 2 727 2 508 4 395 2 730 2 397 2 398 2 285 2 737 2 831 2 160 2 31 4 35 4 743 6 526 6 636 6 166 2 637 8 415 2 530 2 169 2 300 4 170 4 746 2 846 2 418 2 419 6 172 6 852 2 856 2 858 2 46 4 307 2 178 6 50 2 177 12 423 2 424 6 543 4 428 2 311 12 429 2 864 2 865 4 651 2 186 2 653 2 654 2 61 8 655 2 433 2 870 2 657 4 441 6 319 6 440 2 765 4 875 2 550 2 322 2 552 6 878 2 442 4 193 4 81 2 83 2 196 2 557 2 88 2 200 2 202 2 329 6 331 4 332 2 566 6 455 2 456 2 886 2 97 2 676 6 775 2 889 2 214 4 217 2 576 6 108 4 780 4 111 2 682 2 896 4 227 2 578 2 112 2 899 2 900 2 582 2 788 2 232 2 789 8 585 2 471 2 911 2 472 6 473 6 590 2 792 2 795 6 474 24 236 2 476 2 592 6 691 2 918 6 242 2 922 6 693 4 799 2 366 2 484 10 697 2 
248 2 1 2 250 2 370 2 492 2 493 2 375 4 130 4 377 2 131 6 255 2 378 2 809 6 496 2 810 2 132 2 495 2 259 2 9 4 610 2 611 2 14 6 15 2 811 44 813 2 264 2 815 8 385 2 142 2 387 2 390 10 820 6 145 2 727 4 147 2 508 4 395 2 730 2 397 2 398 2 516 2 401 2 831 4 160 2 31 4 35 4 743 6 526 6 164 2 636 8 166 2 637 8 415 2 530 2 169 4 300 4 170 4 746 2 846 2 418 2 419 6 172 6 852 2 856 2 858 2 46 4 307 2 178 6 50 2 177 10 423 2 424 4 543 4 428 2 311 16 429 2 864 2 865 4 651 2 186 2 653 2 61 12 655 2 433 2 870 2 657 4 441 6 319 6 440 2 765 4 875 2 550 2 322 2 552 6 878 2 442 4 193 6 81 2 83 2 196 2 557 2 88 2 200 2 202 2 329 6 331 4 332 2 566 6 455 2 456 2 886 2 97 2 676 8 775 2 573 2 889 2 214 4 217 2 576 6 108 4 780 2 111 2 682 2 896 4 227 2 578 2 112 2 899 2 900 2 582 2 788 2 232 2 789 10 585 2 471 2 911 2 472 6 473 6 590 2 792 2 795 6 474 22 236 2 476 2 592 6 918 6 242 2 922 6 693 4 799 2 366 2 484 8 697 2 
217 2 870 2 657 4 493 2 375 4 31 2 578 2 35 2 526 2 9 4 582 2 166 2 610 2 789 6 811 4 530 2 746 2 846 2 815 2 557 2 172 6 390 6 202 2 476 2 858 2 331 2 46 2 145 2 423 2 424 4 886 2 799 2 311 4 398 2 214 2 
250 2 493 2 495 2 257 2 259 2 9 4 610 2 811 28 712 2 815 2 142 2 387 2 390 6 145 2 727 3 398 2 28 2 831 3 160 2 31 2 35 2 743 6 526 2 636 6 166 2 415 2 297 2 530 2 169 3 300 2 746 2 846 2 418 2 172 6 856 2 858 2 46 2 540 2 307 2 177 4 423 2 424 2 543 4 311 4 864 2 653 2 61 8 654 2 67 3 870 2 657 4 765 4 322 2 442 4 553 2 193 4 83 2 557 2 200 2 202 2 331 2 332 2 455 2 456 2 886 2 97 2 775 2 888 2 676 6 889 2 214 2 217 2 108 4 111 2 683 2 578 2 582 2 788 2 789 6 585 2 792 2 474 24 236 2 357 2 476 2 592 6 799 2 484 2 697 2 
870 2 657 4 375 8 493 2 496 2 495 2 765 2 550 2 9 4 878 2 610 2 811 12 815 4 557 2 142 2 390 6 202 2 331 4 332 2 145 2 886 2 97 2 397 2 398 2 214 4 285 2 737 2 217 2 108 2 222 2 780 2 578 2 31 2 35 2 900 2 526 4 582 2 166 2 788 2 789 6 530 2 746 2 846 2 418 2 172 8 474 6 476 2 856 2 592 4 858 2 46 4 307 2 423 2 691 2 424 10 242 2 799 2 311 6 865 4 651 2 
0 2 870 2 373 2 657 4 375 8 493 2 496 2 765 2 495 2 550 2 260 4 9 4 878 2 610 2 811 12 815 4 557 2 142 2 390 8 202 2 331 4 332 2 145 2 886 2 97 2 397 2 398 2 214 4 285 2 737 2 108 2 780 2 578 2 31 2 35 2 900 2 164 2 526 4 582 2 166 2 788 2 789 6 530 2 746 2 846 2 418 2 172 8 474 6 476 2 856 2 592 4 858 2 46 4 307 2 423 2 691 2 424 10 242 2 799 2 311 8 865 4 651 2 
481 2 799 2 493 2 
481 2 799 2 493 2 
1 2 250 2 807 2 493 4 375 4 130 2 809 2 495 2 259 2 9 4 610 2 15 2 811 24 137 2 815 4 142 2 390 12 508 4 147 4 396 2 397 2 628 2 26 2 737 2 832 2 160 2 31 4 743 6 35 4 294 2 526 4 164 4 636 2 166 2 415 2 530 2 169 2 170 2 300 4 418 2 172 6 305 2 45 2 856 2 46 2 307 2 177 4 424 6 543 4 311 16 864 2 865 4 186 2 653 2 61 2 762 2 68 2 657 4 440 2 765 4 550 2 877 2 322 2 878 2 442 4 879 2 83 2 200 2 331 2 332 2 455 2 456 2 97 2 208 2 775 2 676 2 889 2 214 2 108 4 780 4 340 2 111 2 896 4 900 2 582 4 585 2 789 12 349 2 792 2 475 2 474 16 915 4 236 2 592 6 476 2 481 2 922 4 693 4 799 4 484 2 926 2 697 2 486 2 
433 2 807 2 474 2 130 2 809 2 177 2 877 2 242 2 413 2 97 2 443 2 81 2 528 2 811 4 137 2 484 2 928 2 
1 2 250 2 807 2 601 2 126 2 493 4 375 4 495 2 259 2 9 4 610 2 15 2 811 20 815 4 142 2 390 12 722 2 508 4 147 4 396 2 397 2 628 2 26 2 285 2 737 2 160 2 31 4 33 2 743 6 35 4 294 2 526 4 164 4 636 2 166 2 415 2 530 2 169 4 170 2 300 4 418 2 172 6 45 2 856 2 46 2 307 2 177 2 424 6 543 4 311 16 864 2 865 4 186 2 653 2 61 2 762 2 68 2 657 4 440 2 765 4 550 2 877 2 322 2 878 2 442 4 879 2 83 2 200 2 331 2 332 2 567 2 455 2 456 2 97 2 208 4 775 2 676 2 889 2 214 2 108 4 780 4 111 2 896 4 900 2 582 4 585 2 789 12 349 2 792 2 474 14 915 4 236 2 592 6 476 2 691 2 481 2 922 4 693 4 799 4 926 2 697 2 486 2 
1 2 250 2 807 2 493 4 375 4 130 2 809 2 495 2 259 2 9 4 610 2 15 2 811 24 137 2 815 4 142 2 390 12 508 4 147 4 396 2 397 2 628 2 26 2 285 2 737 2 160 2 31 4 743 6 35 4 294 2 526 4 164 4 636 2 166 2 415 2 530 2 169 2 170 2 300 4 418 2 172 6 853 2 45 2 856 2 46 2 307 2 177 4 424 6 543 4 311 16 430 2 864 2 865 4 186 2 653 2 61 2 64 2 762 2 68 2 657 4 440 2 765 4 550 2 877 2 322 2 878 2 442 4 879 2 83 2 200 2 331 2 332 2 455 2 456 2 97 2 208 2 775 2 676 2 889 2 214 2 108 4 780 4 111 2 896 4 783 2 900 2 686 2 582 4 585 2 789 12 349 2 792 2 474 16 915 4 236 2 592 6 476 2 691 2 481 2 922 4 693 4 799 4 484 2 926 2 697 2 486 2 
699 2 250 2 1 4 492 2 255 2 495 2 494 6 257 2 498 10 263 2 712 2 713 6 17 4 714 2 267 4 269 2 268 10 718 2 22 2 724 4 726 4 727 11 274 2 25 4 733 4 282 2 27 2 515 2 738 4 519 10 30 2 289 2 741 2 743 4 524 2 745 2 299 2 300 2 302 2 535 2 307 2 754 10 543 2 756 2 313 2 57 2 61 18 316 2 66 2 67 2 318 4 75 2 74 4 765 4 322 2 321 4 553 2 83 2 86 2 324 3 327 2 90 2 332 2 97 2 100 2 779 2 108 4 110 20 111 2 782 4 341 2 112 42 580 2 785 2 583 6 587 10 791 2 792 2 356 2 592 6 359 2 796 24 798 2 362 2 595 2 596 2 597 14 365 2 804 2 367 2 368 2 370 2 604 2 132 2 613 4 811 30 812 2 139 2 814 2 383 2 140 10 142 2 386 2 617 2 387 2 619 2 821 6 144 2 391 2 624 2 625 1 148 2 630 2 831 11 405 6 406 2 161 4 412 2 636 12 165 2 415 2 168 2 416 2 169 11 845 2 171 2 640 4 418 2 850 4 852 16 643 2 856 2 645 8 859 2 422 2 177 2 647 2 180 20 427 2 650 8 864 2 653 2 432 2 659 2 437 4 875 2 662 2 442 2 193 10 447 2 448 14 199 2 200 2 666 12 668 2 454 4 455 2 456 2 458 2 457 10 459 2 209 4 210 2 676 12 219 10 894 2 682 2 683 2 902 2 231 2 469 4 904 2 470 2 907 2 471 2 233 2 689 2 474 24 236 2 477 8 237 2 479 2 240 2 919 2 922 30 697 2 
61 2 894 2 219 2 831 2 289 2 112 6 524 2 636 2 904 2 193 2 907 2 587 4 811 2 169 2 86 2 324 2 387 2 474 2 859 2 622 2 457 2 727 2 676 2 515 2 
61 2 894 2 219 2 831 2 289 2 112 6 524 2 636 2 904 2 193 2 907 2 587 4 811 2 169 2 86 2 324 2 387 2 474 2 859 2 622 2 457 2 727 2 676 2 515 2 
61 2 894 2 219 2 831 2 289 2 112 6 524 2 636 2 904 2 193 2 907 2 587 4 811 2 169 2 86 2 324 2 387 2 474 2 859 2 622 2 457 2 727 2 676 2 515 2 
61 2 680 4 316 2 251 4 521 2 286 4 69 2 437 2 784 4 494 4 838 2 685 2 524 2 115 4 261 3 469 2 80 2 470 2 811 10 416 2 169 3 417 2 614 2 791 2 504 2 303 3 387 2 818 2 474 4 355 3 591 2 176 2 724 2 727 3 692 6 650 6 777 2 104 2 155 4 631 2 
61 2 316 2 251 4 69 2 437 2 74 2 494 4 261 2 80 2 811 10 614 2 504 2 387 2 818 2 724 2 727 2 104 2 777 2 631 2 155 4 680 4 521 2 286 4 784 4 685 2 838 2 524 2 115 4 469 2 470 2 416 2 169 2 417 2 791 2 303 2 850 2 474 4 591 2 355 2 176 2 179 2 692 6 650 4 
61 2 316 2 251 4 69 2 437 2 74 2 494 4 261 2 80 2 811 10 614 2 504 2 387 2 818 2 724 2 727 2 104 2 777 2 631 2 155 4 680 4 521 2 286 4 784 4 685 2 838 2 524 2 115 4 469 2 470 2 416 2 169 2 417 2 791 2 303 2 850 2 474 4 591 2 355 2 176 2 179 2 692 6 650 4 
61 2 316 2 251 4 69 2 437 2 74 2 494 4 261 2 80 2 811 10 614 2 504 2 387 2 818 2 724 2 727 2 104 2 777 2 631 2 155 4 680 4 521 2 286 4 784 4 685 2 838 2 524 2 115 4 469 2 470 2 416 2 169 2 417 2 791 2 303 2 850 2 474 4 591 2 355 2 176 2 179 2 692 6 650 4 
61 2 316 2 251 4 69 2 437 2 74 4 494 4 261 2 80 2 811 10 614 2 504 2 387 2 818 2 724 2 727 2 104 2 777 2 631 2 155 4 680 4 521 2 286 4 784 4 685 2 838 2 524 2 115 4 469 2 470 2 416 2 169 2 417 2 791 2 303 2 850 4 474 4 591 2 355 2 176 2 179 4 692 6 650 4 
290 2 698 2 
79 2 519 2 499 2 793 2 225 2 663 2 102 2 
892 2 860 2 501 2 474 2 811 2 307 2 776 2 766 2 205 2 
806 2 316 5 405 3 782 1 410 2 437 6 74 5 494 11 345 2 115 4 469 6 470 5 811 6 529 4 812 2 416 5 383 2 417 2 791 5 715 2 640 2 850 5 474 6 563 2 724 6 726 2 179 4 827 2 650 13 924 2 56 2 
680 2 632 7 883 1 251 2 474 1 20 2 286 2 376 2 48 2 571 2 190 4 825 2 729 2 134 2 811 1 677 2 503 2 107 2 
680 2 632 6 251 2 20 4 286 2 376 2 48 2 571 2 190 4 825 2 729 4 134 2 677 2 503 4 107 2 
680 2 632 10 883 1 251 2 474 1 20 8 286 2 376 2 48 2 571 8 190 4 825 2 729 8 134 2 811 1 677 2 503 8 107 6 
680 2 632 2 251 2 20 2 286 2 376 2 48 2 190 2 825 2 729 2 134 2 677 2 503 2 
250 2 600 2 603 8 602 2 706 2 379 2 607 2 500 2 608 4 262 2 811 44 711 2 265 2 266 2 716 2 819 2 23 2 823 2 394 2 510 2 513 2 830 6 158 6 407 2 32 4 836 4 409 4 837 2 743 36 292 2 635 2 295 2 840 10 744 2 532 2 39 2 851 2 44 2 541 8 308 6 543 18 542 2 755 2 315 2 653 4 63 8 436 2 73 2 76 2 549 2 78 2 442 20 664 2 197 4 323 2 559 2 451 4 665 2 560 6 884 2 94 2 564 2 455 4 772 2 101 2 215 2 109 7 895 1 467 2 577 2 897 2 787 2 117 2 348 2 688 6 474 40 236 2 916 6 478 2 239 4 361 2 124 18 697 2 599 4 369 2 
869 2 250 8 187 10 371 4 2 2 129 2 73 2 706 2 549 2 608 6 442 14 262 2 811 28 711 6 382 4 266 2 451 2 560 2 89 2 667 2 884 2 94 2 455 2 392 2 149 2 627 2 399 10 629 2 338 2 215 2 109 2 834 4 409 6 836 6 32 2 342 2 743 36 230 2 787 2 840 8 348 2 298 4 531 2 532 2 847 2 749 6 474 26 536 4 236 2 797 4 239 2 542 2 543 14 648 4 124 14 55 4 696 2 185 2 697 8 867 2 653 2 599 2 
869 2 491 2 250 6 187 2 436 2 602 2 2 2 73 2 549 2 607 4 608 2 442 14 500 2 262 2 135 2 811 34 711 1 85 2 265 2 664 2 197 2 323 2 266 2 665 2 560 4 884 2 94 2 455 6 394 2 627 2 399 2 215 2 513 2 109 4 407 2 32 4 836 2 409 2 342 1 743 26 292 2 295 2 787 2 840 12 744 2 167 2 117 2 348 2 532 2 39 2 44 2 474 30 236 4 916 4 478 2 239 2 308 4 361 2 542 2 543 12 756 2 755 2 124 4 185 1 697 6 867 1 599 2 653 6 
250 6 546 2 371 2 256 2 706 2 497 2 549 2 8 2 768 2 442 12 608 2 12 2 262 2 811 28 266 2 615 4 451 2 881 4 19 2 882 2 621 2 204 2 670 2 455 2 24 2 98 2 276 2 732 2 463 2 152 2 735 2 512 2 213 2 891 2 518 2 223 2 522 2 409 2 836 2 743 30 527 4 787 2 840 2 348 2 298 2 532 2 751 2 642 2 474 28 236 2 542 2 543 12 426 2 124 18 55 2 760 2 697 6 652 2 653 2 
523 2 

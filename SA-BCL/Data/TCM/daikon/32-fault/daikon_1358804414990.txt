#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 406 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 99 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR utilMDE.Assert$AssertionException (78,219) (78,219) 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 1 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (78,219) (78,219) (25,262,318,491,622) (25,262,318,491,622) (25,262,318,491,622) 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 84 9 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 113 (206,589) (521,547) (521,547) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 113 (206,589) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 113 (206,589) (206,589) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 113 (206,589) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 573 29 313 74 407 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 482 98 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 357 387 97 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 357 387 97 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 357 387 97 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 357 387 97 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaCharStream:ReadByte()C
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo; | RETURN | 20729 | return null
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:lte(II)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:lt(II)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaCharStream:getBeginLine()I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V | CONDITION | 372 | if (x) -> if (!x)
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V | ASSIGN | 746 | = null
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 13645 | = null
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:sum([D)D
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator; | ASSIGN | 2215 | = null
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ModBitTracker:split(I)I
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaCharStream:readChar()C
daikon.Quant:lexGTE([I[I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltwiseGTE([I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:union([I[I)[I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:eltsEqual([II)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Assert:assertTrue(Z)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_ntk()I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.InvMap:InvMap()V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:new_ppt()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 12386 | = null
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | RETURN | 100880 | return null
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:size()I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object; | RETURN | 10511 | return null
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18332 | 0 -> -1
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_16()Z
daikon.Quant:eltsGT([II)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:relate_var()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.PptSlice2:arity()I
daikon.PptSlice0:arity()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9730 | = null
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ProglangType:baseIsScalar()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 37686 | 64 -> 0
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:Ppt()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eq(JJ)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
utilMDE.LimitedSizeIntSet:size()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:numIntArrays()I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Debug:logOn()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ProglangType:isIntegral()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:slice([III)[I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:intersection([I[I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice1:arity()I
daikon.Quant:subsetOf([S[S)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:sameLength([I[I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | CONDITION | 1462 | if (x) -> if (!x)
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:lexGT([I[I)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:eq(II)Z
jtb.JavaCharStream:getEndLine()I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariants:Invariants()V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 22517 | = null
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.Node:Node()V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 11206 | = null
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 5354 | if (x) -> if (!x)
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.MathMDE:gcd(II)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ModBitTracker:num_vars()I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
379 2 483 2 314 2 16 2 94 2 423 2 531 2 507 2 214 2 235 2 562 2 433 2 288 2 413 2 205 2 34 2 35 2 566 2 73 6 311 2 353 4 594 4 334 2 
535 6 326 2 379 4 314 4 371 4 423 5 34 4 35 8 566 4 156 2 73 14 311 8 507 8 353 12 129 6 114 4 635 2 
406 2 600 2 513 2 119 2 480 2 568 2 399 2 227 2 360 2 624 6 
485 2 49 2 95 2 99 2 268 2 479 2 511 2 82 2 
599 2 553 2 191 4 153 4 505 2 78 4 263 4 465 2 299 4 384 2 426 2 5 2 429 2 388 2 607 2 158 2 202 2 163 2 432 2 435 2 477 2 400 2 355 2 55 2 356 2 282 2 211 2 444 2 137 2 22 2 362 2 23 2 61 2 581 2 325 2 620 2 71 2 254 2 219 4 374 2 110 2 377 2 595 2 223 2 
615 4 379 16 314 16 484 6 226 2 442 2 78 4 576 6 423 21 196 4 324 4 100 4 507 28 285 8 535 6 179 4 587 2 66 6 627 8 433 18 371 4 288 4 413 2 34 16 35 28 219 4 566 16 73 48 439 4 311 28 54 2 89 2 353 44 129 6 594 6 114 4 
222 2 92 2 465 2 
271 2 178 2 496 2 319 10 17 22 372 2 220 2 579 2 41 2 508 2 188 2 189 2 223 2 162 2 
349 2 6 2 369 2 400 2 376 2 78 2 481 4 530 2 219 2 
391 2 315 2 65 6 117 2 274 2 323 2 352 2 87 2 112 6 446 2 131 6 
177 2 125 4 182 4 78 2 255 2 264 2 219 2 532 4 291 2 606 2 632 4 160 2 367 4 
379 10 553 2 314 10 442 2 338 2 78 6 423 12 156 4 410 2 197 4 507 16 605 2 66 8 433 8 252 8 288 6 413 4 34 10 35 16 219 6 566 10 502 8 73 28 439 6 311 16 548 2 416 4 353 26 594 10 522 2 
1 2 
268 2 
208 2 
544 2 78 2 
78 4 50 2 77 2 
552 2 296 1 78 24 555 4 556 1 464 6 298 2 264 1 558 2 234 1 80 2 341 4 559 2 302 6 430 2 512 5 124 1 239 2 516 2 431 2 609 2 242 1 396 1 275 1 12 2 351 2 520 2 567 4 440 2 312 2 169 1 441 2 278 2 172 2 526 1 136 1 318 2 617 2 320 2 60 4 492 2 622 2 25 2 534 2 63 2 217 2 494 2 104 4 64 2 368 2 105 5 180 5 369 2 412 2 183 1 499 3 414 1 629 2 630 1 540 2 590 2 219 22 72 1 187 1 75 2 458 1 
152 2 419 2 39 2 40 2 230 6 467 2 557 2 469 2 79 6 509 4 386 2 44 2 159 2 84 2 237 6 9 2 7 6 565 2 345 4 48 2 475 2 348 6 10 24 478 2 613 2 398 2 168 6 133 24 130 2 15 2 57 2 58 2 527 4 528 6 488 2 404 6 138 2 19 2 361 2 490 2 96 4 24 24 618 4 584 2 30 2 145 2 495 2 251 4 67 6 543 4 259 2 36 4 456 6 457 4 551 6 260 6 261 2 
31 2 506 2 197 2 537 2 448 1 454 2 550 2 465 2 
31 2 250 2 550 2 
31 2 69 2 550 2 
523 2 462 2 70 2 
31 2 550 2 
462 2 175 2 
272 2 550 2 
523 2 462 2 424 2 
523 2 621 2 500 2 
437 2 523 2 328 2 
523 2 277 2 46 2 
523 2 53 2 308 2 
462 2 106 2 
0 2 550 2 
614 2 500 2 
173 2 328 2 
401 2 46 2 
141 2 53 2 
462 2 411 2 
53 2 127 2 
46 2 115 2 
519 2 328 2 
101 2 500 2 
523 2 462 2 424 2 18 2 
523 2 462 2 118 2 424 2 18 2 
523 2 462 2 434 2 
523 2 462 2 303 2 
625 2 564 2 517 2 109 2 
280 2 515 2 574 4 554 2 59 2 347 2 155 2 17 6 273 2 128 2 415 2 88 2 43 4 470 2 583 2 121 2 38 2 123 2 
523 2 359 2 
604 2 454 2 465 2 122 2 
604 2 537 2 147 2 454 2 465 2 122 2 
31 2 197 2 287 2 454 2 550 2 465 2 
305 2 477 2 
197 2 454 2 498 2 465 2 
420 2 46 2 
53 2 8 2 
500 2 472 2 
328 2 560 2 
330 2 53 2 328 2 
53 2 116 2 328 2 
53 2 328 2 533 2 
53 2 328 2 134 2 
281 6 575 2 465 2 26 2 256 6 546 2 290 2 454 2 
462 2 241 2 
523 2 209 2 550 2 
550 2 633 2 
431 2 
380 2 296 2 2 2 555 4 78 26 464 6 231 2 233 2 558 2 80 2 559 2 302 4 561 2 161 2 473 2 390 2 393 2 239 2 567 4 90 2 569 2 312 2 245 2 172 2 317 2 320 2 492 2 586 2 104 4 494 6 327 2 180 2 105 4 412 2 590 2 332 2 504 4 336 2 421 2 601 2 195 2 200 8 269 2 430 2 512 2 124 2 514 2 516 6 609 2 51 2 610 2 351 2 520 2 135 2 441 2 279 2 617 2 358 4 60 4 62 2 534 2 143 2 63 2 217 2 368 2 369 2 540 2 539 4 219 26 373 2 450 2 631 2 75 6 459 2 
380 2 296 2 2 2 555 4 78 26 298 1 464 6 231 2 233 2 558 2 80 2 559 2 302 5 561 2 161 2 473 2 393 2 239 2 397 2 567 4 90 2 569 2 312 2 245 2 172 2 317 2 402 2 320 2 492 2 586 2 104 4 494 6 327 2 180 2 105 4 412 2 590 2 332 2 596 2 504 4 336 2 601 2 195 2 200 8 269 2 430 2 512 2 124 2 514 2 516 6 609 2 51 2 610 2 351 2 520 2 135 2 278 1 441 2 279 2 617 2 358 4 60 4 139 2 62 2 534 2 143 2 63 2 217 2 368 2 369 2 540 2 539 4 219 26 373 2 450 2 75 6 459 2 
310 2 
266 2 83 2 
611 2 258 2 580 2 394 2 547 2 113 2 589 2 521 2 270 2 
394 2 572 2 447 2 307 2 422 2 589 2 265 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
394 2 572 2 447 2 307 2 422 2 589 2 265 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
394 2 572 2 447 2 307 2 422 2 589 2 265 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
394 2 572 2 447 2 307 2 422 2 589 2 265 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
394 2 572 2 447 2 307 2 422 2 589 2 265 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
190 2 394 2 572 2 307 2 422 2 589 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
190 2 394 2 572 2 307 2 422 2 589 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
190 2 394 2 572 2 307 2 422 2 589 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
190 2 394 2 572 2 307 2 422 2 589 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
394 2 572 2 307 2 422 2 589 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
460 2 78 24 555 4 464 6 298 2 558 2 80 2 559 2 302 6 81 2 304 2 239 2 394 2 307 2 567 4 90 2 312 2 172 2 316 2 572 2 320 2 489 2 491 2 492 4 580 2 174 2 176 2 104 4 494 6 180 3 105 3 412 2 589 2 590 2 184 2 258 2 113 2 504 4 262 2 422 2 265 2 510 2 269 2 430 2 270 2 512 3 514 2 516 8 431 2 609 2 611 2 52 2 351 2 520 2 521 2 441 2 278 2 279 2 617 2 60 4 363 2 142 2 619 2 365 2 534 2 63 2 217 2 368 2 369 2 540 2 289 3 219 24 542 2 547 2 75 6 
394 2 572 2 447 2 307 2 422 2 589 2 265 2 611 2 542 2 363 2 52 2 258 2 580 2 174 2 547 2 510 2 113 2 521 2 81 2 270 2 
572 2 422 2 265 2 577 4 363 2 580 2 174 2 510 2 270 2 81 2 394 2 165 2 307 2 447 2 589 2 611 2 542 2 52 2 258 2 547 2 113 2 521 2 224 2 
186 2 375 2 81 2 
186 2 375 2 81 2 
78 14 555 4 464 6 298 2 558 2 80 2 428 2 559 2 302 6 269 2 81 2 270 2 430 2 164 2 514 2 239 2 516 2 609 2 611 2 351 2 520 2 567 4 312 2 441 2 278 2 279 2 172 2 617 2 320 2 60 4 140 2 445 2 492 2 580 2 493 2 534 2 63 2 217 2 494 2 104 4 146 2 368 2 105 2 369 2 412 2 589 2 540 2 590 2 219 14 75 2 113 2 597 2 
441 2 171 2 344 2 486 2 210 2 228 2 78 4 383 2 219 2 266 2 4 2 492 2 619 2 301 2 503 2 249 2 295 2 
78 14 555 4 464 6 298 2 558 2 80 2 428 2 559 2 302 6 269 2 81 2 270 2 430 2 164 2 514 2 239 2 516 2 609 2 206 2 611 2 207 2 351 2 520 2 567 4 312 2 441 2 278 2 279 2 172 2 617 2 320 2 60 4 140 2 445 2 492 2 580 2 493 4 534 2 63 2 217 2 494 2 104 4 146 2 368 2 105 4 369 2 412 2 589 2 540 2 590 2 219 14 75 2 113 2 597 2 
78 14 555 4 464 6 298 2 558 2 80 2 428 2 559 2 302 6 269 2 81 2 270 2 430 2 164 2 514 2 239 2 516 2 609 2 611 2 351 2 520 2 567 4 312 2 441 2 278 2 279 2 172 2 617 2 320 2 60 4 140 2 445 2 492 2 580 2 493 2 534 2 63 2 217 2 494 2 104 4 146 2 368 2 105 2 369 2 412 2 589 2 540 2 590 2 219 14 75 2 113 2 597 2 
313 2 236 2 368 2 573 2 337 2 382 2 47 2 78 4 529 2 107 2 407 2 451 2 74 2 293 2 37 2 29 2 
571 2 463 2 418 2 487 2 246 2 154 2 78 2 212 4 120 2 286 3 473 6 216 2 512 3 494 2 516 2 240 1 180 3 105 3 476 2 219 2 541 2 591 2 75 2 90 2 504 2 
571 2 512 2 418 2 463 2 494 2 516 2 105 2 180 2 487 2 154 2 246 2 78 2 212 4 476 2 219 2 541 2 591 2 90 2 75 2 120 2 473 6 286 2 216 2 504 2 
571 2 512 2 418 2 463 2 494 2 516 2 105 2 180 2 487 2 154 2 246 2 78 2 212 4 476 2 219 2 541 2 591 2 90 2 75 2 120 2 473 6 286 2 216 2 504 2 
379 2 78 10 300 2 602 2 468 2 339 2 507 2 198 2 157 4 516 2 306 2 309 4 566 2 439 2 311 2 353 4 90 2 354 4 91 2 571 2 56 4 314 2 616 2 364 2 27 3 623 6 33 2 370 2 105 3 180 3 66 4 34 2 35 2 219 4 592 2 108 3 73 5 593 4 455 2 634 3 
379 2 78 10 423 2 300 2 602 2 468 2 339 2 507 2 198 2 157 4 516 2 306 2 433 2 309 4 566 2 439 2 311 2 353 4 90 2 354 4 91 2 571 2 56 4 314 2 442 2 616 2 364 2 27 2 623 6 33 2 370 2 105 2 180 2 66 4 34 2 35 2 219 4 592 2 108 2 73 4 593 4 455 2 634 2 
379 2 78 10 423 2 300 2 602 2 468 2 339 2 507 2 198 2 157 4 516 2 306 2 433 2 309 4 566 2 439 2 311 2 353 4 90 2 354 4 91 2 571 2 56 4 314 2 442 2 616 2 364 2 27 2 623 6 33 2 370 2 105 2 180 2 66 4 34 2 35 2 219 4 592 2 108 2 73 4 593 4 455 2 634 2 
379 2 78 10 423 2 300 2 602 2 468 2 339 2 507 2 198 2 157 4 516 2 306 2 433 2 309 4 566 2 439 2 311 2 353 4 90 2 354 4 91 2 571 2 56 4 314 2 442 2 616 2 364 2 27 2 623 6 33 2 370 2 105 2 180 2 66 4 34 2 35 2 219 4 592 2 108 2 73 4 593 4 455 2 634 2 
379 2 78 10 423 4 300 2 602 2 468 2 339 2 507 2 198 2 157 4 516 2 306 2 433 4 309 4 566 2 439 2 311 2 353 4 90 2 354 4 91 2 571 2 56 4 314 2 442 4 616 2 364 2 27 2 623 6 33 2 370 2 105 2 180 2 66 4 34 2 35 2 219 4 592 2 108 2 73 4 593 4 455 2 634 2 
98 2 482 2 
170 2 203 2 381 2 243 2 213 2 167 2 459 2 
93 2 227 1 78 10 229 2 321 1 409 2 340 2 385 2 283 2 199 2 471 2 343 2 366 2 513 1 563 1 626 2 608 2 204 1 497 2 126 2 218 2 540 2 219 8 257 2 549 2 111 2 
379 6 314 6 442 2 444 2 78 6 576 4 423 4 3 2 196 2 408 2 507 6 284 2 535 4 587 1 627 2 66 4 433 3 371 2 538 2 34 6 219 6 35 6 566 6 331 2 73 15 438 2 439 2 311 6 374 2 276 2 353 12 
536 3 297 2 148 2 395 2 628 2 405 2 309 2 350 2 452 2 593 2 453 2 157 2 215 2 
536 6 297 4 148 2 395 2 78 1 628 2 253 2 405 2 309 2 219 1 350 2 452 2 593 2 453 2 157 2 132 2 45 1 215 2 
536 6 297 4 148 2 395 2 253 2 628 4 405 4 309 2 350 2 452 2 593 2 453 2 157 2 132 2 215 4 
536 10 297 4 148 2 395 2 78 1 253 8 628 8 405 8 309 2 219 1 350 2 452 2 593 2 453 2 157 2 132 6 45 1 215 8 
78 6 555 2 425 1 387 2 302 2 239 2 351 2 443 2 357 2 247 2 60 2 97 2 368 2 219 6 221 2 333 1 378 2 
278 2 239 2 368 2 443 2 357 2 247 2 78 6 555 2 60 2 298 2 219 6 221 2 351 2 97 2 387 2 302 4 
150 2 335 2 151 2 461 2 417 2 225 2 192 2 193 4 78 38 555 16 194 2 298 4 466 1 267 4 603 2 232 2 427 2 42 2 387 2 342 2 302 32 389 1 201 2 392 14 474 2 238 2 239 6 85 2 346 2 86 2 518 2 436 2 612 1 11 2 166 2 351 6 13 4 14 4 570 2 278 4 244 4 525 2 357 2 403 2 247 2 60 18 322 2 248 2 20 4 21 4 578 2 97 2 102 2 582 2 28 2 103 2 144 2 585 2 32 2 368 4 181 1 588 2 449 4 68 2 501 2 329 2 219 34 185 2 221 4 545 2 292 2 149 2 333 4 294 2 76 2 378 1 
598 2 239 2 368 2 357 2 247 2 78 6 555 2 60 2 219 6 221 2 351 2 97 2 387 2 302 2 378 2 
524 2 

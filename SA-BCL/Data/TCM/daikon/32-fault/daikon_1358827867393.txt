#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 585 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 204 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 169 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 719 476 477 629 208 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 445 267 
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 445 267 416 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (285,521) 720 316 191 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 519 100 111 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 387 111 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 519 100 111 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (285,521) (285,521) 519 100 111 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:lexGTE([I[I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String; | OPERATOR | 57093 | < -> >
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4767 | = null
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:sameLength([I[I)Z
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.RootNode:RootNode()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 9166 | 3 -> 0
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:BeginToken()C
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:memberOf(I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Debug:logOn()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.ArraysMDE:indexOf([II)I | STATEMENT | 13838 | stmt -> ;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 9379 | stmt -> ;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18577 | 0 -> -1
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:pow(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:eltsNotEqual([II)Z | CONSTANT | 162209 | 0 -> 1
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lt(II)Z
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoAux:hashCode()I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:eq(JJ)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Ppt:Ppt()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(FF)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:subsetOf([S[S)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | STATEMENT | 19526 | stmt -> ;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ModBitTracker:split(I)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | RETURN | 100880 | return null
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:memberOf(D[F)Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.Quant:eq(II)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:ne(II)Z
daikon.Quant:gt(II)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE:negate(I)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Debug:logDetail()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:slice([III)[I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | OPERATOR | 4206 | > -> ==
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant:justified()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V | ASSIGN | 58129 | = null
daikon.Quant:gte(II)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:new_ppt()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:num_samples()I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_ntk()I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.WeakHasherMap:size()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakHasherMap:processQueue()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:subsetOf([I[I)Z
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.Invariant:logOn()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptSlice0:arity()I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:eq(DD)Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:size()I
daikon.Quant:isReverse([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo; | RETURN | 315 | return null
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaCharStream:readChar()C
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
38 2 521 2 285 2 350 2 499 4 239 2 500 2 384 2 496 2 
265 2 342 2 663 2 607 2 153 2 585 2 
279 2 516 2 694 6 551 6 521 2 285 2 6 4 674 6 7 2 434 4 511 6 556 2 120 2 
558 2 415 12 691 8 388 8 671 10 31 6 231 2 395 2 306 4 285 6 521 6 56 8 635 4 636 10 312 4 617 8 241 16 427 16 378 26 318 4 247 30 533 2 575 6 467 10 164 2 74 2 553 10 471 2 430 10 667 16 
5 4 73 6 
409 2 
415 2 691 2 671 2 3 2 257 2 634 2 183 2 636 2 610 2 613 2 312 2 131 2 241 2 427 2 378 4 247 6 298 2 467 2 575 2 365 2 553 4 430 2 667 2 
571 6 415 5 671 4 241 8 427 8 378 12 442 6 318 2 247 14 127 4 467 4 493 2 636 4 430 4 374 2 667 8 639 4 
433 2 204 2 670 2 544 6 206 2 251 2 530 2 334 2 531 2 276 2 
337 2 27 2 627 2 139 2 409 2 75 2 410 2 97 2 216 2 385 2 
237 2 449 2 176 2 66 4 381 2 109 2 45 2 494 2 435 2 429 2 725 2 262 2 
415 22 691 18 228 6 671 16 31 4 252 4 55 4 395 2 521 4 285 4 127 4 56 6 525 8 636 16 91 2 36 2 312 2 639 4 264 2 403 2 571 6 405 4 134 6 241 32 427 32 573 2 378 48 442 6 272 2 709 4 247 54 364 6 467 16 575 4 553 6 430 16 346 4 578 6 667 32 
619 2 162 2 45 2 
486 2 83 2 294 2 295 2 595 2 174 2 341 2 193 10 234 2 108 22 526 2 195 2 25 2 47 2 
169 2 717 2 
21 2 
521 2 26 2 
521 4 182 2 303 2 
172 2 188 2 476 2 692 6 54 6 150 2 594 2 477 2 207 2 208 2 734 6 629 2 719 2 181 2 455 2 236 2 113 2 567 2 510 2 703 2 335 2 92 2 
444 2 406 2 117 1 48 2 
588 2 406 2 
306 2 45 2 110 2 554 2 406 2 49 2 484 2 
238 2 110 2 406 2 
669 2 110 2 406 2 
707 2 411 2 48 2 
110 2 406 2 
152 2 411 2 
233 2 
411 2 48 2 311 2 
586 2 482 2 48 2 
507 2 412 2 48 2 
714 2 123 2 48 2 
39 2 235 2 48 2 
690 2 411 2 
324 2 406 2 
33 2 586 2 
292 2 412 2 
665 2 714 2 
235 2 687 2 
411 2 401 2 
235 2 95 2 
604 2 714 2 
412 2 677 2 
586 2 497 2 
625 2 411 2 48 2 311 2 
625 2 411 2 48 2 311 2 168 2 
411 2 104 2 48 2 
411 2 628 2 48 2 
623 2 593 2 583 2 537 2 
336 2 515 2 115 2 647 2 560 2 296 2 440 2 302 2 331 2 151 2 649 2 256 2 108 6 552 2 76 2 383 2 701 4 514 4 
48 2 489 2 
267 2 445 2 
267 2 416 2 445 2 
246 2 306 2 45 2 110 2 406 2 484 2 
380 2 60 2 
306 2 45 2 456 2 484 2 
714 2 107 2 
235 2 675 2 
586 2 141 2 
468 2 412 2 
235 2 412 2 622 2 
235 2 412 2 281 2 
235 2 412 2 696 2 
235 2 22 2 412 2 
282 6 177 6 184 2 214 2 484 2 161 2 45 2 382 2 
411 2 93 2 
559 2 
200 2 205 2 0 2 562 2 4 2 106 5 394 4 211 2 653 2 566 8 309 6 481 2 8 2 310 4 112 4 656 2 487 2 13 3 313 2 314 2 659 2 661 2 18 2 322 2 408 2 666 2 579 2 328 4 421 2 34 2 681 2 682 2 132 4 136 2 243 3 41 3 338 2 44 2 46 2 144 6 344 2 603 2 349 2 350 2 249 4 148 2 431 2 432 6 354 2 518 2 521 26 699 2 608 2 58 6 611 2 263 2 529 2 268 2 271 4 275 2 620 4 163 2 712 2 169 2 170 2 85 2 539 2 285 26 640 2 465 2 735 2 644 2 194 2 646 2 
200 2 205 2 0 2 562 2 4 2 106 4 394 6 211 2 653 2 566 8 309 6 481 2 8 2 310 4 112 4 656 2 487 2 13 2 313 2 314 2 659 2 661 2 18 2 408 2 666 2 579 2 328 4 421 2 34 2 681 2 682 2 132 4 136 2 40 2 243 2 41 2 338 2 245 2 46 2 144 6 344 2 603 2 349 2 350 2 249 4 148 2 431 2 432 6 354 2 518 2 521 26 699 2 608 2 58 6 611 2 263 2 529 2 359 2 268 2 271 4 275 2 620 4 163 2 165 2 712 2 167 2 169 2 624 2 170 2 85 2 539 2 285 26 465 2 735 2 644 2 194 2 646 2 
425 2 
630 2 602 2 
82 4 580 4 202 2 265 2 122 2 102 2 369 2 220 2 240 2 135 2 317 2 721 2 523 2 342 2 663 2 153 2 261 2 557 2 
202 2 300 2 102 2 1 2 695 2 105 6 305 2 521 12 523 2 309 4 153 6 310 2 112 2 260 4 261 2 265 4 570 2 14 2 220 2 270 2 160 4 317 2 275 2 661 2 663 4 534 2 413 2 580 4 82 4 329 2 447 4 169 2 278 2 122 4 368 4 85 2 369 2 124 2 631 2 180 2 721 2 285 6 681 2 460 2 682 2 502 2 240 2 135 2 464 2 42 6 735 2 192 2 94 2 342 4 508 2 645 2 99 2 146 2 557 2 147 4 
202 2 300 2 102 2 1 2 695 2 105 6 305 2 521 12 523 2 309 4 153 4 310 2 112 2 260 4 261 2 265 4 570 2 14 2 220 2 160 4 317 2 275 2 661 2 663 6 534 2 413 2 580 4 82 4 329 2 447 4 169 2 278 2 122 4 368 4 85 2 369 2 124 2 631 2 180 2 721 2 285 6 681 2 460 2 682 2 502 2 240 2 135 2 464 2 42 6 735 2 192 2 94 2 342 4 508 2 736 2 645 2 99 2 146 2 557 2 147 4 
202 2 300 2 102 2 1 2 695 2 105 6 305 2 521 12 523 2 309 4 153 6 310 2 112 2 260 4 261 2 265 4 570 2 14 2 220 2 160 4 317 2 275 2 661 2 663 6 534 2 413 2 580 4 82 4 329 2 447 4 169 2 278 2 122 4 368 8 85 2 369 2 124 2 631 2 180 2 721 2 285 6 681 2 460 2 682 2 502 2 240 2 135 2 464 2 42 6 735 2 192 2 94 2 342 4 508 2 645 2 99 2 146 2 198 2 557 2 147 4 
202 2 300 2 102 2 1 2 695 2 105 8 305 2 521 12 523 2 309 4 153 6 310 2 112 2 260 4 261 2 265 4 570 2 14 2 220 2 160 4 317 2 275 2 661 2 663 8 534 2 413 2 580 4 82 4 329 2 447 4 169 2 278 2 122 4 368 8 85 2 369 2 124 2 631 2 180 2 721 2 285 6 681 2 460 2 682 2 502 2 240 2 135 2 464 2 42 10 735 2 192 2 94 2 342 4 508 2 736 2 645 2 99 2 146 2 198 2 557 2 147 8 
202 2 300 2 102 2 1 2 695 2 105 6 305 2 521 12 523 2 309 4 153 6 310 2 112 2 260 4 261 2 265 4 570 2 14 2 220 2 160 4 317 2 275 2 661 2 663 6 534 2 413 2 580 4 82 4 329 2 447 4 169 2 278 2 122 4 368 8 85 2 369 2 124 2 631 2 180 2 721 2 285 6 681 2 460 2 682 2 502 2 240 2 135 2 464 2 42 10 735 2 192 2 94 2 342 4 508 2 645 2 99 2 146 2 198 2 557 2 147 8 
202 2 205 2 1 2 562 2 4 2 394 6 211 4 397 6 566 4 564 2 212 2 215 2 10 4 570 2 13 2 218 1 14 4 219 6 220 2 17 6 224 2 21 6 227 2 413 4 24 2 579 2 26 6 580 4 232 2 421 2 34 2 240 2 596 7 41 2 42 2 46 2 603 2 432 6 605 1 609 2 58 6 611 2 260 4 261 2 263 2 265 4 61 2 441 6 271 4 618 6 274 2 275 2 67 2 620 4 78 6 446 2 80 1 82 4 447 6 278 2 85 2 450 8 451 2 453 2 631 2 285 24 632 1 288 1 289 6 459 2 297 2 464 2 642 2 465 2 94 2 645 2 646 2 99 2 98 6 300 2 102 2 105 12 106 2 305 2 653 2 309 6 310 4 112 4 656 2 487 2 657 2 488 2 313 2 314 2 315 2 317 2 659 2 661 2 663 8 116 6 118 7 329 2 122 4 124 2 128 2 678 10 681 2 129 2 682 2 502 2 132 4 133 6 137 1 135 2 136 2 140 1 342 4 508 2 144 8 145 2 146 2 513 6 349 2 350 2 352 1 695 4 518 2 521 46 523 2 153 4 527 2 154 6 157 1 362 6 160 8 165 2 534 2 535 2 167 2 715 2 169 2 170 12 368 2 369 2 539 2 721 2 180 2 371 2 182 6 372 2 727 2 728 2 729 2 550 2 735 2 192 2 736 4 555 4 557 2 
202 2 300 2 102 2 205 2 1 2 562 2 4 2 105 12 106 2 305 2 394 6 211 4 397 6 653 2 564 2 566 8 309 6 212 2 310 4 112 4 215 2 10 4 656 2 570 2 657 2 487 2 13 2 488 2 219 6 14 4 313 2 220 2 314 2 315 2 659 2 317 2 17 6 661 2 224 2 116 6 663 8 21 6 227 2 24 2 413 4 26 6 579 4 329 2 580 4 122 4 232 2 124 2 421 2 34 2 128 2 678 10 681 2 129 2 682 2 502 2 133 6 240 2 132 4 136 2 135 2 42 2 41 2 598 2 342 4 508 2 46 2 144 8 145 2 513 6 146 2 603 2 349 2 350 2 249 2 695 4 432 6 518 2 521 48 523 2 609 2 611 2 58 6 153 8 154 6 527 2 260 4 261 2 263 2 265 4 61 2 362 6 441 6 160 8 271 4 618 6 274 2 275 2 67 2 620 4 165 2 534 2 535 2 78 6 167 2 715 2 446 2 447 6 82 4 169 2 278 2 170 12 368 6 85 2 450 8 369 2 451 2 539 4 453 2 631 2 180 2 721 2 285 26 371 2 182 6 289 6 372 2 727 2 459 2 728 2 729 2 550 2 731 2 297 2 642 2 464 2 465 4 192 2 735 2 94 2 645 2 646 2 555 4 98 6 99 2 198 4 557 2 
202 2 300 2 102 2 205 2 1 2 562 2 4 2 105 12 106 2 305 2 394 6 211 4 397 6 653 2 564 2 566 8 309 6 212 2 310 4 112 4 215 2 10 4 656 2 570 2 657 2 487 2 13 2 488 2 219 6 14 4 313 2 220 2 314 2 315 2 659 2 317 2 17 6 661 2 224 2 116 6 663 8 21 6 227 2 24 2 413 4 26 6 579 4 329 2 580 4 122 4 232 2 124 2 421 2 34 2 128 2 678 10 681 2 129 2 682 2 502 2 133 6 240 2 132 4 135 2 136 2 41 2 42 6 598 2 342 4 46 2 508 2 144 8 145 2 513 6 146 2 147 4 603 2 349 2 350 2 249 2 695 4 432 6 518 2 521 48 523 2 609 2 611 2 58 6 153 8 154 6 527 2 260 4 261 2 263 2 265 4 61 2 362 6 441 6 160 8 271 4 618 6 274 2 275 2 67 2 620 4 165 2 534 2 535 2 78 6 167 2 715 2 446 2 447 6 82 4 169 2 278 2 170 12 368 6 85 2 450 8 369 2 451 2 539 4 453 2 631 2 180 2 721 2 285 26 371 2 182 6 289 6 372 2 727 2 459 2 728 2 729 2 550 2 731 2 297 2 642 2 464 2 465 4 192 2 735 2 94 2 645 2 646 2 555 4 98 6 99 2 198 4 557 2 
202 2 205 2 1 2 562 2 4 2 394 6 211 4 397 6 566 10 564 2 212 2 215 2 10 4 570 2 13 4 14 4 219 6 220 2 17 6 224 2 20 2 576 2 21 12 227 2 413 4 24 2 579 4 26 12 580 4 32 2 232 2 421 2 34 2 426 2 240 2 42 6 41 4 598 2 46 2 248 6 603 4 249 2 432 8 609 2 58 8 611 2 260 4 261 2 263 2 265 4 61 2 270 2 441 12 271 4 618 12 274 2 275 2 67 2 620 6 78 6 446 2 82 4 447 6 278 2 85 2 450 8 451 2 453 2 631 2 285 24 89 2 633 6 289 6 459 2 297 2 464 2 642 2 465 4 94 2 645 2 646 2 99 2 98 12 300 2 102 2 105 16 106 4 305 2 653 2 307 6 308 6 309 6 310 4 112 4 656 2 487 2 657 2 313 2 314 2 315 2 317 2 659 2 661 2 490 2 663 10 116 6 329 2 668 6 122 4 673 2 124 2 128 2 678 8 681 2 129 2 682 2 502 2 132 4 133 6 136 2 135 2 340 6 505 2 342 4 508 2 144 12 143 6 145 2 512 6 146 2 513 6 147 4 349 2 350 2 695 4 518 4 521 52 523 2 153 10 527 2 154 6 362 6 160 8 165 2 534 2 535 2 167 2 715 2 716 6 169 2 170 10 368 6 369 2 539 4 180 2 721 2 371 2 182 12 372 2 727 2 728 2 729 2 550 2 731 2 735 2 192 2 736 2 555 4 198 4 557 2 
447 2 329 2 82 2 580 2 300 2 368 6 369 2 695 2 105 4 124 2 305 2 631 2 521 4 721 2 153 6 260 2 261 2 265 4 570 2 502 2 240 2 135 2 160 2 464 2 42 4 317 2 192 2 342 4 663 6 508 2 645 2 146 2 198 2 147 4 557 2 
300 2 559 2 205 2 301 2 562 2 4 2 105 4 106 3 305 2 394 6 211 2 653 2 309 6 480 2 310 4 112 4 213 2 570 2 487 2 13 3 488 2 313 2 314 2 317 2 659 2 661 2 663 6 492 2 580 2 329 2 330 2 124 2 421 2 34 2 678 2 681 2 590 2 682 2 502 2 132 4 240 2 136 2 135 2 41 3 42 2 342 4 46 2 508 2 144 8 146 2 349 2 350 2 695 2 432 6 521 28 153 6 58 6 611 2 260 2 261 2 263 2 265 4 160 2 271 4 275 2 620 4 711 2 165 2 534 2 167 2 536 3 447 2 82 2 169 2 170 4 368 6 85 2 369 2 631 2 285 24 721 2 549 2 464 2 192 2 735 2 645 2 646 2 198 2 557 2 
202 2 300 2 102 2 1 2 695 2 105 6 305 2 521 12 523 2 309 4 153 6 310 2 112 2 260 4 261 2 265 4 570 2 14 2 220 2 160 4 317 2 275 2 661 2 663 6 534 2 413 2 580 4 82 4 329 2 447 4 169 2 278 2 122 4 368 8 85 2 369 2 124 2 631 2 180 2 721 2 285 6 681 2 460 2 682 2 502 2 240 2 135 2 464 2 42 10 735 2 192 2 94 2 342 4 508 2 645 2 99 2 146 2 198 2 557 2 147 8 
202 2 300 2 102 2 1 2 695 2 105 8 305 2 521 12 523 2 309 4 153 8 310 2 112 2 260 4 261 2 265 4 570 2 14 2 220 2 270 2 160 4 317 2 275 2 661 2 660 2 663 6 72 2 534 2 413 2 329 2 82 4 580 4 447 4 169 2 278 2 122 4 368 8 85 2 369 2 124 2 631 2 180 2 285 6 721 2 681 2 682 2 730 4 240 2 135 2 464 2 42 10 735 2 192 2 94 2 342 4 508 2 645 2 99 2 146 2 198 2 557 2 147 8 
300 2 90 2 124 2 
300 2 90 2 124 2 
202 2 300 4 205 2 1 2 562 2 4 2 105 16 392 2 106 2 394 6 211 6 653 2 564 2 566 4 309 6 310 4 112 4 10 2 656 4 487 2 14 2 313 2 314 2 315 2 659 2 317 2 661 2 663 12 408 4 413 4 119 2 579 4 580 2 122 4 124 6 421 2 34 2 587 2 589 2 678 2 35 2 681 2 130 2 682 2 132 4 240 4 136 2 686 4 242 2 42 6 43 2 342 4 46 2 144 2 147 4 350 2 53 2 695 4 432 2 254 2 517 2 521 24 523 2 58 2 611 2 153 12 260 2 263 2 265 4 439 2 270 4 271 4 160 4 275 2 71 2 165 2 167 2 81 2 447 4 169 2 82 2 170 4 368 6 85 2 369 2 280 2 539 4 180 2 285 16 90 2 289 2 727 2 732 2 189 4 464 2 465 4 379 2 735 2 192 2 94 2 736 4 646 2 555 2 198 4 
459 2 12 2 170 2 102 2 29 2 517 2 630 2 285 2 521 4 469 2 589 2 535 2 678 2 289 2 119 2 555 2 681 2 
202 2 300 4 205 2 1 2 562 2 4 2 105 16 392 2 106 4 394 6 211 6 653 2 564 2 566 4 309 6 310 4 112 4 114 2 10 2 656 4 487 2 14 4 313 2 314 2 315 2 659 2 317 2 661 2 663 12 408 4 119 2 413 4 579 4 580 2 122 4 124 6 421 2 34 2 589 2 35 2 681 2 130 2 682 2 132 4 240 4 136 2 686 4 242 2 42 6 43 4 342 4 46 2 144 2 147 4 350 2 53 2 695 4 432 2 517 2 355 2 521 24 523 2 58 2 611 2 153 12 260 2 263 2 265 4 439 2 270 4 160 4 271 4 275 2 71 2 165 2 713 2 167 2 447 4 169 2 82 2 278 2 170 2 368 6 85 2 369 2 539 4 180 2 285 16 90 2 289 2 727 2 638 2 732 2 189 4 464 2 465 4 379 2 735 2 192 2 94 2 736 4 646 2 737 2 198 4 
202 2 300 4 205 2 1 2 562 2 4 2 105 16 392 2 106 2 394 6 211 6 653 2 564 2 566 4 309 6 310 4 112 4 10 2 656 4 487 2 14 4 313 2 314 2 315 2 659 2 317 2 661 2 663 12 408 4 577 2 413 4 119 2 579 4 580 2 122 4 124 6 421 2 34 2 589 2 678 2 35 2 681 2 130 2 682 2 132 4 240 4 136 2 686 4 242 2 42 6 43 2 342 4 343 2 46 2 144 2 147 4 350 2 53 2 695 4 432 2 517 2 521 24 524 2 523 2 58 2 611 2 153 12 260 2 705 2 263 2 265 4 439 2 270 4 271 4 160 4 275 2 71 2 165 2 167 2 447 4 169 2 82 2 278 2 170 4 368 6 85 2 369 2 539 4 180 2 285 16 90 2 289 2 727 2 732 2 189 4 464 2 465 4 379 2 735 2 192 2 94 2 736 4 646 2 555 2 199 2 198 4 
201 2 350 2 474 2 390 2 2 2 432 2 394 2 211 2 521 22 653 2 309 6 611 2 58 2 155 2 310 4 112 4 402 2 263 2 11 2 266 2 487 2 313 2 314 2 271 2 64 2 221 2 316 2 273 1 659 2 708 2 275 2 661 2 326 2 169 2 448 2 170 2 85 2 332 2 34 2 285 16 720 2 681 2 682 2 293 2 132 2 503 1 733 2 191 2 735 2 597 2 46 2 144 2 646 2 
349 2 689 2 203 2 52 4 648 2 478 2 106 3 521 10 56 4 9 3 357 6 217 2 13 3 361 4 16 2 443 2 321 3 664 2 77 4 366 2 23 1 79 4 667 2 84 2 626 2 671 2 582 4 31 2 284 2 285 4 636 2 546 2 592 2 241 2 427 2 378 4 339 3 247 5 467 2 144 2 430 2 
349 2 689 2 691 2 203 2 52 4 648 2 478 2 106 2 395 2 521 10 56 4 9 2 357 6 217 2 13 2 361 4 16 2 443 2 321 2 664 2 77 4 366 2 79 4 667 2 415 2 84 2 626 2 671 2 582 4 31 2 284 2 285 4 636 2 546 2 592 2 241 2 427 2 378 4 339 2 247 4 467 2 144 2 430 2 
349 2 689 2 691 2 203 2 52 4 648 2 478 2 106 2 395 2 521 10 56 4 9 2 357 6 217 2 13 2 361 4 16 2 443 2 321 2 664 2 77 4 366 2 79 4 667 2 415 2 84 2 626 2 671 2 582 4 31 2 284 2 285 4 636 2 546 2 592 2 241 2 427 2 378 4 339 2 247 4 467 2 144 2 430 2 
349 2 689 2 691 2 203 2 52 4 648 2 478 2 106 2 395 2 521 10 56 4 9 2 357 6 217 2 13 2 361 4 16 2 443 2 321 2 664 2 77 4 366 2 79 4 667 2 415 2 84 2 626 2 671 2 582 4 31 2 284 2 285 4 636 2 546 2 592 2 241 2 427 2 378 4 339 2 247 4 467 2 144 2 430 2 
349 2 689 2 691 4 203 2 52 4 648 2 478 2 106 2 395 4 521 10 56 4 9 2 357 6 217 2 13 2 361 4 16 2 443 2 321 2 664 2 77 4 366 2 79 4 667 2 415 4 84 2 626 2 671 2 582 4 31 2 284 2 285 4 636 2 546 2 592 2 241 2 427 2 378 4 339 2 247 4 467 2 144 2 430 2 
422 2 126 2 491 2 173 2 702 2 244 2 
644 2 491 2 418 2 363 2 283 2 15 2 223 2 
351 2 370 2 206 1 452 1 393 2 520 2 423 2 521 10 285 8 606 2 700 2 479 1 483 1 637 2 185 2 706 2 684 2 360 2 441 2 428 2 531 1 504 2 466 2 661 2 69 2 327 2 
581 2 415 4 691 3 671 6 250 2 31 2 87 2 353 2 395 2 521 6 285 6 286 2 525 2 56 4 636 6 547 2 91 1 639 2 571 4 463 2 134 4 241 6 427 6 159 2 378 12 247 15 467 6 621 2 346 2 430 6 667 6 
51 1 158 2 389 2 685 2 28 2 361 2 582 2 138 2 319 2 506 7 178 2 521 1 285 1 96 4 79 2 509 2 473 2 485 2 
158 2 389 2 28 2 685 4 361 2 582 2 138 2 319 2 506 6 178 2 96 4 79 2 509 4 473 2 485 4 
51 1 158 2 389 2 28 8 685 8 361 2 582 2 138 2 319 2 506 10 178 6 521 1 285 1 96 4 79 2 509 8 473 2 485 8 
158 2 389 2 685 2 361 2 582 2 138 2 319 2 506 2 96 2 79 2 509 2 473 2 485 2 
475 4 561 6 103 2 304 2 209 8 210 6 650 4 394 36 565 2 399 2 111 2 568 2 569 2 487 4 404 4 222 7 574 2 662 2 19 2 323 2 225 8 226 2 495 2 414 2 121 2 229 2 501 2 333 2 34 2 680 2 132 20 688 8 345 2 347 2 693 2 149 2 253 2 519 2 698 2 522 2 521 44 57 2 59 2 259 2 612 2 614 2 704 2 615 2 528 2 263 4 437 6 438 2 63 4 271 18 710 2 165 2 166 2 167 2 367 1 171 6 540 2 542 2 179 2 454 2 285 40 287 6 543 2 545 10 457 2 548 2 373 16 375 2 187 2 462 4 461 2 377 4 641 4 299 6 470 2 100 2 
101 2 50 2 387 2 475 2 149 2 103 2 253 2 391 4 563 4 519 2 394 36 650 6 651 4 521 28 258 2 57 2 111 2 612 2 156 2 569 2 263 2 616 6 487 2 404 2 269 4 62 2 63 6 271 14 407 2 222 2 68 2 70 2 662 6 165 8 226 2 167 8 414 2 538 2 230 10 30 2 718 2 419 4 542 2 34 2 285 26 287 2 424 2 545 8 290 4 726 4 373 14 458 2 461 2 132 14 377 6 190 10 641 2 600 2 601 2 197 4 472 2 100 2 
475 4 693 2 149 2 561 4 253 2 210 4 650 4 519 2 394 34 651 2 255 2 521 38 522 2 399 2 111 2 400 2 612 2 59 2 259 2 614 2 569 2 704 2 263 6 616 2 487 6 404 2 438 2 269 2 63 4 271 16 407 2 222 4 70 1 574 2 662 1 19 2 323 2 165 6 226 2 167 6 495 2 414 2 121 2 229 2 230 2 538 2 419 2 542 2 333 2 179 4 34 4 285 34 722 2 287 4 543 2 545 14 290 2 726 2 548 2 373 4 458 1 375 2 291 2 461 2 462 2 377 4 132 18 641 2 190 2 599 2 600 1 197 2 601 2 347 2 100 2 
386 2 103 2 253 2 697 2 519 2 394 38 650 2 396 4 651 2 521 36 652 2 398 2 654 2 57 2 655 2 111 2 356 2 436 2 569 2 263 2 437 2 358 2 572 2 487 2 271 16 63 2 65 4 658 2 320 2 532 2 277 2 165 6 167 6 414 2 498 4 171 2 86 2 584 2 175 2 417 2 672 2 540 2 501 2 541 2 419 2 420 4 542 2 88 2 34 2 125 2 285 36 545 2 723 2 676 2 186 2 726 2 724 2 679 4 373 26 37 2 591 2 376 2 683 2 132 16 377 2 643 2 597 2 142 2 299 2 196 2 348 2 100 2 
325 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (163,392) (163,392) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (163,392) (163,392) 146 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 183 465 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 183 465 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs2()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 6 (128,343) 718 (403,673) (128,343) 720 (403,673) 657 636 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 401 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 401 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 508 306 208 274 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 238 753 362 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (163,392) (163,392) 273 238 753 362 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 238 753 362 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant:getConfidence()D
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2425 | return null
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaCharStream:FillBuff()V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.ProglangType:dimensions()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.MathMDE:gcd(II)I | CONDITION | 4310 | if (x) -> if (!x)
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:intern([I)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.ProglangType:isIntegral()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:hashCode()I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:baseIsScalar()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
daikon.Quant:memberOf(J[J)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5096 | = null
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z | ASSIGN | 37734 | = null
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:eq(FF)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:setDiff([I[I)[I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 16534 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.Node:Node()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:sum([D)D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGTE([II)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 2121 | = null
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel; | RETURN | 571 | return null
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:union([I[I)[I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:ne(II)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([S[S)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_50()Z | STATEMENT | 169054 | stmt -> ;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:lt(II)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:lexGT([I[I)Z
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.PptSlice0:arity()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107829 | = null
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:eltsLT([II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | STATEMENT | 10508 | stmt -> ;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([J)[J
daikon.Ppt:Ppt()V
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ValueTuple:size()I
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:sum([I)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern:numIntArrays()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:slice([III)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:subsetOf([F[D)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Debug:logDetail()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo; | RETURN | 20729 | return null
utilMDE.MathMDE:sign(I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:justified()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptSlice1:num_samples()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:eltsLtIndex([I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3_1()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfo:relate_var()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:eq(DD)Z
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7862 | if (x) -> if (!x)
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE:negate(I)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | RETURN | 25109 | return null
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:subsetOf([D[D)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGT([II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:subsetOf([I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.PptSlice2:arity()I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6772 | = null
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 491 | = null
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.Invariant:logOn()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaCharStream:readChar()C
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaCharStream:getEndLine()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:memberOf(F[D)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.FuzzyFloat:gt(DD)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 2 261 2 182 2 511 2 184 2 556 5 446 2 618 2 187 4 685 2 422 4 117 2 689 2 453 2 367 2 26 2 95 2 173 2 679 2 756 2 
359 2 685 8 422 16 391 8 351 4 328 4 32 8 408 2 261 8 629 9 694 2 182 8 184 8 556 18 446 8 173 8 756 8 
106 2 635 2 339 2 393 2 670 2 509 2 
302 2 212 2 763 2 469 2 386 2 714 2 558 2 358 2 168 2 604 2 
621 2 743 4 231 2 162 2 163 2 392 2 598 2 593 2 7 2 
612 2 314 2 5 2 352 2 467 2 503 6 648 2 90 2 444 6 44 2 304 6 
141 6 495 4 703 2 614 6 392 2 597 4 120 2 455 6 9 2 500 2 163 2 738 2 431 6 
489 2 359 2 685 8 422 16 378 4 117 6 392 4 219 4 261 8 181 2 182 8 629 16 163 4 184 8 556 17 446 8 400 2 187 12 173 8 78 2 756 8 
779 4 76 6 
386 2 
100 2 404 2 587 2 405 2 50 4 298 2 52 2 102 4 728 2 257 2 733 2 163 4 162 2 680 2 213 2 557 2 309 2 476 2 311 2 170 2 318 2 124 2 221 2 699 2 271 2 174 4 488 4 73 2 133 2 228 2 31 2 659 2 334 2 716 2 282 2 388 2 449 2 84 2 392 4 538 2 245 2 344 2 346 2 586 2 
75 8 261 4 182 4 107 4 163 4 556 9 184 4 446 4 422 8 685 4 392 4 629 8 220 8 399 2 173 4 756 4 
311 2 448 2 589 2 
79 2 768 2 155 2 519 2 296 2 228 2 136 2 428 2 265 2 258 2 486 10 783 2 701 2 281 22 
415 2 
99 2 206 3 2 2 300 3 104 2 590 6 510 4 109 2 682 2 417 2 421 2 423 1 116 2 595 2 119 6 425 2 121 2 427 2 217 2 603 6 602 2 693 2 429 1 697 2 320 2 29 12 131 4 611 1 132 2 134 6 327 1 615 1 439 2 527 2 231 2 617 2 712 4 442 6 38 2 532 2 139 2 620 6 452 2 626 2 340 4 42 1 146 2 147 2 458 2 45 8 249 2 722 1 256 2 262 2 56 2 163 30 641 1 472 2 741 1 165 2 473 2 474 14 166 2 169 2 361 1 171 2 63 2 266 2 368 1 67 2 72 2 653 2 375 1 177 2 757 2 490 1 762 2 178 1 491 2 180 4 381 2 275 2 660 1 385 2 186 1 574 6 576 1 387 1 579 2 83 6 392 32 286 2 498 8 773 3 198 3 91 1 400 2 678 5 
392 2 706 2 
392 4 16 2 528 2 
505 4 550 8 407 2 54 50 637 8 731 2 159 10 8 18 259 14 734 2 58 2 13 2 59 14 470 14 515 14 15 2 305 2 516 10 61 6 357 10 742 50 214 4 264 10 475 2 745 10 215 4 424 14 312 4 313 14 687 2 748 2 24 2 749 6 216 2 520 2 481 2 565 2 66 2 696 14 125 8 608 8 754 14 70 2 568 8 224 2 130 4 325 2 227 18 569 6 440 4 36 2 709 2 384 14 333 2 443 2 278 8 235 10 189 2 767 2 190 4 578 2 40 2 669 2 82 2 41 6 85 2 394 2 774 14 580 4 456 14 196 2 675 4 94 6 778 50 781 4 152 2 153 2 632 10 547 2 
167 2 34 2 560 2 545 1 
167 2 176 2 
622 2 311 2 504 2 250 2 
419 2 622 2 311 2 504 2 250 2 372 2 
489 2 622 2 167 2 311 2 123 2 210 2 
221 2 204 2 
489 2 622 2 311 2 461 2 
377 2 688 2 
293 2 416 2 
436 2 103 2 
19 2 601 2 
240 2 416 2 601 2 
634 2 416 2 601 2 
420 2 601 2 416 2 
638 2 601 2 416 2 
433 2 654 6 229 6 418 2 140 2 622 2 20 2 311 2 
735 2 380 2 
419 2 489 2 622 2 167 2 311 2 138 2 123 2 
167 2 737 2 123 2 
167 2 695 2 123 2 
34 2 531 2 380 2 
167 2 123 2 
64 2 380 2 
167 2 247 2 
1 2 34 2 380 2 
62 2 103 2 34 2 
676 2 34 2 601 2 
377 2 512 2 34 2 
34 2 330 2 416 2 
48 2 380 2 
167 2 719 2 
776 2 103 2 
640 2 601 2 
377 2 30 2 
154 2 416 2 
77 2 380 2 
496 2 416 2 
501 2 377 2 
752 2 601 2 
103 2 562 2 
1 2 14 2 34 2 380 2 
1 2 252 2 14 2 34 2 380 2 
269 2 34 2 380 2 
674 2 34 2 380 2 
398 2 268 2 485 2 248 2 
746 2 761 2 463 2 477 2 599 4 145 2 588 4 341 2 260 2 395 2 195 2 148 2 383 2 267 2 649 2 777 2 487 2 281 6 
34 2 493 2 
72 2 
350 2 551 2 2 2 465 2 590 4 732 4 510 4 56 2 163 18 417 2 113 2 165 2 474 2 473 2 421 2 423 2 116 2 595 2 316 2 119 6 171 2 427 2 750 2 693 2 564 2 320 2 29 6 653 2 131 4 757 2 177 2 439 2 491 2 180 4 275 2 231 2 712 4 442 6 183 2 574 2 532 2 620 2 667 2 579 2 392 18 42 2 146 2 147 6 96 2 249 2 
350 2 551 2 2 2 465 2 590 5 732 4 510 4 56 2 163 18 417 2 113 2 165 2 474 2 473 2 421 2 423 2 116 2 595 2 316 2 119 6 171 2 427 2 750 2 693 2 564 2 320 2 29 6 653 2 131 4 757 2 177 2 762 1 439 2 527 1 491 2 180 4 275 2 231 2 712 4 442 6 183 2 574 2 532 2 620 2 667 2 579 2 392 18 42 2 146 2 147 6 96 2 249 2 
272 2 
396 2 321 2 
403 2 0 2 2 2 156 2 636 2 160 2 467 2 510 2 56 2 55 2 57 4 163 6 304 6 517 4 417 2 18 4 360 2 314 4 171 2 427 2 692 2 566 2 648 2 650 2 483 2 270 2 128 2 225 2 704 2 757 2 437 2 657 2 439 2 571 2 379 2 442 4 712 2 444 6 234 4 236 8 279 4 665 8 142 4 668 2 81 2 392 12 671 2 672 2 673 2 454 2 43 2 397 2 503 6 89 2 345 2 44 4 46 10 97 2 720 2 
403 2 47 2 2 2 156 2 636 2 160 2 467 2 105 2 510 2 56 2 55 2 57 4 163 6 304 6 517 4 417 2 18 4 360 2 314 4 171 2 427 2 692 2 566 2 648 2 650 2 483 2 270 2 128 2 129 4 225 2 704 2 757 2 437 2 657 2 439 2 571 2 379 2 712 2 442 4 444 8 234 4 236 8 279 4 665 8 142 4 81 2 392 12 671 2 672 2 673 2 454 2 43 2 397 2 503 8 89 2 90 2 345 2 44 4 46 10 97 2 720 2 
225 2 81 2 314 2 437 2 657 2 673 2 636 2 454 2 160 2 397 2 57 4 566 2 444 2 234 4 44 2 270 2 304 2 18 2 
403 2 0 2 2 2 156 2 636 2 160 2 467 2 510 2 56 2 55 2 57 4 163 6 304 4 517 4 417 2 18 4 360 2 314 4 171 2 427 2 692 2 566 2 650 2 483 2 270 2 128 2 225 2 704 2 757 2 437 2 657 2 439 2 571 2 379 2 442 4 712 2 444 6 234 4 236 4 279 4 665 4 142 4 668 2 81 2 392 12 671 2 672 2 673 2 454 2 43 2 397 2 503 6 89 2 90 2 345 2 44 4 46 6 97 2 720 2 
403 2 0 2 2 2 156 2 636 2 352 2 160 2 467 2 510 2 56 2 55 2 57 4 163 6 304 6 517 4 417 2 18 4 360 2 314 4 171 2 427 2 692 2 566 2 650 2 483 2 270 2 128 2 225 2 704 2 757 2 437 2 657 2 439 2 571 2 379 2 442 4 712 2 444 4 234 4 236 4 279 4 665 4 142 4 668 2 81 2 392 12 671 2 672 2 673 2 454 2 43 2 397 2 503 6 89 2 345 2 44 4 46 4 97 2 720 2 
403 2 0 2 2 2 156 2 636 2 160 2 467 2 510 2 56 2 55 2 57 4 163 6 304 6 517 4 417 2 18 4 360 2 314 4 171 2 427 2 692 2 566 2 648 2 650 2 483 2 270 2 128 2 225 2 704 2 757 2 437 2 657 2 439 2 571 2 379 2 442 4 712 2 444 6 234 4 236 4 279 4 665 8 142 4 668 2 81 2 392 12 671 2 672 2 673 2 454 2 43 2 397 2 503 6 89 2 345 2 44 4 46 6 97 2 720 2 
403 2 0 2 2 2 156 2 636 2 352 2 160 2 467 2 510 2 56 2 55 2 57 4 163 6 304 8 517 4 417 2 18 4 360 2 314 4 171 2 427 2 692 2 566 2 648 2 650 2 483 2 270 2 128 2 225 2 704 2 757 2 437 2 657 2 439 2 571 2 379 2 712 2 442 4 444 6 234 4 236 8 279 4 665 8 142 4 668 2 81 2 392 12 671 2 672 2 673 2 454 2 43 2 397 2 503 8 89 2 345 2 44 4 46 10 97 2 720 2 
403 2 0 2 2 2 156 2 636 2 160 2 467 2 510 2 56 2 55 2 57 4 163 6 304 6 517 4 417 2 18 4 360 2 314 4 171 2 427 2 692 2 566 2 648 2 650 2 483 2 270 2 128 2 225 2 704 2 757 2 437 2 657 2 439 2 571 2 379 2 442 4 712 2 444 6 234 4 236 8 279 4 665 8 142 4 668 2 81 2 392 12 671 2 672 2 673 2 454 2 43 2 397 2 503 6 89 2 345 2 44 4 46 10 97 2 720 2 
403 2 297 2 406 6 4 2 2 2 299 1 6 2 409 2 590 6 510 4 11 6 108 1 110 2 412 2 304 8 415 6 517 4 417 2 18 4 421 12 21 6 518 4 594 7 116 2 118 1 314 4 595 2 316 2 119 6 425 2 426 6 427 2 317 6 692 2 693 2 319 2 320 2 29 8 524 2 128 2 131 4 704 2 225 2 226 1 705 2 706 6 230 2 33 1 437 2 329 2 439 2 528 6 527 2 331 1 616 1 231 2 442 6 712 4 444 4 335 2 234 4 137 6 529 2 715 2 532 2 620 2 142 8 450 2 624 2 717 6 241 1 454 2 627 2 43 2 146 2 718 2 147 6 343 2 345 2 544 4 459 8 44 4 151 6 249 2 631 6 546 6 720 2 251 2 549 2 156 2 636 2 352 4 158 2 466 2 467 4 160 2 732 4 468 1 639 2 55 2 56 2 57 4 263 6 163 24 60 6 355 7 739 10 165 2 474 2 473 2 744 2 360 2 171 2 564 4 369 2 566 2 650 2 483 2 484 2 270 2 175 2 653 2 758 6 177 2 757 2 762 2 657 2 571 2 379 2 491 2 180 4 275 2 185 2 279 6 574 2 665 2 667 2 668 2 579 2 81 2 392 46 671 2 672 2 289 2 772 2 673 2 775 2 397 2 197 2 503 12 89 2 294 2 97 2 
403 2 297 2 406 6 4 2 2 2 6 2 409 2 590 6 510 4 11 6 110 2 412 2 304 8 682 2 415 6 517 4 417 2 18 4 421 12 21 6 518 4 116 2 595 2 314 4 316 2 119 6 425 4 426 6 427 2 317 6 692 2 693 2 319 2 320 2 29 8 524 2 128 2 131 4 704 2 225 2 705 2 706 6 230 2 437 2 329 2 439 2 528 6 527 2 231 2 617 2 442 6 712 4 444 8 335 2 234 4 137 6 529 2 715 2 532 2 620 2 142 8 450 2 624 2 717 6 454 2 627 2 43 2 146 2 718 2 147 6 343 2 345 2 544 4 459 8 44 4 46 2 151 6 249 2 631 6 546 6 720 2 251 2 549 2 156 2 636 2 158 2 466 2 467 4 160 2 732 4 639 2 55 2 56 2 57 4 263 6 163 24 60 6 739 10 165 2 474 2 473 2 744 2 360 2 171 2 564 4 369 2 648 4 566 2 650 2 483 2 484 2 270 2 175 2 653 2 758 6 177 2 757 2 762 2 657 2 571 2 379 2 491 2 180 4 275 2 185 2 279 6 574 2 665 6 667 2 668 2 579 2 81 2 392 46 286 2 671 2 672 2 289 2 772 2 673 2 775 2 397 2 197 2 503 12 89 2 294 2 97 2 
403 2 297 2 406 6 4 2 2 2 6 2 409 2 590 6 510 4 11 6 110 2 412 2 304 8 682 2 415 6 517 4 417 2 18 4 421 12 21 6 518 4 116 2 595 2 314 4 316 2 119 6 425 4 426 6 427 2 317 6 692 2 693 2 319 2 320 2 29 8 524 2 128 2 131 4 704 2 225 2 705 2 706 6 230 2 437 2 329 2 439 2 528 6 527 2 231 2 617 2 442 6 712 4 444 8 335 2 234 4 137 6 529 2 236 4 715 2 532 2 620 2 142 8 450 2 624 2 717 6 454 2 627 2 43 2 146 2 718 2 147 6 343 2 345 2 544 4 459 8 44 4 151 6 249 2 46 6 631 6 546 6 720 2 251 2 549 2 156 2 636 2 158 2 466 2 467 4 160 2 732 4 639 2 55 2 56 2 57 4 263 6 163 24 60 6 739 10 165 2 474 2 473 2 744 2 360 2 171 2 564 4 369 2 648 4 566 2 650 2 483 2 484 2 270 2 175 2 653 2 758 6 177 2 757 2 762 2 657 2 571 2 379 2 491 2 180 4 275 2 185 2 279 6 574 2 665 6 667 2 668 2 579 2 81 2 392 46 286 2 671 2 672 2 289 2 772 2 673 2 775 2 397 2 197 2 503 12 89 2 294 2 97 2 
403 2 297 2 406 6 4 2 2 2 6 2 409 2 590 6 510 4 11 6 110 2 412 2 304 8 682 2 415 6 517 4 417 2 18 4 421 10 21 6 518 4 116 2 595 2 314 4 316 2 119 8 425 4 426 6 427 2 317 6 692 2 693 2 319 2 320 2 29 12 524 2 223 2 128 2 131 4 704 2 225 2 705 2 706 6 230 2 437 2 329 2 439 2 528 6 527 2 231 2 617 2 442 6 712 4 444 8 335 2 234 4 137 6 529 2 236 4 715 2 532 2 620 4 142 8 624 2 144 2 717 6 454 2 627 2 43 2 146 2 718 2 457 2 147 8 343 2 544 4 459 8 44 4 151 6 249 2 46 4 631 6 546 6 720 2 721 2 251 2 549 2 636 2 158 2 466 2 467 4 160 2 732 6 639 2 55 2 56 2 57 4 263 6 163 22 60 6 739 8 165 2 474 4 473 2 744 2 360 2 171 2 564 4 369 2 648 4 566 2 650 2 483 2 484 2 270 2 175 2 653 2 758 6 177 2 757 2 762 2 657 2 571 2 379 2 491 2 180 4 275 2 185 2 279 6 574 4 665 6 667 2 668 2 579 2 81 2 392 44 286 2 671 2 289 2 772 2 673 2 288 2 775 2 397 2 197 2 503 12 89 2 294 2 203 2 97 2 
704 2 225 2 437 2 571 2 379 2 467 2 160 2 55 2 57 2 444 6 234 2 304 6 279 2 236 4 517 2 665 6 142 2 668 2 360 2 81 2 392 4 314 4 671 2 692 2 397 2 503 4 648 2 566 2 89 2 650 2 44 4 483 2 46 4 270 2 97 2 
2 2 590 6 510 4 304 6 517 2 417 2 421 4 116 2 314 4 595 2 119 6 316 2 121 2 427 2 692 2 693 2 320 2 29 8 131 4 132 2 225 2 704 2 437 2 439 2 527 2 37 2 231 2 232 2 712 4 442 6 444 6 234 2 532 2 620 3 142 2 450 2 623 3 43 2 146 2 147 6 539 2 44 4 249 2 46 2 467 2 160 2 732 4 56 2 55 2 57 2 163 24 739 2 165 2 473 2 474 3 360 2 171 2 266 2 564 2 648 2 566 2 650 2 483 2 270 2 72 2 653 2 757 2 177 2 762 2 179 2 571 2 379 2 491 2 180 4 275 2 279 2 574 3 665 6 667 2 668 2 579 2 81 2 497 2 392 28 671 2 397 2 503 4 89 2 97 2 
89 2 770 2 671 2 
89 2 770 2 671 2 
4 4 2 2 209 2 590 6 510 4 211 2 11 2 303 2 304 12 682 4 517 2 417 2 18 2 421 4 518 2 116 2 595 2 596 2 314 4 119 2 316 2 425 4 691 2 427 2 693 2 320 2 29 2 131 4 225 4 439 2 527 2 231 2 617 4 442 6 712 4 444 12 234 2 530 2 236 4 532 2 142 4 147 2 345 2 544 2 44 4 249 2 46 6 720 2 352 4 730 4 467 4 56 2 57 2 163 16 164 2 739 2 165 2 473 2 474 2 171 2 479 4 564 6 648 4 68 2 483 2 270 2 373 4 653 2 759 2 177 2 757 2 760 2 762 2 657 2 379 2 491 2 180 4 275 2 279 4 665 6 667 2 579 2 81 2 392 24 770 2 286 4 671 4 673 2 194 2 503 16 88 2 89 2 90 4 401 2 
421 2 759 2 518 2 392 4 427 2 454 2 6 2 209 2 736 2 11 2 163 2 321 2 335 2 530 2 739 2 782 2 356 2 
403 2 4 4 2 2 209 2 590 6 510 4 211 2 11 2 303 4 413 2 304 12 682 4 517 2 417 2 18 4 310 2 421 2 116 2 595 2 596 2 314 4 119 2 316 2 425 4 691 2 427 2 693 2 521 2 320 2 29 2 702 2 131 4 225 4 439 2 527 2 710 2 231 2 617 4 442 6 712 4 444 12 234 2 530 2 236 4 715 2 532 2 142 4 718 2 147 2 544 2 44 4 249 2 46 6 720 2 156 4 352 4 730 4 467 4 56 2 57 2 163 16 165 2 473 2 474 4 747 2 171 2 479 4 564 6 648 4 483 2 484 2 270 2 373 4 653 2 759 2 177 2 757 2 760 2 762 2 657 2 379 2 491 2 180 4 275 2 765 2 279 4 188 2 665 6 667 2 579 2 81 2 392 24 770 2 286 4 671 6 672 2 673 2 194 2 503 16 88 2 89 4 90 4 401 2 
403 2 4 4 2 2 209 2 590 6 301 2 510 4 211 2 11 2 303 2 413 2 304 12 682 4 517 2 417 2 18 4 421 4 518 2 116 2 595 2 596 2 314 4 119 2 316 2 425 4 691 2 427 2 693 2 521 2 320 2 29 2 131 4 225 4 135 2 439 2 527 2 231 2 617 4 442 6 712 4 444 12 234 2 530 2 236 4 715 2 532 2 237 2 142 4 718 2 147 2 345 2 544 2 44 4 249 2 46 6 720 2 156 4 157 2 352 4 730 4 467 4 56 2 57 2 163 16 739 2 644 2 165 2 473 2 474 2 171 2 479 4 564 6 648 4 483 2 484 2 270 2 373 4 653 2 759 2 177 2 757 2 760 2 762 2 657 2 379 2 491 2 180 4 275 2 279 4 188 2 665 6 667 2 579 2 81 2 392 24 770 2 286 4 671 6 672 2 673 2 194 2 503 16 88 2 89 4 90 4 401 2 
686 2 464 2 392 2 208 2 508 2 554 2 365 2 274 2 647 2 642 2 306 2 577 2 
74 2 613 2 732 2 163 2 332 2 661 4 713 2 412 6 471 1 414 3 574 3 620 3 474 3 392 2 690 2 119 2 535 2 146 2 290 2 147 2 150 2 609 2 755 2 432 2 29 2 
74 2 613 2 732 2 163 2 332 2 661 4 713 2 412 6 414 2 574 2 620 2 474 2 392 2 690 2 119 2 535 2 146 2 290 2 147 2 150 2 609 2 755 2 432 2 29 2 
74 2 613 2 732 2 163 2 332 2 661 4 713 2 412 6 414 2 574 2 620 2 474 2 392 2 690 2 119 2 535 2 146 2 290 2 147 2 150 2 609 2 755 2 432 2 29 2 
434 2 134 2 3 2 570 2 261 2 182 2 441 2 410 4 163 4 184 2 556 5 276 4 662 2 446 2 740 4 620 3 474 3 390 3 115 2 422 4 685 2 769 4 392 10 315 2 287 2 600 2 218 3 603 2 146 2 366 2 541 2 150 2 69 6 292 4 200 3 371 2 173 2 29 2 98 4 756 2 
434 2 134 2 3 2 570 2 261 2 182 2 441 2 410 4 163 4 184 2 556 4 276 4 662 2 446 2 740 4 620 2 474 2 390 2 115 2 422 4 685 2 769 4 392 10 315 2 287 2 600 2 218 2 603 2 146 2 366 2 629 4 541 2 150 2 69 6 292 4 200 2 371 2 173 2 29 2 98 4 756 2 
434 2 134 2 3 2 570 2 261 2 182 2 441 2 410 4 163 4 184 2 556 4 276 4 662 2 446 2 740 4 620 2 474 2 390 2 115 2 422 4 685 2 769 4 392 10 315 2 287 2 600 2 218 2 603 2 146 2 366 2 629 4 541 2 150 2 69 6 292 4 200 2 371 2 173 2 29 2 98 4 756 2 
434 2 134 2 3 2 570 2 261 2 182 2 441 2 410 4 163 4 184 2 556 4 276 4 662 2 446 2 740 4 620 2 474 2 390 2 115 2 422 4 685 2 769 4 392 10 315 2 287 2 600 2 218 2 603 2 146 2 366 2 629 4 541 2 150 2 69 6 292 4 200 2 371 2 173 2 29 2 98 4 756 2 
434 2 134 2 3 2 570 2 261 2 182 2 441 2 410 4 163 4 184 2 556 4 276 4 662 2 446 2 740 4 620 2 474 2 390 2 115 2 422 4 685 2 769 4 392 10 315 2 287 2 600 2 218 2 603 2 146 2 366 2 629 4 541 2 150 2 69 6 292 4 200 2 371 2 173 2 29 2 98 4 756 2 
295 2 239 2 525 2 246 2 523 2 28 2 447 2 
10 2 389 2 591 2 114 2 295 2 651 2 
548 2 655 2 435 2 322 2 2 2 727 2 708 2 12 2 163 8 445 2 514 2 137 2 307 2 575 1 619 2 339 1 392 10 670 1 563 1 537 2 244 2 780 2 201 2 652 2 202 1 222 2 
507 2 351 2 75 2 53 2 261 6 182 6 107 2 441 2 163 6 556 15 184 6 446 6 112 2 645 2 666 2 422 12 685 6 391 4 392 6 534 2 629 5 220 4 460 2 292 4 173 6 586 2 73 2 756 6 
283 2 462 2 192 2 723 4 392 1 658 2 711 2 163 1 410 2 149 1 522 2 543 7 630 2 199 2 172 2 567 2 740 2 98 2 
283 2 462 2 192 4 723 4 658 4 711 4 410 2 522 2 543 6 630 2 199 2 172 2 567 2 740 2 98 2 
283 2 462 6 192 8 723 4 392 1 658 8 711 8 163 1 410 2 149 1 522 2 543 10 630 2 199 2 172 2 567 8 740 2 98 2 
283 2 192 2 723 2 658 2 711 2 410 2 522 2 543 2 630 2 199 2 172 2 740 2 98 2 
402 1 506 2 205 4 207 2 590 32 592 1 683 2 17 2 684 2 22 2 23 3 122 2 430 2 25 4 605 2 606 2 607 2 320 6 126 2 27 2 127 2 700 4 610 2 131 18 323 2 526 2 707 2 527 4 233 4 39 4 337 2 336 2 238 2 143 2 625 1 536 2 242 5 628 2 243 2 347 2 633 2 724 2 725 2 254 1 553 14 729 2 163 34 353 2 354 2 643 2 559 2 362 2 363 2 478 2 561 4 480 2 65 2 753 2 370 2 376 2 177 4 762 4 180 16 382 2 572 2 573 2 492 4 280 4 664 2 494 2 80 2 579 6 284 1 392 38 771 2 499 2 87 4 502 2 291 2 93 4 677 2 585 2 
131 6 273 2 177 2 324 2 101 2 326 2 51 2 553 2 35 2 590 10 180 6 555 2 163 18 233 2 353 2 683 2 238 2 579 2 143 2 625 2 392 18 362 2 86 2 122 2 561 2 342 2 243 2 87 2 25 10 753 2 581 2 320 2 698 2 400 2 347 2 677 2 585 2 610 2 
506 2 205 6 207 2 590 40 681 2 411 2 111 2 683 2 308 8 684 2 22 2 122 2 430 2 25 14 605 2 606 2 607 2 320 4 27 2 127 2 700 2 131 20 326 2 438 2 707 2 527 6 233 4 39 2 336 2 238 2 451 2 533 6 242 6 628 2 243 2 542 2 633 2 348 2 724 2 726 2 254 2 553 10 255 2 729 2 163 40 353 2 643 2 559 2 362 2 363 2 478 2 561 4 751 6 65 4 482 2 753 2 370 2 71 6 374 2 177 2 656 2 762 6 180 18 572 4 492 6 764 2 573 2 277 2 280 6 766 2 494 2 80 2 579 4 193 8 392 44 285 8 771 2 87 4 502 2 92 2 93 4 291 2 585 2 
402 2 49 4 254 6 552 2 553 8 590 38 513 2 163 26 353 2 354 2 683 2 17 4 646 2 362 2 364 2 23 2 363 2 122 2 561 6 25 14 753 2 126 4 320 2 127 2 610 4 376 2 131 14 323 10 177 2 326 2 762 10 527 10 180 14 382 2 572 2 233 6 492 2 663 2 39 10 337 4 338 2 238 2 191 2 579 2 284 2 625 2 392 28 771 2 536 6 242 2 243 2 87 6 540 2 582 2 583 4 584 2 291 2 93 2 677 4 347 4 585 2 349 2 
161 2 

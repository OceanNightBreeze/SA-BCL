#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 499 811 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (333,358,370,420,628) (333,358,370,420,628) (333,358,370,420,628) 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 768 380 
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 768 380 316 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 459 459 788 788 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 228 228 64 64 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (361,662) (516,770) 328 199 610 536 547 439 667 (67,590) 324 (120,190) (67,590) 789 (120,190) 304 405 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.ArrayIndexOutOfBoundsException 598 598 467 (394,734) (27,481) (27,481) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.ArrayIndexOutOfBoundsException 598 598 467 (394,734) (27,481) (27,481) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.ArrayIndexOutOfBoundsException 598 598 467 (394,734) (27,481) (27,481) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 467 (394,734) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 467 (394,734) (394,734) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 467 (394,734) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 595 602 267 466 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 278 532 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 642 693 214 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 642 693 214 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 642 693 214 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 642 693 214 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfo:new_ppt()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3_1()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:negate(I)I
daikon.Quant:setEqual([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String; | RETURN | 12847 | return null
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLTE([II)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap:size()I
daikon.Quant:eq(JJ)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:isPointer()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.Node:Node()V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptName:isEnterPoint()Z
daikon.Quant:noDups([I)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:subsetOf([D[D)Z
daikon.PptSlice0:arity()I
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:jj_3R_133()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_56()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.ProglangType:dimensions()I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | CONSTANT | 54150 | 0 -> -1
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:gt(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.ArraysMDE:sum([D)D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_58()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE:gcd(JJ)J
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | STATEMENT | 10508 | stmt -> ;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
jtb.JavaCharStream:getEndLine()I
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_48()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.ProglangType:base()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.MathMDE:gcd([I)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
jtb.JavaCharStream:getBeginColumn()I
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I | CONDITION | 13875 | if (x) -> if (!x)
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | ASSIGN | 35390 | = null
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Ppt:Ppt()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eq(FF)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_3R_134()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:subsetOf([B[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:logOn()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:union([I[I)[I
daikon.ProglangType:isFloat()Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaCharStream:backup(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:memberOf(J[J)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfo:isPrestate()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_50()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.Quant:eltsGT([II)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_163()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:lte(II)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.Constant:Constant(I)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.MathMDE:gcd(II)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eq(DD)Z
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:intersection([I[I)[I
daikon.Quant:eltsLT([II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_57()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([D)[D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I | ASSIGN | 23606 | = null
daikon.inv.Invariant:getConfidence()D
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:isMissing(I)Z
daikon.ProglangType:isArray()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 279238 | = null
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5096 | = null
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfo:isDerived()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.RootNode:RootNode()V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfo:relate_var()V
daikon.PptSlice1:arity()I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltsNotEqual([II)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:subsetOf([D[F)Z
daikon.ModBitTracker:split(I)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.PptSlice2:arity()I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:max([I)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4963 | 78 -> 77
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:lt(II)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern:intern([J)[J
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern:intern([I)[I
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_47()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(II)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.MathMDE:modulus([I)[I
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.ProglangType:isScalar()Z
daikon.inv.Invariants:Invariants()V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:logOn()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:min([I)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z | OPERATOR | 176785 | + -> >>>
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14759 | 1 -> -1
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:lexGT([I[I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
575 2 720 2 94 2 749 2 508 6 666 2 509 2 415 2 173 2 75 2 77 2 98 2 50 2 327 2 708 2 407 2 388 4 767 4 335 2 796 2 600 2 656 2 63 2 
575 4 720 5 23 4 24 2 645 2 684 4 407 4 666 8 508 14 509 4 805 2 388 12 219 6 335 8 75 4 541 6 656 8 
38 2 798 8 113 2 773 2 578 2 6 2 633 2 611 2 144 6 687 2 668 2 689 6 806 4 752 2 245 2 691 2 692 2 377 2 295 2 471 2 497 4 543 2 276 2 227 4 330 34 451 10 429 2 546 4 764 2 28 2 305 4 234 2 
271 2 299 2 659 2 449 2 413 2 499 2 739 2 478 2 811 2 755 2 209 2 
798 2 325 2 643 2 272 2 661 2 276 4 579 2 180 2 663 2 687 2 169 2 783 2 
575 16 435 4 393 4 720 22 800 2 801 8 530 4 662 4 558 4 684 4 666 32 508 53 509 16 145 2 415 2 688 4 43 2 219 6 75 16 175 2 195 4 541 6 23 4 624 6 179 6 331 2 54 6 708 4 407 16 388 48 567 2 767 6 335 32 361 4 409 2 207 6 523 6 656 32 63 18 
798 2 668 2 689 2 
623 2 412 2 139 22 355 10 302 2 676 2 664 2 192 2 44 2 432 2 754 2 235 2 30 2 671 2 
359 2 326 2 193 2 361 2 441 2 234 2 662 2 450 4 42 2 
0 2 240 2 548 6 460 6 586 2 448 2 107 2 598 2 35 2 475 6 707 2 
427 2 82 4 662 2 104 2 251 6 178 6 252 2 406 4 204 2 389 6 361 2 344 2 589 6 
575 10 458 4 577 2 720 12 68 2 662 6 533 2 508 28 666 16 415 4 509 10 688 6 75 10 175 2 469 8 24 4 25 4 81 2 545 8 708 6 407 10 388 26 767 10 549 2 335 16 361 6 207 8 656 16 132 2 63 8 
818 6 133 4 
659 2 
629 2 
257 2 
516 2 361 4 770 2 
370 2 66 1 1 2 314 2 553 2 662 20 556 2 376 1 171 2 71 2 420 2 619 2 16 2 76 2 383 4 470 2 423 2 176 1 281 2 237 2 337 2 189 2 92 2 289 6 486 2 143 2 243 6 42 2 582 2 808 2 296 2 351 4 100 2 594 2 249 2 762 2 201 1 358 2 763 4 500 2 105 2 649 2 106 2 361 22 109 2 504 2 367 4 
603 4 112 2 604 2 213 10 315 2 7 12 9 2 726 2 11 2 613 2 418 2 419 2 14 2 323 2 322 14 222 12 512 2 513 2 422 10 119 2 223 14 224 2 122 2 733 44 426 2 225 14 625 8 332 10 127 14 129 2 524 8 37 44 137 4 748 6 141 2 140 2 438 2 440 44 753 2 442 2 352 4 542 2 758 2 759 2 250 2 156 2 158 4 766 14 364 4 653 2 62 2 258 14 165 2 462 10 552 2 554 14 778 8 779 2 562 2 468 2 74 4 564 4 381 2 785 2 385 2 177 32 477 8 792 2 679 14 181 6 183 2 184 10 681 2 483 18 576 2 287 4 581 2 291 2 588 2 402 2 493 2 813 2 297 2 298 14 300 18 102 14 403 10 301 2 706 2 705 6 202 14 710 6 713 2 819 8 503 2 208 2 
798 2 458 2 479 2 729 2 339 1 162 2 5 2 131 2 
29 2 729 2 5 2 
70 2 729 2 5 2 
697 2 437 2 18 2 
729 2 5 2 
697 2 320 2 
627 2 729 2 
697 2 283 2 18 2 
13 2 742 2 18 2 
164 2 606 2 18 2 
443 2 736 2 18 2 
196 2 685 2 18 2 
697 2 570 2 
729 2 69 2 
591 2 13 2 
164 2 155 2 
443 2 795 2 
334 2 685 2 
697 2 665 2 
618 2 685 2 
416 2 443 2 
164 2 777 2 
13 2 597 2 
697 2 283 2 188 2 18 2 
697 2 283 2 703 2 188 2 18 2 
697 2 277 2 18 2 
697 2 73 2 18 2 
354 2 397 2 398 2 290 2 
461 2 464 2 472 4 139 6 404 2 790 2 431 2 303 2 253 4 637 2 727 2 408 2 293 2 108 2 539 2 346 2 78 2 79 2 
172 2 18 2 
729 2 174 2 18 2 
729 2 386 2 
768 2 380 2 
768 2 316 2 380 2 
798 2 458 2 729 2 700 2 162 2 5 2 
96 2 374 2 
798 2 458 2 162 2 229 2 
443 2 430 2 
292 2 685 2 
13 2 480 2 
164 2 55 2 
164 2 685 2 719 2 
164 2 248 2 685 2 
164 2 685 2 816 2 
164 2 48 2 685 2 
798 2 580 2 694 2 496 2 651 6 162 2 682 2 
697 2 88 2 
296 2 
1 2 314 2 722 2 218 2 619 2 16 6 620 2 732 2 622 2 423 2 424 2 21 4 233 2 32 2 433 2 238 2 239 2 337 6 630 2 527 2 138 2 243 4 143 2 42 2 341 2 146 2 147 2 540 2 351 4 152 2 757 2 154 2 761 5 762 6 763 4 453 3 160 2 765 4 57 2 361 22 550 2 367 4 652 2 459 2 553 2 662 22 556 2 171 2 71 2 561 2 265 2 76 2 383 4 470 2 787 2 788 2 281 2 182 2 90 2 189 2 799 3 289 6 486 2 582 2 814 3 100 2 101 2 594 2 105 2 500 2 106 2 109 2 306 2 
1 2 314 2 722 2 218 2 619 2 16 6 620 2 732 2 622 2 423 2 424 2 21 4 228 2 233 2 32 2 237 2 433 2 238 2 239 2 337 6 630 2 527 2 138 2 243 6 143 2 42 2 341 2 146 2 147 2 639 2 540 2 351 4 152 2 757 2 154 2 761 4 762 6 763 4 453 2 160 2 765 4 361 22 550 2 367 4 652 2 64 2 553 2 662 22 556 2 171 2 71 2 561 2 265 2 76 2 383 4 470 2 787 2 281 2 182 2 90 2 189 2 799 2 92 2 289 6 486 2 582 2 814 2 100 2 101 2 594 2 105 2 500 2 106 2 109 2 306 2 
476 2 
4 2 704 2 
605 4 166 2 67 2 460 6 553 2 215 2 662 6 8 2 614 4 467 2 171 2 615 2 71 2 321 2 221 4 784 2 470 2 20 2 120 2 789 2 737 2 475 6 27 2 87 8 279 4 186 2 481 2 236 2 572 2 35 4 130 8 746 2 189 2 190 2 394 2 531 2 93 4 289 4 534 2 95 2 586 4 807 2 587 2 350 2 47 2 698 2 100 2 544 2 405 2 707 2 763 2 304 2 548 6 596 10 361 12 363 4 109 2 206 2 598 2 367 2 
605 4 166 2 67 2 460 8 553 2 215 2 662 6 8 2 614 4 467 2 171 2 615 2 71 2 321 2 221 4 784 2 470 2 20 2 120 2 789 2 737 2 475 8 27 2 87 8 279 4 186 2 481 2 236 2 572 2 35 4 130 8 746 2 189 2 240 2 190 2 394 2 531 2 93 4 289 4 534 2 583 2 586 4 807 2 587 2 349 4 47 2 698 2 100 2 544 2 405 2 707 2 763 2 304 2 56 2 596 10 548 6 361 12 363 4 109 2 206 2 598 2 367 2 
460 2 190 2 394 2 93 4 405 2 737 2 304 2 27 2 614 4 615 2 548 2 586 2 587 2 186 2 481 2 221 2 236 2 35 2 
605 4 166 2 67 2 460 6 553 2 215 2 662 6 8 2 614 4 467 2 171 2 615 2 71 2 321 2 221 4 784 2 470 2 20 2 120 2 789 2 737 2 475 6 27 2 87 4 279 4 186 2 481 2 236 2 572 2 35 4 130 4 746 2 189 2 240 2 190 2 394 2 531 2 93 4 289 4 534 2 95 2 586 4 807 2 587 2 350 2 47 2 698 2 100 2 544 2 405 2 763 2 304 2 548 4 596 6 361 12 363 4 109 2 206 2 598 2 367 2 
605 4 166 2 67 2 460 4 553 2 215 2 662 6 8 2 614 4 467 2 171 2 615 2 71 2 321 2 221 4 784 2 470 2 20 2 120 2 789 2 737 2 475 6 27 2 87 4 279 4 186 2 481 2 236 2 572 2 35 4 130 4 746 2 189 2 190 2 394 2 531 2 93 4 289 4 534 2 95 2 586 4 807 2 587 2 350 2 47 2 698 2 100 2 544 2 448 2 405 2 763 2 304 2 548 6 596 6 361 12 363 4 109 2 206 2 598 2 367 2 
605 4 166 2 67 2 460 6 553 2 215 2 662 6 8 2 614 4 467 2 171 2 615 2 71 2 321 2 221 4 784 2 470 2 20 2 120 2 789 2 737 2 475 6 27 2 87 8 279 4 186 2 481 2 236 2 572 2 35 4 130 4 746 2 189 2 190 2 394 2 531 2 93 4 289 4 534 2 95 2 586 4 807 2 587 2 350 2 47 2 698 2 100 2 544 2 405 2 707 2 763 2 304 2 548 6 596 6 361 12 363 4 109 2 206 2 598 2 367 2 
605 4 166 2 67 2 460 6 553 2 215 2 662 6 8 2 614 4 467 2 171 2 615 2 71 2 321 2 221 4 784 2 470 2 20 2 120 2 789 2 737 2 475 8 27 2 87 8 279 4 186 2 481 2 236 2 572 2 35 4 130 8 746 2 189 2 190 2 394 2 531 2 93 4 289 4 534 2 95 2 586 4 807 2 587 2 350 2 47 2 698 2 100 2 544 2 448 2 405 2 707 2 763 2 304 2 548 8 596 10 361 12 363 4 109 2 206 2 598 2 367 2 
605 4 166 2 67 2 460 6 553 2 215 2 662 6 8 2 614 4 467 2 171 2 615 2 71 2 321 2 221 4 784 2 470 2 20 2 120 2 789 2 737 2 475 6 27 2 87 8 279 4 186 2 481 2 236 2 572 2 35 4 130 8 746 2 189 2 190 2 394 2 531 2 93 4 289 4 534 2 95 2 586 4 807 2 587 2 350 2 47 2 698 2 100 2 544 2 405 2 707 2 763 2 304 2 548 6 596 10 361 12 363 4 109 2 206 2 598 2 367 2 
605 6 1 2 313 2 314 4 215 2 610 2 8 2 614 4 12 4 615 2 321 2 619 2 15 2 221 4 16 6 620 2 621 2 514 2 324 2 20 2 120 2 423 2 516 2 21 2 328 2 737 2 27 2 743 2 32 2 236 2 237 2 35 4 746 2 337 8 629 2 630 2 527 2 531 2 439 2 243 6 143 2 634 2 42 2 534 2 536 2 347 2 351 4 47 2 247 2 448 4 544 2 356 2 761 2 762 6 763 4 547 2 159 2 453 2 765 4 548 8 550 2 361 32 363 8 456 2 652 2 367 4 257 2 166 2 658 4 67 2 460 4 553 2 662 20 556 2 667 2 467 2 171 2 71 2 781 2 670 2 76 2 784 2 383 4 470 2 80 2 275 2 789 2 475 12 279 4 87 2 568 2 281 2 182 2 186 2 481 2 572 2 189 2 799 2 190 2 394 2 288 2 92 2 93 4 289 6 486 2 582 2 95 2 686 2 399 2 585 2 586 4 587 2 590 2 698 2 100 2 199 2 594 2 405 2 105 2 500 2 304 2 106 2 109 2 598 4 
460 6 215 2 394 2 531 2 93 2 95 2 534 2 467 2 614 2 615 2 321 2 586 4 784 2 20 2 47 2 698 2 424 2 544 2 475 4 707 2 737 2 279 2 87 6 27 2 160 2 548 6 361 4 363 2 186 2 481 2 236 2 598 4 35 4 746 2 239 2 
460 6 215 2 394 2 531 2 93 2 95 2 534 2 467 2 614 2 615 2 321 2 586 4 784 2 20 2 47 2 698 2 424 2 544 2 475 4 707 2 737 2 279 2 87 6 27 2 160 2 596 4 548 6 361 4 363 2 186 2 481 2 236 2 598 4 35 4 130 4 746 2 239 2 
460 6 215 2 394 2 531 2 93 2 95 2 534 2 467 2 614 2 615 2 321 2 586 4 784 2 20 2 47 2 698 2 424 2 544 2 475 4 707 2 737 2 279 2 87 6 27 2 160 2 596 4 548 6 361 4 363 2 186 2 481 2 236 2 598 4 35 4 130 4 746 2 239 2 
605 2 460 6 215 2 394 2 531 2 93 2 95 2 534 2 467 2 614 2 615 2 321 2 586 4 784 2 20 2 47 2 698 2 544 2 475 4 707 2 737 2 279 2 87 6 27 2 596 4 548 6 361 4 363 2 186 2 481 2 236 2 598 2 35 4 130 4 746 2 
605 2 1 2 314 4 215 2 614 2 615 2 321 2 619 2 16 6 620 2 20 2 423 2 517 3 737 2 333 2 741 2 27 2 236 2 237 2 35 4 746 2 628 2 337 8 630 2 531 2 243 6 143 2 42 2 534 2 45 2 347 2 351 4 47 2 49 2 544 2 761 3 762 6 763 4 254 2 453 3 765 4 548 6 361 28 363 2 367 4 652 2 460 6 553 2 662 24 556 2 467 2 171 2 71 2 781 2 76 2 784 2 383 4 470 2 475 4 279 2 87 6 566 2 281 2 182 2 186 2 481 2 572 2 189 2 799 3 394 2 92 2 93 2 289 6 486 2 95 2 582 2 586 4 809 2 296 2 698 2 100 2 594 2 707 2 105 2 500 2 596 2 106 2 109 2 598 2 
232 2 531 2 534 2 
232 2 531 2 534 2 
411 2 1 2 314 2 614 2 615 2 619 2 16 2 620 2 423 2 424 2 329 2 737 2 237 2 35 2 130 2 239 2 36 2 337 2 630 2 41 2 531 2 243 6 143 2 42 2 534 2 640 2 351 4 246 2 47 2 154 2 761 2 762 2 763 4 160 2 548 4 361 18 363 2 367 4 460 4 553 2 662 14 556 2 171 2 467 2 71 2 76 2 383 4 470 2 475 4 87 6 279 2 281 2 182 2 189 2 394 2 92 2 93 2 289 6 486 2 582 2 586 2 494 2 100 2 594 2 707 2 105 2 500 2 596 2 106 2 109 2 598 2 
314 2 4 2 262 2 662 2 724 2 612 2 452 2 547 2 170 2 690 2 361 4 781 2 587 2 109 2 58 2 782 2 285 2 
411 2 1 2 314 2 614 2 615 2 619 2 16 2 620 2 423 2 424 2 734 2 329 4 737 2 237 2 35 2 130 2 239 2 36 2 337 2 630 2 531 2 41 2 243 6 143 2 42 2 534 2 640 2 351 4 246 2 47 2 153 2 154 2 761 4 762 2 763 4 160 2 548 4 361 18 363 2 367 4 460 4 553 2 662 14 556 2 171 2 467 2 71 2 76 2 383 4 470 2 475 4 87 6 279 2 281 2 182 2 189 2 394 2 92 2 93 2 289 6 486 2 582 2 586 2 494 2 100 2 594 2 707 2 105 2 500 2 596 2 106 2 109 2 598 2 
411 2 1 2 314 2 614 2 615 2 619 2 16 2 620 2 423 2 424 2 329 2 737 2 237 2 35 2 130 2 239 2 36 2 337 2 630 2 41 2 531 2 243 6 143 2 42 2 534 2 640 2 351 4 246 2 47 2 154 2 761 2 762 2 763 4 160 2 548 4 361 18 363 2 367 4 460 4 553 2 662 14 556 2 171 2 467 2 71 2 76 2 383 4 470 2 475 4 87 6 279 2 281 2 182 2 189 2 394 2 92 2 93 2 289 6 486 2 582 2 586 2 494 2 100 2 594 2 707 2 105 2 500 2 596 2 106 2 109 2 598 2 
1 2 211 2 212 6 607 2 608 4 414 2 417 2 616 2 219 6 617 2 220 2 619 2 15 2 16 14 620 2 17 2 622 2 19 4 423 2 21 62 425 3 226 2 428 2 227 2 26 2 231 4 233 2 32 46 31 2 237 6 33 2 34 2 238 2 434 9 630 2 39 2 436 4 40 2 632 4 631 2 241 4 243 14 634 2 42 4 635 2 636 10 244 2 444 2 46 2 445 8 446 8 447 10 644 8 646 4 51 2 647 3 52 2 53 2 254 2 650 4 453 16 255 2 454 2 256 12 60 4 59 18 61 10 654 4 652 2 457 2 655 2 656 8 63 4 65 8 657 2 259 4 260 4 261 12 662 32 465 1 263 2 466 2 666 8 71 2 264 2 72 3 669 2 265 18 670 2 266 4 75 4 76 2 267 2 268 4 270 2 470 2 80 4 673 24 274 4 473 4 675 2 83 4 85 2 86 2 281 4 678 2 282 2 680 2 89 16 284 2 482 2 484 8 286 2 91 2 485 2 92 6 683 4 289 6 684 4 688 4 488 2 490 4 491 18 695 2 97 4 492 2 696 28 99 2 100 2 699 2 101 2 498 2 702 4 701 2 103 2 500 4 709 20 501 4 712 4 502 2 109 2 306 2 308 4 110 2 715 2 309 4 505 4 111 2 717 8 506 2 718 2 310 18 312 8 311 2 507 2 720 6 313 2 314 2 317 4 318 4 114 8 319 2 723 3 508 16 116 6 725 6 509 4 117 2 510 8 728 2 118 2 730 2 121 2 515 2 517 2 518 12 123 2 124 2 735 4 331 2 740 2 741 2 126 2 335 8 521 2 128 2 522 3 744 2 525 2 134 2 135 2 526 4 338 2 747 64 337 36 136 10 527 4 138 2 142 2 143 2 750 2 146 2 147 2 751 2 342 12 343 2 537 2 148 4 538 4 149 24 150 10 151 8 348 4 351 6 756 2 353 4 760 2 761 25 357 2 762 14 157 6 763 4 765 12 360 4 550 24 361 52 362 2 551 2 161 2 367 4 769 4 369 2 368 2 771 2 371 4 772 2 372 4 553 2 775 2 776 4 556 4 557 2 559 2 167 10 168 4 171 2 780 2 560 2 378 2 563 2 383 6 384 2 786 2 387 12 791 2 566 2 388 12 793 2 794 2 185 2 187 2 390 8 571 2 797 2 574 14 392 4 189 2 575 4 799 25 800 4 395 4 802 2 396 4 803 2 191 2 582 4 804 2 399 2 584 2 585 2 400 26 194 2 809 2 401 4 810 4 812 2 814 2 815 10 197 36 592 8 198 2 593 32 200 2 595 2 817 2 407 4 203 50 410 8 820 9 821 2 207 6 599 2 601 2 822 4 602 2 
337 2 799 2 662 2 115 2 636 2 16 2 378 2 150 2 444 2 46 2 815 4 647 2 761 2 762 2 453 2 765 2 794 2 361 2 362 2 680 2 32 6 652 2 655 2 368 2 
337 2 799 2 662 2 115 2 636 2 16 2 378 2 150 2 444 2 46 2 815 4 647 2 761 2 762 2 453 2 765 2 794 2 361 2 362 2 680 2 32 6 652 2 655 2 368 2 
337 2 799 2 662 2 115 2 636 2 16 2 378 2 150 2 444 2 46 2 815 4 647 2 761 2 762 2 453 2 765 2 794 2 361 2 362 2 680 2 32 6 652 2 655 2 368 2 
434 3 337 2 575 2 136 4 799 3 529 2 609 2 662 4 375 2 167 4 217 2 508 4 666 2 535 4 509 2 688 2 584 2 148 2 75 2 731 2 444 2 197 6 447 4 761 3 407 2 677 2 388 4 711 2 335 2 361 10 820 3 455 2 205 3 365 2 207 4 61 4 505 2 652 2 656 2 574 2 
720 2 609 2 662 4 375 2 167 4 666 2 508 4 217 2 509 2 75 2 175 2 731 2 677 2 388 4 335 2 574 2 337 2 434 2 575 2 799 2 136 4 529 2 535 4 688 2 584 2 148 2 444 2 197 6 447 4 761 2 407 2 711 2 361 10 455 2 820 2 365 2 205 2 207 4 505 2 61 4 652 2 656 2 63 2 
720 2 609 2 662 4 375 2 167 4 666 2 508 4 217 2 509 2 75 2 175 2 731 2 677 2 388 4 335 2 574 2 337 2 434 2 575 2 799 2 136 4 529 2 535 4 688 2 584 2 148 2 444 2 197 6 447 4 761 2 407 2 711 2 361 10 455 2 820 2 365 2 205 2 207 4 505 2 61 4 652 2 656 2 63 2 
720 2 609 2 662 4 375 2 167 4 666 2 508 4 217 2 509 2 75 2 175 2 731 2 677 2 388 4 335 2 574 2 337 2 434 2 575 2 799 2 136 4 529 2 535 4 688 2 584 2 148 2 444 2 197 6 447 4 761 2 407 2 711 2 361 10 455 2 820 2 365 2 205 2 207 4 505 2 61 4 652 2 656 2 63 2 
720 4 609 2 662 4 375 2 167 4 666 2 508 4 217 2 509 2 75 2 175 4 731 2 677 2 388 4 335 2 574 2 337 2 434 2 575 2 799 2 136 4 529 2 535 4 688 2 584 2 148 2 444 2 197 6 447 4 761 2 407 2 711 2 361 10 455 2 820 2 365 2 205 2 207 4 505 2 61 4 652 2 656 2 63 4 
487 2 774 2 216 2 278 2 532 2 
487 2 273 2 265 2 474 2 366 2 421 2 641 2 
463 2 660 2 553 2 662 8 633 1 555 2 638 2 345 2 294 2 269 2 514 2 495 1 672 2 22 2 471 1 125 1 519 2 565 1 738 2 648 2 626 2 361 10 307 2 714 2 745 2 573 2 
210 2 575 6 720 5 528 2 801 2 373 2 632 2 662 6 142 2 684 2 508 15 666 6 509 6 688 2 219 4 75 6 195 2 175 2 786 2 230 2 407 6 84 2 388 12 335 6 361 6 409 1 207 4 523 4 716 2 656 6 63 3 
391 2 136 2 2 2 447 2 721 3 340 2 242 2 10 2 280 2 520 2 489 2 569 2 61 2 
391 2 136 2 2 2 447 2 721 6 340 2 674 2 662 1 242 2 10 2 280 2 520 2 489 4 361 1 569 2 511 1 61 2 336 2 
391 4 136 2 2 2 447 2 721 6 674 2 340 2 242 2 10 4 280 2 520 4 489 4 569 2 61 2 336 2 
391 8 136 2 2 2 447 2 721 10 674 8 340 2 662 1 242 2 10 8 280 2 520 8 489 4 361 1 569 2 511 1 61 2 336 6 
214 2 662 4 556 2 379 1 382 2 383 2 281 2 237 2 92 2 243 4 582 2 693 2 351 2 642 2 361 4 163 1 
281 2 642 2 361 4 693 2 214 2 662 4 556 2 243 2 351 2 383 2 382 2 582 2 
642 2 214 2 92 1 662 4 556 2 243 3 582 2 281 2 361 4 693 2 237 1 382 2 383 2 351 2 
642 2 214 2 92 2 662 4 556 2 243 4 582 2 281 2 361 4 693 2 237 2 382 2 383 2 351 2 
3 2 

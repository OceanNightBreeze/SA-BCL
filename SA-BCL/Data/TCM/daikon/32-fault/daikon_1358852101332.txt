#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (396,723) (396,723) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 738 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (396,723) (396,723) (161,229,526,562,777) (161,229,526,562,777) (161,229,526,562,777) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 535 178 345 303 250 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V ERROR java.lang.NullPointerException 583 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 368 367 (112,669) (426,765) (426,765) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 368 367 (112,669) (426,765) (426,765) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 368 367 (112,669) (426,765) (426,765) 
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 368 367 (112,669) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 368 367 (112,669) (112,669) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 368 367 (112,669) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 117 582 309 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 165 (164,203,428,534,563,638,672,753) 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 165 (164,203,428,534,563,638,672,753) 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 165 (164,203,428,534,563,638,672,753) 744 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 237 677 135 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 237 677 135 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (245,350) (245,350) (12,169) (12,169) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eq(JJ)Z
daikon.inv.Invariant:logOn()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.Quant:eltsLtIndex([I)Z
daikon.ProglangType:dimensions()I
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:memberOf(S[S)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:ReadByte()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | STATEMENT | 5655 | stmt -> ;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap:size()I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptName:isEnterPoint()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:ne(II)Z
daikon.test.FormatTestCase:passes()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.InvMap:InvMap()V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaCharStream:backup(I)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:FillBuff()V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Debug:logDetail()Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:sameLength([I[I)Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:eltsGTE([II)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setDiff([I[I)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:setEqual([I[I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaCharStream:readChar()C
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.Quant:slice([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE:subarray([JII)[J | RETURN | 30018 | return null
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ModBitTracker:num_vars()I
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_ntk()I
daikon.Quant:lexLTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | RETURN | 19030 | return null
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:eq(II)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | CONDITION | 26193 | if (x) -> if (!x)
daikon.diff.Diff:findNormalPpt(Ldaikon.PptMap;Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:negate(I)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:noDups([I)Z
daikon.Quant:lte(II)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z | CONDITION | 57307 | if (x) -> if (!x)
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ProglangType:isScalar()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String; | RETURN | 109561 | return null
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptSlice1:arity()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:hashCode()I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z | CONSTANT | 31385 | 1 -> 0
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.Quant:eltwiseLTE([I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ValueTuple:size()I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51514 | 3 -> 0
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | RETURN | 17435 | return null
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:relate_var()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:indexOf([II)I | OPERATOR | 13879 | == -> !=
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | CONDITION | 1462 | if (x) -> if (!x)
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 266434 | = null
daikon.Quant:union([I[I)[I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | OPERATOR | 4206 | > -> ==
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:gt(II)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:num_samples()I
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfo:new_ppt()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:isFloat()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:modulus([I)[I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:subsetOf([S[S)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Invariant:justified()Z
daikon.Quant:concat([I[I)[I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60655 | = null
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(II)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logDetail()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(FF)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:gcd([I)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptSlice0:arity()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
224 4 502 2 614 2 68 2 434 2 396 2 567 2 314 2 723 2 
104 6 654 6 199 2 606 2 759 6 249 2 532 2 10 2 770 2 727 2 408 2 
290 4 505 6 396 2 101 6 723 2 591 2 320 2 725 2 173 2 453 2 718 6 468 6 611 4 
1 16 3 10 420 2 440 8 396 6 670 2 714 2 422 24 165 16 697 11 428 6 31 4 499 2 273 2 196 8 613 4 637 4 330 10 182 6 279 10 638 6 98 11 723 6 75 28 662 2 707 14 414 6 595 4 466 2 666 11 
738 2 
126 2 
1 2 523 2 3 2 692 2 215 2 165 2 422 4 766 2 530 2 697 2 558 2 70 2 330 2 637 2 98 2 638 2 279 4 543 2 75 6 513 2 707 2 414 2 666 2 
1 8 330 4 457 6 3 5 230 2 98 4 164 4 165 8 422 12 75 15 321 6 672 4 697 4 707 8 595 2 238 2 666 4 
86 2 713 2 62 2 63 4 160 2 443 2 555 2 267 2 630 2 296 2 445 10 556 4 139 2 172 4 768 4 533 4 325 2 222 2 454 62 247 4 775 2 776 2 658 4 745 10 542 4 508 2 639 2 660 2 183 2 778 4 21 14 385 2 411 6 544 4 545 4 55 2 337 2 515 4 488 4 107 8 
519 2 7 2 163 2 29 2 633 2 201 2 640 2 308 2 126 2 386 2 
403 2 262 2 159 2 424 2 778 4 571 2 79 2 153 2 488 2 107 2 175 2 785 2 
1 24 59 6 132 2 3 15 396 4 715 6 422 36 165 24 164 4 321 6 672 4 697 12 428 4 534 2 563 4 330 12 637 2 203 8 457 6 182 6 98 12 638 4 279 6 381 2 460 2 723 4 753 4 75 40 641 2 707 24 414 10 666 12 
411 2 508 2 107 2 
261 2 27 2 248 2 506 2 231 2 149 2 752 22 724 2 351 10 557 2 272 2 363 2 339 2 258 2 
243 5 691 2 393 2 441 2 396 24 735 2 192 2 348 2 193 1 496 4 298 5 448 2 650 2 194 4 352 6 11 1 559 4 700 1 455 1 562 2 404 2 16 1 616 1 704 2 147 1 146 2 659 5 566 2 463 1 755 4 624 2 575 1 711 1 154 1 366 2 520 2 418 1 576 4 157 2 161 2 670 1 28 2 167 2 218 1 632 2 425 2 374 1 220 2 68 2 323 2 585 3 635 2 679 1 229 2 540 2 683 2 483 2 184 2 723 22 235 6 684 1 185 2 782 2 338 2 783 2 728 2 
207 2 
396 2 376 2 
349 2 396 4 415 2 
689 2 242 8 60 8 61 2 345 2 134 2 266 2 142 8 275 2 535 2 145 2 328 2 178 2 303 2 250 2 407 2 748 2 663 2 333 2 412 2 289 2 130 2 
340 2 186 2 680 1 176 2 
340 2 148 2 
340 2 166 2 613 2 106 2 287 2 107 2 787 2 
340 2 287 2 210 2 
340 2 177 2 287 2 
587 2 116 2 176 2 
340 2 287 2 
472 2 116 2 
340 2 518 2 
265 2 116 2 176 2 
17 2 69 2 176 2 
601 2 447 2 176 2 
432 2 109 2 176 2 
74 2 6 2 176 2 
664 2 116 2 
340 2 125 2 
4 2 69 2 
601 2 524 2 
354 2 432 2 
645 2 74 2 
285 2 116 2 
528 2 74 2 
255 2 432 2 
143 2 
24 2 69 2 
265 2 383 2 116 2 176 2 
265 2 383 2 93 2 116 2 176 2 
276 2 116 2 176 2 
34 2 116 2 176 2 
583 2 643 2 
733 2 116 2 
773 2 225 2 47 2 2 4 342 2 492 2 18 2 433 2 590 2 752 6 512 2 39 2 573 2 270 2 686 2 288 2 387 4 667 2 
274 2 176 2 
695 2 334 2 107 2 787 2 
166 2 695 2 334 2 584 2 107 2 787 2 
340 2 198 2 613 2 287 2 107 2 787 2 
431 2 435 2 
613 2 107 2 246 2 787 2 
432 2 43 2 
179 2 74 2 
140 2 69 2 
601 2 495 2 
601 2 706 2 74 2 
601 2 74 2 304 2 
601 2 74 2 191 2 
601 2 74 2 99 2 
452 2 282 6 754 2 107 2 688 2 787 2 710 6 786 2 
404 2 
81 2 82 2 291 4 393 2 392 2 396 26 496 4 498 2 298 4 194 4 399 2 92 2 402 2 503 2 504 2 704 2 616 2 306 2 509 4 619 2 623 2 624 2 417 2 520 2 418 2 626 2 213 2 216 2 28 2 425 2 632 2 220 6 323 2 30 2 331 2 723 26 235 6 437 2 338 2 728 2 550 2 551 4 243 2 441 2 735 2 554 2 346 2 448 6 650 6 352 4 559 4 141 2 146 2 566 2 659 2 749 2 574 2 757 8 758 2 467 8 366 2 576 4 156 2 157 2 167 2 68 2 478 2 181 2 483 2 683 2 593 2 779 2 384 4 484 2 782 2 783 2 
81 2 489 2 82 2 291 4 393 2 392 2 396 26 496 4 498 2 298 4 194 4 399 2 92 2 402 2 504 2 704 2 616 2 306 2 509 4 619 2 623 2 624 2 417 2 520 2 418 2 626 2 213 2 216 2 28 2 425 2 632 2 220 6 323 2 30 2 720 2 331 2 723 26 235 6 437 2 338 2 726 2 728 2 551 2 243 2 731 2 441 2 735 2 554 2 346 2 348 2 448 6 650 6 352 6 559 4 141 2 146 2 566 2 659 2 749 2 574 2 757 8 758 2 467 8 366 2 576 4 156 2 157 2 167 2 68 2 478 2 181 2 483 2 683 2 184 2 593 2 384 4 484 2 782 2 783 2 
561 2 332 2 
52 2 
240 2 83 4 189 4 690 4 393 2 441 2 396 12 297 10 605 4 299 2 194 2 559 2 740 2 699 2 701 2 654 6 13 2 199 2 146 2 705 2 359 2 408 4 253 2 104 6 570 2 620 2 756 2 624 2 470 2 471 4 367 2 419 4 577 2 759 6 158 2 318 2 157 2 669 2 580 8 110 2 765 2 111 2 426 2 532 4 717 2 378 2 770 2 719 2 538 2 483 2 123 2 723 6 235 4 78 2 236 2 546 2 783 2 188 2 388 8 548 2 
240 2 189 4 83 4 690 4 393 2 441 2 396 12 600 4 737 2 297 10 605 4 606 2 299 2 194 2 559 2 740 2 699 2 701 2 654 6 13 2 199 2 146 2 705 2 359 2 253 2 408 4 104 8 620 2 756 2 624 2 470 2 471 4 367 2 419 4 577 2 759 8 158 2 318 2 157 2 669 2 580 8 581 2 765 2 111 2 426 2 532 4 717 2 378 2 770 2 719 2 538 2 483 2 123 2 723 6 235 4 78 2 236 2 546 2 783 2 188 2 388 8 548 2 
701 2 654 2 240 2 13 2 189 4 83 4 419 2 759 2 669 2 123 2 408 2 620 2 765 2 111 2 426 2 532 2 378 2 470 2 
240 2 83 4 189 4 690 4 393 2 441 2 396 12 297 6 605 4 606 2 299 2 194 2 559 2 740 2 699 2 701 2 654 4 13 2 199 2 146 2 705 2 359 2 408 4 253 2 104 6 570 2 620 2 756 2 624 2 470 2 471 4 367 2 419 4 577 2 759 6 158 2 318 2 157 2 669 2 580 4 110 2 765 2 111 2 426 2 532 4 717 2 378 2 719 2 538 2 483 2 123 2 723 6 235 4 78 2 236 2 546 2 783 2 188 2 388 4 548 2 
471 2 690 2 189 2 83 2 367 2 368 2 759 2 577 2 318 2 669 2 396 4 580 4 110 2 765 2 297 4 299 2 426 2 532 2 10 2 699 2 378 2 654 4 199 2 13 2 123 2 359 2 253 2 408 2 104 4 236 2 546 2 756 2 548 2 388 4 470 2 
240 2 83 4 189 4 690 4 393 2 441 2 396 12 297 6 605 4 299 2 194 2 559 2 740 2 699 2 701 2 654 6 13 2 199 2 146 2 705 2 359 2 408 4 253 2 104 6 570 2 620 2 756 2 624 2 470 2 471 4 367 2 419 4 577 2 759 6 158 2 318 2 157 2 669 2 580 4 110 2 765 2 111 2 426 2 532 4 717 2 378 2 770 2 719 2 538 2 483 2 123 2 723 6 235 4 78 2 236 2 546 2 783 2 188 2 388 8 548 2 
471 2 690 2 189 2 83 2 367 2 368 2 759 6 577 2 318 2 669 2 396 4 580 8 110 2 765 2 297 8 605 2 299 2 426 2 532 4 10 2 699 2 770 2 378 2 654 8 199 2 13 2 123 2 359 2 253 2 408 4 570 2 104 6 236 2 546 2 756 2 548 2 388 8 470 2 
240 2 83 4 189 4 690 4 393 2 441 2 396 12 297 10 605 4 299 2 194 2 559 2 740 2 699 2 701 2 654 6 13 2 199 2 146 2 705 2 359 2 408 4 253 2 104 6 570 2 620 2 756 2 624 2 470 2 471 4 367 2 419 4 577 2 759 6 158 2 318 2 157 2 669 2 580 8 110 2 765 2 111 2 426 2 532 4 717 2 378 2 770 2 719 2 538 2 483 2 123 2 723 6 235 4 78 2 236 2 546 2 783 2 188 2 388 8 548 2 
471 2 690 2 189 2 83 2 551 1 367 2 213 2 368 2 156 2 759 2 577 2 318 2 669 2 396 4 110 2 765 2 299 2 426 2 532 2 10 2 699 2 378 2 654 4 199 2 13 2 181 2 123 2 359 2 253 2 408 2 104 4 236 2 127 2 546 2 756 2 757 2 467 2 548 2 388 2 470 2 
189 4 393 2 396 48 397 2 605 6 194 4 399 2 195 2 400 2 197 2 13 2 199 4 15 1 615 2 19 10 408 4 207 6 620 2 22 4 621 2 622 7 624 2 415 6 213 4 419 4 421 2 627 6 28 2 425 2 632 2 426 2 220 8 427 2 430 6 227 6 235 6 236 2 437 2 644 2 240 2 243 2 441 2 42 2 448 6 649 2 650 6 654 8 50 2 51 6 659 2 253 2 470 2 467 8 471 8 64 2 669 2 264 6 68 2 478 4 271 6 676 6 681 2 482 2 483 2 683 2 78 2 284 6 486 1 83 4 690 4 84 6 291 4 88 2 694 4 297 2 496 4 696 6 498 2 497 1 298 2 299 2 300 6 699 2 501 2 701 2 302 1 704 2 705 2 507 2 306 2 510 2 104 12 307 2 520 2 318 2 319 6 110 2 111 2 716 2 323 2 532 4 717 2 114 7 719 4 538 4 721 2 541 8 123 2 723 26 127 2 335 2 546 2 338 2 548 2 728 2 129 1 131 2 730 2 553 2 735 2 348 2 137 2 352 6 559 4 141 2 740 2 356 1 146 2 566 2 359 2 756 2 757 8 758 2 366 12 576 4 367 2 577 2 759 8 156 4 157 2 158 2 762 2 761 2 162 2 372 6 167 2 765 2 373 2 375 1 376 6 378 2 770 4 772 2 181 4 184 2 592 2 384 2 781 1 187 1 782 2 783 2 388 6 188 2 
690 4 189 4 83 4 84 6 291 4 88 2 393 2 396 48 694 4 297 6 696 6 397 2 496 4 498 2 298 2 605 6 299 2 399 2 194 4 300 6 699 2 195 2 501 2 400 2 197 2 701 2 199 4 13 2 615 2 19 10 704 2 507 2 705 2 306 2 510 2 408 4 207 6 307 2 104 12 620 2 22 4 621 2 415 6 624 2 520 2 213 4 419 4 319 6 318 2 421 2 110 2 627 6 28 2 111 2 632 2 425 2 716 2 220 8 426 2 427 2 323 2 532 4 717 2 430 6 719 4 227 6 721 2 538 4 541 8 123 2 723 26 235 6 236 2 127 2 335 2 437 2 546 2 338 2 728 2 548 2 131 2 730 2 240 2 644 2 243 2 441 2 42 2 553 2 735 2 348 2 649 2 448 6 137 2 650 6 352 6 141 2 559 4 740 2 654 8 50 2 51 6 146 2 659 2 566 2 359 2 253 2 756 2 757 8 758 2 467 8 470 2 366 12 471 8 367 2 576 4 156 4 759 8 577 2 64 2 158 2 157 2 761 2 264 6 762 2 669 2 580 4 162 2 372 6 765 2 167 2 373 2 68 2 478 4 271 6 376 6 770 4 378 2 772 2 676 6 181 4 681 2 482 2 683 2 483 2 184 2 592 2 384 2 78 2 284 6 782 2 783 2 188 2 388 6 
189 4 390 6 393 2 396 52 397 2 604 2 605 6 606 2 194 4 399 4 10 2 195 2 400 2 197 2 13 2 199 4 405 6 615 2 204 2 19 8 408 4 207 12 620 2 22 4 621 2 624 2 415 12 213 4 419 4 421 2 627 12 28 2 425 2 632 2 426 2 220 12 427 2 430 6 227 6 235 6 236 2 437 2 644 2 240 2 241 2 243 4 441 2 42 2 448 8 649 2 650 8 654 10 50 2 51 6 659 4 253 2 470 2 467 10 471 8 64 2 669 2 264 6 68 2 478 4 271 12 676 6 681 2 482 2 483 2 683 2 78 2 685 6 286 2 284 6 83 4 690 4 84 6 291 6 88 2 694 4 297 6 496 4 696 12 498 2 298 4 299 2 300 6 699 2 501 2 701 2 704 2 97 6 507 2 705 2 306 2 510 2 104 16 307 2 520 2 521 2 712 2 318 2 319 6 110 2 111 2 716 2 323 2 532 4 717 2 719 4 329 2 538 4 721 2 541 8 123 2 723 24 127 2 335 2 546 2 338 2 548 2 728 2 131 2 730 2 553 2 735 2 734 2 348 2 352 6 559 4 141 4 740 2 742 6 355 6 146 2 566 2 359 2 756 2 757 10 758 2 366 10 576 4 367 2 577 2 759 10 156 4 157 2 158 2 762 2 761 2 580 4 162 2 372 6 764 6 167 2 765 2 373 2 376 12 378 2 770 4 772 2 586 6 181 4 184 2 592 2 384 2 780 6 782 2 783 2 188 2 388 6 
471 2 690 2 189 2 83 2 367 2 577 2 759 6 318 2 669 2 396 4 580 4 110 2 765 2 297 4 605 2 299 2 426 2 532 4 699 2 770 2 378 2 654 6 199 2 13 2 123 2 359 2 253 2 408 4 104 4 236 2 546 2 756 2 548 2 388 6 470 2 
690 2 83 2 189 2 87 3 291 4 393 2 396 28 295 2 297 2 496 4 605 2 298 3 299 2 194 4 699 2 199 2 13 2 404 2 704 2 19 2 306 2 408 4 104 4 624 2 520 2 318 2 110 2 526 2 28 2 629 2 217 2 425 2 632 2 220 8 426 2 323 2 532 4 717 2 123 2 723 24 235 6 236 2 437 2 546 2 338 2 728 2 548 2 243 3 441 2 735 2 348 2 448 6 137 2 650 6 352 6 559 4 654 6 564 2 49 2 146 2 566 2 659 3 359 2 253 2 756 2 470 2 758 2 471 2 366 4 367 2 576 4 759 6 577 2 157 2 669 2 167 2 765 2 268 2 68 2 478 2 770 2 378 2 777 2 483 2 683 2 184 2 782 2 783 2 388 6 
236 2 40 2 546 2 
236 2 40 2 546 2 
81 4 189 2 83 2 690 2 393 2 396 24 694 2 297 4 496 4 498 2 605 4 298 2 606 2 299 2 194 4 10 4 199 4 95 2 19 2 704 2 306 2 408 4 104 14 22 2 311 2 624 2 625 2 520 2 522 2 213 4 28 2 425 2 632 2 220 2 323 2 221 2 532 4 123 2 723 16 235 6 236 2 437 2 546 2 338 2 728 2 551 2 441 2 735 2 647 2 348 2 448 2 650 2 352 6 559 4 654 12 146 2 566 2 746 2 151 2 757 4 467 4 470 2 668 2 366 4 471 4 576 4 367 2 368 2 156 4 759 10 475 2 157 2 669 2 580 4 372 2 167 2 68 2 478 4 769 2 174 2 770 4 181 4 483 2 683 2 184 2 782 2 783 2 388 6 
701 2 197 2 366 2 85 2 95 2 19 2 370 2 396 4 494 2 647 2 723 2 694 2 372 2 592 2 332 2 151 2 783 2 
81 4 0 2 189 2 83 2 690 2 393 2 396 20 297 4 496 4 498 2 605 4 298 4 606 2 299 2 194 4 10 4 199 4 704 2 306 2 408 4 104 14 22 2 311 4 624 2 625 2 520 2 522 2 213 4 28 2 425 2 632 2 112 2 220 2 323 2 221 2 532 4 123 2 723 14 235 6 236 2 437 2 546 2 338 2 728 2 551 1 441 2 735 2 647 2 348 2 448 2 650 2 352 6 559 4 654 12 146 2 566 2 746 2 151 2 757 4 467 4 470 2 668 2 471 4 366 2 576 4 367 2 368 2 156 4 759 10 475 2 157 2 669 2 580 4 167 2 68 2 478 4 769 2 174 2 770 4 181 4 483 2 683 2 184 2 782 2 783 2 388 6 
81 4 189 2 83 2 690 2 393 2 396 24 694 2 297 4 496 4 498 2 605 4 298 2 606 2 299 2 194 4 10 4 199 4 95 2 19 2 704 2 306 2 408 4 104 14 22 2 311 2 624 2 625 2 520 2 522 2 213 4 28 2 425 2 632 2 220 2 323 2 221 2 532 4 123 2 723 16 235 6 236 2 437 2 546 2 338 2 728 2 551 1 441 2 735 2 647 2 348 2 448 2 650 2 352 6 559 4 654 12 146 2 566 2 746 2 151 2 757 4 467 4 470 2 668 2 366 4 471 4 576 4 367 2 368 2 156 4 759 10 475 2 157 2 669 2 580 4 372 2 167 2 68 2 478 4 769 2 174 2 770 4 181 4 483 2 683 2 184 2 782 2 783 2 388 6 
1 4 596 1 87 2 292 4 291 8 391 2 3 4 393 2 89 2 396 28 598 2 496 4 397 2 498 2 298 6 697 2 9 6 399 6 194 4 91 2 698 6 609 2 500 22 400 2 612 2 200 4 202 2 615 2 704 2 98 2 205 2 406 2 618 4 100 2 102 2 306 2 619 4 206 2 208 2 309 2 312 4 707 4 414 4 624 2 515 2 212 2 315 2 211 2 520 2 317 2 108 2 421 2 214 2 527 2 422 6 28 2 629 2 321 6 631 4 425 2 632 2 529 4 322 2 220 16 716 2 323 2 634 2 324 6 226 4 117 2 35 2 636 2 228 2 330 2 119 2 539 2 722 2 124 2 723 22 234 2 235 6 335 2 544 2 338 2 547 2 728 2 729 2 644 2 551 2 132 4 243 6 343 2 344 2 441 2 442 4 735 2 444 2 348 2 244 2 448 10 450 2 451 4 739 2 650 10 352 6 141 6 559 4 560 2 144 2 247 2 564 2 49 2 744 2 458 2 146 2 566 2 659 6 358 2 461 6 361 2 462 6 665 2 465 4 757 10 666 2 467 10 758 2 260 2 366 2 576 4 474 2 578 2 65 2 157 2 66 2 582 2 476 4 165 4 671 6 167 2 672 4 673 2 268 2 674 2 68 2 478 2 377 2 71 4 180 4 73 2 278 6 483 2 683 2 184 2 75 8 77 4 782 2 687 2 783 2 
243 3 291 2 760 2 597 2 394 2 732 3 396 2 693 2 448 2 298 3 220 2 650 2 269 2 141 4 32 2 429 2 48 2 659 3 251 2 723 2 336 2 708 2 758 2 
243 2 291 2 760 2 597 2 394 2 732 2 396 2 693 2 448 2 298 2 220 2 650 2 269 2 141 4 32 2 429 2 48 2 659 2 251 2 723 2 336 2 708 2 758 2 
243 2 291 2 760 2 597 2 394 2 732 2 396 2 693 2 448 2 298 2 220 2 650 2 269 2 141 4 32 2 429 2 48 2 659 2 251 2 723 2 336 2 708 2 758 2 
1 2 243 3 263 3 396 10 293 4 422 4 165 2 8 2 298 3 697 2 220 2 428 2 353 2 741 2 652 2 327 4 46 2 655 3 14 6 657 4 481 2 330 2 94 2 96 2 36 2 182 4 121 3 98 2 751 2 251 2 682 2 569 4 723 4 75 5 707 2 485 2 666 2 364 2 758 2 25 4 
1 2 243 2 3 2 263 2 396 10 293 4 422 4 165 2 8 2 298 2 697 2 220 2 428 2 353 2 741 2 652 2 327 4 46 2 655 2 14 6 657 4 481 2 330 2 94 2 96 2 36 2 182 4 121 2 98 2 381 2 751 2 251 2 682 2 569 4 723 4 75 4 707 2 485 2 414 2 666 2 364 2 758 2 25 4 
1 2 243 2 3 2 263 2 396 10 293 4 422 4 165 2 8 2 298 2 697 2 220 2 428 2 353 2 741 2 652 2 327 4 46 2 655 2 14 6 657 4 481 2 330 2 94 2 96 2 36 2 182 4 121 2 98 2 381 2 751 2 251 2 682 2 569 4 723 4 75 4 707 2 485 2 414 2 666 2 364 2 758 2 25 4 
1 2 243 2 3 2 263 2 396 4 422 2 165 2 8 2 298 2 220 2 428 2 353 2 652 2 655 2 14 2 481 2 182 2 121 2 751 2 251 2 682 2 723 2 75 2 707 2 485 2 758 2 
1 2 243 2 3 2 263 2 396 4 422 2 165 2 8 2 298 2 220 2 428 2 353 2 652 2 655 2 14 2 481 2 182 2 121 2 751 2 251 2 682 2 723 2 75 2 707 2 485 2 758 2 
347 2 446 2 678 2 283 2 449 2 89 2 
365 2 449 2 357 2 280 2 305 2 784 2 619 2 
57 2 713 1 525 2 396 10 441 2 628 2 477 2 44 2 113 2 398 2 171 2 531 2 271 2 33 2 771 2 301 2 775 1 536 2 122 2 380 1 382 1 747 2 459 1 723 8 38 2 150 2 
71 2 1 4 330 2 744 2 3 3 182 2 98 2 165 4 422 6 75 7 321 4 672 2 697 2 707 4 428 2 152 2 739 2 666 2 
327 2 490 4 72 2 20 1 703 2 396 1 232 2 750 2 723 1 569 2 360 2 310 2 436 2 675 6 128 2 316 2 517 2 25 2 
327 2 490 4 72 2 703 4 232 2 750 2 569 2 360 2 310 2 436 2 675 6 517 2 128 4 316 4 25 2 
327 2 490 4 72 2 20 1 703 8 396 1 232 2 750 2 723 1 569 2 360 6 310 2 436 2 675 10 517 8 128 8 316 8 25 2 
327 2 490 2 72 2 703 2 232 2 750 2 569 2 310 2 436 2 675 2 128 2 316 2 25 2 
551 2 190 2 646 2 133 2 396 18 395 2 294 2 735 2 348 2 135 2 496 8 648 2 352 16 45 2 653 2 565 2 568 4 252 2 409 3 254 2 54 2 105 2 514 2 209 2 467 16 26 2 520 2 576 8 369 4 473 4 371 2 423 2 763 2 223 2 479 2 677 2 120 2 37 1 184 2 723 18 594 2 237 2 338 2 239 2 
341 6 551 2 389 2 646 2 5 4 133 2 396 28 493 2 735 2 599 2 348 8 135 2 244 2 496 14 648 2 651 2 607 2 352 36 698 2 653 2 743 4 456 2 656 4 617 4 406 2 568 8 252 6 409 2 254 6 511 2 410 2 572 2 209 6 256 4 465 10 212 6 516 2 469 2 467 14 26 2 520 2 576 14 369 2 579 2 371 2 423 2 168 2 324 10 115 4 326 4 677 2 379 2 537 2 589 2 184 8 723 26 76 4 237 2 338 2 687 2 438 2 239 2 
520 4 576 6 369 2 473 4 646 2 190 2 371 2 396 12 735 4 135 2 348 4 244 1 496 6 648 2 651 2 352 12 698 2 324 2 479 2 653 2 677 2 406 1 723 12 184 4 594 2 237 2 338 4 687 1 465 2 212 1 438 2 467 4 
341 6 551 2 389 2 491 2 552 2 646 2 5 2 133 2 396 46 736 4 735 2 599 2 348 6 135 2 136 2 496 20 602 2 603 2 648 2 138 2 607 2 352 48 608 2 45 2 610 2 653 2 401 2 743 2 702 2 103 2 568 6 252 4 409 2 206 4 53 2 661 2 254 4 511 2 410 2 54 2 105 2 313 2 362 2 413 2 464 2 709 2 56 2 514 2 209 4 256 2 257 2 416 2 259 2 467 36 26 2 58 2 520 2 576 20 369 2 155 2 579 2 371 2 763 2 67 2 423 2 170 2 219 2 767 2 115 2 326 2 480 2 226 6 118 2 277 2 774 2 677 2 379 2 588 2 233 4 184 6 723 44 281 2 76 2 642 2 237 2 338 2 41 2 487 2 239 2 549 4 80 2 
90 2 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 
439 1 12 1 245 1 350 1 169 1 23 1 

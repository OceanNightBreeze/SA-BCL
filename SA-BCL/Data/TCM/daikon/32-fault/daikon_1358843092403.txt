#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V ERROR java.lang.NullPointerException 252 86 
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.Error 96 496 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.IllegalArgumentException (21,31,81,242,372,532,715) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (457,476,512,593,627) (457,476,512,593,627) (457,476,512,593,627) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 340 171 10 407 267 394 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.ArrayIndexOutOfBoundsException 664 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 28 
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 664 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (244,381) (244,381) 229 300 653 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 85 279 
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 387 689 559 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 387 689 559 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 387 689 559 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 387 689 559 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern:intern([I)[I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:sum([[D)D
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:eltsGtIndex([I)Z | OPERATOR | 179154 | ++ -> --
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:eq(II)Z
daikon.Debug:logDetail()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.Node:Node()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.PptSlice2:arity()I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
utilMDE.TestUtilMDE:lsis_test(I)V | ASSIGN | 45022 | = null
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariants:Invariants()V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17131 | = null
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaCharStream:BeginToken()C
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName:hashCode()I
daikon.Quant:memberOf(S[S)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_3R_54()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice; | RETURN | 38854 | return null
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3_16()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:eltsGTE([II)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.Invariant:logDetail()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:logOn()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(FF)Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_51()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaCharStream:getEndColumn()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_133()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:logOn()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound; | ASSIGN | 23432 | = null
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ProglangType:isScalar()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern:numIntArrays()I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | CONDITION | 21221 | if (x) -> if (!x)
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:negate(I)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:slice([III)[I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:lexGTE([I[I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:ne(II)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:memberOf(J[J)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:isReverse([I[I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.MathMDE:gcd([I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltsGT([II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:isIntegral()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:union([I[I)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([D)D
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V | STATEMENT | 2624 | stmt -> ;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Ppt:Ppt()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:gt(II)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3R_162()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eltsLT([II)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE:pow(II)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Invariant:getConfidence()D
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_85()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_135()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_53()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfo:relate_var()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:setDiff([I[I)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_50()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_163()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I | CONSTANT | 624 | 0 -> 1
daikon.PptSlice1:num_samples()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:intersection([I[I)[I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:noDups([I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3_13()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.MathMDE:modulus([I)[I | OPERATOR | 8627 | % -> >>>
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3_14()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long; | RETURN | 14632 | return null
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
252 2 86 2 
447 2 463 2 282 2 666 2 493 6 706 6 518 6 345 2 513 2 549 2 546 2 
695 2 281 6 381 2 168 6 357 2 141 6 540 4 262 2 166 2 352 2 717 4 198 6 244 2 
2 26 100 10 450 2 381 6 21 6 454 10 227 4 578 12 640 2 531 2 487 8 126 4 464 28 713 10 413 2 87 16 588 2 590 10 652 8 31 6 371 2 538 4 418 16 625 10 686 8 172 2 522 16 93 8 32 4 244 6 
12 6 177 4 
213 2 
365 2 2 4 100 2 220 2 21 2 454 2 183 2 227 2 578 2 511 2 605 2 464 6 713 4 87 2 208 2 616 2 29 2 590 2 652 2 418 2 625 2 478 2 522 2 
2 10 464 13 100 4 87 6 601 6 590 4 483 4 472 2 538 2 454 4 509 2 418 6 578 4 625 4 522 6 715 2 81 4 
71 2 319 14 600 2 506 2 422 2 469 2 560 2 452 2 43 2 212 4 679 2 620 8 621 2 475 2 384 2 349 2 134 2 655 4 707 2 574 2 
96 2 537 2 423 2 35 2 415 2 213 2 496 2 37 2 145 2 573 2 
558 2 662 2 597 4 381 4 526 2 77 2 165 2 125 2 39 2 533 2 435 2 308 2 207 2 129 2 617 4 677 2 311 2 170 2 682 2 626 2 134 2 500 2 499 2 694 2 633 2 697 2 450 2 505 2 140 2 702 2 143 2 185 2 186 2 641 4 233 4 409 2 26 2 516 2 468 2 655 2 656 2 377 2 244 4 378 2 
2 10 100 4 381 4 601 4 120 2 454 4 578 4 81 2 532 4 464 11 87 6 590 4 652 2 372 2 418 6 625 4 373 6 522 6 242 8 244 4 
384 2 655 2 560 2 
118 2 436 2 298 2 288 2 359 2 508 2 181 10 325 22 579 2 290 2 315 2 68 2 377 2 114 2 
1 2 76 2 342 2 250 2 7 6 426 1 427 2 530 1 351 2 82 2 84 3 354 2 613 1 624 2 623 1 261 2 444 2 627 2 629 1 630 6 95 4 97 4 451 1 105 4 453 2 637 2 274 1 458 2 369 5 187 1 277 2 461 2 645 2 552 6 476 2 661 4 297 2 381 24 564 1 36 1 669 2 489 1 490 2 672 1 491 2 127 2 568 2 128 2 317 2 137 2 51 2 396 2 327 2 581 1 329 2 708 1 405 2 586 1 410 1 235 2 151 1 64 2 587 2 416 4 593 2 244 22 719 2 70 5 
307 2 
612 2 381 2 
58 2 381 4 247 2 
339 4 340 2 158 2 3 2 4 36 6 26 424 2 162 2 163 26 603 2 8 2 251 2 9 26 608 2 10 2 83 4 355 6 437 2 618 2 441 82 171 2 442 10 94 10 361 2 263 2 265 2 445 2 544 28 631 2 267 2 101 26 18 10 19 10 180 26 113 2 23 26 459 12 276 2 642 2 25 4 460 14 283 6 190 4 650 2 651 2 287 4 471 20 555 20 117 2 556 2 194 2 374 2 375 6 660 2 557 2 479 14 294 2 299 12 484 2 200 82 382 8 201 2 485 4 565 2 386 4 670 2 304 2 671 2 306 2 566 2 206 16 673 2 492 26 42 2 209 2 45 2 680 2 215 2 316 26 394 2 497 26 217 4 688 4 690 2 691 8 54 2 219 82 321 2 507 2 57 8 705 2 230 2 407 2 408 20 62 26 710 2 711 12 515 26 333 2 517 10 414 6 65 2 335 2 520 26 419 10 
48 2 628 2 216 1 154 2 
48 2 635 2 
664 2 48 2 236 2 675 2 683 2 655 2 32 2 
48 2 236 2 718 2 
48 2 236 2 124 2 
448 2 473 2 628 2 
48 2 236 2 
448 2 611 2 
48 2 175 2 
448 2 628 2 46 2 
320 2 628 2 253 2 
121 2 562 2 628 2 
147 2 628 2 61 2 
494 2 157 2 628 2 
448 2 398 2 
169 2 48 2 
701 2 320 2 
562 2 433 2 
147 2 188 2 
494 2 431 2 
448 2 687 2 
379 2 494 2 
147 2 28 2 
480 2 562 2 
320 2 594 2 
448 2 628 2 286 2 46 2 
448 2 52 2 628 2 286 2 46 2 
448 2 510 2 628 2 
142 2 448 2 628 2 
420 2 347 2 654 2 432 2 
675 2 649 2 655 2 16 2 
664 2 502 2 675 2 649 2 655 2 16 2 
48 2 236 2 675 2 647 2 655 2 32 2 
698 2 311 2 
675 2 438 2 655 2 32 2 
147 2 481 2 
494 2 222 2 
571 2 320 2 
562 2 643 2 
202 2 562 2 494 2 
562 2 494 2 541 2 
562 2 494 2 293 2 
562 2 494 2 443 2 
160 6 636 2 428 2 675 2 334 2 521 2 655 2 136 6 
448 2 328 2 
189 2 266 2 535 2 218 2 466 2 17 2 152 2 130 2 676 4 161 2 561 2 106 2 302 2 325 6 704 4 338 2 580 2 24 2 
628 2 668 2 
587 2 
1 2 76 2 342 6 5 2 250 2 7 4 78 2 427 6 429 2 607 4 351 2 353 2 354 2 614 2 440 2 358 2 260 2 624 2 261 2 444 2 629 2 264 2 630 4 95 4 105 4 269 2 453 2 637 2 182 8 547 2 369 2 277 2 461 2 645 2 285 2 115 2 552 6 553 2 661 4 297 2 296 2 381 26 203 2 36 2 669 2 490 6 388 2 127 2 568 2 41 2 312 2 132 4 392 2 685 2 135 2 317 2 51 2 693 8 400 2 403 2 703 2 226 4 327 2 582 2 405 2 406 4 589 2 416 4 336 2 417 2 337 2 69 2 243 2 719 2 244 26 70 2 
1 2 527 2 76 2 342 6 5 2 250 2 7 6 78 2 427 6 429 2 607 4 351 2 353 2 354 2 440 2 260 2 624 2 261 2 444 2 629 2 264 2 630 4 95 4 105 4 269 2 453 2 637 2 182 8 547 2 369 2 277 2 461 2 645 2 285 2 115 2 552 6 553 2 661 4 297 2 296 2 381 26 203 2 36 2 669 2 490 6 388 2 127 2 568 2 41 2 312 2 132 4 685 2 135 2 317 2 318 2 51 2 693 8 400 2 575 2 403 2 703 2 226 4 60 2 327 2 582 2 329 2 405 2 235 2 589 2 416 4 336 2 417 2 337 2 69 2 243 2 719 2 244 26 70 2 
592 2 
696 2 474 2 
661 2 33 2 72 4 381 12 76 2 346 2 164 2 666 4 122 10 563 2 80 2 123 8 669 2 255 2 167 2 11 2 534 2 434 4 356 2 13 2 439 2 389 2 44 2 493 6 133 2 261 2 317 2 395 2 363 2 95 2 138 4 397 2 399 2 503 2 102 2 20 2 453 2 546 4 59 4 110 2 111 2 706 6 146 4 548 8 549 2 461 2 282 2 234 2 412 4 284 2 467 2 370 2 518 6 470 2 552 4 155 2 291 2 197 2 719 2 244 6 
661 2 33 2 72 4 381 12 76 2 346 2 345 2 164 2 666 4 122 10 563 2 80 2 123 8 669 2 255 2 167 2 11 2 534 2 434 4 356 2 439 2 389 2 44 2 493 8 133 2 261 2 317 2 395 2 95 2 138 4 397 2 545 2 399 2 503 2 102 2 20 2 453 2 546 4 577 4 273 2 59 4 110 2 111 2 706 8 548 8 146 4 549 2 461 2 282 2 234 2 412 4 284 2 467 2 370 2 518 6 470 2 552 4 155 2 291 2 197 2 719 2 244 6 
72 2 356 2 518 2 439 2 389 2 470 2 546 2 44 2 164 2 59 4 666 2 110 2 493 2 111 2 80 2 197 2 146 4 167 2 
661 2 33 2 72 4 381 12 76 2 346 2 345 2 164 2 666 4 122 6 563 2 80 2 123 4 669 2 255 2 167 2 11 2 534 2 434 4 356 2 13 2 439 2 389 2 44 2 493 6 133 2 261 2 317 2 395 2 363 2 95 2 138 4 397 2 399 2 503 2 102 2 20 2 453 2 546 4 59 4 110 2 111 2 706 6 146 4 548 4 461 2 282 2 234 2 412 4 284 2 467 2 370 2 518 4 470 2 552 4 155 2 291 2 197 2 719 2 244 6 
661 2 33 2 72 4 381 12 76 2 346 2 164 2 666 4 122 6 563 2 80 2 123 4 669 2 255 2 167 2 11 2 534 2 434 4 356 2 13 2 439 2 389 2 44 2 493 4 133 2 261 2 317 2 395 2 363 2 95 2 138 4 397 2 399 2 503 2 102 2 20 2 453 2 546 4 59 4 110 2 111 2 706 6 146 4 548 4 461 2 282 2 463 2 234 2 412 4 284 2 467 2 370 2 518 6 470 2 552 4 155 2 291 2 197 2 719 2 244 6 
661 2 33 2 72 4 381 12 76 2 346 2 164 2 666 4 122 6 563 2 80 2 123 4 669 2 255 2 167 2 11 2 534 2 434 4 356 2 13 2 439 2 389 2 44 2 493 6 133 2 261 2 317 2 395 2 363 2 95 2 138 4 397 2 399 2 503 2 102 2 20 2 453 2 546 4 59 4 110 2 111 2 706 6 146 4 548 8 549 2 461 2 282 2 234 2 412 4 284 2 467 2 370 2 518 6 470 2 552 4 155 2 291 2 197 2 719 2 244 6 
661 2 33 2 72 4 381 12 76 2 346 2 164 2 666 4 122 10 563 2 80 2 123 8 669 2 255 2 167 2 11 2 534 2 434 4 356 2 13 2 439 2 389 2 44 2 493 6 133 2 261 2 317 2 395 2 363 2 95 2 138 4 397 2 399 2 503 2 102 2 20 2 453 2 546 4 59 4 110 2 111 2 706 8 146 4 548 8 549 2 461 2 282 2 463 2 234 2 412 4 284 2 467 2 370 2 518 8 470 2 552 4 155 2 291 2 197 2 719 2 244 6 
661 2 33 2 72 4 381 12 76 2 346 2 164 2 666 4 122 10 563 2 80 2 123 8 669 2 255 2 167 2 11 2 534 2 434 4 356 2 13 2 439 2 389 2 44 2 493 6 133 2 261 2 317 2 395 2 363 2 95 2 138 4 397 2 399 2 503 2 102 2 20 2 453 2 546 4 59 4 110 2 111 2 706 6 146 4 548 8 549 2 461 2 282 2 234 2 412 4 284 2 467 2 370 2 518 6 470 2 552 4 155 2 291 2 197 2 719 2 244 6 
0 4 1 2 525 2 342 6 343 2 346 2 7 6 164 2 529 2 350 2 351 2 353 2 167 2 11 2 354 2 534 4 356 2 360 4 539 2 363 2 364 6 20 2 366 7 546 4 182 4 369 2 548 2 551 6 370 2 552 6 192 8 197 2 33 2 380 2 34 2 381 46 199 2 563 2 385 2 388 2 204 2 568 2 389 2 44 2 49 2 214 2 395 2 51 2 397 2 399 2 400 2 401 2 56 1 59 4 58 6 405 2 584 1 406 1 585 2 234 2 235 2 412 6 63 2 239 2 241 6 416 4 66 6 244 24 70 2 595 6 72 4 73 2 76 2 602 2 250 2 249 2 427 8 80 2 607 4 255 2 434 4 612 6 439 2 440 2 88 1 257 2 89 1 619 6 260 2 624 2 261 2 444 2 264 2 630 2 95 4 632 2 449 1 102 2 103 2 105 4 269 2 453 2 270 1 637 2 109 6 638 2 110 2 456 7 111 2 277 12 644 2 461 2 462 2 282 4 463 4 645 2 467 2 284 2 285 2 115 4 470 2 477 6 291 2 292 2 661 4 295 1 297 2 296 2 482 2 665 6 666 4 122 2 486 6 303 2 669 2 490 6 307 6 127 2 309 6 493 4 684 6 133 2 317 2 495 2 138 8 693 4 692 6 503 2 326 2 327 2 706 12 329 2 146 4 712 1 331 10 332 2 150 2 518 8 153 1 155 4 719 2 
595 6 0 4 1 2 72 4 73 2 525 2 342 6 76 2 343 2 346 2 602 2 249 2 250 2 7 6 164 2 427 8 529 2 350 2 607 4 80 2 351 2 353 4 167 2 255 2 11 2 534 4 434 4 354 2 612 6 356 2 439 2 440 4 257 2 360 4 619 6 539 2 260 2 624 2 261 2 444 2 363 2 630 2 264 2 95 4 632 2 364 6 102 2 103 2 20 2 269 2 105 4 453 2 637 2 182 8 546 4 109 6 638 2 110 2 111 2 369 2 277 12 548 6 644 2 549 4 461 2 462 2 645 2 282 4 551 6 284 2 467 2 370 2 285 4 115 4 470 2 552 6 192 8 477 6 291 2 292 2 197 2 661 4 33 2 380 2 34 2 296 2 297 2 199 2 381 48 482 2 665 6 666 4 122 2 563 2 385 2 303 2 486 6 669 2 490 6 388 2 307 6 204 2 127 2 568 2 309 6 389 2 44 2 49 2 493 8 684 6 214 2 133 2 495 2 317 2 395 2 51 2 138 8 692 6 693 8 397 2 503 2 399 2 401 2 400 2 226 2 58 6 59 4 326 2 327 2 706 12 329 2 405 2 585 2 146 4 330 2 234 2 332 2 331 10 235 2 238 2 412 6 150 2 63 2 239 2 518 8 241 6 416 4 155 4 66 6 70 2 244 26 719 2 
595 6 0 4 1 2 72 4 73 2 525 2 342 6 76 2 343 2 346 2 602 2 249 2 250 2 7 6 164 2 427 8 529 2 350 2 607 4 80 2 351 2 353 4 167 2 255 2 11 2 534 4 354 2 434 4 612 6 356 2 439 2 440 4 257 2 360 4 619 6 539 2 260 2 624 2 261 2 444 2 363 2 630 2 264 2 95 4 632 2 364 6 102 2 103 2 20 2 269 2 105 4 453 2 637 2 182 8 546 4 109 6 638 2 110 2 111 2 369 2 277 12 548 6 644 2 549 4 461 2 462 2 645 2 282 4 551 6 284 2 467 2 370 2 285 4 115 4 470 2 552 6 192 8 477 6 291 2 292 2 197 2 661 4 33 2 380 2 34 2 296 2 297 2 199 2 381 48 482 2 665 6 666 4 122 6 563 2 385 2 123 4 303 2 486 6 669 2 490 6 388 2 307 6 204 2 127 2 568 2 309 6 389 2 44 2 49 2 493 8 684 6 214 2 133 2 495 2 317 2 395 2 51 2 138 8 692 6 693 8 397 2 503 2 399 2 401 2 400 2 226 2 58 6 59 4 326 2 327 2 706 12 329 2 405 2 585 2 146 4 330 2 234 2 332 2 331 10 235 2 238 2 412 6 150 2 63 2 239 2 518 8 241 6 416 4 155 4 66 6 70 2 244 26 719 2 
0 4 1 2 525 2 342 8 343 2 346 2 345 2 7 6 164 2 529 2 350 2 351 2 353 4 167 2 11 2 354 2 534 4 356 2 360 4 539 2 363 2 543 6 364 6 179 2 20 2 546 4 182 10 369 4 548 6 549 4 551 6 370 2 552 6 192 8 196 6 197 2 33 2 380 2 34 2 381 52 199 2 563 2 385 2 388 4 204 2 568 2 389 2 44 2 211 2 47 6 49 2 214 2 395 2 51 2 397 2 399 2 400 2 401 2 221 6 226 2 59 4 58 12 405 2 585 2 234 2 235 2 238 2 412 6 237 6 63 2 239 2 241 6 416 4 66 6 244 24 70 4 595 6 72 4 73 2 599 2 76 2 602 2 248 6 250 2 249 2 427 12 80 2 607 6 255 2 434 4 612 12 615 2 439 2 440 4 257 2 619 12 260 2 624 2 261 2 444 2 264 2 630 4 95 4 446 2 632 2 102 2 103 2 105 4 269 2 453 2 637 2 109 6 272 6 455 6 638 2 110 2 111 2 277 10 644 2 461 2 462 2 282 4 463 2 645 2 284 2 467 2 285 4 115 4 470 2 477 6 291 2 292 2 661 4 297 2 296 4 665 12 666 4 122 6 123 4 486 6 303 2 669 2 490 8 307 12 127 2 309 6 131 2 493 10 684 12 133 2 495 2 317 2 498 2 138 8 693 10 692 6 503 2 324 2 326 2 327 2 706 16 329 2 146 4 330 2 331 8 332 2 150 2 518 10 714 6 155 4 719 2 
397 2 33 2 503 2 399 2 381 4 20 2 546 4 164 2 59 2 666 4 122 4 110 2 706 4 123 4 80 2 548 6 146 2 549 2 167 2 255 2 11 2 434 2 282 2 412 2 467 2 370 2 518 6 470 2 389 2 44 2 493 6 133 2 395 2 363 2 138 2 
1 2 76 2 342 6 250 2 7 6 164 2 427 8 430 2 607 4 80 2 351 2 255 2 167 2 11 2 434 2 354 2 260 2 624 2 622 3 261 2 444 2 362 2 363 2 264 2 630 3 95 4 20 2 105 4 453 2 107 2 637 2 546 4 110 2 457 2 369 3 277 4 548 6 549 2 461 2 282 2 645 2 646 2 467 2 370 2 115 2 552 6 470 2 661 4 33 2 297 2 381 28 482 2 666 4 122 2 563 2 669 2 490 6 127 2 568 2 389 2 44 2 493 6 133 2 317 2 395 2 51 2 138 2 397 2 399 2 503 2 400 2 224 2 59 2 327 2 512 2 706 4 329 2 405 2 583 2 146 2 235 2 331 2 412 2 587 2 518 6 416 4 244 24 719 2 70 3 
11 2 399 2 609 2 
11 2 399 2 609 2 
0 2 595 2 596 2 1 2 72 4 74 2 76 2 342 2 346 2 345 4 250 2 7 6 427 2 429 4 348 2 351 2 353 4 609 2 11 6 534 2 354 2 434 2 256 2 356 2 440 4 258 2 360 2 260 2 624 2 91 2 261 2 444 2 173 2 630 2 95 4 268 2 20 2 269 4 105 4 453 2 637 2 182 4 546 4 271 2 110 2 639 2 111 2 277 4 548 6 549 4 461 2 645 2 282 4 463 4 465 2 285 4 115 6 552 6 470 4 193 2 291 2 661 4 297 2 381 24 663 2 666 4 122 6 383 2 123 4 669 2 490 2 205 4 127 2 568 2 44 2 678 4 572 2 313 2 493 12 214 2 317 2 51 2 138 4 693 4 397 2 399 4 400 2 576 2 59 2 326 2 327 2 706 16 329 2 405 2 406 1 146 2 234 2 331 2 235 2 412 4 63 2 518 12 416 4 155 4 719 2 244 16 
595 2 331 2 465 2 381 4 504 2 341 2 76 2 360 2 193 2 604 2 474 2 638 2 529 2 173 2 197 2 277 2 244 2 
595 2 0 2 1 2 72 4 74 2 76 2 342 2 346 2 345 4 250 2 7 6 427 2 429 4 528 2 351 2 353 4 609 2 11 6 534 4 434 2 354 2 256 2 356 2 440 4 258 2 260 2 624 2 91 2 261 2 444 2 173 2 630 4 95 4 268 2 20 2 269 4 105 4 453 2 637 2 182 4 546 4 271 2 110 2 639 2 111 2 277 2 548 6 549 4 461 2 645 2 282 4 463 4 465 2 284 2 191 2 285 4 115 6 552 6 470 4 289 2 193 2 291 2 661 4 297 2 381 24 663 2 666 4 122 6 123 4 669 2 490 2 205 4 567 2 127 2 568 2 44 2 678 4 313 4 493 12 214 2 317 2 51 2 138 4 693 4 397 2 399 4 400 2 576 2 59 2 326 2 327 2 144 2 706 16 329 2 405 2 146 2 234 2 235 2 412 4 63 2 518 12 416 4 155 4 719 2 244 16 
0 2 595 2 1 2 72 4 74 2 76 2 342 2 346 2 345 4 250 2 7 6 427 2 429 4 351 2 353 4 609 2 610 2 11 6 534 4 354 2 434 2 256 2 356 2 536 2 440 4 258 2 360 2 260 2 624 2 91 2 261 2 444 2 173 2 630 2 95 4 99 2 268 2 20 2 269 4 105 4 453 2 637 2 182 4 546 4 271 2 110 2 639 2 111 2 277 4 548 6 549 4 278 2 461 2 645 2 282 4 463 4 465 2 284 2 285 4 115 6 552 6 470 4 193 2 291 2 661 4 297 2 381 24 663 2 666 4 122 6 123 4 669 2 490 2 205 4 127 2 568 2 44 2 678 4 313 2 493 12 214 2 317 2 51 2 138 4 693 4 397 2 399 4 400 2 576 2 223 2 59 2 326 2 327 2 706 16 329 2 405 2 406 1 146 2 234 2 331 2 235 2 412 4 63 2 518 12 416 4 155 4 719 2 244 16 
661 2 1 2 297 2 381 16 598 2 342 2 76 2 300 2 250 2 7 5 427 2 351 2 254 2 669 2 490 2 354 2 305 2 127 2 568 2 210 2 391 2 259 2 624 2 261 2 50 2 444 2 317 2 51 2 95 2 98 2 105 4 453 2 637 2 700 2 327 2 229 2 329 1 405 2 461 2 645 2 235 1 552 4 416 4 67 2 156 2 653 2 719 2 244 12 
523 2 381 2 119 2 342 2 427 2 228 3 112 2 231 2 369 3 232 2 607 2 490 2 388 6 40 2 674 2 569 1 390 2 92 2 658 4 264 2 630 3 659 2 176 2 70 3 244 2 
523 2 381 2 119 2 342 2 427 2 228 2 112 2 231 2 369 2 232 2 607 2 490 2 388 6 40 2 674 2 390 2 92 2 658 4 264 2 630 2 659 2 176 2 70 2 244 2 
523 2 381 2 119 2 342 2 427 2 228 2 112 2 231 2 369 2 232 2 607 2 490 2 388 6 40 2 674 2 390 2 92 2 658 4 264 2 630 2 659 2 176 2 70 2 244 2 
2 4 524 3 381 10 246 3 75 2 427 2 606 2 38 2 40 2 87 2 310 2 90 6 625 2 686 4 630 3 264 2 178 2 53 4 100 2 402 4 323 2 454 2 184 2 578 2 22 4 275 2 709 4 411 2 148 4 464 6 590 2 591 2 31 2 519 2 418 2 116 2 522 2 195 3 657 2 244 4 70 3 
53 4 2 4 100 2 524 2 381 10 75 2 246 2 402 4 323 2 454 2 184 2 427 2 578 2 22 4 275 2 531 2 606 2 709 4 38 2 411 2 148 4 40 2 464 4 87 2 310 2 590 2 591 2 652 2 31 2 519 2 116 2 418 2 90 6 625 2 686 4 522 2 195 2 657 2 264 2 630 2 70 2 178 2 244 4 
53 4 2 4 100 2 524 2 381 10 75 2 246 2 402 4 323 2 454 2 184 2 427 2 578 2 22 4 275 2 531 2 606 2 709 4 38 2 411 2 148 4 40 2 464 4 87 2 310 2 590 2 591 2 652 2 31 2 519 2 116 2 418 2 90 6 625 2 686 4 522 2 195 2 657 2 264 2 630 2 70 2 178 2 244 4 
53 4 2 4 100 2 524 2 381 10 75 2 246 2 402 4 323 2 454 2 184 2 427 2 578 2 22 4 275 2 531 2 606 2 709 4 38 2 411 2 148 4 40 2 464 4 87 2 310 2 590 2 591 2 652 2 31 2 519 2 116 2 418 2 90 6 625 2 686 4 522 2 195 2 657 2 264 2 630 2 70 2 178 2 244 4 
53 4 2 4 100 2 524 2 381 10 75 2 246 2 402 4 323 2 454 2 184 2 427 2 578 4 22 4 275 2 531 4 606 2 709 4 38 2 411 2 148 4 40 2 464 4 87 2 310 2 590 2 591 2 652 4 31 2 519 2 116 2 418 2 90 6 625 2 686 4 522 2 195 2 657 2 264 2 630 2 70 2 178 2 244 4 
648 2 14 2 634 2 404 2 367 2 376 2 
55 2 149 2 41 2 344 2 367 2 30 2 225 2 
245 2 279 2 85 2 27 1 381 4 453 2 240 2 322 2 314 1 349 1 79 1 393 2 667 2 244 4 574 1 
425 2 
550 2 501 2 53 2 699 6 381 1 139 2 104 2 159 2 402 2 554 2 108 4 570 2 15 1 716 2 542 2 709 2 488 2 244 1 
550 2 501 2 53 2 699 6 139 2 104 4 159 2 402 2 554 2 108 4 570 2 716 4 709 2 542 4 488 2 
550 2 501 6 53 2 699 10 381 1 139 2 104 8 159 2 402 2 554 2 108 4 570 2 15 1 716 8 709 2 542 8 488 8 244 1 
550 2 53 2 699 2 139 2 104 2 159 2 402 2 554 2 108 2 570 2 716 2 709 2 542 2 
1 2 381 6 559 2 301 2 7 4 387 2 127 2 681 2 174 1 689 2 51 2 693 2 105 2 329 2 280 1 235 2 416 2 244 6 
693 2 1 2 387 2 127 2 421 2 381 6 559 2 105 2 416 2 7 2 681 2 406 2 689 2 51 2 244 6 
693 2 1 2 387 2 235 2 127 2 381 6 559 2 105 2 416 2 7 4 681 2 329 2 406 1 689 2 514 2 51 2 244 6 
693 2 1 2 387 2 235 2 127 2 381 6 559 2 105 2 416 2 7 4 681 2 329 2 689 2 514 2 51 2 244 6 
368 2 

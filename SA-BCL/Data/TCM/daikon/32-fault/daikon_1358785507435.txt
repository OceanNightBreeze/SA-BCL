#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (448,601) (448,601) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 123 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (448,601) (448,601) 752 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 723 187 830 261 380 447 453 478 206 5 691 838 134 332 664 753 17 331 72 612 213 525 583 26 627 679 505 405 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (299,482) 667 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (275,312) (275,312) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 349 411 138 677 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 119 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.Error 155 417 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.Error 155 417 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.Error 155 417 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 155 417 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 473 135 28 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 473 135 28 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 473 135 28 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 473 135 28 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3R_161()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2308 | = null
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lte(II)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eltsGT([II)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:format()Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.Node:Node()V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Debug:logDetail()Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3_12()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3R_123()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_4(I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internSubsequence([JII)[J | STATEMENT | 23714 | stmt -> ;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:ne(II)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_5()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal; | RETURN | 91149 | return null
daikon.ValueTuple:isMissing(I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:jj_3_36()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONSTANT | 17524 | 1 -> -1
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Ppt:Ppt()V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.ValueTuple:size()I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:subsetOf([S[S)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:concat([I[I)[I
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice2:arity()I
utilMDE.MathMDE:sign(I)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2087 | return null
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_115()Z
daikon.ProglangType:isPseudoArray()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:sameLength([I[I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:getConfidence()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:InvMap()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_15()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183341 | = null
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_2_5(I)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:noDups([I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_55()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Debug:logOn()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ProglangType:isArray()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.WeakHasherMap:size()I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.PptSlice1:num_samples()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166942 | stmt -> ;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_48()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.Assert:assertTrue(Z)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_52()Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Intern:intern([J)[J
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:dimensions()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_97()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 913 | = null
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.MathMDE:negate(I)I
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_57()Z
daikon.ModBitTracker:num_samples()I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:union([I[I)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_88()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ModBitTracker:split(I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptSlice0:arity()I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_116()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_62()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.MathMDE:gcd(II)I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptName:isEnterPoint()Z
jtb.JavaCharStream:readChar()C
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltwiseGT([I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_49()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_61()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:eltsLT([II)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:relate_var()V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3R_118()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:eltsGTE([II)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_121()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 156850 | if (x) -> if (!x)
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:jj_3R_133()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.ProglangType:isIntegral()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE:sum([[D)D
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaCharStream:FillBuff()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_76()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3_13()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo; | RETURN | 20729 | return null
jtb.JavaParser:jj_3R_85()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_58()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.MathMDE:pow(II)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_117()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_2_13(I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
561 2 556 2 577 2 327 2 246 2 250 2 601 2 840 4 448 2 
535 2 580 2 515 2 832 2 353 6 734 2 807 2 189 6 398 6 500 2 700 2 
663 6 3 2 169 6 854 2 601 2 74 4 204 6 277 2 485 2 796 2 65 4 740 6 448 2 
167 10 86 2 784 2 652 2 597 14 218 4 601 6 392 27 434 4 732 8 304 6 793 10 147 2 148 6 635 14 345 2 448 6 94 8 402 10 774 6 744 2 772 10 506 4 184 24 454 4 235 14 111 10 388 4 112 10 619 2 
640 4 831 6 
160 2 
117 2 266 2 170 2 761 2 822 2 765 2 446 2 501 2 768 2 347 2 614 2 291 2 510 2 617 2 419 4 299 2 564 2 467 4 566 2 147 2 305 2 470 2 249 2 795 2 150 2 37 2 151 2 39 2 634 2 684 2 524 2 577 2 156 4 644 2 482 2 530 2 162 2 320 2 324 2 389 2 
167 6 198 4 140 8 597 29 601 4 392 47 517 4 434 2 396 2 521 6 304 4 793 14 654 6 471 2 148 17 825 6 91 6 635 29 448 4 608 4 402 14 378 4 800 3 504 4 582 2 774 6 772 19 383 2 184 43 290 3 508 2 454 4 235 29 357 2 111 14 385 1 112 14 513 4 815 2 
482 2 499 2 687 2 
294 2 230 2 299 2 678 2 778 2 587 2 724 2 441 2 672 2 343 2 713 2 188 22 279 10 829 2 
167 4 421 2 597 2 141 2 392 6 248 2 434 2 304 2 793 2 148 2 635 2 41 2 401 2 402 2 638 2 772 2 287 2 184 4 102 2 316 2 235 2 111 2 112 2 
402 4 504 4 772 4 597 8 514 2 184 12 392 16 517 4 521 6 654 6 793 4 235 8 111 4 388 2 112 4 635 8 756 2 
197 2 488 2 703 4 594 2 539 2 219 4 201 4 467 4 302 62 730 2 397 10 442 2 824 2 90 4 151 4 573 2 499 2 826 4 685 2 254 2 687 6 688 4 524 2 381 4 773 4 260 2 776 2 482 8 70 2 46 2 858 14 106 4 835 2 51 2 24 2 317 2 237 4 534 4 592 10 675 2 
450 2 711 2 702 2 460 2 123 2 
2 2 537 1 538 2 652 2 334 2 431 1 544 1 548 2 337 2 339 2 8 2 552 2 655 2 344 2 656 2 448 30 769 2 349 2 20 2 25 6 242 2 27 2 561 2 139 2 361 4 459 4 247 2 463 2 30 8 789 3 568 2 367 2 372 2 153 6 476 17 379 2 257 2 480 2 804 4 49 2 590 2 387 8 486 1 390 2 56 3 267 2 172 1 391 1 599 1 601 32 709 3 820 2 393 2 494 1 173 1 60 1 61 1 176 2 714 3 828 2 827 11 716 1 67 6 502 1 284 11 183 2 288 2 408 2 615 2 616 4 837 2 413 2 292 2 81 2 196 2 621 2 84 1 298 2 300 4 87 2 845 3 518 2 203 8 88 2 735 2 632 2 739 8 205 5 424 2 851 16 207 1 852 1 209 2 643 2 526 1 856 1 212 2 103 6 105 1 752 2 215 2 861 2 319 2 
136 2 601 2 
601 4 33 2 145 2 
440 2 
216 8 650 4 220 4 5 2 6 4 7 2 222 2 435 4 433 2 438 8 439 14 443 4 657 8 10 2 445 4 12 4 447 2 660 4 15 4 451 4 231 2 664 2 17 2 666 16 19 2 233 2 668 8 453 2 23 146 238 12 26 2 243 22 676 48 245 2 679 2 465 4 468 20 680 2 681 46 35 2 682 2 472 6 474 2 252 2 253 36 689 4 478 2 690 2 256 2 258 2 481 10 259 2 691 2 692 8 45 2 693 6 261 2 264 20 695 6 52 4 696 4 53 46 697 8 487 2 490 4 58 2 269 14 493 2 270 6 271 4 495 2 274 2 503 2 283 2 69 6 505 2 719 2 720 10 721 2 286 46 723 2 72 2 73 8 75 2 77 2 512 46 79 2 296 2 520 4 733 4 89 2 738 2 522 2 311 2 95 2 97 2 525 2 313 6 529 42 750 8 107 2 109 4 108 2 318 2 753 2 755 36 532 2 322 16 757 46 325 4 114 36 116 2 536 4 329 2 331 2 332 2 540 20 333 2 335 4 759 2 546 46 547 46 340 14 338 2 763 4 766 24 125 2 770 2 129 20 131 4 133 2 134 2 559 2 783 2 362 2 364 4 365 176 565 8 788 2 144 46 143 2 792 2 794 8 572 4 574 2 374 2 377 4 575 146 578 24 380 2 581 4 583 2 803 4 805 14 159 28 806 26 813 4 811 8 164 16 816 4 818 2 603 2 607 146 178 10 182 46 403 4 610 22 405 2 830 2 612 2 185 2 833 2 409 2 187 2 414 2 415 2 192 4 838 2 193 2 618 46 420 2 199 2 622 2 624 4 627 2 843 2 844 8 846 46 848 4 636 4 850 2 206 2 645 2 213 2 859 4 428 48 647 8 429 2 
741 2 229 2 531 2 728 1 
531 2 555 2 
531 2 506 2 59 2 482 2 749 2 667 2 653 2 
132 2 531 2 653 2 
531 2 747 2 653 2 
229 2 68 2 92 2 
531 2 653 2 
382 2 92 2 
423 2 531 2 
229 2 92 2 567 2 
229 2 489 2 425 2 
229 2 658 2 758 2 
229 2 57 2 31 2 
229 2 588 2 444 2 
809 2 92 2 
531 2 195 2 
489 2 426 2 
1 2 758 2 
620 2 31 2 
593 2 444 2 
551 2 92 2 
444 2 278 2 
860 2 31 2 
823 2 758 2 
489 2 802 2 
229 2 562 2 92 2 567 2 
229 2 562 2 368 2 92 2 567 2 
229 2 92 2 466 2 
229 2 34 2 92 2 
154 2 662 2 611 2 179 2 
181 2 595 2 482 2 667 2 
181 2 496 2 595 2 59 2 482 2 667 2 
531 2 506 2 482 2 221 2 667 2 653 2 
326 2 324 2 
577 2 482 2 64 2 667 2 
42 2 31 2 
444 2 661 2 
489 2 641 2 
569 2 758 2 
55 2 444 2 758 2 
444 2 683 2 758 2 
461 2 444 2 758 2 
444 2 758 2 194 2 
312 6 507 2 482 2 667 2 275 2 227 2 
631 2 92 2 
175 2 557 2 251 2 649 2 729 2 
229 2 841 2 
769 2 
2 2 538 6 545 4 339 2 225 2 552 2 655 2 656 2 448 26 348 2 349 2 350 2 232 2 20 2 22 2 234 4 25 2 673 2 242 2 561 2 459 4 247 2 463 2 464 2 790 2 367 2 366 2 153 6 476 4 799 2 379 2 480 2 804 4 47 2 694 2 49 2 808 2 166 2 390 2 267 2 817 2 492 2 601 26 393 2 821 2 282 2 67 4 407 2 288 2 834 2 410 2 616 4 837 2 621 2 298 2 300 4 842 4 87 2 518 8 731 2 739 6 307 2 849 2 851 6 210 2 643 2 745 2 526 2 314 2 855 2 103 2 105 2 752 2 319 2 
2 2 538 6 541 2 545 4 339 2 225 2 552 2 655 2 656 2 448 26 348 2 349 2 350 2 232 2 20 2 22 2 234 4 25 2 242 2 27 2 561 2 459 4 247 2 463 2 464 2 790 2 367 2 366 2 372 2 153 6 476 4 799 2 379 2 480 2 804 4 47 2 694 2 49 2 808 2 484 2 166 2 390 2 267 2 817 2 601 26 393 2 821 2 282 2 67 6 407 2 288 2 834 2 410 2 616 4 837 2 509 2 191 2 621 2 298 2 300 4 842 4 87 2 518 8 731 2 739 6 307 2 851 6 210 2 643 2 745 2 526 2 314 2 855 2 103 2 105 2 752 2 319 2 
686 2 
295 2 542 2 
535 4 390 2 118 2 705 2 268 2 706 2 601 12 707 4 341 4 177 8 606 2 552 2 62 2 554 2 9 4 398 6 500 2 448 6 718 2 126 2 349 2 351 2 128 8 771 2 775 2 18 2 20 2 353 6 836 2 189 6 76 2 190 2 241 2 83 2 621 2 29 2 363 4 300 2 516 2 422 2 202 2 367 2 370 2 306 2 38 2 153 4 308 2 639 4 580 4 479 2 99 10 158 2 804 2 50 4 319 2 862 2 810 2 814 2 698 2 700 2 
535 4 390 2 118 2 705 2 268 2 706 2 601 12 707 4 341 4 762 4 177 8 552 2 62 2 554 2 9 4 398 8 500 2 448 6 718 2 126 2 349 2 351 2 128 8 771 2 775 2 832 2 18 2 20 2 353 8 836 2 76 2 189 6 190 2 241 2 83 2 621 2 29 2 363 4 300 2 516 2 202 2 367 2 370 2 306 2 38 2 152 2 153 4 308 2 639 4 580 4 479 2 99 10 158 2 804 2 589 2 50 4 319 2 862 2 810 2 814 2 698 2 700 2 
535 2 580 2 479 2 268 2 516 2 202 2 341 2 836 2 50 4 370 2 306 2 62 2 189 2 38 2 9 4 398 2 308 2 810 2 
535 4 390 2 118 2 705 2 268 2 706 2 601 12 707 4 341 4 177 4 606 2 552 2 62 2 554 2 9 4 398 6 500 2 448 6 718 2 126 2 349 2 351 2 128 4 771 2 775 2 832 2 18 2 20 2 353 6 836 2 189 4 76 2 190 2 241 2 83 2 621 2 29 2 363 4 300 2 516 2 422 2 202 2 367 2 370 2 306 2 38 2 153 4 308 2 639 4 580 4 479 2 99 6 158 2 804 2 50 4 319 2 862 2 810 2 814 2 698 2 
535 4 390 2 118 2 705 2 268 2 706 2 601 12 707 4 341 4 177 4 606 2 552 2 62 2 554 2 9 4 398 4 500 2 448 6 718 2 126 2 349 2 351 2 128 4 771 2 775 2 18 2 20 2 353 6 836 2 189 6 76 2 190 2 241 2 83 2 621 2 29 2 363 4 300 2 515 2 516 2 422 2 202 2 367 2 370 2 306 2 38 2 153 4 308 2 639 4 580 4 479 2 99 6 158 2 804 2 50 4 319 2 862 2 810 2 814 2 698 2 
535 4 390 2 118 2 705 2 268 2 706 2 601 12 707 4 341 4 177 8 606 2 552 2 62 2 554 2 9 4 398 6 500 2 448 6 718 2 126 2 349 2 351 2 128 4 771 2 775 2 18 2 20 2 353 6 836 2 189 6 76 2 190 2 241 2 83 2 621 2 29 2 363 4 300 2 516 2 422 2 202 2 367 2 370 2 306 2 38 2 153 4 308 2 639 4 580 4 479 2 99 6 158 2 804 2 50 4 319 2 862 2 810 2 814 2 698 2 700 2 
535 4 390 2 118 2 705 2 268 2 706 2 601 12 707 4 341 4 177 8 606 2 552 2 62 2 554 2 9 4 398 6 500 2 448 6 718 2 126 2 349 2 351 2 128 8 771 2 775 2 18 2 20 2 353 8 836 2 189 8 76 2 190 2 241 2 83 2 621 2 29 2 363 4 300 2 515 2 516 2 422 2 202 2 367 2 370 2 306 2 38 2 153 4 308 2 639 4 580 4 479 2 99 10 158 2 804 2 50 4 319 2 862 2 810 2 814 2 698 2 700 2 
535 4 390 2 118 2 705 2 268 2 706 2 601 12 707 4 341 4 177 8 606 2 552 2 62 2 554 2 9 4 398 6 500 2 448 6 718 2 126 2 349 2 351 2 128 8 771 2 775 2 18 2 20 2 353 6 836 2 189 6 76 2 190 2 241 2 83 2 621 2 29 2 363 4 300 2 516 2 422 2 202 2 367 2 370 2 306 2 38 2 153 4 308 2 639 4 580 4 479 2 99 10 158 2 804 2 50 4 319 2 862 2 810 2 814 2 698 2 700 2 
2 2 440 6 224 2 225 2 655 2 656 2 9 4 11 6 448 24 14 1 232 2 665 1 18 2 20 2 21 2 234 4 670 6 25 2 671 2 236 6 456 2 241 2 27 2 242 2 459 4 29 4 247 2 463 2 38 2 475 2 476 2 479 2 480 2 47 2 49 2 50 4 698 2 54 2 265 2 267 2 705 2 268 2 706 2 707 6 708 2 62 2 63 1 280 1 500 4 717 2 282 2 67 6 718 2 285 2 288 2 76 2 78 2 511 1 82 2 83 2 298 2 727 6 300 4 515 4 87 2 516 2 303 2 518 4 731 2 306 2 739 6 93 2 308 2 309 2 99 2 101 2 103 2 752 2 110 2 754 1 319 2 115 2 535 4 118 2 538 6 760 4 339 12 341 4 764 2 549 2 550 6 552 2 554 2 346 2 126 2 349 2 351 2 771 2 130 2 775 2 777 6 353 12 558 6 780 2 136 6 137 2 561 2 363 4 786 6 145 6 791 7 367 2 371 4 370 2 372 2 149 6 373 2 153 6 801 2 379 2 580 4 157 1 158 4 804 4 585 1 161 7 591 6 810 2 814 2 390 2 601 46 393 2 821 4 177 2 604 2 606 2 398 4 400 6 616 4 836 2 837 2 412 8 189 8 416 6 190 2 621 2 202 2 630 2 847 1 633 10 851 8 639 8 642 2 643 2 211 2 857 2 214 6 648 2 862 2 
535 4 118 2 2 2 538 6 760 4 545 2 339 12 341 4 440 6 549 2 764 2 224 2 550 6 225 2 655 2 552 2 656 2 554 2 9 4 11 6 448 26 346 2 126 2 349 2 351 2 232 2 771 2 130 2 775 2 777 6 18 2 20 2 21 2 353 12 558 6 670 6 234 4 25 2 671 2 236 6 136 6 780 2 456 2 137 2 241 2 242 2 27 2 561 2 459 4 786 6 29 4 363 4 463 2 247 4 32 2 145 6 367 2 370 2 371 4 373 2 149 6 372 2 38 2 153 6 475 2 476 2 801 2 379 2 580 4 479 2 480 2 158 4 804 4 47 2 49 2 50 4 591 6 810 2 814 2 698 2 700 4 54 2 265 2 390 2 267 4 705 2 268 2 708 2 707 6 601 48 706 2 821 4 393 2 177 6 604 2 606 2 62 2 398 8 500 4 400 6 717 2 282 2 67 6 718 2 285 2 288 2 616 4 836 2 837 2 412 8 416 6 76 2 189 8 190 2 78 2 82 2 83 2 85 2 621 2 727 6 298 2 300 4 87 2 516 2 303 2 518 8 202 2 731 2 630 2 306 2 633 10 739 6 93 2 308 2 309 2 851 8 639 8 99 2 642 2 643 4 101 2 211 2 103 2 857 2 214 6 110 2 752 2 319 2 648 2 862 2 115 2 
535 4 118 2 2 2 538 6 760 4 545 2 339 12 341 4 440 6 549 2 764 2 224 2 550 6 225 2 655 2 552 2 656 2 554 2 9 4 11 6 448 26 346 2 126 2 349 2 351 2 128 4 232 2 771 2 130 2 775 2 777 6 18 2 20 2 21 2 353 12 558 6 670 6 234 4 25 2 671 2 236 6 136 6 780 2 456 2 137 2 241 2 242 2 27 2 561 2 459 4 786 6 29 4 363 4 247 4 463 2 32 2 145 6 367 2 370 2 371 4 373 2 149 6 372 2 38 2 153 6 475 2 476 2 801 2 379 2 580 4 479 2 480 2 158 4 804 4 47 2 49 2 50 4 591 6 810 2 814 2 698 2 700 4 54 2 265 2 390 2 267 4 705 2 268 2 708 2 707 6 601 48 706 2 821 4 393 2 177 6 604 2 606 2 62 2 398 8 500 4 400 6 717 2 282 2 67 6 718 2 285 2 288 2 616 4 836 2 837 2 412 8 416 6 76 2 189 8 190 2 78 2 82 2 83 2 85 2 621 2 727 6 298 2 300 4 87 2 516 2 303 2 518 8 202 2 731 2 630 2 306 2 633 10 739 6 93 2 308 2 309 2 851 8 639 8 642 2 99 6 643 4 101 2 211 2 103 2 857 2 214 6 110 2 752 2 319 2 648 2 862 2 115 2 
2 2 4 6 440 12 224 2 225 4 655 2 656 2 9 4 11 6 448 24 232 2 18 2 20 2 21 2 234 6 670 12 25 4 671 2 236 6 240 2 456 2 241 2 27 2 242 2 459 4 29 4 463 2 247 4 469 6 32 2 38 2 475 2 476 4 479 2 480 2 48 2 47 2 49 2 50 4 483 2 698 2 700 4 54 2 265 2 267 4 705 2 268 2 706 2 707 6 708 2 62 2 500 4 717 2 282 2 67 6 718 2 285 2 288 2 71 6 76 2 78 2 293 6 82 2 83 2 85 2 298 2 727 12 300 4 515 2 87 2 301 2 516 2 303 2 518 10 731 4 306 2 739 8 93 2 308 2 309 2 742 2 99 6 748 2 746 6 100 2 101 2 103 4 315 2 752 2 110 2 319 2 115 2 535 4 118 2 538 8 330 6 760 4 545 2 339 10 341 4 764 2 549 2 550 6 552 2 554 2 767 6 346 2 126 2 349 2 351 2 128 4 771 2 130 2 775 2 777 6 353 16 558 6 354 6 136 12 137 2 561 2 363 4 786 6 145 12 367 2 371 4 370 2 372 2 149 6 373 2 153 6 801 2 379 2 580 4 158 4 804 4 591 6 810 2 814 2 390 2 601 52 393 2 821 4 177 6 604 2 606 2 398 10 400 6 832 2 616 4 836 2 837 2 412 8 189 10 416 12 190 2 839 6 621 2 202 2 630 2 633 8 851 12 639 8 642 2 643 4 211 2 857 2 214 6 648 2 862 2 
535 4 118 2 363 2 268 2 707 2 601 4 706 2 202 2 177 6 606 2 306 2 554 2 38 2 9 2 398 6 500 2 308 2 639 2 126 2 580 4 479 2 128 4 99 4 771 2 775 2 18 2 353 4 50 2 76 2 189 6 862 2 241 2 810 2 814 2 700 2 
535 4 2 2 118 2 538 6 121 2 339 4 552 2 655 2 656 2 554 2 9 2 448 24 769 2 126 2 349 2 232 2 771 2 775 2 18 2 20 2 353 4 234 4 25 3 780 2 241 2 242 2 27 2 561 2 459 4 363 2 563 2 463 2 146 3 367 2 372 2 38 2 153 6 476 3 379 2 580 4 479 2 257 2 480 2 804 4 49 2 50 2 810 2 814 2 700 2 390 2 705 2 171 2 268 2 707 2 706 2 601 28 393 2 821 2 177 6 606 2 398 6 180 2 500 2 282 2 67 6 288 2 616 4 186 2 837 2 189 6 76 2 621 2 298 2 300 4 87 2 202 2 88 2 306 2 633 2 739 6 308 2 424 2 851 8 639 2 99 2 103 3 752 2 319 2 862 2 
596 2 241 2 814 2 
596 2 241 2 814 2 
535 4 2 2 538 2 760 2 339 4 341 4 437 2 549 2 226 2 552 2 655 2 656 2 9 2 659 4 448 16 349 2 127 2 351 2 128 4 232 2 18 2 20 2 353 16 356 2 236 2 137 2 241 4 242 2 27 2 458 2 561 2 459 4 785 2 29 2 363 2 247 4 463 2 787 4 142 2 367 2 371 2 372 2 153 6 476 2 379 2 579 2 580 4 479 2 480 2 158 4 804 4 586 2 47 4 49 2 50 2 810 2 814 6 700 4 390 2 596 2 267 4 704 2 268 4 708 2 707 4 601 24 706 2 393 2 821 6 710 2 177 6 398 12 500 4 282 2 67 6 609 2 718 2 832 4 288 2 289 2 834 4 616 4 836 2 837 2 189 12 190 2 621 2 297 2 298 2 300 4 515 4 87 2 516 2 518 4 633 2 739 2 851 2 208 2 639 4 99 6 643 4 528 2 104 2 319 2 
297 2 542 2 601 4 527 2 760 2 104 2 339 2 669 2 437 2 370 2 369 2 671 2 236 2 552 2 633 2 309 2 448 2 
535 4 2 2 538 2 651 2 339 2 341 4 437 2 549 2 226 2 552 2 655 2 656 2 9 2 659 4 448 16 349 2 127 4 351 2 128 4 232 2 18 2 20 2 353 16 356 2 236 2 137 2 241 4 242 2 27 2 674 2 458 2 561 2 459 4 29 4 363 2 247 4 463 2 787 4 142 2 367 2 371 2 372 2 153 6 476 4 379 2 579 2 580 4 479 2 480 2 158 4 804 4 586 2 47 4 49 2 50 2 810 2 814 6 700 4 390 2 596 2 267 4 704 2 268 4 708 2 707 4 601 24 706 2 393 2 821 6 710 2 177 6 398 12 500 4 282 2 67 6 718 2 832 4 288 2 834 4 616 4 836 2 837 2 189 12 190 2 83 2 621 2 297 2 298 2 300 4 625 2 515 4 87 2 516 2 518 4 519 2 739 2 310 2 851 2 208 2 639 4 99 6 643 4 104 2 319 2 
535 4 2 2 538 2 120 2 336 2 760 2 339 4 341 4 437 2 549 2 226 2 552 2 655 2 553 2 656 2 9 2 659 4 448 16 349 2 127 2 351 2 128 4 232 2 18 2 20 2 353 16 356 2 236 2 137 2 241 4 242 2 27 2 458 2 561 2 459 4 29 4 363 2 247 4 463 2 787 4 142 2 367 2 371 2 372 2 153 6 476 2 379 2 579 2 580 4 479 2 584 2 480 2 158 4 804 4 586 2 47 4 49 2 50 2 810 2 814 6 700 4 390 2 596 2 267 4 704 2 268 4 708 2 707 4 601 24 706 2 393 2 821 6 710 2 177 6 398 12 500 4 282 2 67 6 718 2 832 4 288 2 834 4 616 4 836 2 837 2 189 12 190 2 83 2 621 2 297 2 298 2 200 2 300 4 515 4 87 2 516 2 518 4 633 2 739 2 851 2 208 2 639 4 99 6 643 4 104 2 319 2 
360 2 459 2 217 1 2 2 623 2 298 2 677 2 598 2 601 6 395 2 174 2 571 2 497 2 36 2 40 2 124 2 448 2 67 2 349 2 43 2 480 2 616 2 384 2 411 2 427 1 262 2 49 2 138 2 358 2 812 2 
328 2 538 2 626 2 600 2 601 2 628 4 602 2 276 2 225 6 228 2 739 2 476 3 448 2 281 2 851 2 404 1 751 2 103 3 234 2 25 3 752 2 263 2 533 2 418 3 560 2 
328 2 538 2 626 2 600 2 601 2 628 4 602 2 276 2 225 6 228 2 739 2 476 2 448 2 281 2 851 2 751 2 103 2 234 2 25 2 752 2 263 2 533 2 418 2 560 2 
328 2 538 2 626 2 600 2 601 2 628 4 602 2 276 2 225 6 228 2 739 2 476 2 448 2 281 2 851 2 751 2 103 2 234 2 25 2 752 2 263 2 533 2 418 2 560 2 
0 4 168 2 726 2 462 2 597 2 626 2 601 10 122 4 392 6 394 6 793 2 203 2 273 3 223 2 570 2 605 3 635 2 715 2 476 3 448 4 851 2 523 2 477 2 402 2 743 3 406 2 774 4 184 4 352 4 103 3 454 2 235 2 752 2 111 2 387 2 321 4 112 2 782 2 457 4 699 2 
0 4 168 2 597 2 601 10 392 4 122 4 394 6 396 2 223 2 273 2 605 2 715 2 448 4 402 2 406 2 774 4 772 2 184 4 352 4 235 2 454 2 782 2 457 4 726 2 462 2 626 2 203 2 793 2 570 2 148 2 635 2 476 2 851 2 477 2 523 2 743 2 103 2 752 2 387 2 111 2 112 2 321 4 699 2 
0 4 168 2 597 2 601 10 392 4 122 4 394 6 396 2 223 2 273 2 605 2 715 2 448 4 402 2 406 2 774 4 772 2 184 4 352 4 235 2 454 2 782 2 457 4 726 2 462 2 626 2 203 2 793 2 570 2 148 2 635 2 476 2 851 2 477 2 523 2 743 2 103 2 752 2 387 2 111 2 112 2 321 4 699 2 
0 4 168 2 597 2 601 10 392 4 122 4 394 6 396 2 223 2 273 2 605 2 715 2 448 4 402 2 406 2 774 4 772 2 184 4 352 4 235 2 454 2 782 2 457 4 726 2 462 2 626 2 203 2 793 2 570 2 148 2 635 2 476 2 851 2 477 2 523 2 743 2 103 2 752 2 387 2 111 2 112 2 321 4 699 2 
0 4 168 2 597 2 601 10 392 4 122 4 394 6 396 4 223 2 273 2 605 2 715 2 448 4 402 2 406 2 774 4 772 4 184 4 352 4 235 2 454 2 782 2 457 4 726 2 462 2 626 2 203 2 793 2 570 2 148 4 635 2 476 2 851 2 477 2 523 2 743 2 103 2 752 2 387 2 111 2 112 2 321 4 699 2 
646 2 712 2 701 2 239 2 725 2 797 2 
22 2 96 2 576 2 737 2 375 2 797 2 272 2 
244 2 430 2 491 2 543 2 601 10 436 2 824 1 399 1 376 2 66 2 448 8 449 2 98 2 722 2 452 2 670 2 455 2 319 2 781 2 359 1 113 2 323 1 163 2 675 1 165 2 80 2 
402 2 853 2 16 2 504 2 597 2 44 2 119 2 184 4 392 5 793 2 654 4 235 2 111 2 386 2 112 2 635 2 
0 2 155 2 819 4 601 1 122 2 613 7 629 2 779 2 736 2 498 2 417 2 457 2 798 2 255 1 448 1 13 2 
0 2 155 2 432 2 819 4 122 2 613 4 629 2 779 2 736 4 498 2 417 2 457 2 798 2 
0 2 155 2 432 2 819 4 601 1 122 2 613 4 629 2 779 2 736 4 498 2 417 2 457 2 798 2 255 1 448 1 
0 2 155 2 819 2 122 2 613 2 629 2 779 2 736 2 498 2 417 2 457 2 798 2 
342 1 355 1 135 2 28 2 473 2 
28 2 135 2 473 2 
28 2 135 2 473 2 
28 2 135 2 473 2 
637 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (650,783,786) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 100 233 336 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 100 233 336 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 224 390 8 305 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 321 443 329 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 321 443 329 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 845 321 443 329 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 715 321 443 329 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:lexLTE([I[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:max([I)I
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
utilMDE.MathMDE:gcd([I)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 86983 | return null
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfo:new_ppt()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:dimensions()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.Invariant:logDetail()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 3426 | 0 -> -1
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:hashCode()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:updateResults()V | ASSIGN | 3964 | = null
daikon.Quant:eltsLtIndex([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern:intern([J)[J
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7310 | = null
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaCharStream:FillBuff()V
daikon.diff.RootNode:RootNode()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern:numIntArrays()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName:hashCode()I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:eltsLT([II)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ProglangType:isFloat()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptName:isEnterPoint()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:arity()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:InvMap()V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ProglangType:baseIsScalar()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:memberOf(I[I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.MathMDE:gcd(II)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:gte(II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptSlice1:num_samples()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet; | OPERATOR | 1556 | == -> !=
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3_16()Z
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:size()I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern:intern([I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:union([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Ppt:Ppt()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.MathMDE:modulus([I)[I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:negate(I)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:num_samples()I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:noDups([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:intersection([I[I)[I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.Invariants:Invariants()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Assert:assertTrue(Z)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:eltwiseGT([I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.Node:Node()V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ProglangType:isScalar()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:isReverse([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I | CONSTANT | 21933 | 99 -> 1
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String; | OPERATOR | 49349 | > -> ==
daikon.Quant:lte(II)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:relate_var()V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltsGTE([II)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsFloat()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.ProglangType:isIntegral()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:gt(II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
259 2 743 2 777 2 554 2 786 2 669 2 53 2 191 2 335 4 
544 2 355 6 656 2 232 6 575 2 119 6 372 2 664 2 702 2 784 2 493 2 
169 2 186 6 554 2 818 2 370 2 48 2 482 6 502 2 410 4 447 6 461 6 669 2 14 4 
570 10 822 2 61 2 264 10 579 10 693 2 669 6 113 4 509 8 269 16 271 16 430 4 677 8 246 4 554 6 46 2 517 6 407 10 21 2 253 2 148 6 562 4 591 29 229 8 724 12 155 26 759 8 761 2 231 16 353 10 
403 6 225 4 
163 2 
570 2 604 2 496 2 264 4 579 2 66 2 315 2 269 2 271 2 246 2 677 2 173 2 750 2 517 2 407 2 252 2 681 2 488 2 591 6 724 2 155 4 231 2 353 2 
354 4 767 6 570 4 407 4 562 2 203 4 843 6 579 4 35 2 591 14 67 2 724 5 155 12 269 8 231 8 271 8 353 4 
731 2 602 4 436 4 136 2 27 2 333 2 439 2 826 8 769 4 474 4 446 4 364 10 578 10 504 2 241 2 834 4 393 2 771 2 835 4 293 4 583 2 711 2 479 4 803 4 714 2 516 4 17 2 557 2 120 2 176 2 484 2 296 14 458 4 180 2 206 4 126 2 844 6 54 2 598 2 523 62 
86 2 107 2 645 2 547 2 74 2 147 2 680 2 163 2 83 2 99 2 
135 2 136 2 634 2 235 2 250 2 498 2 781 2 471 2 826 2 519 2 253 2 78 2 22 2 474 4 456 2 325 2 786 2 12 2 293 2 306 2 
570 4 677 2 16 4 554 4 407 4 362 4 579 4 591 5 593 2 183 2 669 4 724 4 155 4 452 8 353 4 
714 2 844 2 826 2 
332 2 57 2 633 2 223 2 144 2 89 2 254 2 757 10 695 2 508 22 726 2 772 2 270 2 584 2 
216 2 308 1 421 2 109 2 529 2 741 2 530 2 314 2 10 6 114 2 641 3 429 2 316 2 222 2 317 1 18 2 751 2 646 2 320 2 124 6 755 8 756 2 433 16 127 2 760 12 542 1 762 24 331 16 655 1 137 2 437 2 662 4 440 2 665 4 336 2 32 3 667 2 448 1 669 32 342 2 670 2 37 1 39 2 672 3 141 8 41 2 777 2 554 34 248 2 555 2 346 2 558 8 454 2 47 6 145 2 49 2 50 1 349 2 457 2 682 2 459 2 352 1 152 2 256 2 56 3 789 2 686 2 356 2 357 2 469 1 577 6 361 2 796 2 58 2 363 3 60 1 475 4 476 2 65 2 266 24 581 2 800 2 70 2 802 2 696 2 366 4 369 3 804 2 481 2 175 4 806 2 805 2 483 2 588 2 178 2 374 2 79 2 179 3 594 2 597 2 599 2 281 2 815 2 706 2 190 3 284 1 386 2 387 1 827 2 607 3 286 16 829 32 389 2 287 3 831 4 193 2 832 1 95 2 836 2 614 2 196 2 615 5 197 2 294 2 716 3 401 32 617 2 839 2 406 2 404 2 408 2 518 1 842 16 102 2 723 1 625 2 299 2 521 2 411 1 207 4 104 2 728 2 212 2 847 2 213 3 730 2 307 4 
657 2 
554 2 813 2 
554 4 505 2 485 2 
158 6 159 2 525 10 687 6 632 10 468 2 576 2 262 16 360 10 637 8 794 2 110 2 4 12 162 6 740 2 63 4 267 12 580 12 425 12 268 2 11 10 477 4 478 40 747 2 642 2 368 10 371 12 322 2 123 4 539 2 377 12 379 2 490 4 230 6 812 2 185 2 816 40 764 4 765 8 134 2 603 4 91 12 239 6 138 2 666 8 288 12 770 2 290 4 139 4 339 2 36 40 97 18 712 4 552 4 673 2 674 12 198 12 345 12 778 6 347 2 621 8 348 2 350 2 623 2 785 2 566 4 685 2 627 2 415 2 
763 2 596 2 722 1 774 2 
596 2 600 2 
430 2 220 2 700 2 596 2 826 2 344 2 647 2 
112 2 596 2 344 2 
9 2 596 2 344 2 
790 2 768 2 774 2 
596 2 344 2 
790 2 351 2 
301 2 596 2 
790 2 274 2 774 2 
708 2 382 2 774 2 
84 2 848 2 774 2 
658 2 787 2 774 2 
638 2 622 2 774 2 
790 2 671 2 
170 2 596 2 
240 2 382 2 
734 2 848 2 
787 2 692 2 
569 2 622 2 
790 2 412 2 
192 2 622 2 
237 2 787 2 
71 2 848 2 
382 2 143 2 
790 2 274 2 618 2 774 2 
790 2 44 2 274 2 618 2 774 2 
790 2 807 2 774 2 
790 2 746 2 774 2 
76 2 798 2 243 2 725 2 
610 2 337 2 220 2 826 2 
610 2 337 2 220 2 700 2 522 2 826 2 
430 2 220 2 596 2 826 2 344 2 587 2 
313 2 639 2 
430 2 194 2 220 2 826 2 
787 2 445 2 
817 2 622 2 
204 2 382 2 
848 2 619 2 
491 2 848 2 622 2 
0 2 848 2 622 2 
848 2 282 2 622 2 
848 2 620 2 622 2 
733 6 334 2 470 2 826 2 64 2 220 2 42 2 489 6 
790 2 318 2 
513 2 766 4 309 2 821 2 380 2 38 2 455 2 108 2 
420 2 774 2 
408 2 
357 2 577 6 59 2 58 2 529 2 476 2 65 2 800 2 696 2 118 2 18 2 804 2 751 6 481 2 805 2 806 2 175 4 815 2 233 2 495 4 440 2 662 4 665 4 336 2 831 4 448 2 669 14 836 2 100 2 41 2 777 2 554 14 401 6 555 2 406 2 47 4 201 2 842 6 457 2 349 2 682 2 564 2 
357 2 577 6 59 2 58 2 529 2 476 2 65 2 800 2 696 2 429 2 118 2 804 2 18 2 751 6 481 2 805 2 806 2 175 4 815 2 233 2 495 4 440 2 662 4 665 4 336 2 831 4 448 2 669 14 836 2 100 2 41 2 777 2 554 14 401 6 555 2 404 2 406 2 47 6 201 2 842 6 457 2 349 2 682 2 564 2 
319 2 
688 2 236 2 
355 6 160 4 572 2 571 2 577 4 793 2 738 4 164 8 5 10 265 2 476 2 219 2 426 4 168 2 643 2 480 2 172 2 174 2 804 2 18 2 538 4 481 2 119 6 372 4 805 2 752 4 702 4 590 2 227 2 808 2 228 8 810 2 328 2 544 2 545 2 232 6 189 4 383 2 662 2 823 2 442 2 606 2 664 2 503 2 665 2 830 2 34 2 833 2 669 6 291 2 96 2 507 2 836 2 398 2 200 2 676 2 554 12 555 2 303 2 304 2 
355 8 572 2 571 2 160 4 1 2 577 4 793 2 738 4 164 8 5 10 265 2 476 2 426 4 168 2 643 2 480 2 172 2 174 2 804 2 18 2 538 4 481 2 119 6 372 4 805 2 752 4 702 4 590 2 227 2 228 8 327 2 810 2 328 2 544 2 545 2 656 2 232 8 189 4 383 2 662 2 823 2 442 2 606 2 664 2 503 2 665 2 830 2 34 2 833 2 669 6 291 2 96 2 507 2 341 4 836 2 398 2 200 2 676 2 554 12 555 2 303 2 304 2 
355 2 676 2 571 2 160 4 538 2 119 2 372 2 823 2 738 4 702 2 590 2 833 2 291 2 303 2 507 2 328 2 168 2 398 2 
355 6 160 4 572 2 571 2 577 4 793 2 738 4 164 4 5 6 265 2 476 2 219 2 426 4 168 2 643 2 480 2 172 2 174 2 804 2 18 2 538 4 481 2 119 4 372 4 805 2 752 4 702 4 590 2 227 2 808 2 228 4 810 2 328 2 544 2 545 2 656 2 232 6 189 4 383 2 662 2 823 2 442 2 606 2 503 2 665 2 830 2 34 2 833 2 669 6 291 2 96 2 507 2 836 2 398 2 200 2 676 2 554 12 555 2 303 2 304 2 
355 4 160 4 572 2 571 2 577 4 793 2 738 4 164 4 5 6 265 2 476 2 219 2 426 4 168 2 643 2 480 2 172 2 174 2 804 2 18 2 538 4 481 2 119 6 372 4 805 2 752 4 702 4 590 2 227 2 808 2 228 4 810 2 328 2 544 2 545 2 232 6 189 4 383 2 662 2 823 2 442 2 606 2 503 2 665 2 830 2 34 2 833 2 669 6 291 2 96 2 507 2 836 2 398 2 200 2 676 2 554 12 555 2 784 2 303 2 304 2 
355 6 160 4 572 2 571 2 577 4 793 2 738 4 164 8 5 6 265 2 476 2 219 2 426 4 168 2 643 2 480 2 172 2 174 2 804 2 18 2 538 4 481 2 119 6 372 4 805 2 752 4 702 4 590 2 227 2 808 2 228 4 810 2 328 2 544 2 545 2 232 6 189 4 383 2 662 2 823 2 442 2 606 2 664 2 503 2 665 2 830 2 34 2 833 2 669 6 291 2 96 2 507 2 836 2 398 2 200 2 676 2 554 12 555 2 303 2 304 2 
355 6 160 4 572 2 571 2 577 4 793 2 738 4 164 8 5 10 265 2 476 2 219 2 426 4 168 2 643 2 480 2 172 2 174 2 804 2 18 2 538 4 481 2 119 8 372 4 805 2 752 4 702 4 590 2 227 2 808 2 228 8 810 2 328 2 544 2 545 2 232 8 189 4 383 2 662 2 823 2 442 2 606 2 664 2 503 2 665 2 830 2 34 2 833 2 669 6 291 2 96 2 507 2 836 2 398 2 200 2 676 2 554 12 555 2 784 2 303 2 304 2 
355 6 160 4 572 2 571 2 577 4 793 2 738 4 164 8 5 10 265 2 476 2 219 2 426 4 168 2 643 2 480 2 172 2 174 2 804 2 18 2 538 4 481 2 119 6 372 4 805 2 752 4 702 4 590 2 227 2 808 2 228 8 810 2 328 2 544 2 545 2 232 6 189 4 383 2 662 2 823 2 442 2 606 2 664 2 503 2 665 2 830 2 34 2 833 2 669 6 291 2 96 2 507 2 836 2 398 2 200 2 676 2 554 12 555 2 303 2 304 2 
214 4 630 6 218 6 635 2 5 2 219 2 10 2 426 6 13 2 15 1 429 2 643 2 18 2 648 1 227 4 24 2 232 12 657 6 28 2 660 6 440 2 662 4 441 6 442 2 665 4 34 2 669 24 41 2 676 2 247 6 678 1 249 2 47 6 457 2 682 2 257 2 258 2 58 2 59 2 691 6 473 2 475 2 476 2 265 2 62 1 65 2 696 2 480 2 481 2 275 2 702 4 82 2 494 2 704 2 87 2 495 4 499 4 503 2 505 6 96 2 291 2 507 2 511 7 717 10 101 2 300 8 303 2 304 2 729 2 106 2 738 4 529 12 527 2 739 2 744 2 534 6 751 6 119 8 538 4 752 4 121 2 124 2 755 2 326 6 328 2 541 2 760 4 544 4 545 2 336 2 550 2 777 2 554 46 779 1 555 2 349 2 149 2 564 2 784 4 788 2 157 1 355 4 160 4 571 2 572 2 357 2 359 6 577 6 793 2 164 2 797 2 165 6 800 2 168 2 366 2 171 2 172 4 804 2 174 2 372 4 805 2 175 4 806 2 590 2 810 2 811 2 813 6 815 2 189 8 383 2 823 2 824 1 825 6 606 2 386 2 385 1 605 7 829 2 609 1 831 4 830 2 833 2 836 2 837 2 397 2 398 2 200 2 401 8 404 2 406 2 405 6 840 2 201 4 841 6 202 2 842 6 409 2 626 2 207 2 
214 4 630 6 635 2 218 6 738 4 739 2 527 2 529 12 5 2 742 2 744 2 219 2 10 2 426 6 13 2 534 6 429 2 643 2 18 2 751 6 538 4 119 8 121 2 752 4 124 2 755 2 227 4 326 6 24 2 541 2 328 2 760 8 544 4 545 2 657 6 232 12 660 6 28 2 662 4 440 2 441 6 442 2 664 4 665 4 336 2 550 2 34 2 669 26 41 2 777 2 676 2 247 6 554 48 555 2 249 2 47 6 457 2 349 2 149 2 682 2 564 2 788 2 258 2 257 2 355 8 572 2 571 2 160 4 357 2 359 6 577 6 793 2 691 6 59 2 58 2 473 2 475 4 797 2 164 6 165 6 265 2 476 2 65 2 168 2 800 2 696 2 366 4 171 2 480 2 172 4 174 2 804 2 481 2 372 4 806 2 175 4 805 2 275 2 702 4 590 2 82 2 810 2 811 2 704 2 494 2 813 6 815 2 87 2 495 4 383 2 189 8 500 2 499 4 823 2 825 6 386 2 606 2 827 2 503 2 829 2 830 2 831 4 505 6 833 2 291 2 96 2 507 2 836 2 837 2 397 2 398 2 200 2 401 8 717 10 840 2 405 6 406 2 404 2 841 6 101 2 201 4 202 2 409 2 842 6 626 2 300 8 207 4 303 2 304 2 729 2 106 2 
214 4 630 6 635 2 218 6 738 4 739 2 527 2 529 12 5 6 742 2 744 2 219 2 10 2 426 6 13 2 534 6 429 2 643 2 18 2 751 6 538 4 119 8 121 2 752 4 124 2 755 2 227 4 326 6 228 4 24 2 541 2 328 2 760 8 544 4 545 2 657 6 232 12 660 6 28 2 440 2 662 4 441 6 442 2 664 4 665 4 336 2 550 2 34 2 669 26 41 2 777 2 676 2 247 6 554 48 555 2 249 2 47 6 457 2 349 2 149 2 682 2 564 2 788 2 258 2 257 2 355 8 572 2 571 2 160 4 357 2 359 6 577 6 793 2 691 6 59 2 58 2 473 2 475 4 797 2 164 6 165 6 265 2 476 2 65 2 168 2 800 2 696 2 366 4 171 2 480 2 172 4 174 2 804 2 481 2 372 4 806 2 175 4 805 2 275 2 702 4 590 2 82 2 810 2 811 2 704 2 494 2 813 6 815 2 87 2 495 4 383 2 189 8 500 2 499 4 823 2 825 6 386 2 606 2 827 2 503 2 829 2 830 2 831 4 505 6 833 2 291 2 96 2 507 2 836 2 837 2 397 2 398 2 200 2 401 8 717 10 840 2 405 6 406 2 404 2 841 6 101 2 201 4 202 2 409 2 842 6 626 2 300 8 207 4 303 2 304 2 729 2 106 2 
214 4 630 12 218 6 635 2 5 6 219 2 10 4 426 6 13 2 429 2 643 2 18 2 227 4 228 4 24 2 656 2 232 16 657 12 28 2 660 6 662 4 440 2 441 6 442 2 664 4 665 4 34 2 669 24 41 2 676 2 247 6 249 2 47 6 457 2 682 2 460 2 55 2 257 2 258 2 58 2 59 2 691 6 475 4 476 2 265 2 65 2 696 2 480 2 481 2 275 2 702 4 82 2 279 2 494 2 704 2 705 2 87 2 495 6 500 2 499 4 503 2 505 12 96 2 291 2 507 2 717 8 101 2 300 8 303 2 304 2 729 2 106 2 524 6 736 6 738 4 739 2 529 10 311 6 527 2 742 2 744 2 745 6 534 12 117 6 751 8 119 10 538 4 752 4 121 2 124 4 755 4 326 6 328 2 541 2 760 10 544 4 545 2 336 2 550 2 140 2 777 2 554 52 555 2 349 2 149 2 564 2 784 2 788 2 153 6 355 10 160 4 571 2 572 2 357 2 358 6 359 6 791 6 577 6 793 2 164 6 797 2 165 6 800 2 168 2 366 4 171 2 172 4 174 2 804 2 372 4 805 2 175 4 806 2 590 2 810 2 811 4 813 12 815 2 187 6 189 8 383 2 823 2 825 6 606 2 386 2 827 2 829 4 831 4 830 2 391 2 833 2 395 2 836 2 837 2 397 2 398 2 200 2 401 12 404 2 406 2 405 12 840 2 201 4 841 6 202 2 842 8 409 2 626 2 207 4 414 2 
544 2 355 6 232 4 572 2 571 2 160 2 383 2 189 2 823 2 664 2 606 2 738 2 503 2 5 4 164 6 830 2 219 2 34 2 426 2 291 2 643 2 480 2 676 2 200 2 554 4 119 6 372 4 752 2 702 4 590 2 228 4 810 2 303 2 304 2 328 2 
738 2 529 4 5 2 219 2 10 3 426 2 640 2 429 2 643 2 644 2 18 2 751 6 119 6 752 2 124 3 328 2 544 2 232 4 662 4 440 2 664 2 665 4 336 2 34 2 669 24 41 2 777 2 676 2 554 28 555 2 346 2 47 6 782 3 349 2 457 2 682 2 564 2 355 6 160 2 571 2 572 2 357 2 577 6 58 2 59 2 473 2 164 6 476 2 65 2 800 2 696 2 480 2 367 2 804 2 481 2 372 4 806 2 175 4 805 2 702 4 589 2 590 2 810 2 599 2 815 2 383 2 189 2 495 4 823 2 606 2 503 2 388 2 829 3 831 4 830 2 96 2 291 2 836 2 200 2 401 8 717 2 406 2 404 2 408 2 201 2 842 6 303 2 304 2 730 2 
200 2 668 2 383 2 
200 2 668 2 383 2 
214 2 418 2 738 2 529 4 5 6 426 4 221 4 429 2 18 2 751 2 538 4 119 12 752 2 227 2 228 4 131 2 541 2 760 4 544 4 545 2 656 4 232 16 661 2 662 4 440 2 664 4 665 4 668 2 669 16 340 2 41 2 777 2 554 24 555 2 47 6 561 2 349 2 457 2 682 2 564 2 784 4 788 2 464 2 257 2 355 12 160 2 357 2 574 4 577 6 263 2 58 2 59 2 475 4 164 6 265 2 476 2 65 2 799 2 800 2 696 2 366 4 697 2 480 2 172 4 174 2 804 2 481 2 372 4 175 4 806 2 805 2 75 4 702 4 590 2 182 2 815 2 188 2 383 6 189 4 283 2 499 2 823 2 825 2 386 4 503 2 829 2 831 4 289 2 833 2 836 2 292 2 398 2 515 2 200 4 616 2 401 2 717 2 406 2 404 2 201 6 720 2 842 2 207 4 303 4 
73 2 554 4 688 2 418 2 717 2 438 2 499 2 825 2 561 2 529 2 149 2 476 2 82 2 669 2 464 2 168 2 427 2 
214 2 631 2 418 2 738 2 529 2 5 6 426 4 221 4 429 2 18 2 751 2 538 4 119 12 752 2 227 4 228 4 541 2 760 4 544 4 545 2 656 4 232 16 659 2 662 4 440 2 664 4 665 4 668 2 669 16 340 2 245 2 41 2 675 2 777 2 554 24 555 2 47 6 561 2 349 2 457 2 682 2 564 2 784 4 788 2 464 2 257 2 355 12 160 2 357 2 574 4 577 6 793 2 263 2 58 2 59 2 475 4 164 6 265 2 476 2 65 2 800 2 696 2 366 4 697 2 273 2 480 2 172 4 174 2 804 2 481 2 372 4 175 4 806 2 805 2 75 4 702 4 590 2 182 2 815 2 188 2 383 6 189 4 283 4 823 2 825 2 386 4 503 2 829 4 831 4 289 2 833 2 836 2 292 2 398 2 200 4 616 2 401 2 406 2 404 2 201 6 720 2 842 2 207 4 303 4 
214 2 418 2 738 2 529 4 5 6 426 4 221 4 429 2 536 2 748 2 18 2 751 2 538 4 119 12 752 2 227 4 228 4 541 2 760 4 544 4 545 2 656 4 232 16 662 4 440 2 664 4 665 4 668 2 669 16 340 2 41 2 777 2 554 24 555 2 47 6 561 2 349 2 457 2 150 2 682 2 564 2 784 4 788 2 464 2 257 2 355 12 160 2 357 2 161 2 574 4 577 6 793 2 263 2 58 2 59 2 475 4 164 6 265 2 476 2 65 2 800 2 696 2 366 4 697 2 480 2 172 4 174 2 804 2 481 2 372 4 175 4 806 2 805 2 75 4 702 4 590 2 182 2 815 2 188 2 383 6 189 4 283 2 499 2 823 2 825 2 386 4 503 2 829 2 831 4 289 2 833 2 836 2 292 2 398 2 514 2 200 4 616 2 401 2 717 2 406 2 404 2 201 6 720 2 842 2 207 4 303 4 
732 4 636 2 737 6 2 2 3 4 422 2 529 2 7 2 531 6 8 2 532 2 10 6 115 2 429 2 118 2 644 2 18 2 751 12 224 2 753 2 754 2 124 6 755 8 226 2 649 2 540 2 128 2 23 2 758 2 654 2 760 20 132 2 231 4 330 2 133 2 233 2 662 4 440 2 665 4 336 2 448 2 450 2 669 22 451 2 553 18 40 2 41 2 142 2 777 2 677 4 554 28 556 2 555 2 249 2 47 4 559 2 782 2 349 2 682 2 563 2 684 2 565 2 255 8 152 2 155 6 353 2 354 4 570 2 466 18 357 2 261 8 690 4 577 6 795 2 58 2 59 2 476 2 579 2 694 2 166 8 68 2 269 4 800 2 801 6 585 2 271 4 696 2 367 2 804 2 481 2 805 2 175 2 373 2 275 2 486 2 589 2 276 2 376 4 591 8 378 6 703 4 278 2 811 8 280 4 815 2 820 2 819 2 495 10 497 2 285 6 386 2 828 2 829 6 388 2 709 2 390 2 831 2 392 2 94 2 836 2 396 2 837 2 397 2 100 2 399 2 401 18 407 2 404 2 201 2 101 2 202 2 719 2 297 2 842 12 843 6 298 2 626 2 208 4 210 1 724 4 105 2 211 2 305 2 629 2 
26 2 215 2 495 2 310 2 472 2 829 3 336 2 33 4 10 3 669 2 554 2 401 2 751 2 721 2 679 2 124 3 842 2 487 2 431 2 80 2 595 2 811 6 568 3 814 2 
26 2 215 2 495 2 310 2 472 2 829 2 336 2 33 4 10 2 669 2 554 2 401 2 751 2 721 2 679 2 124 2 842 2 487 2 431 2 80 2 595 2 811 6 568 2 814 2 
26 2 215 2 495 2 310 2 472 2 829 2 336 2 33 4 10 2 669 2 554 2 401 2 751 2 721 2 679 2 124 2 842 2 487 2 431 2 80 2 595 2 811 6 568 2 814 2 
217 2 417 4 570 2 573 4 663 2 286 2 829 3 336 2 312 3 423 2 579 2 669 4 394 2 582 2 509 4 269 2 713 4 271 2 199 2 775 2 43 2 554 10 45 2 401 2 407 2 146 3 77 2 124 3 148 2 487 2 432 6 624 4 591 6 129 2 81 4 209 3 155 4 231 2 353 2 331 2 
217 2 417 4 570 2 573 4 663 2 822 2 286 2 829 2 336 2 312 2 423 2 579 2 669 4 394 2 582 2 509 4 269 2 713 4 271 2 199 2 775 2 43 2 677 2 554 10 45 2 401 2 407 2 146 2 77 2 124 2 148 2 487 2 432 6 624 4 591 4 129 2 81 4 209 2 724 2 155 4 231 2 353 2 331 2 
217 2 417 4 570 2 573 4 663 2 822 2 286 2 829 2 336 2 312 2 423 2 579 2 669 4 394 2 582 2 509 4 269 2 713 4 271 2 199 2 775 2 43 2 677 2 554 10 45 2 401 2 407 2 146 2 77 2 124 2 148 2 487 2 432 6 624 4 591 4 129 2 81 4 209 2 724 2 155 4 231 2 353 2 331 2 
217 2 417 4 570 2 573 4 663 2 822 2 286 2 829 2 336 2 312 2 423 2 579 2 669 4 394 2 582 2 509 4 269 2 713 4 271 2 199 2 775 2 43 2 677 2 554 10 45 2 401 2 407 2 146 2 77 2 124 2 148 2 487 2 432 6 624 4 591 4 129 2 81 4 209 2 724 2 155 4 231 2 353 2 331 2 
217 2 417 4 570 2 573 4 663 2 822 4 286 2 829 2 336 2 312 2 423 2 579 2 669 4 394 2 582 2 509 4 269 2 713 4 271 2 199 2 775 2 43 2 677 4 554 10 45 2 401 2 407 2 146 2 77 2 124 2 148 2 487 2 432 6 624 4 591 4 129 2 81 4 209 2 724 4 155 4 231 2 353 2 331 2 
399 2 435 2 338 2 727 2 628 2 465 2 
6 2 651 2 703 2 707 2 718 2 727 2 25 2 
601 1 630 2 467 2 548 2 30 2 92 2 365 2 244 2 669 8 393 1 612 2 613 2 343 2 533 2 116 1 510 2 428 2 749 1 554 10 402 2 698 2 481 2 251 2 126 1 809 2 413 2 
354 2 732 2 570 6 384 2 822 2 362 2 579 6 242 2 669 2 506 2 269 4 509 4 452 2 271 4 72 2 554 2 16 2 677 2 407 6 486 2 148 2 205 2 843 4 650 2 783 2 591 13 155 10 724 4 543 2 231 4 330 2 353 6 
260 2 416 1 776 2 417 2 554 1 526 2 419 7 19 2 295 2 324 2 375 2 81 2 669 1 130 2 103 2 710 4 512 2 713 2 
260 4 776 2 417 2 526 2 419 6 19 2 295 4 324 4 375 2 81 2 103 2 130 2 710 4 512 2 713 2 
260 8 416 1 776 6 417 2 554 1 526 2 419 10 19 2 295 8 324 8 375 2 81 2 669 1 103 8 130 2 710 4 512 2 713 2 
260 2 417 2 526 2 419 2 19 2 295 2 324 2 375 2 81 2 130 2 710 2 512 2 713 2 
357 2 111 1 429 2 321 2 175 2 122 2 85 2 329 2 546 2 443 2 608 1 831 2 611 1 669 8 453 2 41 2 554 8 404 2 47 4 349 2 154 2 846 1 
735 2 357 2 689 2 792 4 528 2 424 2 111 2 167 2 69 2 535 2 272 2 699 2 701 2 321 2 175 12 20 2 125 4 177 2 181 2 592 2 652 2 277 2 85 20 184 4 492 2 329 2 434 2 88 2 546 2 234 2 443 2 444 2 501 2 90 2 238 2 31 2 831 12 449 2 93 2 669 28 551 2 98 2 773 2 838 2 41 2 554 28 400 2 780 2 47 24 560 2 520 2 349 2 683 2 51 2 151 2 567 2 52 2 462 2 463 2 
546 2 357 2 29 2 443 2 608 2 90 2 549 2 831 6 669 14 195 2 429 4 272 2 41 2 586 2 554 14 47 14 404 4 175 6 321 2 520 2 349 2 51 2 845 2 52 2 567 2 462 2 85 4 463 2 329 2 156 2 
546 2 357 2 29 2 443 2 608 2 90 2 831 6 111 2 669 14 195 2 429 4 272 2 41 2 554 16 537 2 715 2 47 16 404 4 175 6 321 2 323 2 520 2 349 2 51 2 52 2 567 2 653 2 462 2 85 4 302 2 463 2 329 2 
381 2 

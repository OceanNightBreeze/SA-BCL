#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.IllegalArgumentException 804 804 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 350 120 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (23,333) (23,333) (457,487,498,547,792) (457,487,498,547,792) (457,487,498,547,792) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (537,763) (537,763) 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 16 16 768 (575,770) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 16 16 768 (575,770) (575,770) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 16 16 768 (575,770) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 661 601 123 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 248 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 588 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.Error 230 1 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.Error 230 1 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.Error 230 1 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 230 1 
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 77 683 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 77 683 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_135()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer; | RETURN | 13631 | return null
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Invariants:Invariants()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONDITION | 4095 | if (x) -> if (!x)
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.PptName:isEnterPoint()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3R_50()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184894 | = null
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:gt(II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:eltsLT([II)Z
utilMDE.Intern:intern([J)[J
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONSTANT | 17989 | 115 -> 1
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:max([I)I
daikon.PptSlice0:arity()I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltwiseEqual([I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE:sum([[D)D | STATEMENT | 9149 | stmt -> ;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Debug:logDetail()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:pow(II)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ValueTuple:size()I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.InvMap:InvMap()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:eltsGT([II)Z
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([J[J)Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_3_16()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.JavaCharStream:ReadByte()C
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:slice([III)[I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String; | RETURN | 2498 | return null
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltwiseLT([I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType; | RETURN | 7895 | return null
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:split(I)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | RETURN | 1527 | return null
jtb.JavaCharStream:BeginToken()C
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([S[S)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99177 | return null
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([D[F)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Debug:logOn()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 18478 | if (x) -> if (!x)
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_ntk()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:gte(II)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3_1()Z
utilMDE.WeakHasherMap:size()I
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z | CONDITION | 2791 | if (x) -> if (!x)
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:eq(FF)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:jj_3R_54()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:union([I[I)[I
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | OPERATOR | 36110 | * -> +
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaCharStream:getEndColumn()I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lt(II)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:logDetail()Z
daikon.ModBitTracker:num_sets()I
utilMDE.MathMDE:gcd(II)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.ProglangType:dimensions()I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183876 | = null
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String; | RETURN | 10951 | return null
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptSlice2:arity()I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:min([I)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_51()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_162()Z
daikon.diff.RootNode:RootNode()V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | OPERATOR | 60487 | == -> <
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | RETURN | 21417 | return null
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
633 2 563 4 23 2 351 2 370 2 839 2 480 2 333 2 518 2 
16 2 156 6 217 2 4 6 195 2 417 2 681 2 392 2 100 2 811 2 356 6 
23 2 579 4 649 2 88 6 636 6 805 2 516 4 333 2 124 2 447 6 602 2 747 6 269 2 
204 8 23 6 101 4 131 8 74 16 511 16 674 10 79 6 189 2 740 2 551 2 7 4 111 29 294 10 467 4 234 10 555 8 162 4 40 10 757 2 475 10 662 16 333 6 362 12 761 26 395 2 644 2 340 2 270 8 308 6 
804 4 
497 2 
131 2 74 2 511 2 674 2 190 2 111 6 32 2 294 2 574 2 324 2 234 2 409 2 828 2 162 2 40 2 662 2 475 4 330 2 362 2 761 4 266 2 810 2 308 2 
74 2 40 2 511 2 674 2 65 2 662 2 231 4 362 1 7 2 761 4 111 5 294 2 234 2 14 2 
617 2 73 4 591 2 700 4 669 2 154 2 25 2 252 2 734 2 707 10 276 4 626 4 376 4 743 8 210 4 631 2 54 2 437 2 35 4 383 6 15 62 606 4 385 2 122 4 300 4 560 2 474 2 387 2 835 14 67 4 390 4 334 2 448 4 762 2 586 2 695 2 484 2 647 10 450 2 182 2 
120 2 497 2 509 2 313 2 220 2 504 2 109 2 350 2 290 2 554 2 183 2 
377 2 97 2 743 2 300 2 381 2 134 2 775 2 724 2 
23 4 131 2 74 8 511 8 674 4 231 6 111 13 294 4 192 8 234 4 258 2 14 4 17 2 40 4 502 6 662 8 333 4 759 4 362 6 761 12 
743 2 383 2 182 2 
803 2 705 2 416 6 188 2 465 14 657 2 59 2 686 2 425 2 
618 1 399 6 105 2 106 2 623 2 292 5 404 1 518 2 293 1 295 2 216 2 637 2 301 1 218 1 535 5 419 1 544 2 23 22 428 2 314 2 26 4 547 2 767 2 317 1 435 1 660 1 146 2 333 24 46 1 150 2 335 2 48 2 786 2 247 2 790 2 568 2 791 2 792 2 458 1 673 2 347 2 461 2 794 2 160 1 354 2 580 1 581 4 477 2 808 4 585 2 68 1 179 1 590 3 813 1 487 2 371 2 823 1 826 2 712 2 829 6 284 1 608 2 718 1 721 1 722 4 95 2 391 4 98 2 397 6 
754 2 
619 2 333 2 
365 2 60 2 333 4 
508 2 400 2 621 14 513 10 736 2 107 2 209 4 8 2 525 2 748 32 408 2 11 4 12 8 13 14 118 2 756 2 534 2 642 10 540 4 127 2 223 2 543 2 307 2 129 2 130 8 651 2 135 10 550 6 432 14 136 2 322 18 138 10 436 6 771 2 774 2 140 12 142 2 558 18 659 14 38 2 239 10 779 2 41 2 782 2 564 2 244 8 788 14 789 2 341 4 453 2 670 14 344 2 793 2 255 2 159 2 52 48 798 2 684 2 58 10 355 6 801 2 61 2 357 2 689 2 691 14 693 2 359 2 360 2 261 48 582 10 263 2 482 2 696 2 486 2 491 14 186 4 275 2 595 14 600 2 496 4 86 4 715 2 831 12 500 2 89 2 610 2 285 14 719 4 194 48 501 8 94 4 96 2 288 6 200 14 99 2 291 2 
809 2 685 1 687 2 653 2 
809 2 125 2 
112 2 170 2 
743 2 101 2 809 2 251 2 820 2 800 2 152 2 
614 2 809 2 152 2 
627 2 809 2 152 2 
170 2 445 2 687 2 
809 2 152 2 
170 2 597 2 
809 2 352 2 
746 2 170 2 687 2 
799 2 393 2 687 2 
837 2 71 2 687 2 
418 2 742 2 687 2 
629 2 656 2 687 2 
104 2 170 2 
809 2 316 2 
393 2 235 2 
576 2 71 2 
418 2 19 2 
629 2 821 2 
426 2 170 2 
688 2 629 2 
726 2 418 2 
71 2 410 2 
369 2 393 2 
119 2 746 2 170 2 687 2 
119 2 531 2 746 2 170 2 687 2 
479 2 170 2 687 2 
144 2 170 2 687 2 
64 2 
521 2 743 2 319 2 800 2 
567 2 521 2 743 2 319 2 820 2 800 2 
743 2 101 2 809 2 800 2 193 2 152 2 
519 2 256 2 
743 2 101 2 800 2 196 2 
418 2 169 2 
629 2 495 2 
393 2 78 2 
71 2 329 2 
629 2 279 2 71 2 
629 2 233 2 71 2 
629 2 71 2 452 2 
629 2 71 2 830 2 
546 2 743 2 537 2 69 2 763 6 800 2 
604 2 164 2 51 2 345 2 459 2 286 2 678 2 29 2 465 6 741 2 174 4 336 2 305 2 506 2 827 2 222 4 542 2 260 2 
203 2 687 2 
150 2 
399 4 105 2 106 6 623 2 292 2 515 2 517 2 625 2 518 2 406 2 211 2 212 2 295 2 528 2 215 2 216 2 635 2 637 2 535 2 643 2 421 2 544 2 23 26 545 4 314 2 428 2 26 4 28 2 320 8 438 2 658 2 777 4 440 2 776 2 660 2 146 2 780 2 332 2 333 26 783 2 49 2 48 2 785 2 786 6 247 2 568 2 673 2 676 2 347 2 461 2 794 2 160 2 354 2 581 4 472 2 477 2 808 4 478 2 481 2 814 2 594 4 822 2 598 2 826 6 829 4 87 2 608 2 612 2 95 2 391 4 727 2 98 2 615 2 397 6 
399 6 512 2 105 2 106 6 623 2 292 2 515 2 517 2 625 2 518 2 406 2 211 2 212 2 295 2 528 2 215 2 216 2 635 2 637 2 758 2 535 2 421 2 544 2 23 26 545 4 314 2 428 2 26 4 28 2 320 8 438 2 658 2 777 4 440 2 776 2 660 2 146 2 780 2 332 2 333 26 783 2 49 2 48 2 785 2 786 6 247 2 790 2 568 2 673 2 676 2 347 2 461 2 794 2 160 2 354 2 581 4 472 2 477 2 808 4 478 2 481 2 371 2 596 2 594 4 822 2 187 2 598 2 826 6 829 4 608 2 612 2 95 2 391 4 727 2 98 2 615 2 397 6 
63 2 283 2 
725 2 
250 4 343 2 156 6 105 2 4 6 680 2 744 2 575 2 298 4 117 2 216 2 356 6 530 2 16 2 802 4 62 2 690 2 470 2 167 2 168 2 417 4 538 4 306 2 364 2 368 2 72 2 489 2 488 4 23 6 592 2 24 2 372 2 704 2 314 2 26 2 27 2 277 2 81 8 824 2 33 8 768 2 321 2 494 2 143 2 608 2 195 2 331 4 44 2 333 12 562 2 149 2 391 2 289 10 98 2 728 2 48 2 665 2 397 4 100 4 247 2 
250 4 343 2 155 2 156 8 105 2 675 2 4 6 680 2 744 2 575 2 298 4 117 2 216 2 356 8 530 2 16 2 532 4 802 4 62 2 690 2 167 2 168 2 417 4 538 4 306 2 364 2 368 2 72 2 489 2 488 4 23 6 592 2 24 2 372 2 704 2 314 2 26 2 27 2 277 2 81 8 824 2 33 8 768 2 321 2 494 2 143 2 608 2 195 2 331 4 333 12 562 2 149 2 391 2 392 2 98 2 289 10 728 2 48 2 665 2 397 4 100 4 247 2 
72 2 489 2 802 4 690 2 592 2 24 2 156 2 167 2 4 2 27 2 680 2 417 2 728 2 538 2 665 2 575 2 100 2 298 4 
250 4 343 2 156 6 105 2 4 4 680 2 744 2 575 2 298 4 117 2 216 2 356 6 530 2 16 2 802 4 62 2 690 2 470 2 167 2 168 2 417 4 538 4 306 2 364 2 368 2 72 2 489 2 488 4 23 6 592 2 24 2 372 2 704 2 314 2 26 2 27 2 277 2 81 4 824 2 33 4 768 2 321 2 494 2 143 2 608 2 331 4 44 2 333 12 562 2 149 2 392 2 391 2 289 6 98 2 728 2 48 2 665 2 397 4 100 4 247 2 
250 4 343 2 156 4 105 2 4 6 680 2 744 2 575 2 298 4 117 2 216 2 356 6 530 2 16 2 802 4 62 2 690 2 470 2 217 2 167 2 168 2 417 4 538 4 306 2 364 2 368 2 72 2 489 2 488 4 23 6 592 2 24 2 372 2 704 2 314 2 26 2 27 2 277 2 81 4 824 2 33 4 768 2 321 2 494 2 143 2 608 2 331 4 44 2 333 12 562 2 149 2 391 2 289 6 98 2 728 2 48 2 665 2 397 4 100 4 247 2 
250 4 343 2 156 6 105 2 4 6 680 2 744 2 575 2 298 4 117 2 216 2 356 6 530 2 16 2 802 4 62 2 690 2 470 2 167 2 168 2 417 4 538 4 306 2 364 2 368 2 72 2 489 2 488 4 23 6 592 2 24 2 372 2 704 2 314 2 26 2 27 2 277 2 81 4 824 2 33 8 768 2 321 2 494 2 143 2 608 2 195 2 331 4 44 2 333 12 562 2 149 2 391 2 289 6 98 2 728 2 48 2 665 2 397 4 100 4 247 2 
250 4 343 2 156 6 105 2 4 8 680 2 744 2 575 2 298 4 117 2 216 2 356 8 530 2 16 2 802 4 62 2 690 2 470 2 217 2 167 2 168 2 417 4 538 4 306 2 364 2 368 2 72 2 489 2 488 4 23 6 592 2 24 2 372 2 704 2 314 2 26 2 27 2 277 2 81 8 824 2 33 8 768 2 321 2 494 2 143 2 608 2 195 2 331 4 44 2 333 12 562 2 149 2 391 2 289 10 98 2 728 2 48 2 665 2 397 4 100 4 247 2 
250 4 343 2 156 6 105 2 4 6 680 2 744 2 575 2 298 4 117 2 216 2 356 6 530 2 16 2 802 4 62 2 690 2 470 2 167 2 168 2 417 4 538 4 306 2 364 2 368 2 72 2 489 2 488 4 23 6 592 2 24 2 372 2 704 2 314 2 26 2 27 2 277 2 81 8 824 2 33 8 768 2 321 2 494 2 143 2 608 2 195 2 331 4 44 2 333 12 562 2 149 2 391 2 289 10 98 2 728 2 48 2 665 2 397 4 100 4 247 2 
0 2 399 6 619 6 402 2 4 8 623 2 405 2 211 2 407 6 214 1 10 6 216 2 16 4 637 2 217 4 415 1 640 2 417 4 420 6 645 2 648 2 23 24 24 2 224 6 652 1 428 2 227 2 226 1 26 4 27 2 28 2 433 2 33 2 654 2 438 2 439 6 36 6 441 2 44 2 45 2 47 6 48 2 665 2 247 2 250 4 50 2 673 2 676 2 680 2 461 2 62 2 690 2 472 4 477 2 267 4 72 2 489 2 488 8 273 10 702 2 704 2 277 2 494 2 713 2 499 2 92 2 95 2 98 2 289 2 728 2 100 4 510 1 105 2 106 6 735 2 292 2 517 2 518 2 744 2 110 6 113 1 295 2 298 4 117 2 749 6 751 1 530 2 754 6 533 2 302 2 535 2 538 4 306 2 544 2 312 2 314 2 552 2 137 2 768 2 318 6 320 4 321 2 323 7 777 4 143 4 559 2 328 1 146 2 331 6 332 2 333 46 562 2 781 2 149 2 786 6 790 2 568 2 343 2 156 4 346 7 347 12 794 2 575 2 354 2 356 12 802 4 358 2 581 4 166 2 167 2 168 2 808 4 172 2 177 2 364 2 365 6 368 4 816 2 592 2 371 2 372 2 819 8 822 2 373 1 598 2 824 2 825 2 826 8 380 2 384 6 829 2 832 6 608 2 612 2 389 4 391 4 397 6 396 2 840 6 
0 2 619 6 399 6 402 2 4 8 105 2 735 2 106 6 623 2 292 2 517 4 518 2 110 6 744 2 405 2 407 6 211 2 295 2 10 6 749 6 117 2 298 4 216 2 530 2 16 4 637 2 754 6 533 2 640 2 302 2 417 4 535 2 420 6 538 4 306 2 645 2 544 2 648 2 23 26 24 2 224 6 312 2 227 2 428 2 314 2 26 4 27 2 28 2 552 2 433 2 137 2 318 6 654 2 768 2 33 6 321 2 320 8 438 2 439 6 36 6 777 4 143 4 441 2 559 2 146 2 332 2 331 6 333 48 44 2 562 2 45 2 781 2 149 2 47 6 48 2 665 2 786 6 247 2 790 2 250 4 50 2 568 2 343 2 156 8 673 2 676 2 347 12 461 2 680 2 794 2 575 2 354 2 356 12 358 2 802 4 62 2 690 2 166 2 472 4 581 4 167 2 168 2 477 2 172 2 808 4 177 2 364 2 365 6 267 4 368 4 488 8 489 2 72 2 816 2 273 10 592 2 371 2 372 2 702 2 819 8 493 2 704 2 594 2 822 2 277 2 598 4 824 2 825 2 84 2 826 8 713 2 380 2 494 2 384 6 829 2 499 2 832 6 608 2 195 4 92 2 612 4 95 2 389 4 391 4 289 2 98 2 728 2 396 2 397 6 100 4 840 6 
0 2 619 6 399 6 402 2 4 8 105 2 735 2 106 6 623 2 292 2 517 4 518 2 110 6 744 2 405 2 407 6 211 2 295 2 10 6 749 6 117 2 298 4 216 2 530 2 16 4 637 2 754 6 533 2 640 2 302 2 417 4 535 2 420 6 538 4 306 2 645 2 544 2 648 2 23 26 24 2 224 6 312 2 227 2 428 2 314 2 26 4 27 2 28 2 552 2 433 2 137 2 318 6 654 2 768 2 33 6 321 2 320 8 438 2 439 6 36 6 777 4 143 4 441 2 559 2 146 2 332 2 331 6 333 48 44 2 562 2 45 2 781 2 149 2 47 6 48 2 665 2 786 6 247 2 790 2 250 4 50 2 568 2 343 2 156 8 673 2 676 2 347 12 461 2 680 2 794 2 575 2 354 2 356 12 358 2 802 4 62 2 690 2 166 2 472 4 581 4 167 2 168 2 477 2 172 2 808 4 177 2 364 2 365 6 267 4 368 4 488 8 489 2 72 2 816 2 273 10 592 2 371 2 372 2 702 2 819 8 493 2 704 2 594 2 822 2 277 2 598 4 81 4 824 2 825 2 84 2 826 8 713 2 380 2 494 2 384 6 829 2 499 2 832 6 608 2 195 4 92 2 612 4 95 2 389 4 391 4 289 6 98 2 728 2 396 2 397 6 100 4 840 6 
0 2 399 6 619 12 402 2 4 10 623 2 405 2 211 2 407 6 10 6 216 2 16 4 637 2 414 6 217 2 640 2 417 4 641 2 420 6 645 2 648 2 23 24 24 2 224 6 428 2 227 2 26 4 27 2 28 2 433 2 33 6 654 2 438 2 439 12 36 6 442 2 441 2 44 2 45 2 663 2 47 12 48 2 665 2 247 2 250 4 50 2 672 2 673 2 676 4 461 2 680 2 57 6 62 2 690 2 472 4 477 2 267 4 72 2 489 2 488 8 699 6 273 8 702 2 493 2 704 2 277 2 81 4 84 2 282 2 494 2 713 2 92 2 95 2 98 2 289 6 728 2 100 4 105 2 106 8 735 2 292 4 517 4 738 6 108 6 518 2 744 2 110 6 295 2 298 4 117 2 749 6 530 2 754 12 533 2 302 2 535 4 538 4 306 2 544 2 312 2 314 2 548 6 552 2 137 2 768 2 318 12 321 2 320 10 325 2 777 6 143 4 559 2 146 2 331 6 332 4 333 52 562 2 781 2 149 2 786 8 790 2 153 2 568 2 343 2 156 10 347 10 794 2 575 2 354 2 356 16 578 6 802 4 358 2 581 4 166 2 167 2 168 2 171 2 808 4 172 2 177 2 364 2 365 12 368 4 816 2 592 2 371 2 372 2 819 8 594 2 822 2 598 4 599 6 824 2 191 6 825 2 826 12 380 2 384 6 829 4 832 6 608 2 195 4 612 4 389 4 391 4 392 2 397 6 396 2 840 6 
488 2 250 2 489 2 72 2 24 2 156 6 4 6 680 2 277 2 81 4 744 2 824 2 768 2 33 6 575 2 117 2 298 2 356 4 16 2 802 2 62 2 167 2 195 2 168 2 331 2 333 4 44 2 417 4 562 2 149 2 289 4 728 2 306 2 364 2 100 4 
399 6 4 6 105 2 106 6 623 2 292 3 518 2 744 2 211 2 295 2 115 2 117 2 298 2 216 2 16 2 637 2 417 4 535 3 306 2 544 2 23 24 24 2 428 2 314 2 26 4 28 2 768 2 33 6 438 2 777 4 146 2 331 2 44 2 333 28 562 2 150 2 149 2 48 2 786 6 247 2 790 2 250 2 568 2 156 6 457 2 673 2 347 4 680 2 461 2 794 2 796 2 575 2 354 2 356 4 802 2 62 2 581 4 472 2 167 2 473 3 168 2 477 2 808 4 364 2 488 2 698 2 72 2 489 2 273 2 371 2 372 2 274 2 277 2 824 2 826 8 829 3 605 2 498 2 499 2 608 2 195 2 95 2 391 4 98 2 289 2 728 2 394 2 397 6 100 4 
666 2 117 2 562 2 
666 2 117 2 562 2 
399 6 3 2 105 2 4 8 106 2 623 2 517 4 208 2 518 2 744 2 295 2 216 2 298 2 117 2 16 4 637 2 417 4 420 2 424 2 544 2 23 16 314 2 428 2 132 2 26 4 28 2 33 6 768 2 320 4 655 2 438 2 556 2 146 2 331 2 333 24 562 2 337 2 49 4 48 2 786 2 247 2 790 2 250 2 568 2 156 8 673 2 347 4 461 2 680 2 794 2 257 2 575 2 354 2 356 8 802 2 581 4 472 2 167 2 477 2 808 4 267 2 483 2 812 2 367 2 488 4 273 2 817 2 371 2 822 2 598 4 81 2 826 2 829 2 608 2 195 4 612 4 95 2 389 2 391 4 98 2 289 2 397 6 100 4 
556 2 273 2 23 2 63 2 3 2 735 2 347 2 27 2 388 2 333 4 549 2 389 2 433 2 98 2 420 2 812 2 180 2 
399 6 3 2 105 2 4 8 106 2 623 2 517 4 208 2 518 2 744 2 295 2 117 2 216 2 298 2 16 4 637 2 417 4 424 2 544 2 23 14 314 2 428 2 132 4 26 4 28 2 33 6 768 2 320 4 655 2 770 2 438 2 146 2 331 2 333 20 562 2 337 2 49 4 48 2 786 2 247 2 790 2 250 2 568 2 156 8 673 2 347 2 461 2 680 2 794 2 682 2 257 2 575 2 354 2 356 8 802 2 581 4 472 2 167 2 477 2 808 4 267 2 483 2 812 2 367 2 488 4 817 2 371 2 822 2 598 4 81 2 826 2 829 4 608 2 195 4 612 4 95 2 391 4 98 2 289 2 397 6 100 4 
399 6 3 2 105 2 4 8 106 2 623 2 517 4 208 2 518 2 744 2 295 2 216 2 298 2 117 2 16 4 637 2 417 4 420 2 424 2 544 2 23 16 314 2 428 2 132 2 26 4 28 2 33 6 768 2 320 4 655 2 438 2 556 2 146 2 331 2 333 24 562 2 337 2 49 4 48 2 786 2 247 2 790 2 250 2 568 2 156 8 673 2 347 4 461 2 680 2 794 2 257 2 575 2 354 2 356 8 802 2 581 4 472 2 167 2 477 2 808 4 267 2 483 2 812 2 367 2 488 4 273 2 817 2 371 2 822 2 598 4 81 2 826 2 829 2 608 2 195 4 612 4 95 2 389 2 391 4 98 2 289 2 397 6 100 4 
50 2 568 2 399 2 103 2 105 2 106 6 623 2 292 2 347 2 518 2 794 2 573 2 522 1 211 2 55 2 295 2 469 2 116 2 354 2 216 2 358 2 752 2 637 2 692 2 472 2 581 2 123 2 476 2 172 2 808 2 21 2 535 2 764 2 765 2 544 2 23 18 702 2 227 2 314 2 706 2 26 4 82 2 601 2 826 8 438 2 773 2 829 2 777 4 608 2 661 2 146 2 197 2 333 24 95 2 148 1 391 4 98 2 151 2 505 2 338 2 48 2 396 2 397 6 786 6 247 2 616 2 842 2 
456 2 571 2 219 2 587 2 70 2 248 2 
557 2 53 2 280 2 785 2 772 2 70 2 37 2 
311 2 507 1 23 8 154 1 427 2 254 2 157 2 460 2 105 2 622 2 514 2 5 2 709 2 439 2 326 2 607 1 474 1 91 2 333 10 66 2 613 2 175 2 646 2 128 1 565 2 566 2 
732 2 74 4 511 4 674 4 403 2 79 2 462 2 111 11 294 4 526 2 234 4 412 4 806 2 40 4 834 2 662 4 723 2 836 2 242 2 362 1 761 8 588 2 270 4 
815 4 1 2 23 1 620 2 237 2 230 2 677 2 737 2 361 7 333 1 303 2 523 2 711 2 9 2 468 1 271 2 
815 4 1 2 237 2 677 2 230 2 737 2 361 4 303 2 523 4 711 2 9 2 271 2 236 2 
815 4 1 2 23 1 237 2 677 2 230 2 737 2 361 4 333 1 303 2 523 4 711 2 9 2 468 1 271 2 236 2 
815 2 1 2 237 2 677 2 230 2 737 2 361 2 303 2 523 2 711 2 9 2 271 2 
731 124 398 2 399 248 733 4 205 8 206 6 624 26 207 8 628 90 6 6 520 4 745 4 630 2 632 16 524 24 114 4 527 5 297 8 750 6 411 4 121 5 753 6 413 2 637 14 299 4 638 36 755 10 18 4 20 24 221 4 760 16 22 6 536 8 126 2 541 11 422 16 309 8 544 8 23 134 650 4 228 10 229 10 232 92 430 6 30 4 431 10 434 2 769 2 553 18 34 6 778 10 327 6 39 2 145 6 561 2 444 4 146 14 241 8 43 50 147 42 333 150 446 6 243 6 245 6 787 6 667 2 790 58 451 8 668 36 454 4 671 1 455 2 570 5 253 8 349 2 464 8 795 6 797 84 683 2 466 4 56 18 161 10 577 4 163 4 471 4 581 112 694 4 584 2 583 6 808 88 173 2 264 2 265 28 178 6 366 12 589 24 268 2 181 90 697 12 272 2 184 42 371 58 818 6 492 6 75 6 76 18 77 2 593 26 374 6 710 4 278 5 83 24 379 6 281 4 603 6 85 4 386 24 717 2 609 4 833 10 720 4 198 17 503 10 199 2 729 24 201 10 841 6 730 23 
731 6 399 44 342 2 455 2 401 2 102 2 253 2 205 2 572 2 207 2 739 2 464 2 463 2 683 2 353 2 213 2 632 4 524 2 296 2 161 2 529 2 634 2 753 2 165 4 637 2 638 2 755 2 581 20 639 2 262 2 584 2 808 20 760 4 173 2 265 38 363 2 176 6 178 2 422 4 485 4 310 2 544 2 309 6 23 44 185 4 371 2 225 2 701 2 650 2 703 2 76 2 77 2 228 2 229 2 315 2 375 2 431 2 83 2 31 2 278 2 379 2 85 2 139 2 141 2 714 2 778 2 716 2 386 2 238 2 145 2 443 2 561 2 611 2 90 2 287 2 240 2 42 2 146 2 198 2 93 2 333 46 503 2 243 4 245 2 449 2 664 2 246 4 339 2 201 2 841 2 249 2 790 2 
731 24 202 4 399 104 2 4 205 2 206 4 207 2 6 4 745 4 213 10 632 10 296 2 297 4 750 4 411 4 121 4 753 4 413 2 637 6 299 4 638 6 755 6 18 4 639 10 221 4 760 10 304 2 22 4 422 10 423 2 544 2 309 6 23 70 766 4 429 8 133 4 229 4 232 24 769 2 553 8 34 4 141 10 778 4 327 4 39 2 145 4 561 2 146 6 147 16 43 8 333 78 243 2 446 4 245 4 664 2 784 2 787 4 790 30 668 30 454 4 569 8 455 2 570 4 253 2 158 32 679 2 348 16 795 4 797 24 683 2 161 4 259 4 577 4 163 4 581 44 262 2 583 4 807 2 808 36 173 2 265 14 178 4 697 14 272 2 184 8 490 8 371 28 818 4 75 4 76 10 77 2 374 4 708 4 80 2 378 16 379 4 281 2 603 4 382 8 833 4 609 4 720 4 198 10 503 4 838 4 729 8 841 4 
731 8 668 6 399 40 455 2 570 2 205 2 253 2 207 2 349 2 630 2 683 2 632 6 296 2 527 2 161 2 121 2 753 4 637 2 581 14 755 2 638 2 584 2 808 14 760 6 173 2 265 14 126 2 178 4 541 2 268 2 422 6 309 4 544 2 23 26 371 12 225 2 76 2 77 2 229 2 710 2 278 2 379 4 281 2 553 6 778 2 833 4 145 4 561 2 241 2 146 2 333 28 198 2 503 2 243 2 199 2 245 4 841 4 730 10 790 12 
539 2 

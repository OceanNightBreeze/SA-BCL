#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 690 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 747 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 513 375 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (357,699) (357,699) (17,196,378,463,738) (17,196,378,463,738) (17,196,378,463,738) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 913 425 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (357,699) (357,699) (18,48,55,172,300,712,821,828,841,882) 117 199 672 113 656 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR utilMDE.Assert$AssertionException (357,699) (357,699) (18,48,55,172,300,712,821,828,841,882) 117 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (357,699) 466 171 243 621 
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (357,699) 466 171 243 621 
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (357,699) 466 171 243 621 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (357,699) 466 171 243 621 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern([I)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z | STATEMENT | 9323 | stmt -> ;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lt(II)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Ppt:Ppt()V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:memberOf(D[F)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:memberOf(I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.Intern:numIntArrays()I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.MathMDE:gcd(JJ)J
daikon.Debug:logOn()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.Quant:eltsLT([II)Z
daikon.Quantify.Constant:Constant(I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoAux:hashCode()I
daikon.Quant:subsetOf([B[I)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(S[S)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfo:isIOAArray()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant; | RETURN | 7501 | return null
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14018 | 108 -> 109
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.PptSlice2:arity()I
jtb.JavaCharStream:getBeginColumn()I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfo:is_typeof()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quantify.Length:esc_name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:isPointer()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14923 | if (x) -> if (!x)
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:setDiff([I[I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:baseIsString()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:hashCode()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.ValueTuple:size()I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.ProglangType:isString()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONSTANT | 20467 | 32 -> 1
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63729 | = null
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:isDerived()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V | CONDITION | 534 | if (x) -> if (!x)
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_samples()I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5096 | = null
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:dimensions()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:isEnterPoint()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
jtb.JavaCharStream:readChar()C
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:has_typeof()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfo:isIOASet()Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:gt(II)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Invariants:Invariants()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eq(JJ)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184894 | = null
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration; | RETURN | 7701 | return null
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I | CONSTANT | 860 | 0 -> -1
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfo:isPrestate()Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 98882 | return null
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18577 | 0 -> -1
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eltsGTE([II)Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3_16()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isIntegral()Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.ProglangType:isArray()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:negate(I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.string.OneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:lte(II)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:sameLength([I[I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.ProglangType:isPointerFileRep()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:logDetail()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:noDups([I)Z
daikon.PptSlice1:num_samples()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.ModBitTracker:split(I)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_16(I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Debug:logDetail()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.Quant:lexGTE([I[I)Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.JavaCharStream:BeginToken()C
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.PptSlice0:arity()I
daikon.Quant:eltsLteIndex([I)Z
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus; | CONDITION | 15388 | if (x) -> if (!x)
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.JavaCharStream:getEndColumn()I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24039 | return null
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.Constant:name()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 2 1047 4 714 2 699 2 357 2 267 2 1017 2 852 2 746 2 
602 2 271 2 108 6 494 2 705 6 469 2 1028 2 116 2 792 2 174 6 895 2 
711 4 372 6 931 6 1005 2 569 4 699 2 873 6 810 2 561 2 547 2 357 2 847 6 509 2 
104 10 699 6 536 4 821 6 245 2 829 4 404 4 642 8 15 2 18 6 552 8 679 2 737 26 1037 16 589 10 321 2 234 2 808 8 972 2 719 16 876 10 138 2 296 4 295 12 357 6 301 29 419 10 457 8 598 10 66 16 
830 4 385 6 
495 2 
690 2 
600 2 103 6 104 16 699 4 821 4 334 6 828 4 48 8 432 4 404 2 406 2 836 2 18 4 552 18 520 6 712 4 649 6 55 4 20 6 737 48 1037 32 771 2 589 16 321 2 841 4 808 6 449 2 172 4 719 32 876 16 295 22 141 6 357 4 300 2 301 54 419 16 882 4 598 6 66 32 
106 2 161 2 123 2 
566 22 197 2 285 10 493 2 1024 2 333 2 443 2 759 2 33 2 277 2 778 2 298 2 224 2 249 2 
145 2 104 2 246 2 478 2 404 2 158 2 53 2 18 2 552 2 677 2 737 4 1037 2 589 2 719 2 876 2 655 2 295 2 301 6 419 2 359 2 598 4 66 2 240 2 
20 6 737 12 1037 8 104 4 589 4 841 4 334 6 47 2 829 2 828 4 719 8 876 4 295 4 301 16 419 4 911 2 66 8 
624 2 922 2 748 6 293 2 701 2 1010 2 969 2 486 2 747 2 791 2 
1035 2 568 2 375 2 901 2 272 2 807 2 495 2 513 2 947 2 516 2 230 2 
462 1 465 4 332 1 398 2 731 2 8 2 223 1 479 2 1001 2 795 4 14 1 228 2 81 2 344 2 550 2 797 1 82 6 933 2 738 2 168 2 558 1 290 2 93 2 940 1 740 2 38 2 620 1 357 23 302 2 418 2 570 2 1020 1 426 6 699 21 885 1 366 2 753 2 702 2 428 4 955 1 119 4 196 2 763 2 835 4 896 2 644 1 523 2 839 2 322 1 323 1 378 2 380 2 976 2 204 2 387 4 264 1 267 2 596 2 388 2 659 4 211 4 780 2 
357 2 195 2 
934 2 357 4 984 2 
193 2 
913 6 270 2 0 12 330 2 919 12 994 12 337 8 732 8 275 4 997 4 12 12 403 8 930 2 345 12 613 16 280 2 866 4 165 8 347 14 869 2 89 8 1009 6 870 2 22 8 683 2 617 12 502 4 563 4 942 12 744 2 102 2 425 2 1018 2 571 38 633 38 703 4 952 38 312 6 192 2 707 12 891 8 370 2 578 6 764 4 960 4 436 2 435 2 1034 2 374 6 1039 2 376 2 525 4 257 8 1041 10 904 4 382 6 775 12 1043 12 454 2 326 12 532 2 533 2 458 2 
920 2 150 1 983 2 837 2 
812 2 983 2 
251 2 296 2 343 2 983 2 161 2 427 2 133 2 
983 2 133 2 488 2 
983 2 133 2 1045 2 
949 2 233 2 837 2 
983 2 133 2 
949 2 205 2 
697 2 983 2 
949 2 682 2 837 2 
43 2 837 2 200 2 
1011 2 837 2 653 2 
838 2 823 2 837 2 
50 2 64 2 837 2 
949 2 1016 2 
983 2 874 2 
43 2 464 2 
394 2 653 2 
441 2 823 2 
50 2 97 2 
949 2 1040 2 
868 2 50 2 
1029 2 823 2 
977 2 653 2 
43 2 927 2 
949 2 410 2 682 2 837 2 
949 2 410 2 386 2 682 2 837 2 
949 2 395 2 837 2 
949 2 837 2 643 2 
680 2 
251 2 13 2 161 2 757 2 
251 2 231 2 13 2 343 2 161 2 757 2 
251 2 296 2 401 2 983 2 161 2 133 2 
1031 2 863 2 
251 2 296 2 804 2 161 2 
39 2 823 2 
50 2 756 2 
43 2 183 2 
654 2 653 2 
50 2 817 2 653 2 
50 2 872 2 653 2 
50 2 860 2 653 2 
50 2 653 2 939 2 
72 6 10 2 52 2 161 2 251 2 284 2 528 6 500 2 
949 2 788 2 
566 6 678 2 1006 2 88 4 1036 4 44 2 630 2 153 2 92 2 219 2 77 2 63 2 276 2 999 2 118 2 658 2 239 2 781 2 
265 2 837 2 
8 2 
915 4 398 2 279 2 549 2 795 3 550 2 408 4 168 2 937 2 290 2 292 2 684 2 38 6 418 2 302 2 179 2 948 2 570 2 426 4 699 26 308 2 428 4 430 2 315 2 958 2 835 4 581 2 587 2 839 2 971 2 448 2 976 2 204 2 596 2 721 2 985 2 728 2 465 4 215 2 731 2 221 2 476 2 479 2 608 2 1001 2 228 2 611 2 82 6 1008 2 235 2 875 2 1015 2 357 26 622 2 362 3 366 2 753 2 111 2 886 2 248 2 763 6 119 5 896 2 126 4 523 2 773 2 380 2 383 8 136 2 387 3 267 2 388 2 659 4 780 6 
915 4 151 2 398 2 279 2 549 2 795 2 550 2 408 4 933 2 168 2 937 2 290 2 684 2 38 6 418 2 302 2 179 2 948 2 570 2 426 6 699 26 308 2 428 4 430 2 315 2 958 2 835 4 587 2 839 2 448 2 976 2 204 2 596 2 721 2 985 2 728 2 465 4 215 2 731 2 221 2 476 2 479 2 608 2 1001 2 81 2 228 2 611 2 82 6 862 2 1008 2 235 2 875 2 741 2 1015 2 357 26 622 2 362 2 366 2 753 2 111 2 886 2 248 2 763 6 119 4 896 2 897 2 126 4 523 2 773 2 380 2 383 8 136 2 387 2 267 2 388 2 659 4 780 6 
727 2 
109 2 610 2 
124 2 271 2 108 2 25 4 906 2 202 2 887 2 544 4 832 2 792 2 174 2 926 2 894 2 316 2 673 2 178 2 1033 2 865 2 
271 4 465 2 335 2 669 4 469 2 544 4 546 2 792 4 926 2 1001 2 793 2 673 2 82 4 865 2 616 6 25 4 352 2 290 2 291 2 34 2 297 2 357 12 878 4 174 4 176 2 178 2 693 4 570 2 699 6 1025 2 108 6 755 4 887 2 705 6 832 2 371 2 894 2 316 2 895 2 896 2 1033 4 582 2 124 2 522 2 772 2 1038 2 198 2 524 2 380 2 1042 2 906 2 202 2 384 2 1046 2 451 2 976 2 453 4 204 2 659 2 67 2 
602 2 271 4 465 2 335 2 669 4 544 4 546 2 792 4 926 2 1001 2 793 2 673 2 82 4 865 2 616 6 25 4 352 2 290 2 291 2 34 2 297 2 357 12 878 4 174 6 176 2 178 2 693 4 570 2 699 6 1025 2 108 4 755 4 887 2 705 6 832 2 371 2 894 2 316 2 895 2 896 2 1033 4 582 2 124 2 522 2 772 2 1038 2 198 2 524 2 380 2 1042 2 906 2 202 2 384 2 1046 2 451 2 976 2 453 4 204 2 659 2 67 2 
271 4 465 2 335 2 669 4 544 4 546 2 792 4 926 2 1001 2 793 2 673 2 82 4 865 2 616 6 25 4 352 2 494 2 290 2 291 2 34 2 297 2 357 12 878 4 174 6 176 2 178 2 693 4 570 2 699 6 1025 2 108 6 755 8 887 2 705 6 832 2 371 2 894 2 316 2 895 2 896 2 1033 4 582 2 124 2 522 2 772 2 1038 2 198 2 524 2 380 2 1042 2 906 2 202 2 384 2 1046 2 451 2 976 2 453 4 204 2 659 2 67 2 
602 2 271 4 465 2 335 2 669 8 544 4 546 2 792 4 926 2 1001 2 793 2 673 2 82 4 865 2 616 10 25 4 352 2 494 2 290 2 291 2 34 2 297 2 357 12 878 4 174 8 176 2 178 2 693 4 570 2 699 6 1025 2 108 6 755 8 887 2 705 8 832 2 371 2 894 2 316 2 895 2 896 2 1033 4 582 2 124 2 522 2 772 2 1038 2 198 2 524 2 380 2 1042 2 906 2 202 2 384 2 1046 2 451 2 976 2 453 4 204 2 659 2 67 2 
271 4 465 2 335 2 669 8 544 4 546 2 792 4 926 2 1001 2 793 2 673 2 82 4 865 2 616 10 25 4 352 2 494 2 290 2 291 2 34 2 297 2 357 12 878 4 174 6 176 2 178 2 693 4 570 2 699 6 1025 2 108 6 755 8 887 2 705 6 832 2 371 2 894 2 316 2 895 2 896 2 1033 4 582 2 124 2 522 2 772 2 1038 2 198 2 524 2 380 2 1042 2 906 2 202 2 384 2 1046 2 451 2 976 2 453 4 204 2 659 2 67 2 
784 4 271 4 273 2 4 1 7 6 544 4 546 2 792 4 279 2 793 2 795 2 550 2 25 4 290 2 34 2 291 2 811 6 297 2 38 8 302 2 570 2 574 2 309 2 832 2 315 2 835 4 316 2 582 2 587 2 585 2 839 2 842 2 843 10 596 2 67 2 68 2 71 2 329 2 602 4 850 2 851 2 335 2 853 2 81 2 611 2 82 6 865 2 864 6 616 2 352 2 94 2 95 1 357 46 878 6 623 2 629 2 366 2 108 4 111 2 886 4 887 2 114 6 371 2 895 4 119 2 894 2 640 2 896 2 124 2 898 2 126 4 380 2 379 6 903 2 906 2 383 4 384 2 387 2 388 2 659 4 914 2 918 2 392 6 393 2 663 6 398 2 156 2 926 2 673 2 933 2 168 12 687 2 174 8 944 2 418 2 176 2 946 2 691 2 178 2 693 4 180 2 696 1 426 6 699 24 185 2 428 4 705 12 193 6 195 6 710 6 967 1 198 4 444 6 202 2 201 2 976 2 451 2 452 1 204 2 453 8 721 2 984 6 461 6 987 2 728 2 465 4 215 2 217 7 731 2 468 1 479 2 480 7 1001 2 225 2 485 6 228 2 227 2 1013 6 743 4 504 6 1025 2 753 2 755 2 1027 8 512 1 1030 2 763 6 1033 4 523 2 522 2 254 1 772 2 524 2 773 2 527 1 1042 4 1046 2 267 2 780 6 
914 2 784 4 918 2 271 4 392 6 273 2 663 6 393 2 398 2 7 6 544 4 546 2 156 2 279 2 792 4 926 2 793 2 673 2 795 2 550 2 408 2 933 2 168 12 25 4 936 2 290 2 291 2 34 2 687 2 811 6 297 2 38 8 174 8 944 2 302 2 418 2 691 2 946 2 176 2 178 2 180 2 693 4 570 2 426 6 699 26 185 2 309 2 574 2 428 4 705 12 832 2 193 6 315 4 195 6 316 2 835 4 710 6 582 2 585 2 587 4 839 2 198 4 444 6 842 2 201 2 202 2 843 10 451 2 976 2 453 8 204 2 596 2 721 2 67 2 68 2 984 6 71 2 329 2 987 2 461 6 850 2 728 2 465 4 851 2 215 4 335 2 731 2 853 2 479 2 225 2 1001 2 485 6 227 2 81 2 228 2 611 2 82 6 864 6 865 2 616 2 352 2 494 4 1013 6 94 2 743 4 878 6 357 48 504 6 623 2 629 2 1025 2 366 2 108 8 753 2 755 6 1027 8 886 4 111 2 887 2 114 6 1030 2 371 2 640 2 894 2 119 2 895 4 763 6 896 2 1033 4 898 2 124 2 126 4 522 2 523 2 772 2 524 2 774 2 773 2 379 6 380 2 903 2 1042 4 906 2 383 8 384 2 1046 2 387 2 267 2 388 2 659 4 780 6 
914 2 784 4 918 2 271 4 392 6 273 2 663 6 393 2 398 2 669 4 7 6 544 4 546 2 156 2 279 2 792 4 926 2 793 2 673 2 795 2 550 2 408 2 933 2 168 12 25 4 936 2 290 2 291 2 34 2 687 2 811 6 297 2 38 8 174 8 944 2 302 2 418 2 691 2 946 2 176 2 178 2 180 2 693 4 570 2 426 6 699 26 185 2 309 2 574 2 428 4 705 12 832 2 193 6 315 4 195 6 316 2 835 4 710 6 582 2 585 2 587 4 839 2 198 4 444 6 842 2 201 2 202 2 843 10 451 2 976 2 453 8 204 2 596 2 721 2 67 2 68 2 984 6 71 2 329 2 987 2 461 6 850 2 728 2 465 4 851 2 215 4 335 2 731 2 853 2 479 2 225 2 1001 2 485 6 227 2 81 2 228 2 611 2 82 6 864 6 865 2 616 6 352 2 494 4 1013 6 94 2 743 4 878 6 357 48 504 6 623 2 629 2 1025 2 366 2 108 8 753 2 755 6 1027 8 886 4 111 2 887 2 114 6 1030 2 371 2 640 2 894 2 119 2 763 6 895 4 896 2 1033 4 898 2 124 2 126 4 522 2 523 2 772 2 524 2 774 2 773 2 379 6 380 2 903 2 1042 4 906 2 383 8 384 2 1046 2 387 2 267 2 388 2 659 4 780 6 
784 4 783 6 271 4 273 2 7 6 544 4 546 2 545 2 792 4 279 4 793 2 795 4 550 2 798 6 25 4 290 2 291 2 34 2 811 12 297 2 38 12 302 2 570 2 574 2 309 2 832 2 315 4 835 4 316 2 582 2 587 4 585 2 839 2 842 2 843 8 65 6 596 2 67 2 68 2 71 2 329 2 602 2 850 2 604 2 851 2 335 2 853 2 81 2 611 2 82 6 865 2 864 12 83 6 85 6 86 2 616 6 352 2 94 2 357 52 878 6 623 2 629 2 366 2 108 10 111 2 886 4 887 2 114 6 371 2 895 4 119 4 894 2 640 2 896 2 124 2 898 2 126 6 380 2 379 6 903 2 906 2 383 10 384 2 387 4 388 2 659 4 918 2 392 6 393 2 663 6 665 6 669 4 398 2 670 2 156 2 926 2 673 2 159 6 408 2 933 2 168 10 936 2 687 2 689 2 174 10 944 2 418 2 691 2 176 2 946 2 178 2 693 4 180 2 426 6 699 24 185 2 187 2 428 4 705 16 193 12 195 12 710 6 198 4 444 6 202 2 201 2 976 2 451 2 204 2 453 8 721 2 209 2 984 12 461 6 987 2 728 4 465 4 215 4 991 2 731 2 469 2 479 2 1001 2 225 2 485 6 228 2 227 2 1003 6 494 4 1013 12 743 4 504 6 237 6 1025 2 753 2 755 6 1027 8 1030 2 763 8 1033 4 523 2 522 2 772 2 524 2 774 2 773 2 1042 4 1046 2 267 2 780 8 
271 4 108 6 755 6 335 2 705 4 669 4 544 2 832 2 546 2 792 4 371 2 895 2 673 2 865 2 582 2 124 2 522 2 524 2 616 4 352 2 25 2 494 2 906 2 202 2 384 2 451 2 453 2 297 2 878 2 357 4 174 6 176 2 178 2 67 2 693 2 
782 2 914 2 271 4 398 2 8 2 544 2 546 2 925 2 792 4 673 2 795 3 550 2 796 2 17 2 933 2 25 2 168 4 290 2 34 2 297 2 38 8 174 6 302 2 418 2 176 2 178 2 693 2 570 2 426 6 699 24 428 4 705 4 832 2 835 4 582 2 839 2 202 2 843 2 976 2 451 2 453 2 204 2 596 2 721 2 67 2 463 2 465 4 335 2 731 2 479 2 1001 2 81 2 228 2 611 2 82 6 865 2 616 2 352 2 494 2 742 2 878 2 357 28 881 2 366 2 108 6 753 2 755 6 758 3 111 2 886 2 371 2 895 2 763 6 119 3 896 2 124 2 899 2 126 4 523 2 522 2 524 2 380 2 906 2 384 2 387 3 267 2 388 2 659 4 780 6 
271 4 465 2 335 2 669 8 544 4 546 2 792 4 926 2 1001 2 793 2 673 2 82 4 865 2 616 10 25 4 352 2 494 2 290 2 291 2 34 2 297 2 357 12 878 4 174 6 176 2 178 2 693 4 570 2 699 6 1025 2 108 6 755 8 887 2 705 6 832 2 371 2 894 2 316 2 895 2 896 2 1033 4 582 2 124 2 522 2 772 2 1038 2 198 2 524 2 380 2 1042 2 906 2 202 2 384 2 1046 2 451 2 976 2 453 4 204 2 659 2 67 2 
271 4 465 2 335 2 669 8 469 2 544 4 792 4 926 2 1001 2 793 2 673 2 82 4 865 2 616 10 25 4 352 2 494 2 290 2 291 2 34 2 297 2 357 12 878 4 174 6 176 2 178 2 693 4 567 2 570 2 884 2 699 6 1025 2 108 8 755 8 887 2 705 8 832 2 371 2 894 2 316 2 895 2 896 2 1033 4 582 2 124 2 522 2 772 2 198 2 524 2 380 2 1042 2 906 2 202 2 134 4 384 2 1046 2 976 2 451 2 453 4 204 2 659 2 67 2 
176 2 970 2 335 2 
176 2 970 2 335 2 
784 2 271 4 664 4 667 2 398 2 669 4 544 2 792 4 926 2 673 4 675 2 550 2 799 2 933 2 168 4 25 2 290 2 38 2 174 12 418 2 302 2 176 6 303 2 693 2 424 2 570 2 426 6 819 2 699 16 572 2 428 4 824 2 705 16 832 2 315 4 835 4 580 2 587 4 839 2 198 4 970 2 202 2 843 2 976 2 204 2 453 4 596 2 721 2 724 2 985 4 602 4 465 4 215 4 335 4 995 2 731 2 469 4 853 2 470 2 473 2 479 2 225 2 1001 2 485 2 81 2 228 2 861 2 82 6 1002 2 616 6 352 2 494 4 743 2 878 4 357 24 623 2 1025 2 366 2 753 2 108 12 755 6 111 2 886 6 887 2 763 2 119 2 895 4 896 2 1033 4 768 4 523 2 772 2 524 2 773 4 380 2 1042 2 905 2 383 4 1046 2 267 2 388 2 659 4 660 2 780 2 
932 2 850 2 699 2 168 2 921 2 905 2 842 2 995 2 843 2 76 2 976 2 743 2 357 4 894 2 485 2 610 2 724 2 
784 2 271 4 664 4 398 2 669 4 544 2 792 4 926 2 673 4 675 2 550 2 799 2 933 2 168 2 25 2 169 2 290 2 291 2 38 2 174 12 418 2 302 2 176 6 303 2 693 2 424 2 570 2 426 6 819 4 699 16 572 2 428 4 824 2 705 16 832 2 315 4 835 4 580 2 54 2 587 4 839 2 198 4 970 2 202 2 976 2 453 4 204 2 596 2 721 2 724 2 985 4 602 4 465 4 989 2 215 4 335 4 995 2 731 2 469 4 853 2 338 2 479 2 225 2 1001 2 485 2 81 2 228 2 861 2 82 6 1002 2 616 6 352 2 494 4 878 4 357 24 623 2 1025 2 366 2 753 2 108 12 755 6 111 2 886 6 887 2 763 2 119 4 895 4 896 2 1033 4 768 4 523 2 772 2 524 2 773 4 380 2 1042 4 905 2 383 4 1046 2 262 2 267 2 388 2 659 4 780 2 
784 2 271 4 664 4 274 2 398 2 669 4 544 2 792 4 926 2 673 4 675 2 550 2 799 2 933 2 168 4 25 2 290 2 291 2 38 2 174 12 418 2 302 2 176 6 303 2 693 2 424 2 570 2 426 6 819 2 699 16 572 2 428 4 824 2 313 2 705 16 832 2 315 4 835 4 580 2 587 4 839 2 198 4 970 2 973 2 202 2 843 2 976 2 204 2 453 4 596 2 721 2 724 2 985 4 602 4 465 4 215 4 335 4 995 2 731 2 469 4 853 2 479 2 484 2 225 2 1001 2 485 2 81 2 228 2 861 2 82 6 1002 2 616 6 352 2 494 4 743 2 878 4 357 24 98 2 623 2 1025 2 366 2 753 2 108 12 755 6 111 2 886 6 887 2 763 2 119 2 895 4 896 2 1033 4 768 4 523 2 772 2 524 2 773 4 380 2 1042 4 905 2 383 4 1046 2 267 2 388 2 659 4 780 2 
1 16 2 2 535 2 537 2 538 2 3 2 539 12 5 16 6 2 540 4 542 22 543 2 9 2 545 2 548 10 549 2 550 2 552 6 553 2 21 2 23 4 24 2 554 2 555 2 26 2 556 2 29 2 559 2 30 2 31 2 32 2 35 2 36 14 37 1 38 52 562 138 564 2 565 2 40 16 570 2 45 4 574 2 573 22 46 2 575 2 48 4 576 2 577 3 49 2 51 44 583 2 586 28 588 3 56 2 589 4 57 4 59 4 58 16 60 2 590 2 592 2 593 2 594 2 62 2 595 2 597 2 66 8 70 2 601 2 603 32 604 2 74 2 75 2 607 8 608 2 79 2 609 12 81 6 611 2 82 6 614 24 86 2 87 8 90 4 91 2 618 2 94 2 99 2 101 28 625 2 628 2 104 4 107 2 631 2 632 4 634 4 635 16 636 2 113 2 117 2 639 8 119 46 641 4 120 2 121 2 122 10 645 2 646 2 647 4 125 2 126 12 648 2 128 26 650 2 130 2 135 2 137 2 140 2 656 2 142 3 657 2 659 4 143 2 661 4 144 12 149 16 154 2 666 28 668 22 155 4 156 2 157 2 672 2 160 2 162 2 676 2 163 90 164 2 168 4 167 2 170 2 172 2 686 2 685 56 688 16 689 2 175 14 177 8 179 2 180 2 181 2 694 4 182 2 695 16 699 44 700 60 184 28 187 2 188 4 189 2 191 3 706 36 194 2 709 2 715 2 716 2 718 2 199 2 203 2 719 8 204 2 206 4 207 2 720 18 208 28 721 2 722 2 209 4 723 2 210 2 212 3 725 2 213 2 728 38 214 3 216 2 730 2 218 2 735 30 736 2 220 28 222 4 226 24 228 2 229 80 737 12 232 2 739 2 236 14 745 2 750 2 751 2 753 4 758 2 244 4 247 2 760 2 763 14 766 4 769 20 770 16 253 2 252 2 255 16 256 2 773 8 258 2 260 2 776 4 261 1 266 12 267 8 779 2 780 14 782 2 785 3 786 2 787 52 789 2 278 2 279 46 794 4 795 46 800 2 801 2 281 6 283 2 806 28 286 2 808 6 287 6 290 2 289 2 295 8 813 2 814 2 301 16 300 2 818 2 305 2 307 2 306 2 820 2 821 4 822 2 310 6 825 2 826 2 831 2 833 2 835 6 836 4 839 8 318 2 840 6 320 12 321 2 841 4 324 2 325 2 843 2 844 2 846 12 328 16 848 2 851 4 334 6 336 32 855 2 857 12 341 2 342 3 858 2 859 16 867 10 346 2 348 22 349 2 871 12 351 8 353 4 354 2 875 32 355 3 876 4 357 80 879 2 358 12 880 2 881 2 883 4 362 2 364 2 365 52 367 2 886 2 368 8 369 52 888 2 889 2 890 2 893 2 896 2 898 2 899 2 373 6 377 2 380 2 381 3 383 126 907 2 387 16 908 2 909 10 388 2 910 3 912 24 918 4 393 4 397 2 398 2 923 3 924 2 925 2 405 4 409 16 933 6 935 8 937 2 413 2 938 12 941 4 415 2 416 2 418 4 419 4 946 2 420 4 422 2 421 2 948 2 423 2 950 2 951 2 426 14 428 6 429 102 954 14 953 2 431 2 433 8 958 2 957 16 959 4 961 2 962 2 437 2 963 32 966 2 968 2 445 32 446 2 974 2 448 2 450 2 976 2 975 2 455 30 978 12 979 2 980 2 459 2 986 10 465 4 467 2 990 2 991 2 992 24 993 20 998 2 472 2 475 2 479 2 1000 2 477 2 482 16 483 2 1001 2 487 1 489 2 1004 2 1008 2 492 2 1012 28 496 2 498 116 499 2 1014 2 501 2 503 12 505 2 507 2 1020 2 510 2 1021 8 1023 2 511 2 514 2 517 3 518 2 523 4 1037 8 526 4 1049 2 1050 2 1051 2 529 2 1052 2 1053 28 
212 2 986 2 699 2 831 2 760 2 471 2 279 6 548 4 763 2 119 2 795 2 120 2 961 2 611 2 962 2 867 2 126 2 966 2 318 2 501 2 387 2 38 2 357 2 780 2 
212 2 986 2 699 2 831 2 760 2 471 2 279 6 548 4 763 2 119 2 795 2 120 2 961 2 611 2 962 2 867 2 126 2 966 2 318 2 501 2 387 2 38 2 357 2 780 2 
212 2 986 2 699 2 831 2 760 2 471 2 279 6 548 4 763 2 119 2 795 2 120 2 961 2 611 2 962 2 867 2 126 2 966 2 318 2 501 2 387 2 38 2 357 2 780 2 
787 2 104 2 699 4 988 2 573 4 821 2 605 2 539 2 632 2 152 4 668 4 542 4 429 6 340 3 119 3 120 2 795 3 611 2 551 2 614 3 348 4 737 4 1037 2 589 2 805 2 129 2 808 4 414 2 1044 2 719 2 876 2 263 2 38 2 357 10 266 2 301 6 419 2 41 2 66 2 912 3 
787 2 104 2 699 4 988 2 573 4 821 2 605 2 539 2 632 2 152 4 668 4 542 4 429 6 340 2 119 2 120 2 795 2 611 2 551 2 552 2 614 2 348 4 737 4 1037 2 589 2 321 2 805 2 129 2 808 4 414 2 1044 2 719 2 876 2 263 2 295 2 38 2 357 10 266 2 301 4 419 2 41 2 66 2 912 2 
787 2 104 2 699 4 988 2 573 4 821 2 605 2 539 2 632 2 152 4 668 4 542 4 429 6 340 2 119 2 120 2 795 2 611 2 551 2 552 2 614 2 348 4 737 4 1037 2 589 2 321 2 805 2 129 2 808 4 414 2 1044 2 719 2 876 2 263 2 295 2 38 2 357 10 266 2 301 4 419 2 41 2 66 2 912 2 
787 2 104 2 699 4 988 2 573 4 821 2 605 2 539 2 632 2 152 4 668 4 542 4 429 6 340 2 119 2 120 2 795 2 611 2 551 2 552 2 614 2 348 4 737 4 1037 2 589 2 321 2 805 2 129 2 808 4 414 2 1044 2 719 2 876 2 263 2 295 2 38 2 357 10 266 2 301 4 419 2 41 2 66 2 912 2 
787 2 104 2 699 4 988 2 573 4 821 2 605 2 539 2 632 2 152 4 668 4 542 4 429 6 340 2 119 2 120 2 795 2 611 2 551 2 552 4 614 2 348 4 737 4 1037 2 589 2 321 4 805 2 129 2 808 4 414 2 1044 2 719 2 876 2 263 2 295 4 38 2 357 10 266 2 301 4 419 2 41 2 66 2 912 2 
460 2 1007 2 11 2 167 2 790 2 407 2 
875 2 803 2 319 2 481 2 389 2 692 2 790 2 
624 1 626 2 391 2 699 8 752 2 186 1 190 2 637 2 856 2 762 2 1001 2 434 2 612 2 1032 2 519 2 19 1 521 2 166 2 1010 1 902 2 591 2 132 2 1013 2 1048 2 357 10 531 1 
103 4 1020 2 104 6 699 2 73 2 821 2 334 4 511 2 48 2 115 2 117 2 584 2 552 2 737 12 439 2 1037 6 589 6 650 2 321 2 841 2 808 4 172 2 719 6 876 6 206 2 529 2 295 4 357 2 301 16 419 6 66 6 
699 1 681 1 573 2 442 2 668 2 542 2 638 2 671 2 400 2 474 7 357 1 402 2 299 2 515 2 100 2 420 2 816 4 765 2 
573 2 442 4 668 2 542 2 638 2 671 4 400 2 474 6 402 2 299 2 515 2 100 2 420 4 816 4 765 2 
699 1 681 1 573 2 442 8 668 2 542 2 638 8 671 8 400 2 474 10 357 1 402 2 299 6 515 2 100 2 420 8 816 4 765 2 
573 2 442 2 668 2 542 2 671 2 400 2 474 2 402 2 515 2 100 2 420 2 816 2 765 2 
916 4 146 2 399 2 928 2 674 2 929 2 16 2 802 2 933 2 557 2 30 2 171 2 294 6 173 2 417 2 418 4 426 22 699 32 428 12 311 4 827 2 314 1 708 2 834 2 956 2 579 2 835 10 317 2 964 4 713 2 965 2 61 2 207 2 845 2 456 2 327 2 981 2 599 4 69 2 729 2 331 6 466 2 606 2 854 2 339 2 78 4 81 2 491 8 497 3 96 2 357 36 621 2 361 2 749 2 1020 2 753 4 1026 2 754 4 243 2 247 2 900 2 523 2 127 16 131 2 259 2 777 2 139 2 268 4 269 2 
916 2 1020 2 426 12 699 12 466 2 753 2 428 4 243 2 541 2 247 2 834 2 835 4 81 4 713 2 933 4 491 2 523 2 127 4 131 2 30 2 171 2 207 2 357 14 621 2 981 2 418 2 599 2 
916 2 729 2 466 2 331 4 339 2 854 2 928 2 674 2 929 2 81 6 16 2 802 2 933 6 282 2 491 6 557 4 30 2 560 2 171 2 294 4 173 2 357 30 621 2 418 6 815 2 361 2 304 2 627 1 1019 1 1020 2 426 20 1022 1 699 26 753 6 311 2 428 10 110 2 243 2 247 2 708 2 835 8 317 2 964 2 713 2 523 4 127 4 447 1 61 2 777 2 207 2 845 2 530 2 981 2 599 2 269 2 
849 2 534 6 916 4 146 2 917 2 147 2 726 4 662 2 148 2 466 2 396 2 541 2 996 2 734 2 733 2 928 1 80 2 81 2 84 2 490 2 933 2 491 4 615 2 411 2 350 4 412 2 288 2 809 4 27 2 28 6 30 2 171 2 619 2 877 2 356 2 357 44 943 2 621 2 418 2 238 2 360 2 945 2 506 2 508 2 241 2 749 2 1020 2 698 2 426 40 242 2 105 2 363 4 699 42 753 2 428 18 311 1 243 2 704 2 112 2 827 2 247 2 834 2 761 2 892 2 956 2 835 18 713 2 767 2 250 2 900 2 523 2 127 31 440 2 717 2 651 2 652 2 131 2 207 2 327 2 981 2 982 2 390 2 599 4 
438 2 

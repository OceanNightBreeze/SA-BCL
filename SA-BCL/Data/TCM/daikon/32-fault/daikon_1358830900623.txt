#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 342 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 253 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (42,748) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (196,322,488,519,570) (196,322,488,519,570) (196,322,488,519,570) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (42,748) 863 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 310 310 80 80 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 492 218 13 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 105 6 75 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 105 6 75 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I | CONDITION | 910 | if (x) -> if (!x)
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.PptSlice2:arity()I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptSlice0:arity()I
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.Invariant:logOn()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.InvMap:InvMap()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:num_sets()I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:size()I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z | STATEMENT | 149930 | stmt -> ;
daikon.diff.RootNode:RootNode()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127540 | = null
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndColumn()I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:intersection([I[I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:setDiff([I[I)[I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONSTANT | 17989 | 115 -> 1
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Invariant:justified()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.PptSlice1:num_samples()I
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 21385 | stmt -> ;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Invariant:prob_or(DD)D
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.MathMDE:sign(I)I
daikon.Quant:eq(II)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String; | RETURN | 105067 | return null
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Intern:intern([D)[D
daikon.VarInfo:relate_var()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([S[S)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltsLTE([II)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(JJ)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:lte(II)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3_1()Z | CONDITION | 171435 | if (x) -> if (!x)
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsGT([II)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | OPERATOR | 5137 | + -> /
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z | CONDITION | 31313 | if (x) -> if (!x)
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.ProglangType:dimensions()I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.WeakHasherMap:size()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isFloat()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:memberOf(I[I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltsNotEqualIndex([I)Z | CONSTANT | 177979 | 0 -> 1
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaCharStream:getBeginLine()I
daikon.ProglangType:baseIsFloat()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | RETURN | 184235 | return null
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE:pow(II)I
daikon.ModBitTracker:num_samples()I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:gt(II)Z
daikon.Quant:ne(II)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:slice([III)[I
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.Quant:subsetOf([I[I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:gte(II)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:min_max([I)[I | CONDITION | 6730 | if (x) -> if (!x)
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:isScalar()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node()V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant; | RETURN | 1102 | return null
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:eltsEqual([II)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Debug:logDetail()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:isArray()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:pairwiseEqual([I[I)Z | STATEMENT | 165422 | stmt -> ;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([I)[I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:sameLength([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndLine()I
daikon.Quant:memberOf(D[F)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eq(DD)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
352 2 368 2 116 2 267 2 505 2 555 2 691 2 600 4 70 2 
668 2 155 2 378 6 797 2 674 2 799 2 566 2 684 2 839 6 113 6 806 2 
317 2 116 2 745 2 516 2 611 6 229 2 441 6 505 2 523 2 479 6 695 4 148 4 71 6 
149 2 334 4 469 10 116 6 4 10 74 2 425 2 595 4 563 4 10 10 505 6 853 16 542 8 627 8 250 16 349 2 254 8 284 16 832 6 58 12 227 2 195 2 145 10 33 8 289 30 814 2 111 26 332 4 642 10 444 6 
185 6 736 4 
79 2 
469 2 689 2 559 2 4 2 560 2 595 2 10 4 717 2 853 2 250 2 303 2 284 2 832 2 635 2 58 2 145 2 33 2 289 6 111 4 234 2 841 2 642 2 387 2 
178 6 469 4 307 2 447 4 591 4 284 8 4 4 450 2 58 5 145 4 563 2 289 14 111 12 853 8 385 6 250 8 642 4 
671 2 42 2 501 2 329 4 121 2 342 2 579 2 361 2 551 2 751 2 522 6 493 2 134 2 220 2 544 2 655 2 
440 2 664 2 404 2 439 2 253 2 
352 2 793 2 42 2 746 2 754 2 
469 16 149 2 178 6 447 4 116 4 591 4 4 16 648 4 423 2 422 2 595 2 10 6 246 6 123 6 187 2 505 4 853 32 627 6 250 32 598 2 808 6 374 4 828 4 284 32 23 4 832 4 731 6 58 22 145 16 330 2 289 54 33 18 111 48 521 2 385 6 587 4 642 16 389 8 444 4 
342 2 42 2 220 2 
669 2 548 2 366 2 681 2 748 2 213 10 580 22 550 2 487 2 683 2 777 2 251 2 333 2 37 2 
336 2 768 2 116 22 296 2 182 2 5 2 189 2 505 20 399 2 570 2 510 2 513 4 22 4 357 2 519 2 196 2 464 2 86 2 90 1 203 2 264 4 589 2 364 2 531 2 416 2 41 2 845 1 97 2 647 1 271 6 272 1 750 2 541 2 478 4 48 2 650 2 599 2 656 2 375 2 376 2 602 2 759 2 291 6 68 2 869 2 70 2 620 2 
350 2 
116 2 377 2 
116 4 457 2 359 2 
818 8 622 2 496 18 117 2 118 12 708 2 395 2 120 4 240 2 297 2 298 2 242 6 715 2 128 8 190 2 720 4 571 48 135 14 136 2 511 2 512 2 630 4 573 2 725 14 780 10 680 2 458 2 634 14 24 4 517 14 29 10 258 2 638 14 840 2 205 14 412 10 526 2 265 2 790 2 529 2 152 2 151 48 153 10 415 2 846 14 318 8 474 10 847 2 848 18 849 14 851 10 320 6 274 4 277 48 428 10 101 6 430 2 597 2 279 2 54 14 221 2 856 2 546 2 283 2 657 2 811 6 608 10 437 14 57 18 659 2 484 2 661 2 702 4 232 4 616 2 815 4 662 14 176 4 704 2 443 4 494 2 666 2 
235 1 838 2 362 2 7 2 
643 2 
334 2 744 2 639 2 42 2 249 2 863 2 362 2 
163 2 639 2 362 2 
639 2 740 2 362 2 
838 2 435 2 679 2 
639 2 362 2 
679 2 784 2 
677 2 362 2 
838 2 679 2 823 2 
408 2 838 2 742 2 
838 2 678 2 288 2 
838 2 210 2 490 2 
838 2 383 2 216 2 
679 2 749 2 
362 2 696 2 
574 2 742 2 
678 2 584 2 
490 2 305 2 
216 2 127 2 
679 2 536 2 
216 2 98 2 
490 2 214 2 
678 2 106 2 
309 2 742 2 
838 2 679 2 868 2 823 2 
838 2 679 2 868 2 605 2 823 2 
838 2 238 2 679 2 
838 2 476 2 679 2 
644 2 142 2 379 2 16 2 
42 2 739 2 863 2 212 2 
353 2 744 2 42 2 739 2 863 2 212 2 
334 2 266 2 639 2 42 2 863 2 362 2 
20 2 115 2 
334 2 724 2 42 2 863 2 
490 2 515 2 
216 2 143 2 
471 2 742 2 
678 2 431 2 
678 2 216 2 201 2 
678 2 216 2 290 2 
369 2 678 2 216 2 
245 2 678 2 216 2 
352 2 667 6 728 2 42 2 82 2 863 2 596 2 
679 2 180 2 
453 2 495 2 670 2 225 2 549 2 419 2 864 4 561 2 327 2 300 4 228 2 46 2 580 6 850 2 503 2 409 2 640 2 467 2 
838 2 53 2 
650 2 
768 2 336 6 116 26 673 2 451 2 5 2 567 2 22 4 357 2 255 4 578 2 464 2 465 2 264 4 364 2 154 2 271 6 477 2 801 3 478 4 599 2 601 2 375 2 376 2 282 3 602 2 701 2 606 2 607 2 287 2 291 4 68 2 706 2 618 2 70 2 620 2 621 2 390 2 819 2 296 2 182 2 183 2 821 2 189 2 718 8 505 26 399 2 400 2 306 2 510 2 401 2 513 4 830 4 193 2 84 2 86 6 316 2 207 5 416 2 532 2 417 2 533 2 97 2 319 3 750 6 219 2 656 2 222 2 547 2 759 2 328 2 764 2 869 2 557 4 
768 2 336 6 116 26 673 2 451 2 5 2 567 2 22 4 781 2 357 2 255 4 578 2 464 2 465 2 264 4 589 2 364 2 271 6 477 2 801 2 478 4 599 2 601 2 375 2 376 2 282 2 602 2 701 2 606 2 607 2 287 2 291 6 68 2 706 2 70 2 620 2 621 2 390 2 819 2 296 2 182 2 183 2 821 2 189 2 718 8 505 26 399 2 80 2 400 2 306 2 510 2 401 2 513 4 830 4 310 2 193 2 84 2 86 6 316 2 207 4 531 2 416 2 532 2 417 2 533 2 97 2 538 2 319 2 750 6 219 2 656 2 547 2 759 2 328 2 764 2 869 2 557 4 
454 2 
11 2 345 2 
1 2 446 2 236 2 116 12 770 4 558 4 181 4 499 2 5 2 189 2 132 2 505 6 568 2 507 2 509 2 779 8 513 2 22 2 633 2 732 2 833 2 733 2 834 2 313 4 262 2 839 6 788 2 206 2 364 2 155 4 794 2 646 10 593 2 97 2 534 2 473 2 271 4 797 2 44 4 649 2 799 4 651 2 805 2 653 2 806 2 656 2 167 2 376 2 324 2 436 2 325 2 56 2 378 6 609 2 108 8 110 2 486 4 113 6 870 2 620 2 
1 2 446 2 236 2 116 12 770 4 558 4 181 4 499 2 5 2 674 2 189 2 132 2 505 6 568 2 507 2 509 2 779 8 513 2 22 2 633 2 732 2 833 2 636 2 733 2 834 2 313 4 262 2 839 8 206 2 364 2 155 4 794 2 646 10 593 2 97 2 534 2 473 2 271 4 797 2 44 4 649 2 799 4 805 2 653 2 806 2 656 2 167 2 376 2 324 2 436 2 325 2 56 2 378 6 286 4 609 2 108 8 110 2 486 4 63 2 113 8 870 2 620 2 
446 2 770 4 155 2 794 2 732 2 473 2 833 2 181 4 378 2 834 2 799 2 110 2 486 2 132 2 568 2 113 2 509 2 167 2 
1 2 446 2 236 2 116 12 770 4 558 4 181 4 499 2 5 2 674 2 189 2 132 2 505 6 568 2 507 2 509 2 779 4 513 2 22 2 633 2 732 2 833 2 733 2 834 2 313 4 262 2 839 6 788 2 206 2 364 2 155 4 794 2 646 6 593 2 97 2 534 2 473 2 271 4 797 2 44 4 649 2 799 4 651 2 805 2 653 2 656 2 167 2 376 2 324 2 436 2 325 2 56 2 378 4 609 2 108 4 110 2 486 4 113 6 870 2 620 2 
1 2 668 2 446 2 236 2 116 12 770 4 558 4 181 4 499 2 5 2 189 2 132 2 505 6 568 2 507 2 509 2 779 4 513 2 22 2 633 2 732 2 833 2 733 2 834 2 313 4 262 2 839 6 788 2 206 2 364 2 155 4 794 2 646 6 593 2 97 2 534 2 473 2 271 4 797 2 44 4 649 2 799 4 651 2 805 2 653 2 656 2 167 2 376 2 324 2 436 2 325 2 56 2 378 6 609 2 108 4 110 2 486 4 113 4 870 2 620 2 
1 2 446 2 236 2 116 12 770 4 558 4 181 4 499 2 5 2 189 2 132 2 505 6 568 2 507 2 509 2 779 8 513 2 22 2 633 2 732 2 833 2 733 2 834 2 313 4 262 2 839 6 788 2 206 2 364 2 155 4 794 2 646 6 593 2 97 2 534 2 473 2 271 4 797 2 44 4 649 2 799 4 651 2 805 2 653 2 806 2 656 2 167 2 376 2 324 2 436 2 325 2 56 2 378 6 609 2 108 4 110 2 486 4 113 6 870 2 620 2 
1 2 668 2 446 2 236 2 116 12 770 4 558 4 181 4 499 2 5 2 189 2 132 2 505 6 568 2 507 2 509 2 779 8 513 2 22 2 633 2 732 2 833 2 733 2 834 2 313 4 262 2 839 8 788 2 206 2 364 2 155 4 794 2 646 10 593 2 97 2 534 2 473 2 271 4 797 2 44 4 649 2 799 4 651 2 805 2 653 2 806 2 656 2 167 2 376 2 324 2 436 2 325 2 56 2 378 8 609 2 108 8 110 2 486 4 113 6 870 2 620 2 
1 2 446 2 236 2 116 12 770 4 558 4 181 4 499 2 5 2 189 2 132 2 505 6 568 2 507 2 509 2 779 8 513 2 22 2 633 2 732 2 833 2 733 2 834 2 313 4 262 2 839 6 788 2 206 2 364 2 155 4 794 2 646 10 593 2 97 2 534 2 473 2 271 4 797 2 44 4 649 2 799 4 651 2 805 2 653 2 806 2 656 2 167 2 376 2 324 2 436 2 325 2 56 2 378 6 609 2 108 8 110 2 486 4 113 6 870 2 620 2 
1 2 668 4 236 2 446 2 237 2 449 2 451 2 5 2 675 2 252 1 22 4 456 2 457 6 255 4 25 2 257 7 464 12 262 4 264 4 38 2 40 2 473 2 271 6 44 8 478 4 694 2 480 6 280 4 55 1 285 2 56 2 486 4 291 6 703 1 68 2 706 2 70 2 293 6 295 6 296 2 709 1 498 1 73 2 499 4 299 6 718 4 505 24 507 2 509 2 306 2 510 2 513 4 732 2 733 2 86 6 735 6 313 4 314 2 531 2 96 6 97 2 534 2 537 2 99 6 319 2 750 6 100 10 103 4 758 2 324 2 325 2 759 2 760 2 110 2 112 1 113 4 767 2 768 2 336 8 338 8 116 46 770 4 558 6 562 2 774 6 567 2 132 2 568 2 569 1 779 2 350 6 357 2 355 6 577 2 360 6 786 1 788 2 589 2 789 1 364 2 155 4 794 2 593 2 795 2 797 4 799 4 801 2 599 2 805 2 601 2 167 2 375 2 376 2 602 2 377 6 606 2 378 8 609 2 610 2 612 6 174 6 386 2 620 2 619 2 621 2 390 2 819 2 182 2 181 4 189 2 625 2 399 2 401 4 402 6 403 2 633 2 833 2 834 2 836 2 839 12 206 2 207 2 208 2 416 2 646 2 211 2 649 2 429 2 653 2 656 2 857 7 859 2 436 2 862 2 438 2 660 2 233 2 869 2 870 2 
1 2 336 8 768 2 237 2 446 2 236 2 338 8 116 48 770 4 558 6 449 2 451 4 5 2 562 2 675 2 774 6 132 2 567 4 568 2 350 6 779 6 22 4 456 2 457 6 355 6 357 2 360 6 25 2 577 2 255 4 464 12 262 4 264 4 788 2 589 2 38 2 364 2 155 4 40 2 794 2 593 2 795 2 473 2 271 6 44 8 797 4 799 4 801 2 478 4 694 2 805 2 599 2 480 6 806 4 601 2 167 2 280 4 375 2 376 2 602 2 285 2 377 6 56 2 606 2 378 8 609 2 610 2 612 6 174 6 486 4 291 6 386 2 68 2 706 2 293 6 70 2 619 2 620 2 390 2 621 2 295 6 819 4 296 2 73 2 181 4 182 2 299 6 499 4 825 2 718 8 189 2 625 2 505 26 626 2 507 2 399 2 402 6 401 4 510 2 306 2 509 2 403 2 513 4 633 2 732 2 833 2 733 2 834 2 735 6 836 2 86 6 313 4 839 12 314 2 206 2 207 2 208 2 531 2 416 2 646 2 96 6 211 2 97 2 534 2 537 2 99 6 649 2 319 2 750 6 100 10 429 2 653 2 656 2 103 4 859 2 758 2 324 2 436 2 862 2 325 2 759 2 438 2 760 2 110 2 660 2 233 2 113 8 869 2 557 2 870 2 767 2 
1 2 336 8 768 2 237 2 446 2 236 2 338 8 116 48 770 4 558 6 449 2 451 4 5 2 562 2 675 2 774 6 132 2 567 4 568 2 350 6 779 6 22 4 456 2 457 6 355 6 357 2 360 6 25 2 577 2 255 4 464 12 262 4 264 4 788 2 589 2 38 2 364 2 155 4 40 2 794 2 593 2 795 2 473 2 271 6 44 8 797 4 799 4 801 2 478 4 694 2 805 2 599 2 480 6 806 4 601 2 167 2 280 4 375 2 376 2 602 2 285 2 377 6 56 2 606 2 378 8 609 2 610 2 612 6 174 6 486 4 291 6 386 2 68 2 706 2 293 6 70 2 619 2 620 2 390 2 621 2 295 6 819 4 296 2 73 2 182 2 181 4 299 6 499 4 825 2 718 8 189 2 625 2 505 26 626 2 507 2 399 2 402 6 401 4 510 2 306 2 509 2 403 2 513 4 633 2 732 2 833 2 733 2 834 2 735 6 836 2 86 6 313 4 839 12 314 2 206 2 207 2 208 2 531 2 416 2 646 6 96 6 211 2 97 2 534 2 537 2 99 6 649 2 319 2 750 6 100 10 429 2 653 2 656 2 103 4 859 2 758 2 324 2 436 2 862 2 325 2 759 2 438 2 108 4 760 2 110 2 660 2 233 2 113 8 869 2 557 2 870 2 767 2 
1 2 668 2 236 2 446 2 237 2 449 2 451 4 5 2 674 2 675 2 247 2 22 4 456 2 457 12 255 6 25 2 464 10 262 4 264 4 686 6 38 2 40 2 473 2 271 6 44 8 478 4 694 2 480 6 280 4 285 2 56 2 486 4 291 6 68 2 292 6 706 4 70 2 293 6 72 6 295 6 296 2 73 2 711 6 499 4 299 12 718 10 505 24 507 2 508 6 306 2 509 2 510 2 513 4 732 2 733 2 312 6 86 8 735 6 313 4 314 2 531 2 96 12 97 2 534 2 537 2 99 6 319 4 750 8 100 8 103 4 758 2 324 2 325 2 759 2 107 2 108 4 760 2 110 2 113 10 556 2 557 2 767 2 768 2 336 12 338 8 116 52 770 4 558 6 562 2 774 6 567 4 132 2 568 2 779 6 350 12 572 2 357 2 355 6 577 2 360 6 788 2 589 2 364 2 155 4 794 2 593 2 795 2 797 4 798 2 799 4 801 4 599 2 805 2 806 4 601 2 167 2 375 2 376 2 602 2 377 12 606 2 378 10 609 2 610 2 612 6 174 12 386 2 620 2 619 2 621 2 390 4 391 6 623 2 819 4 181 4 182 2 822 6 825 2 189 2 625 2 626 2 399 2 401 4 402 6 403 2 632 6 633 2 192 2 833 2 834 2 836 2 839 16 206 2 207 4 416 2 646 6 211 2 649 2 217 2 429 2 653 2 656 2 859 2 436 2 862 2 438 2 660 2 233 2 869 2 870 2 
236 2 116 4 770 2 155 4 558 2 646 4 534 2 473 2 181 2 44 2 797 2 649 2 799 4 507 2 568 2 653 2 806 2 779 6 509 2 167 2 633 2 436 2 56 2 833 2 378 6 108 4 609 2 834 2 110 2 313 2 839 4 788 2 113 6 870 2 206 2 
768 2 336 8 236 2 116 28 770 2 558 2 340 2 5 2 243 2 568 2 779 6 22 4 357 2 255 4 256 2 464 4 264 4 788 2 589 2 364 2 155 4 593 2 473 2 271 6 44 2 797 2 475 3 799 4 801 3 478 4 599 2 806 2 167 2 375 2 376 2 602 2 56 2 606 2 378 6 609 2 291 6 488 2 68 2 70 2 620 2 621 2 392 2 296 2 181 2 182 2 824 2 189 2 505 24 507 2 399 2 306 2 510 2 401 2 509 2 827 2 513 4 633 2 833 2 834 2 86 6 313 2 839 4 206 2 207 3 208 2 531 2 416 2 646 2 97 2 534 2 649 2 319 3 750 6 100 2 650 2 653 2 656 2 322 2 436 2 759 2 110 2 113 6 869 2 870 2 
633 2 653 2 159 2 
633 2 653 2 159 2 
1 2 768 2 336 2 668 4 236 2 116 24 770 2 558 4 451 4 5 2 674 4 567 4 568 2 779 6 21 4 22 4 357 2 464 4 262 2 264 4 589 2 590 2 364 2 155 4 794 2 367 2 271 6 159 2 797 4 44 4 160 4 799 4 478 4 165 2 278 2 599 2 50 2 806 4 601 4 167 2 280 2 375 2 376 2 602 2 56 2 378 12 381 2 612 2 486 4 291 6 66 2 68 2 70 2 620 2 621 2 393 2 624 2 819 4 296 2 182 2 181 2 713 2 499 4 714 2 500 2 718 4 189 2 505 16 399 2 306 2 510 2 401 6 513 4 308 2 727 2 633 6 732 2 86 2 313 2 200 2 839 16 207 2 531 2 416 2 646 6 97 2 420 2 750 2 752 2 100 2 653 4 656 2 103 2 758 2 324 2 325 2 759 2 108 4 760 2 110 4 660 2 764 4 869 2 113 12 
688 2 280 2 590 2 116 4 482 2 95 2 862 2 97 2 367 2 714 2 464 2 675 2 612 2 11 2 100 2 132 2 505 2 
1 2 768 2 336 2 668 4 236 2 116 24 770 2 558 4 451 4 5 2 674 4 565 2 567 4 568 2 779 6 21 4 22 4 357 2 464 2 583 2 262 4 264 4 589 2 590 2 364 2 155 4 794 2 367 2 271 6 159 2 44 4 797 4 160 4 799 4 478 4 165 2 278 2 599 2 50 4 806 4 601 4 167 2 375 2 376 2 602 2 56 2 378 12 612 2 486 4 64 2 291 6 66 2 68 2 70 2 620 2 621 2 393 2 819 4 296 2 182 2 181 2 499 4 714 2 500 2 718 4 189 2 505 16 399 2 721 2 306 2 510 2 401 6 513 4 308 2 727 2 633 6 732 2 733 2 86 2 313 2 200 2 839 16 414 2 207 4 531 2 416 2 646 6 97 2 750 2 752 2 653 4 656 2 103 2 758 2 324 2 325 2 759 2 108 4 760 2 110 4 660 2 764 4 869 2 113 12 
1 2 768 2 336 2 668 4 236 2 116 24 770 2 558 4 451 4 5 2 674 4 567 4 568 2 779 6 21 4 138 2 22 4 357 2 464 4 685 2 262 4 264 4 589 2 590 2 364 2 155 4 794 2 367 2 271 6 159 2 797 4 44 4 160 4 799 4 478 4 165 2 278 2 599 2 50 2 806 4 601 4 167 2 809 2 280 2 375 2 376 2 602 2 56 2 378 12 612 2 486 4 291 6 66 2 68 2 70 2 620 2 621 2 393 2 819 4 296 2 182 2 181 2 499 4 714 2 500 2 718 4 189 2 505 16 399 2 306 2 510 2 401 6 513 4 308 2 727 2 633 6 732 2 733 2 86 2 313 2 200 2 839 16 207 2 843 2 531 2 416 2 646 6 97 2 750 2 752 2 100 2 653 4 656 2 103 2 758 2 226 2 324 2 325 2 759 2 108 4 760 2 110 4 660 2 764 4 869 2 113 12 
445 2 336 16 337 2 3 4 239 2 769 2 447 4 116 28 4 2 5 2 243 2 244 2 773 2 452 4 122 4 248 2 125 2 13 2 346 2 129 2 250 4 778 4 19 2 676 2 137 4 22 4 456 2 358 2 460 2 255 8 577 2 256 2 462 6 31 2 145 2 30 2 464 2 33 4 260 2 264 2 687 2 589 2 469 2 38 2 363 2 364 2 271 6 45 2 162 2 475 2 370 6 800 2 801 6 371 2 478 2 802 2 803 2 372 2 373 2 601 2 51 2 375 2 376 2 284 4 170 4 606 2 58 4 610 2 289 8 485 4 62 2 613 4 291 4 489 6 492 2 68 2 706 6 707 2 70 2 620 2 390 6 178 6 179 2 621 2 392 2 296 2 182 2 77 2 502 2 397 2 186 2 718 16 189 2 191 2 826 12 398 2 505 22 399 2 629 2 510 2 401 2 827 2 403 2 513 4 631 2 729 2 83 2 518 2 197 2 198 2 86 10 836 2 87 12 89 2 410 2 642 2 525 4 92 2 93 2 207 6 530 22 844 2 531 2 416 2 417 4 97 2 422 4 319 6 750 10 852 2 853 4 218 2 432 2 654 2 656 2 859 2 757 2 756 2 759 2 761 1 109 2 552 4 111 6 553 2 867 2 762 2 663 2 869 2 665 4 
390 6 336 2 207 3 528 3 116 2 712 2 421 2 801 3 319 3 750 2 540 2 164 2 14 2 505 2 723 4 606 2 782 2 255 2 86 2 581 2 231 2 641 2 524 2 588 2 
723 4 390 6 207 2 336 2 528 2 116 2 606 2 712 2 782 2 421 2 255 2 581 2 86 2 319 2 801 2 750 2 540 2 231 2 14 2 164 2 505 2 641 2 524 2 588 2 
723 4 390 6 207 2 336 2 528 2 116 2 606 2 712 2 782 2 421 2 255 2 581 2 86 2 319 2 801 2 750 2 540 2 231 2 14 2 164 2 505 2 641 2 524 2 588 2 
336 2 116 10 4 2 772 2 343 3 564 4 124 2 776 2 505 4 250 2 627 4 628 2 139 4 514 3 141 2 576 6 782 2 145 2 737 4 263 2 642 2 469 2 207 3 690 4 535 4 801 3 275 2 853 2 804 2 854 2 281 2 698 2 223 2 284 2 810 2 606 2 289 5 111 4 816 3 444 2 
336 2 116 10 4 2 772 2 343 2 564 4 124 2 776 2 505 4 250 2 627 4 628 2 139 4 514 2 141 2 576 6 782 2 145 2 33 2 737 4 263 2 642 2 149 2 469 2 207 2 690 4 535 4 801 2 275 2 853 2 804 2 854 2 281 2 698 2 223 2 284 2 810 2 606 2 58 2 289 4 111 4 816 2 444 2 
336 2 116 10 4 2 772 2 343 2 564 4 124 2 776 2 505 4 250 2 627 4 628 2 139 4 514 2 141 2 576 6 782 2 145 2 33 2 737 4 263 2 642 2 149 2 469 2 207 2 690 4 535 4 801 2 275 2 853 2 804 2 854 2 281 2 698 2 223 2 284 2 810 2 606 2 58 2 289 4 111 4 816 2 444 2 
336 2 116 10 4 2 772 2 343 2 564 4 124 2 776 2 505 4 250 2 627 4 628 2 139 4 514 2 141 2 576 6 782 2 145 2 33 2 737 4 263 2 642 2 149 2 469 2 207 2 690 4 535 4 801 2 275 2 853 2 804 2 854 2 281 2 698 2 223 2 284 2 810 2 606 2 58 2 289 4 111 4 816 2 444 2 
336 2 116 10 4 2 772 2 343 2 564 4 124 2 776 2 505 4 250 2 627 4 628 2 139 4 514 2 141 2 576 6 782 2 145 2 33 4 737 4 263 2 642 2 149 4 469 2 207 2 690 4 535 4 801 2 275 2 853 2 804 2 854 2 281 2 698 2 223 2 284 2 810 2 606 2 58 4 289 4 111 4 816 2 444 2 
161 2 12 2 358 2 765 2 413 2 177 2 
12 2 344 2 224 2 645 2 417 2 586 2 59 2 
150 2 116 10 671 1 672 2 43 1 157 2 119 2 341 2 5 2 716 2 505 8 49 2 347 1 858 2 861 2 483 2 356 2 172 1 146 2 174 2 783 2 65 2 554 2 493 1 705 2 36 2 
178 4 469 6 149 2 447 2 116 6 791 2 844 2 4 6 692 2 123 4 505 6 131 2 853 6 250 6 627 4 598 1 722 2 828 2 631 2 284 6 58 4 145 6 289 15 485 2 33 3 111 12 384 2 642 6 91 2 389 2 444 2 
351 2 470 2 2 2 116 1 796 2 535 2 273 2 407 2 32 2 564 2 737 2 505 1 763 2 785 1 807 2 741 2 294 7 468 4 
351 4 470 2 2 2 796 2 535 2 273 4 32 2 407 2 564 2 737 2 763 2 807 2 741 4 294 6 468 4 
351 8 470 2 2 2 116 1 796 2 535 2 273 8 32 8 407 2 564 2 737 2 505 1 763 6 785 1 807 2 741 8 294 10 468 4 
351 2 470 2 2 2 796 2 535 2 273 2 407 2 564 2 737 2 807 2 741 2 294 2 468 2 
335 2 448 2 116 38 771 2 6 2 9 2 126 4 130 4 348 2 18 2 140 4 575 2 144 2 27 4 582 1 147 2 34 2 35 2 261 2 264 18 787 2 589 4 39 2 47 2 693 2 478 16 168 4 169 1 604 2 700 2 380 2 60 2 61 4 614 1 291 32 615 2 617 2 817 2 69 4 388 2 497 2 296 6 710 2 396 2 75 2 184 2 78 2 719 14 505 34 506 2 302 2 304 2 81 2 829 2 831 2 730 2 311 2 734 6 738 2 94 1 531 4 418 5 747 2 424 2 543 2 753 2 102 2 545 2 434 4 433 4 321 4 104 2 860 2 323 2 105 2 759 6 865 1 331 2 230 2 442 2 869 4 114 4 
335 2 0 6 116 46 394 2 296 2 820 2 241 2 339 2 396 2 6 2 75 2 76 4 8 2 504 2 775 2 505 44 719 6 130 4 15 2 133 2 17 2 304 2 455 4 140 2 730 2 354 2 405 2 28 2 27 4 461 2 463 2 835 2 837 2 85 2 637 2 259 2 582 2 147 2 35 2 682 2 466 2 585 2 88 2 204 2 264 20 787 2 589 1 315 4 39 2 743 2 531 1 209 2 592 2 792 2 418 2 594 2 268 2 270 2 158 2 424 2 426 2 478 20 276 2 543 4 755 2 545 2 52 2 102 2 433 38 321 4 855 2 697 2 860 2 481 2 699 2 604 2 759 2 105 2 326 2 171 2 60 6 61 2 382 2 173 2 230 2 175 2 866 2 291 43 491 4 442 2 817 2 869 2 
448 2 116 44 6 2 9 2 126 4 130 4 348 2 18 2 140 4 459 2 575 2 26 2 144 2 27 4 463 6 147 2 34 2 35 2 261 2 264 20 589 5 39 2 156 2 472 2 478 18 168 6 604 2 700 2 380 2 61 6 813 2 382 2 291 39 615 2 67 2 69 6 388 4 296 4 497 2 820 6 710 2 75 2 184 2 301 2 188 2 78 2 719 10 505 40 304 2 829 2 311 2 734 4 835 2 520 2 837 6 738 2 202 2 411 2 842 2 531 5 94 2 418 6 747 2 539 2 426 2 427 8 215 2 543 2 652 8 753 2 102 2 545 2 321 4 433 14 434 2 104 2 860 2 658 8 105 2 759 4 331 2 230 4 869 2 114 1 
335 4 116 28 296 2 396 4 6 2 75 2 505 26 719 8 130 6 15 2 304 2 81 10 726 4 140 2 831 2 730 4 194 2 405 2 406 2 27 6 734 10 461 2 199 2 582 2 147 2 35 2 264 14 787 4 589 10 527 4 39 2 531 10 365 2 94 6 418 2 269 2 426 2 693 2 478 14 166 2 543 2 102 2 545 2 433 14 321 6 169 2 860 2 603 2 323 2 604 2 759 2 105 2 60 6 61 2 230 2 614 2 291 38 442 4 817 4 869 2 114 2 766 2 
812 2 

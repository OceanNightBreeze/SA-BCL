#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 497 553 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (392,482) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 194 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (417,439) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 411 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 411 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 411 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 411 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 411 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 411 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 411 76 68 424 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 50 288 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.ArrayIndexOutOfBoundsException 212 36 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.MathMDE:gcd([I)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:intersection([I[I)[I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | ASSIGN | 35390 | = null
daikon.Quant:eq(II)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:subsetOf([J[J)Z | CONDITION | 196771 | if (x) -> if (!x)
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:min([I)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:lexEqual([I[I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:ne(II)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([I)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:gt(II)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:BeginToken()C
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair; | ASSIGN | 1906 | = null
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE:negate(I)I
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaCharStream:getEndLine()I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:slice([III)[I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_52()Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoAux:hashCode()I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lt(II)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:eltsGT([II)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3R_53()Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20735 | return null
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eltsLT([II)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_2_16(I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | STATEMENT | 19526 | stmt -> ;
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:lexLTE([I[I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z | STATEMENT | 166542 | stmt -> ;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.ModBitTracker:ModBitTracker(I)V | CONSTANT | 2417 | 0 -> 1
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType; | RETURN | 5873 | return null
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName:hashCode()I
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:lexGT([I[I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel; | ASSIGN | 1586 | = null
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166942 | stmt -> ;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:intern([D)[D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_3_1()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:pow(II)I
daikon.Quant:eltsGtIndex([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_50()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I | RETURN | 7061 | return null
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:gte(II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:intern([J)[J

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 2 222 2 155 2 55 2 300 2 101 2 335 2 66 2 104 2 437 2 20 2 106 2 69 2 276 2 242 4 25 2 380 2 205 2 315 2 30 4 550 2 37 6 177 2 
276 4 25 4 472 4 380 8 155 8 46 6 30 12 228 2 431 4 127 6 300 5 550 8 302 2 37 14 437 4 20 4 468 2 
0 2 392 6 393 4 260 2 332 2 7 2 191 2 8 2 301 2 161 2 497 2 163 2 466 14 24 2 72 10 347 2 28 4 480 2 553 2 35 2 114 2 523 2 146 2 526 2 255 2 416 4 149 2 
153 2 530 2 371 2 492 2 264 2 208 2 252 2 32 2 128 2 342 2 
392 2 460 2 526 2 67 2 458 2 
185 6 152 16 155 32 46 6 397 6 159 4 431 4 300 22 127 6 100 4 461 4 338 4 104 2 437 16 20 16 106 4 273 2 276 16 309 6 242 6 25 16 107 2 380 32 472 4 312 2 139 4 26 2 545 6 30 48 516 4 550 32 80 2 320 4 365 8 37 53 386 6 217 2 563 4 
392 2 393 2 332 2 
277 2 349 2 353 10 531 2 491 2 482 2 535 22 210 2 147 2 464 2 559 2 505 2 181 2 71 2 
409 4 244 2 15 2 139 2 382 2 458 2 159 2 10 2 430 2 
137 2 405 6 190 2 203 2 194 2 493 2 533 2 12 2 478 4 198 6 165 2 
41 6 454 2 139 2 225 6 159 2 517 4 268 2 34 2 484 6 364 6 22 2 216 4 40 2 
152 8 155 16 228 4 159 6 300 12 63 4 104 4 20 10 437 10 106 6 243 2 242 10 276 10 25 10 470 2 380 16 139 6 30 26 173 2 520 8 550 16 362 8 37 28 39 4 386 8 116 2 450 2 217 2 182 2 563 6 
439 4 417 4 
264 2 
361 2 
218 2 139 2 
440 2 139 4 206 2 
3 5 74 4 139 2 398 2 159 2 494 2 197 1 479 2 411 2 59 2 554 2 321 2 199 2 525 2 404 4 339 2 451 1 
86 4 292 8 369 2 370 2 223 2 488 8 9 2 11 4 231 2 160 14 99 50 234 2 102 2 16 14 238 2 435 2 17 6 18 18 503 2 307 6 378 10 441 10 442 20 168 50 313 6 314 14 246 14 248 2 445 2 381 14 250 2 316 2 317 2 253 2 385 2 318 14 522 2 524 10 322 14 327 10 187 14 452 8 120 8 258 10 453 18 261 6 43 4 333 2 395 2 193 2 334 4 399 4 56 8 195 2 266 2 130 4 131 14 133 2 341 2 344 6 202 2 136 14 346 2 278 4 351 2 474 2 354 4 476 2 547 2 78 4 143 10 209 2 360 2 551 14 412 2 145 4 284 8 148 2 85 2 558 2 486 2 150 50 366 2 
389 2 419 2 392 2 489 1 125 2 
389 2 419 2 392 2 188 2 125 2 54 2 
419 2 392 2 89 2 204 2 39 2 51 2 
91 2 343 2 
419 2 392 2 39 2 241 2 
235 2 303 2 
263 2 287 2 
548 2 331 2 
434 2 122 2 
122 2 561 2 287 2 
345 2 122 2 287 2 
406 2 122 2 287 2 
79 2 122 2 287 2 
419 2 392 2 224 6 296 2 132 2 19 2 508 2 325 6 
475 2 97 2 
419 2 392 2 14 2 204 2 39 2 51 2 54 2 
176 2 204 2 51 2 
204 2 171 2 51 2 
471 2 97 2 215 2 
204 2 51 2 
97 2 504 2 
51 2 379 2 
521 2 97 2 215 2 
548 2 429 2 215 2 
122 2 29 2 215 2 
235 2 135 2 215 2 
287 2 215 2 446 2 
537 2 97 2 
110 2 51 2 
548 2 5 2 
122 2 92 2 
235 2 400 2 
287 2 289 2 
221 2 97 2 
485 2 287 2 
481 2 235 2 
122 2 213 2 
548 2 501 2 
521 2 97 2 215 2 70 2 
254 2 521 2 97 2 215 2 70 2 
97 2 249 2 215 2 
444 2 97 2 215 2 
473 2 108 2 541 2 201 2 
57 4 2 2 44 2 323 2 274 2 
410 2 215 2 
425 2 51 2 215 2 
514 2 51 2 
84 2 
3 4 74 4 139 2 123 2 398 2 159 2 494 2 479 2 411 2 59 2 554 2 321 2 525 2 404 4 339 2 
3 6 74 4 139 2 123 2 398 2 159 2 494 2 197 2 479 2 411 2 59 2 554 2 321 2 525 2 404 4 339 2 451 2 
121 2 233 2 356 2 
121 2 233 2 356 2 
3 5 74 4 139 2 123 2 398 2 159 2 494 2 197 1 479 2 411 2 59 2 554 2 321 2 525 2 404 4 339 2 451 1 
3 5 74 4 139 2 123 2 398 2 159 2 494 2 197 1 479 2 411 2 59 2 554 2 321 2 525 2 404 4 339 2 451 1 
3 5 74 4 139 2 123 2 398 2 159 2 494 2 197 1 479 2 411 2 59 2 554 2 321 2 525 2 404 4 339 2 451 1 
153 1 119 1 487 2 328 2 3 3 530 1 94 2 424 2 372 2 398 2 159 2 126 2 197 1 403 2 404 2 68 2 339 2 311 2 167 2 74 2 139 6 27 2 112 2 251 2 76 2 142 2 144 2 411 2 113 2 319 1 321 2 525 2 527 2 451 1 
275 2 498 2 4 2 154 2 544 2 532 2 538 2 
13 2 50 2 467 2 538 2 288 2 
518 2 36 2 139 2 212 2 285 2 159 2 367 2 
152 1 88 2 155 6 159 6 127 4 300 1 232 2 338 2 306 2 134 2 20 6 437 6 271 2 276 6 25 6 107 1 380 6 472 2 511 2 139 6 30 12 545 4 447 2 282 2 550 6 365 2 37 15 386 4 562 2 563 2 
291 2 420 2 407 2 6 2 45 2 513 2 139 1 156 7 96 2 355 2 159 1 448 1 459 2 549 2 175 2 483 4 214 2 506 2 
291 2 420 2 407 2 6 4 45 2 513 2 156 6 96 2 355 2 549 2 459 4 175 2 483 4 214 4 506 2 
291 2 420 2 407 2 6 8 45 2 513 2 139 1 156 10 96 6 355 2 159 1 448 1 549 2 459 8 175 2 483 4 214 8 506 8 
291 2 420 2 407 2 6 2 45 2 513 2 156 2 355 2 549 2 459 2 175 2 483 2 214 2 
418 18 293 4 1 4 3 247 294 10 295 6 421 4 422 84 427 2 426 6 159 134 298 4 299 6 432 2 433 10 162 6 164 10 21 36 23 24 308 12 310 2 443 16 169 6 170 24 172 10 174 8 31 26 38 2 321 14 324 4 449 50 451 57 183 4 184 4 330 6 189 4 192 4 48 2 49 4 53 4 457 6 196 6 197 57 60 2 62 4 64 2 65 8 463 10 340 4 339 8 469 2 73 8 74 88 350 6 352 24 75 4 358 22 357 2 77 8 359 2 207 6 363 4 82 24 211 6 83 4 220 4 93 2 95 12 490 6 226 4 373 6 374 2 495 4 229 28 230 16 375 6 98 4 236 6 237 6 376 4 502 6 240 18 105 8 377 16 507 24 509 8 109 6 512 10 247 124 111 2 383 4 515 6 519 6 525 14 115 17 117 2 118 6 388 10 390 90 391 4 529 5 259 16 394 42 124 2 129 2 267 2 401 6 402 2 404 112 269 90 270 92 540 34 138 6 542 11 139 150 140 2 141 8 281 4 552 8 413 4 414 10 556 1 557 8 555 42 415 26 560 8 286 24 290 2 
418 2 368 2 87 2 3 44 294 2 157 2 297 2 428 2 159 44 374 2 299 2 495 2 229 38 230 4 433 2 496 4 499 2 162 2 500 2 304 2 239 2 103 2 164 2 436 2 21 2 377 4 507 2 23 2 438 2 509 2 310 2 166 2 109 4 510 2 512 2 245 4 247 6 172 2 519 2 384 2 33 2 178 2 321 2 525 2 115 2 326 2 118 2 388 2 256 4 387 2 451 2 180 2 186 2 528 6 529 2 259 4 262 2 189 2 455 2 456 2 52 2 265 2 196 2 197 2 58 2 267 2 534 2 60 2 336 2 536 2 65 6 200 2 402 2 463 2 404 20 339 2 539 2 272 2 73 2 74 20 543 2 350 2 139 46 280 2 408 2 477 4 414 2 81 2 82 2 557 2 560 2 290 2 
418 10 293 4 3 104 422 24 423 4 297 2 158 8 159 70 299 4 432 2 433 6 162 4 305 16 164 4 21 6 308 14 310 2 166 10 169 4 443 8 174 5 321 6 179 16 324 4 449 8 451 28 183 4 42 4 329 8 330 4 455 2 53 4 457 4 196 4 197 30 61 2 60 2 64 2 65 6 462 2 337 8 463 4 340 4 339 2 465 4 73 2 74 36 348 4 350 4 75 4 357 2 207 4 363 4 211 4 83 4 220 4 219 2 90 2 93 2 490 4 226 2 227 32 373 4 229 14 230 10 375 4 499 10 236 4 237 4 103 2 502 4 377 10 509 2 109 2 247 24 383 4 515 4 519 4 384 10 525 6 115 10 118 4 388 4 391 4 257 4 529 1 259 10 394 8 396 4 267 2 401 4 402 2 404 44 270 24 540 30 138 4 139 78 546 2 279 2 552 4 413 4 283 8 414 4 557 2 555 16 286 8 290 2 151 4 
418 2 1 2 3 40 226 2 297 2 427 2 159 26 374 2 299 4 230 6 229 14 433 2 162 4 376 2 164 2 377 6 21 2 509 2 310 2 109 2 443 6 247 8 519 4 38 2 321 2 525 2 324 2 115 2 118 4 451 12 388 2 529 2 259 6 124 2 196 4 197 12 129 2 267 2 60 2 65 4 402 2 463 2 404 14 339 2 540 6 542 2 73 2 74 14 543 2 350 4 139 28 141 2 358 10 359 2 552 4 413 2 414 2 557 2 290 2 
47 2 

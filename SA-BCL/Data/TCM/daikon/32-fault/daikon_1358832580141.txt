#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (173,667) (173,667) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (173,667) (173,667) (205,274,300,306,347) (205,274,300,306,347) (205,274,300,306,347) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 402 294 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (195,470) (195,470) (195,470) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V ERROR java.lang.ArrayIndexOutOfBoundsException 581 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (173,667) 123 335 696 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 543 29 522 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 543 29 522 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 543 29 522 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 543 29 522 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:eq(II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:lexLTE([I[I)Z
daikon.PptName:isEnterPoint()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eq(FF)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:size()I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONSTANT | 64756 | 0 -> -1
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaCharStream:readChar()C
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:arity()I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaCharStream:ReadByte()C
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptSlice0:arity()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:ne(II)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.Invariant:justified()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
daikon.Quant:intersection([I[I)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:num_samples()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:gcd(II)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.MathMDE:negate(I)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ModBitTracker:num_sets()I
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaCharStream:BeginToken()C
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:sum([I)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3_16()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ProglangType:baseIsIntegral()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | RETURN | 1527 | return null
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:numIntArrays()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:noDups([I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Ppt:Ppt()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ModBitTracker:num_vars()I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaCharStream:backup(I)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.PptSlice2:arity()I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.ValueSet:ValueSet(I)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | OPERATOR | 54314 | != -> ==
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Node:Node()V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:isIntegral()Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7917 | 3 -> 1
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:eq(DD)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.Invariants:Invariants()V
daikon.Quant:slice([III)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
daikon.Quant:subsetOf([D[D)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:setEqual([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282204 | = null
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I | STATEMENT | 13838 | stmt -> ;
daikon.Quant:subsetOf([F[F)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGTE([II)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
daikon.Quant:memberOf(D[F)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE:modulus([I)[I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:hashCode()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_ntk()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:getBeginLine()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.ModBitTracker:split(I)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177183 | if (x) -> if (!x)
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfo:new_ppt()V
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:lexEqual([I[I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:isScalar()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:memberOf(J[J)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoAux:hashCode()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:gt(II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:eq(JJ)Z
daikon.PptSlice1:num_samples()I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:memberOf(I[I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:memberOf(F[D)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:lte(II)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.InvMap:InvMap()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
173 2 626 2 542 2 623 2 667 2 579 2 287 2 204 2 625 4 
105 6 416 2 530 2 272 2 577 2 443 2 691 2 229 6 59 6 629 2 231 2 
633 6 679 4 667 2 458 4 253 2 374 2 398 6 419 2 173 2 226 2 163 6 578 6 177 2 
308 8 233 6 236 8 511 6 211 4 456 6 667 4 624 6 537 2 213 6 500 2 540 2 519 15 140 2 421 2 546 4 166 14 51 2 354 2 529 8 505 10 657 6 173 4 640 8 94 4 
544 6 700 4 
428 2 
19 2 534 2 269 2 169 2 329 2 26 2 222 2 432 4 217 2 132 2 289 2 478 2 
583 4 481 2 233 16 308 32 236 22 511 4 456 16 560 4 258 6 667 4 624 16 138 2 2 2 213 18 647 4 119 8 519 55 521 6 218 2 652 4 166 48 447 4 502 2 487 6 548 2 252 4 529 32 657 16 505 6 356 6 83 6 173 4 334 4 371 6 276 4 206 2 178 6 640 32 94 2 
531 2 26 2 357 2 
526 2 666 2 184 2 24 22 77 2 429 2 45 10 3 2 150 2 616 2 576 2 445 2 230 2 75 2 
233 2 308 2 236 2 511 2 456 2 309 2 604 2 624 2 259 2 213 2 519 6 166 4 379 2 295 2 25 2 529 2 657 2 505 4 333 2 617 2 88 2 640 2 94 2 
233 4 308 8 236 4 51 2 456 4 624 4 252 4 529 8 572 2 657 4 647 4 83 6 519 16 371 6 166 12 640 8 701 2 
436 2 457 4 311 4 137 2 41 4 689 2 43 2 314 2 341 4 563 14 315 2 121 2 399 2 285 2 141 10 344 4 217 4 523 2 288 4 167 62 52 2 250 4 78 2 655 10 26 8 430 2 331 2 332 2 432 4 451 4 474 2 151 2 557 4 475 4 305 2 531 2 152 2 278 4 357 6 181 2 
359 2 517 2 284 2 627 2 247 2 353 2 428 2 174 2 114 2 58 2 
280 5 281 2 98 2 459 2 537 1 626 2 190 2 545 1 101 1 194 1 293 4 196 2 197 6 380 2 300 2 468 2 202 2 385 1 636 2 302 2 306 2 111 1 476 1 208 1 561 2 312 6 396 4 21 1 649 1 120 1 486 6 407 2 23 2 330 1 656 1 573 1 131 2 413 5 234 2 496 2 39 1 667 24 135 1 339 1 589 2 590 2 343 2 347 2 427 2 431 1 148 2 257 1 684 1 434 2 156 3 358 2 64 4 605 4 363 2 513 2 690 2 444 2 164 2 613 2 173 22 532 4 175 2 373 2 92 2 
667 2 82 2 
565 2 57 2 667 4 
117 2 
337 6 133 2 665 4 535 2 668 2 460 2 4 2 188 4 100 2 675 4 189 4 592 4 243 2 46 2 424 2 49 6 145 2 632 4 297 30 351 6 201 4 595 2 384 6 107 2 147 2 109 6 256 2 554 6 207 6 15 2 155 2 160 2 161 2 562 2 20 2 646 6 364 2 395 2 648 2 518 6 265 2 165 6 74 6 488 6 267 2 527 2 270 2 271 6 80 30 659 2 171 2 227 4 32 2 228 2 86 30 412 6 182 6 
638 2 608 2 33 2 683 1 
30 2 33 2 
50 2 390 4 249 2 512 2 24 6 199 2 185 2 635 2 11 2 484 2 615 2 342 2 441 2 661 2 677 2 403 2 479 2 193 4 
608 2 425 2 
614 2 591 2 26 2 681 2 
614 2 591 2 587 2 26 2 681 2 18 2 
614 2 556 2 140 2 26 2 33 2 670 2 
294 2 402 2 
397 2 614 2 140 2 26 2 
220 2 682 2 
506 2 658 2 
553 2 650 2 
639 2 686 2 
179 2 639 2 658 2 
639 2 35 2 658 2 
381 2 639 2 658 2 
672 2 639 2 658 2 
260 2 195 2 614 2 26 2 108 6 470 4 469 2 473 2 
97 2 533 2 
614 2 140 2 587 2 26 2 33 2 124 2 670 2 
33 2 423 2 670 2 
33 2 497 2 670 2 
97 2 608 2 283 2 
33 2 670 2 
97 2 290 2 
326 2 33 2 
97 2 95 2 608 2 
367 2 608 2 650 2 
547 2 608 2 639 2 
608 2 682 2 695 2 
485 2 608 2 658 2 
520 2 97 2 
33 2 362 2 
40 2 650 2 
634 2 639 2 
585 2 682 2 
581 2 
539 2 97 2 
597 2 658 2 
682 2 157 2 
559 2 639 2 
448 2 650 2 
97 2 95 2 608 2 601 2 
467 2 97 2 95 2 608 2 601 2 
183 2 97 2 608 2 
620 2 97 2 608 2 
510 2 203 2 433 2 631 2 
496 2 
280 2 281 2 98 2 459 2 5 2 626 2 190 2 9 2 465 4 293 4 196 2 197 4 380 6 468 2 636 2 302 2 386 4 116 4 480 2 561 2 312 6 313 2 396 4 21 2 486 4 317 2 219 2 318 4 319 2 407 2 491 2 23 2 493 4 27 2 224 10 336 4 584 4 413 2 234 6 414 2 586 4 667 26 589 2 590 2 594 2 346 2 678 2 427 2 251 2 596 2 431 2 148 2 60 2 434 2 602 2 687 2 158 2 605 4 363 2 688 2 513 2 607 2 439 4 164 2 72 2 610 4 613 6 370 2 173 26 84 2 532 4 373 2 618 2 92 2 
280 2 281 2 98 2 459 2 5 2 626 2 190 2 9 2 463 2 465 4 293 4 196 2 197 5 380 6 468 2 10 2 636 2 302 2 386 4 116 4 561 2 312 6 313 2 396 4 21 2 486 4 317 2 219 2 318 4 319 2 407 2 23 2 493 4 27 2 224 10 128 2 336 4 232 2 584 4 413 2 234 6 414 2 586 4 667 26 589 2 590 2 343 1 346 2 678 2 427 2 251 2 596 2 431 2 148 2 60 2 434 2 602 2 687 2 158 2 605 4 363 2 688 2 513 2 607 2 439 4 444 1 164 2 72 2 610 4 613 6 370 2 173 26 84 2 532 4 373 2 618 2 92 2 
621 2 
110 2 404 2 
667 12 416 2 99 2 536 2 674 2 377 4 242 2 190 2 192 2 422 2 629 4 48 4 464 2 198 2 350 2 105 6 383 4 471 2 552 10 302 2 303 2 507 2 387 8 600 4 59 6 603 2 391 2 392 2 312 4 65 2 645 2 261 2 605 2 365 2 396 2 68 2 69 2 216 2 164 2 693 2 73 2 366 2 407 2 492 4 23 2 694 2 170 8 28 2 127 2 530 4 452 2 173 6 698 2 372 4 373 2 176 2 229 6 92 2 36 2 231 2 
667 12 416 2 99 2 536 2 674 2 377 4 242 2 190 2 192 2 422 2 629 4 48 4 464 2 198 2 350 2 105 8 383 4 355 2 53 4 471 2 552 10 302 2 507 2 387 8 600 4 59 8 603 2 391 2 392 2 312 4 65 2 645 2 605 2 261 2 396 2 365 2 443 2 68 2 69 2 216 2 164 2 693 2 73 2 366 2 407 2 492 4 23 2 694 2 411 2 170 8 28 2 127 2 530 4 452 2 173 6 698 2 372 4 373 2 176 2 229 6 92 2 231 2 
492 4 603 2 198 2 350 2 392 2 645 2 536 2 694 2 530 2 471 2 698 2 377 4 68 2 229 2 59 2 629 2 366 2 48 2 
667 12 416 2 99 2 536 2 674 2 377 4 242 2 190 2 192 2 422 2 629 4 48 4 464 2 198 2 350 2 105 6 383 4 471 2 552 6 302 2 303 2 507 2 387 4 600 4 59 6 603 2 391 2 392 2 312 4 65 2 645 2 261 2 605 2 365 2 396 2 443 2 68 2 69 2 216 2 164 2 693 2 73 2 366 2 407 2 492 4 23 2 694 2 170 4 28 2 127 2 530 4 452 2 173 6 698 2 372 4 373 2 176 2 229 4 92 2 36 2 
667 12 416 2 99 2 536 2 674 2 377 4 242 2 190 2 192 2 422 2 629 4 48 4 464 2 198 2 350 2 105 6 383 4 471 2 552 6 302 2 303 2 507 2 387 4 600 4 59 4 603 2 391 2 392 2 312 4 65 2 645 2 261 2 605 2 365 2 396 2 68 2 69 2 216 2 164 2 693 2 73 2 366 2 407 2 492 4 23 2 694 2 170 4 28 2 127 2 530 4 272 2 452 2 173 6 698 2 372 4 373 2 176 2 229 6 92 2 36 2 
667 12 416 2 99 2 536 2 674 2 377 4 242 2 190 2 192 2 422 2 629 4 48 4 464 2 198 2 350 2 105 6 383 4 471 2 552 6 302 2 303 2 507 2 387 8 600 4 59 6 603 2 391 2 392 2 312 4 65 2 645 2 261 2 605 2 365 2 396 2 68 2 69 2 216 2 164 2 693 2 73 2 366 2 407 2 492 4 23 2 694 2 170 4 28 2 127 2 530 4 452 2 173 6 698 2 372 4 373 2 176 2 229 6 92 2 36 2 231 2 
667 12 416 2 99 2 536 2 674 2 377 4 242 2 190 2 192 2 422 2 629 4 48 4 464 2 198 2 350 2 105 8 383 4 471 2 552 10 302 2 303 2 507 2 387 8 600 4 59 6 603 2 391 2 392 2 312 4 65 2 645 2 261 2 605 2 396 2 365 2 68 2 69 2 216 2 164 2 693 2 73 2 366 2 407 2 492 4 23 2 694 2 170 8 28 2 127 2 530 4 272 2 452 2 173 6 698 2 372 4 373 2 176 2 229 8 92 2 36 2 231 2 
667 12 416 2 99 2 536 2 674 2 377 4 242 2 190 2 192 2 422 2 629 4 48 4 464 2 198 2 350 2 105 6 383 4 471 2 552 10 302 2 303 2 507 2 387 8 600 4 59 6 603 2 391 2 392 2 312 4 65 2 645 2 261 2 605 2 365 2 396 2 68 2 69 2 216 2 164 2 693 2 73 2 366 2 407 2 492 4 23 2 694 2 170 8 28 2 127 2 530 4 452 2 173 6 698 2 372 4 373 2 176 2 229 6 92 2 36 2 231 2 
536 2 377 4 7 6 190 2 192 2 196 2 197 6 198 2 380 6 549 10 383 6 550 2 12 2 551 7 552 2 555 2 387 2 389 1 210 7 391 2 392 2 561 2 212 2 396 4 564 4 214 1 22 1 565 6 400 2 216 2 407 2 23 2 27 2 224 4 408 2 28 2 31 6 229 8 36 2 413 2 234 8 586 2 235 6 239 1 416 4 589 2 44 2 590 2 242 2 422 2 47 2 48 4 427 2 248 2 251 2 600 4 59 4 434 2 603 2 63 2 605 4 261 2 65 2 606 2 607 2 66 2 440 6 444 2 69 2 68 2 72 2 73 2 266 1 610 2 613 6 79 2 81 2 82 6 272 4 452 4 84 4 453 2 87 8 91 6 90 2 92 2 93 2 619 2 280 2 96 1 281 2 98 2 459 2 99 2 626 2 286 1 629 4 464 2 293 4 296 2 104 6 105 12 468 2 301 2 636 12 106 6 637 6 471 2 302 2 112 2 115 4 644 2 310 6 117 6 312 6 313 2 645 2 486 2 651 2 653 2 492 4 125 2 493 4 127 2 130 2 662 6 336 2 134 1 667 46 338 6 669 6 674 2 676 6 343 2 348 2 350 2 680 2 148 2 507 2 508 2 363 2 365 2 513 2 514 2 516 2 164 2 692 1 693 4 366 2 168 2 694 2 530 4 173 24 370 2 698 2 372 8 532 4 373 2 176 2 
280 2 281 2 98 2 459 2 99 2 536 2 626 2 7 6 377 4 192 2 190 2 629 4 464 2 293 4 196 2 104 6 296 2 380 6 198 2 197 6 105 12 549 10 382 2 468 2 383 6 301 2 106 6 636 12 637 6 550 2 12 2 552 2 471 2 302 2 555 2 387 6 112 2 115 4 116 2 644 2 391 2 392 2 117 6 310 6 561 2 312 6 645 2 313 2 212 2 396 4 564 4 400 2 565 6 486 2 216 2 651 2 653 2 407 2 492 4 125 2 23 2 493 4 27 2 224 8 408 2 28 2 127 2 130 2 31 6 662 6 229 8 36 2 231 4 336 2 413 2 586 2 234 8 235 6 338 6 667 48 416 4 669 6 44 2 589 2 590 2 674 2 676 6 242 2 343 2 422 2 47 2 48 4 348 2 427 2 248 2 350 2 680 2 251 4 148 2 55 2 507 2 600 4 59 8 508 2 434 2 603 2 63 2 65 2 261 2 605 4 606 2 363 2 513 2 365 2 514 2 607 4 66 2 440 6 516 2 444 2 68 2 69 2 164 2 72 2 693 4 73 2 610 2 366 2 613 6 168 2 79 2 81 2 694 2 82 6 530 4 452 4 370 4 173 26 698 2 84 4 372 8 453 2 532 4 176 2 373 2 87 8 90 2 91 6 92 2 93 2 619 2 
280 2 281 2 98 2 459 2 99 2 536 2 626 2 7 6 377 4 192 2 190 2 629 4 464 2 293 4 196 2 104 6 296 2 380 6 198 2 197 6 105 12 549 10 382 2 383 6 468 2 301 2 106 6 636 12 637 6 550 2 12 2 552 6 471 2 302 2 555 2 387 6 112 2 115 4 116 2 644 2 391 2 392 2 117 6 310 6 561 2 312 6 645 2 313 2 212 2 396 4 564 4 400 2 565 6 486 2 216 2 651 2 653 2 407 2 492 4 125 2 23 2 493 4 27 2 224 8 408 2 28 2 127 2 130 2 31 6 662 6 229 8 36 2 231 4 336 2 413 2 586 2 234 8 235 6 338 6 667 48 416 4 669 6 44 2 589 2 590 2 674 2 676 6 242 2 343 2 422 2 47 2 48 4 348 2 427 2 248 2 350 2 680 2 251 4 148 2 55 2 507 2 600 4 59 8 508 2 434 2 603 2 63 2 65 2 261 2 605 4 606 2 363 2 365 2 513 2 514 2 607 4 66 2 440 6 516 2 444 2 68 2 69 2 164 2 72 2 693 4 73 2 610 2 366 2 613 6 168 2 79 2 81 2 694 2 82 6 170 4 530 4 452 4 370 4 173 26 698 2 84 4 372 8 453 2 532 4 176 2 373 2 87 8 90 2 91 6 92 2 93 2 619 2 
536 2 377 4 7 6 192 2 190 2 196 2 197 6 198 2 380 8 549 8 382 2 383 6 550 2 12 2 552 6 555 2 387 6 209 6 391 2 392 2 561 2 212 2 396 4 564 4 400 2 565 12 216 2 405 2 407 2 23 2 221 6 27 2 224 10 408 2 28 2 31 12 229 10 36 2 231 4 413 4 234 12 586 2 235 12 416 4 589 2 44 2 590 2 242 2 422 2 47 2 48 4 427 2 248 2 251 4 55 2 600 4 59 10 434 2 61 2 603 2 63 2 605 4 261 2 65 2 606 2 607 4 66 2 264 2 440 6 444 2 443 2 69 2 68 2 609 6 72 2 73 2 610 4 613 8 450 2 79 2 81 2 82 12 272 2 452 4 84 4 275 6 453 2 277 6 87 8 91 6 89 6 90 2 92 2 93 2 619 2 280 4 622 6 281 2 98 2 459 2 99 2 626 2 629 4 464 2 291 2 293 4 292 2 296 2 104 6 105 16 468 2 301 2 636 10 106 6 637 6 471 2 302 2 112 2 115 4 116 2 644 2 482 6 310 6 117 12 312 6 313 2 645 2 486 4 651 2 653 2 492 4 125 2 493 6 328 6 127 2 130 2 662 12 336 4 664 2 667 52 338 6 669 6 674 2 676 6 343 2 348 2 350 2 680 2 148 2 507 2 508 2 363 2 513 2 365 2 516 2 164 2 693 4 366 2 168 2 528 2 694 2 170 4 530 4 173 24 370 4 698 2 372 8 532 4 176 2 373 2 
603 2 667 4 416 2 261 2 365 2 674 2 377 2 216 2 69 2 192 2 422 2 629 4 73 2 366 2 464 2 492 2 198 2 350 2 105 4 383 2 694 2 170 4 552 4 127 2 471 2 530 4 698 2 372 2 387 6 600 2 176 2 229 6 59 6 36 2 231 2 
280 3 281 2 98 2 459 2 626 2 377 2 192 2 190 2 629 4 464 2 293 4 196 2 197 6 380 6 198 2 105 4 549 2 383 2 468 2 205 2 636 4 552 2 471 2 302 2 387 6 477 2 391 2 312 6 561 2 313 2 396 4 486 3 216 2 322 2 407 2 570 2 492 2 23 2 493 4 27 2 494 2 127 2 229 6 36 2 231 2 413 3 234 8 496 2 667 28 416 2 589 2 590 2 674 2 343 2 422 2 427 2 350 2 504 2 148 2 600 2 59 6 434 2 435 3 603 2 605 4 261 2 363 2 513 2 365 2 514 2 444 2 69 2 164 2 72 2 73 2 366 2 613 6 694 2 530 4 173 24 369 2 698 2 274 2 372 2 84 2 532 4 373 2 176 2 92 2 
192 2 422 2 321 2 
192 2 422 2 321 2 
281 2 98 2 459 2 99 2 536 2 376 2 626 2 377 2 190 2 192 4 629 4 464 2 293 4 196 2 197 6 380 2 105 16 549 2 383 4 468 2 106 2 636 4 552 6 302 2 387 6 112 2 115 2 394 2 561 2 312 6 645 2 313 2 396 4 564 2 486 2 651 2 317 4 321 2 320 2 407 2 406 2 492 2 23 2 327 2 224 4 130 2 34 2 229 12 231 4 586 6 234 2 667 24 42 2 416 4 589 2 499 2 590 2 673 4 674 2 593 2 242 2 343 2 422 6 48 4 503 2 427 2 350 2 251 4 149 6 148 2 600 2 59 12 685 2 434 2 62 6 65 2 605 4 363 2 513 2 438 2 607 4 444 2 443 4 164 2 72 2 693 4 613 2 525 2 694 2 170 4 530 4 273 2 272 4 452 2 370 4 173 16 698 4 699 4 84 8 372 4 532 4 85 2 373 2 92 2 
524 2 125 2 667 4 549 2 394 2 636 2 106 2 660 2 66 2 673 2 173 2 110 2 699 2 68 2 16 2 92 2 115 2 
281 2 98 2 459 2 99 2 536 2 376 2 626 2 6 2 377 2 191 2 190 2 192 4 629 4 464 2 293 4 196 2 197 6 380 2 105 16 383 4 468 2 106 2 636 2 552 6 302 2 387 6 112 2 307 2 394 2 561 2 312 6 645 2 313 2 396 4 564 2 486 4 651 2 317 4 321 2 320 2 407 2 406 2 492 2 23 2 327 2 224 4 28 2 130 2 34 4 229 12 231 4 586 6 234 2 667 24 42 2 416 4 589 2 499 2 590 2 673 4 674 2 593 2 242 2 343 2 422 6 48 4 426 2 427 2 350 2 251 4 149 6 148 2 600 2 59 12 685 2 434 2 62 6 437 2 65 2 605 4 363 2 513 2 607 4 444 2 443 4 164 2 72 2 693 4 613 2 694 2 170 4 530 4 272 4 452 4 370 4 173 16 698 4 699 4 372 4 84 8 532 4 85 2 373 2 92 2 
281 2 98 2 459 2 99 2 536 2 376 2 626 2 377 2 190 2 192 4 629 4 464 2 293 4 196 2 197 6 380 2 105 16 549 2 383 4 468 2 106 2 636 4 552 6 302 2 13 2 387 6 112 2 115 2 642 2 394 2 561 2 312 6 645 2 313 2 396 4 564 2 486 2 651 2 317 4 321 2 320 2 407 2 406 2 492 2 23 2 327 2 224 4 28 2 130 2 34 2 229 12 231 4 586 6 234 2 667 24 42 2 416 4 139 2 589 2 499 2 590 2 673 4 674 2 593 2 242 2 343 2 422 6 245 2 48 4 246 2 427 2 350 2 251 4 149 6 148 2 600 2 59 12 685 2 434 2 62 6 65 2 605 4 363 2 513 2 607 4 444 2 443 4 164 2 72 2 693 4 613 2 694 2 170 4 530 4 272 4 452 4 370 4 173 16 698 4 699 4 84 8 372 4 532 4 85 2 373 2 92 2 
234 2 279 2 238 2 667 22 281 2 136 2 98 2 459 2 537 2 187 2 590 2 626 2 190 2 343 1 462 1 628 2 143 2 378 2 293 2 196 2 427 2 380 2 197 3 299 2 636 2 148 2 302 2 14 2 558 2 641 2 561 2 312 6 605 4 363 2 263 2 396 4 123 2 67 2 444 1 164 2 72 2 611 2 407 2 613 2 23 2 368 1 696 2 697 2 173 16 84 2 532 2 373 2 335 2 92 2 582 2 
336 6 413 3 280 3 234 2 667 2 186 3 393 2 498 2 215 2 420 2 316 2 442 2 486 3 8 2 630 2 449 2 613 2 380 2 324 1 493 2 200 2 27 2 173 2 495 4 454 2 
336 6 413 2 280 2 234 2 667 2 186 2 393 2 498 2 215 2 420 2 316 2 442 2 486 2 8 2 630 2 449 2 613 2 380 2 493 2 200 2 27 2 173 2 495 4 454 2 
336 6 413 2 280 2 234 2 667 2 186 2 393 2 498 2 215 2 420 2 316 2 442 2 486 2 8 2 630 2 449 2 613 2 380 2 493 2 200 2 27 2 173 2 495 4 454 2 
37 4 233 2 308 2 234 2 280 3 456 2 667 10 159 4 624 2 483 2 240 2 417 2 375 2 501 3 519 6 461 2 486 3 142 4 71 2 70 2 166 4 652 2 325 4 146 2 200 2 27 2 529 2 657 2 255 3 574 2 472 2 54 4 173 4 304 2 178 4 154 2 180 2 640 2 455 3 509 6 
37 4 233 2 308 2 234 2 280 2 236 2 456 2 667 10 159 4 624 2 483 2 240 2 213 2 417 2 375 2 501 2 519 4 461 2 486 2 142 4 71 2 70 2 166 4 652 2 502 2 325 4 146 2 200 2 27 2 529 2 657 2 255 2 574 2 472 2 54 4 173 4 304 2 178 4 154 2 180 2 640 2 455 2 509 6 
37 4 233 2 308 2 234 2 280 2 236 2 456 2 667 10 159 4 624 2 483 2 240 2 213 2 417 2 375 2 501 2 519 4 461 2 486 2 142 4 71 2 70 2 166 4 652 2 502 2 325 4 146 2 200 2 27 2 529 2 657 2 255 2 574 2 472 2 54 4 173 4 304 2 178 4 154 2 180 2 640 2 455 2 509 6 
37 4 233 2 308 2 234 2 280 2 236 2 456 2 667 10 159 4 624 2 483 2 240 2 213 2 417 2 375 2 501 2 519 4 461 2 486 2 142 4 71 2 70 2 166 4 652 2 502 2 325 4 146 2 200 2 27 2 529 2 657 2 255 2 574 2 472 2 54 4 173 4 304 2 178 4 154 2 180 2 640 2 455 2 509 6 
37 4 233 2 308 2 234 2 280 2 236 4 456 2 667 10 159 4 624 2 483 2 240 2 213 4 417 2 375 2 501 2 519 4 461 2 486 2 142 4 71 2 70 2 166 4 652 2 502 4 325 4 146 2 200 2 27 2 529 2 657 2 255 2 574 2 472 2 54 4 173 4 304 2 178 4 154 2 180 2 640 2 455 2 509 6 
490 2 298 2 360 2 162 2 515 2 318 2 144 2 
571 2 490 2 323 2 223 2 254 2 409 2 
237 2 235 2 667 10 314 1 671 2 241 2 566 2 345 2 244 2 568 2 76 1 654 2 103 2 466 2 126 2 352 2 598 2 575 1 173 8 129 2 305 1 388 1 56 2 373 2 153 2 663 2 
308 6 233 6 236 3 456 6 667 6 624 6 282 2 118 2 262 2 213 2 119 2 519 16 166 12 652 2 567 2 502 2 487 4 612 2 489 2 268 2 252 2 529 6 410 2 657 6 173 6 371 4 276 2 113 2 178 4 640 6 
349 2 38 2 325 2 667 1 415 2 0 2 1 4 588 2 340 2 538 1 225 2 599 7 173 1 54 2 541 2 401 2 142 2 17 2 
349 2 38 4 325 2 415 2 0 4 1 4 588 4 340 2 225 2 599 6 54 2 541 2 401 2 142 2 17 2 
349 2 38 8 325 2 667 1 415 6 0 8 1 4 588 8 340 2 538 1 225 2 599 10 173 1 54 2 541 8 401 2 142 2 17 2 
349 2 38 2 325 2 0 2 1 2 588 2 340 2 225 2 599 2 54 2 401 2 142 2 17 2 
667 6 98 2 418 2 543 2 343 2 102 1 293 2 427 2 197 4 643 1 561 2 361 2 444 2 522 2 29 2 172 2 173 6 532 2 580 1 
293 2 643 2 427 2 197 2 667 6 561 2 361 2 98 2 29 2 418 2 173 6 543 2 532 2 446 2 522 2 
293 2 643 2 427 2 197 2 667 6 561 2 361 2 98 2 29 2 122 2 418 2 173 6 543 2 532 2 522 2 
293 2 427 2 197 4 667 6 561 2 361 2 98 2 29 2 122 2 418 2 173 6 543 2 444 2 343 2 532 2 522 2 
569 2 

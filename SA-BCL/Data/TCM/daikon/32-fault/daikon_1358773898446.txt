#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (106,434) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 699 644 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 284 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 169 781 114 383 580 683 418 410 634 692 170 459 542 734 621 28 257 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 321 (533,774) 698 (197,705) (533,774) 315 (197,705) 466 147 
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 321 (533,774) 698 (197,705) (533,774) 315 (197,705) 466 147 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 211 
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 440 541 255 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 56 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 512 763 188 497 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 512 763 188 497 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 512 763 188 497 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 512 763 188 497 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:setEqual([I[I)Z | CONDITION | 155109 | if (x) -> if (!x)
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_75()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:ne(II)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_2_5(I)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_3_14()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3R_117()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.Node:Node()V
daikon.Quant:memberOf(F[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfo:relate_var()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Debug:logDetail()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | RETURN | 37622 | return null
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_57()Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression; | STATEMENT | 66038 | stmt -> ;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3_4()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:eq(II)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaCharStream:getEndLine()I
daikon.PptSlice1:num_samples()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3_35()Z
daikon.PptSlice0:arity()I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression; | ASSIGN | 64275 | = null
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_15()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_12()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptName:isEnterPoint()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3_30()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_161()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:memberOf(D[F)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:lexGT([I[I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:eltwiseGT([I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_2_14(I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo; | RETURN | 315 | return null
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_163()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_125()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eq(DD)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus([I)[I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_114()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lte(II)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ValueTuple:size()I
daikon.Quant:eltsEqual([II)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_162()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.Invariants:Invariants()V
daikon.Quant:gt(II)Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_2_4(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_3()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isFloat()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:eltsGT([II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ProglangType:dimensions()I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_18(I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3_5()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:passes()Z
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.Intern:intern([D)[D
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_2_21(I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3_25()Z
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Debug:logOn()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:slice([III)[I
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:simplify_name()Ljava.lang.String; | RETURN | 105067 | return null
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3R_126()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_63()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3R_74()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.Assert:assertTrue(Z)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:noDups([I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:size()I
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.MathMDE:pow(II)I
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2763 | = null
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_118()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:jj_3R_72()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_51()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:eltsLT([II)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_22()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14923 | if (x) -> if (!x)
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:new_ppt()V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_18()Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant; | RETURN | 547 | return null
jtb.JavaParser:jj_3R_81()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7816 | 80 -> 0
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3_19()Z
daikon.Quant:intersection([I[I)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z | CONDITION | 31313 | if (x) -> if (!x)
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:isIntegral()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:subsetOf([S[S)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_148()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:lexLT([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_ntk()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:eltsGTE([II)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V | OPERATOR | 20199 | - -> *
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getBeginLine()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 2084 | = null
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaCharStream:BeginToken()C
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:jj_3R_96()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.diff.RootNode:RootNode()V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:sign(I)I
daikon.ModBitTracker:num_vars()I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_10(I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Ppt:Ppt()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_sets()I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_10()Z
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_28()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
227 2 142 2 559 2 478 4 288 2 300 2 243 2 171 2 650 2 
671 2 409 6 178 6 549 2 378 2 14 2 535 2 351 2 115 6 144 2 87 2 
98 2 559 2 609 2 568 2 145 6 93 2 189 6 7 2 286 4 67 4 744 6 288 2 96 6 
60 26 278 16 527 16 283 29 485 2 207 10 8 10 177 6 288 6 454 8 622 2 837 12 212 10 317 16 240 4 589 10 343 2 404 2 798 8 50 2 559 6 264 4 771 4 22 10 438 6 354 8 748 4 193 2 332 8 57 2 
814 4 81 6 
819 2 
434 2 834 2 106 2 661 2 90 2 652 2 
525 4 60 48 278 32 527 32 283 54 484 4 485 2 647 6 450 4 66 4 8 16 207 16 236 8 177 4 288 4 554 2 69 2 837 22 212 16 317 32 589 16 460 6 155 6 319 6 798 6 538 2 559 4 295 6 653 2 771 2 438 4 22 6 325 6 408 4 603 4 522 4 110 2 871 2 332 18 
652 2 597 2 413 2 
52 2 112 2 729 2 789 22 65 2 618 2 543 2 846 2 237 2 441 2 443 10 425 2 444 2 70 2 
60 4 278 2 527 2 283 6 578 2 8 2 207 2 837 2 212 2 49 2 317 2 589 2 771 2 438 2 22 4 221 2 601 2 635 2 359 2 273 2 332 2 872 2 334 2 
525 4 589 4 319 6 155 6 60 12 278 8 527 8 201 2 283 16 790 2 8 4 408 4 207 4 837 4 748 2 212 4 317 8 
752 2 780 4 825 2 700 58 482 4 252 4 808 2 755 10 616 4 233 2 552 10 287 2 45 2 12 2 587 2 316 2 588 2 491 2 717 2 627 4 75 4 652 8 243 2 564 2 720 4 597 6 633 2 297 2 247 2 661 2 695 4 851 2 667 2 85 2 413 2 
699 2 575 2 631 2 61 2 644 2 819 2 103 2 191 2 68 2 375 2 746 2 
259 2 284 2 
288 2 865 2 
730 2 132 2 288 4 
623 2 
0 4 670 2 228 8 674 2 676 2 678 2 680 8 449 2 5 4 6 2 683 2 684 48 10 2 11 2 13 4 687 2 459 2 461 2 462 4 692 2 693 2 468 14 23 2 25 4 27 26 28 2 248 2 250 2 696 2 697 36 32 2 473 2 477 4 35 2 483 20 253 4 257 2 258 4 709 2 42 2 489 2 44 2 46 2 48 8 715 2 260 4 493 2 261 4 263 2 51 8 267 4 268 2 722 2 721 2 723 20 724 2 501 2 726 6 725 2 275 2 276 36 280 4 62 2 504 4 63 2 733 4 734 2 290 2 72 146 737 14 73 2 291 48 738 2 739 2 513 2 76 32 515 2 79 4 296 2 743 26 518 2 519 2 298 10 520 2 521 2 299 2 745 4 751 146 526 10 754 2 528 8 529 2 759 2 309 8 532 2 310 2 313 46 764 48 539 22 99 2 320 2 772 42 102 4 542 2 105 2 107 28 109 2 330 2 331 2 777 2 779 2 781 2 339 2 784 2 786 4 787 2 114 2 340 2 550 22 551 2 793 4 558 4 795 2 796 48 344 48 123 4 799 8 125 2 346 2 127 22 561 14 563 2 128 2 130 2 800 2 133 4 572 48 134 4 802 2 136 2 364 2 138 2 139 2 803 6 806 6 811 4 810 36 372 4 576 8 148 48 580 2 150 48 154 2 379 2 591 2 594 2 383 2 595 192 158 2 161 2 388 2 389 4 390 48 164 2 393 2 166 2 167 16 169 2 610 2 170 2 612 4 172 2 614 8 831 6 619 146 835 2 836 2 400 2 620 2 180 2 179 24 621 2 402 2 403 2 625 2 624 2 628 4 840 2 185 2 187 2 632 2 405 2 844 2 634 2 407 2 850 6 192 16 410 2 637 4 411 16 638 2 194 4 852 18 641 2 416 20 199 2 417 2 418 2 419 4 200 48 855 2 856 2 202 8 643 2 420 2 857 8 859 8 646 8 208 6 860 4 648 2 427 2 861 2 862 2 864 4 213 4 433 4 214 4 435 2 215 2 218 14 436 2 868 2 219 48 657 2 659 48 222 4 442 2 664 2 663 4 665 2 
579 2 398 2 143 2 350 1 
353 2 143 2 
240 2 336 2 688 2 652 2 143 2 567 2 266 2 
336 2 9 2 
336 2 143 2 613 2 
579 2 368 2 36 2 
336 2 143 2 
367 2 36 2 
149 2 143 2 
579 2 329 2 36 2 
579 2 732 2 769 2 
579 2 666 2 396 2 
833 2 579 2 311 2 
1 2 579 2 562 2 
36 2 655 2 
143 2 429 2 
769 2 656 2 
396 2 304 2 
311 2 254 2 
1 2 229 2 
36 2 30 2 
190 2 1 2 
311 2 807 2 
471 2 396 2 
769 2 43 2 
536 2 579 2 329 2 36 2 
536 2 651 2 579 2 329 2 36 2 
579 2 36 2 86 2 
579 2 36 2 101 2 
760 2 83 2 523 2 333 2 
251 2 652 2 540 2 567 2 
251 2 652 2 540 2 173 2 567 2 266 2 
240 2 336 2 652 2 143 2 121 2 567 2 
377 2 569 2 
240 2 652 2 510 2 567 2 
311 2 414 2 
750 2 1 2 
630 2 769 2 
770 2 396 2 
731 2 1 2 396 2 
1 2 487 2 396 2 
1 2 245 2 396 2 
1 2 396 2 511 2 
92 2 116 2 531 6 181 2 867 2 652 2 818 6 567 2 
596 2 36 2 
537 2 126 2 231 2 129 2 265 4 789 6 820 2 285 2 104 4 54 2 234 2 658 2 41 2 238 2 490 2 710 2 401 2 360 2 
579 2 828 2 
21 2 
227 2 545 4 782 4 2 2 338 2 547 2 677 2 232 2 120 2 556 2 15 2 557 2 16 2 689 2 559 26 347 2 465 2 348 2 570 5 356 2 135 2 362 2 574 2 701 2 479 2 369 6 702 6 704 4 373 4 256 2 157 2 496 2 269 6 599 2 271 3 165 2 58 2 277 2 728 6 395 4 282 2 615 2 506 2 284 2 174 2 288 26 735 2 512 2 626 2 740 4 839 2 841 6 516 2 406 2 82 2 301 2 747 3 305 2 307 2 203 3 858 2 206 4 762 2 94 4 534 2 431 2 216 2 323 2 654 2 327 2 328 2 778 2 
227 2 545 4 782 4 2 2 338 2 547 2 677 2 232 2 120 2 556 2 15 2 557 2 16 2 689 2 559 26 347 2 465 2 348 2 570 4 356 2 135 2 362 2 574 2 701 2 479 2 369 6 702 6 704 4 373 4 256 2 157 2 496 2 386 2 160 2 269 6 599 2 271 2 165 2 58 2 277 2 728 6 395 4 506 2 284 2 174 2 288 26 735 2 512 2 838 2 183 2 626 2 740 4 839 2 841 6 516 2 406 2 82 2 301 2 747 2 305 2 307 2 203 2 858 2 206 4 762 2 94 6 431 2 216 2 437 2 323 2 654 2 439 2 327 2 328 2 778 2 
97 2 
118 2 341 2 
165 2 671 2 545 2 447 4 679 4 395 2 115 6 284 2 399 2 288 12 178 6 453 10 555 2 686 2 74 2 559 6 560 2 690 8 464 2 466 2 841 4 351 4 694 2 406 2 409 6 639 4 135 2 87 2 196 2 415 2 197 2 137 2 365 4 805 2 705 2 530 8 40 2 147 2 582 2 533 2 488 2 584 2 210 2 315 2 535 4 432 2 767 2 866 2 815 2 495 2 216 2 498 2 323 2 53 4 869 2 220 2 600 2 821 4 328 2 544 2 
165 2 671 2 545 2 447 4 679 4 395 2 115 6 284 2 399 2 288 12 178 8 453 10 555 2 686 2 74 2 559 6 560 2 690 8 464 2 466 2 841 4 351 4 694 2 406 2 24 4 409 8 639 4 135 2 87 2 196 2 415 2 197 2 137 2 365 4 481 2 805 2 705 2 144 2 530 8 40 2 147 2 582 2 533 2 488 2 584 2 315 2 863 2 535 4 432 2 866 2 815 2 767 2 495 2 216 2 323 2 53 4 869 2 220 2 600 2 821 4 328 2 544 2 
866 2 815 2 767 2 464 2 466 2 53 4 705 2 351 2 115 2 694 2 40 2 147 2 821 4 488 2 178 2 584 2 535 2 639 2 
165 2 545 2 447 4 679 4 395 2 115 4 284 2 399 2 288 12 178 6 453 6 555 2 686 2 74 2 559 6 560 2 690 4 464 2 466 2 841 4 351 4 694 2 406 2 409 6 639 4 135 2 87 2 196 2 415 2 197 2 137 2 365 4 805 2 705 2 144 2 530 4 40 2 147 2 582 2 533 2 488 2 584 2 210 2 315 2 535 4 432 2 767 2 866 2 815 2 495 2 216 2 498 2 323 2 53 4 869 2 220 2 600 2 821 4 328 2 544 2 
165 2 545 2 447 4 679 4 395 2 115 6 284 2 399 2 288 12 178 4 453 6 555 2 686 2 74 2 559 6 560 2 690 4 464 2 466 2 841 4 351 4 694 2 406 2 409 6 639 4 135 2 87 2 196 2 415 2 197 2 137 2 365 4 805 2 705 2 530 4 40 2 147 2 582 2 533 2 488 2 584 2 210 2 315 2 378 2 535 4 432 2 767 2 866 2 815 2 495 2 216 2 498 2 323 2 53 4 869 2 220 2 600 2 821 4 328 2 544 2 
165 2 671 2 545 2 447 4 679 4 395 2 115 6 284 2 399 2 288 12 178 6 453 6 555 2 686 2 74 2 559 6 560 2 690 8 464 2 466 2 841 4 351 4 694 2 406 2 409 6 639 4 135 2 87 2 196 2 415 2 197 2 137 2 365 4 805 2 705 2 530 4 40 2 147 2 582 2 533 2 488 2 584 2 210 2 315 2 535 4 432 2 767 2 866 2 815 2 495 2 216 2 498 2 323 2 53 4 869 2 220 2 600 2 821 4 328 2 544 2 
165 2 671 2 545 2 447 4 679 4 395 2 115 8 284 2 399 2 288 12 178 6 453 10 555 2 686 2 74 2 559 6 560 2 690 8 464 2 466 2 841 4 351 4 694 2 406 2 409 8 639 4 135 2 87 2 196 2 415 2 197 2 137 2 365 4 805 2 705 2 530 8 40 2 147 2 582 2 533 2 488 2 584 2 210 2 315 2 378 2 535 4 432 2 767 2 866 2 815 2 495 2 216 2 498 2 323 2 53 4 869 2 220 2 600 2 821 4 328 2 544 2 
165 2 671 2 545 2 447 4 679 4 395 2 115 6 284 2 399 2 288 12 178 6 453 10 555 2 686 2 74 2 559 6 560 2 690 8 464 2 466 2 841 4 351 4 694 2 406 2 409 6 639 4 135 2 87 2 196 2 415 2 197 2 137 2 365 4 805 2 705 2 530 8 40 2 147 2 582 2 533 2 488 2 584 2 210 2 315 2 535 4 432 2 767 2 866 2 815 2 495 2 216 2 498 2 323 2 53 4 869 2 220 2 600 2 821 4 328 2 544 2 
227 2 545 4 782 4 338 2 547 2 447 8 679 6 115 8 555 2 686 2 557 2 16 2 559 18 242 2 560 2 690 2 20 2 464 2 347 2 466 2 465 2 467 2 351 4 694 2 570 2 355 2 356 2 135 2 362 2 698 2 137 2 574 2 365 4 34 2 805 2 369 2 809 2 702 6 705 2 813 2 40 2 147 2 582 2 488 2 584 2 378 4 156 2 815 2 495 2 496 4 53 4 385 2 160 2 269 6 821 4 271 2 822 4 165 2 58 2 728 8 395 4 284 2 399 2 288 28 735 2 178 4 512 2 74 2 626 2 839 2 740 4 841 6 842 2 406 2 409 12 639 4 305 2 87 4 415 2 196 2 197 2 307 2 203 2 858 2 206 4 761 2 762 2 533 2 94 6 210 2 315 2 535 4 432 2 431 2 866 2 767 2 216 2 321 2 654 2 323 2 439 2 774 2 220 2 328 2 
671 4 227 2 447 8 679 6 235 2 682 1 453 2 686 2 16 2 20 2 690 6 242 2 18 2 464 2 465 4 466 2 467 2 244 6 246 2 694 2 26 2 31 1 698 2 476 1 34 2 479 2 480 2 702 6 705 2 708 7 40 2 488 2 713 6 495 2 496 12 53 4 269 6 499 2 270 2 271 2 58 2 59 1 281 1 728 8 505 6 284 2 730 6 508 2 735 2 288 46 289 6 512 2 74 2 740 4 80 2 517 6 302 2 87 4 305 2 89 2 307 2 306 2 91 2 761 10 762 2 533 2 94 6 315 2 535 4 766 6 767 2 321 2 322 1 323 2 773 2 774 2 108 7 328 2 544 2 545 4 337 4 782 4 338 2 547 2 113 2 115 8 555 2 557 2 559 24 560 2 347 2 566 1 351 4 352 2 570 2 355 8 356 4 135 2 362 4 137 2 574 2 365 4 804 2 805 2 369 6 809 2 813 2 147 2 582 4 584 2 585 2 151 6 815 2 156 2 385 2 160 2 821 4 600 2 822 4 606 6 165 2 608 1 394 6 829 6 395 4 399 2 178 8 623 6 626 2 839 2 841 6 842 2 406 2 848 2 409 12 639 4 196 2 415 2 197 2 854 6 203 2 858 4 422 6 645 2 206 4 210 2 649 2 865 6 431 2 432 2 866 2 216 2 654 2 439 2 869 2 220 2 224 1 226 6 
227 2 671 4 337 4 545 4 782 4 338 2 547 2 447 8 113 2 679 6 115 8 235 2 453 6 555 2 686 2 557 2 16 2 559 24 18 2 242 2 560 2 690 6 20 2 464 2 347 2 466 2 465 4 244 6 467 2 351 4 246 2 352 2 694 2 570 2 355 8 26 2 356 4 135 2 362 4 698 2 137 2 574 2 804 2 365 4 34 2 480 2 479 2 805 2 369 6 809 2 702 6 705 2 813 2 40 2 147 2 582 4 488 2 584 2 585 2 151 6 713 6 156 2 815 2 495 2 496 12 53 4 385 2 160 2 499 2 269 6 270 2 600 2 821 4 271 2 822 4 606 6 165 2 58 2 394 6 829 6 728 8 395 4 505 6 284 2 508 2 730 6 399 2 288 46 735 2 178 8 289 6 623 6 512 2 74 2 626 2 839 2 740 4 841 6 842 2 80 2 517 6 406 2 848 2 409 12 302 2 639 4 305 2 87 4 89 2 415 2 196 2 306 2 854 6 197 2 307 2 91 2 203 2 858 4 422 6 645 2 530 4 206 4 761 10 762 2 533 2 94 6 210 2 315 2 649 2 865 6 535 4 432 2 431 2 766 6 866 2 767 2 216 2 321 2 773 2 654 2 323 2 869 2 439 2 774 2 220 2 328 2 544 2 226 6 
227 2 671 4 337 4 545 4 782 6 338 2 547 2 447 8 113 2 679 6 115 10 235 2 453 4 555 2 686 2 557 2 16 2 559 22 18 2 242 2 560 2 690 6 20 2 464 2 347 2 466 2 465 4 244 6 351 4 246 2 352 2 694 2 570 4 355 8 26 2 356 4 135 2 362 4 698 2 137 2 574 2 804 2 365 4 34 2 480 2 479 2 805 2 369 6 809 2 702 8 705 2 144 2 813 2 40 2 147 2 582 2 488 2 584 2 585 2 151 6 378 2 713 6 492 2 156 2 815 2 495 2 496 10 718 2 53 4 385 2 598 2 160 2 499 2 269 8 270 2 821 4 271 4 822 4 163 2 606 6 165 2 607 2 58 2 394 6 829 6 728 12 395 4 505 6 284 2 508 2 730 6 399 2 288 44 735 2 178 10 289 6 623 6 512 2 74 2 626 2 839 2 740 4 841 6 842 2 80 2 517 6 406 2 848 2 409 16 302 2 639 4 305 2 87 4 89 2 415 2 196 2 306 2 854 6 197 2 307 2 91 2 203 4 858 4 422 6 645 2 530 4 206 4 761 8 762 2 533 2 94 6 210 2 315 2 649 2 865 6 535 4 432 2 431 2 766 6 866 2 767 2 216 2 321 2 773 2 654 2 323 2 439 2 774 2 220 2 328 2 111 2 226 6 
415 2 196 2 671 2 137 2 365 2 805 2 447 2 679 2 115 6 530 4 40 2 399 2 288 4 488 2 178 6 210 2 453 4 555 2 686 2 535 4 74 2 432 2 815 2 866 2 767 2 495 2 560 2 690 6 464 2 53 2 351 4 694 2 409 4 821 2 87 2 
671 2 227 2 545 4 782 4 338 2 447 2 547 2 679 2 115 6 342 2 453 2 555 2 686 2 557 2 16 2 559 24 690 6 560 2 464 2 347 2 21 2 467 2 351 4 694 2 570 3 135 2 362 2 137 2 574 2 365 2 805 2 702 6 40 2 488 2 815 2 495 2 496 4 53 2 160 2 159 2 269 6 821 2 271 3 823 2 604 2 274 2 165 2 58 2 827 2 728 8 395 4 284 2 399 2 288 28 735 2 178 6 512 2 74 2 626 2 740 4 839 2 841 6 406 2 409 4 640 2 87 2 305 2 415 2 196 2 307 2 753 3 203 3 206 4 761 2 762 2 94 6 210 2 535 4 432 2 431 2 767 2 866 2 216 2 323 2 654 2 439 2 220 2 775 2 328 2 
415 2 686 2 472 2 
415 2 686 2 472 2 
669 2 227 2 671 4 337 2 545 4 546 4 338 2 547 2 447 4 679 4 3 2 115 12 451 2 239 2 453 6 686 4 557 2 16 2 559 16 690 6 347 2 464 2 466 2 465 4 351 4 570 2 356 4 135 2 472 2 362 6 698 2 574 2 141 2 365 2 479 4 805 2 369 4 702 2 705 2 370 2 707 2 144 4 486 4 582 2 488 4 378 4 711 2 153 2 590 2 381 2 496 4 53 2 385 2 160 2 269 2 821 2 822 2 272 2 165 2 58 2 728 2 395 4 617 2 284 2 288 24 735 2 178 12 512 2 626 2 740 4 839 2 841 6 517 2 406 2 409 16 639 4 749 2 305 2 87 4 195 2 415 4 196 2 197 2 307 2 858 4 530 4 206 4 761 2 94 6 426 2 315 2 211 2 535 4 431 2 767 2 216 2 323 2 654 2 869 2 439 2 327 4 328 2 544 2 
165 2 337 2 141 2 559 2 496 2 78 2 321 2 3 2 341 2 617 2 758 2 645 2 517 2 761 2 288 4 584 2 736 2 
669 2 227 2 671 4 545 4 546 4 338 2 447 4 547 2 679 4 3 2 448 2 115 12 451 2 239 2 453 6 686 4 557 2 16 2 559 14 19 2 690 6 347 2 464 2 466 2 465 4 351 4 570 4 131 2 356 4 135 2 472 2 363 2 362 6 698 2 574 2 365 2 479 4 805 2 369 4 702 2 705 2 370 2 707 2 144 4 486 4 582 4 374 2 488 4 378 4 711 2 590 2 381 2 496 2 53 2 385 2 160 2 269 2 600 2 821 2 822 2 165 2 58 2 728 2 395 4 617 2 284 2 288 20 735 2 178 12 512 2 626 2 740 4 839 2 294 2 841 6 406 2 409 16 639 4 749 4 305 2 87 4 415 6 196 2 197 2 307 2 858 4 530 4 206 4 94 6 315 2 211 2 535 4 431 2 767 2 216 2 323 2 654 2 869 2 439 2 327 4 328 2 544 2 
669 2 227 2 671 4 337 2 545 4 546 4 338 2 672 2 547 2 447 4 679 4 3 2 115 12 451 2 239 2 453 6 455 2 686 4 557 2 16 2 559 16 690 6 347 2 464 2 466 2 465 4 351 4 570 2 131 2 356 4 135 2 472 2 362 6 698 2 574 2 141 2 365 2 479 4 805 2 369 4 702 2 705 2 370 2 707 2 144 4 371 2 486 4 582 4 488 4 378 4 711 2 590 2 381 2 496 4 384 2 53 2 385 2 160 2 269 2 600 2 821 2 387 2 822 2 165 2 58 2 728 2 395 4 617 2 284 2 288 24 735 2 178 12 512 2 626 2 740 4 839 2 841 6 517 2 406 2 409 16 639 4 749 2 305 2 87 4 415 6 196 2 197 2 307 2 858 4 530 4 206 4 761 2 94 6 315 2 211 2 535 4 431 2 767 2 216 2 323 2 654 2 869 2 439 2 327 4 328 2 544 2 
335 2 227 2 780 2 545 4 782 8 783 12 230 12 446 2 675 2 547 2 117 2 791 2 681 4 8 2 456 2 457 2 458 2 122 4 16 2 241 2 17 2 559 22 345 4 242 2 691 22 347 2 570 6 26 6 571 2 357 2 358 4 470 2 249 4 29 6 361 2 135 2 362 2 573 2 475 2 34 2 479 2 482 2 369 16 702 10 809 2 37 2 39 2 38 2 255 2 813 2 581 6 376 2 712 4 714 2 589 2 156 2 593 2 592 2 494 2 496 2 817 2 719 2 159 2 160 2 269 10 271 6 823 2 500 2 502 2 162 2 605 2 391 2 274 2 165 2 58 2 60 6 278 4 279 2 168 2 611 2 728 16 830 2 395 4 283 8 616 2 284 2 175 4 397 2 509 2 288 28 735 2 837 4 182 2 512 2 514 6 292 2 626 2 293 4 77 2 740 2 839 2 841 6 843 4 742 2 842 2 406 2 82 4 302 2 636 2 524 1 412 2 853 2 305 2 525 4 753 2 198 2 308 2 527 4 203 6 756 4 757 4 421 2 206 2 207 2 762 2 94 4 95 2 312 2 314 2 649 6 428 2 212 2 430 2 317 4 319 6 538 4 216 2 541 2 323 2 654 2 439 2 660 2 440 2 775 2 776 2 328 2 445 2 332 4 668 2 
824 4 474 4 60 4 278 2 548 2 527 2 728 2 283 6 706 2 64 2 812 3 205 2 577 4 553 2 8 2 207 2 762 2 119 2 288 10 177 2 424 4 792 2 71 2 212 2 794 2 317 2 589 2 184 6 716 2 798 4 124 3 559 4 186 2 741 2 570 3 602 4 662 3 271 3 801 2 225 2 
824 4 474 4 60 4 278 2 548 2 527 2 728 2 283 4 706 2 64 2 812 2 205 2 485 2 577 4 553 2 8 2 207 2 762 2 119 2 288 10 177 2 424 4 837 2 792 2 71 2 212 2 794 2 317 2 589 2 184 6 716 2 798 4 124 2 559 4 186 2 741 2 570 2 602 4 662 2 271 2 801 2 332 2 225 2 
824 4 474 4 60 4 278 2 548 2 527 2 728 2 283 4 706 2 64 2 812 2 205 2 485 2 577 4 553 2 8 2 207 2 762 2 119 2 288 10 177 2 424 4 837 2 792 2 71 2 212 2 794 2 317 2 589 2 184 6 716 2 798 4 124 2 559 4 186 2 741 2 570 2 602 4 662 2 271 2 801 2 332 2 225 2 
824 4 474 4 60 4 278 2 548 2 527 2 728 2 283 4 706 2 64 2 812 2 205 2 485 2 577 4 553 2 8 2 207 2 762 2 119 2 288 10 177 2 424 4 837 2 792 2 71 2 212 2 794 2 317 2 589 2 184 6 716 2 798 4 124 2 559 4 186 2 741 2 570 2 602 4 662 2 271 2 801 2 332 2 225 2 
824 4 474 4 60 4 278 2 548 2 527 2 728 2 283 4 706 2 64 2 812 2 205 2 485 4 577 4 553 2 8 2 207 2 762 2 119 2 288 10 177 2 424 4 837 4 792 2 71 2 212 2 794 2 317 2 589 2 184 6 716 2 798 4 124 2 559 4 186 2 741 2 570 2 602 4 662 2 271 2 801 2 332 4 225 2 
357 2 176 2 100 2 565 2 56 2 832 2 
768 2 140 2 82 2 452 2 55 2 84 2 565 2 
826 2 642 2 503 2 366 2 785 1 829 2 703 2 4 2 146 2 507 2 423 2 209 1 288 10 583 2 47 2 588 1 152 1 318 2 717 1 380 2 797 2 559 8 216 2 870 2 845 2 303 2 
525 2 60 12 33 2 278 6 727 2 527 6 788 2 283 16 485 2 66 2 509 2 207 6 8 6 236 2 288 6 177 2 837 4 712 2 458 2 212 6 317 6 460 4 589 6 319 4 463 2 798 4 559 6 349 2 469 2 332 2 
824 2 765 2 474 2 629 2 559 1 673 2 816 2 217 2 204 2 324 2 326 4 849 2 223 2 288 1 685 2 424 2 392 1 88 7 
824 2 765 2 474 2 629 2 673 4 816 2 217 2 204 2 324 4 326 4 849 2 223 2 685 4 424 2 88 6 
824 2 765 2 474 2 629 6 559 1 673 8 816 2 217 2 204 8 324 8 326 4 849 2 223 2 288 1 685 8 424 2 392 1 88 10 
824 2 765 2 474 2 673 2 816 2 217 2 324 2 326 2 849 2 223 2 685 2 424 2 88 2 
288 2 512 2 559 2 188 2 847 1 763 2 586 2 382 1 497 2 
559 2 288 2 763 2 497 2 586 2 512 2 188 2 
559 2 288 2 763 2 497 2 586 2 512 2 188 2 
559 2 288 2 763 2 497 2 586 2 512 2 188 2 
262 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 687 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 85 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 342 399 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 346 (44,104) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 346 (44,104) (44,104) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 346 (44,104) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 196 513 797 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 137 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 137 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 137 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 137 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 137 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 842 283 80 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 343 273 229 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 116 787 258 343 273 229 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 343 273 229 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 116 787 258 335 470 343 273 229 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:hashCode()I
daikon.inv.Invariants:Invariants()V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:negate(I)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z | STATEMENT | 30553 | stmt -> ;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_15(I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:hashCode()I
daikon.ProglangType:isArray()Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3_14()Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 21165 | = null
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String; | RETURN | 29320 | return null
jtb.JavaParser:jj_3R_53()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String; | RETURN | 2498 | return null
daikon.VarInfo:get_all_simple_names()Ljava.util.List; | ASSIGN | 29959 | = null
utilMDE.Assert:assertTrue(Z)V
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:numIntArrays()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody; | STATEMENT | 24539 | stmt -> ;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration; | STATEMENT | 14997 | stmt -> ;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3R_162()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.PptSlice0:arity()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsFloat()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:setDiff([I[I)[I
daikon.diff.Node:Node()V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | STATEMENT | 54139 | stmt -> ;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quantify.Constant:Constant(I)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:noDups([I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22110 | stmt -> ;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Ppt:Ppt()V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:processQueue()V
daikon.PptSlice2:arity()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | STATEMENT | 14158 | stmt -> ;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus; | RETURN | 5040 | return null
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 126289 | = null
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaCharStream:BeginToken()C
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V | CONDITION | 2376 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_57()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3R_54()Z
daikon.diff.InvMap:InvMap()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:eq(II)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:eltsEqual([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eltwiseLT([I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 3815 | stmt -> ;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus; | ASSIGN | 17939 | = null
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:ne(II)Z
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_47()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfo:isPrestate()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:slice([III)[I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([D)D
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:gte(II)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_50()Z
jtb.JavaCharStream:getEndLine()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z | ASSIGN | 60226 | = null
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_1()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_56()Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isDerived()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | RETURN | 128825 | return null
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.PptSlice1:arity()I
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:isIntegral()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ProglangType:isFloat()Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ValueTuple:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:eltsGT([II)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
daikon.Debug:logOn()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:name()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
402 4 194 2 382 2 313 2 607 2 157 2 772 2 638 2 24 2 
672 2 170 6 731 6 410 2 769 2 465 2 131 2 586 2 812 2 55 2 494 6 
376 6 344 2 427 2 649 6 478 2 823 4 157 2 491 6 248 6 739 2 382 2 238 4 214 2 
320 2 227 10 79 10 419 2 361 26 392 12 298 2 841 2 394 4 397 10 661 10 148 10 798 4 521 8 633 4 700 8 799 8 157 6 702 6 15 8 575 2 347 4 71 29 73 16 50 6 382 6 97 16 502 2 295 2 617 16 
5 4 853 6 
332 2 
713 2 484 2 226 2 757 2 687 2 810 2 841 2 689 2 86 2 370 2 474 2 662 2 477 2 240 2 401 2 666 2 306 2 668 2 216 2 850 2 572 2 531 2 750 4 313 2 385 2 76 2 
320 2 225 2 227 16 386 2 79 16 685 2 759 2 361 48 392 22 106 6 690 8 397 16 146 6 661 6 475 6 148 16 798 2 667 4 241 6 119 4 728 6 267 2 799 18 157 4 702 4 15 6 71 53 777 2 73 32 50 4 483 4 533 6 382 4 97 32 384 4 199 4 356 4 74 4 617 32 
85 2 226 2 250 2 
756 2 345 2 807 22 637 10 651 2 730 2 708 2 381 2 626 2 815 2 751 2 339 2 754 2 836 2 
539 2 227 2 173 2 79 2 361 4 392 2 366 2 791 2 397 2 661 4 454 2 148 2 798 2 799 2 71 6 50 2 73 2 584 2 97 2 23 2 223 2 805 2 617 2 
67 2 227 4 79 4 361 12 392 4 347 2 106 6 71 16 73 8 397 4 483 4 146 6 97 8 199 4 148 4 779 2 617 8 
201 2 191 2 226 4 172 2 618 2 203 2 324 2 160 2 85 2 63 2 383 2 112 2 711 6 88 2 357 2 250 2 
342 2 319 2 325 2 492 2 622 2 332 2 300 2 111 2 399 2 185 2 503 2 
440 2 3 4 231 2 4 2 233 2 653 2 654 2 447 3 450 1 234 2 235 2 12 2 664 2 456 1 244 2 669 2 462 3 676 1 674 3 20 2 686 2 27 1 252 2 468 2 33 3 471 4 255 2 693 3 256 2 695 2 37 2 264 2 699 3 266 2 41 2 479 2 269 2 42 2 47 24 271 2 270 2 49 2 51 2 54 6 53 2 52 2 282 1 714 2 716 2 719 1 286 1 61 2 485 2 65 1 727 3 490 2 68 8 72 2 732 2 501 2 503 1 733 2 506 2 507 2 511 1 514 2 300 1 517 2 518 2 520 2 91 3 315 4 753 4 318 4 322 1 100 1 101 1 323 2 542 2 758 2 328 3 543 2 545 2 331 2 334 2 762 2 763 6 547 2 338 2 341 2 116 4 117 16 124 2 772 2 348 1 128 8 784 5 786 2 787 4 136 2 369 24 792 16 373 2 569 4 151 2 157 32 159 2 578 2 162 3 382 34 808 2 388 6 389 2 592 2 398 2 184 1 186 2 188 2 820 2 821 32 189 8 600 2 601 2 604 2 195 2 406 32 610 2 828 2 830 3 412 6 613 2 833 16 838 1 417 2 418 2 619 1 420 3 422 2 423 2 208 1 425 2 211 2 843 2 215 2 429 2 634 2 851 2 217 8 640 16 432 1 219 2 
382 2 466 2 
46 2 382 4 832 2 
94 2 
0 32 648 2 228 2 102 2 230 18 760 2 232 2 6 2 329 8 105 2 107 2 330 12 659 40 658 2 333 2 546 2 766 12 768 12 122 2 457 2 459 32 776 4 350 6 551 32 673 2 127 4 18 18 553 2 130 8 554 2 680 2 681 32 555 32 682 22 557 10 556 32 25 4 360 2 559 22 560 12 134 2 364 2 563 2 138 2 31 32 367 2 34 2 145 2 372 2 476 8 262 18 698 2 375 2 377 32 150 38 153 2 379 22 40 32 573 4 801 18 45 2 803 2 274 2 587 2 171 106 56 2 175 2 715 8 591 2 717 2 814 10 593 2 395 2 595 2 596 18 817 2 192 2 602 2 729 2 404 4 824 2 606 32 69 2 608 106 827 2 407 2 495 16 498 2 615 12 200 2 414 2 77 2 204 4 205 2 839 22 81 2 510 32 621 2 515 2 519 2 304 2 847 32 742 2 524 2 635 2 636 14 527 2 308 106 309 10 856 4 859 2 858 4 857 2 643 2 748 4 749 2 860 2 
35 2 26 2 221 1 548 2 
548 2 512 2 
394 2 226 2 590 2 405 2 852 2 177 2 548 2 
405 2 463 2 548 2 
209 2 405 2 548 2 
641 2 118 2 26 2 
405 2 548 2 
641 2 552 2 
312 2 548 2 
641 2 26 2 220 2 
675 2 26 2 671 2 
26 2 400 2 327 2 
317 2 26 2 678 2 
26 2 800 2 646 2 
641 2 292 2 
496 2 548 2 
585 2 671 2 
120 2 327 2 
566 2 678 2 
800 2 206 2 
641 2 778 2 
800 2 616 2 
678 2 83 2 
59 2 327 2 
736 2 671 2 
641 2 26 2 220 2 187 2 
641 2 665 2 26 2 220 2 187 2 
641 2 26 2 744 2 
641 2 26 2 811 2 
837 2 426 2 631 2 500 2 
226 2 734 2 177 2 293 2 
226 2 707 2 734 2 852 2 177 2 293 2 
394 2 226 2 310 2 405 2 177 2 548 2 
757 2 378 2 
394 2 226 2 652 2 177 2 
678 2 819 2 
705 2 800 2 
368 2 671 2 
301 2 327 2 
62 2 800 2 327 2 
800 2 327 2 780 2 
579 2 800 2 327 2 
800 2 327 2 639 2 
226 2 177 2 84 2 213 2 43 2 530 6 249 6 99 2 
641 2 848 2 
523 2 571 2 807 6 441 2 247 2 688 2 481 2 532 2 581 2 147 2 710 2 336 2 537 2 818 2 455 4 538 2 66 4 281 2 
691 2 26 2 
604 2 
318 4 100 2 440 2 3 4 4 2 233 2 543 2 331 4 234 2 657 2 762 2 763 2 547 2 12 2 116 4 245 2 772 2 20 2 683 2 363 4 787 4 788 4 136 2 252 2 468 2 790 2 471 2 255 2 792 6 264 2 41 2 157 26 479 2 704 2 578 6 270 2 49 2 382 26 54 4 808 4 716 2 388 6 389 2 592 2 390 4 58 4 188 2 821 4 189 4 403 4 195 2 406 6 610 2 828 2 497 2 412 2 613 2 413 2 78 2 733 2 838 2 623 4 425 2 211 2 518 2 845 2 849 2 429 2 525 2 851 2 217 8 854 4 315 2 753 2 
318 4 100 2 440 2 3 4 4 2 233 2 543 2 331 4 234 2 657 2 762 2 763 2 338 2 547 2 12 2 116 4 772 2 20 2 363 4 787 4 788 4 136 2 252 2 468 2 790 2 471 2 255 2 256 2 792 6 373 2 264 2 41 2 157 26 479 2 704 2 482 2 578 6 270 2 49 2 382 26 54 6 808 4 716 2 388 6 389 2 592 2 390 4 58 4 396 2 188 2 821 4 189 4 403 4 195 2 406 6 610 2 828 2 497 2 412 2 613 2 413 2 78 2 504 2 733 2 838 2 623 4 425 2 211 2 518 2 845 2 849 2 429 2 851 2 217 8 854 4 315 2 753 2 
29 2 
568 2 813 2 
318 4 3 4 543 2 104 2 331 2 234 2 657 2 762 2 115 2 547 2 11 2 12 2 116 4 549 2 769 2 346 2 772 2 672 2 20 2 353 2 561 2 787 4 136 2 790 2 471 2 255 2 256 2 792 2 373 2 259 6 264 2 374 2 155 2 41 2 157 14 479 2 576 2 578 2 49 2 382 18 276 2 54 6 586 2 170 4 716 2 388 6 812 2 718 2 597 2 287 2 821 2 195 2 290 2 406 2 610 2 494 4 828 2 731 4 497 2 614 2 413 2 835 2 733 2 297 2 425 2 211 2 518 2 302 2 851 2 92 2 528 2 93 2 311 2 315 2 753 2 861 2 
725 2 782 2 526 2 307 2 851 2 135 2 421 2 157 2 297 2 449 2 582 2 382 4 115 2 568 2 588 2 264 2 712 2 
318 4 3 4 543 2 104 2 331 2 234 2 657 2 762 2 115 2 547 2 11 4 12 2 116 4 549 2 769 2 346 2 772 2 672 2 20 2 353 2 561 2 787 4 136 2 790 2 471 2 255 2 256 2 792 2 373 2 259 6 264 2 374 2 155 2 41 2 157 14 479 2 44 2 576 2 578 2 49 2 382 18 276 2 54 6 586 2 170 4 716 2 388 6 812 2 180 2 718 2 597 2 287 2 821 4 195 2 290 2 406 2 610 2 494 4 828 2 731 4 497 2 614 2 413 2 835 2 733 2 297 2 425 2 211 2 518 2 302 2 851 2 92 2 528 2 93 2 311 2 315 2 753 2 861 2 
318 4 3 4 543 2 104 2 331 2 234 2 657 2 762 2 115 2 547 2 11 2 12 2 116 4 549 2 769 2 346 2 772 2 672 2 20 2 353 2 561 2 787 4 136 2 790 2 471 2 255 2 256 2 792 2 373 2 259 6 264 2 374 2 155 2 41 2 157 14 479 2 576 2 578 2 49 2 382 18 276 2 54 6 586 2 170 4 716 2 388 6 812 2 718 2 597 2 287 2 821 2 195 2 290 2 406 2 610 2 494 4 828 2 731 4 497 2 614 2 413 2 835 2 733 2 297 2 425 2 211 2 518 2 302 2 851 2 92 2 528 2 93 2 311 2 315 2 753 2 861 2 
224 2 2 2 438 2 439 2 227 4 650 4 3 4 442 2 443 2 444 2 445 2 446 2 448 4 655 2 234 4 7 4 656 2 453 2 452 2 10 2 237 2 12 2 239 2 663 2 242 2 13 2 458 2 460 2 246 2 461 2 15 6 670 2 16 2 677 3 19 2 21 2 22 2 679 8 251 2 467 2 253 2 254 2 255 2 472 2 257 6 256 5 473 2 38 2 696 4 260 2 261 2 39 4 263 2 264 2 265 4 268 2 41 4 479 2 480 2 702 4 703 2 704 2 706 2 272 2 48 3 49 2 275 2 54 13 278 2 280 18 57 2 58 12 60 2 720 2 722 4 486 3 724 2 487 4 488 6 489 2 288 2 291 4 70 3 71 14 73 8 499 2 294 2 78 2 733 2 79 4 508 2 735 1 509 2 82 2 299 2 513 2 737 2 738 8 740 2 516 2 518 2 520 4 89 2 90 8 743 2 745 2 746 4 95 2 96 8 97 8 535 14 536 2 752 2 316 2 318 4 540 3 321 2 100 2 103 2 761 2 331 2 109 2 762 2 337 10 113 2 763 23 547 4 764 14 116 6 117 4 767 2 770 2 771 4 125 2 772 4 126 4 773 2 775 2 349 2 777 4 352 2 129 3 354 2 132 2 359 2 781 14 133 3 361 12 363 2 788 2 787 6 365 2 789 12 136 2 139 2 140 2 141 2 790 2 142 2 144 2 792 14 793 2 146 6 567 2 371 2 794 2 795 2 796 2 797 2 373 5 148 4 149 14 154 2 156 2 799 4 157 28 158 2 574 2 802 2 578 14 580 3 380 2 163 2 583 2 804 2 382 36 166 2 169 2 386 2 176 2 388 6 390 40 391 2 392 6 179 2 181 14 183 2 397 4 599 2 598 2 188 2 189 18 821 23 403 12 605 2 195 2 406 28 825 2 196 2 826 2 609 2 408 2 610 4 409 2 611 4 828 2 829 8 411 2 198 2 831 38 412 20 413 2 199 4 833 4 834 2 416 2 617 8 202 40 838 2 624 2 210 2 211 2 627 2 212 2 845 2 628 6 846 2 629 2 849 2 630 2 632 2 428 3 851 2 430 2 217 42 854 2 642 2 433 2 434 2 645 2 436 2 437 2 647 2 
169 2 1 2 403 2 442 2 460 2 406 2 157 2 578 2 624 2 95 2 580 2 198 2 792 2 412 2 382 2 763 2 260 2 188 2 821 2 
169 2 1 2 403 2 442 2 460 2 406 2 157 2 578 2 624 2 95 2 580 2 198 2 792 2 412 2 382 2 763 2 260 2 188 2 821 2 
169 2 1 2 403 2 442 2 460 2 406 2 157 2 578 2 624 2 95 2 580 2 198 2 792 2 412 2 382 2 763 2 260 2 188 2 821 2 
133 3 227 2 541 2 79 2 361 4 137 2 178 2 451 2 397 2 763 3 844 3 697 2 148 2 260 2 188 2 89 4 117 2 821 3 90 6 289 2 123 2 406 2 157 4 701 4 702 2 15 4 746 2 431 2 612 2 71 6 48 3 218 2 411 4 73 2 382 10 97 2 21 4 833 2 617 2 647 4 
320 2 133 2 227 2 541 2 79 2 361 4 137 2 392 2 178 2 451 2 397 2 763 2 844 2 697 2 148 2 260 2 188 2 89 4 117 2 821 2 90 6 289 2 123 2 799 2 406 2 157 4 701 4 702 2 15 4 746 2 431 2 612 2 71 4 48 2 218 2 411 4 73 2 382 10 97 2 21 4 833 2 617 2 647 4 
320 2 133 2 227 2 541 2 79 2 361 4 137 2 392 2 178 2 451 2 397 2 763 2 844 2 697 2 148 2 260 2 188 2 89 4 117 2 821 2 90 6 289 2 123 2 799 2 406 2 157 4 701 4 702 2 15 4 746 2 431 2 612 2 71 4 48 2 218 2 411 4 73 2 382 10 97 2 21 4 833 2 617 2 647 4 
320 2 133 2 227 2 541 2 79 2 361 4 137 2 392 2 178 2 451 2 397 2 763 2 844 2 697 2 148 2 260 2 188 2 89 4 117 2 821 2 90 6 289 2 123 2 799 2 406 2 157 4 701 4 702 2 15 4 746 2 431 2 612 2 71 4 48 2 218 2 411 4 73 2 382 10 97 2 21 4 833 2 617 2 647 4 
320 4 133 2 227 2 541 2 79 2 361 4 137 2 392 4 178 2 451 2 397 2 763 2 844 2 697 2 148 2 260 2 188 2 89 4 117 2 821 2 90 6 289 2 123 2 799 4 406 2 157 4 701 4 702 2 15 4 746 2 431 2 612 2 71 4 48 2 218 2 411 4 73 2 382 10 97 2 21 4 833 2 617 2 647 4 
684 2 143 2 193 2 182 2 22 2 620 2 
182 2 58 2 741 2 30 2 207 2 544 2 464 2 
172 1 121 2 618 1 283 2 362 1 80 2 157 8 564 1 529 2 469 2 747 2 842 2 236 2 518 2 382 10 87 1 279 2 816 2 98 2 222 2 
320 4 227 6 174 2 79 6 361 12 446 2 392 5 690 2 8 2 397 6 146 4 475 4 212 2 148 6 799 4 157 6 550 2 702 2 15 4 611 2 71 15 73 6 534 2 382 6 97 6 277 2 199 2 74 2 617 6 589 2 
305 2 522 7 783 2 785 2 157 1 840 2 774 2 594 2 692 1 411 2 36 2 625 4 382 1 709 2 644 2 21 2 570 2 647 2 
305 2 522 6 783 2 785 2 840 2 774 4 594 2 411 2 625 4 36 4 709 2 644 4 21 2 570 2 647 2 
305 2 522 10 783 2 785 8 157 1 840 6 774 8 594 2 692 1 411 2 625 4 36 8 382 1 709 2 644 8 21 2 570 2 647 2 
305 2 522 2 783 2 774 2 594 2 411 2 625 2 36 2 709 2 644 2 21 2 570 2 647 2 
387 1 229 2 326 2 393 2 234 4 109 2 9 1 114 2 765 2 340 2 489 2 116 6 343 2 603 2 493 2 610 4 197 1 17 1 351 2 28 4 787 6 565 1 470 2 256 4 373 4 303 2 430 2 41 4 157 14 855 1 577 2 273 2 435 2 382 14 54 12 168 1 755 2 
284 2 285 2 229 2 787 6 28 6 565 2 393 2 234 2 660 2 109 2 256 1 258 2 114 2 373 1 116 6 489 2 190 2 343 2 243 2 152 2 41 2 430 2 157 14 14 2 610 2 273 2 382 14 54 9 165 2 75 2 415 2 167 2 755 2 
806 2 558 2 387 2 505 2 229 2 326 2 787 8 28 14 562 2 393 2 234 2 721 2 109 2 660 2 723 2 256 4 373 4 765 2 116 8 489 2 190 4 726 2 343 2 822 2 603 2 41 2 430 2 157 20 493 2 577 2 610 2 273 2 161 2 382 20 314 2 54 18 355 2 165 2 75 2 296 2 358 2 167 2 755 2 
558 2 284 2 387 2 229 2 809 2 787 8 28 12 565 2 393 2 424 2 32 2 234 2 470 2 721 2 109 2 660 4 694 2 110 2 64 2 256 4 258 2 335 2 9 2 373 4 116 8 489 2 190 6 726 2 343 2 152 2 41 2 430 2 157 18 610 2 273 2 435 2 164 2 382 20 54 20 165 4 75 2 167 4 755 2 
108 2 

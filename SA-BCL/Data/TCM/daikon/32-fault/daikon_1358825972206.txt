#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 471 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 523 103 189 790 110 750 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 6 348 187 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 325 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 325 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 325 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 325 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 325 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 185 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 664 181 459 483 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 664 181 459 483 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 664 181 459 483 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 664 181 459 483 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaCharStream:BeginToken()C
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.Quant:eltsGT([II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern:numIntArrays()I
daikon.ProglangType:isArray()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptSlice1:num_samples()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ModBitTracker:num_samples()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0:arity()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logOn()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:baseIsFloat()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONSTANT | 17524 | 1 -> -1
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Invariant:logDetail()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:lt(II)Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 10865 | if (x) -> if (!x)
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.ProglangType:dimensions()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:lexLT([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.Invariant:justified()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant:getConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String; | RETURN | 6378 | return null
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 21165 | = null
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:new_ppt()V
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isIntegral()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
daikon.Quant:lte(II)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfo:isPointer()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:format()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:internSubsequence([III)[I
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice2:arity()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V | OPERATOR | 609 | != -> ==
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:intern([D)[D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ValueTuple:size()I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern:intern([J)[J
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isPointerFileRep()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.ProglangType:isScalar()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:union([I[I)[I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | STATEMENT | 54139 | stmt -> ;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2308 | = null
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_ntk()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:memberOf(I[I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 71159 | = null
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:intern([I)[I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:hashCode()I
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoAux:hashCode()I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:logDetail()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:eq(FF)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:isMissing(I)Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eltsEqual([II)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:subsetOf([J[J)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:memberOf(F[F)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.Quant:concat([I[I)[I
daikon.ModBitTracker:num_sets()I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:gte(II)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE:pow(II)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.ProglangType:isPseudoArray()Z
daikon.diff.InvMap:InvMap()V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 12352 | stmt -> ;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptName:isEnterPoint()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:sum([D)D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 19511 | return null
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptSlice1:arity()I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:gt(II)Z
daikon.diff.RootNode:RootNode()V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.ProglangType:isFloat()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaCharStream:backup(I)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
384 2 173 4 462 2 33 2 41 2 525 2 618 2 744 2 379 2 
385 6 94 2 580 2 373 2 639 2 427 6 622 6 262 2 11 2 488 2 456 2 
194 4 510 2 17 6 405 2 363 2 33 2 59 2 34 6 191 2 807 4 122 6 618 2 51 6 
26 16 256 4 741 2 768 2 374 16 430 6 527 6 375 2 302 10 33 6 9 2 433 4 618 6 91 10 165 8 164 29 508 4 620 10 801 2 592 16 97 2 199 4 752 10 755 2 754 10 628 12 21 8 339 8 151 26 633 8 
268 6 79 4 
288 2 
713 2 346 2 154 2 255 2 211 2 717 2 558 2 559 2 615 2 618 2 411 2 162 2 119 2 306 4 728 2 121 2 732 2 71 2 518 2 22 4 232 2 738 2 685 2 787 2 372 2 241 2 322 2 184 2 526 2 744 2 242 2 33 2 698 2 192 2 97 2 706 2 98 2 99 2 44 2 600 4 548 2 342 2 
737 2 399 4 347 2 299 6 551 4 26 32 374 32 430 4 527 4 693 2 302 16 33 4 696 4 9 2 455 6 219 4 618 4 91 16 436 2 193 4 620 16 165 6 508 2 164 54 775 4 538 6 592 32 752 6 754 16 734 4 709 2 226 6 201 6 628 22 24 6 151 48 294 8 809 2 633 18 
360 2 574 2 706 2 
0 2 713 2 665 2 686 2 704 10 568 2 258 2 419 2 402 2 596 2 287 22 279 2 798 2 786 2 
26 2 374 2 527 2 302 2 586 2 138 2 434 2 91 2 620 2 508 2 164 6 143 2 592 2 16 2 752 4 754 2 628 2 72 2 679 2 470 2 424 2 151 4 633 2 
164 16 620 4 509 2 299 6 26 8 592 8 256 2 374 8 226 6 754 4 628 4 302 4 696 4 151 12 91 4 193 4 449 2 
4 4 609 4 429 2 640 4 641 2 718 2 329 2 407 4 8 2 501 10 533 4 303 2 646 4 435 4 617 4 282 10 64 2 701 2 360 6 621 2 728 2 144 4 145 2 43 2 706 8 444 2 676 2 312 2 624 4 516 2 69 62 202 2 22 4 23 2 711 4 783 14 736 2 574 2 342 4 601 2 
195 2 231 2 158 2 249 2 471 2 
494 2 497 2 608 1 210 2 401 2 5 2 110 2 404 2 213 4 611 2 500 2 406 2 10 3 721 2 217 2 216 2 614 2 505 2 724 2 409 16 618 32 14 1 307 2 418 2 308 2 730 32 19 2 630 2 422 2 735 1 316 2 123 2 124 2 319 2 739 2 636 2 321 1 28 1 523 2 324 3 323 2 742 1 327 32 530 4 132 2 133 2 33 34 35 1 431 2 139 6 650 2 331 2 37 2 748 2 332 2 653 2 142 1 440 3 40 4 334 2 540 1 750 2 335 2 656 2 445 1 248 6 759 2 337 2 448 2 662 2 341 1 153 1 664 2 666 2 765 1 350 1 667 2 352 16 55 2 555 2 668 2 452 2 354 4 160 2 61 2 356 24 63 24 163 3 457 2 359 2 780 16 567 4 172 5 467 2 68 3 266 2 73 16 573 3 468 6 365 2 681 2 76 1 179 2 474 2 78 2 180 2 688 3 475 2 183 1 690 2 273 2 790 2 276 2 189 2 278 2 377 3 797 2 479 3 281 3 380 2 383 2 384 2 481 2 196 2 703 2 482 2 708 3 390 2 391 2 394 2 806 2 712 2 204 2 103 2 205 2 489 2 490 6 297 3 
33 2 715 2 
403 2 33 4 25 2 
577 2 
473 2 53 2 298 2 240 18 208 2 766 2 496 2 257 2 54 2 300 2 81 2 642 2 556 2 280 2 773 2 504 2 140 18 114 2 563 2 90 2 480 2 507 2 700 2 381 2 220 2 439 2 333 2 386 2 800 2 749 2 284 2 95 2 442 2 654 2 18 2 570 2 313 2 710 2 660 18 149 2 599 2 785 2 
317 2 575 2 56 2 105 1 
330 2 56 2 
769 2 52 2 511 2 706 2 433 2 443 2 56 2 
338 2 511 2 56 2 
511 2 595 2 56 2 
89 2 317 2 731 2 
511 2 56 2 
560 2 731 2 
244 2 56 2 
60 2 317 2 731 2 
612 2 764 2 317 2 
1 2 771 2 317 2 
355 2 317 2 49 2 
606 2 317 2 246 2 
531 2 731 2 
537 2 56 2 
612 2 675 2 
674 2 771 2 
770 2 355 2 
136 2 246 2 
521 2 731 2 
536 2 246 2 
253 2 355 2 
771 2 88 2 
612 2 648 2 
398 2 60 2 317 2 731 2 
398 2 60 2 317 2 731 2 259 2 
557 2 317 2 731 2 
215 2 317 2 731 2 
652 2 477 2 269 2 237 2 
492 4 603 2 461 2 270 2 514 2 802 2 287 6 529 2 571 4 583 2 517 2 584 2 549 2 104 2 50 2 506 2 491 2 472 2 
317 2 129 2 
604 2 791 2 706 2 443 2 
769 2 604 2 791 2 706 2 443 2 476 2 
758 2 511 2 706 2 433 2 443 2 56 2 
71 2 691 2 
503 2 706 2 433 2 443 2 
57 2 355 2 
247 2 246 2 
589 2 612 2 
727 2 771 2 
771 2 261 2 246 2 
771 2 246 2 120 2 
100 2 771 2 246 2 
771 2 223 2 246 2 
66 2 362 2 706 2 443 2 314 2 75 2 370 6 106 6 
463 2 731 2 
505 2 
494 2 495 2 608 2 110 2 499 2 213 4 404 2 611 2 618 26 410 2 307 2 515 2 308 2 730 4 19 2 20 4 629 4 422 2 519 2 123 2 319 2 636 8 740 2 323 2 29 2 327 6 530 4 133 2 33 26 431 2 139 2 746 2 331 4 37 2 332 2 653 2 539 4 540 2 334 2 750 2 656 2 248 4 337 2 664 2 156 2 667 2 352 6 555 2 354 4 160 4 161 4 61 2 168 2 567 4 467 2 678 4 468 6 365 2 368 4 474 6 475 2 690 2 272 4 790 4 189 2 797 2 587 2 384 2 481 2 703 2 197 2 482 2 489 2 490 2 
494 2 495 2 497 2 608 2 110 2 213 4 404 2 611 2 618 26 410 2 307 2 515 2 308 2 730 4 19 2 20 4 629 4 422 2 519 2 123 2 319 2 636 8 740 2 323 2 327 6 530 4 133 2 33 26 431 2 139 2 746 2 331 4 37 2 332 2 653 2 539 4 540 2 334 2 750 2 656 2 248 6 148 2 337 2 664 2 156 2 552 2 667 2 352 6 555 2 354 4 160 4 161 4 61 2 457 2 464 2 779 2 567 4 467 2 678 4 468 6 365 2 368 4 474 6 475 2 690 2 272 4 790 4 189 2 797 2 587 2 384 2 481 2 703 2 197 2 482 2 489 2 490 2 
522 2 
227 2 774 2 
714 2 3 2 767 2 553 2 159 4 260 2 213 2 353 2 354 2 262 4 11 2 772 4 454 2 561 2 616 2 357 2 618 6 456 2 673 2 460 2 415 2 222 4 171 4 622 6 627 2 70 2 422 2 468 4 123 2 77 2 373 4 690 2 428 2 427 6 695 2 644 2 33 12 585 8 645 2 647 2 745 2 432 2 37 2 799 2 332 2 385 6 653 2 198 2 705 2 200 8 388 10 547 4 659 4 447 2 598 2 295 2 489 2 397 2 808 2 550 2 
714 2 3 2 767 2 553 2 159 4 260 2 213 2 353 2 354 2 262 4 11 2 772 4 454 2 561 2 616 2 357 2 618 6 456 2 673 2 460 2 415 2 222 4 171 4 622 8 627 2 70 2 422 2 468 4 123 2 77 2 683 2 580 2 373 4 690 2 428 2 427 6 695 2 644 2 33 12 585 8 645 2 647 2 745 2 37 2 799 2 332 2 385 8 653 2 198 2 200 8 388 10 290 4 547 4 659 4 485 2 447 2 598 2 295 2 489 2 397 2 808 2 550 2 
77 2 714 2 460 2 3 2 198 2 373 2 427 2 622 2 159 2 627 2 70 2 547 4 262 2 447 2 772 4 561 2 808 2 673 2 
714 2 3 2 767 2 553 2 159 4 260 2 213 2 353 2 354 2 262 4 11 2 772 4 454 2 561 2 616 2 357 2 618 6 673 2 460 2 415 2 222 4 171 4 622 6 627 2 70 2 422 2 468 4 123 2 77 2 580 2 373 4 690 2 428 2 427 4 695 2 644 2 33 12 585 4 645 2 647 2 745 2 432 2 37 2 799 2 332 2 385 6 653 2 198 2 705 2 200 4 388 6 547 4 659 4 447 2 598 2 295 2 489 2 397 2 808 2 550 2 
714 2 3 2 767 2 553 2 159 4 260 2 213 2 353 2 354 2 262 4 11 2 772 4 454 2 561 2 616 2 357 2 618 6 673 2 460 2 415 2 222 4 171 4 622 4 627 2 70 2 422 2 468 4 123 2 77 2 373 4 639 2 690 2 428 2 427 6 695 2 644 2 33 12 585 4 645 2 647 2 745 2 432 2 37 2 799 2 332 2 385 6 653 2 198 2 705 2 200 4 388 6 547 4 659 4 447 2 598 2 295 2 489 2 397 2 808 2 550 2 
714 2 3 2 767 2 553 2 159 4 260 2 213 2 353 2 354 2 262 4 11 2 772 4 454 2 561 2 616 2 357 2 618 6 456 2 673 2 460 2 415 2 222 4 171 4 622 6 627 2 70 2 422 2 468 4 123 2 77 2 373 4 690 2 428 2 427 6 695 2 644 2 33 12 585 4 645 2 647 2 745 2 432 2 37 2 799 2 332 2 385 6 653 2 198 2 705 2 200 8 388 6 547 4 659 4 447 2 598 2 295 2 489 2 397 2 808 2 550 2 
714 2 3 2 767 2 553 2 159 4 260 2 213 2 353 2 354 2 262 4 11 2 772 4 454 2 561 2 616 2 357 2 618 6 456 2 673 2 460 2 415 2 222 4 171 4 622 6 627 2 70 2 422 2 468 4 123 2 77 2 373 4 639 2 690 2 428 2 427 8 695 2 644 2 33 12 585 8 645 2 647 2 745 2 432 2 37 2 799 2 332 2 385 8 653 2 198 2 705 2 200 8 388 10 547 4 659 4 447 2 598 2 295 2 489 2 397 2 808 2 550 2 
714 2 3 2 767 2 553 2 159 4 260 2 213 2 353 2 354 2 262 4 11 2 772 4 454 2 561 2 616 2 357 2 618 6 456 2 673 2 460 2 415 2 222 4 171 4 622 6 627 2 70 2 422 2 468 4 123 2 77 2 373 4 690 2 428 2 427 6 695 2 644 2 33 12 585 8 645 2 647 2 745 2 432 2 37 2 799 2 332 2 385 6 653 2 198 2 705 2 200 8 388 10 547 4 659 4 447 2 598 2 295 2 489 2 397 2 808 2 550 2 
602 2 3 2 400 2 212 6 213 4 611 2 11 4 616 2 618 24 13 2 410 2 619 2 415 2 222 8 622 4 19 2 627 2 422 2 229 2 25 6 636 2 639 4 427 8 428 2 243 2 31 6 33 46 644 2 645 2 647 2 431 2 649 1 37 2 438 7 653 2 248 6 658 4 659 6 447 2 250 6 664 2 667 2 260 2 262 4 61 2 454 2 62 2 264 6 673 2 457 2 65 2 460 2 265 2 677 6 70 2 468 6 74 8 682 2 474 6 77 2 271 2 80 1 475 2 690 2 272 2 274 1 275 2 695 2 83 6 481 2 703 2 705 2 482 2 707 6 102 2 292 6 486 6 295 2 489 2 490 2 714 2 107 1 494 2 497 2 498 2 715 6 716 2 502 6 115 2 725 2 305 2 307 2 308 2 730 2 309 2 310 1 311 4 315 6 123 2 126 2 323 2 131 1 327 8 530 4 133 12 135 2 745 2 139 2 141 2 746 4 331 2 332 2 541 2 336 2 757 2 545 1 547 4 337 2 150 2 550 2 762 2 343 2 553 2 767 2 351 2 352 6 159 4 353 4 354 4 772 4 561 2 357 4 778 1 171 4 566 2 567 4 572 1 365 2 367 2 368 4 577 6 373 4 582 7 790 2 794 6 796 10 797 2 587 2 799 2 385 12 384 2 198 2 200 2 388 2 392 6 598 2 206 2 808 2 397 2 
602 2 714 2 3 2 494 2 400 2 497 2 498 2 715 6 716 2 212 6 213 4 611 2 502 6 11 4 616 2 115 2 618 26 13 2 725 2 619 2 410 2 305 2 415 2 222 8 307 2 309 2 730 2 622 8 308 2 311 4 19 2 627 2 229 2 422 2 315 6 25 6 123 2 126 2 636 4 323 2 428 2 427 8 327 8 530 4 133 12 243 2 31 6 644 2 33 48 135 2 645 2 745 2 647 2 431 2 139 2 141 2 746 4 331 2 37 2 332 2 653 2 541 2 757 2 336 2 248 6 337 2 659 6 658 4 547 4 447 2 150 2 250 6 550 2 343 2 762 2 664 2 767 2 553 2 351 2 667 2 352 6 159 4 260 2 353 4 354 4 160 2 262 4 772 4 454 2 561 2 61 4 62 2 357 4 264 6 456 4 673 2 65 2 457 2 460 2 67 2 566 2 171 4 567 4 265 2 677 6 70 2 468 6 469 2 367 2 365 2 74 8 368 4 577 6 682 2 77 2 474 6 271 2 475 2 373 4 690 2 272 2 790 2 275 2 695 2 83 6 794 6 796 10 587 2 797 4 799 2 384 2 385 12 481 2 703 2 198 2 482 4 705 2 707 6 200 6 388 2 392 6 102 2 292 6 598 2 486 6 295 2 489 2 397 2 808 2 206 2 490 2 
602 2 714 2 3 2 494 2 400 2 497 2 498 2 715 6 716 2 212 6 213 4 611 2 502 6 11 4 616 2 115 2 618 26 13 2 725 2 619 2 410 2 305 2 415 2 222 8 307 2 309 2 730 2 622 8 308 2 311 4 19 2 627 2 229 2 422 2 315 6 25 6 123 2 126 2 636 4 323 2 428 2 427 8 327 8 530 4 133 12 243 2 31 6 644 2 33 48 135 2 645 2 745 2 647 2 431 2 139 2 141 2 746 4 331 2 37 2 332 2 653 2 541 2 757 2 336 2 248 6 337 2 659 6 658 4 547 4 447 2 150 2 250 6 550 2 343 2 762 2 664 2 767 2 553 2 351 2 667 2 352 6 159 4 260 2 353 4 354 4 160 2 262 4 772 4 454 2 561 2 61 4 62 2 357 4 264 6 456 4 673 2 65 2 457 2 460 2 67 2 566 2 171 4 567 4 265 2 677 6 70 2 468 6 469 2 367 2 365 2 74 8 368 4 577 6 682 2 474 6 77 2 271 2 475 2 373 4 690 2 272 2 790 2 275 2 695 2 83 6 794 6 585 4 796 10 587 2 797 4 799 2 384 2 385 12 481 2 703 2 198 2 482 4 705 2 707 6 200 6 388 6 392 6 102 2 292 6 598 2 486 6 295 2 489 2 397 2 808 2 206 2 490 2 
602 2 2 6 3 2 400 2 7 6 212 6 213 4 610 6 611 2 11 4 616 2 618 24 13 2 410 2 619 2 415 2 222 8 622 10 19 2 627 2 422 2 229 2 25 12 423 2 632 2 636 6 639 2 427 10 428 2 243 2 31 6 32 2 33 52 644 2 645 2 647 2 431 2 37 2 651 6 653 2 248 6 45 6 658 4 659 6 447 2 250 6 664 2 667 2 260 2 262 4 61 4 454 2 62 2 456 4 264 6 673 2 457 2 65 2 460 2 67 2 265 2 677 6 70 2 468 6 469 2 74 8 682 2 77 2 474 8 271 2 475 2 690 2 272 4 692 2 275 2 695 2 83 12 481 2 703 2 705 2 482 4 707 12 102 2 292 6 486 12 295 2 489 2 490 4 714 2 494 2 497 2 498 2 715 12 716 2 502 6 722 6 115 2 725 2 305 2 307 2 308 2 730 4 309 2 311 4 315 6 123 2 126 2 323 2 327 12 530 4 133 10 135 2 745 2 139 4 141 2 746 4 331 4 332 2 541 2 336 2 757 2 547 4 337 2 150 2 550 2 343 2 762 2 553 2 767 2 351 2 352 8 159 4 353 4 354 4 160 2 772 4 561 2 357 4 169 2 171 4 566 2 567 4 781 6 365 2 367 2 368 6 577 12 580 2 373 4 790 2 585 4 794 6 796 8 797 4 587 2 799 2 382 2 385 16 384 2 590 6 198 2 200 6 803 2 388 6 389 6 392 6 203 2 598 2 397 2 808 2 
77 2 714 2 3 2 767 2 373 4 427 6 260 2 695 2 33 4 645 2 585 4 11 2 262 4 745 2 647 2 772 2 616 2 456 2 673 2 385 4 415 2 222 2 171 2 705 2 622 6 200 6 388 4 627 2 70 2 659 2 547 2 447 2 598 2 295 2 550 2 
714 2 493 2 3 2 494 2 497 2 213 4 611 2 11 2 505 2 616 2 618 24 410 2 415 2 222 2 307 2 622 6 308 2 730 3 19 2 627 2 422 2 123 2 238 3 323 2 427 6 130 2 327 8 530 4 133 4 33 28 645 2 647 2 745 2 431 2 36 2 139 3 746 2 37 2 332 2 653 2 248 6 659 2 547 2 337 2 447 2 448 2 550 2 664 2 767 2 553 2 667 2 352 6 260 2 354 4 262 4 772 2 456 2 673 2 457 2 171 2 567 4 70 2 468 6 365 2 368 4 77 2 474 6 475 2 373 4 690 2 695 2 796 2 587 2 699 2 380 2 385 4 384 2 481 2 703 2 705 2 200 6 388 2 598 2 487 2 295 2 205 2 489 2 490 3 206 2 
695 2 761 2 645 2 
695 2 761 2 645 2 
108 2 497 2 213 4 611 2 613 2 11 4 723 2 115 2 618 16 410 2 222 4 307 2 515 4 308 2 730 2 622 12 311 2 19 2 627 4 422 2 315 2 233 2 236 2 520 6 123 2 426 2 323 2 524 2 639 4 427 12 327 2 530 4 133 4 134 2 644 2 33 24 645 6 431 2 746 8 37 2 747 4 39 2 332 2 653 2 544 2 248 6 761 2 659 4 658 2 337 2 547 2 664 2 450 6 767 2 667 2 352 2 159 4 260 2 353 2 354 4 58 2 262 4 671 2 772 2 454 2 561 2 61 4 564 4 357 4 456 4 673 2 457 2 166 2 171 2 567 4 468 6 365 2 682 2 474 2 77 2 271 2 581 2 580 4 475 2 373 4 690 2 790 6 695 4 585 4 796 2 797 4 587 2 378 2 384 2 385 16 481 2 703 2 482 4 200 6 388 6 489 2 397 2 808 2 
344 2 460 2 566 2 170 2 311 2 133 2 421 2 315 2 33 4 796 2 671 2 564 2 123 2 618 2 774 2 747 2 343 2 
108 2 497 2 213 4 611 2 613 2 11 4 115 2 618 16 410 2 222 4 307 2 515 4 308 2 730 4 622 12 19 2 627 4 422 2 315 2 233 2 520 6 123 2 426 2 637 2 323 2 524 2 639 4 427 12 327 2 530 4 133 2 134 2 644 2 33 24 645 6 431 2 746 8 37 2 747 4 39 2 332 2 653 2 248 6 761 2 659 4 658 2 337 2 547 2 47 2 664 2 450 6 767 2 667 2 352 2 159 4 260 2 353 4 354 4 58 4 262 4 671 2 772 2 454 2 561 2 61 4 564 4 357 4 456 4 673 2 457 2 166 2 171 2 567 4 468 6 365 2 682 2 474 2 77 2 271 2 581 2 580 4 475 2 373 4 690 2 790 6 695 4 87 2 697 2 585 4 797 4 587 2 799 2 384 2 385 16 481 2 703 2 482 4 200 6 388 6 289 2 489 2 397 2 808 2 
108 2 607 2 497 2 213 4 611 2 613 2 113 2 11 4 115 2 618 16 410 2 222 4 307 2 515 4 308 2 730 2 622 12 311 2 19 2 627 4 422 2 315 2 233 2 520 6 123 2 426 2 323 2 524 2 639 4 427 12 327 2 530 4 133 4 134 2 644 2 33 24 645 6 431 2 746 8 37 2 747 4 39 2 332 2 653 2 248 6 546 2 761 2 659 4 658 2 337 2 547 2 664 2 450 6 155 2 767 2 667 2 352 2 159 4 260 2 353 4 354 4 58 2 262 4 671 2 772 2 454 2 561 2 61 4 564 4 357 4 456 4 673 2 457 2 166 2 171 2 567 4 468 6 365 2 682 2 474 2 77 2 271 2 581 2 580 4 475 2 373 4 690 2 790 6 695 4 793 2 585 4 796 2 797 4 587 2 799 2 384 2 385 16 481 2 703 2 482 4 200 6 388 6 489 2 397 2 808 2 
602 2 608 2 6 2 213 4 214 2 611 2 618 24 218 4 12 10 619 2 620 2 221 4 414 2 413 30 15 14 416 4 417 2 623 2 224 2 19 2 225 2 625 6 20 2 226 6 628 4 629 10 229 2 422 2 230 4 631 2 238 2 633 4 634 2 635 2 239 2 26 4 636 30 27 2 638 4 640 2 30 2 33 30 646 2 36 2 431 2 435 2 37 2 38 6 653 2 441 4 42 12 655 10 657 2 248 4 46 2 661 2 48 2 663 2 664 2 252 2 451 2 254 24 670 1 672 2 65 2 457 2 465 2 267 2 678 2 468 6 680 2 474 12 684 2 690 2 272 42 694 2 277 2 86 2 696 4 699 2 91 2 702 2 93 4 481 2 285 2 484 2 101 2 487 2 489 2 296 2 490 11 493 2 494 2 109 14 495 2 497 2 111 2 302 2 720 2 116 10 307 2 729 2 513 2 512 2 730 11 308 2 519 2 318 2 123 2 737 4 126 2 320 2 740 2 128 2 327 18 530 2 133 2 328 2 532 2 533 2 534 2 535 2 139 11 141 2 746 2 331 16 332 2 539 2 144 2 540 2 542 2 753 2 754 2 756 3 336 2 147 2 337 2 340 30 151 6 152 4 345 2 763 2 348 2 156 2 157 2 352 12 354 4 562 2 358 2 164 8 167 4 776 2 777 4 361 4 567 2 569 2 782 10 174 4 784 2 365 2 176 10 366 8 177 2 368 10 178 2 578 2 579 2 374 4 790 4 185 2 186 2 187 2 795 6 587 2 588 2 384 2 591 2 592 4 593 2 387 10 805 2 393 2 395 8 396 10 
635 2 474 2 684 2 578 2 451 2 494 2 751 2 157 2 272 6 730 2 352 2 387 4 327 2 805 2 782 2 756 2 484 2 86 2 33 2 139 2 368 2 618 2 396 2 490 2 
635 2 474 2 684 2 578 2 451 2 494 2 751 2 157 2 272 6 730 2 352 2 387 4 327 2 805 2 782 2 756 2 484 2 86 2 33 2 139 2 368 2 618 2 396 2 490 2 
635 2 474 2 684 2 578 2 451 2 494 2 751 2 157 2 272 6 730 2 352 2 387 4 327 2 805 2 782 2 756 2 484 2 86 2 33 2 139 2 368 2 618 2 396 2 490 2 
451 2 26 2 494 2 209 2 689 3 325 2 789 6 374 2 327 2 528 2 430 2 301 2 302 2 33 10 792 4 263 2 245 2 139 3 618 4 91 2 304 4 620 2 164 6 165 4 437 2 458 2 118 2 592 2 780 2 730 3 804 3 626 2 754 2 228 3 760 4 446 4 73 2 293 2 151 4 251 4 
451 2 26 2 494 2 209 2 689 2 325 2 789 6 374 2 327 2 528 2 430 2 301 2 302 2 33 10 9 2 792 4 263 2 245 2 139 2 618 4 91 2 304 4 620 2 164 4 165 4 437 2 458 2 118 2 592 2 780 2 730 2 804 2 626 2 754 2 628 2 228 2 760 4 446 4 73 2 293 2 151 4 251 4 633 2 
451 2 26 2 494 2 209 2 689 2 325 2 789 6 374 2 327 2 528 2 430 2 301 2 302 2 33 10 9 2 792 4 263 2 245 2 139 2 618 4 91 2 304 4 620 2 164 4 165 4 437 2 458 2 118 2 592 2 780 2 730 2 804 2 626 2 754 2 628 2 228 2 760 4 446 4 73 2 293 2 151 4 251 4 633 2 
451 2 26 2 494 2 209 2 689 2 325 2 789 6 374 2 327 2 528 2 430 2 301 2 302 2 33 10 9 2 792 4 263 2 245 2 139 2 618 4 91 2 304 4 620 2 164 4 165 4 437 2 458 2 118 2 592 2 780 2 730 2 804 2 626 2 754 2 628 2 228 2 760 4 446 4 73 2 293 2 151 4 251 4 633 2 
451 2 26 2 494 2 209 2 689 2 325 2 789 6 374 2 327 2 528 2 430 2 301 2 302 2 33 10 9 4 792 4 263 2 245 2 139 2 618 4 91 2 304 4 620 2 164 4 165 4 437 2 458 2 118 2 592 2 780 2 730 2 804 2 626 2 754 2 628 4 228 2 760 4 446 4 73 2 293 2 151 4 251 4 633 4 
669 2 85 2 190 2 672 2 283 2 726 2 
146 2 629 2 84 2 687 2 286 2 283 2 117 2 
207 2 125 2 371 2 605 2 349 2 182 2 554 2 453 1 643 2 376 2 112 2 33 10 408 2 565 2 618 8 332 2 92 2 621 1 594 2 676 1 707 2 597 1 733 2 420 2 175 1 234 2 
620 2 164 5 26 2 592 2 788 2 416 2 374 2 542 2 754 2 185 2 226 4 628 1 302 2 364 2 696 2 151 4 91 2 
412 1 96 2 466 2 326 2 743 2 543 2 82 2 33 1 446 2 478 2 792 2 291 4 235 2 137 2 618 1 369 2 251 2 576 7 
96 2 466 2 326 2 743 2 543 2 82 2 446 2 478 2 792 2 291 4 235 4 137 4 369 4 251 2 576 6 
412 1 96 6 466 2 326 2 743 8 543 2 82 2 33 1 446 2 478 2 792 2 291 4 235 8 137 8 618 1 369 8 251 2 576 10 
466 2 326 2 543 2 82 2 446 2 478 2 792 2 291 2 235 2 137 2 369 2 251 2 576 2 
664 2 719 2 618 2 459 2 127 1 181 2 188 1 33 2 483 2 
664 2 483 2 459 2 719 2 33 2 181 2 618 2 
664 2 483 2 459 2 719 2 33 2 181 2 618 2 
664 2 483 2 459 2 719 2 33 2 181 2 618 2 
425 2 

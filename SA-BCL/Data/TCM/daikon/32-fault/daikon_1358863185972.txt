#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (437,600) (437,600) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 11 271 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (152,385) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 431 380 485 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 199 230 (185,383) (185,383) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 199 230 (185,383) (185,383) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 199 230 (185,383) (185,383) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 199 230 (185,383) (185,383) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (0,536) (185,383) (185,383) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 616 (0,536) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 616 (0,536) (0,536) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 616 (0,536) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.Error 222 584 553 456 555 357 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 487 (40,158,162,186,190,371,488,597,677,687) 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 487 (40,158,162,186,190,371,488,597,677,687) 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 487 (40,158,162,186,190,371,488,597,677,687) 548 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 320 420 166 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 320 420 166 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 320 420 166 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap:size()I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:memberOf(J[J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:pow_fast(II)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ValueTuple:size()I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 98882 | return null
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lt(II)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eq(II)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.RootNode:RootNode()V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:readChar()C
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([I)I
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice0:arity()I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 23053 | = null
utilMDE.Intern:intern([D)[D
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(JJ)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:logOn()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:subsetOf([S[S)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.ValueTuple:isMissing(I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J | OPERATOR | 13933 | > -> <=
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:lte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaCharStream:BeginToken()C
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaCharStream:getEndColumn()I
daikon.ModBitTracker:num_sets()I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern:intern([I)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator; | RETURN | 101933 | return null
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.Invariant:getConfidence()D
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator; | RETURN | 2296 | return null
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltsLTE([II)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(Z)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.ProglangType:isIntegral()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7264 | = null
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:gte(II)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:new_ppt()V
utilMDE.MathMDE:gcd([I)I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set; | CONDITION | 16702 | if (x) -> if (!x)
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONSTANT | 127547 | 2 -> -1
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([D[D)Z | CONDITION | 81695 | if (x) -> if (!x)
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logOn()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Ppt:Ppt()V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(S[S)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:subarray([JII)[J | RETURN | 30018 | return null
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z | CONDITION | 1802 | if (x) -> if (!x)
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 21839 | = null
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:concat([I[I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:lexNotEqual([I[I)Z | CONDITION | 170166 | if (x) -> if (!x)
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:relate_var()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:sameLength([I[I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:gt(II)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51688 | 64 -> 1
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:eltwiseGT([I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setDiff([I[I)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.Node:Node()V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([J)[J
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 2 437 2 129 2 44 2 332 2 393 4 49 2 600 2 355 2 
146 2 616 6 690 2 156 2 451 2 76 2 223 6 514 2 694 2 585 6 245 2 
24 4 139 2 578 6 406 2 377 2 437 2 537 2 116 4 586 6 218 2 178 6 600 2 105 6 
334 28 314 2 75 16 31 2 639 11 570 2 36 14 425 11 437 6 362 2 462 2 193 24 194 6 441 4 502 4 687 6 600 6 301 10 367 6 117 2 41 4 465 10 226 8 122 10 487 16 145 4 202 2 371 6 353 11 88 8 
329 6 364 4 
503 2 
271 2 204 2 496 2 11 2 
72 6 334 14 154 6 75 8 593 2 158 4 465 5 639 4 122 4 487 8 425 4 36 8 190 4 7 2 193 12 502 2 353 4 
51 2 542 2 433 2 28 4 475 10 421 4 637 6 254 2 189 4 55 8 681 4 115 4 379 2 479 4 215 2 573 4 339 2 685 4 626 2 198 4 531 2 446 2 404 2 447 2 305 2 174 2 410 4 264 2 328 2 391 4 652 2 629 4 509 2 246 10 350 2 414 14 491 2 632 4 613 2 538 62 
402 2 325 2 590 2 636 2 45 2 265 2 287 2 241 2 206 2 503 2 
152 2 498 2 55 2 385 2 506 2 573 2 
72 6 334 56 154 6 75 32 544 2 158 4 677 4 476 2 186 4 162 4 639 16 425 16 36 32 460 4 437 4 190 4 193 48 194 6 441 2 597 2 686 6 687 4 600 4 401 2 40 4 301 6 367 18 140 2 465 22 534 2 411 6 122 16 200 6 671 2 487 32 488 8 371 4 353 16 614 6 
55 2 637 2 264 2 
313 2 372 2 262 10 563 2 409 2 360 2 225 2 33 2 363 2 349 2 469 22 10 2 268 2 192 2 
356 2 269 26 615 2 515 2 517 2 516 2 184 2 434 3 3 2 91 1 4 2 187 6 361 3 522 2 523 2 437 30 6 1 440 12 439 1 95 19 445 2 197 2 532 1 533 2 449 1 101 2 17 3 450 2 283 2 285 3 20 25 205 2 209 3 453 2 211 2 108 2 635 2 545 2 112 2 376 2 458 2 643 1 217 2 550 2 551 2 646 4 386 1 221 2 42 2 44 2 121 2 120 2 648 14 554 1 125 2 126 2 556 2 558 6 472 2 561 2 128 2 132 2 54 2 134 2 236 1 478 2 135 2 400 2 323 1 64 2 326 2 579 2 577 5 407 2 327 1 582 2 244 2 408 1 672 2 490 2 673 3 147 2 674 1 416 2 155 4 675 2 157 4 596 2 79 1 423 1 163 2 426 6 257 2 501 2 258 14 259 2 600 32 341 2 601 3 504 3 169 3 505 1 603 4 260 1 261 2 507 2 508 4 348 2 510 2 351 14 697 2 512 2 700 19 612 6 
662 2 
319 2 600 2 
664 2 600 4 492 2 
153 2 591 2 595 2 292 2 375 2 316 2 234 2 663 2 35 2 274 2 641 2 380 2 136 6 137 6 214 2 240 2 242 2 322 6 485 2 119 2 583 2 281 2 267 6 289 2 431 2 290 4 633 2 207 2 
83 2 130 2 382 1 620 2 
83 2 304 2 
55 2 419 2 83 2 395 2 543 2 41 2 699 2 
83 2 543 2 628 2 
83 2 427 2 543 2 
22 2 203 2 620 2 
83 2 543 2 
22 2 94 2 
83 2 278 2 
22 2 277 2 620 2 
373 2 620 2 463 2 
300 2 620 2 622 2 
280 2 97 2 620 2 
73 2 693 2 620 2 
22 2 123 2 
83 2 250 2 
483 2 463 2 
82 2 622 2 
280 2 649 2 
73 2 354 2 
22 2 344 2 
73 2 183 2 
280 2 413 2 
668 2 622 2 
619 2 463 2 
22 2 277 2 620 2 530 2 
610 2 
22 2 107 2 620 2 
22 2 69 2 620 2 
179 2 324 2 89 2 599 2 
74 4 661 2 231 2 374 2 519 2 670 2 34 2 568 2 201 2 466 2 469 2 527 2 59 2 
312 2 620 2 
55 2 609 2 592 2 699 2 
55 2 419 2 609 2 592 2 699 2 127 2 
55 2 83 2 543 2 41 2 699 2 651 2 
233 2 347 2 
55 2 41 2 699 2 172 2 
280 2 86 2 
370 2 73 2 
317 2 463 2 
415 2 622 2 
617 2 
73 2 424 2 622 2 
73 2 109 2 622 2 
73 2 495 2 622 2 
295 2 396 6 55 2 459 2 299 6 647 2 124 2 699 2 
22 2 298 2 
205 2 
269 6 615 2 515 2 182 2 517 2 516 2 518 4 3 2 187 4 437 26 440 6 624 2 12 2 445 2 197 6 631 2 20 4 102 2 540 2 454 2 210 2 211 2 635 2 294 2 213 2 378 2 550 2 551 2 646 4 221 2 44 2 121 2 650 2 125 2 126 2 227 2 558 6 560 2 471 2 472 2 473 2 474 2 50 2 132 8 134 2 478 2 398 2 572 4 575 2 64 2 142 2 244 2 144 4 672 2 490 2 71 2 416 2 417 2 493 2 155 4 675 2 157 4 159 2 79 2 163 2 426 2 600 26 688 2 602 2 603 4 260 2 263 2 697 2 612 2 
269 6 615 2 515 2 182 2 517 2 516 2 518 4 3 2 187 6 437 26 440 6 624 2 12 2 445 2 197 6 631 2 20 4 102 2 540 2 454 2 210 2 211 2 108 2 635 2 111 2 294 2 378 2 550 2 551 2 646 4 221 2 44 2 121 2 125 2 126 2 227 2 558 6 560 2 471 2 472 2 473 2 474 2 50 2 132 8 134 2 478 2 398 2 572 4 58 2 64 2 142 2 244 2 144 4 672 2 490 2 71 2 416 2 417 2 493 2 155 4 675 2 157 4 159 2 596 2 79 2 161 2 163 2 426 2 600 26 688 2 602 2 603 4 260 2 606 2 263 2 697 2 612 2 
698 2 
345 2 232 2 
230 2 26 2 358 2 199 2 100 2 53 2 565 2 185 2 113 2 390 2 164 2 630 4 536 2 235 4 412 2 658 2 330 2 383 2 539 4 229 2 
589 2 230 2 26 2 358 2 199 2 100 2 53 2 565 2 185 2 46 2 113 2 390 2 164 2 630 4 536 2 235 4 412 2 658 2 330 2 383 2 539 4 229 2 
536 2 230 2 412 2 26 2 658 2 358 2 185 2 383 2 113 2 
536 2 230 2 412 2 26 2 658 2 358 2 185 2 383 2 113 2 
230 2 26 2 358 2 199 2 100 2 53 2 565 2 185 2 113 2 390 2 164 2 630 4 536 2 235 4 412 2 658 2 330 2 383 2 539 4 229 2 
230 2 26 2 358 2 199 2 100 2 53 2 565 2 185 2 113 2 390 2 164 2 630 4 536 2 235 4 412 2 658 2 330 2 383 2 539 4 229 2 
230 2 26 2 358 2 199 2 100 2 53 2 565 2 185 2 113 2 390 2 164 2 630 4 536 2 235 4 412 2 658 2 330 2 383 2 539 4 229 2 
230 2 26 2 358 2 199 2 100 2 53 2 565 2 185 2 113 2 390 2 164 2 630 4 536 2 235 4 412 2 658 2 330 2 383 2 539 4 229 2 
230 2 26 2 358 2 199 2 100 2 53 2 185 2 565 2 390 2 383 2 539 2 229 2 
230 2 26 2 358 2 199 2 100 2 53 2 185 2 565 2 390 2 383 2 539 2 229 2 
230 2 26 2 358 2 199 2 100 2 53 2 185 2 565 2 390 2 383 2 539 2 229 2 
230 2 26 2 358 2 199 2 100 2 53 2 185 2 565 2 390 2 383 2 539 2 229 2 
230 2 26 2 358 2 199 2 100 2 53 2 185 2 565 2 113 2 390 2 164 2 536 2 412 2 658 2 330 2 383 2 539 2 229 2 
356 2 269 8 615 2 515 2 270 2 516 2 518 4 90 2 358 2 185 2 3 2 187 6 437 24 440 6 528 2 624 2 445 2 14 2 197 6 199 2 100 2 536 2 20 3 205 2 539 2 541 2 454 2 211 2 108 2 26 2 635 2 30 2 112 2 113 2 383 2 550 4 551 2 220 2 646 4 221 2 44 2 121 2 390 2 125 2 656 3 658 2 558 6 472 2 229 2 50 2 230 2 53 2 565 2 235 2 134 2 239 2 64 2 244 2 672 2 412 2 490 2 330 2 416 2 155 4 675 2 157 4 596 2 164 2 163 2 426 3 600 24 603 4 261 2 697 2 612 3 
569 2 330 2 359 2 
569 2 330 2 359 2 
615 2 269 2 50 2 616 2 515 2 516 2 3 2 187 6 235 2 437 14 524 2 134 2 440 2 624 2 445 2 196 2 197 2 64 2 580 2 244 2 630 2 536 2 672 2 412 2 490 2 330 2 20 2 539 2 416 2 454 2 155 4 675 2 211 2 26 2 108 2 157 4 76 2 635 2 596 2 113 2 680 2 163 2 600 14 550 2 343 2 646 4 603 4 221 2 44 2 121 2 654 2 125 2 658 2 558 6 697 2 432 2 472 2 
220 2 243 2 482 2 691 2 345 2 27 2 29 2 16 2 627 2 163 2 437 2 57 2 8 2 557 2 392 2 600 4 550 2 
615 2 269 2 50 2 616 2 515 2 0 2 516 2 3 2 187 6 235 2 437 14 524 2 134 2 440 2 624 2 445 2 196 2 197 2 64 2 580 2 244 2 630 2 536 2 672 2 412 2 490 2 330 2 20 4 539 2 416 2 454 2 155 4 675 2 211 2 26 2 108 2 157 4 76 2 635 2 596 2 113 2 680 4 163 2 168 2 600 14 550 2 343 2 646 4 603 4 221 2 44 2 121 2 654 2 125 2 658 2 558 6 697 2 432 2 472 2 
615 2 269 2 50 2 616 2 515 2 516 2 3 2 187 6 235 2 437 14 524 2 134 2 440 2 624 2 445 2 196 2 197 2 64 2 580 2 244 2 630 2 536 2 672 2 412 2 490 2 330 2 20 2 539 2 416 2 454 2 155 4 675 2 211 2 26 2 108 2 157 4 76 2 635 2 596 2 113 2 680 2 163 2 600 14 550 2 343 2 646 4 603 4 221 2 44 2 121 2 654 2 125 2 658 2 558 6 697 2 432 2 472 2 
180 2 357 2 98 2 368 2 456 2 222 2 584 2 621 2 553 2 369 2 555 2 470 2 321 2 644 2 600 4 
269 2 455 2 518 2 315 2 335 3 297 1 426 3 437 2 684 2 440 2 549 2 600 2 551 2 197 2 143 2 535 2 228 2 559 2 148 2 311 4 612 3 20 3 513 2 291 2 540 6 
269 2 455 2 518 2 315 2 335 2 426 2 437 2 684 2 440 2 549 2 600 2 551 2 197 2 143 2 535 2 228 2 559 2 148 2 311 4 612 2 20 2 513 2 291 2 540 6 
269 2 455 2 518 2 315 2 335 2 426 2 437 2 684 2 440 2 549 2 600 2 551 2 197 2 143 2 535 2 228 2 559 2 148 2 311 4 612 2 20 2 513 2 291 2 540 6 
269 2 562 3 618 4 520 2 437 4 623 4 193 4 194 4 195 4 279 2 487 2 18 2 587 6 20 3 103 2 334 5 75 2 457 2 422 2 639 2 36 2 425 2 426 3 167 2 258 2 219 3 384 2 687 2 600 10 551 2 387 2 464 2 648 2 222 4 176 3 122 2 559 2 353 2 660 4 394 2 
269 2 562 2 618 4 520 2 437 4 623 4 193 4 194 4 195 4 367 2 140 2 279 2 487 2 18 2 587 6 20 2 103 2 334 4 75 2 457 2 422 2 639 2 36 2 425 2 426 2 167 2 258 2 219 2 384 2 687 2 600 10 551 2 387 2 464 2 465 2 648 2 222 4 176 2 122 2 559 2 353 2 660 4 394 2 
269 2 562 2 618 4 520 2 437 4 623 4 193 4 194 4 195 4 367 2 140 2 279 2 487 2 18 2 587 6 20 2 103 2 334 4 75 2 457 2 422 2 639 2 36 2 425 2 426 2 167 2 258 2 219 2 384 2 687 2 600 10 551 2 387 2 464 2 465 2 648 2 222 4 176 2 122 2 559 2 353 2 660 4 394 2 
269 2 334 2 562 2 75 2 457 2 520 2 36 2 426 2 437 2 193 2 194 2 219 2 258 2 600 4 687 2 551 2 387 2 465 2 648 2 279 2 176 2 487 2 559 2 20 2 587 2 394 2 
269 2 334 2 562 2 75 2 457 2 520 2 36 2 426 2 437 2 193 2 194 2 219 2 258 2 600 4 687 2 551 2 387 2 465 2 648 2 279 2 176 2 487 2 559 2 20 2 587 2 394 2 
237 2 397 2 288 2 216 2 306 2 208 2 
170 2 191 2 237 2 102 2 435 2 679 2 667 2 
51 1 52 2 293 2 337 2 253 1 188 2 255 2 437 8 215 1 276 2 600 10 366 2 96 2 403 2 484 1 121 2 224 2 175 2 67 2 608 2 308 2 48 1 309 2 310 2 104 2 352 2 
342 2 72 4 334 7 75 4 465 2 110 2 158 2 639 2 122 2 487 4 425 2 36 4 256 2 193 6 194 2 353 2 548 2 687 2 
38 4 574 2 634 2 618 2 429 1 32 2 66 2 497 2 437 1 623 2 284 2 657 2 438 7 150 2 340 2 248 2 600 1 195 2 
38 4 574 4 634 4 618 2 32 2 66 2 497 2 623 2 284 4 657 2 438 6 150 2 340 2 248 2 195 2 
38 4 574 8 634 8 618 2 429 1 32 2 66 2 497 2 437 1 623 2 284 8 657 8 438 10 150 6 340 2 248 2 600 1 195 2 
38 2 574 2 634 2 618 2 32 2 66 2 497 2 623 2 284 2 438 2 340 2 248 2 195 2 
515 4 273 1 2 2 187 32 5 2 437 34 365 2 529 2 444 4 13 2 625 2 448 2 286 4 106 2 25 2 108 4 212 1 638 2 381 2 546 4 547 2 37 2 39 2 302 14 43 2 118 2 388 2 467 2 131 2 567 5 318 4 56 1 320 2 571 2 138 2 666 1 61 2 576 2 405 4 141 4 65 2 672 6 70 4 151 2 333 2 251 2 418 2 494 2 675 6 157 16 420 2 252 2 77 2 676 2 596 4 160 2 336 2 678 1 166 2 682 1 683 2 500 2 598 4 600 38 689 2 603 18 428 2 605 2 692 2 84 2 607 2 85 4 430 2 87 2 266 2 695 2 696 2 611 2 
181 2 515 2 564 2 521 2 187 24 318 2 133 2 437 28 525 4 93 4 238 2 526 2 9 2 320 2 665 2 138 2 442 2 443 2 481 2 666 2 60 2 13 2 62 2 61 2 581 2 405 2 15 2 65 2 672 2 282 2 19 2 286 20 331 2 452 2 675 2 420 2 157 12 594 4 165 2 166 2 546 2 642 2 37 2 600 28 645 2 603 12 428 2 171 2 605 2 302 2 118 2 303 2 388 2 173 2 307 2 653 2 47 2 468 2 511 2 
515 2 272 2 566 2 5 2 187 40 567 6 436 6 318 4 477 8 437 40 92 2 275 2 571 2 320 2 138 2 444 2 13 2 669 6 576 2 405 4 141 6 448 2 672 4 489 2 282 2 286 14 70 6 21 2 149 2 588 2 249 2 151 2 251 4 106 2 418 2 675 4 252 2 108 6 420 2 157 18 77 2 78 8 596 6 160 2 336 2 212 2 638 2 640 2 166 2 381 2 546 4 683 4 461 6 499 2 500 2 81 2 37 2 598 6 600 44 689 2 603 20 428 2 604 8 302 10 84 2 607 2 388 2 85 4 346 2 389 2 430 2 266 2 87 2 696 2 467 2 177 2 659 2 611 2 
515 2 1 2 2 2 187 38 567 2 318 6 437 26 56 2 399 2 480 2 365 6 320 2 571 2 138 2 529 10 666 2 625 4 13 2 61 4 63 2 405 6 141 2 99 2 448 2 65 4 486 2 672 2 282 2 68 4 286 14 247 2 494 2 25 10 675 2 108 10 420 2 157 14 252 2 676 4 596 10 678 2 212 6 296 2 114 2 166 2 682 2 546 6 683 2 80 4 338 2 37 2 600 28 39 4 603 14 428 2 605 4 302 8 388 2 85 2 552 2 695 2 611 2 
655 2 

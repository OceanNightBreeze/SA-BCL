#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 619 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 47 610 
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 47 610 85 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 81 81 244 244 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 48 256 (202,597) (202,597) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 48 256 (202,597) (202,597) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 48 256 (202,597) (202,597) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 48 256 (202,597) (202,597) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 577 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 577 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 577 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 67 465 287 148 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 417 69 248 384 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 417 69 248 384 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 417 69 248 384 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 417 69 248 384 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:eltsEqual([II)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_57()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_61()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaCharStream:getEndLine()I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:FillBuff()V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2678 | return null
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_116()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:union([I[I)[I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3R_120()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:subsetOf([B[I)Z | CONDITION | 29819 | if (x) -> if (!x)
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
daikon.Debug:logOn()Z
daikon.Quant:gt(II)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 43181 | if (x) -> if (!x)
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3R_123()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:split(I)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
utilMDE.Assert:assertTrue(Z)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53476 | = null
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3_5()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:getConfidence()D
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3R_88()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.MathMDE:pow_fast(II)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ProglangType:isArray()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_89()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:jj_3R_117()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaCharStream:getEndColumn()I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:eq(II)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_133()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:hashCode()I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:noDups([I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String; | RETURN | 105067 | return null
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:isReverse([I[I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:setDiff([I[I)[I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern:numIntArrays()I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3R_63()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3_10()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_62()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:relate_var()V
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ProglangType:isScalar()Z
daikon.PptName:isEnterPoint()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_161()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaCharStream:backup(I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2146 | = null
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_samples()I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_2_3(I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3_13()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.Invariant:logOn()Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParserTokenManager:jjCheckNAddStates(II)V
jtb.JavaParserTokenManager:jjCheckNAddTwoStates(II)V
daikon.Quant:gte(II)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator; | RETURN | 101933 | return null
daikon.test.FormatTestCase:passes()Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 12352 | stmt -> ;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:new_ppt()V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.MathMDE:gcd([I)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_76()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isPseudoArray()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_53()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:hashCode()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:BeginToken()C
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexGT([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z
daikon.ProglangType:isIntegral()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Ppt:Ppt()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:toString()Ljava.lang.String; | ASSIGN | 3056 | = null
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE:element_range([I)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_97()Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_3R_68()Z
daikon.ProglangType:isFloat()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptSlice1:arity()I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:concat([I[I)[I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I | CONSTANT | 860 | 0 -> -1
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_3()Z
daikon.inv.Invariants:Invariants()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_69()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ProglangType:baseIsFloat()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3R_50()Z
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.PptSlice0:arity()I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_3R_54()Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Invariant:justified()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_55()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_4()Z
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_148()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_2_10(I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3_15()Z
daikon.Quant:slice([III)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
133 2 16 4 203 2 35 2 385 2 157 2 4 2 60 2 137 2 
268 2 386 6 589 2 250 2 22 2 643 2 225 2 52 6 403 2 339 6 422 2 
133 2 35 2 543 2 484 4 720 2 652 6 321 6 692 6 223 2 655 4 309 2 126 2 327 6 
688 10 156 26 459 4 72 6 382 4 75 8 536 10 565 10 107 8 622 10 644 8 35 6 366 2 289 4 670 2 130 8 294 2 214 16 648 2 192 10 133 6 752 2 270 29 343 16 555 12 556 2 18 6 426 16 633 2 758 4 
230 6 218 4 
350 2 
688 2 156 4 72 2 44 2 565 2 536 2 5 2 622 4 645 2 667 2 130 2 214 2 192 2 319 2 270 6 399 2 343 2 555 2 320 2 426 2 634 2 197 2 758 2 
688 4 689 4 80 6 289 2 156 12 391 2 547 6 214 8 572 4 192 4 536 4 565 4 270 14 343 8 555 5 387 2 426 8 
71 2 481 62 612 8 278 6 324 2 380 4 24 2 762 2 717 14 736 2 508 4 639 4 588 10 328 2 462 4 104 2 590 2 144 2 208 2 593 2 594 2 492 2 182 2 335 2 127 4 187 4 54 10 419 4 445 4 705 4 38 4 62 2 168 4 651 2 733 2 429 2 712 4 780 2 375 2 580 4 
350 2 49 2 463 2 440 2 389 2 336 2 727 2 395 2 344 2 217 2 
619 2 
688 4 457 2 35 4 156 4 130 2 192 4 133 4 536 4 565 4 650 4 270 5 89 8 555 4 760 4 467 2 
651 2 612 2 278 2 
582 2 306 2 562 2 13 2 701 2 506 22 658 2 152 10 433 2 678 2 28 2 330 2 301 2 591 2 
480 2 378 2 486 2 176 2 102 2 489 1 282 3 7 2 177 4 178 2 105 2 695 2 283 2 183 2 595 1 185 2 596 2 109 2 189 28 290 1 702 3 292 2 293 2 296 4 707 3 710 2 501 2 502 2 118 1 505 14 25 1 311 1 123 3 312 2 618 2 206 1 124 2 209 2 513 21 514 2 409 27 125 2 620 3 415 1 35 32 417 2 213 3 626 4 215 2 729 2 133 30 627 2 425 2 136 4 428 3 220 2 137 2 529 2 139 21 41 2 227 2 229 2 640 2 538 2 232 2 51 1 542 3 149 2 236 1 59 1 544 2 548 2 748 4 340 6 64 2 155 1 554 5 241 1 347 2 68 2 452 2 453 1 561 14 73 3 563 2 763 2 247 14 252 2 664 2 767 6 468 2 769 2 567 2 569 1 365 2 258 2 164 2 165 2 167 2 260 2 571 6 368 2 263 2 371 2 676 2 372 14 681 2 575 1 683 6 778 2 172 2 686 2 478 3 173 2 376 2 
87 2 
35 2 237 2 
35 4 27 2 286 2 
99 4 0 4 690 4 691 4 693 16 584 10 101 4 381 4 383 38 694 4 279 4 592 4 180 4 491 30 10 14 696 120 108 46 11 4 699 4 110 6 12 28 598 4 14 4 499 4 703 8 112 2 704 4 599 4 114 4 601 4 397 2 398 2 605 4 302 2 117 38 711 2 19 2 402 20 404 8 714 2 715 4 23 2 716 2 201 2 310 26 507 38 29 2 407 2 30 38 511 2 205 4 207 2 515 38 32 4 33 2 413 2 723 2 725 38 520 4 211 2 212 2 726 2 625 2 728 4 132 16 423 10 732 2 628 4 629 2 525 2 138 38 221 4 530 2 430 4 222 2 323 2 734 4 531 28 637 4 42 2 224 2 228 2 434 2 329 2 435 2 332 4 741 4 146 2 743 2 235 2 439 4 539 36 53 2 646 10 55 4 58 6 448 2 150 4 747 2 552 38 154 38 66 2 751 4 449 4 345 2 346 2 756 2 451 4 759 2 458 2 657 132 355 2 354 2 357 16 356 20 159 2 358 4 160 2 461 2 359 2 661 4 251 4 253 2 163 24 771 118 255 10 257 4 669 18 469 8 470 24 166 2 570 4 671 2 672 2 262 4 773 2 472 8 473 16 82 2 370 4 265 38 675 118 86 2 775 2 679 24 267 2 680 2 573 20 269 4 88 4 682 2 476 4 92 38 93 2 576 14 685 2 95 4 779 14 374 4 96 2 275 12 579 10 
195 2 272 2 757 1 20 2 
272 2 322 2 
94 2 
483 2 195 2 
341 2 6 2 36 2 612 2 459 2 272 2 632 2 
36 2 272 2 446 2 
186 2 36 2 272 2 
304 2 3 2 195 2 
36 2 272 2 
3 2 8 2 
272 2 735 2 
3 2 195 2 498 2 
753 2 195 2 436 2 
103 2 195 2 91 2 
641 2 195 2 318 2 
666 2 195 2 755 2 
3 2 193 2 
272 2 113 2 
436 2 560 2 
103 2 438 2 
641 2 84 2 
666 2 106 2 
3 2 613 2 
666 2 522 2 
738 2 641 2 
103 2 249 2 
436 2 388 2 
3 2 195 2 498 2 466 2 
3 2 195 2 498 2 307 2 466 2 
528 2 3 2 195 2 
3 2 195 2 400 2 
369 2 537 2 342 2 630 2 
47 2 610 2 
47 2 610 2 85 2 
314 2 36 2 612 2 459 2 272 2 632 2 
299 2 521 2 
776 2 612 2 459 2 632 2 
641 2 600 2 
666 2 308 2 
436 2 277 2 
103 2 303 2 
666 2 103 2 373 2 
666 2 103 2 684 2 
666 2 103 2 557 2 
666 2 103 2 674 2 
612 2 719 2 254 2 367 2 190 6 731 2 349 6 632 2 
3 2 527 2 
769 2 
479 4 480 2 378 6 176 2 102 2 489 2 7 2 177 4 179 2 695 2 283 2 494 2 698 2 185 8 189 6 292 2 293 2 296 4 604 2 710 2 115 2 607 2 609 2 503 2 21 2 614 2 206 2 124 2 409 4 35 26 313 2 417 2 626 4 421 2 215 2 133 26 137 2 636 2 535 2 642 2 441 2 540 4 149 2 544 2 548 2 61 2 340 4 748 4 64 2 750 2 654 2 559 2 455 2 561 6 244 2 158 2 563 2 246 2 74 2 767 2 665 2 567 2 81 2 365 2 165 2 167 2 571 6 83 2 681 2 477 4 683 2 686 2 173 2 376 2 
479 4 480 2 378 6 176 2 102 2 489 2 490 2 7 2 177 4 695 2 283 2 494 2 698 2 185 8 188 2 189 6 292 2 293 2 296 4 604 2 710 2 115 2 607 2 609 2 503 2 21 2 614 2 206 2 124 2 409 4 35 26 313 2 417 2 418 2 626 4 421 2 215 2 133 26 425 1 137 2 636 2 229 1 535 2 642 2 441 2 540 4 149 2 544 2 548 2 61 2 340 5 748 4 64 2 750 2 654 2 559 2 455 2 561 6 245 2 158 2 563 2 246 2 74 2 767 2 665 2 567 2 365 2 165 2 167 2 571 6 83 2 681 2 477 4 683 2 686 2 173 2 376 2 
408 2 
770 2 768 2 
256 2 597 2 352 2 202 2 316 2 240 2 422 2 339 2 266 2 90 2 777 2 643 2 662 2 52 2 242 2 98 4 285 2 390 4 
1 4 175 4 485 2 638 2 176 2 379 2 225 2 46 2 534 6 48 2 386 6 281 2 740 2 643 4 177 2 52 6 695 2 284 2 285 2 390 4 541 4 597 2 548 2 550 4 295 2 396 2 240 2 339 4 298 2 242 2 243 2 352 4 563 2 202 2 616 4 204 2 250 2 464 2 566 2 662 2 256 2 35 12 624 2 668 2 571 4 626 2 316 2 215 2 422 4 266 2 133 6 681 2 475 2 90 2 777 2 135 2 271 2 98 4 781 2 376 2 
1 4 175 4 485 2 638 2 176 2 379 2 225 2 46 2 534 6 48 2 386 6 281 2 740 2 643 4 177 2 52 4 695 2 284 2 285 2 390 4 541 4 597 2 548 2 550 4 295 2 396 2 240 2 339 6 298 2 242 2 243 2 352 4 22 2 563 2 202 2 616 4 204 2 464 2 566 2 662 2 256 2 35 12 624 2 668 2 571 4 626 2 316 2 215 2 422 4 266 2 133 6 681 2 475 2 90 2 777 2 135 2 271 2 98 4 781 2 376 2 
1 8 175 4 485 2 638 2 176 2 379 2 225 2 46 2 534 6 48 2 386 6 281 2 740 2 643 4 177 2 52 6 695 2 284 2 285 2 390 4 541 4 597 2 548 2 550 4 295 2 396 2 240 2 339 6 298 2 242 2 243 2 352 4 563 2 202 2 616 4 204 2 464 2 566 2 662 2 256 2 35 12 624 2 668 2 571 4 626 2 316 2 215 2 422 4 266 2 133 6 268 2 681 2 475 2 90 2 777 2 135 2 271 2 98 4 781 2 376 2 
1 8 175 4 485 2 638 2 176 2 379 2 225 2 46 2 534 10 48 2 386 8 281 2 740 2 643 4 177 2 52 6 695 2 284 2 285 2 390 4 541 8 597 2 548 2 550 4 295 2 396 2 240 2 339 8 298 2 242 2 243 2 352 4 22 2 563 2 202 2 616 4 204 2 464 2 566 2 662 2 256 2 35 12 624 2 668 2 571 4 626 2 316 2 215 2 422 4 266 2 133 6 268 2 681 2 475 2 90 2 777 2 135 2 271 2 98 4 781 2 376 2 
1 8 175 4 485 2 638 2 176 2 379 2 225 2 46 2 534 10 48 2 386 6 281 2 740 2 643 4 177 2 52 6 695 2 284 2 285 2 390 4 541 8 597 2 548 2 550 4 295 2 396 2 240 2 339 6 298 2 242 2 243 2 352 4 563 2 202 2 616 4 204 2 464 2 566 2 662 2 256 2 35 12 624 2 668 2 571 4 626 2 316 2 215 2 422 4 266 2 133 6 268 2 681 2 475 2 90 2 777 2 135 2 271 2 98 4 781 2 376 2 
48 2 1 2 256 2 475 2 597 2 464 2 740 2 662 2 202 2 284 2 396 2 285 2 
48 2 1 2 256 2 475 2 597 2 464 2 740 2 662 2 202 2 284 2 396 2 285 2 
48 2 1 2 256 2 475 2 597 2 464 2 740 2 662 2 202 2 284 2 396 2 285 2 
48 2 1 2 256 2 475 2 597 2 464 2 740 2 662 2 202 2 284 2 396 2 285 2 
1 6 175 2 485 2 638 2 379 2 225 2 616 2 202 2 534 4 48 2 386 4 281 2 464 2 740 2 643 4 662 2 52 6 284 2 285 2 390 2 256 2 35 4 541 4 597 2 668 2 550 2 396 2 316 2 422 4 339 6 298 2 268 2 475 2 777 2 98 2 
480 2 1 6 175 2 378 6 100 2 485 2 176 2 486 2 379 2 102 4 386 4 281 2 7 2 177 4 695 2 283 2 284 2 285 2 390 2 597 2 189 8 292 2 293 2 296 4 396 2 298 2 710 2 607 2 616 2 202 2 209 2 409 3 414 2 35 28 417 2 626 4 316 2 215 2 422 4 133 24 425 2 135 2 137 2 638 2 140 2 225 2 532 2 229 2 432 2 534 2 48 2 643 4 740 2 52 6 548 2 550 2 339 6 748 4 340 6 64 2 347 2 561 6 460 3 563 2 74 2 464 2 662 2 361 2 767 3 769 2 567 2 256 2 668 2 365 2 165 2 167 2 571 6 83 2 268 2 681 2 475 2 169 2 777 2 477 4 683 3 686 2 98 2 173 2 376 2 
1 8 175 4 485 2 638 2 176 2 379 2 225 2 46 2 534 10 48 2 386 6 281 2 740 2 643 4 177 2 52 6 695 2 284 2 285 2 390 4 541 8 597 2 548 2 550 4 295 2 396 2 240 2 339 6 298 2 242 2 243 2 352 4 563 2 202 2 616 4 204 2 464 2 566 2 662 2 256 2 35 12 624 2 668 2 571 4 626 2 316 2 215 2 422 4 266 2 133 6 268 2 681 2 475 2 90 2 777 2 135 2 271 2 98 4 781 2 376 2 
1 8 175 4 482 2 485 2 638 2 176 2 225 2 46 2 534 10 48 2 386 8 281 2 177 2 740 2 643 4 52 8 695 2 742 2 284 2 285 2 390 4 541 8 597 2 548 2 550 4 295 2 396 2 240 2 339 6 298 2 242 2 608 4 243 2 352 4 563 2 202 2 616 4 250 2 464 2 566 2 662 2 256 2 35 12 624 2 668 2 571 4 626 2 316 2 215 2 422 4 266 2 133 6 268 2 681 2 475 2 90 2 777 2 135 2 271 2 98 4 781 2 376 2 
298 2 739 2 638 2 
298 2 739 2 638 2 
581 2 480 2 1 6 175 4 378 2 485 2 176 2 487 2 102 4 386 16 7 2 281 2 177 4 695 2 283 2 494 4 390 2 185 4 700 2 189 2 392 2 292 2 293 2 296 4 297 2 603 2 298 4 710 2 401 2 713 2 607 4 199 2 305 2 405 2 22 4 504 2 616 4 121 2 124 4 721 2 409 2 411 2 724 2 35 24 624 2 417 2 626 4 316 2 215 2 422 4 133 16 425 2 134 2 137 2 638 4 225 4 46 2 432 2 229 2 534 6 739 2 643 4 52 12 541 4 149 4 337 2 647 2 544 4 548 2 550 2 340 6 748 4 64 2 339 12 750 2 454 2 243 2 561 2 352 4 563 2 74 2 660 2 250 4 360 2 566 2 662 4 362 2 567 2 365 2 165 2 571 6 83 2 266 2 268 4 681 2 90 2 777 2 170 2 686 2 577 2 173 2 98 2 781 4 376 2 
581 2 35 4 700 2 405 2 504 2 394 2 102 2 432 2 240 2 649 2 133 2 681 2 50 2 653 2 145 2 768 2 199 2 
581 2 480 2 1 6 175 4 378 2 485 2 176 2 102 2 386 16 7 2 281 2 177 4 695 2 283 2 494 4 390 2 185 4 189 2 392 2 292 2 293 2 296 4 297 2 603 2 298 4 500 2 710 2 401 4 713 2 607 4 199 2 305 2 405 2 22 4 504 2 616 4 121 2 124 4 409 4 411 2 724 2 35 24 624 2 417 2 626 4 316 2 215 2 422 4 133 16 425 2 134 2 524 2 137 2 635 2 638 4 225 4 46 2 229 2 534 6 739 2 643 4 52 12 541 4 149 4 337 2 544 4 548 2 550 2 340 6 748 4 64 2 339 12 750 2 348 2 454 2 243 4 561 2 352 4 563 2 74 2 660 2 250 4 360 2 566 2 662 4 362 2 567 2 364 2 365 2 165 2 571 6 83 2 266 2 268 4 681 2 90 2 777 2 271 2 686 2 577 2 173 2 98 2 781 4 376 2 
581 2 480 2 1 6 175 4 378 2 485 2 176 2 102 4 280 2 386 16 7 2 281 2 177 4 695 2 283 2 494 4 390 2 185 4 288 2 700 2 189 2 392 2 292 2 293 2 296 4 297 2 603 2 298 4 710 2 401 2 713 2 607 4 199 2 305 2 405 2 22 4 504 2 616 4 121 2 124 4 409 2 411 2 724 2 35 24 624 2 417 2 626 4 316 2 215 2 422 4 133 16 425 2 134 2 137 2 638 4 225 4 46 2 432 2 229 2 534 6 739 2 643 4 52 12 541 4 149 4 337 2 544 4 548 2 550 2 239 2 749 2 340 6 748 4 64 2 339 12 750 2 454 2 243 4 561 2 352 4 563 2 74 2 660 2 250 4 360 2 765 2 566 2 662 4 362 2 567 2 365 2 165 2 571 6 83 2 266 2 268 4 681 2 90 2 777 2 271 2 686 2 577 2 173 2 98 2 781 4 376 2 
688 2 480 2 276 2 583 2 2 2 378 8 176 2 585 2 102 2 177 4 695 2 283 2 493 2 697 2 185 8 287 2 495 2 496 2 189 12 291 8 293 2 706 2 296 2 602 2 192 2 604 4 300 2 194 2 710 2 196 2 503 4 607 2 120 2 122 2 512 2 409 4 210 4 412 2 128 2 621 2 34 2 518 2 35 28 416 2 417 2 130 2 626 4 214 2 317 2 215 2 216 6 133 22 730 2 424 2 425 2 426 2 427 2 219 2 137 2 45 2 229 2 536 2 331 2 233 2 147 2 148 2 57 1 545 2 547 4 546 2 338 2 745 2 548 2 447 2 151 2 748 2 340 4 64 2 553 2 343 2 754 8 555 2 67 2 450 2 558 2 656 2 455 4 561 8 351 2 156 4 761 2 353 2 563 2 564 2 74 2 659 2 565 2 465 2 161 4 767 4 77 2 162 2 363 2 78 2 79 2 365 2 165 2 167 2 259 2 571 6 673 2 774 2 572 2 677 2 270 6 681 2 574 2 477 6 683 4 171 2 686 2 274 2 97 2 174 2 376 2 687 2 783 2 
561 2 378 2 325 2 141 2 587 3 409 3 663 2 767 3 744 2 442 2 35 2 519 2 189 2 167 2 746 2 15 4 63 2 153 2 133 2 604 6 17 2 683 3 477 2 526 2 
561 2 378 2 325 2 141 2 587 2 409 2 663 2 767 2 744 2 442 2 35 2 519 2 189 2 167 2 746 2 15 4 63 2 153 2 133 2 604 6 17 2 683 2 477 2 526 2 
561 2 378 2 325 2 141 2 587 2 409 2 663 2 767 2 744 2 442 2 35 2 519 2 189 2 167 2 746 2 15 4 63 2 153 2 133 2 604 6 17 2 683 2 477 2 526 2 
39 3 688 2 533 4 536 2 737 2 231 4 181 2 644 4 444 2 189 2 746 2 549 6 551 4 238 3 191 4 192 2 343 2 18 2 606 3 198 2 456 2 156 4 247 2 565 2 409 3 766 2 410 2 767 3 516 2 517 2 35 10 623 4 37 2 167 2 214 2 133 4 372 2 270 6 426 2 631 2 
456 2 688 2 39 2 156 4 533 4 247 2 565 2 536 2 737 2 231 4 409 2 766 2 410 2 767 2 181 2 516 2 517 2 623 4 644 4 35 10 444 2 37 2 189 2 167 2 130 2 746 2 549 6 551 4 191 4 238 2 214 2 192 2 648 2 133 4 270 4 372 2 343 2 555 2 18 2 426 2 606 2 631 2 198 2 
456 2 688 2 39 2 156 4 533 4 247 2 565 2 536 2 737 2 231 4 409 2 766 2 410 2 767 2 181 2 516 2 517 2 623 4 644 4 35 10 444 2 37 2 189 2 167 2 130 2 746 2 549 6 551 4 191 4 238 2 214 2 192 2 648 2 133 4 270 4 372 2 343 2 555 2 18 2 426 2 606 2 631 2 198 2 
456 2 688 2 39 2 156 4 533 4 247 2 565 2 536 2 737 2 231 4 409 2 766 2 410 2 767 2 181 2 516 2 517 2 623 4 644 4 35 10 444 2 37 2 189 2 167 2 130 2 746 2 549 6 551 4 191 4 238 2 214 2 192 2 648 2 133 4 270 4 372 2 343 2 555 2 18 2 426 2 606 2 631 2 198 2 
456 2 688 2 39 2 156 4 533 4 247 2 565 2 536 2 737 2 231 4 409 2 766 2 410 2 767 2 181 2 516 2 517 2 623 4 644 4 35 10 444 2 37 2 189 2 167 2 130 4 746 2 549 6 551 4 191 4 238 2 214 2 192 2 648 4 133 4 270 4 372 2 343 2 555 4 18 2 426 2 606 2 631 2 198 2 
772 2 424 2 420 2 264 2 488 2 782 2 
142 2 70 2 40 2 131 2 615 2 455 2 782 2 
200 2 377 2 611 2 431 2 43 1 406 2 328 1 31 1 208 1 437 2 234 2 695 2 9 2 184 1 35 10 568 2 56 2 129 2 111 2 393 2 261 2 315 2 133 8 65 2 709 2 116 2 
688 6 457 1 156 10 226 2 26 2 718 2 536 6 565 6 143 2 331 2 334 2 518 2 35 6 644 4 130 3 547 4 774 2 214 4 572 2 192 6 648 2 133 6 650 2 708 2 270 13 343 4 89 2 555 5 426 4 18 2 760 2 
35 1 623 2 497 2 471 2 326 2 586 2 551 2 133 1 764 2 509 4 510 2 617 2 523 7 231 2 333 1 119 2 273 2 76 2 
623 2 497 2 471 2 326 2 586 2 551 2 764 2 509 4 510 4 617 4 523 6 231 2 119 2 273 2 76 4 
35 1 623 2 497 2 471 2 326 2 586 2 551 2 133 1 764 2 509 4 510 8 617 8 523 10 231 2 333 1 119 8 273 6 76 8 
623 2 497 2 471 2 326 2 586 2 551 2 764 2 509 2 510 2 617 2 523 2 231 2 76 2 
384 2 69 2 248 2 722 2 35 2 417 2 474 1 133 2 578 1 
133 2 384 2 35 2 417 2 722 2 69 2 248 2 
133 2 384 2 35 2 417 2 722 2 69 2 248 2 
133 2 384 2 35 2 417 2 722 2 69 2 248 2 
443 2 

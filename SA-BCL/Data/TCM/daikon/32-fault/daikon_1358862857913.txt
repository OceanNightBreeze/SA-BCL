#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR utilMDE.Assert$AssertionException (50,316) (50,316) 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.NullPointerException 290 (15,423) 225 (192,193,230,235,239,256,266) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 290 (15,423) 225 (192,193,230,235,239,256,266) 373 
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 448 49 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 27 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 215 182 176 319 143 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NoClassDefFoundError (25,216) (25,216) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 75 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 75 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 75 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 75 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 75 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 414 198 55 214 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V ERROR java.lang.NullPointerException 142 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 150 454 22 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NoClassDefFoundError (259,306) (259,306) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NoClassDefFoundError (259,306) (259,306) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NoClassDefFoundError (259,306) (259,306) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.NoClassDefFoundError (259,306) (259,306) 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 5 8 246 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 5 8 246 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:eq(FF)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:eltsGteIndex([I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eq(JJ)Z
daikon.Quant:lexGTE([I[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:slice([III)[I
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[D)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eq(II)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:min([I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:memberOf(S[S)Z
daikon.Quant:memberOf(F[F)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 128699 | < -> <=
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C | CONSTANT | 4375 | 0 -> 1
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGTE([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 20834 | = null
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern:intern([I)[I
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51514 | 3 -> 0
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern:intern([J)[J
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 2840 | = null
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltsEqual([II)Z | OPERATOR | 161601 | < -> >
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:noDups([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:gt(II)Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:eltsGT([II)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:eq(DD)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:concat([I[I)[I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41894 | return null
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:memberOf(J[J)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:lte(II)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaCharStream:readChar()C
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:hashCode()I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 17522 | if (x) -> if (!x)
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1211 | = null
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
50 2 441 2 68 2 316 2 393 2 166 2 420 2 401 4 270 2 
416 2 209 2 247 2 17 2 108 2 130 6 430 2 424 6 74 2 425 6 100 2 
50 2 78 2 56 6 189 2 159 2 197 2 277 2 44 6 316 2 168 6 238 2 282 4 134 6 186 2 
187 10 1 10 92 10 357 16 96 2 230 6 193 6 331 10 195 2 276 4 423 16 363 4 105 8 397 2 204 2 50 6 240 13 15 10 109 4 241 8 139 2 179 8 290 26 295 2 316 6 88 8 225 16 299 4 36 29 121 2 
258 6 226 4 
361 2 
124 2 302 2 250 2 69 4 72 2 73 4 260 2 9 2 262 2 11 2 372 2 310 2 211 4 429 2 433 2 82 2 376 2 83 2 315 2 316 4 221 2 318 2 94 2 272 2 324 2 274 2 99 2 389 2 158 2 333 2 166 2 395 4 397 2 285 2 50 4 339 2 447 2 51 2 178 2 345 2 245 2 119 2 458 2 185 2 
187 4 1 4 92 4 357 10 231 2 192 4 388 2 235 2 256 4 423 10 170 2 50 4 239 8 15 4 240 6 18 6 179 4 290 14 266 2 316 4 225 10 380 6 36 14 
447 2 456 2 435 2 
382 22 54 2 40 2 4 2 19 2 453 2 375 2 443 2 315 2 237 2 48 2 224 2 145 2 37 10 
187 2 1 2 92 2 93 2 357 2 98 2 193 2 331 4 199 2 423 2 363 2 165 2 202 2 15 2 240 2 179 2 290 4 218 2 59 2 30 2 225 2 36 6 120 2 
187 2 1 2 240 2 15 2 210 2 92 2 373 2 357 6 109 2 231 2 192 4 290 8 235 2 423 6 225 6 380 6 36 8 
66 2 137 2 90 2 173 2 113 2 
448 2 329 2 232 2 361 2 234 2 404 2 455 2 222 2 351 2 49 2 117 2 
27 2 
316 2 32 2 
422 2 52 2 316 4 
107 2 
38 2 10 2 300 2 14 2 148 2 418 8 176 2 228 2 136 2 212 2 451 2 215 2 126 2 442 8 182 2 143 2 305 8 29 2 317 2 319 2 87 2 337 2 
162 1 84 2 411 2 254 2 
417 2 84 2 
362 2 447 2 84 2 436 2 286 2 276 2 194 2 
362 2 255 2 84 2 
362 2 84 2 347 2 
411 2 438 2 338 2 
362 2 84 2 
275 2 
12 2 84 2 
411 2 438 2 291 2 
0 2 411 2 365 2 
383 2 411 2 346 2 
426 2 411 2 353 2 
410 2 411 2 147 2 
343 2 438 2 
84 2 58 2 
0 2 452 2 
402 2 346 2 
426 2 115 2 
13 2 410 2 
385 2 438 2 
26 2 410 2 
399 2 426 2 
312 2 346 2 
0 2 405 2 
206 2 411 2 438 2 291 2 
206 2 449 2 411 2 438 2 291 2 
368 2 411 2 438 2 
227 2 411 2 438 2 
386 2 391 2 172 2 321 2 
447 2 279 2 392 2 436 2 
447 2 406 2 279 2 392 2 436 2 286 2 
362 2 447 2 43 2 84 2 436 2 276 2 
287 2 376 2 
447 2 63 2 436 2 276 2 
426 2 350 2 
181 2 410 2 
0 2 326 2 
191 2 346 2 
64 2 
410 2 184 2 346 2 
410 2 346 2 360 2 
410 2 61 2 346 2 
25 2 216 2 
438 2 244 2 
382 6 400 2 273 2 323 2 431 2 79 2 57 4 217 2 127 2 128 2 268 2 7 2 60 2 278 2 335 2 183 2 35 2 352 4 
390 2 411 2 
269 2 
75 2 
75 2 
129 2 374 2 378 2 
129 2 374 2 378 2 
75 2 
75 2 
75 2 
196 2 355 2 198 2 97 2 55 2 366 2 118 2 214 2 414 2 
369 2 16 2 249 2 46 2 62 2 140 2 
369 2 371 2 142 2 450 2 412 2 396 2 294 2 
50 2 454 2 2 2 150 2 316 2 152 2 102 2 445 2 22 2 
259 2 306 2 
259 2 306 2 
259 2 306 2 
259 2 306 2 
354 2 122 7 356 8 358 4 125 2 251 2 5 2 252 2 359 2 257 1 131 2 364 2 132 2 8 2 133 4 135 2 261 2 370 8 264 2 21 6 23 2 24 2 28 2 31 6 33 2 379 2 34 2 381 2 146 6 271 4 384 2 151 2 39 4 153 2 387 2 156 2 155 2 160 2 42 2 163 2 280 4 281 5 169 7 283 8 171 4 50 42 289 2 180 2 403 2 409 16 296 2 297 2 413 7 298 2 415 2 188 2 301 2 190 2 421 1 70 2 203 2 307 2 207 2 427 14 309 3 311 10 213 2 81 4 220 38 313 4 219 2 314 1 434 7 316 46 320 2 91 4 327 2 328 2 229 2 330 6 439 2 332 20 101 2 104 2 446 22 341 7 342 2 243 2 344 2 348 2 114 2 349 2 246 2 116 5 457 2 
122 2 123 6 248 2 3 4 358 2 421 8 5 2 253 2 6 4 201 2 364 2 8 2 133 6 308 2 427 10 208 2 309 2 311 8 138 2 81 6 220 36 313 2 267 4 314 8 28 4 316 28 144 2 89 2 381 2 320 2 271 6 91 6 95 2 325 4 155 2 157 4 330 2 332 14 440 2 394 2 167 2 281 2 171 2 50 26 289 2 446 14 242 4 344 2 292 10 111 2 293 2 114 2 349 2 246 2 296 2 409 14 408 4 457 2 297 2 116 2 298 2 
122 4 123 4 3 2 251 2 358 4 252 2 5 2 253 2 359 2 6 2 132 2 131 2 8 2 133 4 261 2 135 2 264 2 21 6 24 2 267 2 28 2 31 4 144 2 379 2 34 4 381 2 146 4 271 4 151 2 39 2 153 2 154 2 155 2 157 2 163 2 281 6 167 2 171 2 50 34 289 2 292 2 403 2 409 4 296 2 408 2 297 2 301 2 188 2 421 6 70 2 200 2 201 2 203 2 308 2 427 16 208 2 309 4 76 2 311 14 81 4 220 33 313 2 219 2 314 5 316 38 223 2 89 2 320 2 91 4 327 2 325 2 229 2 328 2 439 2 330 4 332 16 104 2 446 18 341 1 242 2 342 2 243 2 344 2 110 2 348 2 114 2 349 2 246 2 116 6 457 2 
354 2 122 2 65 2 67 2 123 6 248 2 419 2 3 2 358 2 421 3 5 2 71 2 303 2 304 2 6 2 364 2 8 2 205 2 135 1 367 2 263 2 428 2 309 2 265 2 77 2 311 6 432 2 20 2 81 4 313 3 220 45 267 2 434 2 314 3 141 2 316 46 377 2 85 4 86 6 320 2 271 4 91 4 322 2 437 2 149 2 95 2 155 2 41 2 157 2 330 2 233 2 332 20 440 2 160 2 161 2 236 2 45 2 444 2 164 2 334 2 103 4 47 2 336 2 281 2 169 2 171 2 284 4 174 2 398 2 106 2 175 2 50 44 288 4 289 2 446 20 340 2 53 2 242 2 177 2 344 2 112 2 349 2 407 2 246 2 296 2 408 2 409 37 116 2 297 2 457 2 413 2 298 2 
80 2 
